"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"7.4.2.4  . Wi"	"7.4.2.4"	"C-1-9"	"7.4.2.4/C-1-9"	"07040204.670109"	"""C-1-9] MUST keep Passpoint configurations persistent across reboots."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-0-15"	"9.1/C-0-15"	"09010000.670015"	"""C-0-15] MUST not define roles that are duplicates or superset functionality of roles defined by the platform. If devices report android.software.managed_users, they:"""	""	""	"android.software.managed"	""	""	""	""	"[('com.android.cts.webkit.WebViewHostSideMultipleProfileTest', 1), ('android.inputmethodservice.cts.hostside.MultiUserTest', 1), ('android.host.accounts.BaseMultiUserTest', 1), ('android.content.cts.ContextCrossProfileHostTest', 1), ('android.appsecurity.cts.ResumeOnRebootHostTest', 1), ('android.media.session.cts.MediaSessionManagerHostTest', 1), ('com.android.cts.devicepolicy.CrossProfileAppsHostSideTest', 1), ('android.content.pm.cts.shortcuthost.BaseShortcutManagerHostTest', 1), ('main.java.com.android.bedstead.harrier.DeviceState', 1), ('com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule', 1)]"	"[('getDevice', 7), ('setUp', 4), ('waitForBroadcastIdle', 2), ('getMaxNumberOfUsersSupported', 1), ('getCurrentUser', 1), ('getPrimaryUserId', 1), ('resumeOnReboot_ManagedProfile_Success', 1), ('canRequestInteractAcrossProfiles', 1), ('canInteractAcrossProfiles', 1), ('createRequestInteractAcrossProfilesIntent', 1), ('createAndStartManagedProfile', 1), ('createUser', 1), ('getBuild', 1), ('getApplicationContext', 1), ('Statement', 1), ('evaluate', 1), ('getApiLevel', 1)]"	"[('CtsDevicePolicyManagerTestCases', 2), ('CtsInputMethodServiceHostTestCases', 1), ('CtsAccountsHostTestCases', 1), ('CtsSyncContentHostTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsMediaHostTestCases', 1), ('CtsShortcutHostTestCases', 1)]"	""	"com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule"	"getApiLevel"	"CtsDevicePolicyManagerTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/webkit/src/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/hostside/src/android/inputmethodservice/cts/hostside/MultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/content/src/android/content/cts/ContextCrossProfileHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ResumeOnRebootHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/session/cts/MediaSessionManagerHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/hostside/src/android/content/pm/cts/shortcuthost/BaseShortcutManagerHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/main/java/com/android/bedstead/harrier/DeviceState.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java', 1)]"	"[('(1,android.software.managed,/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java)', 1), ('(1,android.software.managed,/android/inputmethodservice/cts/hostside/MultiUserTest.java)', 1), ('(1,android.software.managed,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(1,android.software.managed,/android/content/cts/ContextCrossProfileHostTest.java)', 1), ('(1,android.software.managed,/android/appsecurity/cts/ResumeOnRebootHostTest.java)', 1), ('(1,android.software.managed,/android/media/session/cts/MediaSessionManagerHostTest.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java)', 1), ('(1,android.software.managed,/android/content/pm/cts/shortcuthost/BaseShortcutManagerHostTest.java)', 1), ('(2,android.software.managed,/main/java/com/android/bedstead/harrier/DeviceState.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java)', 1)]"	"[('([1:/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java]:[android.software.managed]:[1]:method_text:[st-side test if the device-side test fails.                        .setCheckResults(true));    }}])', 1), ('([1:/android/inputmethodservice/cts/hostside/MultiUserTest.java]:[android.software.managed]:[1]:method_text:[                .setTestMethodName(testInfo.testMethod)                .setUserId(userId));    }}])', 1), ('([1:/android/host/accounts/BaseMultiUserTest.java]:[android.software.managed]:[1]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([1:/android/content/cts/ContextCrossProfileHostTest.java]:[android.software.managed]:[1]:method_text:[ers"");        } catch (DeviceNotAvailableException e) {            return false;        }    }}])', 1), ('([1:/android/appsecurity/cts/ResumeOnRebootHostTest.java]:[android.software.managed]:[1]:method_text:[();            } finally {                removeTestPackages();            }        }    }   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[android.software.managed]:[1]:method_text:[ediaSession"", newUser);        removeUser(newUser);    }    @AppModeFull    @RequiresDevice   ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[android.software.managed]:[1]:method_text:[ userId);        installAppAsUser(SIMPLE_APP_APK, userId);    }    @FlakyTest    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/shortcuthost/BaseShortcutManagerHostTest.java]:[android.software.managed]:[1]:method_text:[                   + "" \\"""" + expectedOutputPattern + ""\\"""");        }        return output;    }}])', 1), ('([2:/main/java/com/android/bedstead/harrier/DeviceState.java]:[android.software.managed]:[2]:method_text:[    ""This test requires INTERACT_ACROSS_USERS_FULL which can only be used on Q+"");        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java]:[android.software.managed]:[1]:method_text:[HOD})    public static @interface IgnoreOnHeadlessSystemUserMode {        String reason();    }}])', 1)]"	""	""	"[('android.software.managed', 10)]"	"[('[com.android.cts.webkit.WebViewHostSideMultipleProfileTest testManagedProfile None]', 1), ('[android.inputmethodservice.cts.hostside.MultiUserTest testProfileUserInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.host.accounts.BaseMultiUserTest listUsers CtsAccountsHostTestCases]', 1), ('[android.content.cts.ContextCrossProfileHostTest testCreateContextAsUser_sameProfileGroup_withInteractAcrossUsersPermission_createsContext CtsSyncContentHostTestCases]', 1), ('[android.appsecurity.cts.ResumeOnRebootHostTest isSupportedDevice CtsAppSecurityHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsFull_managedProfiles CtsMediaHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.BaseShortcutManagerHostTest isMultiUserSupported CtsShortcutHostTestCases]', 1), ('[main.java.com.android.bedstead.harrier.DeviceState TestApis None]', 1), ('[com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule getDisplayName CtsDevicePolicyManagerTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.2  .  These are in the Android source tree at"	"7.1.4.2"	"C-1-7"	"7.1.4.2/C-1-7"	"07010402.670107"	"""C-1-7] MUST support the VK_KHR_surface, VK_KHR_android_surface, VK_KHR_swapchain, and VK_KHR_incremental_present extensions."""	""	""	"KHR_"	""	""	""	""	"[('android.opengl.cts.OpenGlEsVersionTest', 4), ('android.graphics.cts.VulkanFeaturesTest', 2), ('android.view.cts.TextureViewCtsActivity', 1), ('com.android.cts.deviceinfo.VulkanDeviceInfo', 1), ('android.graphics.cts.EGL14Test', 1), ('android.graphics.cts.ASurfaceTextureTest', 1), ('android.graphics.cts.ANativeWindowTest', 1), ('android.graphics.cts.EGL15Test', 1), ('android.opengl.cts.OpenGlEsVersionCtsActivity', 1)]"	"[('endGroup', 33), ('length', 18), ('eglGetError', 15), ('endArray', 11), ('startGroup', 10), ('main', 5), ('countDown', 4), ('TimeoutException', 4), ('getWindow', 4), ('getSimpleName', 4), ('setup', 4), ('printStackTrace', 3), ('onPause', 3), ('onDestroy', 2), ('onEnterAnimationComplete', 2), ('waitForEnterAnimationComplete', 2), ('getDecorView', 2), ('getTextureView', 2), ('run', 2), ('waitForSurface', 2), ('initGl', 2), ('nativeGetVkJSON', 2), ('teardown', 2), ('checkAepEs31Support', 2), ('Object', 1), ('start', 1), ('getLooper', 1), ('setWideColorGamut', 1), ('getColorMode', 1), ('getWidth', 1), ('getHeight', 1), ('initGLExtensionUnsupported', 1), ('await', 1), ('getIntent', 1), ('Renderer', 1), ('getVersionString', 1), ('getExtensionsString', 1), ('getAepEs31Support', 1), ('EmitVertex', 1), ('glCreateProgram', 1)]"	"[('CtsGraphicsTestCases', 6), ('CtsOpenGLTestCases', 5), ('CtsViewTestCases', 1)]"	""	"android.opengl.cts.OpenGlEsVersionTest"	"glCreateProgram"	"CtsOpenGLTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TextureViewCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-device-info/src/com/android/cts/deviceinfo/VulkanDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL14Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ASurfaceTextureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ANativeWindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL15Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionCtsActivity.java', 1)]"	"[('(2,KHR_,/android/view/cts/TextureViewCtsActivity.java)', 1), ('(9,KHR_,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(20,KHR_,/com/android/cts/deviceinfo/VulkanDeviceInfo.java)', 1), ('(2,KHR_,/android/graphics/cts/EGL14Test.java)', 1), ('(2,KHR_,/android/graphics/cts/ASurfaceTextureTest.java)', 1), ('(2,KHR_,/android/graphics/cts/ANativeWindowTest.java)', 1), ('(2,KHR_,/android/graphics/cts/EGL15Test.java)', 1), ('(4,KHR_,/android/opengl/cts/OpenGlEsVersionCtsActivity.java)', 1), ('(16,KHR_,/android/opengl/cts/OpenGlEsVersionTest.java)', 1)]"	"[('([2:/android/view/cts/TextureViewCtsActivity.java]:[KHR_]:[2]:method_text:[FACE_TYPE, EGL10.EGL_WINDOW_BIT,                    EGL10.EGL_NONE            };        }    }}])', 1), ('([4:/android/graphics/cts/VulkanFeaturesTest.java]:[KHR_]:[4]:method_text:[viceExtension(""VK_KHR_incremental_present"", 1);    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([5:/android/graphics/cts/VulkanFeaturesTest.java]:[KHR_]:[5]:method_text:[ {            devices[i] = devicesArray.getJSONObject(i);        }        return devices;    }}])', 1), ('([20:/com/android/cts/deviceinfo/VulkanDeviceInfo.java]:[KHR_]:[20]:method_text:[unknown key name: "" + name);        }    }    private static native String nativeGetVkJSON();}])', 1), ('([2:/android/graphics/cts/EGL14Test.java]:[KHR_]:[2]:method_text:[Exception(""eglDestroyContext failed"");        }        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([2:/android/graphics/cts/ASurfaceTextureTest.java]:[KHR_]:[2]:method_text:[mEglPbuffer, mEglContext)) {      throw new RuntimeException(""eglMakeCurrent failed"");    }  } ])', 1), ('([2:/android/graphics/cts/ANativeWindowTest.java]:[KHR_]:[2]:method_text:[EglContext)) {            throw new RuntimeException(""eglMakeCurrent failed"");        }    }   ])', 1), ('([2:/android/graphics/cts/EGL15Test.java]:[KHR_]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionCtsActivity.java]:[KHR_]:[4]:method_text:[           GLES31.glDeleteProgram(program);            }            return true;        }    }}])', 1), ('([2:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[2]:method_text:[s, es31RequiredList[i]));        }    }    @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[3]:method_text:[ns, requiredExtension));            }        }    }    @CddTest(requirement=""7.1.4.1/C-6-1"")   ])', 1), ('([7:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[7]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/H-1-1"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[4]:method_text:[ager();        return pm.hasSystemFeature(PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE);    }}])', 1)]"	""	""	"[('KHR_', 13)]"	"[('[android.view.cts.TextureViewCtsActivity glFinish CtsViewTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanRequiredExtensions CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanBlockedExtensions CtsGraphicsTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensionsForVrHighPerformance CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForWideColorDisplay CtsOpenGLTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-7"	"7.5/H-1-7"	"07050000.720107"	"""[7.5/H-1-7] For apps targeting API level 31 or higher, the camera device MUST NOT support JPEG capture resolutions smaller than 1080p for both primary cameras. """	""	""	"JPEG"	""	""	""	""	"[('android.media.cts.ExifInterfaceTest', 10), ('android.provider.cts.media.MediaStorePlacementTest', 8), ('android.graphics.cts.AImageDecoderTest', 4), ('android.hardware.camera2.cts.BurstCaptureTest', 3), ('android.hardware.camera2.cts.CameraExtensionSessionTest', 3), ('android.permission.cts.CameraPermissionTest', 2), ('android.hardware.cts.Camera_SizeTest', 2), ('android.hardware.camera2.cts.ZoomCaptureTest', 2), ('android.hardware.camera2.cts.StaticMetadataTest', 2), ('android.hardware.camera2.cts.CameraDeviceTest', 2), ('android.graphics.cts.Bitmap_CompressFormatTest', 2), ('android.content.cts.MockContentProvider', 1), ('android.webkit.cts.URLUtilTest', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('android.content.cts.ClipboardManagerTest', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('android.hardware.camera2.cts.SurfaceViewPreviewTest', 1), ('com.android.cts.verifier.camera.bokeh.CameraBokehActivity', 1), ('android.scopedstorage.cts.ScopedStorageTestHelper', 1), ('android.media.cts.CodecImage', 1)]"	"[('close', 17), ('getWidth', 9), ('getHeight', 9), ('getContentResolver', 8), ('getIntent', 8), ('getContext', 7), ('getPathSegments', 7), ('AtomicInteger', 7), ('start', 7), ('crashOnLaunchIfNeeded', 5), ('setUp', 4), ('Object', 4), ('getLooper', 4), ('capacity', 4), ('clear', 4), ('getSurface', 4), ('toString', 3), ('flush', 3), ('getWritableDatabase', 3), ('quitSafely', 3), ('run', 3), ('getOutputStream', 3), ('printStackTrace', 3), ('getAssetManager', 3), ('getThumbnailRange', 3), ('onCreate', 2), ('myPid', 2), ('getReadableDatabase', 2), ('SQLiteQueryBuilder', 2), ('getFileDescriptor', 2), ('tearDown', 2), ('getSimpleName', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('getFd', 2), ('recycle', 2), ('moveToFirst', 2), ('getGpsDateTime', 2), ('trim', 2), ('hasThumbnail', 2), ('getThumbnailBytes', 2), ('getThumbnailBitmap', 2), ('getExternalStorageDirectory', 1), ('onShutter', 1), ('MockContentProvider', 1), ('ContentValues', 1), ('moveToNext', 1), ('BlockingStateCallback', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('build', 1), ('onDestroy', 1), ('quit', 1), ('size', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('release', 1), ('getColorSpace', 1), ('getTargetContext', 1), ('getFilesDir', 1), ('mkdirs', 1), ('getName', 1), ('createNewFile', 1), ('SizeComparator', 1), ('CaptureCallback', 1), ('getFormat', 1), ('getTimestamp', 1), ('getCropRect', 1), ('getPlanes', 1), ('getRowStride', 1), ('getPixelStride', 1), ('getBuffer', 1), ('getMediaDirString', 1), ('getThumbnail', 1)]"	"[('CtsCameraTestCases', 15), ('CtsMediaTestCases', 10), ('CtsProviderTestCases', 8), ('CtsGraphicsTestCases', 6), ('CtsPermissionTestCases', 2), ('CtsContentTestCases', 2), ('CtsWebkitTestCases', 1)]"	""	"android.media.cts.ExifInterfaceTest"	"getThumbnailBitmap"	"CtsMediaTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/ExifInterfaceTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePlacementTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/AImageDecoderTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionSessionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/CameraPermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/Camera_SizeTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/Bitmap_CompressFormatTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/MockContentProvider.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/URLUtilTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ClipboardManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/SurfaceViewPreviewTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/ScopedStorageTestHelper/src/android/scopedstorage/cts/ScopedStorageTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/CodecImage.java', 1)]"	"[('(6,JPEG,/android/permission/cts/CameraPermissionTest.java)', 1), ('(1,JPEG,/android/content/cts/MockContentProvider.java)', 1), ('(13,JPEG,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(4,JPEG,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(1,JPEG,/android/webkit/cts/URLUtilTest.java)', 1), ('(16,JPEG,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(9,JPEG,/android/provider/cts/media/MediaStorePlacementTest.java)', 1), ('(19,JPEG,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(1,JPEG,/android/content/cts/ClipboardManagerTest.java)', 1), ('(106,JPEG,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(5,JPEG,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(6,JPEG,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(17,JPEG,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(6,JPEG,/android/graphics/cts/AImageDecoderTest.java)', 1), ('(9,JPEG,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(30,JPEG,/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java)', 1), ('(1,JPEG,/android/scopedstorage/cts/ScopedStorageTestHelper.java)', 1), ('(3,JPEG,/android/graphics/cts/Bitmap_CompressFormatTest.java)', 1), ('(2,JPEG,/android/media/cts/CodecImage.java)', 1), ('(33,JPEG,/android/media/cts/ExifInterfaceTest.java)', 1)]"	"[('([5:/android/permission/cts/CameraPermissionTest.java]:[JPEG]:[5]:method_text:[ Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */    @MediumTest   ])', 1), (""([1:/android/permission/cts/CameraPermissionTest.java]:[JPEG]:[1]:method_text:[sn't translating the EPERM error status into            // a SecurityException.        }    }}])"", 1), ('([1:/android/content/cts/MockContentProvider.java]:[JPEG]:[1]:method_text:[xt context) {        return context.getFileStreamPath(""MockContentProvider.crashonlaunch"");    }}])', 1), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[JPEG]:[1]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}     */   ])', 1), ('([12:/android/hardware/cts/Camera_SizeTest.java]:[JPEG]:[12]:method_text:[st = new Camera_SizeTest();        test.setName(testName);        testSuite.addTest(test);    }}])', 1), ('([1:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[JPEG]:[1]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([3:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[JPEG]:[3]:method_text:[t.JPEG);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([1:/android/webkit/cts/URLUtilTest.java]:[JPEG]:[1]:method_text:[  assertEquals(""test.bin"", URLUtil.guessFileName(url, null, ""application/octet-stream""));    }   ])', 1), ('([16:/com/android/cts/verifier/camera/its/ItsService.java]:[JPEG]:[16]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[1]:method_text:[(before.getName().endsWith(""jpg""));        assertEquals(""Pictures"", before.getParent());    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[1]:method_text:[fail();            } catch (IllegalArgumentException expected) {            }        }    }   ])', 1), ('([2:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[2]:method_text:[uals(before.getParent(), after.getParent());        assertEquals(name, after.getName());    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[1]:method_text:[(after.getName().startsWith(name));        assertTrue(after.getName().endsWith("".jpg""));    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[1]:method_text:[.getRelativeFile(uri);            assertEquals(""Pictures"", after.getParent());        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[1]:method_text:[e(updatePlacement(uri,                Optional.of(Environment.DIRECTORY_ALARMS), null));    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[1]:method_text:[l));        assertTrue(updatePlacement(uri,                Optional.of(""DCIM""), null));    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[JPEG]:[1]:method_text:[ll, null) == 1);        } catch (Exception tolerated) {            return false;        }    }}])', 1), ('([14:/android/hardware/camera2/cts/StaticMetadataTest.java]:[JPEG]:[14]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([5:/android/hardware/camera2/cts/StaticMetadataTest.java]:[JPEG]:[5]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 1), ('([1:/android/content/cts/ClipboardManagerTest.java]:[JPEG]:[1]:method_text:[null, null, contentUri7),                new ExpectedClipItem(null, null, contentUri8));    }   ])', 1), ('([106:/android/hardware/camera2/cts/CameraTestUtils.java]:[JPEG]:[106]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([5:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[JPEG]:[5]:method_text:[     isA(CaptureRequest.class),                                isA(CaptureFailure.class));    }}])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[JPEG]:[1]:method_text:[is test uses STILL_CAPTURE intent, and exercises path where     * enableZsl is enabled.     */   ])', 1), ('([4:/android/hardware/camera2/cts/BurstCaptureTest.java]:[JPEG]:[4]:method_text:[de.     * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.     */   ])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[JPEG]:[1]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([8:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[JPEG]:[8]:method_text:[           }            }        }    }    // Verify concurrent extension sessions behavior   ])', 1), ('([8:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[JPEG]:[8]:method_text:[ally increasing timestamps!"");            }            return mLastTimestamp;        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[JPEG]:[1]:method_text:[y {                    mTestRule.closeDevice(id);                }            }        }    }}])', 1), ('([1:/android/graphics/cts/AImageDecoderTest.java]:[JPEG]:[1]:method_text:[tStackTrace();            fail(""Could not open "" + uri);        }        bm.recycle();    }   ])', 1), ('([2:/android/graphics/cts/AImageDecoderTest.java]:[JPEG]:[2]:method_text:[           return ""image/webp"";            default:                return """";        }    }   ])', 1), ('([2:/android/graphics/cts/AImageDecoderTest.java]:[JPEG]:[2]:method_text:[, 32, 32, ""image/jpeg"", false, DataSpace.ADATASPACE_UNKNOWN);        nCloseAsset(asset);    }   ])', 1), ('([1:/android/graphics/cts/AImageDecoderTest.java]:[JPEG]:[1]:method_text:[coder, ANDROID_BITMAP_FORMAT_NONE, false /* unpremul */, bm);        nCloseAsset(asset);    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[JPEG]:[1]:method_text:[           mSession.close();        }    }    /**     * Test session configuration.     */   ])', 1), ('([8:/android/hardware/camera2/cts/CameraDeviceTest.java]:[JPEG]:[8]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([30:/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java]:[JPEG]:[30]:method_text:[ton = (ImageButton) findViewById(R.id.pass_button);        pass_button.setEnabled(enabled);    }}])', 1), ('([1:/android/scopedstorage/cts/ScopedStorageTestHelper.java]:[JPEG]:[1]:method_text:[));        if (m.matches()) {            return m.group(1);        }        return null;    }}])', 1), ('([2:/android/graphics/cts/Bitmap_CompressFormatTest.java]:[JPEG]:[2]:method_text:[     assertEquals(CompressFormat.WEBP_LOSSLESS, CompressFormat.valueOf(""WEBP_LOSSLESS""));    }   ])', 1), ('([1:/android/graphics/cts/Bitmap_CompressFormatTest.java]:[JPEG]:[1]:method_text:[at) {            assertTrue(b.compress(format, 24, new ByteArrayOutputStream()));        }    }}])', 1), ('([2:/android/media/cts/CodecImage.java]:[JPEG]:[2]:method_text:[ the image data for this plane.         */        public abstract ByteBuffer getBuffer();    }}])', 1), ('([6:/android/media/cts/ExifInterfaceTest.java]:[JPEG]:[6]:method_text:[         .detectUnbufferedIo()                .penaltyDeath()                .build());    }   ])', 1), ('([5:/android/media/cts/ExifInterfaceTest.java]:[JPEG]:[5]:method_text:[writeToFilesWithExif(JPEG_WITH_EXIF_BYTE_ORDER_II, R.array.jpeg_with_exif_byte_order_ii);    }   ])', 1), ('([5:/android/media/cts/ExifInterfaceTest.java]:[JPEG]:[5]:method_text:[writeToFilesWithExif(JPEG_WITH_EXIF_BYTE_ORDER_MM, R.array.jpeg_with_exif_byte_order_mm);    }   ])', 1), ('([4:/android/media/cts/ExifInterfaceTest.java]:[JPEG]:[4]:method_text:[;        writeToFilesWithExif(JPEG_WITH_EXIF_WITH_XMP, R.array.jpeg_with_exif_with_xmp);    }   ])', 1), ('([3:/android/media/cts/ExifInterfaceTest.java]:[JPEG]:[3]:method_text:[R.array.volantis_jpg);        writeToFilesWithExif(JPEG_VOLANTIS, R.array.volantis_jpg);    }   ])', 1), ('([2:/android/media/cts/ExifInterfaceTest.java]:[JPEG]:[2]:method_text:[ITH_EXIF_BYTE_ORDER_MM,                R.array.standalone_data_with_exif_byte_order_mm);    }   ])', 1), ('([2:/android/media/cts/ExifInterfaceTest.java]:[JPEG]:[2]:method_text:[riginalValue, exif.getAttribute(ExifInterface.TAG_DATETIME));        imageFile.delete();    }   ])', 1), ('([1:/android/media/cts/ExifInterfaceTest.java]:[JPEG]:[1]:method_text:[Type(""image/webp""));        assertFalse(ExifInterface.isSupportedMimeType(""image/gif""));    }   ])', 1), ('([2:/android/media/cts/ExifInterfaceTest.java]:[JPEG]:[2]:method_text:[Comment, exif.getAttribute(ExifInterface.TAG_USER_COMMENT));        imageFile.delete();    }   ])', 1), ('([3:/android/media/cts/ExifInterfaceTest.java]:[JPEG]:[3]:method_text:[            throw new EOFException();        }        return (short) ((ch1 << 8) + (ch2));    }}])', 1)]"	""	""	"[('JPEG', 49)]"	"[('[android.permission.cts.CameraPermissionTest testCamera CtsPermissionTestCases]', 1), ('[android.content.cts.MockContentProvider exists CtsContentTestCases]', 1), ('[android.hardware.cts.Camera_SizeTest testConstructor CtsCameraTestCases]', 1), ('[android.hardware.cts.Camera_SizeTest testMaxAspectRatios CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testJpegZoomCapture CtsCameraTestCases]', 1), ('[android.webkit.cts.URLUtilTest testGuessFileName CtsWebkitTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDefault CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testIgnored CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDisplayName_SameMime CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDisplayName_DifferentMime CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDirectory_Valid CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDirectory_Invalid CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDirectory_OutsideSandbox CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testRelated_InvalidPath CtsProviderTestCases]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testHwSupportedLevel CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testCapabilities CtsCameraTestCases]', 1), ('[android.content.cts.ClipboardManagerTest testSetPrimaryClip_multipleMimeTypes CtsContentTestCases]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testDeferredSurfaces CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testJpegBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testMultiFrameCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testRepeatingAndCaptureCombined CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testIllegalArguments CtsCameraTestCases]', 1), ('[android.graphics.cts.AImageDecoderTest exists CtsGraphicsTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateCustomSession CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.bokeh.CameraBokehActivity setPassFailButtonClickListeners None]', 1), ('[android.scopedstorage.cts.ScopedStorageTestHelper list None]', 1), ('[android.graphics.cts.Bitmap_CompressFormatTest testValueOf CtsGraphicsTestCases]', 1), ('[android.graphics.cts.Bitmap_CompressFormatTest testValues CtsGraphicsTestCases]', 1), ('[android.media.cts.ExifInterfaceTest isThumbnailCompressed CtsMediaTestCases]', 1), ('[android.media.cts.ExifInterfaceTest testReadExifDataFromExifByteOrderIIJpeg CtsMediaTestCases]', 1), ('[android.media.cts.ExifInterfaceTest testReadExifDataFromExifByteOrderMMJpeg CtsMediaTestCases]', 1), ('[android.media.cts.ExifInterfaceTest testReadExifDataFromLgG4Iso800Jpg CtsMediaTestCases]', 1), ('[android.media.cts.ExifInterfaceTest testReadExifDataFromVolantisJpg CtsMediaTestCases]', 1), ('[android.media.cts.ExifInterfaceTest testStandaloneData CtsMediaTestCases]', 1), ('[android.media.cts.ExifInterfaceTest testGetSetDateTime CtsMediaTestCases]', 1), ('[android.media.cts.ExifInterfaceTest testIsSupportedMimeType CtsMediaTestCases]', 1), ('[android.media.cts.ExifInterfaceTest testSetAttribute CtsMediaTestCases]', 1), ('[android.media.cts.ExifInterfaceTest testGetAttributeForNullAndNonExistentTag CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.2  . IEEE 802.11"	"7.4.2"	"C-1-10"	"7.4.2/C-1-10"	"07040200.670110"	"""C-1-10] MUST randomize Probe request sequence number between the last probe request of a scan and the first probe request of the next scan."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-4-3"	"7.3.1/C-4-3"	"07030100.670403"	"""C-4-3] MUST implement the ACTION_BIOMETRIC_ENROLL action on devices that have either Class 3 or Class 2 biometrics. This action MUST only present the enrollment entry points for Class 3 or Class 2 biometrics. If device implementations support passive biometrics, they:"""	""	""	"ACTION_BIOMETRIC_ENROLL"	""	""	""	""	"[('com.android.cts.verifier.biometrics.AbstractBaseTest', 1), ('com.android.cts.verifier.biometrics.BiometricStrongTests', 1), ('com.android.cts.verifier.biometrics.BiometricWeakTests', 1)]"	"[('getTag', 2)]"	""	""	"com.android.cts.verifier.biometrics.BiometricWeakTests"	"getTag"	""	"[('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/AbstractBaseTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/BiometricStrongTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/BiometricWeakTests.java', 1)]"	"[('(1,ACTION_BIOMETRIC_ENROLL,/com/android/cts/verifier/biometrics/AbstractBaseTest.java)', 1), ('(1,ACTION_BIOMETRIC_ENROLL,/com/android/cts/verifier/biometrics/BiometricStrongTests.java)', 1), ('(1,ACTION_BIOMETRIC_ENROLL,/com/android/cts/verifier/biometrics/BiometricWeakTests.java)', 1)]"	"[('([1:/com/android/cts/verifier/biometrics/AbstractBaseTest.java]:[ACTION_BIOMETRIC_ENROLL]:[1]:method_text:[             requestedStrength);        startActivityForResult(enrollIntent, requestCode);    }}])', 1), ('([1:/com/android/cts/verifier/biometrics/BiometricStrongTests.java]:[ACTION_BIOMETRIC_ENROLL]:[1]:method_text:[ll tests passed"");                getPassButton().setEnabled(true);            }        }    }}])', 1), ('([1:/com/android/cts/verifier/biometrics/BiometricWeakTests.java]:[ACTION_BIOMETRIC_ENROLL]:[1]:method_text:[        showToastAndLog(""Unexpected result after enrollment: "" + biometricStatus);        }    }}])', 1)]"	""	""	"[('ACTION_BIOMETRIC_ENROLL', 3)]"	"[('[com.android.cts.verifier.biometrics.AbstractBaseTest isOnPauseAllowed None]', 1), ('[com.android.cts.verifier.biometrics.BiometricStrongTests isOnPauseAllowed None]', 1), ('[com.android.cts.verifier.biometrics.BiometricWeakTests setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-17"	"9.9.3/C-1-17"	"09090300.670117"	"""C-1-17] MUST ensure that all encrypted filesystem metadata blocks on persistent storage were encrypted using distinct combinations of encryption key and initialization vector (IV). Have keys protecting CE and DE storage areas which:"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.1  . These are in the Android source tree at"	"7.1.4.1"	"C-2-5"	"7.1.4.1/C-2-5"	"07010401.670205"	"""C-2-5] MUST pass all OpenGL ES dEQP Tests in the test lists between version 132383489 and the version specified in the android.software.opengles.deqp.level feature flag, for each supported OpenGL ES version."""	""	""	"android.software.opengles.deqp.level EQP"	""	""	""	""	"[('android.graphics.cts.OpenGlEsDeqpLevelTest', 3), ('android.graphics.cts.VulkanDeqpLevelTest', 2), ('com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite', 1), ('com.android.cts.apicoverage.TestCaseReport', 1), ('com.android.cts.releaseparser.TestSuiteParser', 1), ('android.hardware.camera2.cts.HeifWriterTest', 1), ('com.android.compatibility.common.tradefed.presubmit.CtsConfigLoadingTest', 1), ('android.midi.cts.MidiEchoTest', 1)]"	"[('getType', 7), ('newBuilder', 7), ('getAnnotations', 5), ('println', 4), ('getName', 4), ('getMethods', 3), ('getSimpleName', 3), ('setup', 3), ('getTargetContext', 3), ('getPackageManager', 3), ('printUsage', 2), ('getAccessFlags', 2), ('getValue', 2), ('length', 2), ('getElements', 1), ('toString', 1), ('printStackTrace', 1), ('getClasses', 1), ('entries', 1), ('getAbsolutePath', 1), ('getClassLoader', 1), ('hasMoreElements', 1), ('nextElement', 1), ('getSystemAvailableFeatures', 1), ('nanoTime', 1), ('notifyAll', 1)]"	"[('CtsGraphicsTestCases', 5), ('CtsCameraTestCases', 1), ('CtsMidiTestCases', 1)]"	""	"android.midi.cts.MidiEchoTest"	"notifyAll"	"CtsMidiTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/OpenGlEsDeqpLevelTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/TestCaseReport.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/TestSuiteParser.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/midi/src/android/midi/cts/MidiEchoTest.java', 1)]"	"[('(2,EQP,/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java)', 1), ('(5,EQP,/com/android/cts/apicoverage/TestCaseReport.java)', 1), ('(10,EQP,/android/graphics/cts/VulkanDeqpLevelTest.java)', 1), ('(3,EQP,/com/android/cts/releaseparser/TestSuiteParser.java)', 1), ('(3,EQP,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(3,EQP,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(1,android.software.opengles.deqp.level,/android/graphics/cts/OpenGlEsDeqpLevelTest.java)', 1), ('(10,EQP,/android/graphics/cts/OpenGlEsDeqpLevelTest.java)', 1), ('(1,EQP,/android/midi/cts/MidiEchoTest.java)', 1)]"	"[('([2:/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java]:[EQP]:[2]:method_text:[new GoNegReqPbcTestCase(context));        sTestSuite.add(new GoNegReqPinTestCase(context));    }}])', 1), ('([5:/com/android/cts/apicoverage/TestCaseReport.java]:[EQP]:[5]:method_text:[        printTestSuiteSummary(ts1, outputSummaryFilePath, tsContent.getKnownFailuresList());    }}])', 1), ('([4:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[4]:method_text:[              }            }        }    }    @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")   ])', 1), ('([6:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[6]:method_text:[kageManager.FEATURE_VULKAN_DEQP_LEVEL,                        MINIMUM_VULKAN_DEQP_LEVEL));    }}])', 1), ('([3:/com/android/cts/releaseparser/TestSuiteParser.java]:[EQP]:[3]:method_text:[thod : classDef.getMethods()) {                            // Junit4 style test case annotated with])', 1), ('([3:/android/hardware/camera2/cts/HeifWriterTest.java]:[EQP]:[3]:method_text:[           }            // TODO: add more key validations.        }        return result;    }}])', 1), ('([3:/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java]:[EQP]:[3]:method_text:[ * -> Exclude deprecated ApkInstaller.     * -> Check if host-side tests are non empty.     */   ])', 1), ('([1:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[android.software.opengles.deqp.level]:[1]:method_text:[d setup() {        mPm = InstrumentationRegistry.getTargetContext().getPackageManager();    }   ])', 1), ('([4:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[EQP]:[4]:method_text:[d setup() {        mPm = InstrumentationRegistry.getTargetContext().getPackageManager();    }   ])', 1), ('([6:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[EQP]:[6]:method_text:[Manager.FEATURE_OPENGLES_DEQP_LEVEL,                        MINIMUM_OPENGLES_DEQP_LEVEL));    }}])', 1), ('([1:/android/midi/cts/MidiEchoTest.java]:[EQP]:[1]:method_text:[o.TYPE_VIRTUAL,                echoInfo.getType());    }    // Is the MidiManager supported?   ])', 1)]"	""	""	"[('EQP', 10), ('android.software.opengles.deqp.level', 1)]"	"[('[com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite getTestId None]', 1), ('[com.android.cts.apicoverage.TestCaseReport isDirectory None]', 1), ('[android.graphics.cts.VulkanDeqpLevelTest testVulkanDeqpLevel CtsGraphicsTestCases]', 1), ('[com.android.cts.releaseparser.TestSuiteParser getTestSuite None]', 1), ('[android.hardware.camera2.cts.HeifWriterTest testHeif CtsCameraTestCases]', 1), ('[android.graphics.cts.OpenGlEsDeqpLevelTest testOpenGlEsDeqpLevel CtsGraphicsTestCases]', 1), ('[android.midi.cts.MidiEchoTest currentTimeMillis CtsMidiTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-2-2"	"7.3.1/C-2-2"	"07030100.670202"	"""C-2-2] MUST have a spoof and imposter acceptance rate not higher than 20% as measured by the Android Biometrics Test Protocols."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.5"	"7.1.4.5"	"C-1-3"	"7.1.4.5/C-1-3"	"07010405.670103"	"""C-1-3] MUST have a display whose gamut has an area of at least 90% of DCI-P3 in CIE 1931 xyY space."""	""	""	"CIE DCI"	""	""	""	""	"[('android.keystore.cts.BlockCipherTestBase', 11), ('android.graphics.cts.PaintTest', 4), ('android.graphics.cts.BitmapColorSpaceTest', 3), ('android.provider.cts.media.MediaStorePlacementTest', 3), ('com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest', 3), ('android.keystore.cts.DESedeCipherTestBase', 2), ('android.view.inputmethod.cts.BaseInputConnectionTest', 2), ('com.android.cts.deviceandprofileowner.FactoryResetProtectionPolicyTest', 2), ('android.uirendering.cts.testclasses.ExactCanvasTests', 1), ('android.jdwptunnel.cts.JdwpTunnelTest', 1), ('com.android.tests.atomicinstall.AtomicInstallTest', 1), ('android.uirendering.cts.testclasses.GradientTests', 1), ('com.android.cts.managedprofile.CrossProfileWidgetTest', 1), ('android.widget.cts.util.TestUtils', 1), ('android.keystore.cts.RSACipherTest', 1), ('android.net.wifi.cts.ConnectedNetworkScorerTest', 1), ('android.security.cts.LaunchSomeWhere', 1), ('android.media.cts.CamcorderProfileTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerHostSideTransferTest', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('android.media.cts.DecodeAccuracyTestBase', 1), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsNoSimTest', 1), ('com.android.cts.releaseparser.ApkParser', 1), ('com.android.cts.devicepolicy.ManagedProfileContactsTest', 1), ('com.android.cts.releaseparser.DepPrinter', 1), ('android.renderscript.cts.IntrinsicConvolve5x5', 1), ('android.cts.FileChannelInterProcessLockTest', 1), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 1), ('com.android.cts.verifier.audio.HifiUltrasoundTestActivity', 1)]"	"[('getMediaType', 14), ('setUp', 7), ('elapsedRealtime', 7), ('decoderRelease', 5), ('now', 4), ('getCodec', 4), ('release', 4), ('getName', 4), ('getEntries', 4), ('stream', 3), ('getColorSpace', 3), ('getWidth', 3), ('getHeight', 3), ('getProfile', 3), ('reset', 3), ('getType', 3), ('values', 3), ('getVectorSize', 3), ('clone', 2), ('getDevice', 2), ('moveToHomeScreen', 2), ('name', 2), ('findFirst', 2), ('trim', 2), ('getBitrate', 2), ('getIntent', 2), ('getSimpleName', 2), ('startDecoder', 2), ('queueDecoderInputBuffer', 2), ('dequeueDecoderOutputBuffer', 2), ('extractorRelease', 2), ('close', 2), ('length', 2), ('getBlockSize', 1), ('getKatKey', 1), ('getKatPlaintext', 1), ('getKatAuthenticationTagLengthBytes', 1), ('virtualMachineManager', 1), ('attachingConnectors', 1), ('transport', 1), ('defaultArguments', 1), ('eventRequestManager', 1), ('suspend', 1), ('allClasses', 1), ('createClassPrepareRequest', 1), ('enable', 1), ('resume', 1), ('eventQueue', 1), ('remove', 1), ('request', 1), ('referenceType', 1), ('createWithNonRgbColorSpace', 1), ('inColorSpaceNotRGB', 1), ('Options', 1), ('getAssets', 1), ('fail', 1), ('createWithColorSpace', 1), ('SecureRandom', 1), ('getBackground', 1), ('waitForDeviceAvailable', 1), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getAudioProfiles', 1), ('getSampleRate', 1), ('getChannels', 1), ('hasProfile', 1), ('getReceiverComponentName', 1), ('myUserId', 1), ('getActivity', 1), ('getApplicationContext', 1), ('getResources', 1), ('tearDown', 1), ('bringActivityToFront', 1), ('getHelper', 1), ('MediaExtractor', 1), ('failToStart', 1), ('PlayerResult', 1), ('getMediaFormat', 1), ('getInputBuffers', 1), ('getSampleTime', 1), ('advance', 1), ('BufferInfo', 1), ('getOutputBuffers', 1), ('clear', 1), ('getAssetFileDescriptor', 1), ('getFileDescriptor', 1), ('getStartOffset', 1), ('getLength', 1), ('start', 1), ('stop', 1), ('getEncodedNameLength_ucsEncodable', 1), ('setAdditionalInfo', 1), ('getFileEntryBuilder', 1), ('getAppInfo', 1), ('getExternalApiPackage', 1), ('prase', 1), ('getVersion', 1), ('getBuildNumber', 1), ('getAbiBits', 1), ('flush', 1), ('getMessage', 1), ('getDataType', 1), ('DeviceState', 1)]"	"[('CtsKeystoreTestCases', 14), ('CtsGraphicsTestCases', 7), ('CtsProviderTestCases', 3), ('CtsUiRenderingTestCases', 2), ('CtsInputMethodTestCases', 2), ('CtsMediaTestCases', 2), ('CtsDevicePolicyManagerTestCases', 2), ('CtsJdwpTunnelHostTestCases', 1), ('CtsAtomicInstallTestCases', 1), ('CtsWidgetTestCases', 1), ('CtsWifiTestCases', 1), ('CtsSecurityBulletinHostTestCases', 1), ('CtsSimPhonebookProviderTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsLibcoreFileIOTestCases', 1), ('CtsDevicePolicyTestCases', 1)]"	""	"android.graphics.cts.PaintTest"	"getSimpleName"	"CtsGraphicsTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/BlockCipherTestBase.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapColorSpaceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePlacementTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/DESedeCipherTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/BaseInputConnectionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/FactoryResetProtectionPolicyTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/atomicinstall/src/com/android/tests/atomicinstall/AtomicInstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/GradientTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileWidgetTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/util/TestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/RSACipherTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConnectedNetworkScorerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/LaunchSomeWhere.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeAccuracyTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsNoSimTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/ApkParser.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileContactsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/DepPrinter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/IntrinsicConvolve5x5.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/libcorefileio/src/android/cts/FileChannelInterProcessLockTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java', 1)]"	"[('(1,DCI,/android/uirendering/cts/testclasses/ExactCanvasTests.java)', 1), ('(1,CIE,/android/keystore/cts/DESedeCipherTestBase.java)', 1), ('(1,DCI,/android/keystore/cts/DESedeCipherTestBase.java)', 1), ('(1,CIE,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(2,CIE,/android/graphics/cts/BitmapColorSpaceTest.java)', 1), ('(1,DCI,/android/graphics/cts/BitmapColorSpaceTest.java)', 1), ('(2,DCI,/com/android/tests/atomicinstall/AtomicInstallTest.java)', 1), ('(1,DCI,/android/uirendering/cts/testclasses/GradientTests.java)', 1), ('(2,CIE,/android/view/inputmethod/cts/BaseInputConnectionTest.java)', 1), ('(4,CIE,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(25,DCI,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(1,CIE,/com/android/cts/managedprofile/CrossProfileWidgetTest.java)', 1), ('(1,CIE,/android/widget/cts/util/TestUtils.java)', 1), ('(3,DCI,/android/keystore/cts/RSACipherTest.java)', 1), ('(1,CIE,/android/net/wifi/cts/ConnectedNetworkScorerTest.java)', 1), ('(2,CIE,/android/security/cts/LaunchSomeWhere.java)', 1), ('(4,DCI,/android/media/cts/CamcorderProfileTest.java)', 1), ('(2,CIE,/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java)', 1), ('(12,CIE,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(12,CIE,/android/media/cts/DecodeAccuracyTestBase.java)', 1), ('(1,CIE,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsNoSimTest.java)', 1), ('(2,CIE,/com/android/cts/releaseparser/ApkParser.java)', 1), ('(2,CIE,/com/android/cts/devicepolicy/ManagedProfileContactsTest.java)', 1), ('(3,CIE,/com/android/cts/releaseparser/DepPrinter.java)', 1), ('(1,CIE,/android/renderscript/cts/IntrinsicConvolve5x5.java)', 1), ('(6,DCI,/android/provider/cts/media/MediaStorePlacementTest.java)', 1), ('(2,CIE,/android/cts/FileChannelInterProcessLockTest.java)', 1), ('(1,CIE,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(3,CIE,/com/android/cts/deviceandprofileowner/FactoryResetProtectionPolicyTest.java)', 1), ('(6,CIE,/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java)', 1), ('(7,CIE,/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java)', 1), ('(4,CIE,/android/graphics/cts/PaintTest.java)', 1)]"	"[('([1:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[DCI]:[1]:method_text:[        p.setAntiAlias(true);        canvas.drawTextOnPath(testString, path, 0f, 0f, p);    }   ])', 1), ('([1:/android/keystore/cts/DESedeCipherTestBase.java]:[CIE]:[1]:method_text:[            super.testUpdateWithEmptyInputReturnsCorrectValue();        }    }    @Override   ])', 1), ('([1:/android/keystore/cts/DESedeCipherTestBase.java]:[DCI]:[1]:method_text:[de    protected boolean isStreamCipher() {        return false;    }    @java.lang.Override   ])', 1), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[CIE]:[1]:method_text:[of the activity     * class and put and wait for a breakpoint on the onCreate function.     */   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[CIE]:[1]:method_text:[Bitmap.Config.ARGB_8888, true,                ColorSpace.get(ColorSpace.Named.CIE_LAB));    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[CIE]:[1]:method_text:[deStream(in, null, opts);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[DCI]:[1]:method_text:[                    assertSame(linearRgb, cs);                }            }        }    }   ])', 1), ('([2:/com/android/tests/atomicinstall/AtomicInstallTest.java]:[DCI]:[2]:method_text:[ualTo(-1);            assertThat(getInstalledVersion(TestApp.C)).isEqualTo(1);        }    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/GradientTests.java]:[DCI]:[1]:method_text:[     Color.RED                                }                        )            );    }   ])', 1), ('([1:/android/view/inputmethod/cts/BaseInputConnectionTest.java]:[CIE]:[1]:method_text:[    * Tests {@link BaseInputConnection#deleteSurroundingText(int, int)} comprehensively.     */   ])', 1), ('([1:/android/view/inputmethod/cts/BaseInputConnectionTest.java]:[CIE]:[1]:method_text:[BaseInputConnection#deleteSurroundingTextInCodePoints(int, int)}     * comprehensively.     */   ])', 1), ('([4:/android/keystore/cts/BlockCipherTestBase.java]:[CIE]:[4]:method_text:[    assertEquals(0, update(ByteBuffer.allocate(1), ByteBuffer.allocate(getBlockSize())));    }   ])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[DCI]:[1]:method_text:[alid opmode: "" + opmode);        }    }    private Cipher mCipher;    private int mOpmode;   ])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[DCI]:[1]:method_text:[of input.            assertNull(""buffered: "" + buffered, update(new byte[1]));        }    }   ])', 1), ('([2:/android/keystore/cts/BlockCipherTestBase.java]:[DCI]:[2]:method_text:[of input.            assertNull(""buffered: "" + buffered, update(new byte[1]));        }    }   ])', 1), ('([8:/android/keystore/cts/BlockCipherTestBase.java]:[DCI]:[8]:method_text:[length);            assertArrayEquals(expectedFinalOutput, actualFinalOutput);        }    }   ])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[DCI]:[1]:method_text:[length);            assertArrayEquals(expectedFinalOutput, actualFinalOutput);        }    }   ])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[DCI]:[1]:method_text:[ateCipher();        initKat(Cipher.DECRYPT_MODE);        assertUpdateAADNotSupported();    }   ])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[DCI]:[1]:method_text:[dateAAD(ByteBuffer.allocate(getBlockSize()));    }    // TODO: Add tests for WRAP and UNWRAP   ])', 1), ('([4:/android/keystore/cts/BlockCipherTestBase.java]:[DCI]:[4]:method_text:[xt,                    subarray(decryptedPlaintext, 0, basePlaintext.length));        }    }   ])', 1), ('([2:/android/keystore/cts/BlockCipherTestBase.java]:[DCI]:[2]:method_text:[dOutput,                subarray(buffer, outputOffsetInBuffer, outputEndIndexInBuffer));    }   ])', 1), ('([4:/android/keystore/cts/BlockCipherTestBase.java]:[DCI]:[4]:method_text:[param);            fail();        } catch (InvalidAlgorithmParameterException expected) {}    }}])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileWidgetTest.java]:[CIE]:[1]:method_text:[ and verifies that     * if was added successfully and can be found inside the profile.     */   ])', 1), ('([1:/android/widget/cts/util/TestUtils.java]:[CIE]:[1]:method_text:[                    ((BitmapDrawable) compoundDrawablesRelative[3]).getBitmap());        }    }}])', 1), ('([3:/android/keystore/cts/RSACipherTest.java]:[DCI]:[3]:method_text:[  throw new RuntimeException(""Failed for key "" + key.getAlias(), e);            }        }    }}])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[CIE]:[1]:method_text:[* Tests the {@link android.net.wifi.WifiManager#updateWifiUsabilityScore(int, int, int)}     */   ])', 1), ('([2:/android/security/cts/LaunchSomeWhere.java]:[CIE]:[2]:method_text:[    if (device.waitForDeviceNotAvailable(9_000))            device.waitForDeviceAvailable();    }])', 1), ('([4:/android/media/cts/CamcorderProfileTest.java]:[DCI]:[4]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java]:[CIE]:[2]:method_text:[NCOMING_TEST);            installAppAsUser(TRANSFER_OWNER_INCOMING_APK, mUserId);        }    }}])', 1), ('([12:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[CIE]:[12]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([12:/android/media/cts/DecodeAccuracyTestBase.java]:[CIE]:[12]:method_text:[blic static boolean isVideo(String mimeType) {        return mimeType.startsWith(""video"");    }}])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsNoSimTest.java]:[CIE]:[1]:method_text:[tion) {        return Objects.requireNonNull(mResolver.query(uri, projection, null, null));    }}])', 1), ('([2:/com/android/cts/releaseparser/ApkParser.java]:[CIE]:[2]:method_text:[tatic Logger getLogger() {        return Logger.getLogger(ApkParser.class.getSimpleName());    }}])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileContactsTest.java]:[CIE]:[2]:method_text:[seDirectories_canNotAccessManagedDirectories"",                    mParentUserId);        }    }}])', 1), ('([3:/com/android/cts/releaseparser/DepPrinter.java]:[CIE]:[3]:method_text:[(Exception e) {            e.printStackTrace();            System.err.println(e);        }    }])', 1), ('([1:/android/renderscript/cts/IntrinsicConvolve5x5.java]:[CIE]:[1]:method_text:[, si, e, cf3, ""test convolve"", 3, w, h, sc);        si.destroy();        sr.destroy();    }   ])', 1), ('([4:/android/provider/cts/media/MediaStorePlacementTest.java]:[DCI]:[4]:method_text:[.getRelativeFile(uri);            assertEquals(""Pictures"", after.getParent());        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[DCI]:[1]:method_text:[));        assertFalse(updatePlacement(uri,                Optional.of(""DCIM""), null));    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[DCI]:[1]:method_text:[l));        assertTrue(updatePlacement(uri,                Optional.of(""DCIM""), null));    }   ])', 1), ('([2:/android/cts/FileChannelInterProcessLockTest.java]:[CIE]:[2]:method_text:[          lockReleasedLatch.countDown();                    break;            }        }    }}])', 1), ('([1:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[CIE]:[1]:method_text:[he provider that provides enterprise slice can     * see the enterprise slice requests.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/FactoryResetProtectionPolicyTest.java]:[CIE]:[1]:method_text:[        assertThat(result).isNotNull();        assertPoliciesAreEqual(policy, result);    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/FactoryResetProtectionPolicyTest.java]:[CIE]:[2]:method_text:[ccounts) {        assertThat(actualAccounts).containsExactlyElementsIn(expectedAccounts);    }}])', 1), ('([6:/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java]:[CIE]:[6]:method_text:[ @Override    public void sendMessage(String message) {      publishProgress(message);    }  }}])', 1), ('([2:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[CIE]:[2]:method_text:[entDevicePolicyManager.setRequiredPasswordComplexity(PASSWORD_COMPLEXITY_NONE);        }    }   ])', 1), ('([2:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[CIE]:[2]:method_text:[  mDevicePolicyManager.setRequiredPasswordComplexity(PASSWORD_COMPLEXITY_NONE);        }    }   ])', 1), ('([3:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[CIE]:[3]:method_text:[y(                    ADMIN_RECEIVER_COMPONENT, PASSWORD_QUALITY_UNSPECIFIED);        }    }   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CIE]:[1]:method_text:[        p.setColor(Color.convert(Color.BLUE, ColorSpace.get(ColorSpace.Named.CIE_XYZ)));    }   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CIE]:[1]:method_text:[        p.setColor(Color.convert(Color.BLUE, ColorSpace.get(ColorSpace.Named.CIE_LAB)));    }   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CIE]:[1]:method_text:[0f,                Color.convert(Color.BLUE, ColorSpace.get(ColorSpace.Named.CIE_XYZ)));    }   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CIE]:[1]:method_text:[0f,                Color.convert(Color.BLUE, ColorSpace.get(ColorSpace.Named.CIE_LAB)));    }   ])', 1)]"	""	""	"[('CIE', 31), ('DCI', 20)]"	"[('[android.uirendering.cts.testclasses.ExactCanvasTests testBasicText CtsUiRenderingTestCases]', 1), ('[android.keystore.cts.DESedeCipherTestBase testUpdateDoesNotProduceOutputWhenInsufficientInput CtsKeystoreTestCases]', 1), ('[android.keystore.cts.DESedeCipherTestBase isAuthenticatedCipher CtsKeystoreTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest disable CtsJdwpTunnelHostTestCases]', 1), ('[com.android.tests.atomicinstall.AtomicInstallTest testRemoveChild CtsAtomicInstallTestCases]', 1), ('[android.uirendering.cts.testclasses.GradientTests testRadialGradientSameStartEndCircles CtsUiRenderingTestCases]', 1), ('[android.view.inputmethod.cts.BaseInputConnectionTest testReportFullscreenMode CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.BaseInputConnectionTest testDeleteSurroundingText CtsInputMethodTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testUpdateDoesNotProduceOutputWhenInsufficientInput CtsKeystoreTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase isStrongbox CtsKeystoreTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testGetOutputSizeInEncryptionMode CtsKeystoreTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testGetOutputSizeInDecryptionMode CtsKeystoreTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testKatEncryptOneByteAtATime CtsKeystoreTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testKatDecryptOneByteAtATime CtsKeystoreTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testUpdateAADNotSupported CtsKeystoreTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testUpdateAADSupported CtsKeystoreTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testGeneratedPadding CtsKeystoreTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testUpdateCopySafe CtsKeystoreTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testVeryLargeBlock CtsKeystoreTestCases]', 1), ('[android.widget.cts.util.TestUtils isVisible CtsWidgetTestCases]', 1), ('[android.keystore.cts.RSACipherTest testNoPaddingWithZeroMessage CtsKeystoreTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testWifiUsabilityStatsEntry CtsWifiTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[android.media.cts.DecodeAccuracyTestBase isAbrEnabled CtsMediaTestCases]', 1), ('[com.android.cts.releaseparser.ApkParser getTestCaseApiPackage None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileContactsTest testManagedContactsPolicies CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.releaseparser.DepPrinter getDependenciesList None]', 1), ('[android.renderscript.cts.IntrinsicConvolve5x5 finish CtsRenderscriptTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDirectory_Valid CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDirectory_InsideSandbox CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDirectory_OutsideSandbox CtsProviderTestCases]', 1), ('[android.cts.FileChannelInterProcessLockTest test_lockJJZ_Shared_differentChannelTypes CtsLibcoreFileIOTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest TestApis CtsDevicePolicyTestCases]', 1), ('[com.android.cts.deviceandprofileowner.FactoryResetProtectionPolicyTest testSetFactoryResetProtectionPolicy None]', 1), ('[com.android.cts.deviceandprofileowner.FactoryResetProtectionPolicyTest testSetFactoryResetProtectionPolicy_nullPolicy None]', 1), ('[com.android.cts.verifier.audio.HifiUltrasoundTestActivity dismiss None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testIsActivePasswordSufficient_onParent_setOnParent_isSupported None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testIsActivePasswordSufficient_onParent_setOnProfile_isSupported None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testIsActivePasswordSufficient_onParent_respectsProfileQualityWhenUnified None]', 1), ('[android.graphics.cts.PaintTest testSetColorXYZ CtsGraphicsTestCases]', 1), ('[android.graphics.cts.PaintTest testSetColorLAB CtsGraphicsTestCases]', 1), ('[android.graphics.cts.PaintTest testSetShadowLayerXYZ CtsGraphicsTestCases]', 1), ('[android.graphics.cts.PaintTest testSetShadowLayerLAB CtsGraphicsTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.3.5  . Security Model"	"9.8.2"	"T-5-1"	"9.8.2/T-5-1"	"09080200.840501"	"""[9.8.2/T-5-1] MUST display the camera indicator when an app is accessing live camera data, but not when the camera is only being accessed by app(s) holding the roles called out in Section 9.1 Permissions with CDD identifier [C-3-X]. ["""	""	""	"app(s) CDD"	""	""	""	""	"[('android.appsecurity.cts.ApkVerityInstallTest', 15), ('android.graphics.cts.VulkanFeaturesTest', 5), ('android.hardware.cts.LowRamDeviceTest', 4), ('android.graphics.cts.PaintTest', 3), ('android.media.cts.AudioManagerTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 2), ('android.appwidget.cts.RequestPinAppWidgetTest', 2), ('android.security.cts.MetadataEncryptionTest', 2), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 2), ('android.car.cts.CarBluetoothTest', 2), ('android.content.cts.AvailableIntentsTest', 2), ('android.media.cts.EncoderTest', 2), ('android.app.cts.SystemFeaturesTest', 2), ('android.location.cts.gnss.GnssPseudorangeVerificationTest', 2), ('android.mediav2.cts.CodecListTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.keystore.cts.CipherTest', 1), ('android.webkit.cts.WebSettingsTest', 1), ('com.android.cts.verifier.companion.CompanionDeviceServiceTestActivity', 1), ('android.hardware.camera2.cts.testcases.Camera2AndroidTestCase', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('com.android.cts.verifier.audio.ProAudioActivity', 1), ('com.android.cts.verifier.security.IdentityCredentialAuthentication', 1), ('android.host.accounts.BaseMultiUserTest', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('android.security.identity.cts.ProvisioningTest', 1), ('android.text.cts.FontCoverageTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1)]"	"[('setUp', 16), ('run', 15), ('close', 15), ('getPackageManager', 9), ('getDevice', 9), ('getInstrumentation', 8), ('start', 8), ('getContext', 7), ('AtomicInteger', 7), ('build', 7), ('getTargetContext', 6), ('tearDown', 6), ('getLooper', 5), ('size', 5), ('getSimpleName', 4), ('Object', 4), ('getWidth', 4), ('getHeight', 4), ('capacity', 4), ('clear', 4), ('getSurface', 4), ('printStackTrace', 4), ('getPackageName', 3), ('runExpectingFailure', 3), ('getSystemAvailableFeatures', 3), ('quitSafely', 3), ('getOutputStream', 3), ('getName', 3), ('getBytes', 3), ('Builder', 3), ('getResources', 2), ('getSystem', 2), ('getLaunchApiLevel', 2), ('BlockingBroadcastReceiver', 2), ('await', 2), ('getExtras', 2), ('BlockingStateCallback', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('getClass', 2), ('getTargetException', 2), ('release', 2), ('lock', 2), ('getExampleDrivingPrivilegesCbor', 2), ('end', 2), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('installSingle', 1), ('installAndUpdate', 1), ('assumeSecurityModelCompat', 1), ('getOverrideConfig', 1), ('setUpLauncher', 1), ('getDefaultLauncher', 1), ('tearDownLauncher', 1), ('Bundle', 1), ('getFirstWidgetComponent', 1), ('supports3DES', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('setup', 1), ('nativeGetVkJSON', 1), ('getBestDevice', 1), ('CameraErrorCollector', 1), ('onCreate', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('onDestroy', 1), ('quit', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('NoSuchFieldError', 1), ('getDeclaredMethods', 1), ('NoSuchMethodError', 1), ('getMessage', 1), ('getContentResolver', 1), ('ProAudioActivity', 1), ('super', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('getAction', 1), ('signal', 1), ('unlock', 1), ('waitForAdapterOn', 1), ('waitForAdapterOff', 1), ('enable', 1), ('getMaxNumberOfUsersSupported', 1), ('getCurrentUser', 1), ('getPrimaryUserId', 1), ('getComponentInfo', 1), ('getMediaDirString', 1), ('ByteArrayOutputStream', 1), ('CborBuilder', 1), ('addArray', 1), ('addMap', 1), ('toByteArray', 1), ('iterator', 1), ('next', 1), ('getPublicKey', 1), ('HashMap', 1), ('toLanguageTag', 1), ('getLayoutInflater', 1)]"	"[('CtsAppSecurityHostTestCases', 15), ('CtsGraphicsTestCases', 8), ('CtsShortcutManagerTestCases', 5), ('CtsMediaTestCases', 4), ('CtsHardwareTestCases', 4), ('CtsAppWidgetTestCases', 2), ('CtsSecurityHostTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsCarTestCases', 2), ('CtsContentTestCases', 2), ('CtsAppTestCases', 2), ('CtsLocationGnssTestCases', 2), ('CtsMediaV2TestCases', 2), ('CtsIncrementalInstallHostTestCases', 2), ('CtsSensorTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsCameraTestCases', 1), ('CtsAccountsHostTestCases', 1), ('CtsIdentityTestCases', 1), ('CtsTextTestCases', 1)]"	""	"android.incrementalinstall.cts.IncrementalFeatureTest"	"getLaunchApiLevel"	"CtsIncrementalInstallHostTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/MetadataEncryptionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarBluetoothTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncoderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssPseudorangeVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecListTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/companion/CompanionDeviceServiceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/ProAudioActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/IdentityCredentialAuthentication.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1)]"	"[('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(2,CDD,/android/media/cts/AudioManagerTest.java)', 1), ('(16,CDD,/android/appsecurity/cts/ApkVerityInstallTest.java)', 1), ('(1,CDD,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java)', 1), ('(3,CDD,/android/appwidget/cts/RequestPinAppWidgetTest.java)', 1), ('(3,CDD,/android/keystore/cts/CipherTest.java)', 1), ('(1,CDD,/android/webkit/cts/WebSettingsTest.java)', 1), ('(7,CDD,/android/hardware/cts/LowRamDeviceTest.java)', 1), ('(6,CDD,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/companion/CompanionDeviceServiceTestActivity.java)', 1), ('(1,CDD,/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java)', 1), ('(3,CDD,/android/security/cts/MetadataEncryptionTest.java)', 1), ('(1,CDD,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java)', 1), ('(3,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java)', 1), ('(2,CDD,/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java)', 1), ('(2,CDD,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(5,CDD,/com/android/cts/verifier/audio/ProAudioActivity.java)', 1), ('(2,CDD,/com/android/cts/verifier/security/IdentityCredentialAuthentication.java)', 1), ('(2,CDD,/android/car/cts/CarBluetoothTest.java)', 1), ('(3,CDD,/android/graphics/cts/PaintTest.java)', 1), ('(1,CDD,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(2,CDD,/android/content/cts/AvailableIntentsTest.java)', 1), ('(2,CDD,/android/media/cts/EncoderTest.java)', 1), ('(2,CDD,/android/app/cts/SystemFeaturesTest.java)', 1), ('(1,CDD,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(2,CDD,/android/text/cts/FontCoverageTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(3,CDD,/android/location/cts/gnss/GnssPseudorangeVerificationTest.java)', 1), ('(6,CDD,/android/mediav2/cts/CodecListTest.java)', 1), ('(3,CDD,/android/incrementalinstall/cts/IncrementalFeatureTest.java)', 1)]"	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[();        install.run(expectingSuccess);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 2), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CDD]:[2]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CDD]:[1]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CDD]:[1]:method_text:[ustSuggestedStreamVolume(ADJUST_RAISE, 66747, 0);    }    @CddTest(requirement=""5.4.1/C-1-4"")   ])', 1), ('([2:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[2]:method_text:[     getDevice().uninstallPackage(PACKAGE_NAME);    }    @CddTest(requirement = ""9.10/C-0-3"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[   verifyFsverityInstall(incremental, BASE_APK);    }    @CddTest(requirement = ""9.10/C-0-3"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[Install(incremental, BASE_APK, SPLIT_APK);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[stall(incremental, BASE_APK, BASE_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[PK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[cremental, BASE_APK, SPLIT_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[l(updateIncremental, SPLIT_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[ll(updateIncremental, BASE_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[erityInstall(updateIncremental, BASE_APK);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[X)                .runExpectingFailure();    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[l(incremental, BASE_APK_DM, SPLIT_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[stall(incremental, BASE_APK_DM);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[tal, BASE_APK_DM, SPLIT_APK_DM);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[CDD]:[1]:method_text:[Frequency),                    actualMinFrequency <=  hifiMinFrequency + 0.1);        }    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[dp_lowram=96,""                + ""icon_format=PNG,""                + ""icon_quality=100"";    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));    }    @CddTest(requirement=""3.8.1/C-1-2"")   ])', 1), ('([2:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[2]:method_text:[he extras        assertEquals(""dummy-2"", resultReceiver.result.getStringExtra(""dummy""));    }   ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[1]:method_text:[                AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());    }   ])', 1), ('([3:/android/keystore/cts/CipherTest.java]:[CDD]:[3]:method_text:[ close() throws Exception {            mLockCredential.close();        }    }    @Presubmit   ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[CDD]:[1]:method_text:[l:\\n%s"", patternString, useragent),                    patternMatcher.find());        }    }   ])', 1), ('([2:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[2]:method_text:[ces reported memory to ensure it meets the minimum values described     * in CDD 7.6.1.     */   ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[44);            } else {                assertMinMemoryMb(592);            }        }    }   ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[  mContext.getExternalFilesDir(null),                MIN_SHARED_DATA_PARTITION_SIZE_GB);    }   ])', 1), ('([3:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[3]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                size > minSizeBytes);    }}])', 1), ('([2:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[2]:method_text:[;        mBestDevice = getBestDevice();    }    @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[l, mVulkanHardwareCompute.version);        }    }    @CddTest(requirement = ""7.1.4.2/C-3-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[atures"", 0x3 /* importable + exportable */));    }    @CddTest(requirement = ""7.1.4.2/C-1-7"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[viceExtension(""VK_KHR_incremental_present"", 1);    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[ null && mVulkanHardwareLevel.version >= 0);    }    @CddTest(requirement = ""7.1.4.2/C-1-11"")   ])', 1), ('([2:/com/android/cts/verifier/companion/CompanionDeviceServiceTestActivity.java]:[CDD]:[2]:method_text:[null"");            }        } else super.onActivityResult(requestCode, resultCode, data);    }}])', 1), ('([1:/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java]:[CDD]:[1]:method_text:[ is closed"");        } catch (IllegalStateException e) {            // Expected.        }    }}])', 1), ('([2:/android/security/cts/MetadataEncryptionTest.java]:[CDD]:[2]:method_text:[ryption/metadata     *     * @throws Exception     */    @CddTest(requirement=""9.9.3/C-1-5"")   ])', 1), ('([1:/android/security/cts/MetadataEncryptionTest.java]:[CDD]:[1]:method_text:[    getDevice().hasFeature(""feature:android.hardware.security.model.compatible""));        }    }}])', 1), ('([1:/com/android/cts/verifier/camera/its/ItsService.java]:[CDD]:[1]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java]:[CDD]:[2]:method_text:[    }        }    }    /**     * Make sure the internal AIDL methods are protected.     */   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[CDD]:[3]:method_text:[ic final String SHORTCUT_ID = ""s12345"";    @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[IM_SLOT_0);            SimContacts.removeSimAccounts(mResolver, SIM_SLOT_1);        });    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[ut this should not be done for the local account.     */    @CddTest(requirement=""3.18/C-1-4"")   ])', 1), ('([2:/android/hardware/camera2/cts/CameraTestUtils.java]:[CDD]:[2]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([5:/com/android/cts/verifier/audio/ProAudioActivity.java]:[CDD]:[5]:method_text:[audio_proaudio_NA));            }            calculatePass();            break;        }    }}])', 1), ('([2:/com/android/cts/verifier/security/IdentityCredentialAuthentication.java]:[CDD]:[2]:method_text:[ RuntimeException(""Error encoding CBOR"", e);        }        return baos.toByteArray();    }}])', 1), ('([1:/android/car/cts/CarBluetoothTest.java]:[CDD]:[1]:method_text:[ented), or for the    // configured timeout. If all required profiles connect, the test passes.   ])', 1), ('([1:/android/car/cts/CarBluetoothTest.java]:[CDD]:[1]:method_text:[(mBluetoothAdapter);        waitForProfileConnections();        checkProfileConnections();    }}])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[        Typeface.MONOSPACE,            Typeface.SANS_SERIF,            Typeface.SERIF,    };   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());    }    @CddTest(requirement=""3.8.13/C-1-2"")   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[SCULAPIUS                p.hasGlyph(""\\uD83D\\uDC69\\u200D\\u2695\\uFE0F""));  // above + VS16    }   ])', 1), ('([1:/android/host/accounts/BaseMultiUserTest.java]:[CDD]:[1]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([2:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[CDD]:[2]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[CDD]:[1]:method_text:[en url is http://web_address,     * it will open a browser window to the URL specified.     */   ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[CDD]:[1]:method_text:[ntent.ACTION_POWER_USAGE_SUMMARY));        }    }    @CddTest(requirement = ""7.4.2.6/C-1-1"")   ])', 1), ('([1:/android/media/cts/EncoderTest.java]:[CDD]:[1]:method_text:[ltEncoders.put(mime, codec.getName());        codec.release();        return isDefault;    }   ])', 1), ('([1:/android/media/cts/EncoderTest.java]:[CDD]:[1]:method_text:[ithFormats(MediaFormat.MIMETYPE_AUDIO_AMR_WB, formats);    }    @CddTest(requirement=""5.1.3"")   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[properly prefixed with ""android."" that are not defined in     * {@link PackageManager}.     */   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[          if (camera != null) {                camera.release();            }        }    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[CDD]:[1]:method_text:[tStackTrace();            assertTrue(false);        }        return certificateChain;    }   ])', 1), ('([2:/android/text/cts/FontCoverageTest.java]:[CDD]:[2]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([2:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[CDD]:[2]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([2:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[2]:method_text:[d.   * This tests uses actual data retrieved from Gnss HAL.   */  @CddTest(requirement=""7.3.3"") ])', 1), ('([1:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[1]:method_text:[instant mode"")    @RequiresDevice  // emulated devices do not support real measurements so far.   ])', 1), ('([2:/android/mediav2/cts/CodecListTest.java]:[CDD]:[2]:method_text:[   * adheres to additional requirements (support for min profile/level, ...) set by cdd.     */   ])', 1), ('([4:/android/mediav2/cts/CodecListTest.java]:[CDD]:[4]:method_text:[                       CodecTestBase.hasEncoder(MediaFormat.MIMETYPE_VIDEO_VP8));        }    }}])', 1), ('([2:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[2]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);    }    @CddTest(requirement=""4/C-1-1"")   ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[1]:method_text:[ture android.software.incremental_delivery"")));    }    @CddTest(requirement=""4/C-1-1,C-3-1"")   ])', 1)]"	""	""	"[('CDD', 68)]"	"[('[android.appsecurity.cts.ApkVerityInstallTest isIncrementalDeliveryV2Feature CtsAppSecurityHostTestCases]', 2), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustSuggestedStreamVolumeWithIllegalArguments CtsMediaTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testPressureRange CtsSensorTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest testGetShortcutIcon CtsShortcutManagerTestCases]', 1), ('[android.appwidget.cts.RequestPinAppWidgetTest testPinWidget_launcher2 CtsAppWidgetTestCases]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked CtsKeystoreTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testUserAgentStringTest CtsWebkitTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest DisplayMetrics CtsHardwareTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinimumMemory CtsHardwareTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinSharedDataPartitionSize CtsHardwareTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinDataPartitionSize CtsHardwareTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanHardwareFeatures CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkan1_1Requirements CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanRequiredExtensions CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanVersionForVrHighPerformance CtsGraphicsTestCases]', 1), ('[com.android.cts.verifier.companion.CompanionDeviceServiceTestActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.testcases.Camera2AndroidTestCase isInstantApp CtsCameraTestCases]', 1), ('[android.security.cts.MetadataEncryptionTest testMetadataEncryptionIsEnabled CtsSecurityHostTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest testAccountRemovalWithMergedContact_deletesContacts CtsContactsProviderTestCases]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[com.android.cts.verifier.audio.ProAudioActivity isHDMIValid None]', 1), ('[com.android.cts.verifier.security.IdentityCredentialAuthentication setPassFailButtonClickListeners None]', 1), ('[android.car.cts.CarBluetoothTest disable CtsCarTestCases]', 1), ('[android.car.cts.CarBluetoothTest testRequiredBluetoothProfilesExist CtsCarTestCases]', 1), ('[android.graphics.cts.PaintTest testGetTextPathStringCountTooHigh CtsGraphicsTestCases]', 1), ('[android.graphics.cts.PaintTest testHasGlyph CtsGraphicsTestCases]', 1), ('[android.host.accounts.BaseMultiUserTest listUsers CtsAccountsHostTestCases]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[android.content.cts.AvailableIntentsTest testPowerUsageSummarySettings CtsContentTestCases]', 1), ('[android.media.cts.EncoderTest testAMRWBEncoders CtsMediaTestCases]', 1), ('[android.app.cts.SystemFeaturesTest testCameraFeatures CtsAppTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[android.location.cts.gnss.GnssPseudorangeVerificationTest testPseudorangeValue CtsLocationGnssTestCases]', 1), ('[android.mediav2.cts.CodecListTest testCddRequiredCodecsAvailability CtsMediaV2TestCases]', 1), ('[android.incrementalinstall.cts.IncrementalFeatureTest testFeatureAvailable CtsIncrementalInstallHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.1.2"	"3.9.1.2"	"C-1-5"	"3.9.1.2/C-1-5"	"03090102.670105"	"""C-1-5] MUST send ACTION_PROFILE_PROVISIONING_COMPLETE broadcast to the work profile DPC when provisioning is initiated by the android.app.action.PROVISION_MANAGED_PROFILE intent."""	""	""	"PROVISION_MANAGED_PROFILE DPC android.app.action.PROVISION ACTION_PROFILE_PROVISIONING_COMPLETE"	""	""	""	""	"[('library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest', 61), ('com.android.cts.deviceandprofileowner.SuspendPackageTest', 2), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 2), ('com.android.cts.comp.provisioning.ManagedProfileProvisioningTest', 2), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerHostSideTransferTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('com.android.cts.verifier.managedprovisioning.Utils', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('processor.main.java.com.android.bedstead.remotedpc.processor.Processor', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('com.android.cts.deviceowner.PreDeviceOwnerTest', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi30', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1)]"	"[('users', 36), ('devicePolicy', 34), ('createUser', 18), ('createAndStart', 18), ('userHandle', 16), ('remove', 13), ('getDeviceOwner', 12), ('getDevice', 9), ('devicePolicyController', 8), ('any', 5), ('tearDown', 4), ('setUp', 3), ('show', 3), ('deviceOwner', 3), ('profileOwner', 3), ('devicePolicyManager', 3), ('getPackageManager', 2), ('getBuild', 2), ('BigTextStyle', 1), ('TvExtender', 1), ('build', 1), ('getSupportedSourceVersion', 1), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1), ('getName', 1), ('DeviceState', 1), ('deviceOwner_noDeviceOwner_returnsNull', 1), ('deviceOwner_nonRemoteDpcDeviceOwner_returnsNull', 1), ('deviceOwner_remoteDpcDeviceOwner_returnsInstance', 1), ('profileOwner_noProfileOwner_returnsNull', 1), ('profileOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userHandle_null_throwsException', 1), ('profileOwner_userHandle_noProfileOwner_returnsNull', 1), ('profileOwner_userHandle_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userHandle_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userReference_null_throwsException', 1), ('profileOwner_userReference_noProfileOwner_returnsNull', 1), ('profileOwner_userReference_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userReference_remoteDpcProfileOwner_returnsInstance', 1), ('any_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userHandle_null_throwsException', 1), ('any_userHandle_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userHandle_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userHandle_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userReference_null_throwsException', 1), ('any_userReference_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userReference_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userReference_remoteDpcProfileOwner_returnsProfileOwner', 1), ('setAsDeviceOwner_userHandle_null_throwsException', 1), ('setAsDeviceOwner_userHandle_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userHandle_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userHandle_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsDeviceOwner_userReference_null_throwsException', 1), ('setAsDeviceOwner_userReference_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userReference_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userReference_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsProfileOwner_userHandle_null_throwsException', 1), ('setAsProfileOwner_userHandle_alreadySet_doesNothing', 1), ('setAsProfileOwner_userHandle_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userHandle_doesNotHaveProfileOwner_setsProfileOwner', 1), ('setAsProfileOwner_userReference_null_throwsException', 1), ('setAsProfileOwner_userReference_alreadySet_doesNothing', 1), ('setAsProfileOwner_userReference_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userReference_doesNotHaveProfileOwner_setsProfileOwner', 1), ('devicePolicyController_returnsDevicePolicyController', 1), ('remove_deviceOwner_removes', 1), ('remove_profileOwner_removes', 1), ('frameworkCall_makesCall', 1), ('getCurrentFailedPasswordAttempts', 1), ('frameworkCall_onProfile_makesCall', 1), ('frameworkCallRequiresProfileOwner_notProfileOwner_throwsSecurityException', 1), ('forDevicePolicyController_nullDevicePolicyController_throwsException', 1), ('forDevicePolicyController_nonRemoteDpcDevicePolicyController_throwsException', 1), ('forDevicePolicyController_remoteDpcDevicePolicyController_returnsRemoteDpc', 1)]"	"[('CtsDevicePolicyManagerTestCases', 4), ('CtsDevicePolicyTestCases', 2), ('CtsMediaParserTestCases', 1), ('CtsTvTestCases', 1)]"	""	"library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest"	"devicePolicyController"	""	"[('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java', 61), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1)]"	"[('(2,DPC,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(4,DPC,/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java)', 1), ('(2,DPC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/verifier/managedprovisioning/Utils.java)', 1), ('(4,DPC,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(4,DPC,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(2,DPC,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(19,DPC,/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java)', 1), ('(2,DPC,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(2,DPC,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/deviceowner/PreDeviceOwnerTest.java)', 1), ('(1,DPC,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(4,DPC,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(27,DPC,/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(2,PROVISION_MANAGED_PROFILE,/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java)', 1), ('(179,DPC,/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java)', 1)]"	"[('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[);        } finally {            remoteDPC.devicePolicyController().remove();        }    }   ])', 4), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 2), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[        } finally {            deviceOwner.devicePolicyController().remove();        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[    } finally {            sTestApis.devicePolicy().getDeviceOwner().remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[PC.devicePolicyController());        } finally {            profile.remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);    }}])', 1), ('([4:/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java]:[DPC]:[4]:method_text:[NCOMING_TEST);            installAppAsUser(TRANSFER_OWNER_INCOMING_APK, mUserId);        }    }}])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {        testAssetExtraction(""wav/sample_ima_adpcm.wav"");    }   ])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/Utils.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ckageManager().hasSystemFeature(                PackageManager.FEATURE_SECURE_LOCK_SCREEN);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[1]:method_text:[RECEIVER_PKG);    }    /**     * Verify that we cannot suspend launcher and dpc app.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[3]:method_text:[);        assertWithMessage(""package %s suspension"", pkg).that(actual).isEqualTo(expected);    }}])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[provider that provides enterprise slice cannot     * see the enterprise slice requests.     */   ])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[()), offerCallback);        offerCallback.assertNoCallback();        return offerCallback;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases. * */public class ResetPasswordTest extends BaseDeviceAdminTest {   ])', 1), ('([19:/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java]:[DPC]:[19]:method_text:[getMessager()                .printMessage(Diagnostic.Kind.ERROR, errorText, errorElement);    }}])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[e(ComponentName, String)} */public class CertInstallDelegateTest extends BaseJUnit3TestCase {   ])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[DPC]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[           .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[DPC]:[1]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([4:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[DPC]:[4]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 1), ('([27:/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java]:[DPC]:[27]:method_text:[min void addPersistentPreferredActivity(            IntentFilter filter, ComponentName activity);}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java]:[DPC]:[1]:method_text:[ws Exception {        runDeviceTestsAsUser(DEVICE_ADMIN_PKG, className, testName, mUserId);    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[DPC]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[tends AndroidTestCase {    private static final String TAG = ""ManagedProfileProvisioningTest"";   ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ntent) {        return intent != null && intent.getExtras().containsKey(Intent.EXTRA_USER);    }}])', 1), ('([7:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[7]:method_text:[s    public static void teardownClass() {        sNonRemoteDpcTestApp.uninstall(sUser);    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Owner_noDeviceOwner_returnsNull() {        assertThat(RemoteDpc.deviceOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.deviceOwner()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.profileOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[rofileOwner()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.profileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[e.userHandle())).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[nterException.class,                () -> RemoteDpc.profileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[oDeviceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[moteDpc.any()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[emoteDpc.any()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[        assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser.userHandle())).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.userHandle())).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[())).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[     assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser)).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[teDpc.any(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Dpc.any(sUser)).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[le)).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[terException.class,                () -> RemoteDpc.setAsDeviceOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ption.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Exception.class,                () -> RemoteDpc.setAsDeviceOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[on.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[erException.class,                () -> RemoteDpc.setAsProfileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[tion.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[xception.class,                () -> RemoteDpc.setAsProfileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[n.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[Policy().getDeviceOwner());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[oteDPC.remove();        assertThat(sTestApis.devicePolicy().getDeviceOwner()).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[eed to support the case where there is both a DO and a PO on    //  older versions of Android?   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[ntFailedPasswordAttempts();        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[ succeeds            remoteDPC.devicePolicyManager().isUsingUnifiedPassword();        }    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[.isUsingUnifiedPassword());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.forDevicePolicyController(null));    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Controller(deviceOwner));        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([8:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[8]:method_text:[                 .isNotNull();        } finally {            remoteDPC.remove();        }    }])', 1)]"	""	""	"[('DPC', 77), ('PROVISION_MANAGED_PROFILE', 4)]"	"[('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNull None]', 19), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNotNull None]', 15), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isUsingUnifiedPassword None]', 2), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testWavWithImaAdpcm CtsMediaParserTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSetPackagesNotSuspended None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSuspendNotSuspendablePackages None]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_enableService_issueRequest CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_disableService_noIssueRequest CtsDevicePolicyTestCases]', 1), ('[processor.main.java.com.android.bedstead.remotedpc.processor.Processor latest None]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceowner.PreDeviceOwnerTest testIsProvisioningNotAllowedForManagedProfileAction None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testRevokeKeyPairFromApp_keyNotUsable None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtsc3FrontendSettings CtsTvTestCases]', 1), ('[communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager isUsingUnifiedPassword None]', 1), ('[com.android.cts.comp.provisioning.ManagedProfileProvisioningTest testProvisioningCorpOwnedManagedProfile None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest TestApis None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userReference_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userReference_nonExistingUser_throwsException None]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.1  . These are in the Android source tree at"	"7.1.4.1"	"C-0-1"	"7.1.4.1/C-0-1"	"07010401.670001"	"""C-0-1] MUST correctly identify the supported OpenGL ES versions (1.1, 2.0, 3.0, 3.1, 3.2) through the managed APIs (such as via the GLES10.getString() method) and the native APIs."""	""	""	"GLES10 GLES10.getString getString()"	""	""	""	""	"[('android.deviceconfig.cts.DeviceConfigApiTests', 12), ('android.opengl.cts.WrapperTest', 2), ('android.os.cts.BundleTest', 1), ('android.content.pm.cts.PackageManagerGetPropertyTest', 1), ('com.android.angleIntegrationTest.common.GlesView', 1), ('android.content.res.cts.ResourcesTest', 1), ('android.fragment.cts.FragmentLifecycleTest', 1), ('android.incrementalinstall.incrementaltestapp.MainActivity', 1), ('android.content.cts.ContextTest', 1), ('android.server.wm.ActivityManagerGetConfigTests', 1), ('android.database.cts.AbstractWindowedCursorTest', 1), ('android.content.pm.cts.ResourcesHardeningTest', 1), ('android.inputmethodservice.cts.devicetest.DirectShellCommand', 1), ('android.content.pm.cts.PackageManagerQueryPropertyTest', 1)]"	"[('getString', 4), ('beginTransaction', 3), ('size', 3), ('getFileDescriptor', 3), ('getEGL', 2), ('createEGL', 2), ('toLowerCase', 2), ('getFragmentManager', 2), ('commit', 2), ('executePendingTransactions', 2), ('getChildFragmentManager', 2), ('loadDynamicAsset', 2), ('loadDynamicCode', 2), ('loadCompressedNativeLib', 2), ('loadUncompressedNativeLib', 2), ('getStringFromNative', 2), ('getInstrumentation', 2), ('close', 2), ('toLanguageTag', 2), ('createBackgroundLooper', 2), ('createEmptyInput', 2), ('createReliablePipe', 2), ('glGetString', 1), ('getClass', 1), ('getSimpleName', 1), ('GlesView', 1), ('getRenderer', 1), ('retainInstanceOneOnCreate', 1), ('OnCreateFragment', 1), ('popBackStackImmediate', 1), ('Runnable', 1), ('run', 1), ('commitNow', 1), ('getContext', 1), ('getChildFragment', 1), ('ChildFragmentManagerChildFragment', 1), ('Bundle', 1), ('getArguments', 1), ('getTargetFragment', 1), ('getApplicationContext', 1), ('getPackageName', 1), ('getAssets', 1), ('available', 1), ('DynamicCodeShim', 1), ('CompressedNativeLib', 1), ('UncompressedNativeLib', 1), ('setUp', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getUiAutomation', 1), ('ByteArrayOutputStream', 1), ('toByteArray', 1), ('getGlExtensionsFromDriver', 1), ('getConfigs', 1), ('addExtensionsForConfig', 1), ('getLocales', 1), ('getTotalRam', 1), ('checkGetString', 1), ('getCode', 1), ('getData', 1), ('getException', 1), ('Object', 1), ('start', 1), ('getLooper', 1), ('defaultCharset', 1), ('readLine', 1), ('toString', 1), ('notifyAll', 1), ('myLooper', 1), ('quitSafely', 1), ('dup', 1), ('shellCommand', 1)]"	"[('CtsDeviceConfigTestCases', 12), ('CtsContentTestCases', 5), ('CtsOpenGLTestCases', 2), ('CtsFragmentTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsDatabaseTestCases', 1)]"	""	"android.content.pm.cts.PackageManagerQueryPropertyTest"	"shellCommand"	"CtsContentTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiTests.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/WrapperTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/BundleTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerGetPropertyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/angle/app/common/src/com/android/angleIntegrationTest/common/GlesView.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ResourcesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/FragmentLifecycleTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/app/v1/src/android/incrementalinstall/incrementaltestapp/MainActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContextTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityManagerGetConfigTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/AbstractWindowedCursorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ResourcesHardeningTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/DirectShellCommand.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerQueryPropertyTest.java', 1)]"	"[('(18,getString(),/android/deviceconfig/cts/DeviceConfigApiTests.java)', 1), ('(1,getString(),/android/os/cts/BundleTest.java)', 1), ('(5,getString(),/android/content/pm/cts/PackageManagerGetPropertyTest.java)', 1), ('(1,getString(),/com/android/angleIntegrationTest/common/GlesView.java)', 1), ('(1,getString(),/android/content/res/cts/ResourcesTest.java)', 1), ('(2,getString(),/android/fragment/cts/FragmentLifecycleTest.java)', 1), ('(1,getString(),/android/incrementalinstall/incrementaltestapp/MainActivity.java)', 1), ('(1,getString(),/android/content/cts/ContextTest.java)', 1), ('(13,GLES10,/android/opengl/cts/WrapperTest.java)', 1), ('(3,GLES10,/android/server/wm/ActivityManagerGetConfigTests.java)', 1), ('(1,getString(),/android/database/cts/AbstractWindowedCursorTest.java)', 1), ('(1,getString(),/android/content/pm/cts/ResourcesHardeningTest.java)', 1), ('(1,getString(),/android/inputmethodservice/cts/devicetest/DirectShellCommand.java)', 1), ('(5,getString(),/android/content/pm/cts/PackageManagerQueryPropertyTest.java)', 1)]"	"[('([1:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[getString()]:[1]:method_text:[;    }    /**     * Checks that getString() for null property returns default value.     */   ])', 1), ('([2:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[getString()]:[2]:method_text:[   * Checks that getString() for null property returns default value even if it is null.     */   ])', 1), ('([2:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[getString()]:[2]:method_text:[result);    }    /**     * Checks that getString() returns string saved in property.     */   ])', 1), ('([2:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[getString()]:[2]:method_text:[Checks that getString() fails with NullPointerException when called with null namespace.     */   ])', 1), ('([2:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[getString()]:[2]:method_text:[    * Checks that getString() fails with NullPointerException when called with null key.     */   ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[getString()]:[1]:method_text:[    }    /**     * Checks that getBoolean() for null property returns default value.     */   ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[getString()]:[1]:method_text:[}    /**     * Checks that getBoolean() returns false for any invalid property value.     */   ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[getString()]:[1]:method_text:[  /**     * Checks that Properties.getString() for null property returns default value.     */   ])', 1), ('([2:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[getString()]:[2]:method_text:[roperties.getString() for null property returns default value even if it is     * null.     */   ])', 1), ('([2:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[getString()]:[2]:method_text:[  }    /**     * Checks that Properties.getString() returns string saved in property.     */   ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[getString()]:[1]:method_text:[ /**     * Checks that Properties.getBoolean() for null property returns default value.     */   ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[getString()]:[1]:method_text:[rties.getBoolean() returns false for any invalid (non parselable) property     * value.     */   ])', 1), ('([1:/android/os/cts/BundleTest.java]:[getString()]:[1]:method_text:[ng(KEY1));        roundtrip();        assertEquals(""android"", mBundle.getString(KEY1));    }   ])', 1), ('([5:/android/content/pm/cts/PackageManagerGetPropertyTest.java]:[getString()]:[5]:method_text:[erty.getResourceId());        } else {            fail(""Unknown property type"");        }    }}])', 1), ('([1:/com/android/angleIntegrationTest/common/GlesView.java]:[getString()]:[1]:method_text:[ains(""angle"")) {                return false;            }        }        return true;    }}])', 1), ('([1:/android/content/res/cts/ResourcesTest.java]:[getString()]:[1]:method_text:[rGo = mResources.getString(R.string.go, ""%1$s%%"", 12);        assertEquals(""Go"", strGo);    }   ])', 1), ('([2:/android/fragment/cts/FragmentLifecycleTest.java]:[getString()]:[2]:method_text:[            super.onCreate(savedInstanceState);            onCreateCalled = true;        }    }}])', 1), ('([1:/android/incrementalinstall/incrementaltestapp/MainActivity.java]:[getString()]:[1]:method_text:[nent);        intent.putExtra(COMPONENT_STATUS_KEY, status);        sendBroadcast(intent);    }}])', 1), ('([1:/android/content/cts/ContextTest.java]:[getString()]:[1]:method_text:[ resource id should not be accepted."");        } catch (NotFoundException e) {        }    }   ])', 1), ('([1:/android/opengl/cts/WrapperTest.java]:[GLES10]:[1]:method_text:[Surface mEGLSurface;    /**     * Tests range-checking on glGetIntegerv in GLES 1.x.     */   ])', 1), ('([12:/android/opengl/cts/WrapperTest.java]:[GLES10]:[12]:method_text:[  eglRelease();    }    /**     * Tests range-checking on glGetIntegerv in GLES 2.x.     */   ])', 1), ('([3:/android/server/wm/ActivityManagerGetConfigTests.java]:[GLES10]:[3]:method_text:[""Expected features does not match"",                featureNames, deviceConfig.features);    }   ])', 1), ('([1:/android/database/cts/AbstractWindowedCursorTest.java]:[getString()]:[1]:method_text:[ROW_INDEX0, COLUMN_INDEX0));        assertEquals(str, mCursor.getString(COLUMN_INDEX0));    }   ])', 1), ('([1:/android/content/pm/cts/ResourcesHardeningTest.java]:[getString()]:[1]:method_text:[ws Exception {        testIncrementalForeignPackageResources(TestUtils::checkGetString);    }   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/DirectShellCommand.java]:[getString()]:[1]:method_text:[        } catch (Exception e) {            return new Result(-1, null, null, e);        }    }}])', 1), ('([5:/android/content/pm/cts/PackageManagerQueryPropertyTest.java]:[getString()]:[5]:method_text:[         + "", package: "" + packageName                + "", class: "" + className, 1, match);    }}])', 1)]"	""	""	"[('getString()', 23), ('GLES10', 3)]"	"[('[android.deviceconfig.cts.DeviceConfigApiTests testSetAndGetProperties_overrideValue CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests testGetString_empty CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests testGetString_nullDefault CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests testGetString_nonEmpty CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests testGetString_nullNamespace CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests testGetString_nullName CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests testGetBoolean_valid CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests testSetProperty_nullName CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests testGetPropertiesString_empty CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests testGetPropertiesString_nullDefault CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests testGetPropertiesString_nonEmpty CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests testGetPropertiesBoolean_valid CtsDeviceConfigTestCases]', 1), ('[android.os.cts.BundleTest testGetString None]', 1), ('[android.content.pm.cts.PackageManagerGetPropertyTest testPackageRemoval CtsContentTestCases]', 1), ('[android.content.res.cts.ResourcesTest testGetString CtsContentTestCases]', 1), ('[android.fragment.cts.FragmentLifecycleTest isFinishing CtsFragmentTestCases]', 1), ('[android.content.cts.ContextTest testGetString CtsContentTestCases]', 1), ('[android.opengl.cts.WrapperTest testGetIntegerv1 CtsOpenGLTestCases]', 1), ('[android.server.wm.ActivityManagerGetConfigTests isLowRamDevice CtsWindowManagerDeviceTestCases]', 1), ('[android.database.cts.AbstractWindowedCursorTest testGetString CtsDatabaseTestCases]', 1), ('[android.content.pm.cts.PackageManagerQueryPropertyTest testInvalidArguments CtsContentTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.1  . These are in the Android source tree at"	"7.1.4.1"	"C-4-1"	"7.1.4.1/C-4-1"	"07010401.670401"	"""C-4-1] MUST support the OpenGL ES Android Extension Pack in its entirety. If device implementations support the OpenGL ES Android Extension Pack in its entirety, they:"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.2  .  These are in the Android source tree at"	"7.1.4.2"	"C-1-2"	"7.1.4.2/C-1-2"	"07010402.670102"	"""C-1-2] MUST enumerate, at least one VkPhysicalDevice for the Vulkan native API vkEnumeratePhysicalDevices() ."""	""	""	"vkEnumeratePhysicalDevices()"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.2  .  These are in the Android source tree at"	"7.1.4.2"	"C-1-8"	"7.1.4.2/C-1-8"	"07010402.670108"	"""C-1-8] MUST report the maximum version of the Vulkan dEQP Tests supported via the android.software.vulkan.deqp.level feature flag."""	""	""	"android.software.vulkan.deqp.level EQP"	""	""	""	""	"[('android.graphics.cts.VulkanDeqpLevelTest', 3), ('android.graphics.cts.OpenGlEsDeqpLevelTest', 2), ('com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite', 1), ('com.android.cts.apicoverage.TestCaseReport', 1), ('com.android.cts.releaseparser.TestSuiteParser', 1), ('android.hardware.camera2.cts.HeifWriterTest', 1), ('com.android.compatibility.common.tradefed.presubmit.CtsConfigLoadingTest', 1), ('android.midi.cts.MidiEchoTest', 1)]"	"[('getType', 7), ('newBuilder', 7), ('getAnnotations', 5), ('println', 4), ('getName', 4), ('getMethods', 3), ('getSimpleName', 3), ('setup', 3), ('getTargetContext', 3), ('getPackageManager', 3), ('printUsage', 2), ('getAccessFlags', 2), ('getValue', 2), ('length', 2), ('getSystemAvailableFeatures', 2), ('getElements', 1), ('toString', 1), ('printStackTrace', 1), ('getClasses', 1), ('entries', 1), ('getAbsolutePath', 1), ('getClassLoader', 1), ('hasMoreElements', 1), ('nextElement', 1), ('nanoTime', 1), ('notifyAll', 1)]"	"[('CtsGraphicsTestCases', 5), ('CtsCameraTestCases', 1), ('CtsMidiTestCases', 1)]"	""	"android.midi.cts.MidiEchoTest"	"notifyAll"	"CtsMidiTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/OpenGlEsDeqpLevelTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/TestCaseReport.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/TestSuiteParser.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/midi/src/android/midi/cts/MidiEchoTest.java', 1)]"	"[('(2,EQP,/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java)', 1), ('(5,EQP,/com/android/cts/apicoverage/TestCaseReport.java)', 1), ('(1,android.software.vulkan.deqp.level,/android/graphics/cts/VulkanDeqpLevelTest.java)', 1), ('(10,EQP,/android/graphics/cts/VulkanDeqpLevelTest.java)', 1), ('(3,EQP,/com/android/cts/releaseparser/TestSuiteParser.java)', 1), ('(3,EQP,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(3,EQP,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(10,EQP,/android/graphics/cts/OpenGlEsDeqpLevelTest.java)', 1), ('(1,EQP,/android/midi/cts/MidiEchoTest.java)', 1)]"	"[('([2:/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java]:[EQP]:[2]:method_text:[new GoNegReqPbcTestCase(context));        sTestSuite.add(new GoNegReqPinTestCase(context));    }}])', 1), ('([5:/com/android/cts/apicoverage/TestCaseReport.java]:[EQP]:[5]:method_text:[        printTestSuiteSummary(ts1, outputSummaryFilePath, tsContent.getKnownFailuresList());    }}])', 1), ('([1:/android/graphics/cts/VulkanDeqpLevelTest.java]:[android.software.vulkan.deqp.level]:[1]:method_text:[              }            }        }    }    @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")   ])', 1), ('([4:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[4]:method_text:[              }            }        }    }    @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")   ])', 1), ('([6:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[6]:method_text:[kageManager.FEATURE_VULKAN_DEQP_LEVEL,                        MINIMUM_VULKAN_DEQP_LEVEL));    }}])', 1), ('([3:/com/android/cts/releaseparser/TestSuiteParser.java]:[EQP]:[3]:method_text:[thod : classDef.getMethods()) {                            // Junit4 style test case annotated with])', 1), ('([3:/android/hardware/camera2/cts/HeifWriterTest.java]:[EQP]:[3]:method_text:[           }            // TODO: add more key validations.        }        return result;    }}])', 1), ('([3:/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java]:[EQP]:[3]:method_text:[ * -> Exclude deprecated ApkInstaller.     * -> Check if host-side tests are non empty.     */   ])', 1), ('([4:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[EQP]:[4]:method_text:[d setup() {        mPm = InstrumentationRegistry.getTargetContext().getPackageManager();    }   ])', 1), ('([6:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[EQP]:[6]:method_text:[Manager.FEATURE_OPENGLES_DEQP_LEVEL,                        MINIMUM_OPENGLES_DEQP_LEVEL));    }}])', 1), ('([1:/android/midi/cts/MidiEchoTest.java]:[EQP]:[1]:method_text:[o.TYPE_VIRTUAL,                echoInfo.getType());    }    // Is the MidiManager supported?   ])', 1)]"	""	""	"[('EQP', 10), ('android.software.vulkan.deqp.level', 1)]"	"[('[com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite getTestId None]', 1), ('[com.android.cts.apicoverage.TestCaseReport isDirectory None]', 1), ('[android.graphics.cts.VulkanDeqpLevelTest testVulkanDeqpLevel CtsGraphicsTestCases]', 1), ('[com.android.cts.releaseparser.TestSuiteParser getTestSuite None]', 1), ('[android.hardware.camera2.cts.HeifWriterTest testHeif CtsCameraTestCases]', 1), ('[android.graphics.cts.OpenGlEsDeqpLevelTest testOpenGlEsDeqpLevel CtsGraphicsTestCases]', 1), ('[android.midi.cts.MidiEchoTest currentTimeMillis CtsMidiTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.1  . These are in the Android source tree at"	"7.1.4.1"	"C-5-1"	"7.1.4.1/C-5-1"	"07010401.670501"	"""C-5-1] MUST identify the support through the android.hardware.opengles.aep feature flag. If device implementations expose support for the EGL_KHR_mutable_render_buffer extension, they:"""	""	""	"EGL_KHR_ android.hardware.opengles.aep"	""	""	""	""	"[('android.opengl.cts.OpenGlEsVersionTest', 3), ('android.view.cts.TextureViewCtsActivity', 1), ('android.graphics.cts.EGL14Test', 1), ('android.graphics.cts.ASurfaceTextureTest', 1), ('android.graphics.cts.ANativeWindowTest', 1), ('android.graphics.cts.EGL15Test', 1)]"	"[('eglGetError', 15), ('TimeoutException', 4), ('getWindow', 4), ('getSimpleName', 4), ('setup', 4), ('countDown', 3), ('onDestroy', 2), ('onEnterAnimationComplete', 2), ('waitForEnterAnimationComplete', 2), ('getDecorView', 2), ('getTextureView', 2), ('run', 2), ('waitForSurface', 2), ('initGl', 2), ('teardown', 2), ('Object', 1), ('start', 1), ('getLooper', 1), ('setWideColorGamut', 1), ('getColorMode', 1), ('getWidth', 1), ('getHeight', 1), ('initGLExtensionUnsupported', 1), ('await', 1)]"	"[('CtsGraphicsTestCases', 4), ('CtsOpenGLTestCases', 3), ('CtsViewTestCases', 1)]"	""	"android.opengl.cts.OpenGlEsVersionTest"	"teardown"	"CtsOpenGLTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TextureViewCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL14Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ASurfaceTextureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ANativeWindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL15Test.java', 1)]"	"[('(2,EGL_KHR_,/android/view/cts/TextureViewCtsActivity.java)', 1), ('(2,EGL_KHR_,/android/graphics/cts/EGL14Test.java)', 1), ('(2,EGL_KHR_,/android/graphics/cts/ASurfaceTextureTest.java)', 1), ('(2,EGL_KHR_,/android/graphics/cts/ANativeWindowTest.java)', 1), ('(2,EGL_KHR_,/android/graphics/cts/EGL15Test.java)', 1), ('(14,EGL_KHR_,/android/opengl/cts/OpenGlEsVersionTest.java)', 1)]"	"[('([2:/android/view/cts/TextureViewCtsActivity.java]:[EGL_KHR_]:[2]:method_text:[FACE_TYPE, EGL10.EGL_WINDOW_BIT,                    EGL10.EGL_NONE            };        }    }}])', 1), ('([2:/android/graphics/cts/EGL14Test.java]:[EGL_KHR_]:[2]:method_text:[Exception(""eglDestroyContext failed"");        }        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([2:/android/graphics/cts/ASurfaceTextureTest.java]:[EGL_KHR_]:[2]:method_text:[mEglPbuffer, mEglContext)) {      throw new RuntimeException(""eglMakeCurrent failed"");    }  } ])', 1), ('([2:/android/graphics/cts/ANativeWindowTest.java]:[EGL_KHR_]:[2]:method_text:[EglContext)) {            throw new RuntimeException(""eglMakeCurrent failed"");        }    }   ])', 1), ('([2:/android/graphics/cts/EGL15Test.java]:[EGL_KHR_]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_KHR_]:[3]:method_text:[ns, requiredExtension));            }        }    }    @CddTest(requirement=""7.1.4.1/C-6-1"")   ])', 1), ('([7:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_KHR_]:[7]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/H-1-1"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_KHR_]:[4]:method_text:[ager();        return pm.hasSystemFeature(PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE);    }}])', 1)]"	""	""	"[('EGL_KHR_', 8)]"	"[('[android.view.cts.TextureViewCtsActivity glFinish CtsViewTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensionsForVrHighPerformance CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForWideColorDisplay CtsOpenGLTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-2-4"	"8.2/H-2-4"	"08020000.720204"	"""[8.2/H-2-4] MUST ensure a random read performance of at least 40 MB/s. <h3 id=""23_television_requirements"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.6"	"H-1-1"	"5.6/H-1-1"	"05060000.720101"	"""[5.6/H-1-1] MUST have a tap-to-tone latency of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  | [5.6/H-1-1] MUST have a tap-to-tone latency of less than 100 milliseconds using the OboeTester tap-to-tone test or CTS Verifier tap-to-tone test. <h4 id=""2272_camera"" """	""	""	"MEDIA_PERFORMANCE_CLASS android.os.Build.VERSION VERSION_CODES CTS android.os.Build.VERSION_CODES.MEDIA"	""	""	""	""	"[('android.media.cts.SystemMediaRouter2Test', 22), ('android.media.cts.AudioManagerTest', 6), ('android.widget.cts.SearchView_CursorTest', 3), ('android.content.pm.cts.shortcutmanager.throttling.ThrottledTests', 1), ('android.graphics.pdf.cts.Utils', 1), ('android.media.cts.AudioPlaybackConfigurationTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.server.wm.SplashscreenTests', 1), ('android.view.cts.ViewAnimationMatrixTest', 1), ('android.os.cts.IntentLaunchReceiver', 1), ('android.location.cts.gnss.asn1.supl2.supl_report.ResultCode', 1), ('android.database.cts.AbstractCursor_SelfContentObserverTest', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.RenderUtils.DrawParameters', 1), ('android.cts.backup.restoresessionapp.BaseRestoreSessionAppTest', 1), ('com.android.cts.verifier.p2p.RequesterTestActivity', 1), ('android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation', 1), ('android.telephony.cts.CellBroadcastDataMigrationTest', 1), ('android.net.wifi.nl80211.cts.RadioChainInfoTest', 1), ('com.android.cts.deviceowner.wificonfigcreator.WifiConfigCreatorActivity', 1), ('com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite', 1), ('android.gamemanager.cts.GameManagerCtsActivity', 1), ('android.contentcaptureservice.cts.AbstractRootViewActivity', 1), ('com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest', 1), ('android.graphics.cts.Canvas_EdgeTypeTest', 1), ('android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackup2Test', 1), ('android.renderscriptlegacy.cts.ScriptC_set_target_api_13', 1), ('com.android.cts.managedprofile.CameraPolicyTest', 1), ('android.permission.cts.Camera2PermissionTest', 1), ('android.provider.cts.simphonebook.SimPhonebookRequirementsRule', 1), ('android.telephony.cts.AvailableNetworkInfoTest', 1), ('android.widget.cts.SimpleCursorAdapterTest', 1), ('android.uirendering.cts.testclasses.ExactCanvasTests', 1), ('android.graphics.cts.VulkanPreTransformTest', 1)]"	"[('setUp', 14), ('getWidth', 12), ('getHeight', 10), ('getInstrumentation', 7), ('getPackageName', 6), ('getResources', 5), ('tearDown', 5), ('getTargetContext', 5), ('getContext', 5), ('getApplicationContext', 5), ('getClass', 4), ('onEnterAnimationComplete', 4), ('getGrandParent', 4), ('recycle', 3), ('getName', 3), ('enoughToFilter', 3), ('getGrandGrandParent', 3), ('getAutofillId', 3), ('run', 2), ('release', 2), ('edit', 2), ('commit', 2), ('getSystem', 2), ('getSimpleName', 2), ('toLowerCase', 2), ('setup', 2), ('getGameMode', 2), ('onResume', 2), ('getRootView', 2), ('getParent', 2), ('getSubscriptionInfoForRemovableSims', 2), ('size', 2), ('RouteCallback', 1), ('getCacheDir', 1), ('flush', 1), ('Matrix', 1), ('width', 1), ('height', 1), ('getMediaDirString', 1), ('stop', 1), ('DumpOnFailure', 1), ('getAssignedValue', 1), ('getViewMatrix', 1), ('getProjectionMatrix', 1), ('getLight', 1), ('clearSharedPrefs', 1), ('clear', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getPackageManager', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('WcdmaCellInformation', 1), ('super', 1), ('getTag', 1), ('myUserHandle', 1), ('getIntent', 1), ('getAction', 1), ('getChildCount', 1), ('getCursor', 1), ('getActivity', 1), ('onCreate', 1), ('startBackgroundThread', 1), ('stopBackgroundThread', 1), ('SimPhonebookRequirementsRule', 1), ('before', 1), ('getSupportedModemCount', 1), ('getRemovableSimSlotCount', 1), ('makeSimpleCursorAdapter', 1), ('ExactComparer', 1)]"	"[('CtsMediaTestCases', 29), ('CtsWidgetTestCases', 4), ('CtsLocationGnssTestCases', 2), ('CtsTelephonyTestCases', 2), ('CtsGraphicsTestCases', 2), ('CtsPdfTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsViewTestCases', 1), ('CtsDatabaseTestCases', 1), ('CtsWifiTestCases', 1), ('CtsGameManagerTestCases', 1), ('CtsContentCaptureServiceTestCases', 1), ('CtsRenderscriptLegacyTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsSimPhonebookProviderTestCases', 1), ('CtsUiRenderingTestCases', 1)]"	""	"android.graphics.cts.VulkanPreTransformTest"	"ExactComparer"	"CtsGraphicsTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SystemMediaRouter2Test.java', 22), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/throttling/src/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/IntentLaunchReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/AbstractCursor_SelfContentObserverTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/RestoreSessionTest/src/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/RequesterTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellBroadcastDataMigrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/RadioChainInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/WifiConfigCreator/src/com/android/cts/deviceowner/wificonfigcreator/WifiConfigCreatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/gamemanager/src/android/gamemanager/cts/GameManagerCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/AbstractRootViewActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/Canvas_EdgeTypeTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher2/src/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscriptlegacy/src/android/renderscriptlegacy/cts/ScriptC_set_target_api_13.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CameraPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/Camera2PermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/AvailableNetworkInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SimpleCursorAdapterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanPreTransformTest.java', 1)]"	"[('(87,CTS,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(1,CTS,/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java)', 1), ('(3,CTS,/android/graphics/pdf/cts/Utils.java)', 1), ('(4,CTS,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(3,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(1,CTS,/android/server/wm/SplashscreenTests.java)', 1), ('(1,CTS,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(1,CTS,/android/os/cts/IntentLaunchReceiver.java)', 1), ('(5,CTS,/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java)', 1), ('(1,CTS,/android/database/cts/AbstractCursor_SelfContentObserverTest.java)', 1), ('(2,CTS,/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java)', 1), ('(1,CTS,/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java)', 1), ('(7,CTS,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(1,VERSION_CODES,/android/media/cts/AudioManagerTest.java)', 1), ('(17,CTS,/android/media/cts/AudioManagerTest.java)', 1), ('(9,CTS,/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java)', 1), ('(1,CTS,/android/telephony/cts/CellBroadcastDataMigrationTest.java)', 1), ('(3,CTS,/android/net/wifi/nl80211/cts/RadioChainInfoTest.java)', 1), ('(1,CTS,/com/android/cts/deviceowner/wificonfigcreator/WifiConfigCreatorActivity.java)', 1), ('(8,CTS,/android/widget/cts/SearchView_CursorTest.java)', 1), ('(1,CTS,/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java)', 1), ('(3,CTS,/android/gamemanager/cts/GameManagerCtsActivity.java)', 1), ('(1,CTS,/android/contentcaptureservice/cts/AbstractRootViewActivity.java)', 1), ('(11,CTS,/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java)', 1), ('(1,CTS,/android/graphics/cts/Canvas_EdgeTypeTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java)', 1), ('(1,CTS,/android/renderscriptlegacy/cts/ScriptC_set_target_api_13.java)', 1), ('(3,CTS,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(1,CTS,/android/permission/cts/Camera2PermissionTest.java)', 1), ('(1,CTS,/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java)', 1), ('(1,CTS,/android/telephony/cts/AvailableNetworkInfoTest.java)', 1), ('(1,CTS,/android/widget/cts/SimpleCursorAdapterTest.java)', 1), ('(11,CTS,/android/uirendering/cts/testclasses/ExactCanvasTests.java)', 1), ('(4,CTS,/android/graphics/cts/VulkanPreTransformTest.java)', 1)]"	"[('([7:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[7]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 2), ('([14:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[14]:method_text:[callbacks        clearCallbacks();        mUiAutomation.dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[r2ForCts,                MediaRouter2.getInstance(mContext, mContext.getPackageName()));    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[    assertEquals(mContext.getPackageName(), mSystemRouter2ForCts.getClientPackageName());    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[2]:method_text:[ame instance.        assertSame(controller, mSystemRouter2ForCts.getSystemController());    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[Id() {        assertNull(mSystemRouter2ForCts.getController(""nonExistentControllerId""));    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[2]:method_text:[otNull(controllerById);        assertEquals(systemControllerId, controllerById.getId());    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[nd = true;                break;            }        }        assertTrue(routeFound);    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[2]:method_text:[nd = true;                break;            }        }        assertTrue(routeFound);    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[ute(routeToAdd);        assertTrue(addedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[te(ROUTE_ID2);        assertTrue(removedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([3:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[3]:method_text:[argetVolume);        assertTrue(changedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([3:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[3]:method_text:[   mAudioManager.setStreamVolume(AudioManager.STREAM_MUSIC, originalVolume, 0);        }    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[ld());        assertTrue(featuresChangedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([5:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[5]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 1), ('([3:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[3]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 1), ('([4:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[4]:method_text:[erCalled,    // but with MediaRouter2#transfer(controller, route) instead of transferTo(route).   ])', 1), ('([6:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[6]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 1), ('([6:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[6]:method_text:[         mSystemRouter2ForCts.unregisterControllerCallback(controllerCallback);        }    }   ])', 1), ('([5:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[5]:method_text:[         mSystemRouter2ForCts.unregisterControllerCallback(controllerCallback);        }    }   ])', 1), ('([11:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[11]:method_text:[r (RoutingController controller : controllers) {            controller.release();        }    }}])', 1), ('([1:/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java]:[CTS]:[1]:method_text:[ynamicShortcuts(list()));            assertTrue(manager.updateShortcuts(list()));        }    }}])', 1), ('([3:/android/graphics/pdf/cts/Utils.java]:[CTS]:[3]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([4:/android/media/cts/AudioPlaybackConfigurationTest.java]:[CTS]:[4]:method_text:[   // create an AudioPlaybackConfiguration directly, we first need to play something to get one.   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CTS]:[3]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/server/wm/SplashscreenTests.java]:[CTS]:[1]:method_text:[TRA_INTENT, startIntent);        homeActivity.sendCommand(COMMAND_START_ACTIVITY, data);    }   ])', 1), ('([1:/android/view/cts/ViewAnimationMatrixTest.java]:[CTS]:[1]:method_text:[     new ActivityTestRule<>(ViewAnimationMatrixActivity.class, false, false);    @UiThreadTest   ])', 1), ('([1:/android/os/cts/IntentLaunchReceiver.java]:[CTS]:[1]:method_text:[        if (innerIntent != null) {            context.sendBroadcast(innerIntent);        }    }}])', 1), ('([5:/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java]:[CTS]:[5]:method_text:[blic String toIndentedString(String indent) {    return ""ResultCode = "" + getValue() + "";\\n"";  }}])', 1), ('([1:/android/database/cts/AbstractCursor_SelfContentObserverTest.java]:[CTS]:[1]:method_text:[.AndroidTestCase;public class AbstractCursor_SelfContentObserverTest extends AndroidTestCase{   ])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java]:[CTS]:[2]:method_text:[       return mProjectionMatrix;    }    public Light getLight() {        return mLight;    }}])', 1), ('([1:/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java]:[CTS]:[1]:method_text:[, int prefValue) {        assertThat(mPreferences.getInt(prefKey, 0)).isEqualTo(prefValue);    }}])', 1), ('([7:/com/android/cts/verifier/p2p/RequesterTestActivity.java]:[CTS]:[7]:method_text:[ }).show();    }    private TestCaseListener getTestCaseListener() {        return this;    }}])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[VERSION_CODES]:[1]:method_text:[         return maxRingVol;        } else {            return maxRingVol - 1;        }    }   ])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[CTS]:[4]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([6:/android/media/cts/AudioManagerTest.java]:[CTS]:[6]:method_text:[);        mAudioManager.playSoundEffect(AudioManager.FX_FOCUS_NAVIGATION_RIGHT, volume);    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CTS]:[1]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CTS]:[1]:method_text:[ {            fail(""onPreferredDevicesForStrategyChanged must not be called"");        }    }   ])', 1), ('([5:/android/media/cts/AudioManagerTest.java]:[CTS]:[5]:method_text:[          fail(""onPreferredDevicesForCapturePresetChanged must not be called"");        }    }   ])', 1), ('([9:/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java]:[CTS]:[9]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/android/telephony/cts/CellBroadcastDataMigrationTest.java]:[CTS]:[1]:method_text:[should be headless without any other activities, services or providers to handle alerts.     */   ])', 1), ('([3:/android/net/wifi/nl80211/cts/RadioChainInfoTest.java]:[CTS]:[3]:method_text:[ tests if Wifi is not supported        assumeTrue(WifiFeature.isWifiSupported(context));    }   ])', 1), ('([1:/com/android/cts/deviceowner/wificonfigcreator/WifiConfigCreatorActivity.java]:[CTS]:[1]:method_text:[pted while changing wifi settings"", ie);        } finally {            finish();        }    }}])', 1), ('([5:/android/widget/cts/SearchView_CursorTest.java]:[CTS]:[5]:method_text:[    mSearchView.setSuggestionsAdapter(mSuggestionsAdapter);        });    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/SearchView_CursorTest.java]:[CTS]:[1]:method_text:[times(1)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }   ])', 1), ('([2:/android/widget/cts/SearchView_CursorTest.java]:[CTS]:[2]:method_text:[, times(2)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }}])', 1), ('([1:/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java]:[CTS]:[1]:method_text:[new GoNegReqPbcTestCase(context));        sTestSuite.add(new GoNegReqPinTestCase(context));    }}])', 1), ('([3:/android/gamemanager/cts/GameManagerCtsActivity.java]:[CTS]:[3]:method_text:[ageName();    }    public int getGameMode() {        return mGameManager.getGameMode();    }}])', 1), ('([1:/android/contentcaptureservice/cts/AbstractRootViewActivity.java]:[CTS]:[1]:method_text:[ses.     *     */    protected abstract void setContentViewOnCreate(Bundle savedInstanceState);}])', 1), ('([11:/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java]:[CTS]:[11]:method_text:[ static Context getContext() {        return InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([1:/android/graphics/cts/Canvas_EdgeTypeTest.java]:[CTS]:[1]:method_text:[nit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class Canvas_EdgeTypeTest {   ])', 1), ('([2:/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java]:[CTS]:[2]:method_text:[;@SmallTestpublic class ShortcutManagerPreBackup2Test extends ShortcutManagerDeviceTestBase {   ])', 1), ('([1:/android/renderscriptlegacy/cts/ScriptC_set_target_api_13.java]:[CTS]:[1]:method_text:[cker(4);        check_fp.addI32(version);        invoke(mExportFuncIdx_check, check_fp);    }}])', 1), ('([3:/com/android/cts/managedprofile/CameraPolicyTest.java]:[CTS]:[3]:method_text:[d tearDown() throws Exception {        stopBackgroundThread();        super.tearDown();    }   ])', 1), ('([1:/android/permission/cts/Camera2PermissionTest.java]:[CTS]:[1]:method_text:[ to open camera. Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java]:[CTS]:[1]:method_text:[.getSubscriptionInfoForRemovableSims().size())                .isAtLeast(mMinimumSimCount);    }}])', 1), ('([1:/android/telephony/cts/AvailableNetworkInfoTest.java]:[CTS]:[1]:method_text:[        mccMncs.add(OPERATOR_MCCMNC_2);        ras.add(RAS_1);        ras.add(RAS_2);    }   ])', 1), ('([1:/android/widget/cts/SimpleCursorAdapterTest.java]:[CTS]:[1]:method_text:[ontext, R.layout.cursoradapter_item0, mCursor, COLUMNS_FROM, VIEWS_TO);    }    @UiThreadTest   ])', 1), ('([11:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CTS]:[11]:method_text:[tends ActivityTestBase {    private final BitmapComparer mExactComparer = new ExactComparer();   ])', 1), ('([4:/android/graphics/cts/VulkanPreTransformTest.java]:[CTS]:[4]:method_text:[ {        Log.d(TAG, ""setUp!"");        mContext = InstrumentationRegistry.getContext();    }   ])', 1)]"	""	""	"[('CTS', 60), ('VERSION_CODES', 1)]"	"[('[android.media.cts.SystemMediaRouter2Test ArrayList CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetInstanceReturnsSameInstance CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetClientPackageName CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetSystemController CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetControllerReturnsNullForUnknownId CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetController CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetAllRoutes CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetRoutes CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesAdded CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesRemoved CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesChanged CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesChanged_whenLocalVolumeChanged CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnPreferredFeaturesChanged CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransferTo_succeeds_onTransferCalled CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransferTo_fails_onTransferFailureCalled CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransferToTwice CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransfer_succeeds_onTransferCalled CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testStop CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerSelectAndDeselectRoute CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerTransferToRoute CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerSetSessionVolume CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerRelease CtsMediaTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.throttling.ThrottledTests ThrottledTests None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.server.wm.SplashscreenTests prepareTestLauncher CtsWindowManagerDeviceTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_report.ResultCode isExtensionValue CtsLocationGnssTestCases]', 1), ('[com.android.cts.verifier.p2p.RequesterTestActivity getTestCase None]', 1), ('[android.media.cts.AudioManagerTest testGetAudioHwSyncForSession CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSoundEffects CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testCheckingZenModeBlockDoesNotRequireNotificationPolicyAccess CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetAdditionalOutputDeviceDelay CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPreferredDevicesForStrategy CtsMediaTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.deviceowner.wificonfigcreator.WifiConfigCreatorActivity finish None]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionSelection CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionEnterKey CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite getTestId None]', 1), ('[android.permission.cts.Camera2PermissionTest getCameraIdList CtsPermissionTestCases]', 1), ('[android.graphics.cts.VulkanPreTransformTest testVulkanPreTransformSetToMatchCurrentTransform CtsGraphicsTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-15"	"9.9.3/C-1-15"	"09090300.670115"	"""C-1-15] MUST ensure that all non-deleted blocks of encrypted file contents on persistent storage were encrypted using combinations of encryption key and initialization vector (IV) that depend on both the file and the offset within the file. In addition, all such combinations MUST be distinct, except where the encryption is done using inline encryption hardware that only supports an IV length of 32 bits."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.1  . Contacts"	"3.1"	"C-1-4"	"3.1/C-1-4"	"03010000.670104"	"""C-1-4] MUST provide a user affordance to control accessibility services that declare the AccessibilityServiceInfo.FLAG_REQUEST_ACCESSIBILITY_BUTTON. Note that for device implementations with a system navigation bar, they SHOULD allow the user to have the option for a button in the system&#39;s navigation bar to control these services. If device implementations include preinstalled accessibility services, they: | C-1-4] MUST allow the user to interact with the entire MediaBrowser hierarchy. MAY restrict the access to part of the hierarchy to comply with safety regulations (e.g. driver distraction), but MUST NOT give preferential treatment based on content or content provider. | C-1-4] Raw contacts inserted into the custom local account MUST not be removed when accounts are added or removed."""	""	""	"AccessibilityServiceInfo.FLAG FLAG_REQUEST_ACCESSIBILITY_BUTTON"	""	""	""	""	"[('android.accessibilityservice.cts.AccessibilityWindowQueryTest', 4), ('android.view.accessibility.cts.AccessibilityServiceInfoTest', 3), ('android.accessibilityservice.cts.AccessibilityButtonTest', 3), ('android.accessibilityservice.cts.AccessibilityButtonSdk29Test', 3), ('android.accessibilityservice.cts.AccessibilityServiceInfoTest', 2), ('android.accessibilityservice.cts.AccessibilityWindowReportingTest', 2), ('android.accessibilityservice.cts.AccessibilityEmbeddedHierarchyTest', 1), ('android.accessibilityservice.cts.AccessibilityOverlayTest', 1), ('android.accessibility.cts.common.AccessibilityDumper', 1), ('android.accessibilityservice.cts.utils.ActivityLaunchUtils', 1), ('android.app.uiautomation.cts.UiAutomationTest', 1), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 1), ('android.accessibilityservice.cts.AccessibilityFocusAndInputFocusSyncTest', 1), ('android.accessibilityservice.cts.AccessibilityGlobalActionsTest', 1), ('android.accessibilityservice.cts.AccessibilityViewTreeReportingTest', 1)]"	"[('AccessibilityDumpOnFailureRule', 13), ('getInstrumentation', 13), ('oneTimeSetup', 6), ('getUiAutomation', 6), ('getServiceInfo', 6), ('setUp', 6), ('getContext', 5), ('dumpHierarchyOnLogcat', 2), ('toString', 2), ('ActivityLauncher', 2), ('launchActivity', 2), ('getPackageManager', 2), ('AccessibilityButtonCallback', 2), ('getService', 2), ('getAccessibilityButtonController', 2), ('oneTimeSetUp', 1), ('getInstance', 1), ('getPackageName', 1), ('dump', 1), ('getExternalStorageDirectory', 1), ('run', 1), ('ByteArrayOutputStream', 1), ('takeScreenshot', 1), ('now', 1), ('getWindows', 1), ('getRoot', 1), ('makeBasic', 1), ('getTargetContext', 1), ('finalTearDown', 1), ('destroy', 1)]"	"[('CtsAccessibilityServiceTestCases', 18), ('CtsAccessibilityTestCases', 3), ('CtsAccessibilityServiceSdk29TestCases', 3), ('CtsUiAutomationTestCases', 1)]"	""	"android.accessibilityservice.cts.AccessibilityViewTreeReportingTest"	"setUp"	"CtsAccessibilityServiceTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityServiceInfoTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityButtonTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/testsdk29/src/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java', 3), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityServiceInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityOverlayTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/common/src/android/accessibility/cts/common/AccessibilityDumper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/utils/ActivityLaunchUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uiautomation/src/android/app/uiautomation/cts/UiAutomationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityFocusAndInputFocusSyncTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityGlobalActionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityViewTreeReportingTest.java', 1)]"	"[('(1,AccessibilityServiceInfo.FLAG,/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java)', 1), ('(1,AccessibilityServiceInfo.FLAG,/android/accessibilityservice/cts/AccessibilityOverlayTest.java)', 1), ('(1,AccessibilityServiceInfo.FLAG,/android/accessibility/cts/common/AccessibilityDumper.java)', 1), ('(1,AccessibilityServiceInfo.FLAG,/android/accessibilityservice/cts/utils/ActivityLaunchUtils.java)', 1), ('(7,AccessibilityServiceInfo.FLAG,/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java)', 1), ('(17,AccessibilityServiceInfo.FLAG,/android/view/accessibility/cts/AccessibilityServiceInfoTest.java)', 1), ('(1,FLAG_REQUEST_ACCESSIBILITY_BUTTON,/android/view/accessibility/cts/AccessibilityServiceInfoTest.java)', 1), ('(1,AccessibilityServiceInfo.FLAG,/android/accessibilityservice/cts/AccessibilityButtonTest.java)', 1), ('(6,FLAG_REQUEST_ACCESSIBILITY_BUTTON,/android/accessibilityservice/cts/AccessibilityButtonTest.java)', 1), ('(1,AccessibilityServiceInfo.FLAG,/android/app/uiautomation/cts/UiAutomationTest.java)', 1), ('(2,AccessibilityServiceInfo.FLAG,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(2,AccessibilityServiceInfo.FLAG,/android/accessibilityservice/cts/AccessibilityFocusAndInputFocusSyncTest.java)', 1), ('(20,AccessibilityServiceInfo.FLAG,/android/accessibilityservice/cts/AccessibilityServiceInfoTest.java)', 1), ('(2,FLAG_REQUEST_ACCESSIBILITY_BUTTON,/android/accessibilityservice/cts/AccessibilityServiceInfoTest.java)', 1), ('(1,AccessibilityServiceInfo.FLAG,/android/accessibilityservice/cts/AccessibilityGlobalActionsTest.java)', 1), ('(1,AccessibilityServiceInfo.FLAG,/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java)', 1), ('(5,FLAG_REQUEST_ACCESSIBILITY_BUTTON,/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java)', 1), ('(3,AccessibilityServiceInfo.FLAG,/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java)', 1), ('(2,AccessibilityServiceInfo.FLAG,/android/accessibilityservice/cts/AccessibilityViewTreeReportingTest.java)', 1)]"	"[('([1:/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java]:[AccessibilityServiceInfo.FLAG]:[1]:method_text:[rgetContext().getPackageManager()                .hasSystemFeature(FEATURE_AUTOMOTIVE));    }   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityOverlayTest.java]:[AccessibilityServiceInfo.FLAG]:[1]:method_text:[   }    @Before    public void setUp() {        mService = mServiceRule.getService();    }   ])', 1), ('([1:/android/accessibility/cts/common/AccessibilityDumper.java]:[AccessibilityServiceInfo.FLAG]:[1]:method_text:[E_WINDOWS;            automation.setServiceInfo(info);        }        return automation;    }}])', 1), ('([1:/android/accessibilityservice/cts/utils/ActivityLaunchUtils.java]:[AccessibilityServiceInfo.FLAG]:[1]:method_text:[private static abstract class ActivityLauncher {        abstract Activity launchActivity();    }}])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[AccessibilityServiceInfo.FLAG]:[2]:method_text:[nscreen(                sInstrumentation, sUiAutomation, mActivityRule);    }    @MediumTest   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[AccessibilityServiceInfo.FLAG]:[1]:method_text:[ow cannot be accessed.        assertNull(event.getSource().getWindow());    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[AccessibilityServiceInfo.FLAG]:[2]:method_text:[MPORTANT_VIEWS;            sUiAutomation.setServiceInfo(info);        }    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[AccessibilityServiceInfo.FLAG]:[2]:method_text:[            return false;                }            }            return true;        }    }}])', 1), ('([12:/android/view/accessibility/cts/AccessibilityServiceInfoTest.java]:[AccessibilityServiceInfo.FLAG]:[12]:method_text:[can retrieve     * window content.     */    @MediumTest    @SuppressWarnings(""deprecation"")   ])', 1), ('([5:/android/view/accessibility/cts/AccessibilityServiceInfoTest.java]:[AccessibilityServiceInfo.FLAG]:[5]:method_text:[NonInteractiveUiTimeoutMillis());        assertTrue(speakingService.isAccessibilityTool());    }}])', 1), ('([1:/android/view/accessibility/cts/AccessibilityServiceInfoTest.java]:[FLAG_REQUEST_ACCESSIBILITY_BUTTON]:[1]:method_text:[can retrieve     * window content.     */    @MediumTest    @SuppressWarnings(""deprecation"")   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityButtonTest.java]:[AccessibilityServiceInfo.FLAG]:[1]:method_text:[le.getService();        mButtonController = mService.getAccessibilityButtonController();    }   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityButtonTest.java]:[FLAG_REQUEST_ACCESSIBILITY_BUTTON]:[1]:method_text:[le.getService();        mButtonController = mService.getAccessibilityButtonController();    }   ])', 1), ('([5:/android/accessibilityservice/cts/AccessibilityButtonTest.java]:[FLAG_REQUEST_ACCESSIBILITY_BUTTON]:[5]:method_text:[REQUEST_ACCESSIBILITY_BUTTON)                        == FLAG_REQUEST_ACCESSIBILITY_BUTTON);    }}])', 1), ('([1:/android/app/uiautomation/cts/UiAutomationTest.java]:[AccessibilityServiceInfo.FLAG]:[1]:method_text:[iceInfo(info);        grantWriteSecureSettingsPermission(uiAutomation);    }    @AppModeFull   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[AccessibilityServiceInfo.FLAG]:[2]:method_text:[tic int getCurrentUser() {        return android.os.Process.myUserHandle().getIdentifier();    }}])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityFocusAndInputFocusSyncTest.java]:[AccessibilityServiceInfo.FLAG]:[2]:method_text:[          sInstrumentation, sUiAutomation, mActivityRule);    }    @MediumTest    @Presubmit   ])', 1), ('([20:/android/accessibilityservice/cts/AccessibilityServiceInfoTest.java]:[AccessibilityServiceInfo.FLAG]:[20]:method_text:[eractiveUiTimeoutMillis(),                receivedInfo.getNonInteractiveUiTimeoutMillis());    }}])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityServiceInfoTest.java]:[FLAG_REQUEST_ACCESSIBILITY_BUTTON]:[2]:method_text:[eractiveUiTimeoutMillis(),                receivedInfo.getNonInteractiveUiTimeoutMillis());    }}])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityGlobalActionsTest.java]:[AccessibilityServiceInfo.FLAG]:[1]:method_text:[.        homeScreenOrBust(sInstrumentation.getContext(), sUiAutomation);    }    @MediumTest   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java]:[AccessibilityServiceInfo.FLAG]:[1]:method_text:[FLAG_REQUEST_ACCESSIBILITY_BUTTON)                == FLAG_REQUEST_ACCESSIBILITY_BUTTON);    }   ])', 1), ('([4:/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java]:[FLAG_REQUEST_ACCESSIBILITY_BUTTON]:[4]:method_text:[FLAG_REQUEST_ACCESSIBILITY_BUTTON)                == FLAG_REQUEST_ACCESSIBILITY_BUTTON);    }   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java]:[FLAG_REQUEST_ACCESSIBILITY_BUTTON]:[1]:method_text:[ should succeed"",                mService.getServiceInfo().flags == mServiceInfo.flags);    }   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[AccessibilityServiceInfo.FLAG]:[1]:method_text:[getResources()                .getBoolean(android.R.bool.config_perDisplayFocusEnabled);    }   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[AccessibilityServiceInfo.FLAG]:[2]:method_text:[REQUEST_TOUCH_EXPLORATION_MODE;            sUiAutomation.setServiceInfo(info);        }    }   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityViewTreeReportingTest.java]:[AccessibilityServiceInfo.FLAG]:[2]:method_text:[hildDrawingOrder(int childCount, int i) {            return childDrawingOrder[i];        }    }}])', 1)]"	""	""	"[('AccessibilityServiceInfo.FLAG', 20), ('FLAG_REQUEST_ACCESSIBILITY_BUTTON', 6)]"	"[('[android.accessibilityservice.cts.AccessibilityServiceInfoTest testFlagToString CtsAccessibilityServiceTestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityButtonSdk29Test postTestTearDown CtsAccessibilityServiceSdk29TestCases]', 2), ('[android.accessibilityservice.cts.AccessibilityEmbeddedHierarchyTest postTestTearDown CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityOverlayTest postTestTearDown CtsAccessibilityServiceTestCases]', 1), ('[android.accessibility.cts.common.AccessibilityDumper isEmpty None]', 1), ('[android.accessibilityservice.cts.utils.ActivityLaunchUtils adoptShellPermissionIdentity CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest postTestTearDown CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testNoWindowsAccessIfFlagNotSet CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testObjectContract CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testShowInputMethodDialogWindow_resultIsApplicationType CtsAccessibilityServiceTestCases]', 1), ('[android.view.accessibility.cts.AccessibilityServiceInfoTest testAccessibilityServiceInfoForEnabledService CtsAccessibilityTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityButtonTest testUpdateRequestAccessibilityButtonFlag_targetSdkGreaterThanQ_ignoresUpdate CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTouchDelegateCoverParentWithEbt_HoverChildAndBack_FocusTargetAgain CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityFocusAndInputFocusSyncTest TestName CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGlobalActionsTest postTestTearDown CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityButtonSdk29Test testUpdateRequestAccessibilityButtonFlag_succeeds CtsAccessibilityServiceSdk29TestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowReportingTest perDisplayFocusEnabled CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowReportingTest testChangeAccessibilityFocusWindow_getEvent CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityViewTreeReportingTest testSetViewVisible_receiveSubtreeEvent CtsAccessibilityServiceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-4-2"	"9.1/C-4-2"	"09010000.670402"	"""C-4-2] MUST NOT have android.permission.INTERNET permission. This is stricter than the STRONGLY RECOMMENDED listed in section 9.8.6."""	""	""	"INTERNET android.permission.INTERNET RECOMMENDED"	""	""	""	""	"[('android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest', 9), ('android.provider.cts.SettingsPanelTest', 3), ('com.android.cts.ephemeralapp1.ClientTest', 3), ('android.permission.cts.SharedUidPermissionsTest', 3), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 3), ('com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity', 2), ('android.telephony.cts.SubscriptionManagerTest', 2), ('android.view.cts.ViewConfigurationTest', 1), ('android.os.cts.HwBinderTest', 1), ('android.net.cts.network.permission.InternetPermissionTest', 1), ('android.media.cts.CamcorderProfileTest', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 1), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('android.net.vcn.cts.TestNetworkWrapper', 1), ('android.net.wifi.cts.ConcurrencyTest', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('android.widget.cts29.ToastTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1), ('com.android.cts.verifier.net.ConnectivityBackgroundTestActivity', 1), ('main.java.com.android.bedstead.nene.permissions.Permissions', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.wifibroadcasts.cts.WifiBroadcastsHostJUnit4Test', 1), ('android.app.cts.DownloadManagerTestBase', 1), ('com.android.server.cts.device.statsdatom.AtomTests', 1), ('android.telephony.ims.cts.ImsServiceTest', 1), ('android.hardware.cts.helpers.SensorCtsHelper', 1), ('android.media.cts.MediaFormatTest', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestGrandparent', 1)]"	"[('getMediaType', 14), ('size', 9), ('doubleValue', 7), ('getSimpleName', 6), ('getCurrentPackageName', 4), ('getCodec', 4), ('notify', 4), ('getTargetContext', 4), ('getProfile', 3), ('setUp', 3), ('getContentResolver', 3), ('launchInternetPanel', 2), ('getName', 2), ('getBitrate', 2), ('getWidth', 2), ('getHeight', 2), ('getIntent', 2), ('build', 2), ('getFileDescriptor', 2), ('clearDownloads', 2), ('checkConnection', 2), ('trim', 2), ('moveToFirst', 2), ('getUserId', 2), ('elapsedRealtime', 2), ('StringBuilder', 2), ('toString', 2), ('internetPanel_correctPackage', 1), ('internetPanel_doneClosesPanel', 1), ('pressDone', 1), ('wifiPanel_seeMoreButton_launchesIntoSettings', 1), ('launchWifiPanel', 1), ('pressSeeMore', 1), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getAudioProfiles', 1), ('getSampleRate', 1), ('getChannels', 1), ('hasProfile', 1), ('getReceiverComponentName', 1), ('myUserId', 1), ('DeviceState', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('Builder', 1), ('clearCapabilities', 1), ('CloseGuard', 1), ('getInterfaceName', 1), ('BitSet', 1), ('WifiP2pGroup', 1), ('MySync', 1), ('MyResponse', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('printStackTrace', 1), ('getLayoutInflater', 1), ('Random', 1), ('getInstrumentation', 1), ('tearDown', 1), ('shutdown', 1), ('getMessageDigest', 1), ('digest', 1), ('length', 1), ('myUserHandle', 1), ('getIdentifier', 1), ('getCount', 1), ('readLine', 1), ('close', 1), ('SensorCtsHelper', 1), ('getSensor', 1), ('getRequestedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('grandparentBeforeClass', 1), ('shadowedGrandparentBeforeClass', 1), ('shadowedGrandparentWithoutBeforeClass', 1), ('waitForAvailable', 1), ('countDown', 1), ('setUpClass', 1)]"	"[('CtsWifiTestCases', 10), ('CtsProviderTestCases', 3), ('CtsPermissionTestCases', 3), ('CtsCameraTestCases', 3), ('CtsTelephonyTestCases', 3), ('CtsMediaTestCases', 2), ('CtsViewTestCases', 1), ('CtsNetTestCases', 1), ('CtsDevicePolicyTestCases', 1), ('CtsUsageStatsTestCases', 1), ('CtsVcnTestCases', 1), ('CtsWidgetTestCases', 1), ('CtsAdminTestCases', 1), ('CtsWifiBroadcastsHostTestCases', 1), ('CtsAppTestCases', 1), ('CtsSensorTestCases', 1)]"	""	"android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest"	"setUpClass"	"CtsWifiTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/SettingsPanelTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/EphemeralApp1/src/com/android/cts/ephemeralapp1/ClientTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/SharedUidPermissionsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SubscriptionManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/netpermission/internetpermission/src/android/net/cts/network/permission/InternetPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/vcn/src/android/net/vcn/cts/TestNetworkWrapper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConcurrencyTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/net/ConnectivityBackgroundTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/Permissions.java', 1), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/wifibroadcasts/src/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/DownloadManagerTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/AtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaFormatTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java', 1)]"	"[('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 1), ('(6,INTERNET,/android/provider/cts/SettingsPanelTest.java)', 1), ('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 1), ('(3,INTERNET,/android/net/cts/network/permission/InternetPermissionTest.java)', 1), ('(1,RECOMMENDED,/android/media/cts/CamcorderProfileTest.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(2,INTERNET,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(1,INTERNET,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(1,INTERNET,/android/net/vcn/cts/TestNetworkWrapper.java)', 1), ('(1,INTERNET,/android/net/wifi/cts/ConcurrencyTest.java)', 1), ('(21,RECOMMENDED,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 1), ('(3,INTERNET,/com/android/cts/ephemeralapp1/ClientTest.java)', 1), ('(4,RECOMMENDED,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(3,INTERNET,/com/android/cts/verifier/net/ConnectivityBackgroundTestActivity.java)', 1), ('(2,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/Permissions.java)', 1), ('(3,RECOMMENDED,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,INTERNET,/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java)', 1), ('(1,INTERNET,/android/app/cts/DownloadManagerTestBase.java)', 1), ('(34,INTERNET,/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java)', 1), ('(4,INTERNET,/android/permission/cts/SharedUidPermissionsTest.java)', 1), ('(1,INTERNET,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(2,INTERNET,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(1,INTERNET,/android/media/cts/MediaFormatTest.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java)', 1), ('(5,INTERNET,/android/telephony/cts/SubscriptionManagerTest.java)', 1), ('(35,INTERNET,/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java)', 1)]"	"[('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[INTERNET]:[4]:method_text:[work using restricted suggestion API.     * 3. Verify that both connections are active.     */   ])', 2), ('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[INTERNET]:[4]:method_text:[work using internet connectivity API.     * 3. Verify that both connections are active.     */   ])', 2), ('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[INTERNET]:[4]:method_text:[y requested for platform to connect).     * 3. Verify that only 1 connection is active.     */   ])', 2), ('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[INTERNET]:[4]:method_text:[ suggestion for platform to connect).     * 3. Verify that only 1 connection is active.     */   ])', 2), ('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 1), ('([2:/android/provider/cts/SettingsPanelTest.java]:[INTERNET]:[2]:method_text:[getCurrentPackageName();        assertThat(currentPackage).isEqualTo(mSettingsPackage);    }   ])', 1), ('([2:/android/provider/cts/SettingsPanelTest.java]:[INTERNET]:[2]:method_text:[tCurrentPackageName();        assertThat(currentPackage).isNotEqualTo(mSettingsPackage);    }   ])', 1), ('([2:/android/provider/cts/SettingsPanelTest.java]:[INTERNET]:[2]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([3:/android/net/cts/network/permission/InternetPermissionTest.java]:[INTERNET]:[3]:method_text:[>Tests Permission:     *   {@link android.Manifest.permission#INTERNET}.     */    @SmallTest   ])', 1), ('([1:/android/media/cts/CamcorderProfileTest.java]:[RECOMMENDED]:[1]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([3:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[RECOMMENDED]:[3]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[INTERNET]:[2]:method_text:[he provider that provides enterprise slice can     * see the enterprise slice requests.     */   ])', 1), ('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[INTERNET]:[1]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([1:/android/net/vcn/cts/TestNetworkWrapper.java]:[INTERNET]:[1]:method_text:[ork;                this.networkCapabilities = networkCapabilities;            }        }    }}])', 1), ('([1:/android/net/wifi/cts/ConcurrencyTest.java]:[INTERNET]:[1]:method_text:[ED, mMySync.expectedP2pState);        removeAllPersistentGroups();        return true;    }   ])', 1), ('([21:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[RECOMMENDED]:[21]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[INTERNET]:[1]:method_text:[on(Manifest.permission.INTERNET),                is(PackageManager.PERMISSION_GRANTED));    }   ])', 1), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[INTERNET]:[1]:method_text:[sFlags[permissionIndex]                & PackageInfo.REQUESTED_PERMISSION_GRANTED) != 0;    }   ])', 1), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[INTERNET]:[1]:method_text:[ce(Context.CONNECTIVITY_SERVICE);        manager.reportNetworkConnectivity(null, false);    }   ])', 1), ('([4:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[RECOMMENDED]:[4]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([3:/com/android/cts/verifier/net/ConnectivityBackgroundTestActivity.java]:[INTERNET]:[3]:method_text:[rn (pm != null                && !pm.hasSystemFeature(PackageManager.FEATURE_AUTOMOTIVE));    }}])', 1), ('([2:/main/java/com/android/bedstead/nene/permissions/Permissions.java]:[RECOMMENDED]:[2]:method_text:[ExistingPermissions.toArray(new String[0]));        }        mExistingPermissions = null;    }}])', 1), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[RECOMMENDED]:[3]:method_text:[h (SecurityException e) {            assertDeviceOwnerMessage(e.getMessage());        }    }   ])', 1), ('([1:/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java]:[INTERNET]:[1]:method_text:[s part of CTS Pre-conditions        device.executeShellCommand(""svc wifi enable; sleep 1"");    }}])', 1), ('([1:/android/app/cts/DownloadManagerTestBase.java]:[INTERNET]:[1]:method_text:[        + "".  Make sure you have WiFi or some other connectivity for this test."");        }    }}])', 1), ('([4:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[INTERNET]:[4]:method_text:[stCallback =            new MultinetworkTestCallback() {                @Override               ])', 1), ('([30:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[INTERNET]:[30]:method_text:[}    }    private interface SetWifiCallback {        void onComplete(boolean isSuccess);    }}])', 1), ('([1:/android/permission/cts/SharedUidPermissionsTest.java]:[INTERNET]:[1]:method_text:[p(PKG_THAT_REQUESTS_PERMISSIONS);        uninstallApp(PKG_THAT_REQUESTS_NO_PERMISSIONS);    }   ])', 1), ('([2:/android/permission/cts/SharedUidPermissionsTest.java]:[INTERNET]:[2]:method_text:[    assertThat(isPermissionGranted(PKG_THAT_REQUESTS_NO_PERMISSIONS, INTERNET)).isTrue();    }   ])', 1), ('([1:/android/permission/cts/SharedUidPermissionsTest.java]:[INTERNET]:[1]:method_text:[      assertThat(isPermissionGranted(PKG_THAT_REQUESTS_NO_PERMISSIONS, INTERNET)).isFalse();    }}])', 1), ('([1:/com/android/server/cts/device/statsdatom/AtomTests.java]:[INTERNET]:[1]:method_text:[PORT_WIFI)) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[INTERNET]:[2]:method_text:[E permission."");        } catch (SecurityException e) {            //expected        }    }   ])', 1), ('([1:/android/hardware/cts/helpers/SensorCtsHelper.java]:[RECOMMENDED]:[1]:method_text:[;        SystemUtil.runShellCommand(InstrumentationRegistry.getInstrumentation(), command);    }}])', 1), ('([1:/android/media/cts/MediaFormatTest.java]:[INTERNET]:[1]:method_text:[is test uses introspection to find the mime type fields.     *     * @throws Exception     */   ])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java]:[RECOMMENDED]:[1]:method_text:[andparentWithoutBeforeClass() {        sShadowedGrandparentWithoutBeforeClassHasRun = true;    }}])', 1), (""([3:/android/telephony/cts/SubscriptionManagerTest.java]:[INTERNET]:[3]:method_text:[R} network must both be     * either defined or undefined; you can't cross the streams.     */   ])"", 1), ('([2:/android/telephony/cts/SubscriptionManagerTest.java]:[INTERNET]:[2]:method_text:[ager.NETWORK_TYPE_NR;        return validCarrier && validNetworkType && validCapabilities;    }}])', 1), ('([3:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[INTERNET]:[3]:method_text:[on available for apps.        assertThat(mTestHelper.getNumWifiConnections()).isEqualTo(1);    }}])', 1)]"	""	""	"[('INTERNET', 33), ('RECOMMENDED', 14)]"	"[('[android.view.cts.ViewConfigurationTest testInstanceValues CtsViewTestCases]', 1), ('[android.provider.cts.SettingsPanelTest isNull CtsProviderTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest TestApis CtsDevicePolicyTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.net.vcn.cts.TestNetworkWrapper VcnTestNetworkCallback CtsVcnTestCases]', 1), ('[android.net.wifi.cts.ConcurrencyTest ActionListener CtsWifiTestCases]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[com.android.cts.ephemeralapp1.ClientTest testInstallPermissionGranted None]', 1), ('[com.android.cts.ephemeralapp1.ClientTest testInstallPermissionGrantedInPackageInfo None]', 1), ('[com.android.cts.ephemeralapp1.ClientTest testInternetPermission None]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.net.ConnectivityBackgroundTestActivity ConnectivityBackgroundTestActivity None]', 1), ('[main.java.com.android.bedstead.nene.permissions.Permissions TestApis None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRecommendedGlobalProxy_failIfNotDeviceOwner CtsAdminTestCases]', 1), ('[android.wifibroadcasts.cts.WifiBroadcastsHostJUnit4Test testCleanLogcat CtsWifiBroadcastsHostTestCases]', 1), ('[android.app.cts.DownloadManagerTestBase exists CtsAppTestCases]', 1), ('[com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity testStarted None]', 1), ('[com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity startTest None]', 1), ('[android.permission.cts.SharedUidPermissionsTest uninstallTestApps CtsPermissionTestCases]', 1), ('[android.permission.cts.SharedUidPermissionsTest packageGainsNormalPermissionsWhenJoiningSharedUid CtsPermissionTestCases]', 1), ('[android.permission.cts.SharedUidPermissionsTest sharedUidLoosesNormalPermissionWhenLastAppDeclaringItGetsUninstalled CtsPermissionTestCases]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testGenerateMobileTraffic None]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations CtsCameraTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelManagerRegistrationCallbackS CtsTelephonyTestCases]', 1), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 1), ('[android.media.cts.MediaFormatTest testKeyConsistency CtsMediaTestCases]', 1), ('[android.telephony.cts.SubscriptionManagerTest isSupported CtsTelephonyTestCases]', 1), ('[android.telephony.cts.SubscriptionManagerTest testSetAndGetD2DSharingContacts CtsTelephonyTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest isStaConcurrencyForRestrictedConnectionsSupported CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPaidSuggestionWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToInternetNetworkWhenConnectedToOemPaidSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPrivateSuggestionWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToInternetNetworkWhenConnectedToOemPrivateSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPaidSuggestionFailureWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPrivateSuggestionFailureWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToSuggestionFailureWithOemPaidNetCapabilityWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToSuggestionFailureWithOemPrivateNetCapabilityWhenConnectedToInternetNetwork CtsWifiTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-2-2"	"9.5/C-2-2"	"09050000.670202"	"""C-2-2] MUST ensure that applications owned by and running on behalf of a given user cannot list, read, or write to the files owned by any other user, even if the data of both users are stored on the same volume or filesystem. Device implementations MAY create a single additional user profile of type android.os.usertype.profile.CLONE against the primary user (and only against the primary user) for the purpose of running dual instances of the same app. These dual instances share partially isolated storage, are presented to the end user in the launcher at the same time and appear in the same recents view. For example, this could be used to support the user installing two separate instances of a single app on a dual-SIM device. If device implementations create the additional user profile discussed above, then they:"""	""	""	"CLONE SIM android.os.usertype.profile.CLONE"	""	""	""	""	"[('android.widget.cts.SimpleCursorAdapterTest', 13), ('android.uirendering.cts.testclasses.ExactCanvasTests', 3), ('android.server.wm.AppConfigurationTests', 3), ('android.hardware.camera2.cts.NativeCameraDeviceTest', 2), ('android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest', 2), ('android.media.cts.MediaCodecTest', 2), ('android.server.wm.SplashscreenTests', 1), ('android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation', 1), ('android.telephony.cts.CellBroadcastDataMigrationTest', 1), ('com.android.cts.deviceowner.wificonfigcreator.WifiConfigCreatorActivity', 1), ('android.widget.cts.SearchView_CursorTest', 1), ('com.android.suspendapps.suspendtestapp.TestService', 1), ('android.contentcaptureservice.cts.AbstractRootViewActivity', 1), ('android.provider.cts.simphonebook.SimPhonebookRequirementsRule', 1), ('android.graphics.cts.VulkanPreTransformTest', 1), ('android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.GanssReqGenericDat', 1), ('com.android.cts.deviceandprofileowner.ContentSuggestionsActivity', 1), ('android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.Ver2_PosPayLoad_extension', 1), ('android.keystore.cts.DESedeCipherTestBase', 1), ('android.telecom.cts.thirdptyincallservice.CtsThirdPartyInCallServiceControl', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer', 1), ('com.android.cts.verifier.ReportExporter', 1), ('com.android.cts.verifier.audio.USBRestrictRecordAActivity', 1), ('android.location.cts.gnss.asn1.supl2.rrlp_components.MsrPosition_Req', 1), ('android.location.cts.gnss.asn1.supl2.rrlp_components.GANSSEphemerisExtensionCheck', 1), ('com.android.cts.devicepolicy.UserActivityEmulator', 1), ('android.gpuprofiling.GpuRenderStagesDeviceActivity', 1), ('android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.Ver2_Notification_extension', 1), ('android.mediav2.cts.CodecUnitTest', 1), ('com.android.cts.verifier.notifications.InteractiveVerifierActivity', 1)]"	"[('super', 5), ('getTag', 5), ('getSimpleName', 5), ('onEnterAnimationComplete', 4), ('getGrandParent', 4), ('getAction', 3), ('enoughToFilter', 3), ('getGrandGrandParent', 3), ('getAutofillId', 3), ('toLowerCase', 2), ('setup', 2), ('Object', 2), ('Stub', 2), ('getClass', 2), ('onResume', 2), ('getRootView', 2), ('getParent', 2), ('getSubscriptionInfoForRemovableSims', 2), ('size', 2), ('clone', 2), ('getLocalCallCount', 2), ('resetCalls', 2), ('getResources', 2), ('trim', 2), ('nativeInitVulkan', 2), ('hasSeenError', 2), ('WcdmaCellInformation', 1), ('myUserHandle', 1), ('getIntent', 1), ('getChildCount', 1), ('getCursor', 1), ('getInstrumentation', 1), ('getActivity', 1), ('onCreate', 1), ('SimPhonebookRequirementsRule', 1), ('before', 1), ('getApplicationContext', 1), ('getSupportedModemCount', 1), ('getRemovableSimSlotCount', 1), ('getTargetContext', 1), ('makeSimpleCursorAdapter', 1), ('ExactComparer', 1), ('GanssReqGenericData', 1), ('Intent', 1), ('countDown', 1), ('Ver2_PosPayLoad_extension', 1), ('getBlockSize', 1), ('getKatKey', 1), ('getKatPlaintext', 1), ('getKatAuthenticationTagLengthBytes', 1), ('getPackageManager', 1), ('getApplication', 1), ('getPackageName', 1), ('setUpExtrinsics', 1), ('getLocation', 1), ('getRingRotation', 1), ('doPreRenderingSetup', 1), ('getName', 1), ('MsrPosition_Req', 1), ('tapScreen', 1), ('Ver2_Notification_extension', 1), ('autoStart', 1), ('setUp', 1), ('next', 1)]"	"[('CtsWidgetTestCases', 14), ('CtsLocationGnssTestCases', 6), ('CtsWindowManagerDeviceTestCases', 4), ('CtsUiRenderingTestCases', 3), ('CtsCameraTestCases', 2), ('CtsMediaTestCases', 2), ('CtsTelephonyTestCases', 1), ('CtsContentCaptureServiceTestCases', 1), ('CtsSimPhonebookProviderTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsDevicePolicyManagerTestCases', 1), ('CtsMediaV2TestCases', 1)]"	""	"com.android.cts.verifier.notifications.InteractiveVerifierActivity"	"next"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SimpleCursorAdapterTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellBroadcastDataMigrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/WifiConfigCreator/src/com/android/cts/deviceowner/wificonfigcreator/WifiConfigCreatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/test-apps/SuspendTestApp/src/com/android/suspendapps/suspendtestapp/TestService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/AbstractRootViewActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanPreTransformTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/GanssReqGenericData.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ContentSuggestionsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/Ver2_PosPayLoad_extension.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/DESedeCipherTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/ThirdPtyInCallServiceTestApp/src/android/telecom/cts/thirdptyincallservice/CtsThirdPartyInCallServiceControl.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/ReportExporter.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/MsrPosition_Req.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSEphemerisExtensionCheck.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserActivityEmulator.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/app/src/android/gpuprofiling/GpuRenderStagesDeviceActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/Ver2_Notification_extension.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/notifications/InteractiveVerifierActivity.java', 1)]"	"[('(5,SIM,/android/server/wm/SplashscreenTests.java)', 1), ('(8,SIM,/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java)', 1), ('(1,SIM,/android/telephony/cts/CellBroadcastDataMigrationTest.java)', 1), ('(1,SIM,/com/android/cts/deviceowner/wificonfigcreator/WifiConfigCreatorActivity.java)', 1), ('(2,SIM,/android/widget/cts/SearchView_CursorTest.java)', 1), ('(1,SIM,/com/android/suspendapps/suspendtestapp/TestService.java)', 1), ('(1,SIM,/android/contentcaptureservice/cts/AbstractRootViewActivity.java)', 1), ('(29,SIM,/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java)', 1), ('(114,SIM,/android/widget/cts/SimpleCursorAdapterTest.java)', 1), ('(3,SIM,/android/uirendering/cts/testclasses/ExactCanvasTests.java)', 1), ('(1,SIM,/android/graphics/cts/VulkanPreTransformTest.java)', 1), ('(14,SIM,/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/GanssReqGenericData.java)', 1), ('(1,SIM,/com/android/cts/deviceandprofileowner/ContentSuggestionsActivity.java)', 1), ('(2,SIM,/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/Ver2_PosPayLoad_extension.java)', 1), ('(2,CLONE,/android/keystore/cts/DESedeCipherTestBase.java)', 1), ('(1,SIM,/android/telecom/cts/thirdptyincallservice/CtsThirdPartyInCallServiceControl.java)', 1), ('(10,SIM,/android/server/wm/AppConfigurationTests.java)', 1), ('(1,SIM,/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java)', 1), ('(3,SIM,/com/android/cts/verifier/ReportExporter.java)', 1), ('(1,SIM,/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java)', 1), ('(9,SIM,/android/location/cts/gnss/asn1/supl2/rrlp_components/MsrPosition_Req.java)', 1), ('(4,SIM,/android/hardware/camera2/cts/NativeCameraDeviceTest.java)', 1), ('(2,SIM,/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java)', 1), ('(3,SIM,/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSEphemerisExtensionCheck.java)', 1), ('(1,SIM,/com/android/cts/devicepolicy/UserActivityEmulator.java)', 1), ('(1,SIM,/android/gpuprofiling/GpuRenderStagesDeviceActivity.java)', 1), ('(1,SIM,/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/Ver2_Notification_extension.java)', 1), ('(3,CLONE,/android/mediav2/cts/CodecUnitTest.java)', 1), ('(3,SIM,/android/media/cts/MediaCodecTest.java)', 1), ('(9,SIM,/com/android/cts/verifier/notifications/InteractiveVerifierActivity.java)', 1)]"	"[('([1:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[SIM]:[1]:method_text:[ill fail the test.                    R.drawable.text_on_path, new MSSIMComparer(0.6)));    }   ])', 2), ('([5:/android/server/wm/SplashscreenTests.java]:[SIM]:[5]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([8:/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java]:[SIM]:[8]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/android/telephony/cts/CellBroadcastDataMigrationTest.java]:[SIM]:[1]:method_text:[should be headless without any other activities, services or providers to handle alerts.     */   ])', 1), ('([1:/com/android/cts/deviceowner/wificonfigcreator/WifiConfigCreatorActivity.java]:[SIM]:[1]:method_text:[pted while changing wifi settings"", ie);        } finally {            finish();        }    }}])', 1), ('([2:/android/widget/cts/SearchView_CursorTest.java]:[SIM]:[2]:method_text:[    mSearchView.setSuggestionsAdapter(mSuggestionsAdapter);        });    }    @UiThreadTest   ])', 1), ('([1:/com/android/suspendapps/suspendtestapp/TestService.java]:[SIM]:[1]:method_text:[{            sRegisteredReporters.clear();        }        return super.onUnbind(intent);    }}])', 1), ('([1:/android/contentcaptureservice/cts/AbstractRootViewActivity.java]:[SIM]:[1]:method_text:[ses.     *     */    protected abstract void setContentViewOnCreate(Bundle savedInstanceState);}])', 1), ('([29:/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java]:[SIM]:[29]:method_text:[.getSubscriptionInfoForRemovableSims().size())                .isAtLeast(mMinimumSimCount);    }}])', 1), ('([9:/android/widget/cts/SimpleCursorAdapterTest.java]:[SIM]:[9]:method_text:[ontext, R.layout.cursoradapter_item0, mCursor, COLUMNS_FROM, VIEWS_TO);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/SimpleCursorAdapterTest.java]:[SIM]:[1]:method_text:[UMN_COUNT, ADAPTER_ROW_COUNT),                COLUMNS_FROM, VIEWS_TO);    }    @UiThreadTest   ])', 1), ('([15:/android/widget/cts/SimpleCursorAdapterTest.java]:[SIM]:[15]:method_text:[  } catch (IllegalStateException e) {            // expected        }    }    @UiThreadTest   ])', 1), ('([12:/android/widget/cts/SimpleCursorAdapterTest.java]:[SIM]:[12]:method_text:[wBinder(null);        assertNull(simpleCursorAdapter.getViewBinder());    }    @UiThreadTest   ])', 1), ('([5:/android/widget/cts/SimpleCursorAdapterTest.java]:[SIM]:[5]:method_text:[wText(view, null);        assertEquals("""", view.getText().toString());    }    @UiThreadTest   ])', 1), ('([7:/android/widget/cts/SimpleCursorAdapterTest.java]:[SIM]:[7]:method_text:[ {            destroyTestImage(mContext, SAMPLE_IMAGE_NAME);        }    }    @UiThreadTest   ])', 1), ('([10:/android/widget/cts/SimpleCursorAdapterTest.java]:[SIM]:[10]:method_text:[ls(Integer.MIN_VALUE, simpleCursorAdapter.getStringConversionColumn());    }    @UiThreadTest   ])', 1), ('([10:/android/widget/cts/SimpleCursorAdapterTest.java]:[SIM]:[10]:method_text:[;        assertNull(simpleCursorAdapter.getCursorToStringConverter());    }    @UiThreadTest   ])', 1), ('([6:/android/widget/cts/SimpleCursorAdapterTest.java]:[SIM]:[6]:method_text:[ catch (IllegalArgumentException e) {            // expected        }    }    @UiThreadTest   ])', 1), ('([17:/android/widget/cts/SimpleCursorAdapterTest.java]:[SIM]:[17]:method_text:[;        verify(converter, times(1)).convertToString(curWith3Columns);    }    @UiThreadTest   ])', 1), ('([5:/android/widget/cts/SimpleCursorAdapterTest.java]:[SIM]:[5]:method_text:[esult);        assertEquals(R.id.cursorAdapter_item0, result.getId());    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/SimpleCursorAdapterTest.java]:[SIM]:[4]:method_text:[esult);        assertEquals(R.id.cursorAdapter_item0, result.getId());    }    @UiThreadTest   ])', 1), ('([13:/android/widget/cts/SimpleCursorAdapterTest.java]:[SIM]:[13]:method_text:[d destroyTestImage(Context context, String fileName) {        context.deleteFile(fileName);    }}])', 1), ('([1:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[SIM]:[1]:method_text:[tends ActivityTestBase {    private final BitmapComparer mExactComparer = new ExactComparer();   ])', 1), ('([1:/android/graphics/cts/VulkanPreTransformTest.java]:[SIM]:[1]:method_text:[ {        Log.d(TAG, ""setUp!"");        mContext = InstrumentationRegistry.getContext();    }   ])', 1), ('([14:/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/GanssReqGenericData.java]:[SIM]:[14]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/ContentSuggestionsActivity.java]:[SIM]:[1]:method_text:[      + "" didn\'t finish in 2 seconds"");        }        finish();        return mEnabled;    }}])', 1), ('([2:/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/Ver2_PosPayLoad_extension.java]:[SIM]:[2]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([2:/android/keystore/cts/DESedeCipherTestBase.java]:[CLONE]:[2]:method_text:[de    protected boolean isStreamCipher() {        return false;    }    @java.lang.Override   ])', 1), ('([1:/android/telecom/cts/thirdptyincallservice/CtsThirdPartyInCallServiceControl.java]:[SIM]:[1]:method_text:[onAppControl;        }        Log.d(TAG, ""onBind: invalid intent."");        return null;    }}])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[SIM]:[1]:method_text:[text derived from an application context     * will not change when the device rotates.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[SIM]:[1]:method_text:[context derived from an activity context     * will not change when the device rotates.     */   ])', 1), ('([8:/android/server/wm/AppConfigurationTests.java]:[SIM]:[8]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([1:/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java]:[SIM]:[1]:method_text:[        yScale * height / 2.0f,                near, far);        return projectionMatrix;    }}])', 1), ('([3:/com/android/cts/verifier/ReportExporter.java]:[SIM]:[3]:method_text:[sult)                .setPositiveButton(android.R.string.ok, null)                .show();    }}])', 1), ('([1:/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java]:[SIM]:[1]:method_text:[ filter);            mUsbManager.requestPermission(theDevice, permissionIntent);        }    }}])', 1), ('([9:/android/location/cts/gnss/asn1/supl2/rrlp_components/MsrPosition_Req.java]:[SIM]:[9]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([3:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[SIM]:[3]:method_text:[                testCameraDeviceSimplePreviewNative(mPreviewSurface, mOverrideCameraId));    }   ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[SIM]:[1]:method_text:[    private static native boolean testCameraDeviceCaptureFailureNative(String overrideCameraId);}])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[SIM]:[1]:method_text:[ for     * {@link Ime1Constants#IME_ID} does not return the implicitly enabled subtype.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[SIM]:[1]:method_text:[stream())                .anyMatch(InputMethodSubtype::overridesImplicitlyEnabledSubtype));    }}])', 1), ('([3:/android/location/cts/gnss/asn1/supl2/rrlp_components/GANSSEphemerisExtensionCheck.java]:[SIM]:[3]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/com/android/cts/devicepolicy/UserActivityEmulator.java]:[SIM]:[1]:method_text:[ableException {        mDevice.executeShellCommand(String.format(""input tap %d %d"", 0, 0));    }}])', 1), ('([1:/android/gpuprofiling/GpuRenderStagesDeviceActivity.java]:[SIM]:[1]:method_text:[G, ""GpuProfilingData activity complete"");    }    private static native int nativeInitVulkan();}])', 1), ('([1:/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/Ver2_Notification_extension.java]:[SIM]:[1]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[CLONE]:[3]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 1), ('([2:/android/media/cts/MediaCodecTest.java]:[SIM]:[2]:method_text:[ts:     * <br> dequeueInputBuffer() fails when encoder configured with an input Surface     */   ])', 1), (""([1:/android/media/cts/MediaCodecTest.java]:[SIM]:[1]:method_text:[n signals end-of-stream. The test fails if the decoder doesn't output the queued frames.     */   ])"", 1), ('([9:/com/android/cts/verifier/notifications/InteractiveVerifierActivity.java]:[SIM]:[9]:method_text:[logFail();                status = RETEST;                delay();            }        }    }}])', 1)]"	""	""	"[('SIM', 47), ('CLONE', 2)]"	"[('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.deviceowner.wificonfigcreator.WifiConfigCreatorActivity finish None]', 1), ('[com.android.suspendapps.suspendtestapp.TestService isPackageSuspended None]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testBindView CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testAccessViewBinder CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testSetViewText CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testSetViewImage CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testAccessStringConversionColumn CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testAccessCursorToStringConverter CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testChangeCursor CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testConvertToString CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testNewView CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testNewDropDownView CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testChangeCursorAndColumns CtsWidgetTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testTextOnPath CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testTextOnPathUsingPicture CtsUiRenderingTestCases]', 1), ('[android.graphics.cts.VulkanPreTransformTest testVulkanPreTransformSetToMatchCurrentTransform CtsGraphicsTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.GanssReqGenericDat isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.deviceandprofileowner.ContentSuggestionsActivity isContentSuggestionsEnabled None]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.Ver2_PosPayLoad_extension isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.keystore.cts.DESedeCipherTestBase isAuthenticatedCipher CtsKeystoreTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer doTestSpecificRendering None]', 1), ('[com.android.cts.verifier.ReportExporter currentTimeMillis None]', 1), ('[com.android.cts.verifier.audio.USBRestrictRecordAActivity LocalClickListener None]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.MsrPosition_Req isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceSimplePreview CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceCaptureFailure CtsCameraTestCases]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1ImplicitlyEnabledSubtypeExists None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1ImplicitlyEnabledSubtypeNotExist None]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.GANSSEphemerisExtensionCheck GANSSEphemerisExtensionCheck CtsLocationGnssTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.Ver2_Notification_extension isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.mediav2.cts.CodecUnitTest TestApi CtsMediaV2TestCases]', 1), ('[android.media.cts.MediaCodecTest testAsyncStopAndReset CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testDecodeAfterFlush CtsMediaTestCases]', 1), ('[com.android.cts.verifier.notifications.InteractiveVerifierActivity test None]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.1  . These are in the Android source tree at"	"7.1.4.1"	"C-3-1"	"7.1.4.1/C-3-1"	"07010401.670301"	"""C-3-1] MUST export the corresponding function symbols for these version in addition to the OpenGL ES 2.0 function symbols in the libGLESv2.so library."""	""	""	"GLES libGLESv2.so"	""	""	""	""	"[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 12), ('android.opengl.cts.NativeAttachShaderTest', 12), ('android.media.cts.MediaCodecTest', 5), ('android.hardware.cts.SensorManagerStaticTest', 4), ('android.uirendering.cts.testclasses.ExactCanvasTests', 2), ('android.media.cts.DecodeEditEncodeTest', 2), ('com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer', 1), ('android.opengl.cts.OpenGLES20NativeActivityOne', 1), ('android.testharness.app.TestHarnessActivity', 1), ('com.android.tests.atomicinstall.AtomicInstallTest', 1), ('GLtestView', 1), ('android.opengl.cts.RendererBase', 1), ('android.opengl.cts.RendererTenShaderTest', 1), ('android.media.cts.DecodeAccuracyTestBase', 1), ('android.hardware.cts.GLSurfaceViewCtsActivity', 1), ('android.tests.getinfo.DeviceInfoActivity', 1), ('android.server.wm.MultiDisplaySystemDecorationTests', 1), ('android.view.cts.TextureViewCtsActivity', 1), ('android.graphics.cts.CameraGpuCtsActivity', 1), ('com.android.cts.releaseparser.DepPrinter', 1)]"	"[('onResume', 11), ('onPause', 9), ('getDevice', 8), ('countDown', 7), ('elapsedRealtime', 7), ('getWindow', 5), ('release', 5), ('decoderRelease', 5), ('onDestroy', 4), ('TimeoutException', 4), ('getName', 4), ('getEntries', 4), ('getResources', 3), ('Renderer', 3), ('reset', 3), ('values', 3), ('Object', 2), ('getIntent', 2), ('eglGetError', 2), ('setUp', 2), ('startDecoder', 2), ('queueDecoderInputBuffer', 2), ('dequeueDecoderOutputBuffer', 2), ('extractorRelease', 2), ('close', 2), ('start', 2), ('getWidth', 2), ('getHeight', 2), ('onEnterAnimationComplete', 2), ('waitForEnterAnimationComplete', 2), ('getDecorView', 2), ('getTextureView', 2), ('run', 2), ('waitForSurface', 2), ('initGl', 2), ('getType', 2), ('setUpExtrinsics', 1), ('getLocation', 1), ('getRingRotation', 1), ('doPreRenderingSetup', 1), ('main', 1), ('waitForFrameDrawn', 1), ('getRenderer', 1), ('getAttachShaderError', 1), ('getAttachedShaderCount', 1), ('getMediaDirString', 1), ('getWindowToken', 1), ('trim', 1), ('getTime', 1), ('LogScanResult', 1), ('eglChooseConfig', 1), ('GLSurfaceView', 1), ('getHolder', 1), ('ContextFactory', 1), ('chooseConfig', 1), ('step', 1), ('glCreateProgram', 1), ('glGetError', 1), ('getActivity', 1), ('getApplicationContext', 1), ('tearDown', 1), ('bringActivityToFront', 1), ('getHelper', 1), ('getSimpleName', 1), ('MediaExtractor', 1), ('failToStart', 1), ('PlayerResult', 1), ('getMediaFormat', 1), ('getInputBuffers', 1), ('getSampleTime', 1), ('advance', 1), ('BufferInfo', 1), ('getOutputBuffers', 1), ('clear', 1), ('getAssetFileDescriptor', 1), ('getFileDescriptor', 1), ('getStartOffset', 1), ('getLength', 1), ('stop', 1), ('onCreate', 1), ('resetRenderer', 1), ('resetRenderMode', 1), ('resetGlVersion', 1), ('getView', 1), ('getLooper', 1), ('setWideColorGamut', 1), ('getColorMode', 1), ('initGLExtensionUnsupported', 1), ('await', 1), ('nCreateRenderer', 1), ('getVersion', 1), ('getBuildNumber', 1), ('getAbiBits', 1), ('flush', 1), ('getMessage', 1)]"	"[('CtsOpenGLTestCases', 15), ('CtsGpuToolsHostTestCases', 12), ('CtsMediaTestCases', 8), ('CtsSensorTestCases', 4), ('CtsUiRenderingTestCases', 2), ('CtsAtomicInstallTestCases', 1), ('CtsCameraTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsViewTestCases', 1), ('CtsGraphicsTestCases', 1)]"	""	"android.opengl.cts.NativeAttachShaderTest"	"getType"	"CtsOpenGLTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/NativeAttachShaderTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorManagerStaticTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGLES20NativeActivityOne.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/testharness/app/src/android/testharness/app/TestHarnessActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/atomicinstall/src/com/android/tests/atomicinstall/AtomicInstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sustainedperf/shadertoy_android/src/GLtestView.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/RendererBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/RendererTenShaderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeAccuracyTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/GLSurfaceViewCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/device-setup/TestDeviceSetup/src/android/tests/getinfo/DeviceInfoActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySystemDecorationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TextureViewCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/DepPrinter.java', 1)]"	"[('(2,GLES,/android/uirendering/cts/testclasses/ExactCanvasTests.java)', 1), ('(6,GLES,/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java)', 1), ('(16,GLES,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(6,GLES,/android/opengl/cts/OpenGLES20NativeActivityOne.java)', 1), ('(13,GLES,/android/media/cts/MediaCodecTest.java)', 1), ('(1,GLES,/android/testharness/app/TestHarnessActivity.java)', 1), ('(1,GLES,/com/android/tests/atomicinstall/AtomicInstallTest.java)', 1), ('(190,GLES,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 1), ('(1,GLES,/GLtestView.java)', 1), ('(6,GLES,/android/opengl/cts/RendererBase.java)', 1), ('(8,GLES,/android/opengl/cts/RendererTenShaderTest.java)', 1), ('(67,GLES,/android/media/cts/DecodeAccuracyTestBase.java)', 1), ('(1,GLES,/android/hardware/cts/GLSurfaceViewCtsActivity.java)', 1), ('(3,GLES,/android/tests/getinfo/DeviceInfoActivity.java)', 1), ('(1,GLES,/android/server/wm/MultiDisplaySystemDecorationTests.java)', 1), ('(4,GLES,/android/view/cts/TextureViewCtsActivity.java)', 1), ('(1,GLES,/android/graphics/cts/CameraGpuCtsActivity.java)', 1), ('(16,GLES,/android/hardware/cts/SensorManagerStaticTest.java)', 1), ('(3,GLES,/com/android/cts/releaseparser/DepPrinter.java)', 1), ('(23,GLES,/android/opengl/cts/NativeAttachShaderTest.java)', 1)]"	"[('([1:/android/opengl/cts/NativeAttachShaderTest.java]:[GLES]:[1]:method_text:[Activity.mRenderer.mAttachShaderError;        assertTrue(GLES20.GL_NO_ERROR != error);    }*/   ])', 2), ('([1:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[GLES]:[1]:method_text:[       new Paint());                })                .runWithComparer(mExactComparer);    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[GLES]:[1]:method_text:[             new Paint());                })                .runWithVerifier(verifier);    }   ])', 1), ('([6:/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java]:[GLES]:[6]:method_text:[        yScale * height / 2.0f,                near, far);        return projectionMatrix;    }}])', 1), ('([1:/android/media/cts/DecodeEditEncodeTest.java]:[GLES]:[1]:method_text:[gest color component delta seen (i.e. actual vs. expected)    private int mLargestColorDelta;   ])', 1), ('([15:/android/media/cts/DecodeEditEncodeTest.java]:[GLES]:[15]:method_text:[                  throw new RuntimeException(ioe);                }            }        }    }}])', 1), ('([6:/android/opengl/cts/OpenGLES20NativeActivityOne.java]:[GLES]:[6]:method_text:[   mLatch.countDown();    }    public void onSurfaceCreated(GL10 gl, EGLConfig config) {    }}])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[GLES]:[1]:method_text:[s are thrown from MediaCodec     * methods when called in incorrect operational states.     */   ])', 1), (""([3:/android/media/cts/MediaCodecTest.java]:[GLES]:[3]:method_text:[    /**     * Tests:     * <br> stopping with buffers in flight doesn't crash or hang     */   ])"", 1), ('([3:/android/media/cts/MediaCodecTest.java]:[GLES]:[3]:method_text:[ (inputSurface != null) {                inputSurface.release();            }        }    }   ])', 1), ('([3:/android/media/cts/MediaCodecTest.java]:[GLES]:[3]:method_text:[ts:     * <br> dequeueInputBuffer() fails when encoder configured with an input Surface     */   ])', 1), ('([3:/android/media/cts/MediaCodecTest.java]:[GLES]:[3]:method_text:[077efecc0b24d02L, 0xace33c1e52e2fb4bL);    /**     * Tests MediaCodec.CryptoException     */   ])', 1), ('([1:/android/testharness/app/TestHarnessActivity.java]:[GLES]:[1]:method_text:[ean() {        return !Files.exists(getFilesDir().toPath().resolve(DIRTY_DEVICE_FILENAME));    }}])', 1), (""([1:/com/android/tests/atomicinstall/AtomicInstallTest.java]:[GLES]:[1]:method_text:[ {            }        }    }    /**     * Tests a multi-session can't be a child.     */   ])"", 1), ('([45:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GLES]:[45]:method_text:[es layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GLES]:[1]:method_text:[ES layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 1), (""([28:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GLES]:[28]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 1), ('([14:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GLES]:[14]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 1), ('([13:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GLES]:[13]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 1), ('([13:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GLES]:[13]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 1), ('([13:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GLES]:[13]:method_text:[/**     * This test ensures we can still use properties if no GLES layers are specified     */   ])', 1), ('([13:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GLES]:[13]:method_text:[/**     * This test ensures system properties are ignored if Settings load a GLES layer     */   ])', 1), ('([34:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GLES]:[34]:method_text:[/**     * This test ensures that external GLES layers can be loaded by a debuggable app     */   ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GLES]:[3]:method_text:[     * This test ensures that external GLES layers can be loaded by an injectLayers app     */   ])', 1), ('([2:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GLES]:[2]:method_text:[ throws Exception {        testLayerLoadExternalGLES(INJECT_APP);    }    /**     *     */   ])', 1), ('([11:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GLES]:[11]:method_text:[ppStartTime);        Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);    }}])', 1), ('([1:/GLtestView.java]:[GLES]:[1]:method_text:[blic void onSurfaceCreated(GL10 gl, EGLConfig config) {            // Do nothing.        }    }}])', 1), ('([6:/android/opengl/cts/RendererBase.java]:[GLES]:[6]:method_text:[  }    /// dummy method to be overridden by child    public void doOnDrawFrame(GL10 gl) {    }}])', 1), ('([8:/android/opengl/cts/RendererTenShaderTest.java]:[GLES]:[8]:method_text:[.glLinkProgram(mProgram);        mError = GLES20.glGetError();        mLatch.countDown();    }}])', 1), ('([67:/android/media/cts/DecodeAccuracyTestBase.java]:[GLES]:[67]:method_text:[blic static boolean isVideo(String mimeType) {        return mimeType.startsWith(""video"");    }}])', 1), ('([1:/android/hardware/cts/GLSurfaceViewCtsActivity.java]:[GLES]:[1]:method_text:[  @Override    protected void onPause() {        super.onPause();        mView.onPause();    }}])', 1), ('([3:/android/tests/getinfo/DeviceInfoActivity.java]:[GLES]:[3]:method_text:[nfoInstrument.addResult(DeviceInfoConstants.LOCALES,                localeList.toString());    }}])', 1), ('([1:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[GLES]:[1]:method_text:[a multi-instance home activity on virtual display with system decoration     * support.     */   ])', 1), ('([4:/android/view/cts/TextureViewCtsActivity.java]:[GLES]:[4]:method_text:[FACE_TYPE, EGL10.EGL_WINDOW_BIT,                    EGL10.EGL_NONE            };        }    }}])', 1), ('([1:/android/graphics/cts/CameraGpuCtsActivity.java]:[GLES]:[1]:method_text:[ive void nDestroyRenderer(long renderer);    private static native int nDrawFrame(long renderer);}])', 1), ('([4:/android/hardware/cts/SensorManagerStaticTest.java]:[GLES]:[4]:method_text:[v2[0], rotv2[1], rotv2[2]),                RI[0] + RI[4] + RI[8], 3.f, 1e-4f);        }    }   ])', 1), ('([3:/android/hardware/cts/SensorManagerStaticTest.java]:[GLES]:[3]:method_text:[v2[0], rotv2[1], rotv2[2]),                RI[0] + RI[4] + RI[8], 3.f, 1e-4f);        }    }   ])', 1), ('([1:/android/hardware/cts/SensorManagerStaticTest.java]:[GLES]:[1]:method_text:[d to fail (singular axis)"",            SensorManager.getRotationMatrix(Rr, Ir, gI, gI));    }   ])', 1), ('([8:/android/hardware/cts/SensorManagerStaticTest.java]:[GLES]:[8]:method_text:[m[6], m[7],            m[8], m[9], m[10], m[11],            m[12], m[13], m[14], m[15]);    }}])', 1), ('([3:/com/android/cts/releaseparser/DepPrinter.java]:[GLES]:[3]:method_text:[(Exception e) {            e.printStackTrace();            System.err.println(e);        }    }])', 1), ('([9:/android/opengl/cts/NativeAttachShaderTest.java]:[GLES]:[9]:method_text:[  * <pre>     * shader count : 2     * error        : GLES20.GL_NO_ERROR     * </pre>     */   ])', 1), ('([2:/android/opengl/cts/NativeAttachShaderTest.java]:[GLES]:[2]:method_text:[: 1     * error        : GLES20.GL_INVALID_VALUE     * </pre>     * @throws Throwable     */   ])', 1), ('([2:/android/opengl/cts/NativeAttachShaderTest.java]:[GLES]:[2]:method_text:[     * error        : GLES20.GL_INVALID_OPERATION     * </pre>     * @throws Throwable     */   ])', 1), ('([2:/android/opengl/cts/NativeAttachShaderTest.java]:[GLES]:[2]:method_text:[ount : 0     * error        : GLES20.GL_NO_ERROR     * </pre>     * @throws Throwable     */   ])', 1), ('([1:/android/opengl/cts/NativeAttachShaderTest.java]:[GLES]:[1]:method_text:[        assertEquals(GLES20.GL_NO_ERROR, error);    }/* only one frag shader can be attached   ])', 1), ('([1:/android/opengl/cts/NativeAttachShaderTest.java]:[GLES]:[1]:method_text:[       assertEquals(GLES20.GL_NO_ERROR, error);    }/* only one vertex shader can be attached   ])', 1), ('([1:/android/opengl/cts/NativeAttachShaderTest.java]:[GLES]:[1]:method_text:[ror;        // The operations are valid        assertEquals(GLES20.GL_NO_ERROR, error);    }   ])', 1), ('([1:/android/opengl/cts/NativeAttachShaderTest.java]:[GLES]:[1]:method_text:[ mActivity.mRenderer.mAttachShaderError;        assertTrue(GLES20.GL_NO_ERROR != error);    }   ])', 1), ('([1:/android/opengl/cts/NativeAttachShaderTest.java]:[GLES]:[1]:method_text:[ mActivity.mRenderer.mAttachShaderError;        assertEquals(GLES20.GL_NO_ERROR, error);    }   ])', 1), ('([1:/android/opengl/cts/NativeAttachShaderTest.java]:[GLES]:[1]:method_text:[r = mActivity.mRenderer.mAttachShaderError;        assertEquals(GLES20.GL_NO_ERROR, error);    }}])', 1)]"	""	""	"[('GLES', 51)]"	"[('[android.uirendering.cts.testclasses.ExactCanvasTests testBlackTriangleVertices CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testBlackTriangleVertices2 CtsUiRenderingTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer doTestSpecificRendering None]', 1), ('[android.media.cts.DecodeEditEncodeTest testVideoEdit720p CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testSignalSurfaceEOS CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testAbruptStop CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testAsyncStopAndReset CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testCryptoInfoPattern CtsMediaTestCases]', 1), ('[android.testharness.app.TestHarnessActivity isKeyboardVisible None]', 1), ('[com.android.tests.atomicinstall.AtomicInstallTest testInvalidStateScenario_AddChildToSingleSessionShouldFail CtsAtomicInstallTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest currentTimeMillis CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testInstanceExtensionPropertiesFromImplicitLayerVulkanMultipleLayers CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testReleaseLayerLoadGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadExternalGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testInjectLayerLoadExternalGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testMultipleExternalApps CtsGpuToolsHostTestCases]', 1), ('[android.media.cts.DecodeAccuracyTestBase isAbrEnabled CtsMediaTestCases]', 1), ('[android.tests.getinfo.DeviceInfoActivity waitForAcitityToFinish None]', 1), ('[android.server.wm.MultiDisplaySystemDecorationTests testLaunchSingleSecondaryHomeActivityOnDisplayWithDecorations CtsWindowManagerDeviceTestCases]', 1), ('[android.view.cts.TextureViewCtsActivity glFinish CtsViewTestCases]', 1), ('[android.graphics.cts.CameraGpuCtsActivity waitToFinishRendering CtsGraphicsTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest testGetAngleChange CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest testGetOrientation CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest testGetRotationMatrix CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorManagerStaticTest testRemapCoordinateSystem CtsSensorTestCases]', 1), ('[com.android.cts.releaseparser.DepPrinter getDependenciesList None]', 1), ('[android.opengl.cts.NativeAttachShaderTest NativeAttachShaderTest CtsOpenGLTestCases]', 1), ('[android.opengl.cts.NativeAttachShaderTest test_glAttachedShaders_validshader CtsOpenGLTestCases]', 1), ('[android.opengl.cts.NativeAttachShaderTest test_glAttachedShaders_invalidshader CtsOpenGLTestCases]', 1), ('[android.opengl.cts.NativeAttachShaderTest test_glAttachedShaders_attach_same_shader CtsOpenGLTestCases]', 1), ('[android.opengl.cts.NativeAttachShaderTest test_glAttachedShaders_noshader CtsOpenGLTestCases]', 1), ('[android.opengl.cts.NativeAttachShaderTest test_glAttachShaders_emptyfragshader_emptyfragshader CtsOpenGLTestCases]', 1), ('[android.opengl.cts.NativeAttachShaderTest test_glAttachShaders_emptyfragshader_emptyvertexshader CtsOpenGLTestCases]', 1), ('[android.opengl.cts.NativeAttachShaderTest test_glAttachShaders_emptyvertexshader_emptyvertexshader CtsOpenGLTestCases]', 1), ('[android.opengl.cts.NativeAttachShaderTest test_glAttachShaders_programobject_attach_fragshaderobject CtsOpenGLTestCases]', 1), ('[android.opengl.cts.NativeAttachShaderTest test_glAttachShaders_invalidshader_attach_valid_handle CtsOpenGLTestCases]', 1), ('[android.opengl.cts.NativeAttachShaderTest test_glAttachShaders_successfulcompile_attach_frag CtsOpenGLTestCases]', 1), ('[android.opengl.cts.NativeAttachShaderTest test_glAttachShaders_successfulcompile_attach_vert CtsOpenGLTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.5.1  . Application Restriction"	"3.5.1"	"C-2-1"	"3.5.1/C-2-1"	"03050100.670201"	"""C-2-1]MUST follow the implementation described in this document. <h4 id=""352_application_hibernation"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-8"	"5.1/H-1-8"	"05010000.720108"	"""[5.1/H-1-8] MUST have a codec initialization latency of 50 ms or less for a 128 kbps or lower bitrate audio encoding session for all audio encoders when under load.Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization.  | [5.1/H-1-8] MUST have a codec initialization latency of 40 ms or less for a 128 kbps or lower bitrate audio encoding session for all audio encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization. """	""	""	"load.Load"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.9.1.1  . The"	"3.9.1.1"	"C-1-8"	"3.9.1.1/C-1-8"	"03090101.670108"	"""C-1-8] MUST send the ACTION_GET_PROVISIONING_MODE intent after device owner provisioning is triggered so that the DPC app can choose whether to become a Device Owner or a Profile Owner unless it can be determined from context that there is only one valid option (such as for NFC based provisioning where Profile Owner provisioning is not supported)."""	""	""	"DPC ACTION_GET_PROVISIONING_MODE NFC"	""	""	""	""	"[('android.provider.cts.SettingsPanelTest', 4), ('com.android.cts.deviceandprofileowner.SuspendPackageTest', 2), ('android.quickaccesswallet.cts.WalletServiceEventTest', 2), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 2), ('android.app.cts.SystemFeaturesTest', 2), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 2), ('android.media.cts.AudioPlaybackConfigurationTest', 1), ('android.security.cts.CVE_2018_9584', 1), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.verifier.nfc.hce.OnAndOffHostEmulatorActivity', 1), ('android.security.cts.CVE_2020_0038', 1), ('com.android.cts.managedprofile.SettingsIntentsTest', 1), ('com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerHostSideTransferTest', 1), ('android.security.cts.CVE_2019_2019', 1), ('com.android.cts.verifier.nfc.hce.ForegroundPaymentEmulatorActivity', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('com.android.cts.verifier.nfc.hce.OffHostEmulatorActivity', 1), ('android.security.cts.CVE_2019_2021', 1), ('android.security.cts.CVE_2020_0039', 1), ('android.telecom.cts.BaseTelecomTestWithMockServices', 1), ('com.android.cts.verifier.nfc.hce.ProtocolParamsEmulatorActivity', 1), ('com.android.cts.verifier.nfc.offhost.UiccTransactionEvent3EmulatorActivity', 1), ('android.quickaccesswallet.TestHostApduService', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('com.android.cts.verifier.managedprovisioning.NfcTestActivity', 1), ('com.android.cts.verifier.nfc.hcef.MyHostFelicaService', 1), ('android.content.cts.AvailableIntentsTest', 1), ('com.android.cts.verifier.nfc.hce.HceUtils', 1), ('com.android.cts.verifier.nfc.hcef.HceFEmulatorTestActivity', 1), ('com.android.cts.verifier.nfc.hce.SimpleReaderActivity', 1), ('processor.main.java.com.android.bedstead.remotedpc.processor.Processor', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.verifier.nfc.hce.DualNonPaymentEmulatorActivity', 1), ('com.android.cts.verifier.nfc.hce.HceService', 1), ('com.android.cts.verifier.nfc.hce.BaseEmulatorActivity', 1), ('com.android.cts.verifier.nfc.hce.HceReaderTestActivity', 1), ('com.android.cts.verifier.nfc.hce.ChangeDefaultEmulatorActivity', 1), ('com.android.cts.verifier.managedprovisioning.ByodHelperActivity', 1), ('com.android.cts.verifier.nfc.offhost.OffhostUiccReaderTestActivity', 1), ('com.android.cts.verifier.nfc.hce.DualNonPaymentPrefixEmulatorActivity', 1), ('com.android.cts.verifier.nfc.hce.SinglePaymentEmulatorActivity', 1), ('android.car.cts.powerpolicy.PowerPolicyDef', 1)]"	"[('getCurrentPackageName', 6), ('setUp', 5), ('getBuild', 4), ('getDevice', 4), ('launchNfcPanel', 3), ('length', 3), ('pressSeeMore', 2), ('getName', 2), ('getIntent', 2), ('StringBuilder', 2), ('toString', 2), ('getSystemAvailableFeatures', 2), ('getComponent', 2), ('onStop', 2), ('onDestroy', 2), ('onPause', 2), ('onResume', 2), ('createPublicVersionNotification', 2), ('build', 2), ('getMaxNumberOfUsersSupported', 2), ('getInstalledPackageNames', 2), ('nfcPanel_correctPackage', 1), ('nfcPanel_doneClosesPanel', 1), ('pressDone', 1), ('nfcPanel_seeMoreButton_launchesIntoSettings', 1), ('wifiPanel_seeMoreButton_launchesIntoSettings', 1), ('launchWifiPanel', 1), ('getInstrumentation', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getSupportedSourceVersion', 1), ('onApduSequenceComplete', 1), ('onApduSequenceError', 1), ('SetupServicesTask', 1), ('getMainLooper', 1), ('Bundle', 1), ('getAction', 1), ('Intent', 1), ('getPolicyId', 1), ('getEnables', 1)]"	"[('CtsSecurityBulletinHostTestCases', 5), ('CtsProviderTestCases', 4), ('CtsDevicePolicyManagerTestCases', 3), ('CtsQuickAccessWalletTestCases', 3), ('CtsDevicePolicyTestCases', 2), ('CtsAppTestCases', 2), ('CtsMediaTestCases', 1), ('CtsMediaParserTestCases', 1), ('CtsTelecomTestCases', 1), ('CtsContentTestCases', 1), ('CtsCarHostTestCases', 1)]"	""	"com.android.cts.devicepolicy.BaseDevicePolicyTest"	"getDevice"	"CtsDevicePolicyManagerTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/SettingsPanelTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/quickaccesswallet/src/android/quickaccesswallet/cts/WalletServiceEventTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2018_9584.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/OnAndOffHostEmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2020_0038.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/SettingsIntentsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2019_2019.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/ForegroundPaymentEmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/OffHostEmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2019_2021.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2020_0039.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/BaseTelecomTestWithMockServices.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/ProtocolParamsEmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent3EmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/quickaccesswallet/src/android/quickaccesswallet/TestHostApduService.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/NfcTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hcef/MyHostFelicaService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/HceUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hcef/HceFEmulatorTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/SimpleReaderActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/DualNonPaymentEmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/HceService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/BaseEmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/HceReaderTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/ChangeDefaultEmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/offhost/OffhostUiccReaderTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/DualNonPaymentPrefixEmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/hce/SinglePaymentEmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/powerpolicy/PowerPolicyDef.java', 1)]"	"[('(5,NFC,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(1,NFC,/android/security/cts/CVE_2018_9584.java)', 1), ('(2,DPC,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(6,NFC,/com/android/cts/verifier/nfc/hce/OnAndOffHostEmulatorActivity.java)', 1), ('(9,NFC,/android/provider/cts/SettingsPanelTest.java)', 1), ('(1,NFC,/android/security/cts/CVE_2020_0038.java)', 1), ('(3,NFC,/com/android/cts/managedprofile/SettingsIntentsTest.java)', 1), ('(9,NFC,/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java)', 1), ('(4,DPC,/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java)', 1), ('(1,NFC,/android/security/cts/CVE_2019_2019.java)', 1), ('(10,NFC,/com/android/cts/verifier/nfc/hce/ForegroundPaymentEmulatorActivity.java)', 1), ('(2,DPC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(6,NFC,/com/android/cts/verifier/nfc/hce/OffHostEmulatorActivity.java)', 1), ('(1,NFC,/android/security/cts/CVE_2019_2021.java)', 1), ('(4,DPC,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(1,NFC,/android/security/cts/CVE_2020_0039.java)', 1), ('(7,NFC,/android/telecom/cts/BaseTelecomTestWithMockServices.java)', 1), ('(5,NFC,/com/android/cts/verifier/nfc/hce/ProtocolParamsEmulatorActivity.java)', 1), ('(9,NFC,/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent3EmulatorActivity.java)', 1), ('(1,NFC,/android/quickaccesswallet/TestHostApduService.java)', 1), ('(2,NFC,/android/quickaccesswallet/cts/WalletServiceEventTest.java)', 1), ('(4,DPC,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(2,DPC,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(23,NFC,/com/android/cts/verifier/managedprovisioning/NfcTestActivity.java)', 1), ('(13,NFC,/com/android/cts/verifier/nfc/hcef/MyHostFelicaService.java)', 1), ('(2,NFC,/android/content/cts/AvailableIntentsTest.java)', 1), ('(3,NFC,/com/android/cts/verifier/nfc/hce/HceUtils.java)', 1), ('(12,NFC,/android/app/cts/SystemFeaturesTest.java)', 1), ('(15,NFC,/com/android/cts/verifier/nfc/hcef/HceFEmulatorTestActivity.java)', 1), ('(25,NFC,/com/android/cts/verifier/nfc/hce/SimpleReaderActivity.java)', 1), ('(19,DPC,/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java)', 1), ('(2,DPC,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(5,NFC,/com/android/cts/verifier/nfc/hce/DualNonPaymentEmulatorActivity.java)', 1), ('(2,NFC,/com/android/cts/verifier/nfc/hce/HceService.java)', 1), ('(10,NFC,/com/android/cts/verifier/nfc/hce/BaseEmulatorActivity.java)', 1), ('(54,NFC,/com/android/cts/verifier/nfc/hce/HceReaderTestActivity.java)', 1), ('(8,NFC,/com/android/cts/verifier/nfc/hce/ChangeDefaultEmulatorActivity.java)', 1), ('(7,NFC,/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java)', 1), ('(15,NFC,/com/android/cts/verifier/nfc/offhost/OffhostUiccReaderTestActivity.java)', 1), ('(7,NFC,/com/android/cts/verifier/nfc/hce/DualNonPaymentPrefixEmulatorActivity.java)', 1), ('(7,NFC,/com/android/cts/verifier/nfc/hce/SinglePaymentEmulatorActivity.java)', 1), ('(8,NFC,/android/car/cts/powerpolicy/PowerPolicyDef.java)', 1), ('(2,DPC,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(7,NFC,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1)]"	"[('([5:/android/media/cts/AudioPlaybackConfigurationTest.java]:[NFC]:[5]:method_text:[     fail(""Exception thrown during reflection on config privileged fields""+ e);        }    }   ])', 1), ('([1:/android/security/cts/CVE_2018_9584.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2018-9584"", null, getDevice());    }}])', 1), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);    }}])', 1), ('([6:/com/android/cts/verifier/nfc/hce/OnAndOffHostEmulatorActivity.java]:[NFC]:[6]:method_text:[t.equals(AccessService.COMPONENT)) {            getPassButton().setEnabled(true);        }    }}])', 1), ('([2:/android/provider/cts/SettingsPanelTest.java]:[NFC]:[2]:method_text:[getCurrentPackageName();        assertThat(currentPackage).isEqualTo(mSettingsPackage);    }   ])', 1), ('([2:/android/provider/cts/SettingsPanelTest.java]:[NFC]:[2]:method_text:[tCurrentPackageName();        assertThat(currentPackage).isNotEqualTo(mSettingsPackage);    }   ])', 1), ('([2:/android/provider/cts/SettingsPanelTest.java]:[NFC]:[2]:method_text:[Object(By.res(mSettingsPackage, RESOURCE_TITLE));        assertThat(titleView).isNull();    }   ])', 1), ('([3:/android/provider/cts/SettingsPanelTest.java]:[NFC]:[3]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([1:/android/security/cts/CVE_2020_0038.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2020-0038"", null, getDevice());    }}])', 1), ('([3:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[NFC]:[3]:method_text:[                    new Intent(Settings.ACTION_NFC_SETTINGS), 0 /* flags */));        }    }   ])', 1), ('([9:/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java]:[NFC]:[9]:method_text:[utton().setEnabled(false);                    }                });            }        }    }}])', 1), ('([4:/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java]:[DPC]:[4]:method_text:[NCOMING_TEST);            installAppAsUser(TRANSFER_OWNER_INCOMING_APK, mUserId);        }    }}])', 1), ('([1:/android/security/cts/CVE_2019_2019.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2019-2019"", null, getDevice());    }}])', 1), ('([10:/com/android/cts/verifier/nfc/hce/ForegroundPaymentEmulatorActivity.java]:[NFC]:[10]:method_text:[equals(PaymentService2.COMPONENT)) {            getPassButton().setEnabled(true);        }    }}])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {        testAssetExtraction(""wav/sample_ima_adpcm.wav"");    }   ])', 1), ('([6:/com/android/cts/verifier/nfc/hce/OffHostEmulatorActivity.java]:[NFC]:[6]:method_text:[  }    @Override    void onApduSequenceComplete(ComponentName component, long duration) {    }}])', 1), ('([1:/android/security/cts/CVE_2019_2021.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2019-2021"", null, getDevice());    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[1]:method_text:[RECEIVER_PKG);    }    /**     * Verify that we cannot suspend launcher and dpc app.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[3]:method_text:[);        assertWithMessage(""package %s suspension"", pkg).that(actual).isEqualTo(expected);    }}])', 1), ('([1:/android/security/cts/CVE_2020_0039.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2020-0039"", null, getDevice());    }}])', 1), ('([7:/android/telecom/cts/BaseTelecomTestWithMockServices.java]:[NFC]:[7]:method_text:[                return false;                }            }        }        return true;    }}])', 1), ('([5:/com/android/cts/verifier/nfc/hce/ProtocolParamsEmulatorActivity.java]:[NFC]:[5]:method_text:[  }    @Override    void onApduSequenceComplete(ComponentName component, long duration) {    }}])', 1), ('([9:/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent3EmulatorActivity.java]:[NFC]:[9]:method_text:[utton().setEnabled(false);                    }                });            }        }    }}])', 1), ('([1:/android/quickaccesswallet/TestHostApduService.java]:[NFC]:[1]:method_text:[       return new byte[0];    }    @Override    public void onDeactivated(int reason) {    }}])', 1), ('([1:/android/quickaccesswallet/cts/WalletServiceEventTest.java]:[NFC]:[1]:method_text:[ink WalletServiceEvent} */@RunWith(AndroidJUnit4.class)public class WalletServiceEventTest {   ])', 1), ('([1:/android/quickaccesswallet/cts/WalletServiceEventTest.java]:[NFC]:[1]:method_text:[eFromParcel(p);        assertThat(event.getEventType()).isEqualTo(newEvent.getEventType());    }}])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[provider that provides enterprise slice cannot     * see the enterprise slice requests.     */   ])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[()), offerCallback);        offerCallback.assertNoCallback();        return offerCallback;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases. * */public class ResetPasswordTest extends BaseDeviceAdminTest {   ])', 1), ('([23:/com/android/cts/verifier/managedprovisioning/NfcTestActivity.java]:[NFC]:[23]:method_text:[               new NdefRecord(NdefRecord.TNF_MIME_MEDIA, mimeBytes, id, payload)        });    }}])', 1), ('([13:/com/android/cts/verifier/nfc/hcef/MyHostFelicaService.java]:[NFC]:[13]:method_text:[        }        return null;    }    @Override    public void onDeactivated(int i) {    }}])', 1), ('([2:/android/content/cts/AvailableIntentsTest.java]:[NFC]:[2]:method_text:[          assertCanBeHandled(new Intent(Settings.ACTION_NFC_PAYMENT_SETTINGS));        }    }   ])', 1), ('([3:/com/android/cts/verifier/nfc/hce/HceUtils.java]:[NFC]:[3]:method_text:[h() / 2));        sb.append(aid);        return new CommandApdu(sb.toString(), reachable);    }}])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[NFC]:[2]:method_text:[properly prefixed with ""android."" that are not defined in     * {@link PackageManager}.     */   ])', 1), ('([10:/android/app/cts/SystemFeaturesTest.java]:[NFC]:[10]:method_text:[            assertNotAvailable(PackageManager.FEATURE_NFC_HOST_CARD_EMULATION);        }    }   ])', 1), ('([15:/com/android/cts/verifier/nfc/hcef/HceFEmulatorTestActivity.java]:[NFC]:[15]:method_text:[t(this, HceFEmulatorActivity.class), null));        }        setTestListAdapter(adapter);    }}])', 1), ('([25:/com/android/cts/verifier/nfc/hce/SimpleReaderActivity.java]:[NFC]:[25]:method_text:[iew<?> parent) {    }    @Override    public String getTestId() {        return mLabel;    }}])', 1), ('([19:/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java]:[DPC]:[19]:method_text:[getMessager()                .printMessage(Diagnostic.Kind.ERROR, errorText, errorElement);    }}])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[e(ComponentName, String)} */public class CertInstallDelegateTest extends BaseJUnit3TestCase {   ])', 1), ('([5:/com/android/cts/verifier/nfc/hce/DualNonPaymentEmulatorActivity.java]:[NFC]:[5]:method_text:[quals(TransportService2.COMPONENT)) {            getPassButton().setEnabled(true);        }    }])', 1), ('([2:/com/android/cts/verifier/nfc/hce/HceService.java]:[NFC]:[2]:method_text:[ceComplete();                }                return responseApdu;            }        }    }}])', 1), ('([10:/com/android/cts/verifier/nfc/hce/BaseEmulatorActivity.java]:[NFC]:[10]:method_text:[      }    }    void onPaymentDefaultResult(ComponentName component, boolean success) {    };}])', 1), ('([54:/com/android/cts/verifier/nfc/hce/HceReaderTestActivity.java]:[NFC]:[54]:method_text:[orActivity.buildReaderIntent(this), null));        }        setTestListAdapter(adapter);    }}])', 1), ('([8:/com/android/cts/verifier/nfc/hce/ChangeDefaultEmulatorActivity.java]:[NFC]:[8]:method_text:[             NfcDialogs.createHceTapReaderDialog(this, null).show();            }        }    }}])', 1), ('([7:/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java]:[NFC]:[7]:method_text:[ge = getString(messageId);        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();    }}])', 1), ('([15:/com/android/cts/verifier/nfc/offhost/OffhostUiccReaderTestActivity.java]:[NFC]:[15]:method_text:[orActivity.buildReaderIntent(this), null));        }        setTestListAdapter(adapter);    }}])', 1), ('([7:/com/android/cts/verifier/nfc/hce/DualNonPaymentPrefixEmulatorActivity.java]:[NFC]:[7]:method_text:[als(PrefixAccessService.COMPONENT)) {            getPassButton().setEnabled(true);        }    }])', 1), ('([7:/com/android/cts/verifier/nfc/hce/SinglePaymentEmulatorActivity.java]:[NFC]:[7]:method_text:[equals(PaymentService1.COMPONENT)) {            getPassButton().setEnabled(true);        }    }}])', 1), ('([8:/android/car/cts/powerpolicy/PowerPolicyDef.java]:[NFC]:[8]:method_text:[                ComponentList.RUNTIME_SILENT_ENABLE, ComponentList.RUNTIME_SILENT_DISABLE);    }}])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[DPC]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([7:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[NFC]:[7]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1)]"	""	""	"[('NFC', 40), ('DPC', 11)]"	"[('[android.provider.cts.SettingsPanelTest isNull CtsProviderTestCases]', 2), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 2), ('[android.media.cts.AudioPlaybackConfigurationTest testGetterMediaPlayer CtsMediaTestCases]', 1), ('[android.security.cts.CVE_2018_9584 testPocCVE_2018_9584 CtsSecurityBulletinHostTestCases]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[com.android.cts.verifier.nfc.hce.OnAndOffHostEmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.security.cts.CVE_2020_0038 testPocCVE_2020_0038 CtsSecurityBulletinHostTestCases]', 1), ('[com.android.cts.managedprofile.SettingsIntentsTest testNfc None]', 1), ('[com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.security.cts.CVE_2019_2019 testPocCVE_2019_2019 CtsSecurityBulletinHostTestCases]', 1), ('[com.android.cts.verifier.nfc.hce.ForegroundPaymentEmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testWavWithImaAdpcm CtsMediaParserTestCases]', 1), ('[com.android.cts.verifier.nfc.hce.OffHostEmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.security.cts.CVE_2019_2021 testPocCVE_2019_2021 CtsSecurityBulletinHostTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSetPackagesNotSuspended None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSuspendNotSuspendablePackages None]', 1), ('[android.security.cts.CVE_2020_0039 testPocCVE_2020_0039 CtsSecurityBulletinHostTestCases]', 1), ('[android.telecom.cts.BaseTelecomTestWithMockServices disableCarMode CtsTelecomTestCases]', 1), ('[com.android.cts.verifier.nfc.hce.ProtocolParamsEmulatorActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.nfc.offhost.UiccTransactionEvent3EmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.quickaccesswallet.cts.WalletServiceEventTest testParcel_toParcel CtsQuickAccessWalletTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_enableService_issueRequest CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_disableService_noIssueRequest CtsDevicePolicyTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.NfcTestActivity getTestMessage None]', 1), ('[android.content.cts.AvailableIntentsTest testTapAnPaySettings CtsContentTestCases]', 1), ('[android.app.cts.SystemFeaturesTest testNfcFeatures CtsAppTestCases]', 1), ('[com.android.cts.verifier.nfc.hcef.HceFEmulatorTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.nfc.hce.SimpleReaderActivity setPassFailButtonClickListeners None]', 1), ('[processor.main.java.com.android.bedstead.remotedpc.processor.Processor latest None]', 1), ('[com.android.cts.verifier.nfc.hce.DualNonPaymentEmulatorActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.nfc.hce.HceService currentTimeMillis None]', 1), ('[com.android.cts.verifier.nfc.hce.BaseEmulatorActivity OnClickListener None]', 1), ('[com.android.cts.verifier.nfc.hce.HceReaderTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.nfc.hce.ChangeDefaultEmulatorActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.managedprovisioning.ByodHelperActivity isProfileOwner None]', 1), ('[com.android.cts.verifier.nfc.offhost.OffhostUiccReaderTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.nfc.hce.DualNonPaymentPrefixEmulatorActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.nfc.hce.SinglePaymentEmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.car.cts.powerpolicy.PowerPolicyDef getDisables CtsCarHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-0-13"	"9.1/C-0-13"	"09010000.670013"	"""C-0-13] MUST use the AppOpsManager APIs to record and track each and every programmatic access of data protected by dangerous permissions from Android activities and services."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.5.2  . Application Hibernation"	"3.5.2"	"C-1-4"	"3.5.2/C-1-4"	"03050200.670104"	"""C-1-4] MUST NOT render the app unable to respond to activity intents, service bindings, content provider requests, or explicit broadcasts. App Hibernation in AOSP meets the above requirements. <h3 id=""36_api_namespaces"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-4-2"	"9.8.2/H-4-2"	"09080200.720402"	"""[9.8.2/H-4-2] MUST display the list of Recent and Active apps using microphone as returned from PermissionManager.getIndicatorAppOpUsageData(), along with any attribution messages associated with them. """	""	""	"getIndicatorAppOpUsageData() PermissionManager.getIndicatorAppOpUsageData"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.1  . Text"	"3.1"	"C-2-1"	"3.1/C-2-1"	"03010000.670201"	"""C-2-1] MUST implement these preinstalled accessibility services as Direct Boot Aware apps when the data storage is encrypted with File Based Encryption (FBE). SHOULD provide a mechanism in the out-of-box setup flow for users to enable relevant accessibility services, as well as options to adjust the font size, display size and magnification gestures. <h3 id=""311_text-to-speech""  | C-2-1] MUST provide user affordance to allow the user to select a TTS engine for use at system level. <h3 id=""312_tv_input_framework"" """	""	""	"TTS FBE"	""	""	""	""	"[('android.media.mediaparser.cts.MediaParserTest', 8), ('android.speech.tts.cts.TextToSpeechConnectionTest', 6), ('android.media.tv.tuner.cts.TunerTest', 5), ('android.appsecurity.cts.AppDataIsolationTests', 3), ('com.android.cts.verifier.bluetooth.BleEncryptedServerService', 1), ('android.speech.tts.cts.TextToSpeechWrapper', 1), ('android.util.cts.XmlEncodingTest', 1), ('android.keystore.cts.CipherTest', 1), ('android.cts.statsdatom.statsd.DeviceAtomTestCase', 1), ('android.media.cts.MediaMuxerTest', 1), ('com.android.cts.verifier.bluetooth.BleEncryptedClientService', 1), ('android.cts.statsdatom.statsd.UidAtomTests', 1), ('android.telecom.cts.BaseTelecomTestWithMockServices', 1), ('android.renderscript.cts.generated.TestCross', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('android.security.cts.Poc17_09', 1), ('android.renderscript.cts.generated.TestNativeExp', 1), ('android.view.inputmethod.cts.InputMethodInfoTest', 1), ('com.android.cts.managedprofile.ResetPasswordWithTokenTest', 1), ('com.android.cts.verifier.streamquality.StreamingVideoActivity', 1), ('android.text.cts.FontCoverageTest', 1), ('android.car.cts.CarPropertyManagerTest', 1), ('com.android.cts.appsearch.external.app.ReportUsageRequestCtsTest', 1), ('com.android.cts.verifier.bluetooth.BleCocClientService', 1), ('com.android.cts.verifier.bluetooth.BleServerService', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('android.keystore.cts.SignatureTest', 1), ('android.telecom.cts.RttOperationsTest', 1)]"	"[('destroy', 44), ('toString', 37), ('setUp', 13), ('StringBuilder', 12), ('close', 11), ('getDevice', 9), ('onCreate', 8), ('build', 8), ('builder', 7), ('tearDown', 5), ('getContext', 5), ('getAdapter', 4), ('getSurface', 4), ('ArgumentsFloatFloat', 4), ('ArgumentsHalfHalf', 4), ('hashCode', 4), ('onConnectionStateChange', 4), ('Handler', 3), ('getName', 3), ('getWidth', 3), ('getHeight', 3), ('getInstrumentation', 2), ('getTargetContext', 2), ('getClass', 2), ('getBluetoothLeScanner', 2), ('onDestroy', 2), ('ArgumentsFloatNFloatNFloatN', 2), ('ArgumentsHalfNHalfNHalfN', 2), ('createBond', 2), ('getBuild', 2), ('BleEncryptedServerService', 1), ('supports3DES', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('BleEncryptedClientService', 1), ('quit', 1), ('getPackageManager', 1), ('checkCrossFloat3Float3Float3', 1), ('checkCrossFloat4Float4Float4', 1), ('checkCrossHalf3Half3Half3', 1), ('checkCrossHalf4Half4Half4', 1), ('release', 1), ('checkNativeExpFloatFloat', 1), ('checkNativeExpFloat2Float2', 1), ('checkNativeExpFloat3Float3', 1), ('checkNativeExpFloat4Float4', 1), ('checkNativeExpHalfHalf', 1), ('checkNativeExpHalf2Half2', 1), ('checkNativeExpHalf3Half3', 1), ('checkNativeExpHalf4Half4', 1), ('getBytes', 1), ('HashMap', 1), ('Builder', 1), ('toLanguageTag', 1), ('getCar', 1), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1)]"	"[('CtsMediaParserTestCases', 8), ('CtsSpeechTestCases', 7), ('CtsTvTestCases', 5), ('CtsAppSecurityHostTestCases', 3), ('CtsKeystoreTestCases', 2), ('CtsStatsdAtomHostTestCases', 2), ('CtsTelecomTestCases', 2), ('CtsRenderscriptTestCases', 2), ('CtsUtilTestCases', 1), ('CtsMediaTestCases', 1), ('CtsSecurityBulletinHostTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsTextTestCases', 1), ('CtsCarTestCases', 1), ('CtsAppSearchTestCases', 1), ('CtsDevicePolicyManagerTestCases', 1)]"	""	"android.telecom.cts.RttOperationsTest"	"getTargetContext"	"CtsTelecomTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/speech/src/android/speech/tts/cts/TextToSpeechConnectionTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleEncryptedServerService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/speech/src/android/speech/tts/cts/TextToSpeechWrapper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/util/src/android/util/cts/XmlEncodingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/DeviceAtomTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleEncryptedClientService.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/UidAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/BaseTelecomTestWithMockServices.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestCross.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_09.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeExp.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/streamquality/StreamingVideoActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarPropertyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/appsearch/src/com/android/cts/appsearch/external/app/ReportUsageRequestCtsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleCocClientService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleServerService.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/SignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/RttOperationsTest.java', 1)]"	"[('(34,TTS,/com/android/cts/verifier/bluetooth/BleEncryptedServerService.java)', 1), ('(29,TTS,/android/speech/tts/cts/TextToSpeechWrapper.java)', 1), ('(12,FBE,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(5,TTS,/android/util/cts/XmlEncodingTest.java)', 1), ('(2,FBE,/android/keystore/cts/CipherTest.java)', 1), ('(1,FBE,/android/cts/statsdatom/statsd/DeviceAtomTestCase.java)', 1), ('(8,TTS,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(8,TTS,/android/media/cts/MediaMuxerTest.java)', 1), ('(4,TTS,/com/android/cts/verifier/bluetooth/BleEncryptedClientService.java)', 1), ('(62,TTS,/android/speech/tts/cts/TextToSpeechConnectionTest.java)', 1), ('(1,FBE,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(5,TTS,/android/telecom/cts/BaseTelecomTestWithMockServices.java)', 1), ('(1,FBE,/android/renderscript/cts/generated/TestCross.java)', 1), ('(3,TTS,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(8,FBE,/android/security/cts/Poc17_09.java)', 1), ('(1,FBE,/android/renderscript/cts/generated/TestNativeExp.java)', 1), ('(5,FBE,/android/view/inputmethod/cts/InputMethodInfoTest.java)', 1), ('(1,FBE,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(1,FBE,/com/android/cts/verifier/streamquality/StreamingVideoActivity.java)', 1), ('(2,FBE,/android/text/cts/FontCoverageTest.java)', 1), ('(1,TTS,/android/car/cts/CarPropertyManagerTest.java)', 1), ('(2,TTS,/com/android/cts/appsearch/external/app/ReportUsageRequestCtsTest.java)', 1), ('(4,TTS,/com/android/cts/verifier/bluetooth/BleCocClientService.java)', 1), ('(65,TTS,/com/android/cts/verifier/bluetooth/BleServerService.java)', 1), ('(2,FBE,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,FBE,/android/keystore/cts/SignatureTest.java)', 1), ('(9,TTS,/android/media/tv/tuner/cts/TunerTest.java)', 1), ('(1,TTS,/android/telecom/cts/RttOperationsTest.java)', 1)]"	"[('([34:/com/android/cts/verifier/bluetooth/BleEncryptedServerService.java]:[TTS]:[34]:method_text:[Advertiser != null) {            mAdvertiser.stopAdvertising(mAdvertiseCallback);        }    }}])', 1), ('([29:/android/speech/tts/cts/TextToSpeechWrapper.java]:[TTS]:[29]:method_text:[nally {            if (mp != null) {                mp.release();            }        }    }}])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[2]:method_text:[  getDevice().uninstallPackage(APPA_PKG);        getDevice().uninstallPackage(APPB_PKG);    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[          }                getDevice().waitForDeviceAvailable();            }        }    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[    return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }}])', 1), ('([5:/android/util/cts/XmlEncodingTest.java]:[TTS]:[5]:method_text:[ {        if (actual.length() != 0) {            assertEquals(expected, actual);        }    }}])', 1), ('([2:/android/keystore/cts/CipherTest.java]:[FBE]:[2]:method_text:[ close() throws Exception {            mLockCredential.close();        }    }    @Presubmit   ])', 1), ('([1:/android/cts/statsdatom/statsd/DeviceAtomTestCase.java]:[FBE]:[1]:method_text:[tings put global netstats_combine_subtype_enabled ""                + (enable ? ""1"" : ""0""));    }}])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[TTS]:[1]:method_text:[   advanceUntilSample(outputConsumer, inputReader, mediaParser, /* sampleNumber= */ 101);    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[TTS]:[1]:method_text:[Audio() throws IOException {        testAssetExtraction(""ts/sample_h262_mpeg_audio.ts"");    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[TTS]:[1]:method_text:[Audio() throws IOException {        testAssetExtraction(""ts/sample_h264_mpeg_audio.ts"");    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[TTS]:[1]:method_text:[           Collections.singletonMap(MediaParser.PARAMETER_TS_DETECT_ACCESS_UNITS, true));    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[TTS]:[1]:method_text:[(                        MediaParser.PARAMETER_TS_ENABLE_HDMV_DTS_AUDIO_STREAMS, true));    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[TTS]:[1]:method_text:[d testTsWithLatm() throws IOException {        testAssetExtraction(""ts/sample_latm.ts"");    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[TTS]:[1]:method_text:[estTsWithSdt() throws IOException {        testAssetExtraction(""ts/sample_with_sdt.ts"");    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[TTS]:[1]:method_text:[265() throws IOException {        testAssetExtraction(""ts/sample_h265.ts"");    }    // MKV.   ])', 1), ('([8:/android/media/cts/MediaMuxerTest.java]:[TTS]:[8]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([4:/com/android/cts/verifier/bluetooth/BleEncryptedClientService.java]:[TTS]:[4]:method_text:[n"");        if (mScanner != null) {            mScanner.stopScan(mScanCallback);        }    }}])', 1), ('([21:/android/speech/tts/cts/TextToSpeechConnectionTest.java]:[TTS]:[21]:method_text:[tionTestTextToSpeechService.class);        enableService(StubTextToSpeechService.class);    }   ])', 1), ('([2:/android/speech/tts/cts/TextToSpeechConnectionTest.java]:[TTS]:[2]:method_text:[rtNotNull(initStatus);        assertEquals(TextToSpeech.SUCCESS, initStatus.intValue());    }   ])', 1), ('([2:/android/speech/tts/cts/TextToSpeechConnectionTest.java]:[TTS]:[2]:method_text:[sertNotNull(initStatus);        assertEquals(TextToSpeech.ERROR, initStatus.intValue());    }   ])', 1), ('([5:/android/speech/tts/cts/TextToSpeechConnectionTest.java]:[TTS]:[5]:method_text:[CurrentEngine());        mTts.shutdown();        assertNull(mTts.getCurrentEngine());    }   ])', 1), ('([14:/android/speech/tts/cts/TextToSpeechConnectionTest.java]:[TTS]:[14]:method_text:[RVICE_BROADCAST_WAITING_TIME_LIMIT_MILLIS));        unbindReceiver.unregisterQuietly();    }   ])', 1), ('([18:/android/speech/tts/cts/TextToSpeechConnectionTest.java]:[TTS]:[18]:method_text:[r waiting for TTS initialization"", ex);            }            return mStatus;        }    }}])', 1), ('([1:/android/cts/statsdatom/statsd/UidAtomTests.java]:[FBE]:[1]:method_text:[e_package_whitelist %s"",                        origWhitelist));            }        }    }   ])', 1), ('([5:/android/telecom/cts/BaseTelecomTestWithMockServices.java]:[TTS]:[5]:method_text:[                return false;                }            }        }        return true;    }}])', 1), ('([1:/android/renderscript/cts/generated/TestCross.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([3:/android/hardware/camera2/cts/CameraTestUtils.java]:[TTS]:[3]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([8:/android/security/cts/Poc17_09.java]:[FBE]:[8]:method_text:[                             )==139);    }    /**     * b/38195738     * b/36590192     */   ])', 1), ('([1:/android/renderscript/cts/generated/TestNativeExp.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[FBE]:[5]:method_text:[() : """";            }        } catch (IOException e) {            return """";        }    }   ])', 1), ('([1:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[FBE]:[1]:method_text:[ordBeforeUnlock} and will be called by the hostside logic     * before it is exercised.     */   ])', 1), ('([1:/com/android/cts/verifier/streamquality/StreamingVideoActivity.java]:[FBE]:[1]:method_text:[ {                    urlConnection.disconnect();                }            }        }    }}])', 1), ('([2:/android/text/cts/FontCoverageTest.java]:[FBE]:[2]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[TTS]:[1]:method_text:[G_BRAKE_ON);    }    /**     * Test for {@link CarPropertyManager#getPropertyList()}     */   ])', 1), ('([2:/com/android/cts/appsearch/external/app/ReportUsageRequestCtsTest.java]:[TTS]:[2]:method_text:["", ""id1"").build();        assertThat(request.getUsageTimestampMillis()).isAtLeast(startTs);    }}])', 1), ('([4:/com/android/cts/verifier/bluetooth/BleCocClientService.java]:[TTS]:[4]:method_text:[ait for next state                        break;                }            }        }    };}])', 1), ('([65:/com/android/cts/verifier/bluetooth/BleServerService.java]:[TTS]:[65]:method_text:[.getIncludedServices()) {                dumpService(s, level+1);            }        }    }}])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[FBE]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/android/keystore/cts/SignatureTest.java]:[FBE]:[1]:method_text:[ntext() {        return InstrumentationRegistry.getInstrumentation().getTargetContext();    }   ])', 1), ('([1:/android/media/tv/tuner/cts/TunerTest.java]:[TTS]:[1]:method_text:[         }            }            mTuner.close();            mTuner = null;        }    }   ])', 1), ('([1:/android/media/tv/tuner/cts/TunerTest.java]:[TTS]:[1]:method_text:[d();        f.configure(config);        f.start();        f.stop();        f.close();    }   ])', 1), ('([2:/android/media/tv/tuner/cts/TunerTest.java]:[TTS]:[2]:method_text:[d();        f.configure(config);        f.start();        f.stop();        f.close();    }   ])', 1), ('([1:/android/media/tv/tuner/cts/TunerTest.java]:[TTS]:[1]:method_text:[FilterCapabilities();        d.getLinkCapabilities();        d.isTimeFilterSupported();    }   ])', 1), ('([4:/android/media/tv/tuner/cts/TunerTest.java]:[TTS]:[4]:method_text:[                ScanCallback.super.onDvbcAnnexReported(dvbcAnnext);            }        };    }}])', 1), (""([1:/android/telecom/cts/RttOperationsTest.java]:[TTS]:[1]:method_text:[  // If the setting hasn't been set yet, assume it's off            return false;        }    }}])"", 1)]"	""	""	"[('TTS', 31), ('FBE', 15)]"	"[('[com.android.cts.verifier.bluetooth.BleEncryptedServerService getBluetoothLeAdvertiser None]', 1), ('[android.speech.tts.cts.TextToSpeechWrapper InitWaitListener CtsSpeechTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testDirectBootModeWorks CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDirApi29 CtsAppSecurityHostTestCases]', 1), ('[android.util.cts.XmlEncodingTest testValueOf CtsUtilTestCases]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked CtsKeystoreTestCases]', 1), ('[android.cts.statsdatom.statsd.DeviceAtomTestCase installTestApp CtsStatsdAtomHostTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testTsBigBuckBunny CtsMediaParserTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testTsWithH262MpegAudio CtsMediaParserTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testTsWithH264MpegAudio CtsMediaParserTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testTsWithH264DetectAccessUnits CtsMediaParserTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testTsWithH264DtsAudio CtsMediaParserTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testTsWithLatm CtsMediaParserTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testTsWithSdt CtsMediaParserTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testTsWithH265 CtsMediaParserTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleEncryptedClientService disconnect None]', 1), ('[android.speech.tts.cts.TextToSpeechConnectionTest TtsInitListener CtsSpeechTestCases]', 1), ('[android.speech.tts.cts.TextToSpeechConnectionTest testConnectionSuccess CtsSpeechTestCases]', 1), ('[android.speech.tts.cts.TextToSpeechConnectionTest testEngineNotAvailableConnectionFailure CtsSpeechTestCases]', 1), ('[android.speech.tts.cts.TextToSpeechConnectionTest testShutdownStateCleared CtsSpeechTestCases]', 1), ('[android.speech.tts.cts.TextToSpeechConnectionTest testClientsShutdownServiceUnbound CtsSpeechTestCases]', 1), ('[android.speech.tts.cts.TextToSpeechConnectionTest testServiceBindingErrorConnectionFailure CtsSpeechTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testGpsScan CtsStatsdAtomHostTestCases]', 1), ('[android.telecom.cts.BaseTelecomTestWithMockServices disableCarMode CtsTelecomTestCases]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[android.security.cts.Poc17_09 testPocCve_2017_6983 CtsSecurityBulletinHostTestCases]', 1), ('[android.view.inputmethod.cts.InputMethodInfoTest testAtLeastOneEncryptionAwareInputMethodIsAvailable CtsInputMethodTestCases]', 1), ('[com.android.cts.verifier.streamquality.StreamingVideoActivity setPassFailButtonClickListeners None]', 1), ('[android.car.cts.CarPropertyManagerTest getPropertyList CtsCarTestCases]', 1), ('[com.android.cts.appsearch.external.app.ReportUsageRequestCtsTest testUsageTimestampDefault CtsAppSearchTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleCocClientService isEnabled None]', 1), ('[com.android.cts.verifier.bluetooth.BleServerService getBluetoothLeAdvertiser None]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[android.media.tv.tuner.cts.TunerTest testFrontendStatus CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerTest testTsAvFilterConfig CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerTest testTsRecordFilterConfig CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerTest testDemuxCapabilities CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerTest testShareFrontendFromTuner CtsTvTestCases]', 1), ('[android.telecom.cts.RttOperationsTest testRemoteRttTermination CtsTelecomTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Device Integrity"	"9.1"	"C-1-11"	"9.1/C-1-11"	"09010000.670111"	"""C-1-11] MUST securely erase all user data during bootloader unlock and lock, as per &#39;9.12. Data Deletion&#39; (including the userdata partition and any NVRAM spaces)."""	""	""	"NVRAM"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-2-2"	"8.2/H-2-2"	"08020000.720202"	"""[8.2/H-2-2] MUST ensure a random write performance of at least 10 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.3"	"H-1-2"	"5.3/H-1-2"	"05030000.720102"	"""[5.3/H-1-2] MUST NOT drop more than 1 frame in 10 seconds during a video resolution change in a 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128Kbps AAC audio playback.  | [5.3/H-1-2] MUST NOT drop more than 2 frames in 10 seconds during a video resolution change in a 60 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. """	""	""	"AAC"	""	""	""	""	"[('android.media.cts.VideoDecoderPerfTest', 15), ('android.media.cts.MediaCodecTest', 5), ('android.media.cts.MediaCodecListTest', 4), ('android.mediav2.cts.CodecUnitTest', 3), ('android.media.mediaparser.cts.MediaParserTest', 3), ('android.media.cts.MediaMuxerTest', 3), ('android.hardware.camera2.cts.CameraDeviceTest', 3), ('android.mediastress.cts.NativeMediaTest', 2), ('android.hardware.camera2.cts.FlashlightTest', 2), ('android.hardware.multiprocess.camera.cts.Camera2Activity', 1), ('com.android.cts.verifier.audio.USBRestrictRecordAActivity', 1), ('android.media.cts.MediaCodecPlayerTest', 1), ('android.mediastress.cts.HEVCR1080pAacLongPlayerTest', 1), ('android.mediastress.cts.H264R1080pAacLongPlayerTest', 1), ('android.appsecurity.cts.AppDataIsolationTests', 1), ('android.keystore.cts.CipherTest', 1), ('android.webkit.cts.WebSettingsTest', 1), ('android.app.stubs.shared.CloseSystemDialogsTestService', 1), ('android.media.cts.CamcorderProfileTest', 1), ('com.android.cts.isolatedsplitapp.SplitAppTest', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('android.media.cts.EncoderTest', 1), ('com.android.cts.verifier.streamquality.StreamingVideoActivity', 1), ('android.text.cts.FontCoverageTest', 1)]"	"[('close', 15), ('getMediaType', 14), ('start', 9), ('setUp', 7), ('AtomicInteger', 7), ('getDevice', 6), ('tearDown', 5), ('getWidth', 5), ('getHeight', 5), ('size', 5), ('clear', 5), ('getSurface', 5), ('getCodec', 4), ('Object', 4), ('getLooper', 4), ('capacity', 4), ('hashCode', 4), ('getMediaDirString', 3), ('updateTitle', 3), ('onCreate', 3), ('onDestroy', 3), ('getProfile', 3), ('quitSafely', 3), ('run', 3), ('getOutputStream', 3), ('onPause', 2), ('onResume', 2), ('hasSeenError', 2), ('getContext', 2), ('getBitrate', 2), ('BlockingStateCallback', 2), ('build', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('release', 2), ('toString', 2), ('never', 2), ('onFrankenDevice', 2), ('getSampleTime', 2), ('supports3DES', 1), ('getInstrumentation', 1), ('getTargetContext', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('getNetworkImageHtml', 1), ('Binder', 1), ('asBinder', 1), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getAudioProfiles', 1), ('getSampleRate', 1), ('getChannels', 1), ('hasProfile', 1), ('getStatSize', 1), ('Configuration', 1), ('launchActivity', 1), ('getSimpleName', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('quit', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('hasFlash', 1), ('getName', 1), ('HashMap', 1), ('Builder', 1), ('toLanguageTag', 1), ('getCacheDir', 1), ('anyInt', 1), ('getArguments', 1), ('getActivity', 1), ('getSurfaceHolder', 1), ('MediaExtractor', 1), ('getSampleTrackIndex', 1), ('advance', 1), ('getCodecInfo', 1), ('getVideoCapabilities', 1), ('getUpper', 1), ('getInputBuffers', 1), ('getOutputBuffers', 1), ('getInputFormat', 1), ('BufferInfo', 1)]"	"[('CtsMediaTestCases', 30), ('CtsCameraTestCases', 6), ('CtsMediaStressTestCases', 4), ('CtsMediaV2TestCases', 3), ('CtsMediaParserTestCases', 3), ('CtsAppSecurityHostTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsTextTestCases', 1)]"	""	"android.media.cts.VideoDecoderPerfTest"	"BufferInfo"	"CtsMediaTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoDecoderPerfTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecUnitTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/NativeMediaTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/FlashlightTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/Camera2Activity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/H264R1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/shared/src/android/app/stubs/shared/CloseSystemDialogsTestService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/src/com/android/cts/isolatedsplitapp/SplitAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/shared/gen/android/app/stubs/shared/ICloseSystemDialogsTestsService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/streamquality/StreamingVideoActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1)]"	"[('(2,AAC,/android/hardware/multiprocess/camera/cts/Camera2Activity.java)', 1), ('(3,AAC,/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java)', 1), ('(1,AAC,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(3,AAC,/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java)', 1), ('(3,AAC,/android/mediav2/cts/CodecUnitTest.java)', 1), ('(11,AAC,/android/media/cts/MediaCodecTest.java)', 1), ('(3,AAC,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(2,AAC,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(5,AAC,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(1,AAC,/android/keystore/cts/CipherTest.java)', 1), ('(1,AAC,/android/webkit/cts/WebSettingsTest.java)', 1), ('(1,AAC,/android/app/stubs/shared/CloseSystemDialogsTestService.java)', 1), ('(8,AAC,/android/media/cts/CamcorderProfileTest.java)', 1), ('(3,AAC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(15,AAC,/android/media/cts/MediaMuxerTest.java)', 1), ('(1,AAC,/com/android/cts/isolatedsplitapp/SplitAppTest.java)', 1), ('(8,AAC,)', 1), ('(12,AAC,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(30,AAC,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(4,AAC,/android/hardware/camera2/cts/FlashlightTest.java)', 1), ('(11,AAC,/android/media/cts/EncoderTest.java)', 1), ('(8,AAC,/com/android/cts/verifier/streamquality/StreamingVideoActivity.java)', 1), ('(1,AAC,/android/text/cts/FontCoverageTest.java)', 1), ('(21,AAC,/android/media/cts/MediaCodecListTest.java)', 1), ('(4,AAC,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(21,AAC,/android/media/cts/VideoDecoderPerfTest.java)', 1)]"	"[('([2:/android/hardware/multiprocess/camera/cts/Camera2Activity.java]:[AAC]:[2]:method_text:[       mErrorServiceConnection.stop();            mErrorServiceConnection = null;        }    }}])', 1), ('([3:/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java]:[AAC]:[3]:method_text:[ filter);            mUsbManager.requestPermission(theDevice, permissionIntent);        }    }}])', 1), ('([1:/android/media/cts/MediaCodecPlayerTest.java]:[AAC]:[1]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([3:/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java]:[AAC]:[3]:method_text:[bbb_full.ffmpeg.1920x1080.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[AAC]:[1]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[AAC]:[1]:method_text:[ull, null, null, MediaCodec.CONFIGURE_FLAG_ENCODE);            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[AAC]:[1]:method_text:[t(), null, null, MediaCodec.CONFIGURE_FLAG_ENCODE);            mCodec.release();        }       ])', 1), ('([4:/android/media/cts/MediaCodecTest.java]:[AAC]:[4]:method_text:[s are thrown from MediaCodec     * methods when called in incorrect operational states.     */   ])', 1), ('([2:/android/media/cts/MediaCodecTest.java]:[AAC]:[2]:method_text:[ts:     * <br> dequeueInputBuffer() fails when encoder configured with an input Surface     */   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[AAC]:[1]:method_text:[   /**     * Tests creating two decoders for {@link #MIME_TYPE_AUDIO} at the same time.     */   ])', 1), ('([2:/android/media/cts/MediaCodecTest.java]:[AAC]:[2]:method_text:[(TAG, ""exception stopping/releasing codec"", e);                }            }        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecTest.java]:[AAC]:[2]:method_text:[077efecc0b24d02L, 0xace33c1e52e2fb4bL);    /**     * Tests MediaCodec.CryptoException     */   ])', 1), ('([3:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[AAC]:[3]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[AAC]:[2]:method_text:[  getDevice().uninstallPackage(APPA_PKG);        getDevice().uninstallPackage(APPB_PKG);    }   ])', 1), ('([2:/android/mediastress/cts/NativeMediaTest.java]:[AAC]:[2]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([3:/android/mediastress/cts/NativeMediaTest.java]:[AAC]:[3]:method_text:[us); // null means time-out        Assert.assertEquals(expectAlive, status.booleanValue());    }}])', 1), ('([1:/android/keystore/cts/CipherTest.java]:[AAC]:[1]:method_text:[ close() throws Exception {            mLockCredential.close();        }    }    @Presubmit   ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[AAC]:[1]:method_text:[>.<minor>     * Chrome/<major>.<minor>.<branch>.<build>[ Mobile] Safari/<major>.<minor>     */   ])', 1), ('([1:/android/app/stubs/shared/CloseSystemDialogsTestService.java]:[AAC]:[1]:method_text:[nel(notificationChannel);        mNotificationManager.notify(notificationId, notification);    }}])', 1), ('([8:/android/media/cts/CamcorderProfileTest.java]:[AAC]:[8]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[AAC]:[1]:method_text:[sertParsers(MediaParser.PARSER_NAME_FLAC).supportMimeTypes(""audio/flac"", ""audio/x-flac"");    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[AAC]:[1]:method_text:[UNITS);        assertSupportFor(MediaParser.PARAMETER_TS_ENABLE_HDMV_DTS_AUDIO_STREAMS);    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[AAC]:[1]:method_text:[,                /* value= */ ""multi_pmt"",                /* valueIsIllegal= */ false);    }   ])', 1), ('([9:/android/media/cts/MediaMuxerTest.java]:[AAC]:[9]:method_text:[neAndVerify(source, outputFilePath, 1, 180, MediaMuxer.OutputFormat.MUXER_OUTPUT_MPEG_4);    }   ])', 1), ('([4:/android/media/cts/MediaMuxerTest.java]:[AAC]:[4]:method_text:[e frame     * drops as in b/63590381 and b/64949961 while B Frames encoding is enabled.     */   ])', 1), ('([2:/android/media/cts/MediaMuxerTest.java]:[AAC]:[2]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([1:/com/android/cts/isolatedsplitapp/SplitAppTest.java]:[AAC]:[1]:method_text:[   @Before    public void setUp() {        BaseActivity.setOverrideConfiguration(null);    }   ])', 1), ('([8:]:[AAC]:[8]:method_text:[ide methods. */  public boolean waitUntilReady(long timeoutMs) throws android.os.RemoteException;}])', 1), ('([12:/com/android/cts/verifier/camera/its/ItsService.java]:[AAC]:[12]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([30:/android/hardware/camera2/cts/CameraTestUtils.java]:[AAC]:[30]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([1:/android/hardware/camera2/cts/FlashlightTest.java]:[AAC]:[1]:method_text:[f (info.hasFlash()) {                mFlashCameraIdList.add(id);            }        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/FlashlightTest.java]:[AAC]:[3]:method_text:[ble e) {                    fail(e.getMessage());                }            }        }    }}])', 1), ('([11:/android/media/cts/EncoderTest.java]:[AAC]:[11]:method_text:[            muxer.stop();            muxer.release();            muxer = null;        }    }}])', 1), ('([8:/com/android/cts/verifier/streamquality/StreamingVideoActivity.java]:[AAC]:[8]:method_text:[ {                    urlConnection.disconnect();                }            }        }    }}])', 1), ('([1:/android/text/cts/FontCoverageTest.java]:[AAC]:[1]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[AAC]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([8:/android/media/cts/MediaCodecListTest.java]:[AAC]:[8]:method_text:[        assertNotNull(""Profile "" + profile + "" must be supported."", codecName);        }    }   ])', 1), ('([7:/android/media/cts/MediaCodecListTest.java]:[AAC]:[7]:method_text:[        assertNotNull(""Profile "" + profile + "" must be supported."", codecName);        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AAC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[1]:method_text:[ure the stable frame rate is guaranteed for the given     * settings.</li>     * </ul>     */   ])', 1), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[2]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[1]:method_text:[_CLOSED, CAMERA_CLOSE_TIMEOUT_MS);                cam1Cb = null;            }        }    }   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[ = {        ""bbb_s1_320x240_mp4_h264_mp2_800kbps_30fps_aac_lc_5ch_240kbps_44100hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[80 = {        ""bbb_s1_720x480_mp4_h264_mp3_2mbps_30fps_aac_lc_5ch_320kbps_48000hz.mp4"",    };   ])', 1), ('([3:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[3]:method_text:[,        ""bbb_s3_1280x720_mp4_h264_mp32_8mbps_60fps_aac_he_v2_6ch_144kbps_44100hz.mp4"",    };   ])', 1), ('([4:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[4]:method_text:[        ""bbb_s2_1920x1080_mp4_h264_mp42_20mbps_60fps_aac_he_v2_5ch_160kbps_48000hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[x0144 = {        ""video_176x144_3gp_h263_300kbps_12fps_aac_stereo_128kbps_22050hz.3gp"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[x0288 = {        ""video_352x288_3gp_h263_300kbps_12fps_aac_stereo_128kbps_22050hz.3gp"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[ {        ""bbb_s1_352x288_mp4_hevc_mp2_600kbps_30fps_aac_he_stereo_96kbps_48000hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[ {        ""bbb_s1_640x360_mp4_hevc_mp21_1600kbps_30fps_aac_he_6ch_288kbps_44100hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[= {        ""bbb_s1_720x480_mp4_hevc_mp3_1600kbps_30fps_aac_he_6ch_240kbps_48000hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[ {        ""bbb_s4_1280x720_mp4_hevc_mp31_4mbps_30fps_aac_he_stereo_80kbps_32000hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[ {        ""bbb_s2_1920x1080_mp4_hevc_mp41_10mbps_60fps_aac_lc_6ch_384kbps_22050hz.mp4"",    };   ])', 1), ('([2:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[2]:method_text:["",        ""bbb_s2_3840x2160_mp4_hevc_mp51_20mbps_60fps_aac_lc_6ch_384kbps_32000hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[0144 = {        ""video_176x144_mp4_mpeg4_300kbps_25fps_aac_stereo_128kbps_44100hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[0360 = {        ""video_480x360_mp4_mpeg4_860kbps_25fps_aac_stereo_128kbps_44100hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[20 = {        ""video_1280x720_mp4_mpeg4_1000kbps_25fps_aac_stereo_128kbps_44100hz.mp4"",    };   ])', 1)]"	""	""	"[('AAC', 57)]"	"[('[android.hardware.multiprocess.camera.cts.Camera2Activity getCameraIdListNoLazy CtsCameraTestCases]', 1), ('[com.android.cts.verifier.audio.USBRestrictRecordAActivity LocalClickListener None]', 1), ('[android.media.cts.MediaCodecPlayerTest MediaCodecPlayerTest CtsMediaTestCases]', 1), ('[android.mediav2.cts.CodecUnitTest TestApi CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureForNullFormat CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureForEmptyFormat CtsMediaV2TestCases]', 1), ('[android.media.cts.MediaCodecTest testAsyncStopAndReset CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testDecodeShortInput CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testCreateAudioDecoderAndEncoder CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testCryptoInfoPattern CtsMediaTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest testDefaultPlay CtsMediaStressTestCases]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked CtsKeystoreTestCases]', 1), ('[android.webkit.cts.WebSettingsTest WebSettingsTest CtsWebkitTestCases]', 1), ('[android.app.stubs.shared.CloseSystemDialogsTestService isRotationFrozen None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testGetParserNamesByMimeType CtsMediaParserTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testSupportsParameter CtsMediaParserTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testSetKnownParameters CtsMediaParserTestCases]', 1), ('[android.media.cts.MediaMuxerTest SKIP_testVideoAudio CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testWebmOutput CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[com.android.cts.isolatedsplitapp.SplitAppTest AppContextTestRule None]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[android.hardware.camera2.cts.FlashlightTest testTorchModeExceptions CtsCameraTestCases]', 1), ('[android.media.cts.EncoderTest testAACEncoders CtsMediaTestCases]', 1), ('[com.android.cts.verifier.streamquality.StreamingVideoActivity setPassFailButtonClickListeners None]', 1), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testFindDecoderWithAacProfile CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testFindEncoderWithAacProfile CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testAudioRestrictionSingleDevice CtsCameraTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest currentTimeMillis CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testAvcOther3Perf0320x0240 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testAvcOther3Perf0720x0480 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testAvcOther3Perf1280x0720 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testAvcOther3Perf1920x1080 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testH263Other1Perf0176x0144 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testH263Other1Perf0352x0288 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testHevcOther3Perf0352x0288 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testHevcOther3Perf0640x0360 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testHevcOther3Perf0720x0480 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testHevcOther3Perf1280x0720 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testHevcOther3Perf1920x1080 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testHevcOther3Perf3840x2160 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testMpeg4Other3Perf0176x0144 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testMpeg4Other3Perf0480x0360 CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.3.5  . Security Model"	"9.8.2"	"T-4-1"	"9.8.2/T-4-1"	"09080200.840401"	"""[9.8.2/T-4-1] MUST display the microphone indicator when an app is accessing audio data from the microphone, but not when the microphone is only accessed by HotwordDetectionService, SOURCE_HOTWORD, ContentCaptureService, or apps holding the roles called out in Section 9.1 Permissions with CDD identifier C-3-X]. ["""	""	""	"SOURCE_HOTWORD CDD"	""	""	""	""	"[('android.appsecurity.cts.ApkVerityInstallTest', 15), ('android.graphics.cts.VulkanFeaturesTest', 5), ('android.hardware.cts.LowRamDeviceTest', 4), ('android.graphics.cts.PaintTest', 3), ('android.media.cts.AudioManagerTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 2), ('android.appwidget.cts.RequestPinAppWidgetTest', 2), ('android.security.cts.MetadataEncryptionTest', 2), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 2), ('android.car.cts.CarBluetoothTest', 2), ('android.content.cts.AvailableIntentsTest', 2), ('android.media.cts.EncoderTest', 2), ('android.app.cts.SystemFeaturesTest', 2), ('android.location.cts.gnss.GnssPseudorangeVerificationTest', 2), ('android.mediav2.cts.CodecListTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.keystore.cts.CipherTest', 1), ('android.webkit.cts.WebSettingsTest', 1), ('com.android.cts.verifier.companion.CompanionDeviceServiceTestActivity', 1), ('android.hardware.camera2.cts.testcases.Camera2AndroidTestCase', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('com.android.cts.verifier.audio.ProAudioActivity', 1), ('com.android.cts.verifier.security.IdentityCredentialAuthentication', 1), ('android.host.accounts.BaseMultiUserTest', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('android.security.identity.cts.ProvisioningTest', 1), ('android.text.cts.FontCoverageTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1)]"	"[('setUp', 16), ('run', 15), ('close', 15), ('getPackageManager', 9), ('getDevice', 9), ('getInstrumentation', 8), ('start', 8), ('getContext', 7), ('AtomicInteger', 7), ('build', 7), ('getTargetContext', 6), ('tearDown', 6), ('getLooper', 5), ('size', 5), ('getSimpleName', 4), ('Object', 4), ('getWidth', 4), ('getHeight', 4), ('capacity', 4), ('clear', 4), ('getSurface', 4), ('printStackTrace', 4), ('getPackageName', 3), ('runExpectingFailure', 3), ('getSystemAvailableFeatures', 3), ('quitSafely', 3), ('getOutputStream', 3), ('getName', 3), ('getBytes', 3), ('Builder', 3), ('getResources', 2), ('getSystem', 2), ('getLaunchApiLevel', 2), ('BlockingBroadcastReceiver', 2), ('await', 2), ('getExtras', 2), ('BlockingStateCallback', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('getClass', 2), ('getTargetException', 2), ('release', 2), ('lock', 2), ('getExampleDrivingPrivilegesCbor', 2), ('end', 2), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('installSingle', 1), ('installAndUpdate', 1), ('assumeSecurityModelCompat', 1), ('getOverrideConfig', 1), ('setUpLauncher', 1), ('getDefaultLauncher', 1), ('tearDownLauncher', 1), ('Bundle', 1), ('getFirstWidgetComponent', 1), ('supports3DES', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('setup', 1), ('nativeGetVkJSON', 1), ('getBestDevice', 1), ('CameraErrorCollector', 1), ('onCreate', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('onDestroy', 1), ('quit', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('NoSuchFieldError', 1), ('getDeclaredMethods', 1), ('NoSuchMethodError', 1), ('getMessage', 1), ('getContentResolver', 1), ('ProAudioActivity', 1), ('super', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('getAction', 1), ('signal', 1), ('unlock', 1), ('waitForAdapterOn', 1), ('waitForAdapterOff', 1), ('enable', 1), ('getMaxNumberOfUsersSupported', 1), ('getCurrentUser', 1), ('getPrimaryUserId', 1), ('getComponentInfo', 1), ('getMediaDirString', 1), ('ByteArrayOutputStream', 1), ('CborBuilder', 1), ('addArray', 1), ('addMap', 1), ('toByteArray', 1), ('iterator', 1), ('next', 1), ('getPublicKey', 1), ('HashMap', 1), ('toLanguageTag', 1), ('getLayoutInflater', 1)]"	"[('CtsAppSecurityHostTestCases', 15), ('CtsGraphicsTestCases', 8), ('CtsShortcutManagerTestCases', 5), ('CtsMediaTestCases', 4), ('CtsHardwareTestCases', 4), ('CtsAppWidgetTestCases', 2), ('CtsSecurityHostTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsCarTestCases', 2), ('CtsContentTestCases', 2), ('CtsAppTestCases', 2), ('CtsLocationGnssTestCases', 2), ('CtsMediaV2TestCases', 2), ('CtsIncrementalInstallHostTestCases', 2), ('CtsSensorTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsCameraTestCases', 1), ('CtsAccountsHostTestCases', 1), ('CtsIdentityTestCases', 1), ('CtsTextTestCases', 1)]"	""	"android.incrementalinstall.cts.IncrementalFeatureTest"	"getLaunchApiLevel"	"CtsIncrementalInstallHostTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/MetadataEncryptionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarBluetoothTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncoderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssPseudorangeVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecListTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/companion/CompanionDeviceServiceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/ProAudioActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/IdentityCredentialAuthentication.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1)]"	"[('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(2,CDD,/android/media/cts/AudioManagerTest.java)', 1), ('(16,CDD,/android/appsecurity/cts/ApkVerityInstallTest.java)', 1), ('(1,CDD,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java)', 1), ('(3,CDD,/android/appwidget/cts/RequestPinAppWidgetTest.java)', 1), ('(3,CDD,/android/keystore/cts/CipherTest.java)', 1), ('(1,CDD,/android/webkit/cts/WebSettingsTest.java)', 1), ('(7,CDD,/android/hardware/cts/LowRamDeviceTest.java)', 1), ('(6,CDD,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/companion/CompanionDeviceServiceTestActivity.java)', 1), ('(1,CDD,/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java)', 1), ('(3,CDD,/android/security/cts/MetadataEncryptionTest.java)', 1), ('(1,CDD,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java)', 1), ('(3,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java)', 1), ('(2,CDD,/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java)', 1), ('(2,CDD,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(5,CDD,/com/android/cts/verifier/audio/ProAudioActivity.java)', 1), ('(2,CDD,/com/android/cts/verifier/security/IdentityCredentialAuthentication.java)', 1), ('(2,CDD,/android/car/cts/CarBluetoothTest.java)', 1), ('(3,CDD,/android/graphics/cts/PaintTest.java)', 1), ('(1,CDD,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(2,CDD,/android/content/cts/AvailableIntentsTest.java)', 1), ('(2,CDD,/android/media/cts/EncoderTest.java)', 1), ('(2,CDD,/android/app/cts/SystemFeaturesTest.java)', 1), ('(1,CDD,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(2,CDD,/android/text/cts/FontCoverageTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(3,CDD,/android/location/cts/gnss/GnssPseudorangeVerificationTest.java)', 1), ('(6,CDD,/android/mediav2/cts/CodecListTest.java)', 1), ('(3,CDD,/android/incrementalinstall/cts/IncrementalFeatureTest.java)', 1)]"	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[();        install.run(expectingSuccess);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 2), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CDD]:[2]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CDD]:[1]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CDD]:[1]:method_text:[ustSuggestedStreamVolume(ADJUST_RAISE, 66747, 0);    }    @CddTest(requirement=""5.4.1/C-1-4"")   ])', 1), ('([2:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[2]:method_text:[     getDevice().uninstallPackage(PACKAGE_NAME);    }    @CddTest(requirement = ""9.10/C-0-3"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[   verifyFsverityInstall(incremental, BASE_APK);    }    @CddTest(requirement = ""9.10/C-0-3"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[Install(incremental, BASE_APK, SPLIT_APK);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[stall(incremental, BASE_APK, BASE_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[PK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[cremental, BASE_APK, SPLIT_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[l(updateIncremental, SPLIT_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[ll(updateIncremental, BASE_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[erityInstall(updateIncremental, BASE_APK);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[X)                .runExpectingFailure();    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[l(incremental, BASE_APK_DM, SPLIT_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[stall(incremental, BASE_APK_DM);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[tal, BASE_APK_DM, SPLIT_APK_DM);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[CDD]:[1]:method_text:[Frequency),                    actualMinFrequency <=  hifiMinFrequency + 0.1);        }    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[dp_lowram=96,""                + ""icon_format=PNG,""                + ""icon_quality=100"";    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));    }    @CddTest(requirement=""3.8.1/C-1-2"")   ])', 1), ('([2:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[2]:method_text:[he extras        assertEquals(""dummy-2"", resultReceiver.result.getStringExtra(""dummy""));    }   ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[1]:method_text:[                AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());    }   ])', 1), ('([3:/android/keystore/cts/CipherTest.java]:[CDD]:[3]:method_text:[ close() throws Exception {            mLockCredential.close();        }    }    @Presubmit   ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[CDD]:[1]:method_text:[l:\\n%s"", patternString, useragent),                    patternMatcher.find());        }    }   ])', 1), ('([2:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[2]:method_text:[ces reported memory to ensure it meets the minimum values described     * in CDD 7.6.1.     */   ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[44);            } else {                assertMinMemoryMb(592);            }        }    }   ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[  mContext.getExternalFilesDir(null),                MIN_SHARED_DATA_PARTITION_SIZE_GB);    }   ])', 1), ('([3:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[3]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                size > minSizeBytes);    }}])', 1), ('([2:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[2]:method_text:[;        mBestDevice = getBestDevice();    }    @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[l, mVulkanHardwareCompute.version);        }    }    @CddTest(requirement = ""7.1.4.2/C-3-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[atures"", 0x3 /* importable + exportable */));    }    @CddTest(requirement = ""7.1.4.2/C-1-7"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[viceExtension(""VK_KHR_incremental_present"", 1);    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[ null && mVulkanHardwareLevel.version >= 0);    }    @CddTest(requirement = ""7.1.4.2/C-1-11"")   ])', 1), ('([2:/com/android/cts/verifier/companion/CompanionDeviceServiceTestActivity.java]:[CDD]:[2]:method_text:[null"");            }        } else super.onActivityResult(requestCode, resultCode, data);    }}])', 1), ('([1:/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java]:[CDD]:[1]:method_text:[ is closed"");        } catch (IllegalStateException e) {            // Expected.        }    }}])', 1), ('([2:/android/security/cts/MetadataEncryptionTest.java]:[CDD]:[2]:method_text:[ryption/metadata     *     * @throws Exception     */    @CddTest(requirement=""9.9.3/C-1-5"")   ])', 1), ('([1:/android/security/cts/MetadataEncryptionTest.java]:[CDD]:[1]:method_text:[    getDevice().hasFeature(""feature:android.hardware.security.model.compatible""));        }    }}])', 1), ('([1:/com/android/cts/verifier/camera/its/ItsService.java]:[CDD]:[1]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java]:[CDD]:[2]:method_text:[    }        }    }    /**     * Make sure the internal AIDL methods are protected.     */   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[CDD]:[3]:method_text:[ic final String SHORTCUT_ID = ""s12345"";    @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[IM_SLOT_0);            SimContacts.removeSimAccounts(mResolver, SIM_SLOT_1);        });    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[ut this should not be done for the local account.     */    @CddTest(requirement=""3.18/C-1-4"")   ])', 1), ('([2:/android/hardware/camera2/cts/CameraTestUtils.java]:[CDD]:[2]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([5:/com/android/cts/verifier/audio/ProAudioActivity.java]:[CDD]:[5]:method_text:[audio_proaudio_NA));            }            calculatePass();            break;        }    }}])', 1), ('([2:/com/android/cts/verifier/security/IdentityCredentialAuthentication.java]:[CDD]:[2]:method_text:[ RuntimeException(""Error encoding CBOR"", e);        }        return baos.toByteArray();    }}])', 1), ('([1:/android/car/cts/CarBluetoothTest.java]:[CDD]:[1]:method_text:[ented), or for the    // configured timeout. If all required profiles connect, the test passes.   ])', 1), ('([1:/android/car/cts/CarBluetoothTest.java]:[CDD]:[1]:method_text:[(mBluetoothAdapter);        waitForProfileConnections();        checkProfileConnections();    }}])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[        Typeface.MONOSPACE,            Typeface.SANS_SERIF,            Typeface.SERIF,    };   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());    }    @CddTest(requirement=""3.8.13/C-1-2"")   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[SCULAPIUS                p.hasGlyph(""\\uD83D\\uDC69\\u200D\\u2695\\uFE0F""));  // above + VS16    }   ])', 1), ('([1:/android/host/accounts/BaseMultiUserTest.java]:[CDD]:[1]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([2:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[CDD]:[2]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[CDD]:[1]:method_text:[en url is http://web_address,     * it will open a browser window to the URL specified.     */   ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[CDD]:[1]:method_text:[ntent.ACTION_POWER_USAGE_SUMMARY));        }    }    @CddTest(requirement = ""7.4.2.6/C-1-1"")   ])', 1), ('([1:/android/media/cts/EncoderTest.java]:[CDD]:[1]:method_text:[ltEncoders.put(mime, codec.getName());        codec.release();        return isDefault;    }   ])', 1), ('([1:/android/media/cts/EncoderTest.java]:[CDD]:[1]:method_text:[ithFormats(MediaFormat.MIMETYPE_AUDIO_AMR_WB, formats);    }    @CddTest(requirement=""5.1.3"")   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[properly prefixed with ""android."" that are not defined in     * {@link PackageManager}.     */   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[          if (camera != null) {                camera.release();            }        }    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[CDD]:[1]:method_text:[tStackTrace();            assertTrue(false);        }        return certificateChain;    }   ])', 1), ('([2:/android/text/cts/FontCoverageTest.java]:[CDD]:[2]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([2:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[CDD]:[2]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([2:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[2]:method_text:[d.   * This tests uses actual data retrieved from Gnss HAL.   */  @CddTest(requirement=""7.3.3"") ])', 1), ('([1:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[1]:method_text:[instant mode"")    @RequiresDevice  // emulated devices do not support real measurements so far.   ])', 1), ('([2:/android/mediav2/cts/CodecListTest.java]:[CDD]:[2]:method_text:[   * adheres to additional requirements (support for min profile/level, ...) set by cdd.     */   ])', 1), ('([4:/android/mediav2/cts/CodecListTest.java]:[CDD]:[4]:method_text:[                       CodecTestBase.hasEncoder(MediaFormat.MIMETYPE_VIDEO_VP8));        }    }}])', 1), ('([2:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[2]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);    }    @CddTest(requirement=""4/C-1-1"")   ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[1]:method_text:[ture android.software.incremental_delivery"")));    }    @CddTest(requirement=""4/C-1-1,C-3-1"")   ])', 1)]"	""	""	"[('CDD', 68)]"	"[('[android.appsecurity.cts.ApkVerityInstallTest isIncrementalDeliveryV2Feature CtsAppSecurityHostTestCases]', 2), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustSuggestedStreamVolumeWithIllegalArguments CtsMediaTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testPressureRange CtsSensorTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest testGetShortcutIcon CtsShortcutManagerTestCases]', 1), ('[android.appwidget.cts.RequestPinAppWidgetTest testPinWidget_launcher2 CtsAppWidgetTestCases]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked CtsKeystoreTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testUserAgentStringTest CtsWebkitTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest DisplayMetrics CtsHardwareTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinimumMemory CtsHardwareTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinSharedDataPartitionSize CtsHardwareTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinDataPartitionSize CtsHardwareTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanHardwareFeatures CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkan1_1Requirements CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanRequiredExtensions CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanVersionForVrHighPerformance CtsGraphicsTestCases]', 1), ('[com.android.cts.verifier.companion.CompanionDeviceServiceTestActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.testcases.Camera2AndroidTestCase isInstantApp CtsCameraTestCases]', 1), ('[android.security.cts.MetadataEncryptionTest testMetadataEncryptionIsEnabled CtsSecurityHostTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest testAccountRemovalWithMergedContact_deletesContacts CtsContactsProviderTestCases]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[com.android.cts.verifier.audio.ProAudioActivity isHDMIValid None]', 1), ('[com.android.cts.verifier.security.IdentityCredentialAuthentication setPassFailButtonClickListeners None]', 1), ('[android.car.cts.CarBluetoothTest disable CtsCarTestCases]', 1), ('[android.car.cts.CarBluetoothTest testRequiredBluetoothProfilesExist CtsCarTestCases]', 1), ('[android.graphics.cts.PaintTest testGetTextPathStringCountTooHigh CtsGraphicsTestCases]', 1), ('[android.graphics.cts.PaintTest testHasGlyph CtsGraphicsTestCases]', 1), ('[android.host.accounts.BaseMultiUserTest listUsers CtsAccountsHostTestCases]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[android.content.cts.AvailableIntentsTest testPowerUsageSummarySettings CtsContentTestCases]', 1), ('[android.media.cts.EncoderTest testAMRWBEncoders CtsMediaTestCases]', 1), ('[android.app.cts.SystemFeaturesTest testCameraFeatures CtsAppTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[android.location.cts.gnss.GnssPseudorangeVerificationTest testPseudorangeValue CtsLocationGnssTestCases]', 1), ('[android.mediav2.cts.CodecListTest testCddRequiredCodecsAvailability CtsMediaV2TestCases]', 1), ('[android.incrementalinstall.cts.IncrementalFeatureTest testFeatureAvailable CtsIncrementalInstallHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-3"	"9.8/H-1-3"	"09080000.720103"	"""[9.8/H-1-3] MUST NOT supply mic audio that is longer than 30 seconds for an individual hardware-triggered request to the hotword detection service. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.1  . Contacts"	"3.1"	"C-1-1"	"3.1/C-1-1"	"03010000.670101"	"""C-1-1] MUST provide an implementation of the Android accessibility framework as described in the accessibility APIs SDK documentation. | C-1-1] MUST support the Android TTS framework APIs. If device implementations support installation of third-party TTS engines, they: | C-1-1] MUST declare the platform feature android.software.live_tv. | C-1-1] MUST allow the user to add or remove the tiles provided through the quicksettings APIs from a third-party app. | C-1-1] MUST preload one or more applications or service components with an intent handler for the intents listed in the SDK here and make the intents visible for Instant Apps. <h3 id=""316_companion_device_pairing""  | C-1-1] MUST declare the feature flag FEATURE_COMPANION_DEVICE_SETUP . | C-1-1] MUST have only one installed app that specifies cantSaveState running in the system at a time. If the user leaves such an app without explicitly exiting it (for example by pressing home while leaving an active activity the system, instead of pressing back with no remaining active activities in the system), then device implementations MUST prioritize that app in RAM as they do for other things that are expected to remain running, such as foreground services. While such an app is in the background, the system can still apply power management features to it, such as limiting CPU and network access. | C-1-1] MUST ignore the cantSaveState attribute set by apps and MUST NOT change the app behavior based on that attribute. <h3 id=""318_contacts""  | C-1-1] The ACCOUNT_NAME, of the custom local account MUST be returned by ContactsContract.RawContacts.getLocalAccountName"""	""	""	"TTS ContactsContract.RawContacts.getLocalAccountName ACCOUNT_NAME FEATURE_COMPANION_DEVICE_SETUP CPU RAM android.software.live"	""	""	""	""	"[('android.widget.cts.RelativeLayout_LayoutParamsTest', 11), ('android.permission.cts.Camera2PermissionTest', 4), ('android.media.cts.DecodeEditEncodeTest', 4), ('android.media.cts.AudioManagerTest', 2), ('com.android.cts.managedprofile.CameraPolicyTest', 2), ('android.jdwptunnel.cts.JdwpTunnelTest', 2), ('android.content.pm.cts.shortcutmanager.throttling.ThrottledTests', 1), ('android.graphics.pdf.cts.Utils', 1), ('android.server.wm.SplashscreenTests', 1), ('android.view.cts.ViewAnimationMatrixTest', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.RenderUtils.DrawParameters', 1), ('com.android.cts.verifier.p2p.RequesterTestActivity', 1), ('android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation', 1), ('com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite', 1), ('com.android.suspendapps.suspendtestapp.TestService', 1), ('com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest', 1), ('android.widget.cts.SimpleCursorAdapterTest', 1), ('android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.GanssReqGenericDat', 1), ('com.android.cts.verifier.camera.its.ItsTestActivity', 1), ('com.android.cts.verifier.bluetooth.BleEncryptedServerService', 1), ('android.systemui.cts.LightBarActivity', 1), ('android.hardware.multiprocess.camera.cts.Camera2Activity', 1), ('android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.Ver2_PosPayLoad_extension', 1), ('android.content.res.cts.PluralResourcesTest', 1), ('android.keystore.cts.DESedeCipherTestBase', 1), ('android.view.cts.ActionModeCtsActivity', 1), ('android.server.wm.KeyguardLockedTests', 1), ('android.server.wm.AppConfigurationTests', 1), ('android.security.cts.CVE_2018_9584', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer', 1)]"	"[('getWidth', 12), ('setUp', 11), ('getHeight', 10), ('getResources', 6), ('getInstrumentation', 4), ('getContext', 4), ('now', 4), ('recycle', 3), ('getName', 3), ('getTargetContext', 3), ('getPackageName', 3), ('tearDown', 3), ('super', 3), ('getTag', 3), ('hashCode', 3), ('stream', 3), ('run', 2), ('getClass', 2), ('getSystem', 2), ('Object', 2), ('onCreate', 2), ('getWindow', 2), ('onPause', 2), ('onResume', 2), ('moveToHomeScreen', 2), ('name', 2), ('findFirst', 2), ('trim', 2), ('getCacheDir', 1), ('flush', 1), ('Matrix', 1), ('width', 1), ('height', 1), ('getViewMatrix', 1), ('getProjectionMatrix', 1), ('getLight', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getPackageManager', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('WcdmaCellInformation', 1), ('getSimpleName', 1), ('Stub', 1), ('startBackgroundThread', 1), ('stopBackgroundThread', 1), ('setup', 1), ('getActivity', 1), ('GanssReqGenericData', 1), ('ResultReceiver', 1), ('BleEncryptedServerService', 1), ('Handler', 1), ('getAdapter', 1), ('getAttributes', 1), ('getDecorView', 1), ('start', 1), ('Ver2_PosPayLoad_extension', 1), ('Configuration', 1), ('getConfiguration', 1), ('getAssets', 1), ('getDevice', 1), ('virtualMachineManager', 1), ('attachingConnectors', 1), ('transport', 1), ('defaultArguments', 1), ('eventRequestManager', 1), ('suspend', 1), ('allClasses', 1), ('createClassPrepareRequest', 1), ('enable', 1), ('resume', 1), ('eventQueue', 1), ('remove', 1), ('request', 1), ('referenceType', 1), ('supportsSecureLock', 1), ('setUpExtrinsics', 1), ('getLocation', 1), ('getRingRotation', 1), ('doPreRenderingSetup', 1), ('main', 1)]"	"[('CtsWidgetTestCases', 12), ('CtsMediaTestCases', 6), ('CtsPermissionTestCases', 4), ('CtsWindowManagerDeviceTestCases', 3), ('CtsLocationGnssTestCases', 3), ('CtsViewTestCases', 2), ('CtsJdwpTunnelHostTestCases', 2), ('CtsPdfTestCases', 1), ('CtsSystemUiTestCases', 1), ('CtsCameraTestCases', 1), ('CtsContentTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsSecurityBulletinHostTestCases', 1)]"	""	"android.media.cts.DecodeEditEncodeTest"	"main"	"CtsMediaTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RelativeLayout_LayoutParamsTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/Camera2PermissionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CameraPolicyTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/throttling/src/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/RequesterTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java', 1), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/test-apps/SuspendTestApp/src/com/android/suspendapps/suspendtestapp/TestService.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SimpleCursorAdapterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/GanssReqGenericData.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleEncryptedServerService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/LightBarActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/Camera2Activity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/Ver2_PosPayLoad_extension.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/PluralResourcesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/DESedeCipherTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ActionModeCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2018_9584.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java', 1)]"	"[('(1,RAM,/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java)', 1), ('(27,RAM,/android/graphics/pdf/cts/Utils.java)', 1), ('(2,RAM,/android/server/wm/SplashscreenTests.java)', 1), ('(4,RAM,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(2,RAM,/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java)', 1), ('(5,RAM,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(7,RAM,/android/media/cts/AudioManagerTest.java)', 1), ('(67,RAM,/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java)', 1), ('(3,RAM,/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java)', 1), ('(2,RAM,/com/android/suspendapps/suspendtestapp/TestService.java)', 1), ('(1,RAM,/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java)', 1), ('(6,RAM,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(21,RAM,/android/permission/cts/Camera2PermissionTest.java)', 1), ('(2,RAM,/android/widget/cts/SimpleCursorAdapterTest.java)', 1), ('(202,RAM,/android/widget/cts/RelativeLayout_LayoutParamsTest.java)', 1), ('(1,RAM,/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/GanssReqGenericData.java)', 1), ('(6,RAM,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(34,TTS,/com/android/cts/verifier/bluetooth/BleEncryptedServerService.java)', 1), ('(1,RAM,/android/systemui/cts/LightBarActivity.java)', 1), ('(4,RAM,/android/hardware/multiprocess/camera/cts/Camera2Activity.java)', 1), ('(1,RAM,/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/Ver2_PosPayLoad_extension.java)', 1), ('(1,RAM,/android/content/res/cts/PluralResourcesTest.java)', 1), ('(1,RAM,/android/keystore/cts/DESedeCipherTestBase.java)', 1), ('(1,CPU,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(5,RAM,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(2,RAM,/android/view/cts/ActionModeCtsActivity.java)', 1), ('(1,RAM,/android/server/wm/KeyguardLockedTests.java)', 1), ('(1,RAM,/android/server/wm/AppConfigurationTests.java)', 1), ('(1,CPU,/android/security/cts/CVE_2018_9584.java)', 1), ('(20,RAM,/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java)', 1), ('(95,RAM,/android/media/cts/DecodeEditEncodeTest.java)', 1)]"	"[('([1:/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java]:[RAM]:[1]:method_text:[ynamicShortcuts(list()));            assertTrue(manager.updateShortcuts(list()));        }    }}])', 1), ('([27:/android/graphics/pdf/cts/Utils.java]:[RAM]:[27]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([2:/android/server/wm/SplashscreenTests.java]:[RAM]:[2]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([4:/android/view/cts/ViewAnimationMatrixTest.java]:[RAM]:[4]:method_text:[ j++) {                assertEquals(color, bitmap.getPixel(i, j));            }        }    }}])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java]:[RAM]:[2]:method_text:[       return mProjectionMatrix;    }    public Light getLight() {        return mLight;    }}])', 1), ('([5:/com/android/cts/verifier/p2p/RequesterTestActivity.java]:[RAM]:[5]:method_text:[ }).show();    }    private TestCaseListener getTestCaseListener() {        return this;    }}])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[RAM]:[1]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([6:/android/media/cts/AudioManagerTest.java]:[RAM]:[6]:method_text:[ibutes() require privledged permission MODIFY_AUDIO_ROUTING    // and thus cannot be tested here.}])', 1), ('([67:/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java]:[RAM]:[67]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([3:/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java]:[RAM]:[3]:method_text:[new GoNegReqPbcTestCase(context));        sTestSuite.add(new GoNegReqPinTestCase(context));    }}])', 1), ('([2:/com/android/suspendapps/suspendtestapp/TestService.java]:[RAM]:[2]:method_text:[{            sRegisteredReporters.clear();        }        return super.onUnbind(intent);    }}])', 1), ('([1:/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java]:[RAM]:[1]:method_text:[ static Context getContext() {        return InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([5:/com/android/cts/managedprofile/CameraPolicyTest.java]:[RAM]:[5]:method_text:[d tearDown() throws Exception {        stopBackgroundThread();        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/managedprofile/CameraPolicyTest.java]:[RAM]:[1]:method_text:[ null;        } catch (InterruptedException e) {            e.printStackTrace();        }    }}])', 1), ('([9:/android/permission/cts/Camera2PermissionTest.java]:[RAM]:[9]:method_text:[ to open camera. Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */   ])', 1), ('([1:/android/permission/cts/Camera2PermissionTest.java]:[RAM]:[1]:method_text:[ristics keys that require Permission:     * {@link android.Manifest.permission#CAMERA}.     */   ])', 1), ('([1:/android/permission/cts/Camera2PermissionTest.java]:[RAM]:[1]:method_text:[  * Add and remove availability listeners should work without permission.     */    @Presubmit   ])', 1), ('([10:/android/permission/cts/Camera2PermissionTest.java]:[RAM]:[10]:method_text:[r.waitForState(STATE_CLOSED, CAMERA_CLOSE_TIMEOUT_MS);            mCamera = null;        }    }}])', 1), ('([2:/android/widget/cts/SimpleCursorAdapterTest.java]:[RAM]:[2]:method_text:[d destroyTestImage(Context context, String fileName) {        context.deleteFile(fileName);    }}])', 1), ('([3:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[RAM]:[3]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([72:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[RAM]:[72]:method_text:[IGN_TOP]);        assertEquals(R.id.relative_view3, rules[RelativeLayout.ALIGN_BOTTOM]);    }   ])', 1), ('([63:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[RAM]:[63]:method_text:[t.ALIGN_BOTTOM]);        layoutParams.resolveLayoutDirection(View.LAYOUT_DIRECTION_LTR);    }   ])', 1), ('([6:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[RAM]:[6]:method_text:[ALIGN_LEFT);        assertEquals(RelativeLayout.TRUE, rules[RelativeLayout.ALIGN_LEFT]);    }   ])', 1), ('([4:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[RAM]:[4]:method_text:[outParams = new RelativeLayout.LayoutParams(200, 300);        layoutParams.addRule(-1);    }   ])', 1), ('([4:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[RAM]:[4]:method_text:[ RelativeLayout.LayoutParams(200, 300);        layoutParams.addRule(Integer.MAX_VALUE);    }   ])', 1), ('([19:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[RAM]:[19]:method_text:[ms.getRules();        assertEquals(Integer.MIN_VALUE, rules[RelativeLayout.ALIGN_LEFT]);    }   ])', 1), ('([4:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[RAM]:[4]:method_text:[Params = new RelativeLayout.LayoutParams(200, 300);        layoutParams.addRule(-1, 0);    }   ])', 1), ('([4:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[RAM]:[4]:method_text:[lativeLayout.LayoutParams(200, 300);        layoutParams.addRule(Integer.MAX_VALUE, 0);    }   ])', 1), ('([19:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[RAM]:[19]:method_text:[_LEFT));        assertEquals(0, layoutParams.getRule(RelativeLayout.CENTER_HORIZONTAL));    }   ])', 1), ('([4:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[RAM]:[4]:method_text:[ RelativeLayout.LayoutParams(200, 300);        assertNotNull(layoutParams.debug(""test: ""));    }}])', 1), ('([1:/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/GanssReqGenericData.java]:[RAM]:[1]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([6:/com/android/cts/verifier/camera/its/ItsTestActivity.java]:[RAM]:[6]:method_text:[era_its_test, R.string.camera_its_test_info, -1);        setPassFailButtonClickListeners();    }}])', 1), ('([34:/com/android/cts/verifier/bluetooth/BleEncryptedServerService.java]:[TTS]:[34]:method_text:[Advertiser != null) {            mAdvertiser.stopAdvertising(mAdvertiseCallback);        }    }}])', 1), ('([1:/android/systemui/cts/LightBarActivity.java]:[RAM]:[1]:method_text:[ranceFlag;        }        controller.setSystemBarsAppearance(appearance, appearanceFlag);    }}])', 1), ('([4:/android/hardware/multiprocess/camera/cts/Camera2Activity.java]:[RAM]:[4]:method_text:[       mErrorServiceConnection.stop();            mErrorServiceConnection = null;        }    }}])', 1), ('([1:/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/Ver2_PosPayLoad_extension.java]:[RAM]:[1]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/android/content/res/cts/PluralResourcesTest.java]:[RAM]:[1]:method_text:[Resources(mResources.getAssets(), mResources.getDisplayMetrics(), config);    }    @SmallTest   ])', 1), ('([1:/android/keystore/cts/DESedeCipherTestBase.java]:[RAM]:[1]:method_text:[            super.testUpdateWithEmptyInputReturnsCorrectValue();        }    }    @Override   ])', 1), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[CPU]:[1]:method_text:[ould race with the JDWP handshake. This could     * confuse clients. See bug: 178655046     */   ])', 1), ('([5:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[RAM]:[5]:method_text:[of the activity     * class and put and wait for a breakpoint on the onCreate function.     */   ])', 1), ('([2:/android/view/cts/ActionModeCtsActivity.java]:[RAM]:[2]:method_text:[(icicle);        contentView = new FrameLayout(this);        setContentView(contentView);    }}])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[RAM]:[1]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[RAM]:[1]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([1:/android/security/cts/CVE_2018_9584.java]:[CPU]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2018-9584"", null, getDevice());    }}])', 1), ('([20:/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java]:[RAM]:[20]:method_text:[        yScale * height / 2.0f,                near, far);        return projectionMatrix;    }}])', 1), ('([18:/android/media/cts/DecodeEditEncodeTest.java]:[RAM]:[18]:method_text:[gest color component delta seen (i.e. actual vs. expected)    private int mLargestColorDelta;   ])', 1), ('([1:/android/media/cts/DecodeEditEncodeTest.java]:[RAM]:[1]:method_text:[owable {        setParameters(176, 144, 1100000);        VideoEditWrapper.runTest(this);    }   ])', 1), ('([1:/android/media/cts/DecodeEditEncodeTest.java]:[RAM]:[1]:method_text:[owable {        setParameters(320, 240, 2000000);        VideoEditWrapper.runTest(this);    }   ])', 1), ('([75:/android/media/cts/DecodeEditEncodeTest.java]:[RAM]:[75]:method_text:[                  throw new RuntimeException(ioe);                }            }        }    }}])', 1)]"	""	""	"[('RAM', 46), ('CPU', 2), ('TTS', 1)]"	"[('[android.content.pm.cts.shortcutmanager.throttling.ThrottledTests ThrottledTests None]', 1), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.view.cts.ViewAnimationMatrixTest testAnimationMatrixClearedWithPassingNull CtsViewTestCases]', 1), ('[com.android.cts.verifier.p2p.RequesterTestActivity getTestCase None]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetDevices CtsMediaTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite getTestId None]', 1), ('[com.android.suspendapps.suspendtestapp.TestService isPackageSuspended None]', 1), ('[com.android.cts.managedprofile.CameraPolicyTest testEnableCameraInManagedProfile None]', 1), ('[android.permission.cts.Camera2PermissionTest getCameraIdList CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testSystemCameraDiscovery CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testCameraCharacteristicsNeedingPermission CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testAvailabilityCallback CtsPermissionTestCases]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testChangeCursorAndColumns CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testStartEnd CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testAccessRuleVerb CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testAddRuleVerbTooLow CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testAddRuleVerbTooHigh CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testAccessRuleVerbSubject CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testAddRuleVerbSubjectTooLow CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testAddRuleVerbSubjectTooHigh CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testRemoveRule CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testDebug CtsWidgetTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.GanssReqGenericDat isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsTestActivity ItsTestActivity None]', 1), ('[com.android.cts.verifier.bluetooth.BleEncryptedServerService getBluetoothLeAdvertiser None]', 1), ('[android.systemui.cts.LightBarActivity getSystemUiVisibility CtsSystemUiTestCases]', 1), ('[android.hardware.multiprocess.camera.cts.Camera2Activity getCameraIdListNoLazy CtsCameraTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.Ver2_PosPayLoad_extension isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.content.res.cts.PluralResourcesTest getDisplayMetrics CtsContentTestCases]', 1), ('[android.keystore.cts.DESedeCipherTestBase testGetParameters CtsKeystoreTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest testAttachDebuggerToProfileableApp CtsJdwpTunnelHostTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest disable CtsJdwpTunnelHostTestCases]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.security.cts.CVE_2018_9584 testPocCVE_2018_9584 CtsSecurityBulletinHostTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer doTestSpecificRendering None]', 1), ('[android.media.cts.DecodeEditEncodeTest testVideoEditQCIF CtsMediaTestCases]', 1), ('[android.media.cts.DecodeEditEncodeTest testVideoEditQVGA CtsMediaTestCases]', 1), ('[android.media.cts.DecodeEditEncodeTest testVideoEdit720p CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-6"	"7.5/H-1-6"	"07050000.720106"	"""[7.5/H-1-6] MUST have camera2 startup latency (open camera to first preview frame) &lt; 600ms as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  | [7.5/H-1-6] MUST have camera2 startup latency (open camera to first preview frame) &lt; 500 ms as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. """	""	""	"MEDIA_PERFORMANCE_CLASS android.os.Build.VERSION VERSION_CODES CTS android.os.Build.VERSION_CODES.MEDIA ITS"	""	""	""	""	"[('android.media.cts.SystemMediaRouter2Test', 23), ('android.media.cts.AudioManagerTest', 6), ('android.widget.cts.SearchView_CursorTest', 3), ('android.location.cts.gnss.asn1.supl2.supl_report.ResultCode', 2), ('android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation', 2), ('android.telephony.cts.CellBroadcastDataMigrationTest', 2), ('android.content.pm.cts.shortcutmanager.throttling.ThrottledTests', 1), ('android.graphics.pdf.cts.Utils', 1), ('android.media.cts.AudioPlaybackConfigurationTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.server.wm.SplashscreenTests', 1), ('android.view.cts.ViewAnimationMatrixTest', 1), ('android.os.cts.IntentLaunchReceiver', 1), ('android.database.cts.AbstractCursor_SelfContentObserverTest', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.RenderUtils.DrawParameters', 1), ('android.cts.backup.restoresessionapp.BaseRestoreSessionAppTest', 1), ('com.android.cts.verifier.p2p.RequesterTestActivity', 1), ('android.net.wifi.nl80211.cts.RadioChainInfoTest', 1), ('com.android.cts.deviceowner.wificonfigcreator.WifiConfigCreatorActivity', 1)]"	"[('getWidth', 12), ('getHeight', 10), ('setUp', 10), ('getInstrumentation', 7), ('getResources', 3), ('recycle', 3), ('getName', 3), ('tearDown', 3), ('getTargetContext', 3), ('getPackageName', 3), ('enoughToFilter', 3), ('run', 2), ('getClass', 2), ('release', 2), ('getAssignedValue', 2), ('edit', 2), ('commit', 2), ('getContext', 2), ('getSystem', 2), ('WcdmaCellInformation', 2), ('super', 2), ('getTag', 2), ('toLowerCase', 2), ('RouteCallback', 1), ('getCacheDir', 1), ('flush', 1), ('Matrix', 1), ('width', 1), ('height', 1), ('getMediaDirString', 1), ('stop', 1), ('DumpOnFailure', 1), ('getViewMatrix', 1), ('getProjectionMatrix', 1), ('getLight', 1), ('clearSharedPrefs', 1), ('clear', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getPackageManager', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('getSimpleName', 1), ('myUserHandle', 1), ('getIntent', 1), ('getAction', 1), ('getChildCount', 1), ('getCursor', 1), ('setup', 1), ('getActivity', 1)]"	"[('CtsMediaTestCases', 30), ('CtsLocationGnssTestCases', 4), ('CtsWidgetTestCases', 3), ('CtsTelephonyTestCases', 2), ('CtsPdfTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsViewTestCases', 1), ('CtsDatabaseTestCases', 1), ('CtsWifiTestCases', 1)]"	""	"android.widget.cts.SearchView_CursorTest"	"getActivity"	"CtsWidgetTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SystemMediaRouter2Test.java', 23), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellBroadcastDataMigrationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/throttling/src/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/IntentLaunchReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/AbstractCursor_SelfContentObserverTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/RestoreSessionTest/src/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/RequesterTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/RadioChainInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/WifiConfigCreator/src/com/android/cts/deviceowner/wificonfigcreator/WifiConfigCreatorActivity.java', 1)]"	"[('(87,CTS,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(1,ITS,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(1,CTS,/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java)', 1), ('(3,CTS,/android/graphics/pdf/cts/Utils.java)', 1), ('(4,CTS,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(3,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(1,CTS,/android/server/wm/SplashscreenTests.java)', 1), ('(1,CTS,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(1,CTS,/android/os/cts/IntentLaunchReceiver.java)', 1), ('(5,CTS,/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java)', 1), ('(8,ITS,/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java)', 1), ('(1,CTS,/android/database/cts/AbstractCursor_SelfContentObserverTest.java)', 1), ('(2,CTS,/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java)', 1), ('(1,CTS,/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java)', 1), ('(7,CTS,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(1,VERSION_CODES,/android/media/cts/AudioManagerTest.java)', 1), ('(17,CTS,/android/media/cts/AudioManagerTest.java)', 1), ('(9,CTS,/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java)', 1), ('(38,ITS,/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java)', 1), ('(1,CTS,/android/telephony/cts/CellBroadcastDataMigrationTest.java)', 1), ('(1,ITS,/android/telephony/cts/CellBroadcastDataMigrationTest.java)', 1), ('(3,CTS,/android/net/wifi/nl80211/cts/RadioChainInfoTest.java)', 1), ('(1,CTS,/com/android/cts/deviceowner/wificonfigcreator/WifiConfigCreatorActivity.java)', 1), ('(8,CTS,/android/widget/cts/SearchView_CursorTest.java)', 1)]"	"[('([7:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[7]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 2), ('([14:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[14]:method_text:[callbacks        clearCallbacks();        mUiAutomation.dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[r2ForCts,                MediaRouter2.getInstance(mContext, mContext.getPackageName()));    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[    assertEquals(mContext.getPackageName(), mSystemRouter2ForCts.getClientPackageName());    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[2]:method_text:[ame instance.        assertSame(controller, mSystemRouter2ForCts.getSystemController());    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[Id() {        assertNull(mSystemRouter2ForCts.getController(""nonExistentControllerId""));    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[2]:method_text:[otNull(controllerById);        assertEquals(systemControllerId, controllerById.getId());    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[nd = true;                break;            }        }        assertTrue(routeFound);    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[2]:method_text:[nd = true;                break;            }        }        assertTrue(routeFound);    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[ute(routeToAdd);        assertTrue(addedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[te(ROUTE_ID2);        assertTrue(removedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([3:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[3]:method_text:[argetVolume);        assertTrue(changedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([3:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[3]:method_text:[   mAudioManager.setStreamVolume(AudioManager.STREAM_MUSIC, originalVolume, 0);        }    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[ld());        assertTrue(featuresChangedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([5:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[5]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 1), ('([3:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[3]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 1), ('([4:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[4]:method_text:[erCalled,    // but with MediaRouter2#transfer(controller, route) instead of transferTo(route).   ])', 1), ('([6:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[6]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 1), ('([6:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[6]:method_text:[         mSystemRouter2ForCts.unregisterControllerCallback(controllerCallback);        }    }   ])', 1), ('([5:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[5]:method_text:[         mSystemRouter2ForCts.unregisterControllerCallback(controllerCallback);        }    }   ])', 1), ('([11:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[11]:method_text:[r (RoutingController controller : controllers) {            controller.release();        }    }}])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[ITS]:[1]:method_text:[nd = true;                break;            }        }        assertTrue(routeFound);    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java]:[CTS]:[1]:method_text:[ynamicShortcuts(list()));            assertTrue(manager.updateShortcuts(list()));        }    }}])', 1), ('([3:/android/graphics/pdf/cts/Utils.java]:[CTS]:[3]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([4:/android/media/cts/AudioPlaybackConfigurationTest.java]:[CTS]:[4]:method_text:[   // create an AudioPlaybackConfiguration directly, we first need to play something to get one.   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CTS]:[3]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/server/wm/SplashscreenTests.java]:[CTS]:[1]:method_text:[TRA_INTENT, startIntent);        homeActivity.sendCommand(COMMAND_START_ACTIVITY, data);    }   ])', 1), ('([1:/android/view/cts/ViewAnimationMatrixTest.java]:[CTS]:[1]:method_text:[     new ActivityTestRule<>(ViewAnimationMatrixActivity.class, false, false);    @UiThreadTest   ])', 1), ('([1:/android/os/cts/IntentLaunchReceiver.java]:[CTS]:[1]:method_text:[        if (innerIntent != null) {            context.sendBroadcast(innerIntent);        }    }}])', 1), ('([5:/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java]:[CTS]:[5]:method_text:[blic String toIndentedString(String indent) {    return ""ResultCode = "" + getValue() + "";\\n"";  }}])', 1), ('([8:/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java]:[ITS]:[8]:method_text:[blic String toIndentedString(String indent) {    return ""ResultCode = "" + getValue() + "";\\n"";  }}])', 1), ('([1:/android/database/cts/AbstractCursor_SelfContentObserverTest.java]:[CTS]:[1]:method_text:[.AndroidTestCase;public class AbstractCursor_SelfContentObserverTest extends AndroidTestCase{   ])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java]:[CTS]:[2]:method_text:[       return mProjectionMatrix;    }    public Light getLight() {        return mLight;    }}])', 1), ('([1:/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java]:[CTS]:[1]:method_text:[, int prefValue) {        assertThat(mPreferences.getInt(prefKey, 0)).isEqualTo(prefValue);    }}])', 1), ('([7:/com/android/cts/verifier/p2p/RequesterTestActivity.java]:[CTS]:[7]:method_text:[ }).show();    }    private TestCaseListener getTestCaseListener() {        return this;    }}])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[VERSION_CODES]:[1]:method_text:[         return maxRingVol;        } else {            return maxRingVol - 1;        }    }   ])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[CTS]:[4]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([6:/android/media/cts/AudioManagerTest.java]:[CTS]:[6]:method_text:[);        mAudioManager.playSoundEffect(AudioManager.FX_FOCUS_NAVIGATION_RIGHT, volume);    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CTS]:[1]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CTS]:[1]:method_text:[ {            fail(""onPreferredDevicesForStrategyChanged must not be called"");        }    }   ])', 1), ('([5:/android/media/cts/AudioManagerTest.java]:[CTS]:[5]:method_text:[          fail(""onPreferredDevicesForCapturePresetChanged must not be called"");        }    }   ])', 1), ('([9:/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java]:[CTS]:[9]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([38:/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java]:[ITS]:[38]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/android/telephony/cts/CellBroadcastDataMigrationTest.java]:[CTS]:[1]:method_text:[should be headless without any other activities, services or providers to handle alerts.     */   ])', 1), ('([1:/android/telephony/cts/CellBroadcastDataMigrationTest.java]:[ITS]:[1]:method_text:[rray) {        if (array != null && array.length > 0) {            fail(message);        }    }])', 1), ('([3:/android/net/wifi/nl80211/cts/RadioChainInfoTest.java]:[CTS]:[3]:method_text:[ tests if Wifi is not supported        assumeTrue(WifiFeature.isWifiSupported(context));    }   ])', 1), ('([1:/com/android/cts/deviceowner/wificonfigcreator/WifiConfigCreatorActivity.java]:[CTS]:[1]:method_text:[pted while changing wifi settings"", ie);        } finally {            finish();        }    }}])', 1), ('([5:/android/widget/cts/SearchView_CursorTest.java]:[CTS]:[5]:method_text:[    mSearchView.setSuggestionsAdapter(mSuggestionsAdapter);        });    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/SearchView_CursorTest.java]:[CTS]:[1]:method_text:[times(1)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }   ])', 1), ('([2:/android/widget/cts/SearchView_CursorTest.java]:[CTS]:[2]:method_text:[, times(2)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }}])', 1)]"	""	""	"[('CTS', 46), ('ITS', 4), ('VERSION_CODES', 1)]"	"[('[android.media.cts.SystemMediaRouter2Test testGetAllRoutes CtsMediaTestCases]', 2), ('[android.location.cts.gnss.asn1.supl2.supl_report.ResultCode isExtensionValue CtsLocationGnssTestCases]', 2), ('[android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation isTagImplicit CtsLocationGnssTestCases]', 2), ('[android.media.cts.SystemMediaRouter2Test ArrayList CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetInstanceReturnsSameInstance CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetClientPackageName CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetSystemController CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetControllerReturnsNullForUnknownId CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetController CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetRoutes CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesAdded CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesRemoved CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesChanged CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesChanged_whenLocalVolumeChanged CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnPreferredFeaturesChanged CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransferTo_succeeds_onTransferCalled CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransferTo_fails_onTransferFailureCalled CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransferToTwice CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransfer_succeeds_onTransferCalled CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testStop CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerSelectAndDeselectRoute CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerTransferToRoute CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerSetSessionVolume CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerRelease CtsMediaTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.throttling.ThrottledTests ThrottledTests None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.server.wm.SplashscreenTests prepareTestLauncher CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.p2p.RequesterTestActivity getTestCase None]', 1), ('[android.media.cts.AudioManagerTest testGetAudioHwSyncForSession CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSoundEffects CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testCheckingZenModeBlockDoesNotRequireNotificationPolicyAccess CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetAdditionalOutputDeviceDelay CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPreferredDevicesForStrategy CtsMediaTestCases]', 1), ('[android.telephony.cts.CellBroadcastDataMigrationTest testLegacyContentProvider CtsTelephonyTestCases]', 1), ('[com.android.cts.deviceowner.wificonfigcreator.WifiConfigCreatorActivity finish None]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionSelection CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionEnterKey CtsWidgetTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"5.1  . Capture for Unprocessed"	"5.1"	"C-2-1"	"5.1/C-2-1"	"05010000.670201"	"""C-2-1] MUST have a mean Continuous Round-trip Audio Latency, as defined in section 5.6 Audio Latency, of 20 milliseconds or less, over 5 measurements with a Mean Absolute Deviation less than 5 milliseconds over the audio jack path. | C-2-1] MUST return null for the AudioManager.getProperty(PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED) API method, to properly indicate the lack of support."""	""	""	"PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED getProperty(PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED) AudioManager.getProperty"	""	""	""	""	"[('com.android.cts.verifier.audio.AudioFrequencyUnprocessedActivity', 2), ('com.android.cts.verifier.audio.HifiUltrasoundTestActivity', 1), ('com.android.cts.verifier.audio.HifiUltrasoundSpeakerTestActivity', 1), ('com.android.cts.verifier.audio.audiolib.AudioSystemParams', 1)]"	"[('init', 3), ('getSystemSampleRate', 1), ('getSystemBufferFrames', 1), ('getSystemBurstFrames', 1)]"	""	""	"com.android.cts.verifier.audio.audiolib.AudioSystemParams"	"getSystemBurstFrames"	""	"[('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/HifiUltrasoundSpeakerTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/audiolib/AudioSystemParams.java', 1)]"	"[('(2,AudioManager.getProperty,/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java)', 1), ('(2,AudioManager.getProperty,/com/android/cts/verifier/audio/HifiUltrasoundSpeakerTestActivity.java)', 1), ('(1,PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED,/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java)', 1), ('(1,AudioManager.getProperty,/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java)', 1), ('(2,AudioManager.getProperty,/com/android/cts/verifier/audio/audiolib/AudioSystemParams.java)', 1)]"	"[('([2:/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java]:[AudioManager.getProperty]:[2]:method_text:[ @Override    public void sendMessage(String message) {      publishProgress(message);    }  }}])', 1), ('([2:/com/android/cts/verifier/audio/HifiUltrasoundSpeakerTestActivity.java]:[AudioManager.getProperty]:[2]:method_text:[ @Override    public void sendMessage(String message) {      publishProgress(message);    }  }}])', 1), ('([1:/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java]:[PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED]:[1]:method_text:[0) {                mPipe.write(mAudioShortArray, 0, nSamplesRead);            }        }    }}])', 1), ('([1:/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java]:[AudioManager.getProperty]:[1]:method_text:[0) {                mPipe.write(mAudioShortArray, 0, nSamplesRead);            }        }    }}])', 1), ('([2:/com/android/cts/verifier/audio/audiolib/AudioSystemParams.java]:[AudioManager.getProperty]:[2]:method_text:[ferFrames;    }    public int getSystemBurstFrames()  {        return mSystemBurstFrames;    }])', 1)]"	""	""	"[('AudioManager.getProperty', 4), ('PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED', 1)]"	"[('[com.android.cts.verifier.audio.AudioFrequencyUnprocessedActivity OnBtnClickListener None]', 2), ('[com.android.cts.verifier.audio.HifiUltrasoundTestActivity dismiss None]', 1), ('[com.android.cts.verifier.audio.HifiUltrasoundSpeakerTestActivity dismiss None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-2-3"	"9.8/H-2-3"	"09080000.720203"	"""[9.8/H-2-3] MUST NOT transmit from the hotword detection service, audio data, data that can be used to reconstruct (wholly or partially) the audio, or audio contents unrelated to the hotword itself, except to the ContentCaptureService. If Handheld device implementations declare android.hardware.microphone, they: """	""	""	"android.hardware.microphone"	""	""	""	""	"[('android.media.metrics.cts.MediaMetricsAtomTests', 1), ('com.android.cts.verifier.features.FeatureSummaryActivity', 1)]"	"[('setUp', 2), ('hashCode', 2)]"	"[('CtsMediaHostTestCases', 1)]"	""	"com.android.cts.verifier.features.FeatureSummaryActivity"	"hashCode"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/metrics/cts/MediaMetricsAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/features/FeatureSummaryActivity.java', 1)]"	"[('(1,android.hardware.microphone,/android/media/metrics/cts/MediaMetricsAtomTests.java)', 1), ('(2,android.hardware.microphone,/com/android/cts/verifier/features/FeatureSummaryActivity.java)', 1)]"	"[('([1:/android/media/metrics/cts/MediaMetricsAtomTests.java]:[android.hardware.microphone]:[1]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([2:/com/android/cts/verifier/features/FeatureSummaryActivity.java]:[android.hardware.microphone]:[2]:method_text:[lse {            ((TextView) (findViewById(R.id.fs_warnings))).setText(warnings);        }    }}])', 1)]"	""	""	"[('android.hardware.microphone', 2)]"	"[('[android.media.metrics.cts.MediaMetricsAtomTests isNotNull CtsMediaHostTestCases]', 1), ('[com.android.cts.verifier.features.FeatureSummaryActivity setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-1-7"	"7.3.1/C-1-7"	"07030100.670107"	"""C-1-7] MUST challenge the user for the recommended primary authentication (e.g. PIN, pattern, password) once every 24 hours or less for new devices launching with Android version 10, once every 72 hours or less for devices upgrading from earlier Android version. | C-1-7] and | C-1-7] and"""	""	""	"PIN"	""	""	""	""	"[('android.server.wm.AppConfigurationTests', 25), ('android.server.wm.KeyguardLockedTests', 6), ('android.media.cts.AudioPlaybackConfigurationTest', 3), ('android.media.cts.AudioManagerTest', 2), ('android.graphics.pdf.cts.Utils', 1), ('android.server.wm.SplashscreenTests', 1), ('android.view.cts.ViewAnimationMatrixTest', 1), ('com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite', 1), ('android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackup2Test', 1), ('main.java.com.android.eventlib.EventLogs', 1), ('android.slice.cts.LocalSliceProvider', 1), ('android.jdwptunnel.cts.JdwpTunnelTest', 1)]"	"[('getWidth', 12), ('getHeight', 10), ('next', 7), ('poll', 7), ('getQuerier', 4), ('recycle', 3), ('getName', 3), ('run', 2), ('getClass', 2), ('now', 2), ('get', 2), ('resetLogs', 2), ('onCreate', 2), ('setUp', 2), ('getCacheDir', 1), ('getResources', 1), ('flush', 1), ('Matrix', 1), ('width', 1), ('height', 1), ('waitForEvent', 1), ('withSettings', 1), ('supportsSecureLock', 1)]"	"[('CtsWindowManagerDeviceTestCases', 32), ('CtsMediaTestCases', 5), ('CtsPdfTestCases', 1), ('CtsViewTestCases', 1), ('CtsSliceTestCases', 1), ('CtsJdwpTunnelHostTestCases', 1)]"	""	"android.server.wm.AppConfigurationTests"	"supportsSecureLock"	"CtsWindowManagerDeviceTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 25), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher2/src/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/eventlib/src/main/java/com/android/eventlib/EventLogs.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/slice/src/android/slice/cts/LocalSliceProvider.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1)]"	"[('(26,PIN,/android/graphics/pdf/cts/Utils.java)', 1), ('(3,PIN,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(3,PIN,/android/server/wm/SplashscreenTests.java)', 1), ('(1,PIN,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(3,PIN,/android/media/cts/AudioManagerTest.java)', 1), ('(1,PIN,/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java)', 1), ('(1,PIN,/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java)', 1), ('(2,PIN,/main/java/com/android/eventlib/EventLogs.java)', 1), ('(9,PIN,/android/slice/cts/LocalSliceProvider.java)', 1), ('(1,PIN,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(12,PIN,/android/server/wm/KeyguardLockedTests.java)', 1), ('(32,PIN,/android/server/wm/AppConfigurationTests.java)', 1)]"	"[('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[PIN]:[1]:method_text:[           if (h != null) {                h.getLooper().quit();            }        }    }   ])', 2), ('([2:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[2]:method_text:[tKeyguardShowingAndNotOccluded();        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 2), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[h has     * rotation sensing optimization. So this is listed in cts-known-failures.xml.     */   ])', 2), ('([26:/android/graphics/pdf/cts/Utils.java]:[PIN]:[26]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[PIN]:[1]:method_text:[t HAL, skipping test "" + testName);            return false;        }        return true;    }}])', 1), ('([3:/android/server/wm/SplashscreenTests.java]:[PIN]:[3]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([1:/android/view/cts/ViewAnimationMatrixTest.java]:[PIN]:[1]:method_text:[ j++) {                assertEquals(color, bitmap.getPixel(i, j));            }        }    }}])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[PIN]:[1]:method_text:[        if (!isMusicPlayingBeforeTest) {            assertMusicActive(false);        }    }   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[PIN]:[2]:method_text:[:"" + microphone.getDirectionality());            Log.i(TAG, ""--------------"");        }    }   ])', 1), ('([1:/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java]:[PIN]:[1]:method_text:[new GoNegReqPbcTestCase(context));        sTestSuite.add(new GoNegReqPinTestCase(context));    }}])', 1), ('([1:/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java]:[PIN]:[1]:method_text:[oOriginalList()                .selectByIds(""s3"", ""ms2"")                .areAllDisabled();   }}])', 1), ('([2:/main/java/com/android/eventlib/EventLogs.java]:[PIN]:[2]:method_text:[ed.     */    public E waitForEvent() {        return waitForEvent(DEFAULT_POLL_TIMEOUT);    }}])', 1), ('([9:/android/slice/cts/LocalSliceProvider.java]:[PIN]:[9]:method_text:[CreatePermissionRequest(sliceUri);        return super.onCreatePermissionRequest(sliceUri);    }}])', 1), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[PIN]:[1]:method_text:[ sent big-endian so first byte has sign bit.        assertTrue((is.read() & 0x80) == 0x80);    }}])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[1]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([4:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[4]:method_text:[t contain pinned stack."", WINDOWING_MODE_PINNED,                ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([2:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[2]:method_text:[SHOW_WHEN_LOCKED_ACTIVITY, true);        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[1]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[nResizedFromFullscreen()} but resizing     * from docked state to fullscreen (reverse).     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[;    }    /**     * Tests whether the Display sizes change when rotating the device.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[datesWhenRotatingWhileFullscreen()} but when the Activity     * is in the docked stack.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[tatingWhileDocked()} but when the Activity     * is launched to side from docked stack.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ Activity will be     * relaunched twice and it should have same config as initial one.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ivity with the DialogWhenLarge theme can transform properly when in split     * screen.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ Test that device handles consequent requested orientations and displays the activities.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[should be in portrait"",                ORIENTATION_PORTRAIT, reportedSizes.orientation);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[uested orientations and will not report a config     * change to an invisible activity.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[y visible activity"",                initialOrientation, finalReportedSizes.orientation);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[),                new Point(globalSizeInfo.metricsWidth, globalSizeInfo.metricsHeight));    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[**     * Test that device handles moving between two tasks with different orientations.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[evice is rotated.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[text derived from an application context     * will not change when the device rotates.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[context derived from an activity context     * will not change when the device rotates.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[PIN]:[3]:method_text:[**     * Test that device handles moving between two tasks with different orientations.     */   ])', 1), (""([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[Test that device doesn't change device orientation by app request while in multi-window.     */   ])"", 1), (""([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[Test that device doesn't change device orientation by app request while in multi-window.     */   ])"", 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[  /**     * Test launching an activity which requests specific UI mode during creation.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ dockedActivitySizes);        assertSizesAreSame(dockedActivitySizes, applicationSizes);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[Sizes);        assertSizesAreSane(fullscreenActivitySizes, secondarySplitActivitySizes);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[tivitySession activitySession) {        return activitySession.getAppConfigInfo().sizeInfo;    }}])', 1)]"	""	""	"[('PIN', 44)]"	"[('[android.media.cts.AudioPlaybackConfigurationTest testCallbackMediaPlayerHandler CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testCallbackMediaPlayerRelease CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetAudioDeviceInfoMediaPlayerStart CtsMediaTestCases]', 1), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.view.cts.ViewAnimationMatrixTest testAnimationMatrixClearedWithPassingNull CtsViewTestCases]', 1), ('[android.media.cts.AudioManagerTest testVolume CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetMicrophones CtsMediaTestCases]', 1), ('[com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite getTestId None]', 1), ('[android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackup2Test testPreBackup None]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest testDdmsWaitsForHandshake CtsJdwpTunnelHostTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testEnterPipOverKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedActivityAndPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromFullscreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromDockedStack CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingWhileFullscreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingWhileDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingToSideFromDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSameConfigurationFullSplitFullNoRelaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testDialogWhenLargeSplitSmall CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testFullscreenAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testNonfullscreenAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationRequestConfigChanges CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationRequestConfigClears CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testRotatedInfoWithFixedRotationTransform CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testNonFullscreenActivityPermitted CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testTaskCloseRestoreFixedOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testTaskCloseRestoreFreeOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testFixedOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testTaskMoveToBackOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenPortraitAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenLandscapeAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesTopActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInFreeform CtsWindowManagerDeviceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-6"	"9.9.3/C-1-6"	"09090300.670106"	"""C-1-6] MUST encrypt file names using AES-256-CBC-CTS or Adiantum."""	""	""	"AES CBC CTS"	""	""	""	""	"[('android.media.cts.SystemMediaRouter2Test', 22), ('android.media.cts.AudioManagerTest', 5), ('android.widget.cts.SearchView_CursorTest', 3), ('android.content.pm.cts.shortcutmanager.throttling.ThrottledTests', 1), ('android.graphics.pdf.cts.Utils', 1), ('android.media.cts.AudioPlaybackConfigurationTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.server.wm.SplashscreenTests', 1), ('android.view.cts.ViewAnimationMatrixTest', 1), ('android.os.cts.IntentLaunchReceiver', 1), ('android.location.cts.gnss.asn1.supl2.supl_report.ResultCode', 1), ('android.database.cts.AbstractCursor_SelfContentObserverTest', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.RenderUtils.DrawParameters', 1), ('android.cts.backup.restoresessionapp.BaseRestoreSessionAppTest', 1), ('com.android.cts.verifier.p2p.RequesterTestActivity', 1), ('android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation', 1), ('android.telephony.cts.CellBroadcastDataMigrationTest', 1), ('android.net.wifi.nl80211.cts.RadioChainInfoTest', 1), ('com.android.cts.deviceowner.wificonfigcreator.WifiConfigCreatorActivity', 1), ('com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite', 1), ('android.gamemanager.cts.GameManagerCtsActivity', 1), ('android.contentcaptureservice.cts.AbstractRootViewActivity', 1), ('com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest', 1), ('android.graphics.cts.Canvas_EdgeTypeTest', 1), ('android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackup2Test', 1), ('android.renderscriptlegacy.cts.ScriptC_set_target_api_13', 1), ('com.android.cts.managedprofile.CameraPolicyTest', 1), ('android.permission.cts.Camera2PermissionTest', 1), ('android.provider.cts.simphonebook.SimPhonebookRequirementsRule', 1), ('android.telephony.cts.AvailableNetworkInfoTest', 1), ('android.widget.cts.SimpleCursorAdapterTest', 1), ('android.uirendering.cts.testclasses.ExactCanvasTests', 1), ('android.graphics.cts.VulkanPreTransformTest', 1), ('android.telephony.ims.cts.TestSipTransport', 1), ('android.location.cts.common.BroadcastCapture', 1), ('android.database.cts.ContentObserverTest', 1), ('android.widget.cts.RelativeLayout_LayoutParamsTest', 1), ('android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.GanssReqGenericDat', 1)]"	"[('setUp', 14), ('getWidth', 12), ('getHeight', 10), ('getInstrumentation', 7), ('getPackageName', 6), ('getResources', 5), ('tearDown', 5), ('getTargetContext', 5), ('getContext', 5), ('getApplicationContext', 5), ('getClass', 4), ('onEnterAnimationComplete', 4), ('getGrandParent', 4), ('recycle', 3), ('getName', 3), ('enoughToFilter', 3), ('setup', 3), ('getGrandGrandParent', 3), ('getAutofillId', 3), ('run', 2), ('release', 2), ('edit', 2), ('commit', 2), ('getSystem', 2), ('super', 2), ('getTag', 2), ('getSimpleName', 2), ('toLowerCase', 2), ('getActivity', 2), ('getGameMode', 2), ('onResume', 2), ('getRootView', 2), ('getParent', 2), ('getSubscriptionInfoForRemovableSims', 2), ('size', 2), ('RouteCallback', 1), ('getCacheDir', 1), ('flush', 1), ('Matrix', 1), ('width', 1), ('height', 1), ('getMediaDirString', 1), ('stop', 1), ('DumpOnFailure', 1), ('getAssignedValue', 1), ('getViewMatrix', 1), ('getProjectionMatrix', 1), ('getLight', 1), ('clearSharedPrefs', 1), ('clear', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getPackageManager', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('WcdmaCellInformation', 1), ('myUserHandle', 1), ('getIntent', 1), ('getAction', 1), ('getChildCount', 1), ('getCursor', 1), ('onCreate', 1), ('startBackgroundThread', 1), ('stopBackgroundThread', 1), ('SimPhonebookRequirementsRule', 1), ('before', 1), ('getSupportedModemCount', 1), ('getRemovableSimSlotCount', 1), ('makeSimpleCursorAdapter', 1), ('ExactComparer', 1), ('Object', 1), ('getDelegates', 1), ('stream', 1), ('findFirst', 1), ('getCount', 1), ('countDown', 1), ('myLooper', 1), ('getMainLooper', 1), ('getNextLocation', 1), ('close', 1), ('GanssReqGenericData', 1)]"	"[('CtsMediaTestCases', 28), ('CtsWidgetTestCases', 5), ('CtsLocationGnssTestCases', 3), ('CtsTelephonyTestCases', 3), ('CtsDatabaseTestCases', 2), ('CtsGraphicsTestCases', 2), ('CtsPdfTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsViewTestCases', 1), ('CtsWifiTestCases', 1), ('CtsGameManagerTestCases', 1), ('CtsContentCaptureServiceTestCases', 1), ('CtsRenderscriptLegacyTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsSimPhonebookProviderTestCases', 1), ('CtsUiRenderingTestCases', 1)]"	""	"android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.GanssReqGenericDat"	"getTag"	"CtsLocationGnssTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SystemMediaRouter2Test.java', 22), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/throttling/src/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/IntentLaunchReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/AbstractCursor_SelfContentObserverTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/RestoreSessionTest/src/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/RequesterTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellBroadcastDataMigrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/RadioChainInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/WifiConfigCreator/src/com/android/cts/deviceowner/wificonfigcreator/WifiConfigCreatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/gamemanager/src/android/gamemanager/cts/GameManagerCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/AbstractRootViewActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/Canvas_EdgeTypeTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher2/src/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscriptlegacy/src/android/renderscriptlegacy/cts/ScriptC_set_target_api_13.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CameraPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/Camera2PermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/AvailableNetworkInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SimpleCursorAdapterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanPreTransformTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestSipTransport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/common/src/android/location/cts/common/BroadcastCapture.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/ContentObserverTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RelativeLayout_LayoutParamsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/GanssReqGenericData.java', 1)]"	"[('(87,CTS,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(1,CTS,/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java)', 1), ('(3,CTS,/android/graphics/pdf/cts/Utils.java)', 1), ('(4,CTS,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(3,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(1,CTS,/android/server/wm/SplashscreenTests.java)', 1), ('(1,CTS,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(1,CTS,/android/os/cts/IntentLaunchReceiver.java)', 1), ('(5,CTS,/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java)', 1), ('(1,CTS,/android/database/cts/AbstractCursor_SelfContentObserverTest.java)', 1), ('(2,CTS,/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java)', 1), ('(1,CTS,/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java)', 1), ('(7,CTS,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(17,CTS,/android/media/cts/AudioManagerTest.java)', 1), ('(9,CTS,/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java)', 1), ('(1,CTS,/android/telephony/cts/CellBroadcastDataMigrationTest.java)', 1), ('(3,CTS,/android/net/wifi/nl80211/cts/RadioChainInfoTest.java)', 1), ('(1,CTS,/com/android/cts/deviceowner/wificonfigcreator/WifiConfigCreatorActivity.java)', 1), ('(8,CTS,/android/widget/cts/SearchView_CursorTest.java)', 1), ('(1,CTS,/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java)', 1), ('(3,CTS,/android/gamemanager/cts/GameManagerCtsActivity.java)', 1), ('(1,CTS,/android/contentcaptureservice/cts/AbstractRootViewActivity.java)', 1), ('(11,CTS,/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java)', 1), ('(1,CTS,/android/graphics/cts/Canvas_EdgeTypeTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java)', 1), ('(1,CTS,/android/renderscriptlegacy/cts/ScriptC_set_target_api_13.java)', 1), ('(3,CTS,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(1,CTS,/android/permission/cts/Camera2PermissionTest.java)', 1), ('(1,CTS,/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java)', 1), ('(1,CTS,/android/telephony/cts/AvailableNetworkInfoTest.java)', 1), ('(1,CTS,/android/widget/cts/SimpleCursorAdapterTest.java)', 1), ('(11,CTS,/android/uirendering/cts/testclasses/ExactCanvasTests.java)', 1), ('(4,CTS,/android/graphics/cts/VulkanPreTransformTest.java)', 1), ('(1,CTS,/android/telephony/ims/cts/TestSipTransport.java)', 1), ('(1,CTS,/android/location/cts/common/BroadcastCapture.java)', 1), ('(1,CTS,/android/database/cts/ContentObserverTest.java)', 1), ('(4,CTS,/android/widget/cts/RelativeLayout_LayoutParamsTest.java)', 1), ('(11,CTS,/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/GanssReqGenericData.java)', 1)]"	"[('([7:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[7]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 2), ('([14:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[14]:method_text:[callbacks        clearCallbacks();        mUiAutomation.dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[r2ForCts,                MediaRouter2.getInstance(mContext, mContext.getPackageName()));    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[    assertEquals(mContext.getPackageName(), mSystemRouter2ForCts.getClientPackageName());    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[2]:method_text:[ame instance.        assertSame(controller, mSystemRouter2ForCts.getSystemController());    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[Id() {        assertNull(mSystemRouter2ForCts.getController(""nonExistentControllerId""));    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[2]:method_text:[otNull(controllerById);        assertEquals(systemControllerId, controllerById.getId());    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[nd = true;                break;            }        }        assertTrue(routeFound);    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[2]:method_text:[nd = true;                break;            }        }        assertTrue(routeFound);    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[ute(routeToAdd);        assertTrue(addedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[te(ROUTE_ID2);        assertTrue(removedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([3:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[3]:method_text:[argetVolume);        assertTrue(changedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([3:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[3]:method_text:[   mAudioManager.setStreamVolume(AudioManager.STREAM_MUSIC, originalVolume, 0);        }    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[ld());        assertTrue(featuresChangedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([5:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[5]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 1), ('([3:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[3]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 1), ('([4:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[4]:method_text:[erCalled,    // but with MediaRouter2#transfer(controller, route) instead of transferTo(route).   ])', 1), ('([6:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[6]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 1), ('([6:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[6]:method_text:[         mSystemRouter2ForCts.unregisterControllerCallback(controllerCallback);        }    }   ])', 1), ('([5:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[5]:method_text:[         mSystemRouter2ForCts.unregisterControllerCallback(controllerCallback);        }    }   ])', 1), ('([11:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[11]:method_text:[r (RoutingController controller : controllers) {            controller.release();        }    }}])', 1), ('([1:/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java]:[CTS]:[1]:method_text:[ynamicShortcuts(list()));            assertTrue(manager.updateShortcuts(list()));        }    }}])', 1), ('([3:/android/graphics/pdf/cts/Utils.java]:[CTS]:[3]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([4:/android/media/cts/AudioPlaybackConfigurationTest.java]:[CTS]:[4]:method_text:[   // create an AudioPlaybackConfiguration directly, we first need to play something to get one.   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CTS]:[3]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/server/wm/SplashscreenTests.java]:[CTS]:[1]:method_text:[TRA_INTENT, startIntent);        homeActivity.sendCommand(COMMAND_START_ACTIVITY, data);    }   ])', 1), ('([1:/android/view/cts/ViewAnimationMatrixTest.java]:[CTS]:[1]:method_text:[     new ActivityTestRule<>(ViewAnimationMatrixActivity.class, false, false);    @UiThreadTest   ])', 1), ('([1:/android/os/cts/IntentLaunchReceiver.java]:[CTS]:[1]:method_text:[        if (innerIntent != null) {            context.sendBroadcast(innerIntent);        }    }}])', 1), ('([5:/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java]:[CTS]:[5]:method_text:[blic String toIndentedString(String indent) {    return ""ResultCode = "" + getValue() + "";\\n"";  }}])', 1), ('([1:/android/database/cts/AbstractCursor_SelfContentObserverTest.java]:[CTS]:[1]:method_text:[.AndroidTestCase;public class AbstractCursor_SelfContentObserverTest extends AndroidTestCase{   ])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java]:[CTS]:[2]:method_text:[       return mProjectionMatrix;    }    public Light getLight() {        return mLight;    }}])', 1), ('([1:/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java]:[CTS]:[1]:method_text:[, int prefValue) {        assertThat(mPreferences.getInt(prefKey, 0)).isEqualTo(prefValue);    }}])', 1), ('([7:/com/android/cts/verifier/p2p/RequesterTestActivity.java]:[CTS]:[7]:method_text:[ }).show();    }    private TestCaseListener getTestCaseListener() {        return this;    }}])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[CTS]:[4]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([6:/android/media/cts/AudioManagerTest.java]:[CTS]:[6]:method_text:[);        mAudioManager.playSoundEffect(AudioManager.FX_FOCUS_NAVIGATION_RIGHT, volume);    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CTS]:[1]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CTS]:[1]:method_text:[ {            fail(""onPreferredDevicesForStrategyChanged must not be called"");        }    }   ])', 1), ('([5:/android/media/cts/AudioManagerTest.java]:[CTS]:[5]:method_text:[          fail(""onPreferredDevicesForCapturePresetChanged must not be called"");        }    }   ])', 1), ('([9:/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java]:[CTS]:[9]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/android/telephony/cts/CellBroadcastDataMigrationTest.java]:[CTS]:[1]:method_text:[should be headless without any other activities, services or providers to handle alerts.     */   ])', 1), ('([3:/android/net/wifi/nl80211/cts/RadioChainInfoTest.java]:[CTS]:[3]:method_text:[ tests if Wifi is not supported        assumeTrue(WifiFeature.isWifiSupported(context));    }   ])', 1), ('([1:/com/android/cts/deviceowner/wificonfigcreator/WifiConfigCreatorActivity.java]:[CTS]:[1]:method_text:[pted while changing wifi settings"", ie);        } finally {            finish();        }    }}])', 1), ('([5:/android/widget/cts/SearchView_CursorTest.java]:[CTS]:[5]:method_text:[    mSearchView.setSuggestionsAdapter(mSuggestionsAdapter);        });    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/SearchView_CursorTest.java]:[CTS]:[1]:method_text:[times(1)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }   ])', 1), ('([2:/android/widget/cts/SearchView_CursorTest.java]:[CTS]:[2]:method_text:[, times(2)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }}])', 1), ('([1:/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java]:[CTS]:[1]:method_text:[new GoNegReqPbcTestCase(context));        sTestSuite.add(new GoNegReqPinTestCase(context));    }}])', 1), ('([3:/android/gamemanager/cts/GameManagerCtsActivity.java]:[CTS]:[3]:method_text:[ageName();    }    public int getGameMode() {        return mGameManager.getGameMode();    }}])', 1), ('([1:/android/contentcaptureservice/cts/AbstractRootViewActivity.java]:[CTS]:[1]:method_text:[ses.     *     */    protected abstract void setContentViewOnCreate(Bundle savedInstanceState);}])', 1), ('([11:/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java]:[CTS]:[11]:method_text:[ static Context getContext() {        return InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([1:/android/graphics/cts/Canvas_EdgeTypeTest.java]:[CTS]:[1]:method_text:[nit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class Canvas_EdgeTypeTest {   ])', 1), ('([2:/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java]:[CTS]:[2]:method_text:[;@SmallTestpublic class ShortcutManagerPreBackup2Test extends ShortcutManagerDeviceTestBase {   ])', 1), ('([1:/android/renderscriptlegacy/cts/ScriptC_set_target_api_13.java]:[CTS]:[1]:method_text:[cker(4);        check_fp.addI32(version);        invoke(mExportFuncIdx_check, check_fp);    }}])', 1), ('([3:/com/android/cts/managedprofile/CameraPolicyTest.java]:[CTS]:[3]:method_text:[d tearDown() throws Exception {        stopBackgroundThread();        super.tearDown();    }   ])', 1), ('([1:/android/permission/cts/Camera2PermissionTest.java]:[CTS]:[1]:method_text:[ to open camera. Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java]:[CTS]:[1]:method_text:[.getSubscriptionInfoForRemovableSims().size())                .isAtLeast(mMinimumSimCount);    }}])', 1), ('([1:/android/telephony/cts/AvailableNetworkInfoTest.java]:[CTS]:[1]:method_text:[        mccMncs.add(OPERATOR_MCCMNC_2);        ras.add(RAS_1);        ras.add(RAS_2);    }   ])', 1), ('([1:/android/widget/cts/SimpleCursorAdapterTest.java]:[CTS]:[1]:method_text:[ontext, R.layout.cursoradapter_item0, mCursor, COLUMNS_FROM, VIEWS_TO);    }    @UiThreadTest   ])', 1), ('([11:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CTS]:[11]:method_text:[tends ActivityTestBase {    private final BitmapComparer mExactComparer = new ExactComparer();   ])', 1), ('([4:/android/graphics/cts/VulkanPreTransformTest.java]:[CTS]:[4]:method_text:[ {        Log.d(TAG, ""setUp!"");        mContext = InstrumentationRegistry.getContext();    }   ])', 1), ('([1:/android/telephony/ims/cts/TestSipTransport.java]:[CTS]:[1]:method_text:[ex) {        synchronized (mLock) {            sLatches[latchIndex].countDown();        }    }}])', 1), ('([1:/android/location/cts/common/BroadcastCapture.java]:[CTS]:[1]:method_text:[ide    public void onReceive(Context context, Intent intent) {        mIntents.add(intent);    }])', 1), ('([1:/android/database/cts/ContentObserverTest.java]:[CTS]:[1]:method_text:[nstrumentationTestCase {    private static final Uri CONTENT_URI = Uri.parse(""content://uri"");   ])', 1), ('([4:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[CTS]:[4]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([11:/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/GanssReqGenericData.java]:[CTS]:[11]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1)]"	""	""	"[('CTS', 65)]"	"[('[android.media.cts.SystemMediaRouter2Test ArrayList CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetInstanceReturnsSameInstance CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetClientPackageName CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetSystemController CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetControllerReturnsNullForUnknownId CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetController CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetAllRoutes CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetRoutes CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesAdded CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesRemoved CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesChanged CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesChanged_whenLocalVolumeChanged CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnPreferredFeaturesChanged CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransferTo_succeeds_onTransferCalled CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransferTo_fails_onTransferFailureCalled CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransferToTwice CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransfer_succeeds_onTransferCalled CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testStop CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerSelectAndDeselectRoute CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerTransferToRoute CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerSetSessionVolume CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerRelease CtsMediaTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.throttling.ThrottledTests ThrottledTests None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.server.wm.SplashscreenTests prepareTestLauncher CtsWindowManagerDeviceTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_report.ResultCode isExtensionValue CtsLocationGnssTestCases]', 1), ('[com.android.cts.verifier.p2p.RequesterTestActivity getTestCase None]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSoundEffects CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testCheckingZenModeBlockDoesNotRequireNotificationPolicyAccess CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetAdditionalOutputDeviceDelay CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPreferredDevicesForStrategy CtsMediaTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.deviceowner.wificonfigcreator.WifiConfigCreatorActivity finish None]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionSelection CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionEnterKey CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite getTestId None]', 1), ('[android.permission.cts.Camera2PermissionTest getCameraIdList CtsPermissionTestCases]', 1), ('[android.graphics.cts.VulkanPreTransformTest testVulkanPreTransformSetToMatchCurrentTransform CtsGraphicsTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.GanssReqGenericDat isTagImplicit CtsLocationGnssTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.8.6  . Content Capture and App Search"	"9.8.6"	"C-0-7"	"9.8.6/C-0-7"	"09080600.670007"	"""C-0-7] MUST provide a user affordance to opt-out of the data, collected via AppSearch or proprietary means from being shown in android platform e.g launcher."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"5.1  . Professional Audio"	"5.1"	"C-3-2"	"5.1/C-3-2"	"05010000.670302"	"""C-3-2] MUST have a mean Continuous Round-trip Audio Latency of 25 milliseconds or less, over 5 measurements with a Mean Absolute Deviation less than 5 milliseconds over the USB host mode port using USB audio class. (This can be measured using a USB-3.5mm adapter and an Audio Loopback Dongle, or using a USB audio interface with patch cables connecting the inputs to outputs)."""	""	""	"USB"	""	""	""	""	"[('android.app.notification.legacy29.cts.NotificationAssistantServiceTest', 16), ('android.server.wm.WindowInsetsAnimationTests', 5), ('android.hardware.input.cts.tests.SonyDualshock4UsbTest', 5), ('com.android.cts.usb.TestUsbTest', 3), ('android.server.wm.WindowInputTests', 2), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 2), ('android.os.cts.UsbDebuggingTest', 2), ('android.app.notification.legacy28.cts.NotificationManager28Test', 2), ('android.permission.cts.ServicesInstantAppsCannotAccessTests', 2), ('com.android.cts.verifier.camera.its.ItsTestActivity', 1), ('android.systemui.cts.LightBarActivity', 1), ('com.android.cts.verifier.audio.USBRestrictRecordAActivity', 1), ('android.accessibilityservice.cts.utils.DisplayUtils', 1), ('com.android.cts.usb.serialtest.UsbSerialTest', 1), ('android.server.wm.BarTestUtils', 1), ('com.android.cts.verifier.battery.BatterySaverTestActivity', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('android.app.stubs.TestNotificationListener', 1), ('com.android.cts.verifier.sensors.SensorPowerTestActivity', 1), ('com.android.cts.isolatedsplitapp.SplitAppTest', 1), ('com.android.cts.verifier.audio.USBAudioPeripheralButtonsActivity', 1), ('android.carrierapi.cts.BugreportManagerTest', 1), ('android.webkit.cts.CtsTestServer', 1), ('com.android.cts.verifier.usb.device.UsbDeviceTestActivity', 1), ('com.android.cts.verifier.audio.ProAudioActivity', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('android.media.cts.AudioDeviceInfoTest', 1), ('android.voicesettings.cts.BatterySaverModeTest', 1), ('android.app.cts.SystemFeaturesTest', 1), ('android.server.wm.ForceRelayoutTestBase', 1), ('android.app.cts.TileServiceTest', 1), ('android.app.cts.InstrumentationTest', 1), ('android.adb.cts.AdbHostTest', 1)]"	"[('getWindow', 9), ('setUp', 6), ('getInstrumentation', 5), ('hashCode', 3), ('getDecorView', 3), ('systemBars', 3), ('tearDown', 3), ('getAttributes', 2), ('getIntent', 2), ('getContext', 2), ('getId', 2), ('BugreportCallbackImpl', 2), ('start', 2), ('shutdown', 2), ('getSimpleName', 2), ('close', 2), ('getName', 2), ('ResultReceiver', 1), ('Rect', 1), ('getSurface', 1), ('setup', 1), ('WindowManagerStateHelper', 1), ('pressWakeupButton', 1), ('pressUnlockButton', 1), ('launchHomeActivityNoWait', 1), ('waitForIdleSync', 1), ('getReceiverComponentName', 1), ('myUserId', 1), ('getPackageManager', 1), ('USBAudioPeripheralButtonsActivity', 1), ('cannotGetUsbManager', 1), ('getTargetContext', 1), ('simultaneousBugreportsNotAllowed', 1), ('getMethodName', 1), ('CtsTrustManager', 1), ('getAssets', 1), ('getResources', 1), ('getSingleton', 1), ('getLocalPort', 1), ('shutDownOnClientThread', 1), ('join', 1), ('now', 1), ('nanoTime', 1), ('getMaxPacketSize', 1), ('getPassButton', 1), ('IntentFilter', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getApplicationContext', 1), ('getApplicationInfo', 1), ('getSerialNumber', 1), ('Thread', 1), ('run', 1), ('getProductName', 1), ('getDevice', 1), ('ProAudioActivity', 1), ('super', 1), ('printStackTrace', 1), ('getActivity', 1), ('statusBars', 1), ('navigationBars', 1), ('getInsetsController', 1), ('flush', 1), ('deleteOnExit', 1)]"	"[('CtsLegacyNotification29TestCases', 16), ('CtsWindowManagerDeviceTestCases', 8), ('CtsHardwareTestCases', 5), ('CtsAppTestCases', 3), ('CtsLegacyNotification20TestCases', 2), ('CtsLegacyNotification28TestCases', 2), ('CtsPermissionTestCases', 2), ('CtsSystemUiTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsCarrierApiTestCases', 1), ('CtsMediaTestCases', 1), ('CtsVoiceSettingsTestCases', 1), ('CtsAdbHostTestCases', 1)]"	""	"android.app.notification.legacy29.cts.NotificationAssistantServiceTest"	"deleteOnExit"	"CtsLegacyNotification29TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy29/src/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/usb/src/com/android/cts/usb/TestUsbTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInputTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy20/src/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/UsbDebuggingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy28/src/android/app/notification/legacy28/cts/NotificationManager28Test.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ServicesInstantAppsCannotAccessTests.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/LightBarActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/utils/DisplayUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/usb/SerialTestApp/src/com/android/cts/usb/serialtest/UsbSerialTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/BarTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/battery/BatterySaverTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/app/src/android/app/stubs/TestNotificationListener.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/SensorPowerTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/src/com/android/cts/isolatedsplitapp/SplitAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBAudioPeripheralButtonsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/BugreportManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/testserver/src/android/webkit/cts/CtsTestServer.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/ProAudioActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioDeviceInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/voicesettings/src/android/voicesettings/cts/BatterySaverModeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ForceRelayoutTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/TileServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/InstrumentationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adb/src/android/adb/cts/AdbHostTest.java', 1)]"	"[('(1,USB,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(6,USB,/android/systemui/cts/LightBarActivity.java)', 1), ('(38,USB,/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java)', 1), ('(1,USB,/android/accessibilityservice/cts/utils/DisplayUtils.java)', 1), ('(18,USB,/android/server/wm/WindowInsetsAnimationTests.java)', 1), ('(3,USB,/com/android/cts/usb/serialtest/UsbSerialTest.java)', 1), ('(10,USB,/android/server/wm/BarTestUtils.java)', 1), ('(1,USB,/com/android/cts/verifier/battery/BatterySaverTestActivity.java)', 1), ('(3,USB,/android/server/wm/WindowInputTests.java)', 1), ('(13,USB,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(4,USB,/android/app/stubs/TestNotificationListener.java)', 1), ('(1,USB,/com/android/cts/verifier/sensors/SensorPowerTestActivity.java)', 1), ('(8,USB,/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java)', 1), ('(2,USB,/com/android/cts/isolatedsplitapp/SplitAppTest.java)', 1), ('(8,USB,/com/android/cts/verifier/audio/USBAudioPeripheralButtonsActivity.java)', 1), ('(3,USB,/android/os/cts/UsbDebuggingTest.java)', 1), ('(6,USB,/android/app/notification/legacy28/cts/NotificationManager28Test.java)', 1), ('(3,USB,/android/permission/cts/ServicesInstantAppsCannotAccessTests.java)', 1), ('(1,USB,/android/carrierapi/cts/BugreportManagerTest.java)', 1), ('(1,USB,/android/webkit/cts/CtsTestServer.java)', 1), ('(405,USB,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(22,USB,/com/android/cts/usb/TestUsbTest.java)', 1), ('(26,USB,/com/android/cts/verifier/audio/ProAudioActivity.java)', 1), ('(17,USB,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(6,USB,/android/media/cts/AudioDeviceInfoTest.java)', 1), ('(1,USB,/android/voicesettings/cts/BatterySaverModeTest.java)', 1), ('(4,USB,/android/app/cts/SystemFeaturesTest.java)', 1), ('(2,USB,/android/server/wm/ForceRelayoutTestBase.java)', 1), ('(1,USB,/android/app/cts/TileServiceTest.java)', 1), ('(2,USB,/android/app/cts/InstrumentationTest.java)', 1), ('(7,USB,/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java)', 1), ('(3,USB,/android/adb/cts/AdbHostTest.java)', 1), ('(36,USB,/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java)', 1)]"	"[('([1:/com/android/cts/verifier/camera/its/ItsTestActivity.java]:[USB]:[1]:method_text:[era_its_test, R.string.camera_its_test_info, -1);        setPassFailButtonClickListeners();    }}])', 1), ('([6:/android/systemui/cts/LightBarActivity.java]:[USB]:[6]:method_text:[ranceFlag;        }        controller.setSystemBarsAppearance(appearance, appearanceFlag);    }}])', 1), ('([38:/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java]:[USB]:[38]:method_text:[ filter);            mUsbManager.requestPermission(theDevice, permissionIntent);        }    }}])', 1), ('([1:/android/accessibilityservice/cts/utils/DisplayUtils.java]:[USB]:[1]:method_text:[ger.unregisterDisplayListener(listener);            }            return display;        }    }}])', 1), ('([1:/android/server/wm/WindowInsetsAnimationTests.java]:[USB]:[1]:method_text:[getWindow().getDecorView();        assumeTrue(hasWindowInsets(mRootView, systemBars()));    }   ])', 1), ('([12:/android/server/wm/WindowInsetsAnimationTests.java]:[USB]:[12]:method_text:[ack.statusAnimSteps.size() - 1).insets                        .getInsets(statusBars()));    }   ])', 1), ('([2:/android/server/wm/WindowInsetsAnimationTests.java]:[USB]:[2]:method_text:[te().isWindowVisible(""StatusBar""));        verifyZeroInteractions(mActivity.mCallback);    }   ])', 1), ('([2:/android/server/wm/WindowInsetsAnimationTests.java]:[USB]:[2]:method_text:[            insets -> NONE.equals(insets.getInsets(navigationBars()))), any());        }    }   ])', 1), ('([1:/android/server/wm/WindowInsetsAnimationTests.java]:[USB]:[1]:method_text:[, atLeastOnce()).onProgress(any(), any());        verify(mActivity.mCallback).onEnd(any());    }}])', 1), ('([3:/com/android/cts/usb/serialtest/UsbSerialTest.java]:[USB]:[3]:method_text:[4.class)public class UsbSerialTest {    private static final String TAG = ""CtsUsbSerialTest"";   ])', 1), ('([10:/android/server/wm/BarTestUtils.java]:[USB]:[10]:method_text:[         Log.i(""BarTestUtils"", ""Assumption violated"", e);            return true;        }    }}])', 1), ('([1:/com/android/cts/verifier/battery/BatterySaverTestActivity.java]:[USB]:[1]:method_text:[ } else {                error(R.string.battery_saver_test_bs_on);            }        }    };}])', 1), ('([1:/android/server/wm/WindowInputTests.java]:[USB]:[1]:method_text:[InputManager.class);        mInstrumentation.waitForIdleSync();        mClickCount = 0;    }   ])', 1), ('([2:/android/server/wm/WindowInputTests.java]:[USB]:[2]:method_text:[   // Should not be allowed to inject event to the window from another process.        }    }   ])', 1), ('([13:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[USB]:[13]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([4:/android/app/stubs/TestNotificationListener.java]:[USB]:[4]:method_text:[ void onNotificationRankingUpdate(RankingMap rankingMap) {        mRankingMap = rankingMap;    }}])', 1), ('([1:/com/android/cts/verifier/sensors/SensorPowerTestActivity.java]:[USB]:[1]:method_text:[} else {            throw new IllegalStateException(""Attempt to run test twice"");        }    }}])', 1), ('([1:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[USB]:[1]:method_text:[r listener to disconnect        assertTrue(mListener == null || !mListener.isConnected);    }   ])', 1), ('([7:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[USB]:[7]:method_text:[InterruptedException ex) {                // pass            }        }        return n;    }}])', 1), ('([2:/com/android/cts/isolatedsplitapp/SplitAppTest.java]:[USB]:[2]:method_text:[  };        }        public Context getContext() {            return mContext;        }    }}])', 1), ('([8:/com/android/cts/verifier/audio/USBAudioPeripheralButtonsActivity.java]:[USB]:[8]:method_text:[asBtnA = mHasBtnB = mHasBtnC = false;        showButtonsState();        calculateMatch();    }}])', 1), ('([1:/android/os/cts/UsbDebuggingTest.java]:[USB]:[1]:method_text:[java.io.File;public class UsbDebuggingTest extends AndroidTestCase {    @RestrictedBuildTest   ])', 1), ('([2:/android/os/cts/UsbDebuggingTest.java]:[USB]:[2]:method_text:[       File keys = new File(""/adb_keys"");            assertFalse(keys.exists());        }    }}])', 1), ('([1:/android/app/notification/legacy28/cts/NotificationManager28Test.java]:[USB]:[1]:method_text:[               NOTIFICATION_CHANNEL_ID, ""name"", NotificationManager.IMPORTANCE_DEFAULT));    }   ])', 1), ('([5:/android/app/notification/legacy28/cts/NotificationManager28Test.java]:[USB]:[5]:method_text:[  mContext, 0, new Intent(mContext, this.getClass()), PendingIntent.FLAG_MUTABLE_UNAUDITED);    }}])', 1), ('([1:/android/permission/cts/ServicesInstantAppsCannotAccessTests.java]:[USB]:[1]:method_text:[AppModeInstant@RunWith(AndroidJUnit4.class)public class ServicesInstantAppsCannotAccessTests {   ])', 1), ('([2:/android/permission/cts/ServicesInstantAppsCannotAccessTests.java]:[USB]:[2]:method_text:[strumentationRegistry.getTargetContext().getSystemService(                USB_SERVICE));    }   ])', 1), ('([1:/android/carrierapi/cts/BugreportManagerTest.java]:[USB]:[1]:method_text:[ssertThat(bugreportFile2.length()).isEqualTo(0L);        assertFdIsClosed(bugreportFd2);    }   ])', 1), ('([1:/android/webkit/cts/CtsTestServer.java]:[USB]:[1]:method_text:[         Log.e(TAG, ""Error handling request:"", e);                }            }        }    }}])', 1), ('([405:/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java]:[USB]:[405]:method_text:[     unregisterReceiver(mUsbDevicePermissionReceiver);        }        super.onDestroy();    }}])', 1), ('([7:/com/android/cts/usb/TestUsbTest.java]:[USB]:[7]:method_text:[A-Z0-9]{6,20}     */    @AppModeInstant(reason = ""only instant apps fail when reading serial"")   ])', 1), ('([1:/com/android/cts/usb/TestUsbTest.java]:[USB]:[1]:method_text:[nt [a-zA-Z0-9]{6,20}     */    @AppModeFull(reason = ""serial can not be read by instant apps"")   ])', 1), ('([14:/com/android/cts/usb/TestUsbTest.java]:[USB]:[14]:method_text:[at() throws DeviceNotAvailableException {        mDevice.executeAdbCommand(""logcat"", ""-c"");    }}])', 1), ('([26:/com/android/cts/verifier/audio/ProAudioActivity.java]:[USB]:[26]:method_text:[audio_proaudio_NA));            }            calculatePass();            break;        }    }}])', 1), ('([17:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[USB]:[17]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([6:/android/media/cts/AudioDeviceInfoTest.java]:[USB]:[6]:method_text:[  * Ensure no regression on accepted input device types.     *     * @throws Exception     */   ])', 1), ('([1:/android/voicesettings/cts/BatterySaverModeTest.java]:[USB]:[1]:method_text:[text.getSystemService(Context.POWER_SERVICE);        return powerManager.isPowerSaveMode();    }}])', 1), ('([4:/android/app/cts/SystemFeaturesTest.java]:[USB]:[4]:method_text:[e negatives.            assertAvailable(PackageManager.FEATURE_USB_ACCESSORY);        }    }   ])', 1), ('([2:/android/server/wm/ForceRelayoutTestBase.java]:[USB]:[2]:method_text:[   return WindowInsets.CONSUMED;            });            setContentView(view);        }    }}])', 1), ('([1:/android/app/cts/TileServiceTest.java]:[USB]:[1]:method_text:[= false;        @Override        public void run() {            hasRan = true;        }    }}])', 1), ('([2:/android/app/cts/InstrumentationTest.java]:[USB]:[2]:method_text:[d onCreate() {            super.onCreate();            mIsOnCreateCalled = true;        }    }}])', 1), ('([3:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[USB]:[3]:method_text:[)    public SonyDualshock4UsbTest() {        super(R.raw.sony_dualshock4_usb_register);    }   ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[USB]:[1]:method_text:[ic void testAllKeys() {        testInputEvents(R.raw.sony_dualshock4_usb_keyeventtests);    }   ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[USB]:[1]:method_text:[d testAllMotions() {        testInputEvents(R.raw.sony_dualshock4_usb_motioneventtests);    }   ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[USB]:[1]:method_text:[tBattery() {        testInputBatteryEvents(R.raw.sony_dualshock4_usb_batteryeventtests);    }   ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[USB]:[1]:method_text:[aterThan(""4.19""));        testInputVibratorEvents(R.raw.sony_dualshock4_usb_vibratortests);    }}])', 1), ('([3:/android/adb/cts/AdbHostTest.java]:[USB]:[3]:method_text:[c7c6d5edcbe04454eb9a40f947ac0a3045f64eb    // for the patch that enabled this on Pixel devices.   ])', 1), ('([6:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[6]:method_text:[(false);        toggleAssistantAccess(false);        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[ListenerService.Ranking.USER_SENTIMENT_POSITIVE,                out.getUserSentiment());    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[ListenerService.Ranking.USER_SENTIMENT_NEGATIVE,                out.getUserSentiment());    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[getRanking(sbn.getKey(), out);        assertEquals(newImportance, out.getImportance());    }   ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[2]:method_text:[t(Adjustment.KEY_RANKING_SCORE);            mUi.dropShellPermissionIdentity();        }    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[und || action.actionIntent.equals(sendIntent);        }        assertTrue(actionFound);    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[Found = replyFound || reply.equals(smartReply);        }        assertTrue(replyFound);    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[nking(sbn.getKey(), out);        assertEquals(currentImportance, out.getImportance());    }   ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[2]:method_text:[ank1 > newRank2);        } else {            assertTrue(newRank1 < newRank2);        }    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[;        assertEquals(snoozeContext, mNotificationAssistantService.snoozedUntilContext);    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[             + ""> was not restored when unsnoozed from listener"",                found);    }   ])', 1), ('([3:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[3]:method_text:[icationAssistantService.notificationVisible);        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([3:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[3]:method_text:[;        mStatusBarManager.collapsePanels();        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([3:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[3]:method_text:[e(mNotificationAssistantService.isPanelOpen);        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([5:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[5]:method_text:[        mStatusBarManager.collapsePanels();        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([4:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[4]:method_text:[ new IOException(""Could not read stdout of command:\xa0"" + command, e);            }        }    }}])', 1)]"	""	""	"[('USB', 63)]"	"[('[com.android.cts.verifier.camera.its.ItsTestActivity ItsTestActivity None]', 1), ('[android.systemui.cts.LightBarActivity getSystemUiVisibility CtsSystemUiTestCases]', 1), ('[com.android.cts.verifier.audio.USBRestrictRecordAActivity LocalClickListener None]', 1), ('[android.accessibilityservice.cts.utils.DisplayUtils getDisplay CtsAccessibilityServiceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_overlapping CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_consumedByDecor CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_childInsetting CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_withLegacyFlags CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.BarTestUtils BarTestUtils None]', 1), ('[com.android.cts.verifier.battery.BatterySaverTestActivity getTests None]', 1), ('[android.server.wm.WindowInputTests testInjectToStatusBar CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[android.app.stubs.TestNotificationListener onListenerConnected None]', 1), ('[com.android.cts.verifier.sensors.SensorPowerTestActivity SensorPowerTestActivity None]', 1), ('[android.app.notification.legacy20.cts.LegacyNotificationManager20Test testNotificationListener_cancelNotifications CtsLegacyNotification20TestCases]', 1), ('[com.android.cts.isolatedsplitapp.SplitAppTest testNative_cannotLoadSharedLibrary None]', 1), ('[com.android.cts.verifier.audio.USBAudioPeripheralButtonsActivity showDisableAssistantDialog None]', 1), ('[android.os.cts.UsbDebuggingTest testUsbDebugging None]', 1), ('[android.app.notification.legacy28.cts.NotificationManager28Test testPostFullScreenIntent_noPermission CtsLegacyNotification28TestCases]', 1), ('[android.carrierapi.cts.BugreportManagerTest hasEarlyReportFinished CtsCarrierApiTestCases]', 1), ('[android.webkit.cts.CtsTestServer getAcceptedIssuers None]', 1), ('[com.android.cts.verifier.usb.device.UsbDeviceTestActivity getAccessoryList None]', 1), ('[com.android.cts.usb.TestUsbTest CollectingTestListener None]', 1), ('[com.android.cts.usb.TestUsbTest testInstantAppsCannotReadSerial None]', 1), ('[com.android.cts.usb.TestUsbTest testUsbSerialReadOnDeviceMatches None]', 1), ('[com.android.cts.verifier.audio.ProAudioActivity isHDMIValid None]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[android.voicesettings.cts.BatterySaverModeTest testAll CtsVoiceSettingsTestCases]', 1), ('[android.app.cts.SystemFeaturesTest testUsbAccessory CtsAppTestCases]', 1), ('[android.app.cts.TileServiceTest testTileInDumpAndHasState CtsAppTestCases]', 1), ('[android.app.cts.InstrumentationTest testSendKeySync CtsAppTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest SonyDualshock4UsbTest CtsHardwareTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest testAllKeys CtsHardwareTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest testAllMotions CtsHardwareTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest testBattery CtsHardwareTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest testVibrator CtsHardwareTestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest isWatch CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationEnqueued CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_userSentimentKey CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_importanceKey CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotifications_rankingScoreKey CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_smartActionKey CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_smartReplyKey CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_importanceKey_notAllowed CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_rankingScoreKey_notAllowed CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationSnoozedUntilContext CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testUnsnoozeFromNAS CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationVisibilityChanged CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationsSeen CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnPanelRevealedAndHidden CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationClicked CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationFeedbackReceived CtsLegacyNotification29TestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.1.1  . The"	"3.9.1.1"	"C-1-1"	"3.9.1.1/C-1-1"	"03090101.670101"	"""C-1-1] MUST support enrolling a Device Policy Client (DPC) as a Device Owner app as described below: When the device implementation has no user data configured yet, it:"""	""	""	"DPC"	""	""	""	""	"[('library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest', 61), ('com.android.cts.deviceandprofileowner.SuspendPackageTest', 2), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 2), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerHostSideTransferTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('processor.main.java.com.android.bedstead.remotedpc.processor.Processor', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi30', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1)]"	"[('users', 36), ('devicePolicy', 34), ('createUser', 18), ('createAndStart', 18), ('userHandle', 16), ('remove', 13), ('getDeviceOwner', 12), ('getDevice', 9), ('devicePolicyController', 8), ('any', 5), ('tearDown', 4), ('setUp', 3), ('deviceOwner', 3), ('profileOwner', 3), ('devicePolicyManager', 3), ('getBuild', 2), ('getSupportedSourceVersion', 1), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1), ('getName', 1), ('DeviceState', 1), ('deviceOwner_noDeviceOwner_returnsNull', 1), ('deviceOwner_nonRemoteDpcDeviceOwner_returnsNull', 1), ('deviceOwner_remoteDpcDeviceOwner_returnsInstance', 1), ('profileOwner_noProfileOwner_returnsNull', 1), ('profileOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userHandle_null_throwsException', 1), ('profileOwner_userHandle_noProfileOwner_returnsNull', 1), ('profileOwner_userHandle_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userHandle_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userReference_null_throwsException', 1), ('profileOwner_userReference_noProfileOwner_returnsNull', 1), ('profileOwner_userReference_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userReference_remoteDpcProfileOwner_returnsInstance', 1), ('any_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userHandle_null_throwsException', 1), ('any_userHandle_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userHandle_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userHandle_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userReference_null_throwsException', 1), ('any_userReference_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userReference_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userReference_remoteDpcProfileOwner_returnsProfileOwner', 1), ('setAsDeviceOwner_userHandle_null_throwsException', 1), ('setAsDeviceOwner_userHandle_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userHandle_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userHandle_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsDeviceOwner_userReference_null_throwsException', 1), ('setAsDeviceOwner_userReference_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userReference_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userReference_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsProfileOwner_userHandle_null_throwsException', 1), ('setAsProfileOwner_userHandle_alreadySet_doesNothing', 1), ('setAsProfileOwner_userHandle_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userHandle_doesNotHaveProfileOwner_setsProfileOwner', 1), ('setAsProfileOwner_userReference_null_throwsException', 1), ('setAsProfileOwner_userReference_alreadySet_doesNothing', 1), ('setAsProfileOwner_userReference_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userReference_doesNotHaveProfileOwner_setsProfileOwner', 1), ('devicePolicyController_returnsDevicePolicyController', 1), ('remove_deviceOwner_removes', 1), ('remove_profileOwner_removes', 1), ('frameworkCall_makesCall', 1), ('getCurrentFailedPasswordAttempts', 1), ('frameworkCall_onProfile_makesCall', 1), ('frameworkCallRequiresProfileOwner_notProfileOwner_throwsSecurityException', 1), ('forDevicePolicyController_nullDevicePolicyController_throwsException', 1), ('forDevicePolicyController_nonRemoteDpcDevicePolicyController_throwsException', 1), ('forDevicePolicyController_remoteDpcDevicePolicyController_returnsRemoteDpc', 1)]"	"[('CtsDevicePolicyManagerTestCases', 4), ('CtsDevicePolicyTestCases', 2), ('CtsMediaParserTestCases', 1), ('CtsTvTestCases', 1)]"	""	"library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest"	"devicePolicyController"	""	"[('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java', 61), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1)]"	"[('(2,DPC,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(4,DPC,/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java)', 1), ('(2,DPC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(4,DPC,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(4,DPC,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(2,DPC,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(19,DPC,/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java)', 1), ('(2,DPC,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(2,DPC,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,DPC,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(4,DPC,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(27,DPC,/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(179,DPC,/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java)', 1)]"	"[('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[);        } finally {            remoteDPC.devicePolicyController().remove();        }    }   ])', 4), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 2), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[        } finally {            deviceOwner.devicePolicyController().remove();        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[    } finally {            sTestApis.devicePolicy().getDeviceOwner().remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[PC.devicePolicyController());        } finally {            profile.remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);    }}])', 1), ('([4:/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java]:[DPC]:[4]:method_text:[NCOMING_TEST);            installAppAsUser(TRANSFER_OWNER_INCOMING_APK, mUserId);        }    }}])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {        testAssetExtraction(""wav/sample_ima_adpcm.wav"");    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[1]:method_text:[RECEIVER_PKG);    }    /**     * Verify that we cannot suspend launcher and dpc app.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[3]:method_text:[);        assertWithMessage(""package %s suspension"", pkg).that(actual).isEqualTo(expected);    }}])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[provider that provides enterprise slice cannot     * see the enterprise slice requests.     */   ])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[()), offerCallback);        offerCallback.assertNoCallback();        return offerCallback;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases. * */public class ResetPasswordTest extends BaseDeviceAdminTest {   ])', 1), ('([19:/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java]:[DPC]:[19]:method_text:[getMessager()                .printMessage(Diagnostic.Kind.ERROR, errorText, errorElement);    }}])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[e(ComponentName, String)} */public class CertInstallDelegateTest extends BaseJUnit3TestCase {   ])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[DPC]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[DPC]:[1]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([4:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[DPC]:[4]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 1), ('([27:/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java]:[DPC]:[27]:method_text:[min void addPersistentPreferredActivity(            IntentFilter filter, ComponentName activity);}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java]:[DPC]:[1]:method_text:[ws Exception {        runDeviceTestsAsUser(DEVICE_ADMIN_PKG, className, testName, mUserId);    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[DPC]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([7:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[7]:method_text:[s    public static void teardownClass() {        sNonRemoteDpcTestApp.uninstall(sUser);    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Owner_noDeviceOwner_returnsNull() {        assertThat(RemoteDpc.deviceOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.deviceOwner()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.profileOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[rofileOwner()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.profileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[e.userHandle())).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[nterException.class,                () -> RemoteDpc.profileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[oDeviceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[moteDpc.any()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[emoteDpc.any()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[        assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser.userHandle())).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.userHandle())).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[())).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[     assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser)).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[teDpc.any(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Dpc.any(sUser)).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[le)).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[terException.class,                () -> RemoteDpc.setAsDeviceOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ption.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Exception.class,                () -> RemoteDpc.setAsDeviceOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[on.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[erException.class,                () -> RemoteDpc.setAsProfileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[tion.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[xception.class,                () -> RemoteDpc.setAsProfileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[n.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[Policy().getDeviceOwner());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[oteDPC.remove();        assertThat(sTestApis.devicePolicy().getDeviceOwner()).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[eed to support the case where there is both a DO and a PO on    //  older versions of Android?   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[ntFailedPasswordAttempts();        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[ succeeds            remoteDPC.devicePolicyManager().isUsingUnifiedPassword();        }    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[.isUsingUnifiedPassword());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.forDevicePolicyController(null));    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Controller(deviceOwner));        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([8:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[8]:method_text:[                 .isNotNull();        } finally {            remoteDPC.remove();        }    }])', 1)]"	""	""	"[('DPC', 77)]"	"[('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNull None]', 19), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNotNull None]', 15), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isUsingUnifiedPassword None]', 2), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testWavWithImaAdpcm CtsMediaParserTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSetPackagesNotSuspended None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSuspendNotSuspendablePackages None]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_enableService_issueRequest CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_disableService_noIssueRequest CtsDevicePolicyTestCases]', 1), ('[processor.main.java.com.android.bedstead.remotedpc.processor.Processor latest None]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testRevokeKeyPairFromApp_keyNotUsable None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtsc3FrontendSettings CtsTvTestCases]', 1), ('[communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager isUsingUnifiedPassword None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest TestApis None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userReference_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userReference_nonExistingUser_throwsException None]', 1)]"	""	""	""	""	""	""	""	""	""
"3.1  . Contacts"	"3.1"	"C-1-5"	"3.1/C-1-5"	"03010000.670105"	"""C-1-5] MUST consider double tap of KEYCODE_HEADSETHOOK or KEYCODE_MEDIA_PLAY_PAUSE as KEYCODE_MEDIA_NEXT for MediaSession.Callback#onMediaButtonEvent. <h3 id=""315_instant_apps""  | C-1-5] Delete operations performed against the custom local account MUST result in raw contacts being purged immediately (as if the CALLER_IS_SYNCADAPTER param was set to true), even if the CALLER\_IS\_SYNCADAPTER param was set to false or not specified. <h2 id=""4_application_packaging_compatibility"" """	""	""	"MediaSession.Callback CALLER KEYCODE_MEDIA_PLAY_PAUSE KEYCODE_HEADSETHOOK CALLER_IS_SYNCADAPTER SYNCADAPTER KEYCODE_MEDIA_NEXT"	""	""	""	""	"[('android.accounts.cts.AccountManagerTest', 10), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 4), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 3), ('android.content.cts.SyncRequestTest', 3), ('com.android.cts.devicepolicy.ManagedProfileContactsTest', 2), ('android.cts.backup.syncadaptersettingsapp.SyncAdapterSettingsTest', 2), ('com.android.server.cts.device.statsdatom.StatsdSyncAdapter', 1), ('android.os.cts.ProcessTest', 1), ('android.server.wm.lifecycle.ActivityLifecycleTests', 1), ('com.android.cts.deviceandprofileowner.WifiTest', 1), ('android.view.textclassifier.cts.TextClassifierServiceSwapTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofDetectionTest', 1), ('com.android.compatibility.common.util.MediaUtils', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('android.app.stubs.TestNotificationListener', 1), ('android.server.wm.app.AlwaysFocusablePipActivity', 1), ('android.permission.cts.NoActivityRelatedPermissionTest', 1), ('android.server.wm.AlertWindowsImportanceTests', 1), ('com.android.cts.deviceandprofileowner.KeyguardDisabledFeaturesTest', 1), ('com.android.cts.verifier.audio.USBAudioPeripheralButtonsActivity', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('com.android.compatibility.common.util.BlockingBroadcastReceiver', 1), ('android.telecom.cts.BaseTelecomTestWithMockServices', 1), ('com.android.cts.deviceandprofileowner.ApplicationRestrictionsIsCallerDelegateHelper', 1), ('android.os.cts.AccessSerialModernTest', 1), ('android.telephony.cts.util.CarrierPrivilegeUtils', 1)]"	"[('AtomicInteger', 7), ('start', 7), ('Object', 5), ('close', 5), ('Bundle', 4), ('run', 4), ('getLooper', 4), ('capacity', 4), ('clear', 4), ('setUp', 3), ('quitSafely', 3), ('getOutputStream', 3), ('countDown', 2), ('getName', 2), ('getIntent', 2), ('getSimpleName', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('getInstrumentation', 2), ('resetCountDownLatch', 1), ('getCount', 1), ('getPackage', 1), ('tearDown', 1), ('getOverrideConfig', 1), ('getPackageName', 1), ('getReceiverComponentName', 1), ('myUserId', 1), ('makeBasic', 1), ('toBundle', 1), ('USBAudioPeripheralButtonsActivity', 1), ('onCreate', 1), ('BlockingStateCallback', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('build', 1), ('onDestroy', 1), ('quit', 1), ('size', 1), ('getWidth', 1), ('getHeight', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('BackupUtils', 1), ('getUiAutomation', 1), ('getTargetContext', 1), ('getAccount', 1), ('getAction', 1), ('waitForCarrierPrivilegeChanged', 1), ('hasCarrierPrivileges', 1), ('getPackageManager', 1), ('getOpPackageName', 1), ('toByteArray', 1)]"	"[('CtsAccountManagerTestCases', 10), ('CtsShortcutManagerTestCases', 8), ('CtsContentTestCases', 3), ('CtsWindowManagerDeviceTestCases', 2), ('CtsDevicePolicyManagerTestCases', 2), ('CtsTextClassifierTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsTelecomTestCases', 1), ('CtsTelephonyTestCases', 1)]"	""	"android.telephony.cts.util.CarrierPrivilegeUtils"	"toByteArray"	"CtsTelephonyTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/accounts/src/android/accounts/cts/AccountManagerTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/SyncRequestTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileContactsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/SyncAdapterSettingsApp/src/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/StatsdSyncAdapter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/ProcessTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/WifiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassifierServiceSwapTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofDetectionTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/MediaUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/app/src/android/app/stubs/TestNotificationListener.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/AlwaysFocusablePipActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NoActivityRelatedPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AlertWindowsImportanceTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/shared/gen/android/app/stubs/shared/ICloseSystemDialogsTestsService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBAudioPeripheralButtonsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/BlockingBroadcastReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/BaseTelecomTestWithMockServices.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ApplicationRestrictionsIsCallerDelegateHelper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AccessSerialModern/src/android/os/cts/AccessSerialModernTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/util/CarrierPrivilegeUtils.java', 1)]"	"[('(11,CALLER,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(5,SYNCADAPTER,/com/android/server/cts/device/statsdatom/StatsdSyncAdapter.java)', 1), ('(1,CALLER,/android/os/cts/ProcessTest.java)', 1), ('(1,CALLER,/android/server/wm/lifecycle/ActivityLifecycleTests.java)', 1), ('(13,CALLER,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java)', 1), ('(1,CALLER,/com/android/cts/deviceandprofileowner/WifiTest.java)', 1), ('(1,CALLER,/android/view/textclassifier/cts/TextClassifierServiceSwapTest.java)', 1), ('(5,SYNCADAPTER,/android/content/cts/SyncRequestTest.java)', 1), ('(6,CALLER,/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofDetectionTest.java)', 1), ('(1,CALLER,/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(1,CALLER,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(1,CALLER,/android/app/stubs/TestNotificationListener.java)', 1), ('(5,CALLER,/android/server/wm/app/AlwaysFocusablePipActivity.java)', 1), ('(2,CALLER,/android/permission/cts/NoActivityRelatedPermissionTest.java)', 1), ('(3,CALLER,/android/server/wm/AlertWindowsImportanceTests.java)', 1), ('(1,CALLER,/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java)', 1), ('(3,CALLER,)', 1), ('(12,CALLER,/android/accounts/cts/AccountManagerTest.java)', 1), ('(1,KEYCODE_MEDIA_PLAY_PAUSE,/com/android/cts/verifier/audio/USBAudioPeripheralButtonsActivity.java)', 1), ('(12,CALLER,/com/android/cts/devicepolicy/ManagedProfileContactsTest.java)', 1), ('(1,CALLER,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(1,CALLER,/com/android/compatibility/common/util/BlockingBroadcastReceiver.java)', 1), ('(5,CALLER,/android/telecom/cts/BaseTelecomTestWithMockServices.java)', 1), ('(9,SYNCADAPTER,/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java)', 1), ('(2,CALLER,/com/android/cts/deviceandprofileowner/ApplicationRestrictionsIsCallerDelegateHelper.java)', 1), ('(1,CALLER,/android/os/cts/AccessSerialModernTest.java)', 1), ('(2,CALLER,/android/telephony/cts/util/CarrierPrivilegeUtils.java)', 1)]"	"[('([1:/android/accounts/cts/AccountManagerTest.java]:[CALLER]:[1]:method_text:[ @AppModeFull(reason = ""The methods requires the caller to match signature with authenticator."")   ])', 5), ('([1:/android/accounts/cts/AccountManagerTest.java]:[CALLER]:[1]:method_text:[ Or separate the authenticator and test app to allow the instant app mode test.    @AppModeFull   ])', 4), ('([7:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CALLER]:[7]:method_text:[ents(start3, end3)),                mPackageContext1.getPackageName(), idNonexistance));    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CALLER]:[2]:method_text:[d, mPackageContext1, id1,                ""SHORTCUT_INVOCATION event was not reported."");    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CALLER]:[2]:method_text:[yEvents(start, end)), packageContext.getPackageName(), id),                failureMessage);    }}])', 1), ('([5:/com/android/server/cts/device/statsdatom/StatsdSyncAdapter.java]:[SYNCADAPTER]:[5]:method_text:[              sLatch = new CountDownLatch(1);            }        }        return sLatch;    }}])', 1), (""([1:/android/os/cts/ProcessTest.java]:[CALLER]:[1]:method_text:[and any additional processes created by that app be able to kill each other's processes.     */   ])"", 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleTests.java]:[CALLER]:[1]:method_text:[tAndAssertActivityStates(state(SecondProcessCallbackTrackingActivity.class, ON_DESTROY));    }   ])', 1), ('([7:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CALLER]:[7]:method_text:[                  .selectByIds(""ms31"")                    .areAllDisabled();        });    }   ])', 1), ('([4:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CALLER]:[4]:method_text:[         list(),                    list()))                    .isEmpty();        });    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CALLER]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));    }    @CddTest(requirement=""3.8.1/C-1-2"")   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CALLER]:[1]:method_text:[AsLauncher(            mLauncherContext1, mPackageContext1.getPackageName(), ""s2"", false));    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/WifiTest.java]:[CALLER]:[1]:method_text:[        mDevicePolicyManager.removeKeyPair(ADMIN, TEST_ALIAS);        super.tearDown();    }   ])', 1), ('([1:/android/view/textclassifier/cts/TextClassifierServiceSwapTest.java]:[CALLER]:[1]:method_text:[(mRequiredServiceRule)            .around(mTestWatcher)            .around(mSafeCleanerRule);   ])', 1), ('([1:/android/content/cts/SyncRequestTest.java]:[SYNCADAPTER]:[1]:method_text:[           .setExpedited(true)                .setManual(true)                .build();    }   ])', 1), ('([1:/android/content/cts/SyncRequestTest.java]:[SYNCADAPTER]:[1]:method_text:[ ""authority1"")                .setScheduleAsExpeditedJob(true)                .build();    }   ])', 1), ('([3:/android/content/cts/SyncRequestTest.java]:[SYNCADAPTER]:[3]:method_text:[ing if scheduled as an EJ"");        } catch (IllegalArgumentException expected) {        }    }}])', 1), ('([6:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofDetectionTest.java]:[CALLER]:[6]:method_text:[e mismatch"",                () -> runWithCaller(callerContext, () -> r.run())        );    }   ])', 1), ('([1:/com/android/compatibility/common/util/MediaUtils.java]:[CALLER]:[1]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[CALLER]:[1]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([1:/android/app/stubs/TestNotificationListener.java]:[CALLER]:[1]:method_text:[ void onNotificationRankingUpdate(RankingMap rankingMap) {        mRankingMap = rankingMap;    }}])', 1), ('([5:/android/server/wm/app/AlwaysFocusablePipActivity.java]:[CALLER]:[5]:method_text:[dowingMode(WINDOWING_MODE_PINNED);        caller.startActivity(intent, options.toBundle());    }}])', 1), ('([2:/android/permission/cts/NoActivityRelatedPermissionTest.java]:[CALLER]:[2]:method_text:[= 1                && intent.getData() == null                && intent.getType() == null;    }}])', 1), ('([3:/android/server/wm/AlertWindowsImportanceTests.java]:[CALLER]:[3]:method_text:[guration.UI_MODE_TYPE_VR_HEADSET) {            return true;        }        return false;    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java]:[CALLER]:[1]:method_text:[ger.getKeyguardDisabledFeatures(                ADMIN_RECEIVER_COMPONENT)).isEqualTo(0);    }   ])', 1), ('([3:]:[CALLER]:[3]:method_text:[ide methods. */  public boolean waitUntilReady(long timeoutMs) throws android.os.RemoteException;}])', 1), ('([3:/android/accounts/cts/AccountManagerTest.java]:[CALLER]:[3]:method_text:[eak;            }        }        return result;    }    /**     * Test singleton     */   ])', 1), ('([1:/com/android/cts/verifier/audio/USBAudioPeripheralButtonsActivity.java]:[KEYCODE_MEDIA_PLAY_PAUSE]:[1]:method_text:[asBtnA = mHasBtnB = mHasBtnC = false;        showButtonsState();        calculateMatch();    }}])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileContactsTest.java]:[CALLER]:[1]:method_text:[stSet.checkIfCanFilterSelfContacts();            return null;        });    }    @FlakyTest   ])', 1), ('([11:/com/android/cts/devicepolicy/ManagedProfileContactsTest.java]:[CALLER]:[11]:method_text:[seDirectories_canNotAccessManagedDirectories"",                    mParentUserId);        }    }}])', 1), ('([1:/com/android/cts/verifier/camera/its/ItsService.java]:[CALLER]:[1]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([1:/com/android/compatibility/common/util/BlockingBroadcastReceiver.java]:[CALLER]:[1]:method_text:[    awaitForBroadcastOrFail();        } finally {            unregisterQuietly();        }    }])', 1), ('([5:/android/telecom/cts/BaseTelecomTestWithMockServices.java]:[CALLER]:[5]:method_text:[                return false;                }            }        }        return true;    }}])', 1), ('([5:/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java]:[SYNCADAPTER]:[5]:method_text:[ge.     * 3. Check restored MasterSyncAutomatically=true is the same with backup value.     */   ])', 1), ('([4:/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java]:[SYNCADAPTER]:[4]:method_text:[   Account account = accounts[i];            am.removeAccountExplicitly(account);        }    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsIsCallerDelegateHelper.java]:[CALLER]:[2]:method_text:[st {    private static final String APP_RESTRICTIONS_TARGET_PKG = ""com.android.cts.delegate"";   ])', 1), ('([1:/android/os/cts/AccessSerialModernTest.java]:[CALLER]:[1]:method_text:[etContext().getPackageName(),                android.Manifest.permission.READ_PHONE_STATE);    }}])', 1), ('([2:/android/telephony/cts/util/CarrierPrivilegeUtils.java]:[CALLER]:[2]:method_text:[         changeCarrierPrivileges(c, subId, false /* lose */, false /* isShell */);        }    }}])', 1)]"	""	""	"[('CALLER', 38), ('SYNCADAPTER', 6), ('KEYCODE_MEDIA_PLAY_PAUSE', 1)]"	"[('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest testReportShortcutUsed CtsShortcutManagerTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest testShortcutInvocationEventIsVisible CtsShortcutManagerTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest testShortcutInvocationEventIsNotVisible CtsShortcutManagerTestCases]', 1), ('[android.os.cts.ProcessTest testMiscMethods None]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testTrampolineAnotherExistingProcessNewTask CtsWindowManagerDeviceTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest testPinShortcuts CtsShortcutManagerTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest testGetShortcuts CtsShortcutManagerTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest testGetShortcutIcon CtsShortcutManagerTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest testGetShortcutIconAdaptive CtsShortcutManagerTestCases]', 1), ('[com.android.cts.deviceandprofileowner.WifiTest emptyList None]', 1), ('[android.view.textclassifier.cts.TextClassifierServiceSwapTest getTestWatcher CtsTextClassifierTestCases]', 1), ('[android.content.cts.SyncRequestTest testBuilder_normal CtsContentTestCases]', 1), ('[android.content.cts.SyncRequestTest testBuilder_scheduleAsEj CtsContentTestCases]', 1), ('[android.content.cts.SyncRequestTest testBuilder_throwsException CtsContentTestCases]', 1), ('[com.android.compatibility.common.util.MediaUtils getTestName None]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[android.app.stubs.TestNotificationListener onListenerConnected None]', 1), ('[android.permission.cts.NoActivityRelatedPermissionTest testGetTask CtsPermissionTestCases]', 1), ('[android.server.wm.AlertWindowsImportanceTests testAlertWindowOomAdj CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.deviceandprofileowner.KeyguardDisabledFeaturesTest testSetKeyguardDisabledFeatures_onParentSilentIgnoreWhenCallerIsNotOrgOwnedPO None]', 1), ('[android.accounts.cts.AccountManagerTest AccountManagerTest CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testAddAccountExplicitlyAndRemoveAccountExplicitly CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testSetAccountVisibility CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testSetAccountVisibilityForPrivilegedPackage CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testAddAccountExplicitlyWithVisibility CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testGetAccountsAndVisibilityForPackage CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testFinishSessionFromStartUpdateCredentialsSessionAccountTypeOverriden CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testFinishSessionIntervene CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testFinishSessionWithCallbackAndHandler CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testFinishSessionWithCallbackAndHandlerWithIntervene CtsAccountManagerTestCases]', 1), ('[com.android.cts.verifier.audio.USBAudioPeripheralButtonsActivity showDisableAssistantDialog None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileContactsTest testManagedContactsUris CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileContactsTest testManagedContactsPolicies CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[com.android.compatibility.common.util.BlockingBroadcastReceiver register None]', 1), ('[android.telecom.cts.BaseTelecomTestWithMockServices disableCarMode CtsTelecomTestCases]', 1), ('[android.cts.backup.syncadaptersettingsapp.SyncAdapterSettingsTest testIsSyncableIsOne_ifTurnOffSyncEnabled None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsIsCallerDelegateHelper isCallerApplicationRestrictionsManagingPackage None]', 1), ('[android.os.cts.AccessSerialModernTest testAccessSerialPermissionNeeded None]', 1), ('[android.telephony.cts.util.CarrierPrivilegeUtils PersistableBundle CtsTelephonyTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.5"	"7.1.4.5"	"C-1-4"	"7.1.4.5/C-1-4"	"07010405.670104"	"""C-1-4] MUST support OpenGL ES 3.1 or 3.2 and report it properly."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-5-1"	"7.3.1/C-5-1"	"07030100.670501"	"""C-5-1] MUST by default require an additional confirmation step (e.g. a button press)."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.6  . API Namespaces"	"3.6"	"C-1-1"	"3.6/C-1-1"	"03060000.670101"	"""C-1-1] MUST NOT be in a NDK library or a library owned by another organization as described here. If a device implementer proposes to improve one of the package namespaces above (such as by adding useful new functionality to an existing API, or adding a new API), the implementer SHOULD visit source.android.com and begin the process for contributing changes and code, according to the information on that site. Note that the restrictions above correspond to standard conventions for naming APIs in the Java programming language; this section simply aims to reinforce those conventions and make them binding through inclusion in this Compatibility Definition. <h3 id=""37_runtime_compatibility"" """	""	""	"NDK"	""	""	""	""	"[('android.app.cts.DialogTest', 17), ('android.view.cts.KeyEventInjectionTest', 4), ('android.widget.cts.ExpandableListViewBasicTest', 3), ('android.atrace.cts.AtraceHostTest', 2), ('android.widget.cts.AbsListViewTest', 2), ('android.keystore.cts.CipherTest', 2), ('android.widget.cts.ExpandableListViewWithHeadersTest', 2), ('android.text.method.cts.TextKeyListenerTest', 2), ('android.widget.cts.GridViewTest', 2), ('android.widget.cts.SearchView_CursorTest', 1), ('android.view.inputmethod.cts.InputConnectionWrapperTest', 1), ('com.android.cts.verifier.security.FingerprintBoundKeysTest', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.media.cts.NdkMediaCodec', 1), ('android.extractnativelibs.cts.CtsExtractNativeLibsHostTestBase', 1), ('com.android.cts.apicoverage.CtsReportParser', 1), ('com.android.cts.apicoverage.GTestApiReport', 1), ('android.app.cts.LauncherActivityTest', 1), ('com.android.ndkaudio.AudioPlayer', 1), ('com.android.cts.mockime.MockImeSession', 1), ('android.widget.cts.NumberPickerTest', 1), ('android.media.cts.NdkInputSurface', 1)]"	"[('printUsage', 6), ('println', 6), ('getDevice', 4), ('Create', 2), ('EventStore', 2), ('takeSnapshot', 2), ('getTitleRes', 1), ('getDescriptionRes', 1), ('setUp', 1), ('cleanUp', 1), ('createXMLReader', 1), ('close', 1), ('getCtsReport', 1), ('FilenameFilter', 1), ('toLowerCase', 1), ('getDynSymArr', 1), ('AudioPlayer', 1), ('Destroy', 1), ('RealizePlayer', 1), ('RealizeRoutingProxy', 1), ('Start', 1), ('Stop', 1), ('GetRoutingInterface', 1), ('GetLastSLResult', 1), ('ClearLastSLResult', 1), ('elapsedRealtimeNanos', 1), ('Object', 1), ('getAction', 1), ('getExtras', 1), ('takeEventSnapshot', 1), ('StringBuilder', 1), ('toString', 1), ('getCurrentInputMethodId', 1), ('getName', 1)]"	"[('CtsAppTestCases', 18), ('CtsWidgetTestCases', 11), ('CtsViewTestCases', 5), ('CtsAtraceHostTestCases', 2), ('CtsKeystoreTestCases', 2), ('CtsTextTestCases', 2), ('CtsInputMethodTestCases', 1), ('CtsExtractNativeLibsHostTestCases', 1)]"	""	"android.app.cts.DialogTest"	"getName"	"CtsAppTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/DialogTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyEventInjectionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ExpandableListViewBasicTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/atrace/src/android/atrace/cts/AtraceHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/AbsListViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ExpandableListViewWithHeadersTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/TextKeyListenerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/GridViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/FingerprintBoundKeysTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/NdkMediaCodec.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/extractnativelibs/src/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsReportParser.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/GTestApiReport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/LauncherActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/libndkaudio/src/com/android/ndkaudio/AudioPlayer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/mockime/src/com/android/cts/mockime/MockImeSession.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/NumberPickerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/NdkInputSurface.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/library/src_target/com/android/test/usesnativesharedlibrary/LoadTest.java', 1)]"	"[('(2,NDK,/android/widget/cts/SearchView_CursorTest.java)', 1), ('(2,NDK,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(4,NDK,/com/android/cts/verifier/security/FingerprintBoundKeysTest.java)', 1), ('(6,NDK,/android/view/cts/KeyEventInjectionTest.java)', 1), ('(2,NDK,/android/view/cts/ASurfaceControlTest.java)', 1), ('(7,NDK,/android/atrace/cts/AtraceHostTest.java)', 1), ('(41,NDK,/android/media/cts/NdkMediaCodec.java)', 1), ('(4,NDK,/android/widget/cts/AbsListViewTest.java)', 1), ('(1,NDK,/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestBase.java)', 1), ('(2,NDK,/android/keystore/cts/CipherTest.java)', 1), ('(2,NDK,/android/widget/cts/ExpandableListViewWithHeadersTest.java)', 1), ('(1,NDK,/com/android/cts/apicoverage/CtsReportParser.java)', 1), ('(1,NDK,/com/android/cts/apicoverage/GTestApiReport.java)', 1), ('(4,NDK,/android/app/cts/LauncherActivityTest.java)', 1), ('(1,NDK,/com/android/ndkaudio/AudioPlayer.java)', 1), ('(2,NDK,/android/text/method/cts/TextKeyListenerTest.java)', 1), ('(3,NDK,/android/widget/cts/ExpandableListViewBasicTest.java)', 1), ('(5,NDK,/com/android/cts/mockime/MockImeSession.java)', 1), ('(2,NDK,/android/widget/cts/NumberPickerTest.java)', 1), ('(4,NDK,/android/media/cts/NdkInputSurface.java)', 1), ('(12,NDK,/android/widget/cts/GridViewTest.java)', 1), ('(1,NDK,_target/com/android/test/usesnativesharedlibrary/LoadTest.java)', 1), ('(22,NDK,/android/app/cts/DialogTest.java)', 1)]"	"[('([2:/android/widget/cts/SearchView_CursorTest.java]:[NDK]:[2]:method_text:[, times(2)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }}])', 1), ('([2:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[NDK]:[2]:method_text:[ */);        verify(inputConnection, times(1)).commitContent(inputContentInfo, 0, null);    }   ])', 1), ('([4:/com/android/cts/verifier/security/FingerprintBoundKeysTest.java]:[NDK]:[4]:method_text:[etMessage(R.string.sec_fp_dialog_message);            return builder.create();        }    }}])', 1), ('([1:/android/view/cts/KeyEventInjectionTest.java]:[NDK]:[1]:method_text:[gPress(TEST_KEYCODE);    }    /**     * Long press event can be injected through ADB     */   ])', 1), ('([1:/android/view/cts/KeyEventInjectionTest.java]:[NDK]:[1]:method_text:[ess(TEST_KEYCODE);    }    /**     * Inject a regular key event through UiAutomation     */   ])', 1), ('([1:/android/view/cts/KeyEventInjectionTest.java]:[NDK]:[1]:method_text:[heckKeyPress(TEST_KEYCODE);    }    /**     * Inject a regular key event through ADB     */   ])', 1), ('([3:/android/view/cts/KeyEventInjectionTest.java]:[NDK]:[3]:method_text:[ent(KeyEvent.ACTION_UP, keyCode, 0 /* repeatCount */);        assertLongPressNotReceived();    }}])', 1), ('([2:/android/view/cts/ASurfaceControlTest.java]:[NDK]:[2]:method_text:[ +/- 10% error rate. This is based on the error    // rate allowed in the SurfaceViewSyncTests   ])', 1), ('([3:/android/atrace/cts/AtraceHostTest.java]:[NDK]:[3]:method_text:[ead.getSlices().get(1);        assertEquals(""ndk::beginEndSection"", ndkSlice.getName());    }   ])', 1), ('([4:/android/atrace/cts/AtraceHostTest.java]:[NDK]:[4]:method_text:[cBeginEndSection"", ndkSlice.getName());        assertEquals(4770, ndkSlice.getCookie());    }   ])', 1), ('([41:/android/media/cts/NdkMediaCodec.java]:[NDK]:[41]:method_text:[ toString() {        return String.format(""%s(%s, %x)"", getClass(), mName, mNdkMediaCodec);    }}])', 1), ('([2:/android/widget/cts/AbsListViewTest.java]:[NDK]:[2]:method_text:[mListView.getSelectedItemPosition());        assertTrue(mListView.shouldDrawSelector());    }   ])', 1), ('([2:/android/widget/cts/AbsListViewTest.java]:[NDK]:[2]:method_text:[oid resetIsOnScrollChangedCalled() {            mIsOnScrollChangedCalled = false;        }    }}])', 1), ('([1:/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestBase.java]:[NDK]:[1]:method_text:[IG_SUFFIX);        return installPackageIncrementalFromFiles(apkFile, v4SignatureFile, """");    }}])', 1), ('([1:/android/keystore/cts/CipherTest.java]:[NDK]:[1]:method_text:[red)) {                    assertNotNull(key);                }            }        }    }   ])', 1), ('([1:/android/keystore/cts/CipherTest.java]:[NDK]:[1]:method_text:[atch (KeyStoreException e) {                // Expected behavior            }        }    }   ])', 1), ('([1:/android/widget/cts/ExpandableListViewWithHeadersTest.java]:[NDK]:[1]:method_text:[View, null);        assertFalse(mExpandableListView.isGroupExpanded(0));    }    @LargeTest   ])', 1), ('([1:/android/widget/cts/ExpandableListViewWithHeadersTest.java]:[NDK]:[1]:method_text:[ mExpandableListView, null);        assertTrue(mExpandableListView.isGroupExpanded(0));    }   ])', 1), ('([1:/com/android/cts/apicoverage/CtsReportParser.java]:[NDK]:[1]:method_text:[            return null; // Never will happen because printUsage will call exit(1)        }    }}])', 1), ('([1:/com/android/cts/apicoverage/GTestApiReport.java]:[NDK]:[1]:method_text:[e {            return null;        }        return new GTestApiReport(testModules, bits);    }}])', 1), ('([4:/android/app/cts/LauncherActivityTest.java]:[NDK]:[4]:method_text:[    sendKeys(KeyEvent.KEYCODE_DPAD_CENTER);        assertTrue(mActivity.isOnListItemClick);    }}])', 1), ('([1:/com/android/ndkaudio/AudioPlayer.java]:[NDK]:[1]:method_text:[ proxyObj);    public native long GetLastSLResult();    public native void ClearLastSLResult();}])', 1), ('([1:/android/text/method/cts/TextKeyListenerTest.java]:[NDK]:[1]:method_text:[ else {            assertEquals("""", text);        }        textKeyListener.release();    }   ])', 1), ('([1:/android/text/method/cts/TextKeyListenerTest.java]:[NDK]:[1]:method_text:[(text, mTextView.getText().toString()); issue 1731439        textKeyListener.release();    }   ])', 1), ('([1:/android/widget/cts/ExpandableListViewBasicTest.java]:[NDK]:[1]:method_text:[id not expand"", mExpandableListView.isGroupExpanded(groupPos));        return groupPos;    }   ])', 1), ('([1:/android/widget/cts/ExpandableListViewBasicTest.java]:[NDK]:[1]:method_text:[    assertFalse(""Group did not collapse"", mExpandableListView.isGroupExpanded(groupPos));    }   ])', 1), ('([1:/android/widget/cts/ExpandableListViewBasicTest.java]:[NDK]:[1]:method_text:[as given to the inserted group"",                mExpandableListView.isGroupExpanded(0));    }   ])', 1), ('([5:/com/android/cts/mockime/MockImeSession.java]:[NDK]:[5]:method_text:[       return callCommandInternal(""verifyGetGestureDetectorOnDisplayContext"", new Bundle());    }}])', 1), ('([2:/android/widget/cts/NumberPickerTest.java]:[NDK]:[2]:method_text:[           MotionEvent.ACTION_UP, x, y, 0);        mInstrumentation.sendPointerSync(event);    }}])', 1), ('([4:/android/media/cts/NdkInputSurface.java]:[NDK]:[4]:method_text:[LDisplay = 0;        mEGLContext = 0;        mEGLSurface = 0;        mNativeWindow = 0;    }}])', 1), ('([10:/android/widget/cts/GridViewTest.java]:[NDK]:[10]:method_text:[eq(mGridView), any(View.class),                eq(NUM_COLUMNS), eq((long) NUM_COLUMNS));    }   ])', 1), ('([2:/android/widget/cts/GridViewTest.java]:[NDK]:[2]:method_text:[iew.mOnDetachCount);        assertFalse(theView.isTemporarilyDetached());    }    @LargeTest   ])', 1), ('([1:_target/com/android/test/usesnativesharedlibrary/LoadTest.java]:[NDK]:[1]:method_text:[()));    }    /**     * Tests if libs listed in unavailable.txt are all non-loadable     */   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[vent.KEYCODE_BACK);        PollingCheck.waitFor(() -> mActivity.onCancelListenerCalled);    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[  sendKeys(KeyEvent.KEYCODE_BACK);        assertFalse(mActivity.onCancelListenerCalled);    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[    PollingCheck.waitFor(() -> {            return mActivity.onCancelListenerCalled; });    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[e, defValue),                ta.getInt(R.styleable.TextAppearance_textStyle, defValue));    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[CODE_BACK);        PollingCheck.waitFor(() -> {            return d.isOnStopCalled; });    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[ sendKeys(KeyEvent.KEYCODE_ESCAPE);        PollingCheck.waitFor(() -> d.isOnStopCalled);    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[iew in dialog        assertEquals(d.getWindow().getCurrentFocus(), d.getCurrentFocus());    }   ])', 1), ('([2:/android/app/cts/DialogTest.java]:[NDK]:[2]:method_text:[ssertEquals(KeyEvent.KEYCODE_BACK, d.keyDownCode);        assertTrue(d.onKeyDownReturn);    }   ])', 1), ('([3:/android/app/cts/DialogTest.java]:[NDK]:[3]:method_text:[  * the user canceling the menu with the back/menu button, or when an item is selected).     */   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[lled should be true, see bug 1716918.        assertFalse(d.isOnContextMenuClosedCalled);    }   ])', 1), ('([2:/android/app/cts/DialogTest.java]:[NDK]:[2]:method_text:[        mScenario.onActivity(activity -> {            d.takeKeyEvents(get);        });    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[     sendKeys(KeyEvent.KEYCODE_BACK);        PollingCheck.waitFor(() -> !d.isShowing());    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[isShowing());        sendKeys(KeyEvent.KEYCODE_BACK);        assertTrue(d.isShowing());    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[   sendKeys(KeyEvent.KEYCODE_ESCAPE);        PollingCheck.waitFor(() -> !d.isShowing());    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[. Cancel the dialog.     * 2. Set a listener to be invoked when the dialog is canceled.     */   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[    * 2. set onDismissListener to null, it will not changed flag after dialog dismissed.     */   ])', 1), ('([2:/android/app/cts/DialogTest.java]:[NDK]:[2]:method_text:[       isShowContextMenuCalled = true;            return super.showContextMenu();        }    }}])', 1)]"	""	""	"[('NDK', 50)]"	"[('[android.widget.cts.SearchView_CursorTest testSuggestionEnterKey CtsWidgetTestCases]', 1), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInputConnectionWrapper CtsInputMethodTestCases]', 1), ('[com.android.cts.verifier.security.FingerprintBoundKeysTest setPassFailButtonClickListeners None]', 1), ('[android.view.cts.KeyEventInjectionTest testLongPressKeyEventInjectedViaInstrumentation CtsViewTestCases]', 1), ('[android.view.cts.KeyEventInjectionTest testLongPressKeyEventInjectedViaAdb CtsViewTestCases]', 1), ('[android.view.cts.KeyEventInjectionTest testKeyEventInjectedViaInstrumentation CtsViewTestCases]', 1), ('[android.view.cts.KeyEventInjectionTest testKeyEventInjectedViaAdb CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_apply CtsViewTestCases]', 1), ('[android.atrace.cts.AtraceHostTest testBeginEndSection CtsAtraceHostTestCases]', 1), ('[android.atrace.cts.AtraceHostTest testAsyncBeginEndSection CtsAtraceHostTestCases]', 1), ('[android.media.cts.NdkMediaCodec AMediaCodecCreatePersistentInputSurface None]', 1), ('[android.widget.cts.AbsListViewTest testSelectorOnScreen CtsWidgetTestCases]', 1), ('[android.widget.cts.AbsListViewTest testEnterKey CtsWidgetTestCases]', 1), ('[android.extractnativelibs.cts.CtsExtractNativeLibsHostTestBase isIncrementalInstallSupported CtsExtractNativeLibsHostTestCases]', 1), ('[android.keystore.cts.CipherTest testCanCreateAuthBoundKeyWhenScreenLocked CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testCannotCreateAuthBoundKeyWhenDevicePinNotSet CtsKeystoreTestCases]', 1), ('[android.widget.cts.ExpandableListViewWithHeadersTest testExpandOnFirstPosition CtsWidgetTestCases]', 1), ('[android.widget.cts.ExpandableListViewWithHeadersTest testExpandOnFirstGroup CtsWidgetTestCases]', 1), ('[com.android.cts.apicoverage.CtsReportParser getTestPackageList None]', 1), ('[com.android.cts.apicoverage.GTestApiReport getTestModules None]', 1), ('[android.app.cts.LauncherActivityTest testLaunchActivity CtsAppTestCases]', 1), ('[android.text.method.cts.TextKeyListenerTest testPressKey CtsTextTestCases]', 1), ('[android.text.method.cts.TextKeyListenerTest testOnKeyOther CtsTextTestCases]', 1), ('[android.widget.cts.ExpandableListViewBasicTest testPreconditions CtsWidgetTestCases]', 1), ('[android.widget.cts.ExpandableListViewBasicTest testCollapseGroup CtsWidgetTestCases]', 1), ('[android.widget.cts.ExpandableListViewBasicTest testExpandedGroupMovement CtsWidgetTestCases]', 1), ('[com.android.cts.mockime.MockImeSession getCurrentInputMethodIdForTesting None]', 1), ('[android.widget.cts.NumberPickerTest testEnterKey CtsWidgetTestCases]', 1), ('[android.media.cts.NdkInputSurface eglGetDisplay None]', 1), ('[android.widget.cts.GridViewTest testPressKey CtsWidgetTestCases]', 1), ('[android.widget.cts.GridViewTest testFullyDetachUnusedViewOnScrollForFocus CtsWidgetTestCases]', 1), ('[android.app.cts.DialogTest testConstructor_protectedCancellable CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testConstructor_protectedNotCancellable CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testConstructor_protectedCancellableEsc CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testConstructor_protectedNotCancellableEsc CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testOnStartCreateStop CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testOnStartCreateStopEsc CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testGetCurrentFocus CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testOnKeyDownKeyUp CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testDispatchKeyEvent CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testContextMenu CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testTakeKeyEvents CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetCancellable_true CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetCancellable_false CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetCancellableEsc_true CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetCancellableEsc_false CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetCancelMessage CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetDismissMessage CtsAppTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.2"	"3.9.2"	"C-2-1"	"3.9.2/C-2-1"	"03090200.670201"	"""C-2-1] MUST support the ability to specify a separate lock screen meeting the following requirements to grant access to apps running in a managed profile only. Device implementations MUST honor the DevicePolicyManager.ACTION_SET_NEW_PASSWORD intent and show an interface to configure a separate lock screen credential for the managed profile. The lock screen credentials of the managed profile MUST use the same credential storage and management mechanisms as the parent profile, as documented on the Android Open Source Project Site. The DPC password policies MUST apply to only the managed profile&#39;s lock screen credentials unless called upon the DevicePolicyManager instance returned by getParentProfileInstance. When contacts from the managed profile are displayed in the preinstalled call log, in-call UI, in-progress and missed-call notifications, contacts and messaging apps they SHOULD be badged with the same badge used to indicate managed profile applications. <h4 id=""393_managed_user_support"" """	""	""	"DPC DevicePolicyManager.ACTION ACTION_SET_NEW_PASSWORD"	""	""	""	""	"[('library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest', 61), ('com.android.cts.verifier.managedprovisioning.Utils', 2), ('com.android.cts.deviceandprofileowner.SuspendPackageTest', 2), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 2), ('com.android.cts.verifier.security.LockConfirmBypassTest', 2), ('com.android.cts.verifier.managedprovisioning.ByodHelperActivity', 2), ('com.android.cts.verifier.security.SetNewPasswordComplexityTest', 2), ('com.android.cts.deviceowner.PreDeviceOwnerTest', 2), ('com.android.cts.verifier.security.CAInstallNotificationVerifierActivity', 2), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerHostSideTransferTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('processor.main.java.com.android.bedstead.remotedpc.processor.Processor', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.verifier.admin.ScreenLockTestActivity', 1), ('com.android.cts.verifier.admin.DeviceAdminUninstallTestActivity', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi30', 1), ('com.android.cts.transferowner.TransferProfileOwnerOutgoingTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1), ('com.android.cts.comp.provisioning.ManagedProfileProvisioningTest', 1)]"	"[('users', 36), ('devicePolicy', 34), ('createUser', 18), ('createAndStart', 18), ('userHandle', 16), ('remove', 13), ('getDeviceOwner', 12), ('getDevice', 9), ('devicePolicyController', 8), ('build', 6), ('show', 6), ('setUp', 5), ('any', 5), ('getPackageManager', 4), ('createPublicVersionNotification', 4), ('tearDown', 4), ('getSimpleName', 3), ('getName', 3), ('deviceOwner', 3), ('profileOwner', 3), ('devicePolicyManager', 3), ('BigTextStyle', 2), ('TvExtender', 2), ('getMainLooper', 2), ('Bundle', 2), ('getIntent', 2), ('getAction', 2), ('Intent', 2), ('getBuild', 2), ('CAInstallNotificationVerifierActivity', 2), ('getApplicationContext', 2), ('getAssets', 2), ('getSupportedSourceVersion', 1), ('BroadcastReceiver', 1), ('getData', 1), ('getSchemeSpecificPart', 1), ('onAdminPackageInstalled', 1), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1), ('DeviceState', 1), ('deviceOwner_noDeviceOwner_returnsNull', 1), ('deviceOwner_nonRemoteDpcDeviceOwner_returnsNull', 1), ('deviceOwner_remoteDpcDeviceOwner_returnsInstance', 1), ('profileOwner_noProfileOwner_returnsNull', 1), ('profileOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userHandle_null_throwsException', 1), ('profileOwner_userHandle_noProfileOwner_returnsNull', 1), ('profileOwner_userHandle_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userHandle_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userReference_null_throwsException', 1), ('profileOwner_userReference_noProfileOwner_returnsNull', 1), ('profileOwner_userReference_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userReference_remoteDpcProfileOwner_returnsInstance', 1), ('any_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userHandle_null_throwsException', 1), ('any_userHandle_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userHandle_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userHandle_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userReference_null_throwsException', 1), ('any_userReference_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userReference_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userReference_remoteDpcProfileOwner_returnsProfileOwner', 1), ('setAsDeviceOwner_userHandle_null_throwsException', 1), ('setAsDeviceOwner_userHandle_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userHandle_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userHandle_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsDeviceOwner_userReference_null_throwsException', 1), ('setAsDeviceOwner_userReference_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userReference_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userReference_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsProfileOwner_userHandle_null_throwsException', 1), ('setAsProfileOwner_userHandle_alreadySet_doesNothing', 1), ('setAsProfileOwner_userHandle_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userHandle_doesNotHaveProfileOwner_setsProfileOwner', 1), ('setAsProfileOwner_userReference_null_throwsException', 1), ('setAsProfileOwner_userReference_alreadySet_doesNothing', 1), ('setAsProfileOwner_userReference_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userReference_doesNotHaveProfileOwner_setsProfileOwner', 1), ('devicePolicyController_returnsDevicePolicyController', 1), ('remove_deviceOwner_removes', 1), ('remove_profileOwner_removes', 1), ('frameworkCall_makesCall', 1), ('getCurrentFailedPasswordAttempts', 1), ('frameworkCall_onProfile_makesCall', 1), ('frameworkCallRequiresProfileOwner_notProfileOwner_throwsSecurityException', 1), ('forDevicePolicyController_nullDevicePolicyController_throwsException', 1), ('forDevicePolicyController_nonRemoteDpcDevicePolicyController_throwsException', 1), ('forDevicePolicyController_remoteDpcDevicePolicyController_returnsRemoteDpc', 1)]"	"[('CtsDevicePolicyManagerTestCases', 4), ('CtsDevicePolicyTestCases', 2), ('CtsMediaParserTestCases', 1), ('CtsTvTestCases', 1)]"	""	"library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest"	"devicePolicyController"	""	"[('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java', 61), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/Utils.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/LockConfirmBypassTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/SetNewPasswordComplexityTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/CAInstallNotificationVerifierActivity.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/admin/ScreenLockTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/admin/DeviceAdminUninstallTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TransferOwnerOutgoingApp/src/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 1)]"	"[('(2,DPC,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(4,DPC,/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java)', 1), ('(2,DPC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(3,DevicePolicyManager.ACTION,/com/android/cts/verifier/managedprovisioning/Utils.java)', 1), ('(2,ACTION_SET_NEW_PASSWORD,/com/android/cts/verifier/managedprovisioning/Utils.java)', 1), ('(4,DPC,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(4,DPC,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(2,DPC,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(2,DevicePolicyManager.ACTION,/com/android/cts/verifier/security/LockConfirmBypassTest.java)', 1), ('(2,ACTION_SET_NEW_PASSWORD,/com/android/cts/verifier/security/LockConfirmBypassTest.java)', 1), ('(19,DPC,/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java)', 1), ('(2,DPC,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(1,DevicePolicyManager.ACTION,/com/android/cts/verifier/admin/ScreenLockTestActivity.java)', 1), ('(1,DevicePolicyManager.ACTION,/com/android/cts/verifier/admin/DeviceAdminUninstallTestActivity.java)', 1), ('(3,DevicePolicyManager.ACTION,/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java)', 1), ('(2,ACTION_SET_NEW_PASSWORD,/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java)', 1), ('(4,DevicePolicyManager.ACTION,/com/android/cts/verifier/security/SetNewPasswordComplexityTest.java)', 1), ('(4,ACTION_SET_NEW_PASSWORD,/com/android/cts/verifier/security/SetNewPasswordComplexityTest.java)', 1), ('(2,DPC,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(2,DevicePolicyManager.ACTION,/com/android/cts/deviceowner/PreDeviceOwnerTest.java)', 1), ('(1,DPC,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(4,DPC,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(1,DevicePolicyManager.ACTION,/com/android/cts/verifier/security/CAInstallNotificationVerifierActivity.java)', 1), ('(1,ACTION_SET_NEW_PASSWORD,/com/android/cts/verifier/security/CAInstallNotificationVerifierActivity.java)', 1), ('(27,DPC,/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java)', 1), ('(1,DevicePolicyManager.ACTION,/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(1,DevicePolicyManager.ACTION,/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java)', 1), ('(179,DPC,/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java)', 1)]"	"[('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[);        } finally {            remoteDPC.devicePolicyController().remove();        }    }   ])', 4), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 2), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[        } finally {            deviceOwner.devicePolicyController().remove();        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[    } finally {            sTestApis.devicePolicy().getDeviceOwner().remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[PC.devicePolicyController());        } finally {            profile.remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);    }}])', 1), ('([4:/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java]:[DPC]:[4]:method_text:[NCOMING_TEST);            installAppAsUser(TRANSFER_OWNER_INCOMING_APK, mUserId);        }    }}])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {        testAssetExtraction(""wav/sample_ima_adpcm.wav"");    }   ])', 1), ('([3:/com/android/cts/verifier/managedprovisioning/Utils.java]:[DevicePolicyManager.ACTION]:[3]:method_text:[ckageManager().hasSystemFeature(                PackageManager.FEATURE_SECURE_LOCK_SCREEN);    }}])', 1), ('([2:/com/android/cts/verifier/managedprovisioning/Utils.java]:[ACTION_SET_NEW_PASSWORD]:[2]:method_text:[ckageManager().hasSystemFeature(                PackageManager.FEATURE_SECURE_LOCK_SCREEN);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[1]:method_text:[RECEIVER_PKG);    }    /**     * Verify that we cannot suspend launcher and dpc app.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[3]:method_text:[);        assertWithMessage(""package %s suspension"", pkg).that(actual).isEqualTo(expected);    }}])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[provider that provides enterprise slice cannot     * see the enterprise slice requests.     */   ])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[()), offerCallback);        offerCallback.assertNoCallback();        return offerCallback;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases. * */public class ResetPasswordTest extends BaseDeviceAdminTest {   ])', 1), ('([2:/com/android/cts/verifier/security/LockConfirmBypassTest.java]:[DevicePolicyManager.ACTION]:[2]:method_text:[tials"", false);                startActivity(setPasswordIntent);            }        });    }}])', 1), ('([2:/com/android/cts/verifier/security/LockConfirmBypassTest.java]:[ACTION_SET_NEW_PASSWORD]:[2]:method_text:[tials"", false);                startActivity(setPasswordIntent);            }        });    }}])', 1), ('([19:/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java]:[DPC]:[19]:method_text:[getMessager()                .printMessage(Diagnostic.Kind.ERROR, errorText, errorElement);    }}])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[e(ComponentName, String)} */public class CertInstallDelegateTest extends BaseJUnit3TestCase {   ])', 1), ('([1:/com/android/cts/verifier/admin/ScreenLockTestActivity.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[                      .show();                }            }, LOCK_CHECK_DELAY);        }    }}])', 1), ('([1:/com/android/cts/verifier/admin/DeviceAdminUninstallTestActivity.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[;        mUninstallStatus.invalidate();        getPassButton().setEnabled(mAdminRemoved);    }}])', 1), ('([3:/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java]:[DevicePolicyManager.ACTION]:[3]:method_text:[ge = getString(messageId);        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();    }}])', 1), ('([2:/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java]:[ACTION_SET_NEW_PASSWORD]:[2]:method_text:[ge = getString(messageId);        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();    }}])', 1), ('([4:/com/android/cts/verifier/security/SetNewPasswordComplexityTest.java]:[DevicePolicyManager.ACTION]:[4]:method_text:[evicePolicyManager.PASSWORD_COMPLEXITY_NONE);            startActivity(intent);        });    }}])', 1), ('([4:/com/android/cts/verifier/security/SetNewPasswordComplexityTest.java]:[ACTION_SET_NEW_PASSWORD]:[4]:method_text:[evicePolicyManager.PASSWORD_COMPLEXITY_NONE);            startActivity(intent);        });    }}])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[DPC]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[            .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_DEVICE));    }   ])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[           .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[DPC]:[1]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([4:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[DPC]:[4]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 1), ('([1:/com/android/cts/verifier/security/CAInstallNotificationVerifierActivity.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[) {                return;            }            super.performTest(activity);        }    }}])', 1), ('([1:/com/android/cts/verifier/security/CAInstallNotificationVerifierActivity.java]:[ACTION_SET_NEW_PASSWORD]:[1]:method_text:[) {                return;            }            super.performTest(activity);        }    }}])', 1), ('([27:/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java]:[DPC]:[27]:method_text:[min void addPersistentPreferredActivity(            IntentFilter filter, ComponentName activity);}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java]:[DPC]:[1]:method_text:[ws Exception {        runDeviceTestsAsUser(DEVICE_ADMIN_PKG, className, testName, mUserId);    }}])', 1), ('([1:/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[r.setUp();        setupTestParameters(DevicePolicyManager.ACTION_PROFILE_OWNER_CHANGED);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[DPC]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[tends AndroidTestCase {    private static final String TAG = ""ManagedProfileProvisioningTest"";   ])', 1), ('([7:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[7]:method_text:[s    public static void teardownClass() {        sNonRemoteDpcTestApp.uninstall(sUser);    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Owner_noDeviceOwner_returnsNull() {        assertThat(RemoteDpc.deviceOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.deviceOwner()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.profileOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[rofileOwner()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.profileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[e.userHandle())).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[nterException.class,                () -> RemoteDpc.profileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[oDeviceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[moteDpc.any()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[emoteDpc.any()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[        assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser.userHandle())).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.userHandle())).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[())).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[     assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser)).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[teDpc.any(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Dpc.any(sUser)).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[le)).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[terException.class,                () -> RemoteDpc.setAsDeviceOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ption.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Exception.class,                () -> RemoteDpc.setAsDeviceOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[on.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[erException.class,                () -> RemoteDpc.setAsProfileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[tion.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[xception.class,                () -> RemoteDpc.setAsProfileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[n.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[Policy().getDeviceOwner());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[oteDPC.remove();        assertThat(sTestApis.devicePolicy().getDeviceOwner()).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[eed to support the case where there is both a DO and a PO on    //  older versions of Android?   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[ntFailedPasswordAttempts();        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[ succeeds            remoteDPC.devicePolicyManager().isUsingUnifiedPassword();        }    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[.isUsingUnifiedPassword());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.forDevicePolicyController(null));    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Controller(deviceOwner));        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([8:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[8]:method_text:[                 .isNotNull();        } finally {            remoteDPC.remove();        }    }])', 1)]"	""	""	"[('DPC', 77), ('DevicePolicyManager.ACTION', 11), ('ACTION_SET_NEW_PASSWORD', 5)]"	"[('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNull None]', 19), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNotNull None]', 15), ('[com.android.cts.verifier.security.LockConfirmBypassTest setPassFailButtonClickListeners None]', 2), ('[com.android.cts.verifier.managedprovisioning.ByodHelperActivity isProfileOwner None]', 2), ('[com.android.cts.verifier.security.SetNewPasswordComplexityTest setPassFailButtonClickListeners None]', 2), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isUsingUnifiedPassword None]', 2), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testWavWithImaAdpcm CtsMediaParserTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSetPackagesNotSuspended None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSuspendNotSuspendablePackages None]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_enableService_issueRequest CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_disableService_noIssueRequest CtsDevicePolicyTestCases]', 1), ('[processor.main.java.com.android.bedstead.remotedpc.processor.Processor latest None]', 1), ('[com.android.cts.verifier.admin.ScreenLockTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.admin.DeviceAdminUninstallTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceowner.PreDeviceOwnerTest testIsProvisioningAllowedFalse None]', 1), ('[com.android.cts.deviceowner.PreDeviceOwnerTest testIsProvisioningNotAllowedForManagedProfileAction None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testRevokeKeyPairFromApp_keyNotUsable None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtsc3FrontendSettings CtsTvTestCases]', 1), ('[communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager isUsingUnifiedPassword None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest TestApis None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userReference_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userReference_nonExistingUser_throwsException None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-8"	"9.8/H-1-8"	"09080000.720108"	"""[9.8/H-1-8] MUST only allow transmission of data out of the hotword detection service on a hotword validation request from the system server. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Application Data Migration"	"9.1"	"C-1-4"	"9.1/C-1-4"	"09010000.670104"	"""C-1-4] MUST implement each stage of verification to check the integrity and authenticity of all the bytes in the next stage before executing the code in the next stage. | C-1-4] MUST support key attestation where the attestation signing key is protected by secure hardware and signing is performed in secure hardware. The attestation signing keys MUST be shared across large enough number of devices to prevent the keys from being used as device identifiers. One way of meeting this requirement is to share the same attestation key unless at least 100,000 units of a given SKU are produced. If more than 100,000 units of an SKU are produced, a different key MAY be used for each 100,000 units. Note that if a device implementation is already launched on an earlier Android version, such a device is exempted from the requirement to have a keystore backed by an isolated execution environment and support the key attestation, unless it declares the android.hardware.fingerprint feature which requires a keystore backed by an isolated execution environment. | C-1-4] MUST only migrate application data to the same application on the target device, with the same package name AND signing certificate."""	""	""	"SKU android.hardware.fingerprint"	""	""	""	""	"[('android.os.cts.BuildTest', 2), ('com.android.cts.verifier.security.FingerprintBoundKeysTest', 1), ('com.android.cts.verifier.managedprovisioning.LockTaskUiTestActivity', 1), ('android.hardware.fingerprint.cts.FingerprintManagerTest', 1), ('com.android.cts.deviceandprofileowner.LockTaskUtilityActivity', 1), ('com.android.cts.verifier.managedprovisioning.AuthenticationBoundKeyTestActivity', 1), ('android.server.biometrics.fingerprint.FingerprintServiceTest', 1), ('com.android.cts.verifier.managedprovisioning.DeviceAdminTestReceiver', 1), ('com.android.cts.verifier.managedprovisioning.DeviceOwnerPositiveTestActivity', 1), ('com.android.server.cts.FingerprintIncidentTest', 1), ('android.server.biometrics.fingerprint.AuthOnCreateActivity', 1), ('android.server.biometrics.fingerprint.FingerprintCallbackHelper', 1), ('com.android.cts.verifier.managedprovisioning.KeyguardDisabledFeaturesActivity', 1), ('android.accessibilityservice.cts.AccessibilityFingerprintGestureTest', 1), ('com.android.cts.verifier.managedprovisioning.DisallowAppsControlActivity', 1)]"	"[('updateJournal', 6), ('getContext', 5), ('setUp', 4), ('getIntent', 4), ('getReceiverComponentName', 3), ('onAuthenticationFailed', 2), ('getPackageManager', 2), ('onDestroy', 2), ('onResume', 2), ('onPause', 2), ('getInstrumentation', 2), ('getAction', 2), ('myUserId', 2), ('getName', 2), ('CancellationSignal', 2), ('State', 2), ('toBundle', 2), ('getTitleRes', 1), ('getDescriptionRes', 1), ('getSimpleName', 1), ('AuthenticationCallback', 1), ('Object', 1), ('notify', 1), ('startLockTask', 1), ('stopLockTask', 1), ('getSensorStates', 1), ('clear', 1), ('getUiAutomation', 1), ('onReceive', 1), ('tearDown', 1), ('getPackageName', 1), ('Bundle', 1), ('AccessibilityDumpOnFailureRule', 1), ('getService', 1), ('getFingerprintGestureController', 1)]"	"[('CtsBiometricsTestCases', 2), ('CtsHardwareTestCases', 1), ('CtsIncidentHostTestCases', 1), ('CtsAccessibilityServiceTestCases', 1)]"	""	"android.os.cts.BuildTest"	"getFingerprintGestureController"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/BuildTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/FingerprintBoundKeysTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/LockTaskUiTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/fingerprint/cts/FingerprintManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/LockTaskUtilityActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/AuthenticationBoundKeyTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/fingerprint/FingerprintServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/DeviceAdminTestReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/FingerprintIncidentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/apps/fingerprint/src/android/server/biometrics/fingerprint/AuthOnCreateActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/fingerprint/FingerprintCallbackHelper.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/KeyguardDisabledFeaturesActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/DisallowAppsControlActivity.java', 1)]"	"[('(1,android.hardware.fingerprint,/com/android/cts/verifier/security/FingerprintBoundKeysTest.java)', 1), ('(4,SKU,/com/android/cts/verifier/managedprovisioning/LockTaskUiTestActivity.java)', 1), ('(4,android.hardware.fingerprint,/android/hardware/fingerprint/cts/FingerprintManagerTest.java)', 1), ('(2,SKU,/com/android/cts/deviceandprofileowner/LockTaskUtilityActivity.java)', 1), ('(1,android.hardware.fingerprint,/com/android/cts/verifier/managedprovisioning/AuthenticationBoundKeyTestActivity.java)', 1), ('(1,android.hardware.fingerprint,/android/server/biometrics/fingerprint/FingerprintServiceTest.java)', 1), ('(2,SKU,/com/android/cts/verifier/managedprovisioning/DeviceAdminTestReceiver.java)', 1), ('(5,SKU,/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java)', 1), ('(2,android.hardware.fingerprint,/com/android/server/cts/FingerprintIncidentTest.java)', 1), ('(1,android.hardware.fingerprint,/android/server/biometrics/fingerprint/AuthOnCreateActivity.java)', 1), ('(1,android.hardware.fingerprint,/android/server/biometrics/fingerprint/FingerprintCallbackHelper.java)', 1), ('(1,android.hardware.fingerprint,/com/android/cts/verifier/managedprovisioning/KeyguardDisabledFeaturesActivity.java)', 1), ('(1,android.hardware.fingerprint,/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java)', 1), ('(1,android.hardware.fingerprint,/com/android/cts/verifier/managedprovisioning/DisallowAppsControlActivity.java)', 1), ('(5,SKU,/android/os/cts/BuildTest.java)', 1)]"	"[('([1:/com/android/cts/verifier/security/FingerprintBoundKeysTest.java]:[android.hardware.fingerprint]:[1]:method_text:[etMessage(R.string.sec_fp_dialog_message);            return builder.create();        }    }}])', 1), ('([4:/com/android/cts/verifier/managedprovisioning/LockTaskUiTestActivity.java]:[SKU]:[4]:method_text:[de    public String getTestId() {        return getIntent().getStringExtra(EXTRA_TEST_ID);    }}])', 1), ('([4:/android/hardware/fingerprint/cts/FingerprintManagerTest.java]:[android.hardware.fingerprint]:[4]:method_text:[     getContext().getSystemService(Context.FINGERPRINT_SERVICE);        }    }    @Presubmit   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/LockTaskUtilityActivity.java]:[SKU]:[2]:method_text:[));        intent.setFlags(Intent.FLAG_RECEIVER_FOREGROUND);        sendBroadcast(intent);    }}])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/AuthenticationBoundKeyTestActivity.java]:[android.hardware.fingerprint]:[1]:method_text:[setMessage(R.string.sec_fp_dialog_message);            return builder.create();        }    }}])', 1), ('([1:/android/server/biometrics/fingerprint/FingerprintServiceTest.java]:[android.hardware.fingerprint]:[1]:method_text:[   }        }        mInstrumentation.getUiAutomation().dropShellPermissionIdentity();    }   ])', 1), ('([2:/com/android/cts/verifier/managedprovisioning/DeviceAdminTestReceiver.java]:[SKU]:[2]:method_text:[verride        public IBinder onBind(Intent intent) {            return mBinder;        }    }}])', 1), ('([5:/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java]:[SKU]:[5]:method_text:[vicePolicyManager.class);        return dpm != null && dpm.canUsbDataSignalingBeDisabled();    }}])', 1), ('([2:/com/android/server/cts/FingerprintIncidentTest.java]:[android.hardware.fingerprint]:[2]:method_text:[e.fingerprint is not supported."");            return false;        }        return true;    }}])', 1), ('([1:/android/server/biometrics/fingerprint/AuthOnCreateActivity.java]:[android.hardware.fingerprint]:[1]:method_text:[(), 0 /* flags */,                new FingerprintCallbackHelper(this), null /* handler */);    }}])', 1), ('([1:/android/server/biometrics/fingerprint/FingerprintCallbackHelper.java]:[android.hardware.fingerprint]:[1]:method_text:[er.putExtras(mActivity,                bundle -> bundle.putBundle(KEY, mState.toBundle()));    }}])', 1), (""([1:/com/android/cts/verifier/managedprovisioning/KeyguardDisabledFeaturesActivity.java]:[android.hardware.fingerprint]:[1]:method_text:[      // User shouldn't run this test before work profile is set up.            }        }    }}])"", 1), ('([1:/android/accessibilityservice/cts/AccessibilityFingerprintGestureTest.java]:[android.hardware.fingerprint]:[1]:method_text:[ontroller =                mFingerprintGestureService.getFingerprintGestureController();    }   ])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/DisallowAppsControlActivity.java]:[android.hardware.fingerprint]:[1]:method_text:[eckDisabledForceStopTest(adapter);        setupCheckDisabledAppStorageButtonsTest(adapter);    }}])', 1), ('([1:/android/os/cts/BuildTest.java]:[SKU]:[1]:method_text:[ile(""^([0-9A-Za-z._-]+)$"");    /** Tests that check for valid values of constants in Build. */   ])', 1), ('([4:/android/os/cts/BuildTest.java]:[SKU]:[4]:method_text:[     * Verify that SDK versions are bounded by both high and low expected     * values.     */   ])', 1)]"	""	""	"[('android.hardware.fingerprint', 10), ('SKU', 6)]"	"[('[com.android.cts.verifier.security.FingerprintBoundKeysTest setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.managedprovisioning.LockTaskUiTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.deviceandprofileowner.LockTaskUtilityActivity finish None]', 1), ('[com.android.cts.verifier.managedprovisioning.AuthenticationBoundKeyTestActivity AuthenticationBoundKeyTestActivity None]', 1), ('[android.server.biometrics.fingerprint.FingerprintServiceTest adoptShellPermissionIdentity CtsBiometricsTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.DeviceAdminTestReceiver isHeadlessSystemUserMode None]', 1), ('[com.android.cts.verifier.managedprovisioning.DeviceOwnerPositiveTestActivity finish None]', 1), ('[com.android.server.cts.FingerprintIncidentTest testFingerprintServiceDump CtsIncidentHostTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.KeyguardDisabledFeaturesActivity KeyguardDisabledFeaturesActivity None]', 1), ('[com.android.cts.verifier.managedprovisioning.DisallowAppsControlActivity DisallowAppsControlActivity None]', 1), ('[android.os.cts.BuildTest testCpuAbi_valuesMatchPermitted None]', 1), ('[android.os.cts.BuildTest testBuildConstants None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-1-3"	"8.2/H-1-3"	"08020000.720103"	"""[8.2/H-1-3] MUST ensure a sequential read performance of at least 200 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.9.1.2"	"3.9.1.2"	"C-1-3"	"3.9.1.2/C-1-3"	"03090102.670103"	"""C-1-3] MUST provide the following user affordances within the Settings to indicate to the user when a particular system function has been disabled by the Device Policy Controller (DPC): A consistent icon or other user affordance (for example the upstream AOSP info icon) to represent when a particular setting is restricted by a Device Admin. A short explanation message, as provided by the Device Admin via the setShortSupportMessage. The DPC application’s icon."""	""	""	"DPC"	""	""	""	""	"[('library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest', 61), ('com.android.cts.deviceandprofileowner.SuspendPackageTest', 2), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 2), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerHostSideTransferTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('processor.main.java.com.android.bedstead.remotedpc.processor.Processor', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi30', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1)]"	"[('users', 36), ('devicePolicy', 34), ('createUser', 18), ('createAndStart', 18), ('userHandle', 16), ('remove', 13), ('getDeviceOwner', 12), ('getDevice', 9), ('devicePolicyController', 8), ('any', 5), ('tearDown', 4), ('setUp', 3), ('deviceOwner', 3), ('profileOwner', 3), ('devicePolicyManager', 3), ('getBuild', 2), ('getSupportedSourceVersion', 1), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1), ('getName', 1), ('DeviceState', 1), ('deviceOwner_noDeviceOwner_returnsNull', 1), ('deviceOwner_nonRemoteDpcDeviceOwner_returnsNull', 1), ('deviceOwner_remoteDpcDeviceOwner_returnsInstance', 1), ('profileOwner_noProfileOwner_returnsNull', 1), ('profileOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userHandle_null_throwsException', 1), ('profileOwner_userHandle_noProfileOwner_returnsNull', 1), ('profileOwner_userHandle_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userHandle_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userReference_null_throwsException', 1), ('profileOwner_userReference_noProfileOwner_returnsNull', 1), ('profileOwner_userReference_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userReference_remoteDpcProfileOwner_returnsInstance', 1), ('any_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userHandle_null_throwsException', 1), ('any_userHandle_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userHandle_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userHandle_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userReference_null_throwsException', 1), ('any_userReference_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userReference_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userReference_remoteDpcProfileOwner_returnsProfileOwner', 1), ('setAsDeviceOwner_userHandle_null_throwsException', 1), ('setAsDeviceOwner_userHandle_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userHandle_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userHandle_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsDeviceOwner_userReference_null_throwsException', 1), ('setAsDeviceOwner_userReference_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userReference_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userReference_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsProfileOwner_userHandle_null_throwsException', 1), ('setAsProfileOwner_userHandle_alreadySet_doesNothing', 1), ('setAsProfileOwner_userHandle_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userHandle_doesNotHaveProfileOwner_setsProfileOwner', 1), ('setAsProfileOwner_userReference_null_throwsException', 1), ('setAsProfileOwner_userReference_alreadySet_doesNothing', 1), ('setAsProfileOwner_userReference_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userReference_doesNotHaveProfileOwner_setsProfileOwner', 1), ('devicePolicyController_returnsDevicePolicyController', 1), ('remove_deviceOwner_removes', 1), ('remove_profileOwner_removes', 1), ('frameworkCall_makesCall', 1), ('getCurrentFailedPasswordAttempts', 1), ('frameworkCall_onProfile_makesCall', 1), ('frameworkCallRequiresProfileOwner_notProfileOwner_throwsSecurityException', 1), ('forDevicePolicyController_nullDevicePolicyController_throwsException', 1), ('forDevicePolicyController_nonRemoteDpcDevicePolicyController_throwsException', 1), ('forDevicePolicyController_remoteDpcDevicePolicyController_returnsRemoteDpc', 1)]"	"[('CtsDevicePolicyManagerTestCases', 4), ('CtsDevicePolicyTestCases', 2), ('CtsMediaParserTestCases', 1), ('CtsTvTestCases', 1)]"	""	"library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest"	"devicePolicyController"	""	"[('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java', 61), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1)]"	"[('(2,DPC,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(4,DPC,/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java)', 1), ('(2,DPC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(4,DPC,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(4,DPC,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(2,DPC,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(19,DPC,/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java)', 1), ('(2,DPC,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(2,DPC,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,DPC,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(4,DPC,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(27,DPC,/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(179,DPC,/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java)', 1)]"	"[('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[);        } finally {            remoteDPC.devicePolicyController().remove();        }    }   ])', 4), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 2), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[        } finally {            deviceOwner.devicePolicyController().remove();        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[    } finally {            sTestApis.devicePolicy().getDeviceOwner().remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[PC.devicePolicyController());        } finally {            profile.remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);    }}])', 1), ('([4:/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java]:[DPC]:[4]:method_text:[NCOMING_TEST);            installAppAsUser(TRANSFER_OWNER_INCOMING_APK, mUserId);        }    }}])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {        testAssetExtraction(""wav/sample_ima_adpcm.wav"");    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[1]:method_text:[RECEIVER_PKG);    }    /**     * Verify that we cannot suspend launcher and dpc app.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[3]:method_text:[);        assertWithMessage(""package %s suspension"", pkg).that(actual).isEqualTo(expected);    }}])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[provider that provides enterprise slice cannot     * see the enterprise slice requests.     */   ])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[()), offerCallback);        offerCallback.assertNoCallback();        return offerCallback;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases. * */public class ResetPasswordTest extends BaseDeviceAdminTest {   ])', 1), ('([19:/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java]:[DPC]:[19]:method_text:[getMessager()                .printMessage(Diagnostic.Kind.ERROR, errorText, errorElement);    }}])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[e(ComponentName, String)} */public class CertInstallDelegateTest extends BaseJUnit3TestCase {   ])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[DPC]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[DPC]:[1]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([4:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[DPC]:[4]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 1), ('([27:/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java]:[DPC]:[27]:method_text:[min void addPersistentPreferredActivity(            IntentFilter filter, ComponentName activity);}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java]:[DPC]:[1]:method_text:[ws Exception {        runDeviceTestsAsUser(DEVICE_ADMIN_PKG, className, testName, mUserId);    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[DPC]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([7:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[7]:method_text:[s    public static void teardownClass() {        sNonRemoteDpcTestApp.uninstall(sUser);    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Owner_noDeviceOwner_returnsNull() {        assertThat(RemoteDpc.deviceOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.deviceOwner()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.profileOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[rofileOwner()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.profileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[e.userHandle())).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[nterException.class,                () -> RemoteDpc.profileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[oDeviceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[moteDpc.any()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[emoteDpc.any()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[        assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser.userHandle())).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.userHandle())).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[())).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[     assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser)).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[teDpc.any(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Dpc.any(sUser)).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[le)).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[terException.class,                () -> RemoteDpc.setAsDeviceOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ption.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Exception.class,                () -> RemoteDpc.setAsDeviceOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[on.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[erException.class,                () -> RemoteDpc.setAsProfileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[tion.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[xception.class,                () -> RemoteDpc.setAsProfileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[n.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[Policy().getDeviceOwner());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[oteDPC.remove();        assertThat(sTestApis.devicePolicy().getDeviceOwner()).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[eed to support the case where there is both a DO and a PO on    //  older versions of Android?   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[ntFailedPasswordAttempts();        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[ succeeds            remoteDPC.devicePolicyManager().isUsingUnifiedPassword();        }    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[.isUsingUnifiedPassword());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.forDevicePolicyController(null));    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Controller(deviceOwner));        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([8:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[8]:method_text:[                 .isNotNull();        } finally {            remoteDPC.remove();        }    }])', 1)]"	""	""	"[('DPC', 77)]"	"[('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNull None]', 19), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNotNull None]', 15), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isUsingUnifiedPassword None]', 2), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testWavWithImaAdpcm CtsMediaParserTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSetPackagesNotSuspended None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSuspendNotSuspendablePackages None]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_enableService_issueRequest CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_disableService_noIssueRequest CtsDevicePolicyTestCases]', 1), ('[processor.main.java.com.android.bedstead.remotedpc.processor.Processor latest None]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testRevokeKeyPairFromApp_keyNotUsable None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtsc3FrontendSettings CtsTvTestCases]', 1), ('[communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager isUsingUnifiedPassword None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest TestApis None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userReference_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userReference_nonExistingUser_throwsException None]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.2"	"3.9.2"	"C-1-5"	"3.9.2/C-1-5"	"03090200.670105"	"""C-1-5] MUST display a toast indicating that the user is in the managed profile if and when the device wakes up (ACTION_USER_PRESENT) and the foreground application is within the managed profile."""	""	""	"ACTION_USER_PRESENT"	""	""	""	""	"[('com.android.cts.verifier.security.UnlockedDeviceRequiredTest', 1), ('android.permission2.cts.ProtectedBroadcastsTest', 1)]"	"[('getPassButton', 1)]"	"[('CtsPermission2TestCases', 1)]"	""	"android.permission2.cts.ProtectedBroadcastsTest"	"getPassButton"	"CtsPermission2TestCases"	"[('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/ProtectedBroadcastsTest.java', 1)]"	"[('(3,ACTION_USER_PRESENT,/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java)', 1), ('(1,ACTION_USER_PRESENT,/android/permission2/cts/ProtectedBroadcastsTest.java)', 1)]"	"[('([3:/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java]:[ACTION_USER_PRESENT]:[3]:method_text:[iometricManager mBiometricManager;        private KeyguardManager mKeyguardManager;        private])', 1), ('([1:/android/permission2/cts/ProtectedBroadcastsTest.java]:[ACTION_USER_PRESENT]:[1]:method_text:[K_OTHERS"",    };    /**     * Verify that protected broadcast actions can\'t be sent.     */   ])', 1)]"	""	""	"[('ACTION_USER_PRESENT', 2)]"	"[('[com.android.cts.verifier.security.UnlockedDeviceRequiredTest setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
"3.8.1  . Multi"	"3.8.1"	"C-3-3"	"3.8.1/C-3-3"	"03080100.670303"	"""C-3-3] MUST support aspect ratios greater than or equal to 1:2.39 and less than or equal to 2.39:1, as specified by the PIP activity through the setAspectRatio() API."""	""	""	"PIP setAspectRatio()"	""	""	""	""	"[('android.server.wm.KeyguardLockedTests', 6), ('android.os.cts.ParcelFileDescriptorProcessTest', 5), ('android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests', 3), ('android.opengl2.cts.primitive.GLPrimitiveBenchmark', 3), ('android.renderscript.cts.DebugContext', 3), ('android.app.usage.cts.UsageStatsTest', 3), ('android.app.cts.PipNotSupportedActivityTest', 2), ('android.content.cts.MockContentProvider', 1), ('com.android.cts.documentprovider.MyDocumentsProvider', 1), ('android.os.cts.SeccompTest', 1), ('com.android.cts.verifier.audio.SoundPlayerObject', 1), ('android.signature.cts.tests.ApiPresenceCheckerTest', 1), ('android.server.wm.app.AlwaysFocusablePipActivity', 1), ('com.android.cts.releaseparser.ApkParser', 1), ('android.cts.statsdatom.statsd.UidAtomTests', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('android.signature.cts.tests.ApiComplianceCheckerTest', 1), ('com.android.cts.verifier.audio.HifiUltrasoundTestActivity', 1), ('com.android.cts.apicoverage.ApiCoverage', 1), ('android.hardware.camera2.cts.BurstCaptureTest', 1), ('android.server.wm.app.AssistantActivity', 1), ('android.musicrecognition.cts.MusicRecognitionManagerTest', 1), ('android.adb.cts.AdbHostTest', 1), ('android.signature.cts.AnnotationChecker', 1), ('android.webkit.cts.MockContentProvider', 1), ('com.android.cts.verifier.audio.WavAnalyzer', 1), ('com.android.cts.apicoverage.CtsApiCoverage', 1), ('com.android.cts.verifier.usb.mtp.MtpHostTestActivity', 1), ('android.hardware.camera2.cts.helpers.StaticMetadat', 1), ('android.signature.cts.ApiComplianceChecker', 1)]"	"[('getContext', 11), ('close', 8), ('getPathSegments', 7), ('AtomicInteger', 7), ('start', 7), ('getBytes', 6), ('setUp', 5), ('crashOnLaunchIfNeeded', 5), ('getContentResolver', 5), ('clear', 5), ('Object', 5), ('getIntent', 5), ('onCreate', 4), ('newRow', 4), ('values', 4), ('run', 4), ('getLooper', 4), ('capacity', 4), ('printUsage', 4), ('println', 4), ('getWritableDatabase', 3), ('flush', 3), ('resetRoots', 3), ('toLowerCase', 3), ('FileNotFoundException', 3), ('printStackTrace', 3), ('quitSafely', 3), ('getOutputStream', 3), ('getName', 3), ('myPid', 2), ('getReadableDatabase', 2), ('SQLiteQueryBuilder', 2), ('getFileDescriptor', 2), ('size', 2), ('makeBasic', 2), ('toBundle', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('getInstrumentation', 2), ('checkDeferred', 2), ('getAbsoluteClassName', 2), ('supportsSecureLock', 1), ('MockContentProvider', 1), ('ContentValues', 1), ('moveToNext', 1), ('Doc', 1), ('getAndIncrement', 1), ('createPipe', 1), ('notifyAll', 1), ('wait', 1), ('getIntentSender', 1), ('ByteArrayOutputStream', 1), ('toByteArray', 1), ('SoundPlayerObject', 1), ('getCurrentResId', 1), ('getChannelCount', 1), ('BufferInfo', 1), ('interrupted', 1), ('availableToRead', 1), ('getSampleTime', 1), ('advance', 1), ('rewind', 1), ('GLPrimitiveBenchmark', 1), ('getType', 1), ('setAdditionalInfo', 1), ('getFileEntryBuilder', 1), ('getAppInfo', 1), ('getExternalApiPackage', 1), ('prase', 1), ('getSimpleName', 1), ('BlockingStateCallback', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('build', 1), ('onDestroy', 1), ('quit', 1), ('getWidth', 1), ('getHeight', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('getPackageName', 1), ('WindowManagerStateHelper', 1), ('getPackages', 1), ('resolveSuperClasses', 1), ('entrySet', 1), ('getValue', 1), ('Intent', 1), ('enterPictureInPictureMode', 1), ('getAllClasses', 1), ('toString', 1), ('asShortBuffer', 1), ('doWork', 1), ('FilenameFilter', 1), ('PackageFilter', 1), ('getAeModeName', 1), ('getAfModeName', 1), ('checkQueued', 1), ('getClassType', 1), ('toSignatureString', 1)]"	"[('CtsWindowManagerDeviceTestCases', 9), ('CtsOpenGlPerf2TestCases', 3), ('CtsRenderscriptTestCases', 3), ('CtsUsageStatsTestCases', 3), ('CtsAppTestCases', 2), ('CtsContentTestCases', 1), ('CtsStatsdAtomHostTestCases', 1), ('CtsCameraTestCases', 1), ('CtsMusicRecognitionTestCases', 1), ('CtsAdbHostTestCases', 1), ('CtsWebkitTestCases', 1)]"	""	"android.os.cts.ParcelFileDescriptorProcessTest"	"getAbsoluteClassName"	""	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/ParcelFileDescriptorProcessTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/openglperf2/src/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/DebugContext.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/PipNotSupportedActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/MockContentProvider.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/DocumentProvider/src/com/android/cts/documentprovider/MyDocumentsProvider.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/SeccompTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/SoundPlayerObject.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/tests/src/android/signature/cts/tests/ApiPresenceCheckerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/AlwaysFocusablePipActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/ApkParser.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/UidAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/tests/src/android/signature/cts/tests/ApiComplianceCheckerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/ApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/AssistantActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/musicrecognition/src/android/musicrecognition/cts/MusicRecognitionManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adb/src/android/adb/cts/AdbHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/lib/common/src/android/signature/cts/AnnotationChecker.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/MockContentProvider.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/WavAnalyzer.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/usb/mtp/MtpHostTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/StaticMetadata.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/lib/common/src/android/signature/cts/ApiComplianceChecker.java', 1)]"	"[('(50,PIP,/android/server/wm/KeyguardLockedTests.java)', 1), ('(5,PIP,/android/content/cts/MockContentProvider.java)', 1), ('(14,PIP,/android/app/cts/PipNotSupportedActivityTest.java)', 1), ('(47,PIP,/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java)', 1), ('(7,PIP,/com/android/cts/documentprovider/MyDocumentsProvider.java)', 1), ('(6,PIP,/android/os/cts/SeccompTest.java)', 1), ('(15,PIP,/com/android/cts/verifier/audio/SoundPlayerObject.java)', 1), ('(4,PIP,/android/signature/cts/tests/ApiPresenceCheckerTest.java)', 1), ('(6,PIP,/android/server/wm/app/AlwaysFocusablePipActivity.java)', 1), ('(8,PIP,/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java)', 1), ('(20,PIP,/com/android/cts/releaseparser/ApkParser.java)', 1), ('(4,PIP,/android/renderscript/cts/DebugContext.java)', 1), ('(5,PIP,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(5,PIP,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(28,PIP,/android/app/usage/cts/UsageStatsTest.java)', 1), ('(1,PIP,/android/signature/cts/tests/ApiComplianceCheckerTest.java)', 1), ('(11,PIP,/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java)', 1), ('(6,PIP,/com/android/cts/apicoverage/ApiCoverage.java)', 1), ('(7,PIP,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(3,PIP,/android/server/wm/app/AssistantActivity.java)', 1), ('(5,PIP,/android/musicrecognition/cts/MusicRecognitionManagerTest.java)', 1), ('(1,PIP,/android/adb/cts/AdbHostTest.java)', 1), ('(1,PIP,/android/signature/cts/AnnotationChecker.java)', 1), ('(4,PIP,/android/webkit/cts/MockContentProvider.java)', 1), ('(32,PIP,/com/android/cts/verifier/audio/WavAnalyzer.java)', 1), ('(10,PIP,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(5,PIP,/com/android/cts/verifier/usb/mtp/MtpHostTestActivity.java)', 1), ('(9,PIP,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(1,PIP,/android/signature/cts/ApiComplianceChecker.java)', 1), ('(11,PIP,/android/os/cts/ParcelFileDescriptorProcessTest.java)', 1)]"	"[('([10:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[10]:method_text:[tKeyguardShowingAndNotOccluded();        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 2), ('([7:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[7]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([12:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[12]:method_text:[t contain pinned stack."", WINDOWING_MODE_PINNED,                ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([10:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[10]:method_text:[SHOW_WHEN_LOCKED_ACTIVITY, true);        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[1]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([5:/android/content/cts/MockContentProvider.java]:[PIP]:[5]:method_text:[xt context) {        return context.getFileStreamPath(""MockContentProvider.crashonlaunch"");    }}])', 1), ('([6:/android/app/cts/PipNotSupportedActivityTest.java]:[PIP]:[6]:method_text:[Up();        mInstrumentation = getInstrumentation();        mActivity = getActivity();    }   ])', 1), ('([8:/android/app/cts/PipNotSupportedActivityTest.java]:[PIP]:[8]:method_text:[ctureInPictureMode());            }        });        mInstrumentation.waitForIdleSync();    }}])', 1), ('([2:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[PIP]:[2]:method_text:[TestBase {    @Before    public void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([27:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[PIP]:[27]:method_text:[Sequence(CallbackTrackingActivity.class, getLifecycleLog(),                ""finishPip"");    }   ])', 1), ('([18:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[PIP]:[18]:method_text:[ackingActivity.class, ON_TOP_POSITION_GAINED)),                ""finishAlwaysFocusablePip"");    }}])', 1), ('([7:/com/android/cts/documentprovider/MyDocumentsProvider.java]:[PIP]:[7]:method_text:[) {            bytes.write(buffer, 0, count);        }        return bytes.toByteArray();    }}])', 1), ('([6:/android/os/cts/SeccompTest.java]:[PIP]:[6]:method_text:[policy specified by installTestFilter().     */    private native static int getClockBootTime();}])', 1), ('([15:/com/android/cts/verifier/audio/SoundPlayerObject.java]:[PIP]:[15]:method_text:[ public void onPeriodicNotification(AudioTrack track) {        periodicNotification(track);    }}])', 1), ('([4:/android/signature/cts/tests/ApiPresenceCheckerTest.java]:[PIP]:[4]:method_text:[        }        void validate() {            Assert.assertTrue(failureSeen);        }    }}])', 1), ('([6:/android/server/wm/app/AlwaysFocusablePipActivity.java]:[PIP]:[6]:method_text:[dowingMode(WINDOWING_MODE_PINNED);        caller.startActivity(intent, options.toBundle());    }}])', 1), ('([1:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[PIP]:[1]:method_text:[ivity.class);    }    /**     * Runs the full OpenGL ES 2.0 pipeline test offscreen.     */   ])', 1), ('([4:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[PIP]:[4]:method_text:[  streamName);    }    /**     * Runs the full OpenGL ES 2.0 pipeline test onscreen.     */   ])', 1), ('([3:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[PIP]:[3]:method_text:[                streamName);    }    /**     * Runs the pixel output test offscreen.     */   ])', 1), ('([20:/com/android/cts/releaseparser/ApkParser.java]:[PIP]:[20]:method_text:[tatic Logger getLogger() {        return Logger.getLogger(ApkParser.class.getSimpleName());    }}])', 1), ('([1:/android/renderscript/cts/DebugContext.java]:[PIP]:[1]:method_text:[    * Test whether we are detect out-of-bounds allocation accesses     * from a kernel.     */   ])', 1), ('([2:/android/renderscript/cts/DebugContext.java]:[PIP]:[2]:method_text:[  * 1D copy - things should work under DebugContext if given     * legitimate arguments     */   ])', 1), (""([1:/android/renderscript/cts/DebugContext.java]:[PIP]:[1]:method_text:[dead at this point so make sure it's not reused        RenderScript.releaseAllContexts();    }}])"", 1), ('([5:/android/cts/statsdatom/statsd/UidAtomTests.java]:[PIP]:[5]:method_text:[(entered).hasSize(1);    }    //Note: this test does not have uid, but must run on the device   ])', 1), ('([5:/com/android/cts/verifier/camera/its/ItsService.java]:[PIP]:[5]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([4:/android/app/usage/cts/UsageStatsTest.java]:[PIP]:[4]:method_text:[ity(clazz);        }    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([7:/android/app/usage/cts/UsageStatsTest.java]:[PIP]:[7]:method_text:[ty stops"", 0, stops);    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([17:/android/app/usage/cts/UsageStatsTest.java]:[PIP]:[17]:method_text:[t(0).getEventType());    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([1:/android/signature/cts/tests/ApiComplianceCheckerTest.java]:[PIP]:[1]:method_text:[     checker.checkDeferred();                },                excludedRuntimeClasses);    }   ])', 1), ('([11:/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java]:[PIP]:[11]:method_text:[ @Override    public void sendMessage(String message) {      publishProgress(message);    }  }}])', 1), ('([6:/com/android/cts/apicoverage/ApiCoverage.java]:[PIP]:[6]:method_text:[ApiPackage pkg = entry.getValue();            pkg.resolveSuperClasses(mPackages);        }    }}])', 1), ('([7:/android/hardware/camera2/cts/BurstCaptureTest.java]:[PIP]:[7]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([3:/android/server/wm/app/AssistantActivity.java]:[PIP]:[3]:method_text:[ngMode(WINDOWING_MODE_FULLSCREEN);        caller.startActivity(intent, options.toBundle());    }}])', 1), ('([5:/android/musicrecognition/cts/MusicRecognitionManagerTest.java]:[PIP]:[5]:method_text:[nly allowed when the caller of the api is also the owner of     * the override service.     */   ])', 1), ('([1:/android/adb/cts/AdbHostTest.java]:[PIP]:[1]:method_text:[e + ""\\n"");        }        assertTrue(""check_ms_os_desc failed:\\n"" + output, result == 0);    }}])', 1), ('([1:/android/signature/cts/AnnotationChecker.java]:[PIP]:[1]:method_text:[      if (annotatedMethods != null) {            annotatedMethods.remove(method);        }    }}])', 1), ('([4:/android/webkit/cts/MockContentProvider.java]:[PIP]:[4]:method_text:[        outputStream.close();            } catch (IOException e) {            }        }    }}])', 1), ('([32:/com/android/cts/verifier/audio/WavAnalyzer.java]:[PIP]:[32]:method_text:[ss of the analyzer.   */  public interface Listener {    void sendMessage(String message);  }}])', 1), ('([10:/com/android/cts/apicoverage/CtsApiCoverage.java]:[PIP]:[10]:method_text:[                 break;            }        } finally {            out.close();        }    }}])', 1), ('([5:/com/android/cts/verifier/usb/mtp/MtpHostTestActivity.java]:[PIP]:[5]:method_text:[ageResource(R.drawable.fs_indeterminate);                    break;            }        }    }}])', 1), ('([9:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[PIP]:[9]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([1:/android/signature/cts/ApiComplianceChecker.java]:[PIP]:[1]:method_text:[ } catch (ClassNotFoundException e) {                // Do nothing.            }        }    }}])', 1), ('([2:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[2]:method_text:[se();        assertEquals(-1, red.read());        assertEquals(null, red.checkError());    }   ])', 1), ('([2:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[2]:method_text:[();        assertEquals(-1, blue.read());        assertEquals(null, blue.checkError());    }   ])', 1), ('([3:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[3]:method_text:[ assertEquals(-1, blue.read());        assertContains(""OMG MUFFINS"", blue.checkError());    }   ])', 1), ('([3:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[3]:method_text:[quals(-1, blue.read());        assertContains(""Remote side is dead"", blue.checkError());    }   ])', 1), ('([1:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[1]:method_text:[    assertContains(""BLUE RAWR"", red.checkError());        assertNull(blue.checkError());    }   ])', 1)]"	""	""	"[('PIP', 48)]"	"[('[android.server.wm.KeyguardLockedTests testEnterPipOverKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedActivityAndPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap CtsWindowManagerDeviceTestCases]', 1), ('[android.content.cts.MockContentProvider exists CtsContentTestCases]', 1), ('[android.app.cts.PipNotSupportedActivityTest PipNotSupportedActivityTest CtsAppTestCases]', 1), ('[android.app.cts.PipNotSupportedActivityTest testLaunchPipNotSupportedActivity CtsAppTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests testTopPositionNotSwitchedToPip CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests testTopPositionForAlwaysFocusableActivityInPip CtsWindowManagerDeviceTestCases]', 1), ('[android.os.cts.SeccompTest testViolateIsolatedServicePolicy None]', 1), ('[com.android.cts.verifier.audio.SoundPlayerObject isPlaying None]', 1), ('[android.signature.cts.tests.ApiPresenceCheckerTest TestClassesProvider None]', 1), ('[android.opengl2.cts.primitive.GLPrimitiveBenchmark testFullPipelineOffscreen CtsOpenGlPerf2TestCases]', 1), ('[android.opengl2.cts.primitive.GLPrimitiveBenchmark testFullPipelineOnscreen CtsOpenGlPerf2TestCases]', 1), ('[com.android.cts.releaseparser.ApkParser getTestCaseApiPackage None]', 1), ('[android.renderscript.cts.DebugContext testDebugContextI CtsRenderscriptTestCases]', 1), ('[android.renderscript.cts.DebugContext testDebugContextK CtsRenderscriptTestCases]', 1), ('[android.renderscript.cts.DebugContext testDebugContextRsAllocationCopy2D_Short_WrongD CtsRenderscriptTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testPictureInPictureState CtsStatsdAtomHostTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[android.app.usage.cts.UsageStatsTest isAppStandbyEnabled CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testPipActivity CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testPipActivity_StopToPause CtsUsageStatsTestCases]', 1), ('[com.android.cts.verifier.audio.HifiUltrasoundTestActivity dismiss None]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 1), ('[android.server.wm.app.AssistantActivity finish None]', 1), ('[android.musicrecognition.cts.MusicRecognitionManagerTest testRemovesBindersFromBundle CtsMusicRecognitionTestCases]', 1), ('[android.adb.cts.AdbHostTest testHasMsOsDescriptors CtsAdbHostTestCases]', 1), ('[android.signature.cts.AnnotationChecker isEmpty None]', 1), ('[com.android.cts.verifier.audio.WavAnalyzer isClipped None]', 1), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 1), ('[com.android.cts.verifier.usb.mtp.MtpHostTestActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.helpers.StaticMetadat getCharacteristics None]', 1), ('[android.signature.cts.ApiComplianceChecker isAnnotation None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPullPipeNormal None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPushPipeNormal None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPipeWriterError None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPipeWriterCrash None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testSocketErrorAfterClose None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.8.1  . Music Recognition"	"9.8.1"	"C-1-4"	"9.8.1/C-1-4"	"09080100.670104"	"""C-1-4] Reports generated using BUGREPORT_MODE_TELEPHONY MUST contain at least the following information: TelephonyDebugService dump TelephonyRegistry dump WifiService dump ConnectivityService dump A dump of the calling package&#39;s CarrierService instance (if bound) Radio log buffer | C-1-4] MUST ensure that when MusicRecognitionManagerService accesses the audio record and forwards it to the application implementing the MusicRecognitionService, the audio access is tracked via invocations of AppOpsManager.noteOp / startOp. If device implementations of MusicRecognitionManagerService or MusicRecognitionService store any audio data captured, they:"""	""	""	"AppOpsManager.noteOp BUGREPORT_MODE_TELEPHONY"	""	""	""	""	"[('android.carrierapi.cts.BugreportManagerTest', 1), ('android.bugreport.cts.BugreportManagerTest', 1), ('android.app.cts.ActivityManagerApi29Test', 1)]"	"[('startBugreport_connectivityBugreport', 1), ('BugreportCallbackImpl', 1)]"	"[('CtsCarrierApiTestCases', 1), ('CtsBugreportTestCases', 1), ('CtsAppTestCases', 1)]"	""	"android.app.cts.ActivityManagerApi29Test"	"BugreportCallbackImpl"	"CtsAppTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/BugreportManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/bugreport/src/android/bugreport/cts/BugreportManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityManagerApi29Test.java', 1)]"	"[('(1,BUGREPORT_MODE_TELEPHONY,/android/carrierapi/cts/BugreportManagerTest.java)', 1), ('(1,BUGREPORT_MODE_TELEPHONY,/android/bugreport/cts/BugreportManagerTest.java)', 1), ('(1,AppOpsManager.noteOp,/android/app/cts/ActivityManagerApi29Test.java)', 1)]"	"[('([1:/android/carrierapi/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[ertThat(mScreenshotFile.length()).isEqualTo(0L);        assertFdIsClosed(mScreenshotFd);    }   ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[port does not take any screenshot        assertThat(screenshot).isNull();    }    @LargeTest   ])', 1), ('([1:/android/app/cts/ActivityManagerApi29Test.java]:[AppOpsManager.noteOp]:[1]:method_text:[ access count and reject count     * in HistoricalOps.      *     * @throws Exception     */   ])', 1)]"	""	""	"[('BUGREPORT_MODE_TELEPHONY', 2), ('AppOpsManager.noteOp', 1)]"	"[('[android.carrierapi.cts.BugreportManagerTest hasEarlyReportFinished CtsCarrierApiTestCases]', 1), ('[android.bugreport.cts.BugreportManagerTest testTelephonyBugreport CtsBugreportTestCases]', 1), ('[android.app.cts.ActivityManagerApi29Test testFgsLocationWithAppOps CtsAppTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"5.1  . Capture for Unprocessed"	"5.1"	"C-1-8"	"5.1/C-1-8"	"05010000.670108"	"""C-1-8] If any signal processing is present in the architecture for any reason, it MUST be disabled and effectively introduce zero delay or extra latency to the signal path."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"5.1.1  . Media Codec Characterization"	"5.1.1"	"C-1-8"	"5.1.1/C-1-8"	"05010100.670108"	"""C-1-8] Codec names MUST NOT be misleading. For example, codecs named &quot;decoders&quot; MUST support decoding, and those named &quot;encoders&quot; MUST support encoding. Codecs with names containing media formats MUST support those formats. If device implementations support video codecs:"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.8.1  . SensorPrivacyManager"	"9.8.1"	"C-1-2"	"9.8.1/C-1-2"	"09080100.670102"	"""C-1-2] MUST obtain user consent every time BUGREPORT_MODE_TELEPHONY is used to generate a report and MUST NOT prompt the user to consent to all future requests from the application. | C-1-2] MUST NOT send off device or share with other apps the secure hashes of data blobs (which are used to control access). <h4 id=""9812_music_recognition""  | C-1-2] MUST enforce that a single, pre-installed, music recognition application implements MusicRecognitionService. | C-1-2] MUST, when an app tries to access a blocked microphone or camera, present the user with a non-dismissable user affordance that clearly indicates that the sensor is blocked and requires a choice to continue blocking or unblock as per the AOSP implementation which meets this requirement. | C-1-2] above. <h3 id=""99_data_storage_encryption"" """	""	""	"BUGREPORT_MODE_TELEPHONY"	""	""	""	""	"[('android.carrierapi.cts.BugreportManagerTest', 1), ('android.bugreport.cts.BugreportManagerTest', 1)]"	"[('startBugreport_connectivityBugreport', 1), ('BugreportCallbackImpl', 1)]"	"[('CtsCarrierApiTestCases', 1), ('CtsBugreportTestCases', 1)]"	""	"android.bugreport.cts.BugreportManagerTest"	"BugreportCallbackImpl"	"CtsBugreportTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/BugreportManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/bugreport/src/android/bugreport/cts/BugreportManagerTest.java', 1)]"	"[('(1,BUGREPORT_MODE_TELEPHONY,/android/carrierapi/cts/BugreportManagerTest.java)', 1), ('(1,BUGREPORT_MODE_TELEPHONY,/android/bugreport/cts/BugreportManagerTest.java)', 1)]"	"[('([1:/android/carrierapi/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[ertThat(mScreenshotFile.length()).isEqualTo(0L);        assertFdIsClosed(mScreenshotFd);    }   ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[port does not take any screenshot        assertThat(screenshot).isNull();    }    @LargeTest   ])', 1)]"	""	""	"[('BUGREPORT_MODE_TELEPHONY', 2)]"	"[('[android.carrierapi.cts.BugreportManagerTest hasEarlyReportFinished CtsCarrierApiTestCases]', 1), ('[android.bugreport.cts.BugreportManagerTest testTelephonyBugreport CtsBugreportTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Application Data Migration"	"9.1"	"C-1-3"	"9.1/C-1-3"	"09010000.670103"	"""C-1-3] MUST start verification from an immutable hardware key that is the root of trust and go all the way up to the system partition. | C-1-3] MUST perform the lock screen authentication in the isolated execution environment and only when successful, allow the authentication-bound keys to be used. Lock screen credentials MUST be stored in a way that allows only the isolated execution environment to perform lock screen authentication. The upstream Android Open Source Project provides the Gatekeeper Hardware Abstraction Layer (HAL) and Trusty, which can be used to satisfy this requirement. | C-1-3] MUST use security key attestation to ensure that both the source device and the target device in the device-to-device migration are legitimate Android devices and have a locked bootloader."""	""	""	"HAL"	""	""	""	""	"[('android.view.cts.ASurfaceControlTest', 12), ('dot.junit.opcodes.sget_wide.Test_sget_wide', 7), ('android.uirendering.cts.testclasses.ViewFadingEdgeTests', 5), ('android.media.cts.AudioPlaybackConfigurationTest', 3), ('android.devicepolicy.cts.AppUriAuthenticationPolicyTest', 3), ('android.keystore.cts.BlockCipherTestBase', 3), ('android.renderscript.cts.generated.TestLength', 2), ('android.renderscript.cts.generated.TestSin', 2), ('android.renderscript.cts.generated.TestTanpi', 2), ('android.renderscript.cts.generated.TestNormalize', 2), ('dot.junit.opcodes.if_gez.Test_if_gez', 2), ('android.view.inputmethod.cts.InputConnectionWrapperTest', 1), ('android.graphics.cts.BitmapColorSpaceTest', 1), ('android.server.wm.CloseOnOutsideTestActivity', 1), ('com.android.cts.verifier.security.FingerprintBoundKeysTest', 1), ('android.media.cts.MediaSyncEventTest', 1), ('dot.junit.opcodes.invoke_super_range.Test_invoke_super_range', 1), ('com.android.cts.verifier.sensors.MotionIndicatorView', 1), ('android.graphics.drawable.cts.AnimatedStateListDrawableTest', 1)]"	"[('destroy', 104), ('toString', 96), ('StringBuilder', 32), ('setUp', 11), ('ArgumentsFloatFloat', 10), ('ArgumentsHalfHalf', 10), ('tearDown', 9), ('Builder', 3), ('ArgumentsFloatNFloat', 3), ('ArgumentsHalfNHalf', 3), ('ArgumentsFloatNFloatN', 3), ('ArgumentsHalfNHalfN', 3), ('release', 2), ('getColorSpace', 2), ('getMediaDirString', 1), ('stop', 1), ('addAppAndUriMapping_nullUri_throwException', 1), ('addAppAndUriMapping_nullPackageName_throwException', 1), ('addAppAndUriMapping_nullAlias_throwException', 1), ('writeColorSpace', 1), ('getAssets', 1), ('fail', 1), ('obtain', 1), ('recycle', 1), ('getResources', 1), ('checkLengthFloatFloat', 1), ('checkLengthFloat2Float', 1), ('checkLengthFloat3Float', 1), ('checkLengthFloat4Float', 1), ('checkLengthHalfHalf', 1), ('checkLengthHalf2Half', 1), ('checkLengthHalf3Half', 1), ('checkLengthHalf4Half', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('checkSinFloatFloat', 1), ('checkSinFloat2Float2', 1), ('checkSinFloat3Float3', 1), ('checkSinFloat4Float4', 1), ('checkSinHalfHalf', 1), ('checkSinHalf2Half2', 1), ('checkSinHalf3Half3', 1), ('checkSinHalf4Half4', 1), ('checkTanpiFloatFloat', 1), ('checkTanpiFloat2Float2', 1), ('checkTanpiFloat3Float3', 1), ('checkTanpiFloat4Float4', 1), ('checkTanpiHalfHalf', 1), ('checkTanpiHalf2Half2', 1), ('checkTanpiHalf3Half3', 1), ('checkTanpiHalf4Half4', 1), ('checkNormalizeFloatFloat', 1), ('checkNormalizeFloat2Float2', 1), ('checkNormalizeFloat3Float3', 1), ('checkNormalizeFloat4Float4', 1), ('checkNormalizeHalfHalf', 1), ('checkNormalizeHalf2Half2', 1), ('checkNormalizeHalf3Half3', 1), ('checkNormalizeHalf4Half4', 1), ('SecureRandom', 1)]"	"[('CtsViewTestCases', 12), ('CtsRenderscriptTestCases', 8), ('CtsUiRenderingTestCases', 5), ('CtsMediaTestCases', 4), ('CtsDevicePolicyTestCases', 3), ('CtsKeystoreTestCases', 3), ('CtsGraphicsTestCases', 2), ('CtsInputMethodTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1)]"	""	"android.keystore.cts.BlockCipherTestBase"	"setUp"	"CtsKeystoreTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 12), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/sget_wide/Test_sget_wide.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/BlockCipherTestBase.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestLength.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestSin.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestTanpi.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNormalize.java', 2), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/if_gez/Test_if_gez.java', 2), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapColorSpaceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CloseOnOutsideTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/FingerprintBoundKeysTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaSyncEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/invoke_super_range/Test_invoke_super_range.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MotionIndicatorView.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/AnimatedStateListDrawableTest.java', 1)]"	"[('(13,HAL,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(1,HAL,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(3,HAL,/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java)', 1), ('(4,HAL,/android/graphics/cts/BitmapColorSpaceTest.java)', 1), ('(1,HAL,/android/server/wm/CloseOnOutsideTestActivity.java)', 1), ('(104,HAL,/android/renderscript/cts/generated/TestLength.java)', 1), ('(3,HAL,/com/android/cts/verifier/security/FingerprintBoundKeysTest.java)', 1), ('(102,HAL,/android/renderscript/cts/generated/TestSin.java)', 1), ('(58,HAL,/android/view/cts/ASurfaceControlTest.java)', 1), ('(102,HAL,/android/renderscript/cts/generated/TestTanpi.java)', 1), ('(5,HAL,/android/media/cts/MediaSyncEventTest.java)', 1), ('(104,HAL,/android/renderscript/cts/generated/TestNormalize.java)', 1), ('(7,HAL,/dot/junit/opcodes/sget_wide/Test_sget_wide.java)', 1), ('(1,HAL,/dot/junit/opcodes/invoke_super_range/Test_invoke_super_range.java)', 1), ('(5,HAL,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(2,HAL,/dot/junit/opcodes/if_gez/Test_if_gez.java)', 1), ('(4,HAL,/android/graphics/drawable/cts/AnimatedStateListDrawableTest.java)', 1), ('(6,HAL,/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java)', 1), ('(4,HAL,/android/keystore/cts/BlockCipherTestBase.java)', 1)]"	"[('([8:/android/view/cts/ASurfaceControlTest.java]:[HAL]:[8]:method_text:[      return MAGENTA;                        }                    }                });    }   ])', 4), ('([4:/android/view/cts/ASurfaceControlTest.java]:[HAL]:[4]:method_text:[       return YELLOW;                        }                    }                });    }   ])', 4), ('([1:/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java]:[HAL]:[1]:method_text:[llPointerException expected) {            // Expected behavior, nothing to do.        }    }   ])', 3), ('([2:/android/view/cts/ASurfaceControlTest.java]:[HAL]:[2]:method_text:[      return MAGENTA;                        }                    }                });    }   ])', 2), ('([1:/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java]:[HAL]:[1]:method_text:[       Color.WHITE                }, 20)); // Tolerance set to account for interpolation    }   ])', 2), ('([2:/android/media/cts/AudioPlaybackConfigurationTest.java]:[HAL]:[2]:method_text:[   // create an AudioPlaybackConfiguration directly, we first need to play something to get one.   ])', 1), ('([10:/android/media/cts/AudioPlaybackConfigurationTest.java]:[HAL]:[10]:method_text:[             configToMarshall.getAudioAttributes(), restoredConfig.getAudioAttributes());    }   ])', 1), ('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[HAL]:[1]:method_text:[t HAL, skipping test "" + testName);            return false;        }        return true;    }}])', 1), ('([1:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[HAL]:[1]:method_text:[     expectThrows(IllegalArgumentException.class,  ()-> wrapper.getTextBeforeCursor(-1, 0));    }}])', 1), ('([4:/android/graphics/cts/BitmapColorSpaceTest.java]:[HAL]:[4]:method_text:[ace();        assertNotNull(cs);        assertSame(expected, cs);        p.recycle();    }   ])', 1), ('([1:/android/server/wm/CloseOnOutsideTestActivity.java]:[HAL]:[1]:method_text:[ = width / 2;        params.height = height / 2;        getWindow().setAttributes(params);    }}])', 1), ('([96:/android/renderscript/cts/generated/TestLength.java]:[HAL]:[96]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestLength.java]:[HAL]:[8]:method_text:[     checkLengthHalf2Half();        checkLengthHalf3Half();        checkLengthHalf4Half();    }}])', 1), ('([3:/com/android/cts/verifier/security/FingerprintBoundKeysTest.java]:[HAL]:[3]:method_text:[etMessage(R.string.sec_fp_dialog_message);            return builder.create();        }    }}])', 1), ('([94:/android/renderscript/cts/generated/TestSin.java]:[HAL]:[94]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestSin.java]:[HAL]:[8]:method_text:[);        checkSinHalf2Half2();        checkSinHalf3Half3();        checkSinHalf4Half4();    }}])', 1), ('([2:/android/view/cts/ASurfaceControlTest.java]:[HAL]:[2]:method_text:[         return BLUE;                        }                    }                });    }   ])', 1), ('([4:/android/view/cts/ASurfaceControlTest.java]:[HAL]:[4]:method_text:[chTime;            mPresentTime = presentTime;            mLatch.countDown();        }    }   ])', 1), ('([94:/android/renderscript/cts/generated/TestTanpi.java]:[HAL]:[94]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestTanpi.java]:[HAL]:[8]:method_text:[     checkTanpiHalf2Half2();        checkTanpiHalf3Half3();        checkTanpiHalf4Half4();    }}])', 1), ('([5:/android/media/cts/MediaSyncEventTest.java]:[HAL]:[5]:method_text:[ackageManager().hasSystemFeature(                PackageManager.FEATURE_AUDIO_LOW_LATENCY);    }}])', 1), ('([96:/android/renderscript/cts/generated/TestNormalize.java]:[HAL]:[96]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestNormalize.java]:[HAL]:[8]:method_text:[rmalizeHalf2Half2();        checkNormalizeHalf3Half3();        checkNormalizeHalf4Half4();    }}])', 1), ('([1:/dot/junit/opcodes/sget_wide/Test_sget_wide.java]:[HAL]:[1]:method_text:[   /**     * @constraint B1     * @title sget-wide shall not work for reference fields     */   ])', 1), ('([1:/dot/junit/opcodes/sget_wide/Test_sget_wide.java]:[HAL]:[1]:method_text:[/**     *     * @constraint B1     * @title sget-wide shall not work for short fields     */   ])', 1), ('([1:/dot/junit/opcodes/sget_wide/Test_sget_wide.java]:[HAL]:[1]:method_text:[*     *     * @constraint B1     * @title sget-wide shall not work for boolean fields     */   ])', 1), ('([1:/dot/junit/opcodes/sget_wide/Test_sget_wide.java]:[HAL]:[1]:method_text:[ /**     *     * @constraint B1     * @title sget-wide shall not work for char fields     */   ])', 1), ('([1:/dot/junit/opcodes/sget_wide/Test_sget_wide.java]:[HAL]:[1]:method_text:[ /**     *     * @constraint B1     * @title sget-wide shall not work for byte fields     */   ])', 1), ('([1:/dot/junit/opcodes/sget_wide/Test_sget_wide.java]:[HAL]:[1]:method_text:[/**     *     * @constraint B1     * @title sget-wide shall not work for float fields     */   ])', 1), ('([1:/dot/junit/opcodes/sget_wide/Test_sget_wide.java]:[HAL]:[1]:method_text:[  /**     *     * @constraint B1     * @title sget-wide shall not work for int fields     */   ])', 1), ('([1:/dot/junit/opcodes/invoke_super_range/Test_invoke_super_range.java]:[HAL]:[1]:method_text:[@constraint n/a     * @title invoke-super/range shall be used to invoke private methods     */   ])', 1), ('([5:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[HAL]:[5]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([1:/dot/junit/opcodes/if_gez/Test_if_gez.java]:[HAL]:[1]:method_text:[      /**     * @constraint A6      * @title branch target shall be inside the method     */   ])', 1), ('([1:/dot/junit/opcodes/if_gez/Test_if_gez.java]:[HAL]:[1]:method_text:[**     * @constraint A6      * @title  branch target shall not be ""inside"" instruction     */   ])', 1), ('([4:/android/graphics/drawable/cts/AnimatedStateListDrawableTest.java]:[HAL]:[4]:method_text:[ XmlPullParser.END_DOCUMENT) {            // Empty loop        }        return parser;    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java]:[HAL]:[1]:method_text:[       Color.RED,                }, 20)); // Tolerance set to account for interpolation    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java]:[HAL]:[1]:method_text:[        Color.RED,                }, 20)); // Tolerance set to account for interpolation    }   ])', 1), ('([2:/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java]:[HAL]:[2]:method_text:[          Color.WHITE                }, 20)); // Tolerance set to account for interpolation    }}])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[HAL]:[1]:method_text:[alid opmode: "" + opmode);        }    }    private Cipher mCipher;    private int mOpmode;   ])', 1), ('([2:/android/keystore/cts/BlockCipherTestBase.java]:[HAL]:[2]:method_text:[ArrayEquals(getKatIv(), mCipher.getIV());        assertAlgoritmParametersIv(getKatIv());    }   ])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[HAL]:[1]:method_text:[param);            fail();        } catch (InvalidAlgorithmParameterException expected) {}    }}])', 1)]"	""	""	"[('HAL', 51)]"	"[('[android.media.cts.AudioPlaybackConfigurationTest testParcelableWriteToParcel CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetAudioDeviceInfoMediaPlayerStart CtsMediaTestCases]', 1), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInvalidGetTextBeforeOrAfterCursorRequest CtsInputMethodTestCases]', 1), ('[android.server.wm.CloseOnOutsideTestActivity getDisplayMetrics CtsWindowManagerDeviceTestCases]', 1), ('[android.renderscript.cts.generated.TestLength testLength CtsRenderscriptTestCases]', 1), ('[com.android.cts.verifier.security.FingerprintBoundKeysTest setPassFailButtonClickListeners None]', 1), ('[android.renderscript.cts.generated.TestSin testSin CtsRenderscriptTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setSourceRect CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setSourceRect_smallCentered CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setSourceRect_small CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setSourceRect_extraLarge CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setTransform_flipH CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setTransform_rotate180 CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setScale CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setBufferTransform90 CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setCropSmall CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setCropLarge CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setCropOffset CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setCropNegative CtsViewTestCases]', 1), ('[android.renderscript.cts.generated.TestTanpi testTanpi CtsRenderscriptTestCases]', 1), ('[android.media.cts.MediaSyncEventTest testParcelableWriteToParcelCreate CtsMediaTestCases]', 1), ('[android.renderscript.cts.generated.TestNormalize testNormalize CtsRenderscriptTestCases]', 1), ('[dot.junit.opcodes.sget_wide.Test_sget_wide testVFE7 None]', 1), ('[dot.junit.opcodes.sget_wide.Test_sget_wide testVFE8 None]', 1), ('[dot.junit.opcodes.sget_wide.Test_sget_wide testVFE9 None]', 1), ('[dot.junit.opcodes.sget_wide.Test_sget_wide testVFE10 None]', 1), ('[dot.junit.opcodes.sget_wide.Test_sget_wide testVFE11 None]', 1), ('[dot.junit.opcodes.sget_wide.Test_sget_wide testVFE12 None]', 1), ('[dot.junit.opcodes.sget_wide.Test_sget_wide testVFE13 None]', 1), ('[dot.junit.opcodes.invoke_super_range.Test_invoke_super_range testVFE15 None]', 1), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 1), ('[dot.junit.opcodes.if_gez.Test_if_gez testVFE4 None]', 1), ('[dot.junit.opcodes.if_gez.Test_if_gez testVFE5 None]', 1), ('[android.graphics.drawable.cts.AnimatedStateListDrawableTest testPreloadDensityConstantSize CtsGraphicsTestCases]', 1), ('[android.uirendering.cts.testclasses.ViewFadingEdgeTests testCreateLeftFade CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ViewFadingEdgeTests testCreateRightFade CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ViewFadingEdgeTests testCreateTopFade CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ViewFadingEdgeTests testCreateBottomFade CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ViewFadingEdgeTests testCreateLeftAndRightFade CtsUiRenderingTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase isStrongbox CtsKeystoreTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testDoFinalResets CtsKeystoreTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testVeryLargeBlock CtsKeystoreTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"5.1  . Capture for Unprocessed"	"5.1"	"C-1-5"	"5.1/C-1-5"	"05010000.670105"	"""C-1-5] MUST meet latencies and USB audio requirements using the AAudio native audio API. | C-1-5] MUST set audio input sensitivity such that a 1000 Hz sinusoidal tone source played at 94 dB Sound Pressure Level (SPL) yields a response with RMS of 520 for 16 bit-samples (or -36 dB Full Scale for floating point/double precision samples) for each and every microphone used to record the unprocessed audio source."""	""	""	"RMS SPL USB"	""	""	""	""	"[('android.server.wm.AppConfigurationTests', 17), ('android.server.wm.SplashscreenTests', 9), ('android.media.cts.AudioManagerTest', 5), ('android.server.wm.KeyguardLockedTests', 5), ('android.graphics.cts.VulkanPreTransformTest', 2), ('com.android.cts.verifier.camera.its.ItsTestActivity', 2), ('android.systemui.cts.LightBarActivity', 2), ('android.uirendering.cts.testclasses.ExactCanvasTests', 1), ('com.android.cts.isolatedsplitapp.feature_a.FeatureAReceiver', 1), ('com.android.server.cts.device.statsdatom.StatsdSyncAdapter', 1), ('android.content.res.cts.PluralResourcesTest', 1)]"	"[('setUp', 6), ('hashCode', 6), ('getWindow', 4), ('ResultReceiver', 2), ('getAttributes', 2), ('getDecorView', 2), ('getResources', 2), ('DumpOnFailure', 1), ('tearDown', 1), ('Object', 1), ('countDown', 1), ('Bundle', 1), ('resetCountDownLatch', 1), ('getCount', 1), ('Configuration', 1), ('getConfiguration', 1), ('getAssets', 1), ('supportsSecureLock', 1)]"	"[('CtsWindowManagerDeviceTestCases', 31), ('CtsMediaTestCases', 5), ('CtsGraphicsTestCases', 2), ('CtsSystemUiTestCases', 2), ('CtsUiRenderingTestCases', 1), ('CtsContentTestCases', 1)]"	""	"android.server.wm.AppConfigurationTests"	"supportsSecureLock"	"CtsWindowManagerDeviceTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 17), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanPreTransformTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/LightBarActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_a/src/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/StatsdSyncAdapter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/PluralResourcesTest.java', 1)]"	"[('(60,SPL,/android/server/wm/SplashscreenTests.java)', 1), ('(7,RMS,/android/media/cts/AudioManagerTest.java)', 1), ('(5,SPL,/android/media/cts/AudioManagerTest.java)', 1), ('(3,SPL,/android/uirendering/cts/testclasses/ExactCanvasTests.java)', 1), ('(3,RMS,/android/graphics/cts/VulkanPreTransformTest.java)', 1), ('(1,SPL,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(1,USB,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(3,SPL,/android/systemui/cts/LightBarActivity.java)', 1), ('(6,USB,/android/systemui/cts/LightBarActivity.java)', 1), ('(2,SPL,/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java)', 1), ('(2,RMS,/com/android/server/cts/device/statsdatom/StatsdSyncAdapter.java)', 1), ('(1,SPL,/android/content/res/cts/PluralResourcesTest.java)', 1), ('(17,SPL,/android/server/wm/KeyguardLockedTests.java)', 1), ('(172,SPL,/android/server/wm/AppConfigurationTests.java)', 1)]"	"[('([2:/android/media/cts/AudioManagerTest.java]:[RMS]:[2]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 2), ('([10:/android/server/wm/SplashscreenTests.java]:[SPL]:[10]:method_text:[TRA_INTENT, startIntent);        homeActivity.sendCommand(COMMAND_START_ACTIVITY, data);    }   ])', 1), ('([14:/android/server/wm/SplashscreenTests.java]:[SPL]:[14]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([6:/android/server/wm/SplashscreenTests.java]:[SPL]:[6]:method_text:[Equals(Color.BLUE, journal.extras.getInt(ICON_BACKGROUND_COLOR, Color.YELLOW));        }    }   ])', 1), ('([4:/android/server/wm/SplashscreenTests.java]:[SPL]:[4]:method_text:[ConfigNightMode,                journal.extras.getInt(GET_NIGHT_MODE_ACTIVITY_CHANGED));    }   ])', 1), ('([4:/android/server/wm/SplashscreenTests.java]:[SPL]:[4]:method_text:[     testSplashScreenColor(SPLASH_SCREEN_REPLACE_ICON_ACTIVITY, Color.BLUE, Color.WHITE);    }   ])', 1), ('([5:/android/server/wm/SplashscreenTests.java]:[SPL]:[5]:method_text:[NDING_VIEW));        assertTrue(journal.extras.getBoolean(CENTER_VIEW_IS_SURFACE_VIEW));    }   ])', 1), ('([5:/android/server/wm/SplashscreenTests.java]:[SPL]:[5]:method_text:[E_ICON_EXIT);        assertFalse(journal.extras.getBoolean(RECEIVE_SPLASH_SCREEN_EXIT));    }   ])', 1), ('([6:/android/server/wm/SplashscreenTests.java]:[SPL]:[6]:method_text:[      }        mWmState.waitForActivityRemoved(activity);        separateTestJournal();    }   ])', 1), ('([6:/android/server/wm/SplashscreenTests.java]:[SPL]:[6]:method_text:[CTIVITY,                intent -> {});        waitAndAssertOverrideThemeColor(Color.BLUE);    }}])', 1), ('([3:/android/media/cts/AudioManagerTest.java]:[RMS]:[3]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[SPL]:[4]:method_text:[:"" + microphone.getDirectionality());            Log.i(TAG, ""--------------"");        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[SPL]:[1]:method_text:[ibutes() require privledged permission MODIFY_AUDIO_ROUTING    // and thus cannot be tested here.}])', 1), ('([3:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[SPL]:[3]:method_text:[ect(20, 20, 70, 70, p);                })                .runWithComparer(mExactComparer);    }}])', 1), ('([1:/android/graphics/cts/VulkanPreTransformTest.java]:[RMS]:[1]:method_text:[ {        Log.d(TAG, ""setUp!"");        mContext = InstrumentationRegistry.getContext();    }   ])', 1), ('([2:/android/graphics/cts/VulkanPreTransformTest.java]:[RMS]:[2]:method_text:[ivity.testVulkanPreTransform(true);        sActivity.finish();        sActivity = null;    }   ])', 1), ('([1:/com/android/cts/verifier/camera/its/ItsTestActivity.java]:[SPL]:[1]:method_text:[era_its_test, R.string.camera_its_test_info, -1);        setPassFailButtonClickListeners();    }}])', 1), ('([1:/com/android/cts/verifier/camera/its/ItsTestActivity.java]:[USB]:[1]:method_text:[era_its_test, R.string.camera_its_test_info, -1);        setPassFailButtonClickListeners();    }}])', 1), ('([3:/android/systemui/cts/LightBarActivity.java]:[SPL]:[3]:method_text:[ranceFlag;        }        controller.setSystemBarsAppearance(appearance, appearanceFlag);    }}])', 1), ('([6:/android/systemui/cts/LightBarActivity.java]:[USB]:[6]:method_text:[ranceFlag;        }        controller.setSystemBarsAppearance(appearance, appearanceFlag);    }}])', 1), ('([2:/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java]:[SPL]:[2]:method_text:[(                ""feature_a"", context.getResources().getString(R.string.feature_a_string));    }}])', 1), ('([2:/com/android/server/cts/device/statsdatom/StatsdSyncAdapter.java]:[RMS]:[2]:method_text:[              sLatch = new CountDownLatch(1);            }        }        return sLatch;    }}])', 1), ('([1:/android/content/res/cts/PluralResourcesTest.java]:[SPL]:[1]:method_text:[Resources(mResources.getAssets(), mResources.getDisplayMetrics(), config);    }    @SmallTest   ])', 1), ('([2:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[2]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([2:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[2]:method_text:[uardControllerState().keyguardShowing);        assertTrue(isDisplayOn(DEFAULT_DISPLAY));    }   ])', 1), ('([3:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[3]:method_text:[expected display.        mWmState.waitAndAssertImeWindowShownOnDisplay(DEFAULT_DISPLAY);    }   ])', 1), ('([5:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[5]:method_text:[xpected display.        mWmState.waitAndAssertImeWindowShownOnDisplay(DEFAULT_DISPLAY);    }   ])', 1), ('([5:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[5]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([8:/android/server/wm/AppConfigurationTests.java]:[SPL]:[8]:method_text:[lues reported in fullscreen should be larger than those reported in     * docked state.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[SPL]:[2]:method_text:[nResizedFromFullscreen()} but resizing     * from docked state to fullscreen (reverse).     */   ])', 1), ('([4:/android/server/wm/AppConfigurationTests.java]:[SPL]:[4]:method_text:[;    }    /**     * Tests whether the Display sizes change when rotating the device.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[SPL]:[2]:method_text:[tatingWhileDocked()} but when the Activity     * is launched to side from docked stack.     */   ])', 1), ('([10:/android/server/wm/AppConfigurationTests.java]:[SPL]:[10]:method_text:[ Activity will be     * relaunched twice and it should have same config as initial one.     */   ])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[SPL]:[3]:method_text:[     * Same as {@link #testSameConfigurationFullSplitFullRelaunch} but without relaunch.     */   ])', 1), ('([11:/android/server/wm/AppConfigurationTests.java]:[SPL]:[11]:method_text:[ivity with the DialogWhenLarge theme can transform properly when in split     * screen.     */   ])', 1), ('([11:/android/server/wm/AppConfigurationTests.java]:[SPL]:[11]:method_text:[ Test that device handles consequent requested orientations and displays the activities.     */   ])', 1), ('([27:/android/server/wm/AppConfigurationTests.java]:[SPL]:[27]:method_text:[),                new Point(globalSizeInfo.metricsWidth, globalSizeInfo.metricsHeight));    }   ])', 1), ('([4:/android/server/wm/AppConfigurationTests.java]:[SPL]:[4]:method_text:[text derived from an application context     * will not change when the device rotates.     */   ])', 1), ('([5:/android/server/wm/AppConfigurationTests.java]:[SPL]:[5]:method_text:[context derived from an activity context     * will not change when the device rotates.     */   ])', 1), ('([33:/android/server/wm/AppConfigurationTests.java]:[SPL]:[33]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([7:/android/server/wm/AppConfigurationTests.java]:[SPL]:[7]:method_text:[**     * Test that device handles moving between two tasks with different orientations.     */   ])', 1), (""([3:/android/server/wm/AppConfigurationTests.java]:[SPL]:[3]:method_text:[Test that device doesn't change device orientation by app request while in multi-window.     */   ])"", 1), ('([30:/android/server/wm/AppConfigurationTests.java]:[SPL]:[30]:method_text:[  /**     * Test launching an activity which requests specific UI mode during creation.     */   ])', 1), ('([4:/android/server/wm/AppConfigurationTests.java]:[SPL]:[4]:method_text:[ dockedActivitySizes);        assertSizesAreSame(dockedActivitySizes, applicationSizes);    }   ])', 1), ('([8:/android/server/wm/AppConfigurationTests.java]:[SPL]:[8]:method_text:[Sizes);        assertSizesAreSane(fullscreenActivitySizes, secondarySplitActivitySizes);    }   ])', 1)]"	""	""	"[('SPL', 38), ('RMS', 6), ('USB', 2)]"	"[('[android.graphics.cts.VulkanPreTransformTest testVulkanPreTransformSetToMatchCurrentTransform CtsGraphicsTestCases]', 2), ('[com.android.cts.verifier.camera.its.ItsTestActivity ItsTestActivity None]', 2), ('[android.systemui.cts.LightBarActivity getSystemUiVisibility CtsSystemUiTestCases]', 2), ('[android.server.wm.SplashscreenTests prepareTestLauncher CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitAnimationCancel CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSetApplicationNightMode CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSetBackgroundColorActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitIconAnimatingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testCancelHandleExitIconAnimatingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testShortcutChangeTheme CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testOverrideSplashscreenTheme CtsWindowManagerDeviceTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInAlarmsOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInAlarmsOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyAlarmsAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetMicrophones CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetDevices CtsMediaTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testColorLongs CtsUiRenderingTestCases]', 1), ('[android.content.res.cts.PluralResourcesTest getDisplayMetrics CtsContentTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardAttrActivity_method_turnScreenOn_withSecureKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedAttrImeActivityAndShowSoftInput CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedImeActivityAndShowSoftInput CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests getDefaultDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromFullscreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromDockedStack CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingWhileDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingToSideFromDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSameConfigurationFullSplitFullRelaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSameConfigurationFullSplitFullNoRelaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testDialogWhenLargeSplitSmall CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testRotatedInfoWithFixedRotationTransform CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testFixedOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenPortraitAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenLandscapeAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesTopActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.2"	"3.9.2"	"C-1-2"	"3.9.2/C-1-2"	"03090200.670102"	"""C-1-2] MUST allow one and only one managed profile to be created."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.9.1.1  . The"	"3.9.1.1"	"C-2-1"	"3.9.1.1/C-2-1"	"03090101.670201"	"""C-2-1] MUST have a process in place to verify that the specific app being promoted belongs to a legitimate enterprise device management solution and it has been already configured in the proprietary solution to have the rights equivalent as a &quot;Device Owner&quot;."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Application Data Migration"	"9.1"	"C-1-1"	"9.1/C-1-1"	"09010000.670101"	"""C-1-1] MUST NOT have the following permissions silently granted by the admin: Location (ACCESS_BACKGROUND_LOCATION, ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION). Camera (CAMERA) Microphone (RECORD_AUDIO) Body sensor (BODY_SENSORS) Physical activity (ACTIVITY_RECOGNITION) If device implementations provide a user affordance to choose which apps can draw on top of other apps with an activity that handles the ACTION_MANAGE_OVERLAY_PERMISSION intent, they: | C-1-1] MUST declare the platform feature flag android.software.verified_boot. | C-1-1] MUST back up the keystore implementation with an isolated execution environment. | C-1-1] MUST provide the user an option to enter Safe Boot Mode in such a way that is uninterruptible from third-party apps installed on the device, except when the third-party app is a Device Policy Controller and has set the UserManager.DISALLOW_SAFE_BOOT flag as true. | C-1-1] MUST NOT initiate transfers of application data from devices on which the user has not set a primary authentication as described in 9.11.1 Secure Lock Screen and Authentication."""	""	""	"ACCESS_FINE_LOCATION ACTION_MANAGE_OVERLAY_PERMISSION ACCESS_COARSE_LOCATION android.software.verified UserManager.DISALLOW CAMERA RECORD_AUDIO BODY_SENSORS ACTIVITY_RECOGNITION DISALLOW_SAFE_BOOT ACCESS_BACKGROUND_LOCATION"	""	""	""	""	"[('android.permission.cts.BackgroundPermissionsTest', 18), ('android.hardware.camera2.cts.NativeCameraDeviceTest', 10), ('android.permission.cts.Camera2PermissionTest', 5), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 4), ('com.android.cts.managedprofile.CameraPolicyTest', 3), ('android.media.cts.CamcorderProfileTest', 3), ('android.hardware.cts.Camera_SizeTest', 3), ('android.hardware.camera2.cts.ZoomCaptureTest', 3), ('android.permission.cts.CameraPermissionTest', 2), ('com.android.cts.verifier.camera.its.ItsTestActivity', 1), ('android.hardware.multiprocess.camera.cts.Camera2Activity', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer', 1), ('com.android.cts.verifier.audio.USBRestrictRecordAActivity', 1), ('android.hardware.camera2.cts.rs.ScriptGraph', 1), ('android.controls.cts.CtsControlsServiceTest', 1), ('com.android.cts.deviceandprofileowner.CustomizationRestrictionsTest', 1), ('android.renderscript.cts.refocus.RefocusFilter', 1), ('android.graphics.cts.CameraGpuCtsActivity', 1)]"	"[('getMediaType', 14), ('setUp', 8), ('getIntent', 8), ('getInstrumentation', 6), ('onPause', 5), ('onResume', 5), ('tearDown', 4), ('getCodec', 4), ('getReceiverComponentName', 4), ('myUserId', 4), ('hashCode', 3), ('getProfile', 3), ('getSimpleName', 3), ('getTargetContext', 3), ('getUiAutomation', 3), ('getContext', 2), ('getResources', 2), ('getBitrate', 2), ('onDestroy', 2), ('startBackgroundThread', 1), ('stopBackgroundThread', 1), ('ResultReceiver', 1), ('start', 1), ('Object', 1), ('setUpExtrinsics', 1), ('getLocation', 1), ('getRingRotation', 1), ('doPreRenderingSetup', 1), ('getExternalStorageDirectory', 1), ('toString', 1), ('onShutter', 1), ('flush', 1), ('getCache', 1), ('create', 1), ('Builder', 1), ('checkInput', 1), ('getFocusLayer', 1), ('extractResultImage', 1), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getWidth', 1), ('getHeight', 1), ('getAudioProfiles', 1), ('getSampleRate', 1), ('getChannels', 1), ('hasProfile', 1), ('countDown', 1), ('nCreateRenderer', 1), ('release', 1), ('Renderer', 1)]"	"[('CtsPermissionTestCases', 25), ('CtsCameraTestCases', 18), ('CtsMediaTestCases', 3), ('CtsControlsDeviceTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsGraphicsTestCases', 1)]"	""	"android.permission.cts.BackgroundPermissionsTest"	"getUiAutomation"	"CtsPermissionTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/BackgroundPermissionsTest.java', 18), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraDeviceTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/Camera2PermissionTest.java', 5), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CameraPolicyTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/Camera_SizeTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/CameraPermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/Camera2Activity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/ScriptGraph.java', 1), ('/home/gpoor/cts-12-source/cts/tests/controls/src/android/controls/cts/CtsControlsServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/CustomizationRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusFilter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuCtsActivity.java', 1)]"	"[('(30,CAMERA,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(100,CAMERA,/android/permission/cts/Camera2PermissionTest.java)', 1), ('(77,CAMERA,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(83,CAMERA,/android/hardware/multiprocess/camera/cts/Camera2Activity.java)', 1), ('(25,CAMERA,/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java)', 1), ('(18,CAMERA,/android/permission/cts/CameraPermissionTest.java)', 1), ('(1,RECORD_AUDIO,/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java)', 1), ('(64,CAMERA,/android/hardware/camera2/cts/NativeCameraDeviceTest.java)', 1), ('(6,CAMERA,/android/hardware/camera2/cts/rs/ScriptGraph.java)', 1), ('(1,CAMERA,/android/controls/cts/CtsControlsServiceTest.java)', 1), ('(3,UserManager.DISALLOW,/com/android/cts/deviceandprofileowner/CustomizationRestrictionsTest.java)', 1), ('(1,CAMERA,/android/renderscript/cts/refocus/RefocusFilter.java)', 1), ('(60,CAMERA,/android/media/cts/CamcorderProfileTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(5,UserManager.DISALLOW,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(2,CAMERA,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(1,RECORD_AUDIO,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(34,CAMERA,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(51,CAMERA,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(7,CAMERA,/android/graphics/cts/CameraGpuCtsActivity.java)', 1), ('(5,ACCESS_FINE_LOCATION,/android/permission/cts/BackgroundPermissionsTest.java)', 1), ('(14,ACCESS_COARSE_LOCATION,/android/permission/cts/BackgroundPermissionsTest.java)', 1), ('(4,ACCESS_BACKGROUND_LOCATION,/android/permission/cts/BackgroundPermissionsTest.java)', 1)]"	"[('([9:/com/android/cts/managedprofile/CameraPolicyTest.java]:[CAMERA]:[9]:method_text:[d tearDown() throws Exception {        stopBackgroundThread();        super.tearDown();    }   ])', 1), ('([5:/com/android/cts/managedprofile/CameraPolicyTest.java]:[CAMERA]:[5]:method_text:[ertTrue(mDevicePolicyManager.getCameraDisabled(null));        checkCanOpenCamera(false);    }   ])', 1), ('([16:/com/android/cts/managedprofile/CameraPolicyTest.java]:[CAMERA]:[16]:method_text:[ null;        } catch (InterruptedException e) {            e.printStackTrace();        }    }}])', 1), ('([40:/android/permission/cts/Camera2PermissionTest.java]:[CAMERA]:[40]:method_text:[ to open camera. Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */   ])', 1), ('([8:/android/permission/cts/Camera2PermissionTest.java]:[CAMERA]:[8]:method_text:[t     * {@link android.Manifest.permission#CAMERA} and android.permission.SYSTEM_CAMERA     */   ])', 1), ('([15:/android/permission/cts/Camera2PermissionTest.java]:[CAMERA]:[15]:method_text:[ristics keys that require Permission:     * {@link android.Manifest.permission#CAMERA}.     */   ])', 1), ('([8:/android/permission/cts/Camera2PermissionTest.java]:[CAMERA]:[8]:method_text:[  * Add and remove availability listeners should work without permission.     */    @Presubmit   ])', 1), ('([29:/android/permission/cts/Camera2PermissionTest.java]:[CAMERA]:[29]:method_text:[r.waitForState(STATE_CLOSED, CAMERA_CLOSE_TIMEOUT_MS);            mCamera = null;        }    }}])', 1), ('([77:/com/android/cts/verifier/camera/its/ItsTestActivity.java]:[CAMERA]:[77]:method_text:[era_its_test, R.string.camera_its_test_info, -1);        setPassFailButtonClickListeners();    }}])', 1), ('([83:/android/hardware/multiprocess/camera/cts/Camera2Activity.java]:[CAMERA]:[83]:method_text:[       mErrorServiceConnection.stop();            mErrorServiceConnection = null;        }    }}])', 1), ('([25:/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java]:[CAMERA]:[25]:method_text:[        yScale * height / 2.0f,                near, far);        return projectionMatrix;    }}])', 1), ('([15:/android/permission/cts/CameraPermissionTest.java]:[CAMERA]:[15]:method_text:[ Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */    @MediumTest   ])', 1), (""([3:/android/permission/cts/CameraPermissionTest.java]:[CAMERA]:[3]:method_text:[sn't translating the EPERM error status into            // a SecurityException.        }    }}])"", 1), ('([1:/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java]:[RECORD_AUDIO]:[1]:method_text:[ filter);            mUsbManager.requestPermission(theDevice, permissionIntent);        }    }}])', 1), ('([10:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[CAMERA]:[10]:method_text:[dLibrary(""ctscamera2_jni"");        Log.i(""NativeCameraDeviceTest"", ""after loadlibrary"");    }   ])', 1), ('([4:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[CAMERA]:[4]:method_text:[log for details"",                testCameraDeviceOpenAndCloseNative(mOverrideCameraId));    }   ])', 1), ('([4:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[CAMERA]:[4]:method_text:[details"",                testCameraDeviceCreateCaptureRequestNative(mOverrideCameraId));    }   ])', 1), ('([4:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[CAMERA]:[4]:method_text:[          testCameraDeviceSessionOpenAndCloseNative(mPreviewSurface, mOverrideCameraId));    }   ])', 1), ('([4:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[CAMERA]:[4]:method_text:[                testCameraDeviceSimplePreviewNative(mPreviewSurface, mOverrideCameraId));    }   ])', 1), ('([4:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[CAMERA]:[4]:method_text:[ePreviewWithSessionParametersNative(mPreviewSurface,                mOverrideCameraId));    }   ])', 1), ('([4:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[CAMERA]:[4]:method_text:[ceSharedOutputUpdate(mPreviewSurface, outputSurface,                mOverrideCameraId));    }   ])', 1), ('([4:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[CAMERA]:[4]:method_text:[     testCameraDeviceLogicalPhysicalStreamingNative(mPreviewSurface, mOverrideCameraId));    }   ])', 1), ('([4:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[CAMERA]:[4]:method_text:[      testCameraDeviceLogicalPhysicalSettingsNative(mPreviewSurface, mOverrideCameraId));    }   ])', 1), ('([22:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[CAMERA]:[22]:method_text:[    private static native boolean testCameraDeviceCaptureFailureNative(String overrideCameraId);}])', 1), ('([6:/android/hardware/camera2/cts/rs/ScriptGraph.java]:[CAMERA]:[6]:method_text:[      try {            close();        } finally {            super.finalize();        }    }}])', 1), ('([1:/android/controls/cts/CtsControlsServiceTest.java]:[CAMERA]:[1]:method_text:[ildCamera(true)).build());        assertControlsList(loadedControls, expectedControls);    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/CustomizationRestrictionsTest.java]:[UserManager.DISALLOW]:[3]:method_text:[ }        assertFalse(mUserManager.hasUserRestriction(UserManager.DISALLOW_SET_WALLPAPER));    }}])', 1), ('([1:/android/renderscript/cts/refocus/RefocusFilter.java]:[CAMERA]:[1]:method_text:[ filterLayerInFrontOfFocalDepth();  protected abstract void finalizeFuzzyImageUsingSharpImage();}])', 1), ('([37:/android/media/cts/CamcorderProfileTest.java]:[CAMERA]:[37]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([3:/android/media/cts/CamcorderProfileTest.java]:[CAMERA]:[3]:method_text:[ure(PackageManager.FEATURE_CAMERA)) {            return;        }        checkGet(-1);    }   ])', 1), ('([20:/android/media/cts/CamcorderProfileTest.java]:[CAMERA]:[20]:method_text:[TY_TIME_LAPSE_LOW) ||                (quality == CamcorderProfile.QUALITY_TIME_LAPSE_HIGH);    }}])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([5:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[UserManager.DISALLOW]:[5]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([2:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[CAMERA]:[2]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[RECORD_AUDIO]:[1]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([5:/android/hardware/cts/Camera_SizeTest.java]:[CAMERA]:[5]:method_text:[float ASPECT_RATIO_TOLERANCE = 0.05f;    private static final String TAG = ""Camera_SizeTest"";   ])', 1), ('([11:/android/hardware/cts/Camera_SizeTest.java]:[CAMERA]:[11]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}     */   ])', 1), ('([18:/android/hardware/cts/Camera_SizeTest.java]:[CAMERA]:[18]:method_text:[st = new Camera_SizeTest();        test.setName(testName);        testSuite.addTest(test);    }}])', 1), ('([18:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[CAMERA]:[18]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([3:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[CAMERA]:[3]:method_text:[t.JPEG);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([30:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[CAMERA]:[30]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([7:/android/graphics/cts/CameraGpuCtsActivity.java]:[CAMERA]:[7]:method_text:[ive void nDestroyRenderer(long renderer);    private static native int nDrawFrame(long renderer);}])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[mation();    @After    public void uninstallTestApp() {        uninstallApp(APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ Make sure location switch-op is set if fine location with background access is granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[    * Make sure location switch-op is set if fine and coarse location access is granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[n switch-op is set if fine and coarse location with background access is     * granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[).that(                getAppOp(APP_PKG, ACCESS_COARSE_LOCATION)).isEqualTo(MODE_ALLOWED));    }}])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_COARSE_LOCATION]:[1]:method_text:[mation();    @After    public void uninstallTestApp() {        uninstallApp(APP_PKG);    }   ])', 1), ('([2:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_COARSE_LOCATION]:[2]:method_text:[ }    /**     * Make sure location switch-op is set if no location access is granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_COARSE_LOCATION]:[1]:method_text:[}    /**     * Make sure location switch-op is set if only coarse location is granted     */   ])', 1), ('([2:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_COARSE_LOCATION]:[2]:method_text:[ake sure location switch-op is set if coarse location with background access is granted.     */   ])', 1), ('([2:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_COARSE_LOCATION]:[2]:method_text:[  }    /**     * Make sure location switch-op is set if only fine location is granted     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_COARSE_LOCATION]:[1]:method_text:[ Make sure location switch-op is set if fine location with background access is granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_COARSE_LOCATION]:[1]:method_text:[    * Make sure location switch-op is set if fine and coarse location access is granted.     */   ])', 1), ('([2:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_COARSE_LOCATION]:[2]:method_text:[n switch-op is set if fine and coarse location with background access is     * granted.     */   ])', 1), ('([2:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_COARSE_LOCATION]:[2]:method_text:[).that(                getAppOp(APP_PKG, ACCESS_COARSE_LOCATION)).isEqualTo(MODE_ALLOWED));    }}])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[mation();    @After    public void uninstallTestApp() {        uninstallApp(APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[  }    /**     * Make sure location switch-op is set if only fine location is granted     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[    * Make sure location switch-op is set if fine and coarse location access is granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[).that(                getAppOp(APP_PKG, ACCESS_COARSE_LOCATION)).isEqualTo(MODE_ALLOWED));    }}])', 1)]"	""	""	"[('CAMERA', 37), ('ACCESS_COARSE_LOCATION', 9), ('ACCESS_FINE_LOCATION', 6), ('ACCESS_BACKGROUND_LOCATION', 4), ('RECORD_AUDIO', 2), ('UserManager.DISALLOW', 2)]"	"[('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 4), ('[android.permission.cts.BackgroundPermissionsTest uninstallTestApp CtsPermissionTestCases]', 3), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfFineAndBgLocPermIsGranted CtsPermissionTestCases]', 3), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfFineCoarseAndBgLocPermIsGranted CtsPermissionTestCases]', 3), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfOnlyFineLocPermIsGranted CtsPermissionTestCases]', 2), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfFineAndCoarseLocPermIsGranted CtsPermissionTestCases]', 2), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfCoarseAndBgLocPermIsGranted CtsPermissionTestCases]', 2), ('[com.android.cts.managedprofile.CameraPolicyTest testDisableCameraInManagedProfile None]', 1), ('[com.android.cts.managedprofile.CameraPolicyTest testEnableCameraInManagedProfile None]', 1), ('[android.permission.cts.Camera2PermissionTest getCameraIdList CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testCameraOpen CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testSystemCameraDiscovery CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testCameraCharacteristicsNeedingPermission CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testAvailabilityCallback CtsPermissionTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsTestActivity ItsTestActivity None]', 1), ('[android.hardware.multiprocess.camera.cts.Camera2Activity getCameraIdListNoLazy CtsCameraTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer doTestSpecificRendering None]', 1), ('[android.permission.cts.CameraPermissionTest testCamera CtsPermissionTestCases]', 1), ('[com.android.cts.verifier.audio.USBRestrictRecordAActivity LocalClickListener None]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceOpenAndClose CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceCreateCaptureRequest CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceSessionOpenAndClose CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceSimplePreview CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDevicePreviewWithSessionParameters CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceSharedOutputUpdate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceLogicalPhysicalStreaming CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceLogicalPhysicalSettings CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceCaptureFailure CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.rs.ScriptGraph isInputFromSurface CtsCameraTestCases]', 1), ('[android.controls.cts.CtsControlsServiceTest testLoadAllAvailable CtsControlsDeviceTestCases]', 1), ('[com.android.cts.deviceandprofileowner.CustomizationRestrictionsTest testDisallowSetWallpaper_allowed None]', 1), ('[android.renderscript.cts.refocus.RefocusFilter finish CtsRenderscriptTestCases]', 1), ('[android.media.cts.CamcorderProfileTest testGet CtsMediaTestCases]', 1), ('[android.media.cts.CamcorderProfileTest testGetWithId CtsMediaTestCases]', 1), ('[android.hardware.cts.Camera_SizeTest testConstructor CtsCameraTestCases]', 1), ('[android.hardware.cts.Camera_SizeTest testMaxAspectRatios CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testJpegZoomCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture CtsCameraTestCases]', 1), ('[android.graphics.cts.CameraGpuCtsActivity waitToFinishRendering CtsGraphicsTestCases]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpGetsDowngradedWhenBgPermIsNotRequestedAnymore CtsPermissionTestCases]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfNoLocPermIsGranted CtsPermissionTestCases]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfOnlyCoarseLocPermIsGranted CtsPermissionTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.2"	"3.9.2"	"C-1-3"	"3.9.2/C-1-3"	"03090200.670103"	"""C-1-3] MUST use an icon badge (similar to the AOSP upstream work badge) to represent the managed applications and widgets and other badged UI elements like Recents &amp; Notifications."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.1  . These are in the Android source tree at"	"7.1.4.1"	"C-2-2"	"7.1.4.1/C-2-2"	"07010401.670202"	"""C-2-2] MUST support the EGL_KHR_image, EGL_KHR_image_base, EGL_ANDROID_image_native_buffer, EGL_ANDROID_get_native_client_buffer, EGL_KHR_wait_sync, EGL_KHR_get_all_proc_addresses, EGL_ANDROID_presentation_time, EGL_KHR_swap_buffers_with_damage, EGL_ANDROID_recordable, and EGL_ANDROID_GLES_layers extensions."""	""	""	"EGL_KHR_ EGL_ANDROID_GLES_ EGL_ANDROID_"	""	""	""	""	"[('android.opengl.cts.OpenGlEsVersionTest', 5), ('android.view.cts.TextureViewCtsActivity', 1), ('android.graphics.cts.EGL14Test', 1), ('android.graphics.cts.ASurfaceTextureTest', 1), ('android.graphics.cts.ANativeWindowTest', 1), ('android.graphics.cts.EGL15Test', 1)]"	"[('eglGetError', 15), ('TimeoutException', 4), ('getWindow', 4), ('getSimpleName', 4), ('setup', 4), ('countDown', 3), ('onDestroy', 2), ('onEnterAnimationComplete', 2), ('waitForEnterAnimationComplete', 2), ('getDecorView', 2), ('getTextureView', 2), ('run', 2), ('waitForSurface', 2), ('initGl', 2), ('teardown', 2), ('Object', 1), ('start', 1), ('getLooper', 1), ('setWideColorGamut', 1), ('getColorMode', 1), ('getWidth', 1), ('getHeight', 1), ('initGLExtensionUnsupported', 1), ('await', 1)]"	"[('CtsOpenGLTestCases', 5), ('CtsGraphicsTestCases', 4), ('CtsViewTestCases', 1)]"	""	"android.opengl.cts.OpenGlEsVersionTest"	"teardown"	"CtsOpenGLTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TextureViewCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL14Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ASurfaceTextureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ANativeWindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL15Test.java', 1)]"	"[('(2,EGL_KHR_,/android/view/cts/TextureViewCtsActivity.java)', 1), ('(2,EGL_KHR_,/android/graphics/cts/EGL14Test.java)', 1), ('(2,EGL_KHR_,/android/graphics/cts/ASurfaceTextureTest.java)', 1), ('(2,EGL_KHR_,/android/graphics/cts/ANativeWindowTest.java)', 1), ('(2,EGL_KHR_,/android/graphics/cts/EGL15Test.java)', 1), ('(14,EGL_KHR_,/android/opengl/cts/OpenGlEsVersionTest.java)', 1), ('(7,EGL_ANDROID_,/android/opengl/cts/OpenGlEsVersionTest.java)', 1)]"	"[('([2:/android/view/cts/TextureViewCtsActivity.java]:[EGL_KHR_]:[2]:method_text:[FACE_TYPE, EGL10.EGL_WINDOW_BIT,                    EGL10.EGL_NONE            };        }    }}])', 1), ('([2:/android/graphics/cts/EGL14Test.java]:[EGL_KHR_]:[2]:method_text:[Exception(""eglDestroyContext failed"");        }        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([2:/android/graphics/cts/ASurfaceTextureTest.java]:[EGL_KHR_]:[2]:method_text:[mEglPbuffer, mEglContext)) {      throw new RuntimeException(""eglMakeCurrent failed"");    }  } ])', 1), ('([2:/android/graphics/cts/ANativeWindowTest.java]:[EGL_KHR_]:[2]:method_text:[EglContext)) {            throw new RuntimeException(""eglMakeCurrent failed"");        }    }   ])', 1), ('([2:/android/graphics/cts/EGL15Test.java]:[EGL_KHR_]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_KHR_]:[3]:method_text:[ns, requiredExtension));            }        }    }    @CddTest(requirement=""7.1.4.1/C-6-1"")   ])', 1), ('([7:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_KHR_]:[7]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/H-1-1"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_KHR_]:[4]:method_text:[ager();        return pm.hasSystemFeature(PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE);    }}])', 1), ('([2:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_ANDROID_]:[2]:method_text:[ns, requiredExtension));            }        }    }    @CddTest(requirement=""7.1.4.1/C-6-1"")   ])', 1), ('([5:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_ANDROID_]:[5]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/H-1-1"")   ])', 1)]"	""	""	"[('EGL_KHR_', 8), ('EGL_ANDROID_', 2)]"	"[('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensionsForVrHighPerformance CtsOpenGLTestCases]', 2), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensions CtsOpenGLTestCases]', 2), ('[android.view.cts.TextureViewCtsActivity glFinish CtsViewTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForWideColorDisplay CtsOpenGLTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.2  .  These are in the Android source tree at"	"7.1.4.2"	"C-1-11"	"7.1.4.2/C-1-11"	"07010402.670111"	"""C-1-11] MUST NOT enumerate support for the VK_KHR_video_queue, VK_KHR_video_decode_queue, or VK_KHR_video_encode_queue extensions."""	""	""	"KHR_"	""	""	""	""	"[('android.opengl.cts.OpenGlEsVersionTest', 4), ('android.graphics.cts.VulkanFeaturesTest', 2), ('android.view.cts.TextureViewCtsActivity', 1), ('com.android.cts.deviceinfo.VulkanDeviceInfo', 1), ('android.graphics.cts.EGL14Test', 1), ('android.graphics.cts.ASurfaceTextureTest', 1), ('android.graphics.cts.ANativeWindowTest', 1), ('android.graphics.cts.EGL15Test', 1), ('android.opengl.cts.OpenGlEsVersionCtsActivity', 1)]"	"[('endGroup', 33), ('length', 18), ('eglGetError', 15), ('endArray', 11), ('startGroup', 10), ('main', 5), ('countDown', 4), ('TimeoutException', 4), ('getWindow', 4), ('getSimpleName', 4), ('setup', 4), ('printStackTrace', 3), ('onPause', 3), ('onDestroy', 2), ('onEnterAnimationComplete', 2), ('waitForEnterAnimationComplete', 2), ('getDecorView', 2), ('getTextureView', 2), ('run', 2), ('waitForSurface', 2), ('initGl', 2), ('nativeGetVkJSON', 2), ('teardown', 2), ('checkAepEs31Support', 2), ('Object', 1), ('start', 1), ('getLooper', 1), ('setWideColorGamut', 1), ('getColorMode', 1), ('getWidth', 1), ('getHeight', 1), ('initGLExtensionUnsupported', 1), ('await', 1), ('getIntent', 1), ('Renderer', 1), ('getVersionString', 1), ('getExtensionsString', 1), ('getAepEs31Support', 1), ('EmitVertex', 1), ('glCreateProgram', 1)]"	"[('CtsGraphicsTestCases', 6), ('CtsOpenGLTestCases', 5), ('CtsViewTestCases', 1)]"	""	"android.opengl.cts.OpenGlEsVersionTest"	"glCreateProgram"	"CtsOpenGLTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TextureViewCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-device-info/src/com/android/cts/deviceinfo/VulkanDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL14Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ASurfaceTextureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ANativeWindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL15Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionCtsActivity.java', 1)]"	"[('(2,KHR_,/android/view/cts/TextureViewCtsActivity.java)', 1), ('(9,KHR_,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(20,KHR_,/com/android/cts/deviceinfo/VulkanDeviceInfo.java)', 1), ('(2,KHR_,/android/graphics/cts/EGL14Test.java)', 1), ('(2,KHR_,/android/graphics/cts/ASurfaceTextureTest.java)', 1), ('(2,KHR_,/android/graphics/cts/ANativeWindowTest.java)', 1), ('(2,KHR_,/android/graphics/cts/EGL15Test.java)', 1), ('(4,KHR_,/android/opengl/cts/OpenGlEsVersionCtsActivity.java)', 1), ('(16,KHR_,/android/opengl/cts/OpenGlEsVersionTest.java)', 1)]"	"[('([2:/android/view/cts/TextureViewCtsActivity.java]:[KHR_]:[2]:method_text:[FACE_TYPE, EGL10.EGL_WINDOW_BIT,                    EGL10.EGL_NONE            };        }    }}])', 1), ('([4:/android/graphics/cts/VulkanFeaturesTest.java]:[KHR_]:[4]:method_text:[viceExtension(""VK_KHR_incremental_present"", 1);    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([5:/android/graphics/cts/VulkanFeaturesTest.java]:[KHR_]:[5]:method_text:[ {            devices[i] = devicesArray.getJSONObject(i);        }        return devices;    }}])', 1), ('([20:/com/android/cts/deviceinfo/VulkanDeviceInfo.java]:[KHR_]:[20]:method_text:[unknown key name: "" + name);        }    }    private static native String nativeGetVkJSON();}])', 1), ('([2:/android/graphics/cts/EGL14Test.java]:[KHR_]:[2]:method_text:[Exception(""eglDestroyContext failed"");        }        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([2:/android/graphics/cts/ASurfaceTextureTest.java]:[KHR_]:[2]:method_text:[mEglPbuffer, mEglContext)) {      throw new RuntimeException(""eglMakeCurrent failed"");    }  } ])', 1), ('([2:/android/graphics/cts/ANativeWindowTest.java]:[KHR_]:[2]:method_text:[EglContext)) {            throw new RuntimeException(""eglMakeCurrent failed"");        }    }   ])', 1), ('([2:/android/graphics/cts/EGL15Test.java]:[KHR_]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionCtsActivity.java]:[KHR_]:[4]:method_text:[           GLES31.glDeleteProgram(program);            }            return true;        }    }}])', 1), ('([2:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[2]:method_text:[s, es31RequiredList[i]));        }    }    @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[3]:method_text:[ns, requiredExtension));            }        }    }    @CddTest(requirement=""7.1.4.1/C-6-1"")   ])', 1), ('([7:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[7]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/H-1-1"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[4]:method_text:[ager();        return pm.hasSystemFeature(PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE);    }}])', 1)]"	""	""	"[('KHR_', 13)]"	"[('[android.view.cts.TextureViewCtsActivity glFinish CtsViewTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanRequiredExtensions CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanBlockedExtensions CtsGraphicsTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensionsForVrHighPerformance CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForWideColorDisplay CtsOpenGLTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.1.1  . The"	"3.9.1.1"	"C-1-2"	"3.9.1.1/C-1-2"	"03090101.670102"	"""C-1-2] MUST require some affirmative action before or during the provisioning process to consent to the app being set as Device Owner. Consent can be via user action or by some programmatic means but appropriate disclosure notice (as referenced in AOSP) MUST be shown before device owner provisioning is initiated. Also, the programmatic device owner consent mechanism used (by enterprises) for device owner provisioning MUST NOT interfere with the Out-Of-Box Experience for non-enterprise use."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.5.2  . Application Hibernation"	"3.5.2"	"C-1-3"	"3.5.2/C-1-3"	"03050200.670103"	"""C-1-3]. | C-1-3] MUST only apply restrictions affecting all device users when there is evidence that the package has not been used by ANY user for some period of time. This duration is STRONGLY RECOMMENDED to be one month or longer."""	""	""	"ANY RECOMMENDED"	""	""	""	""	"[('android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest', 10), ('android.media.cts.MediaCodecTest', 5), ('android.media.cts.AudioPlaybackConfigurationTest', 4), ('android.widget.cts.SearchView_CursorTest', 4), ('android.widget.cts.SimpleCursorAdapterTest', 3), ('android.view.inputmethod.cts.InputConnectionWrapperTest', 3), ('android.jdwptunnel.cts.JdwpTunnelTest', 3), ('android.media.cts.AudioManagerTest', 2), ('android.os.cts.ProcessTest', 2), ('android.media.cts.SystemMediaRouter2Test', 1), ('android.graphics.pdf.cts.Utils', 1), ('android.telephony.cts.CellBroadcastDataMigrationTest', 1), ('com.android.suspendapps.suspendtestapp.TestService', 1), ('android.contentcaptureservice.cts.AbstractRootViewActivity', 1), ('com.android.cts.managedprofile.CameraPolicyTest', 1), ('android.provider.cts.simphonebook.SimPhonebookRequirementsRule', 1), ('com.android.compatibility.common.util.SafeCleanerRuleTest', 1), ('com.android.cts.isolatedsplitapp.feature_a.FeatureAReceiver', 1), ('com.android.server.cts.device.statsdatom.StatsdSyncAdapter', 1), ('android.server.wm.AppConfigurationTests', 1), ('android.devicepolicy.cts.AppUriAuthenticationPolicyTest', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer', 1), ('android.media.cts.DecodeEditEncodeTest', 1), ('android.permission.cts.CameraPermissionTest', 1), ('com.android.cts.verifier.ReportExporter', 1), ('android.opengl2.cts.reference.GLReferenceBenchmark', 1)]"	"[('getWidth', 12), ('getHeight', 10), ('setUp', 7), ('getContext', 7), ('getResources', 6), ('getName', 5), ('getInstrumentation', 5), ('getPackageName', 5), ('getClass', 4), ('Object', 4), ('onEnterAnimationComplete', 4), ('getGrandParent', 4), ('now', 4), ('recycle', 3), ('getTargetContext', 3), ('tearDown', 3), ('getSimpleName', 3), ('enoughToFilter', 3), ('getGrandGrandParent', 3), ('getAutofillId', 3), ('stream', 3), ('flush', 2), ('run', 2), ('getSystem', 2), ('toLowerCase', 2), ('setup', 2), ('onResume', 2), ('getRootView', 2), ('getParent', 2), ('getSubscriptionInfoForRemovableSims', 2), ('size', 2), ('moveToHomeScreen', 2), ('name', 2), ('findFirst', 2), ('trim', 2), ('notify', 2), ('getCacheDir', 1), ('Matrix', 1), ('width', 1), ('height', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getPackageManager', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('getChildCount', 1), ('getCursor', 1), ('getActivity', 1), ('Stub', 1), ('onCreate', 1), ('SimPhonebookRequirementsRule', 1), ('before', 1), ('getApplicationContext', 1), ('getSupportedModemCount', 1), ('getRemovableSimSlotCount', 1), ('makeSimpleCursorAdapter', 1), ('evaluate', 1), ('countDown', 1), ('Bundle', 1), ('resetCountDownLatch', 1), ('getCount', 1), ('getDevice', 1), ('virtualMachineManager', 1), ('attachingConnectors', 1), ('transport', 1), ('defaultArguments', 1), ('eventRequestManager', 1), ('suspend', 1), ('allClasses', 1), ('createClassPrepareRequest', 1), ('enable', 1), ('resume', 1), ('eventQueue', 1), ('remove', 1), ('request', 1), ('referenceType', 1), ('setUpExtrinsics', 1), ('getLocation', 1), ('getRingRotation', 1), ('doPreRenderingSetup', 1), ('getExternalStorageDirectory', 1), ('toString', 1), ('onShutter', 1), ('ServiceConnection', 1), ('wait', 1), ('GLReferenceBenchmark', 1)]"	"[('CtsMediaTestCases', 13), ('CtsWidgetTestCases', 7), ('CtsInputMethodTestCases', 3), ('CtsJdwpTunnelHostTestCases', 3), ('CtsPdfTestCases', 1), ('CtsTelephonyTestCases', 1), ('CtsContentCaptureServiceTestCases', 1), ('CtsSimPhonebookProviderTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsDevicePolicyTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsOpenGlPerf2TestCases', 1)]"	""	"android.media.cts.MediaCodecTest"	"GLReferenceBenchmark"	"CtsMediaTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SimpleCursorAdapterTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/ProcessTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SystemMediaRouter2Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellBroadcastDataMigrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/test-apps/SuspendTestApp/src/com/android/suspendapps/suspendtestapp/TestService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/AbstractRootViewActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CameraPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/tests/src/com/android/compatibility/common/util/SafeCleanerRuleTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_a/src/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/StatsdSyncAdapter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/CameraPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/ReportExporter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/openglperf2/src/android/opengl2/cts/reference/GLReferenceBenchmark.java', 1)]"	"[('(1,ANY,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(1,ANY,/android/graphics/pdf/cts/Utils.java)', 1), ('(5,ANY,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(2,ANY,/android/media/cts/AudioManagerTest.java)', 1), ('(1,ANY,/android/telephony/cts/CellBroadcastDataMigrationTest.java)', 1), ('(8,ANY,/android/widget/cts/SearchView_CursorTest.java)', 1), ('(2,ANY,/com/android/suspendapps/suspendtestapp/TestService.java)', 1), ('(2,ANY,/android/contentcaptureservice/cts/AbstractRootViewActivity.java)', 1), ('(2,ANY,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(1,ANY,/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java)', 1), ('(16,ANY,/android/widget/cts/SimpleCursorAdapterTest.java)', 1), ('(1,ANY,/com/android/compatibility/common/util/SafeCleanerRuleTest.java)', 1), ('(13,ANY,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(1,ANY,/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java)', 1), ('(1,ANY,/com/android/server/cts/device/statsdatom/StatsdSyncAdapter.java)', 1), ('(6,ANY,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(1,ANY,/android/server/wm/AppConfigurationTests.java)', 1), ('(1,ANY,/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java)', 1), ('(1,ANY,/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java)', 1), ('(3,ANY,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(1,ANY,/android/permission/cts/CameraPermissionTest.java)', 1), ('(2,ANY,/com/android/cts/verifier/ReportExporter.java)', 1), ('(10,ANY,/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java)', 1), ('(2,ANY,/android/os/cts/ProcessTest.java)', 1), ('(1,ANY,/android/opengl2/cts/reference/GLReferenceBenchmark.java)', 1), ('(6,ANY,/android/media/cts/MediaCodecTest.java)', 1)]"	"[('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[ANY]:[1]:method_text:[           if (h != null) {                h.getLooper().quit();            }        }    }   ])', 2), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[ANY]:[1]:method_text:[nd = true;                break;            }        }        assertTrue(routeFound);    }   ])', 1), ('([1:/android/graphics/pdf/cts/Utils.java]:[ANY]:[1]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([2:/android/media/cts/AudioPlaybackConfigurationTest.java]:[ANY]:[2]:method_text:[using SoundPool"",                nbActivePlayersBeforeStart, nbActivePlayersAfterPause);    }   ])', 1), ('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[ANY]:[1]:method_text:[t HAL, skipping test "" + testName);            return false;        }        return true;    }}])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[ANY]:[1]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[ANY]:[1]:method_text:[        if (!isMusicPlayingBeforeTest) {            assertMusicActive(false);        }    }   ])', 1), ('([1:/android/telephony/cts/CellBroadcastDataMigrationTest.java]:[ANY]:[1]:method_text:[should be headless without any other activities, services or providers to handle alerts.     */   ])', 1), ('([2:/android/widget/cts/SearchView_CursorTest.java]:[ANY]:[2]:method_text:[    mSearchView.setSuggestionsAdapter(mSuggestionsAdapter);        });    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/SearchView_CursorTest.java]:[ANY]:[1]:method_text:[ry(""Di"", false);        verify(mockQueryTextListener, times(1)).onQueryTextChange(""Di"");    }   ])', 1), ('([3:/android/widget/cts/SearchView_CursorTest.java]:[ANY]:[3]:method_text:[times(1)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }   ])', 1), ('([2:/android/widget/cts/SearchView_CursorTest.java]:[ANY]:[2]:method_text:[, times(2)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }}])', 1), ('([2:/com/android/suspendapps/suspendtestapp/TestService.java]:[ANY]:[2]:method_text:[{            sRegisteredReporters.clear();        }        return super.onUnbind(intent);    }}])', 1), ('([2:/android/contentcaptureservice/cts/AbstractRootViewActivity.java]:[ANY]:[2]:method_text:[ses.     *     */    protected abstract void setContentViewOnCreate(Bundle savedInstanceState);}])', 1), ('([2:/com/android/cts/managedprofile/CameraPolicyTest.java]:[ANY]:[2]:method_text:[ null;        } catch (InterruptedException e) {            e.printStackTrace();        }    }}])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java]:[ANY]:[1]:method_text:[.getSubscriptionInfoForRemovableSims().size())                .isAtLeast(mMinimumSimCount);    }}])', 1), ('([2:/android/widget/cts/SimpleCursorAdapterTest.java]:[ANY]:[2]:method_text:[ontext, R.layout.cursoradapter_item0, mCursor, COLUMNS_FROM, VIEWS_TO);    }    @UiThreadTest   ])', 1), ('([8:/android/widget/cts/SimpleCursorAdapterTest.java]:[ANY]:[8]:method_text:[  } catch (IllegalStateException e) {            // expected        }    }    @UiThreadTest   ])', 1), ('([6:/android/widget/cts/SimpleCursorAdapterTest.java]:[ANY]:[6]:method_text:[wBinder(null);        assertNull(simpleCursorAdapter.getViewBinder());    }    @UiThreadTest   ])', 1), ('([1:/com/android/compatibility/common/util/SafeCleanerRuleTest.java]:[ANY]:[1]:method_text:[lable<List<Throwable>> mGoodGuyExtraExceptions2;    @Mock private Statement mGoodGuyStatement;   ])', 1), ('([2:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[ANY]:[2]:method_text:[umentCaptor;@SmallTest@RunWith(AndroidJUnit4.class)public class InputConnectionWrapperTest {   ])', 1), ('([8:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[ANY]:[8]:method_text:[ */);        verify(inputConnection, times(1)).commitContent(inputContentInfo, 0, null);    }   ])', 1), ('([3:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[ANY]:[3]:method_text:[     expectThrows(IllegalArgumentException.class,  ()-> wrapper.getTextBeforeCursor(-1, 0));    }}])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java]:[ANY]:[1]:method_text:[(                ""feature_a"", context.getResources().getString(R.string.feature_a_string));    }}])', 1), ('([1:/com/android/server/cts/device/statsdatom/StatsdSyncAdapter.java]:[ANY]:[1]:method_text:[              sLatch = new CountDownLatch(1);            }        }        return sLatch;    }}])', 1), ('([3:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[ANY]:[3]:method_text:[of the activity     * class and put and wait for a breakpoint on the onCreate function.     */   ])', 1), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[ANY]:[1]:method_text:[ould race with the JDWP handshake. This could     * confuse clients. See bug: 178655046     */   ])', 1), ('([2:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[ANY]:[2]:method_text:[ sent big-endian so first byte has sign bit.        assertTrue((is.read() & 0x80) == 0x80);    }}])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[ANY]:[1]:method_text:[lues reported in fullscreen should be larger than those reported in     * docked state.     */   ])', 1), ('([1:/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java]:[ANY]:[1]:method_text:[.containsKey(URI2)).isTrue();        assertThat(urisToAlias.get(URI2)).isEqualTo(ALIAS);    }   ])', 1), ('([1:/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java]:[ANY]:[1]:method_text:[        yScale * height / 2.0f,                near, far);        return projectionMatrix;    }}])', 1), ('([3:/android/media/cts/DecodeEditEncodeTest.java]:[ANY]:[3]:method_text:[                  throw new RuntimeException(ioe);                }            }        }    }}])', 1), ('([1:/android/permission/cts/CameraPermissionTest.java]:[ANY]:[1]:method_text:[ Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */    @MediumTest   ])', 1), ('([2:/com/android/cts/verifier/ReportExporter.java]:[ANY]:[2]:method_text:[sult)                .setPositiveButton(android.R.string.ok, null)                .show();    }}])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[ethodManager#getInputMethodList()} does not contain     * {@link Ime1Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[MethodManager#getEnabledInputMethodList()} contains     * {@link Ime1Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[nager#getEnabledInputMethodList()} does not contain     * {@link Ime1Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[k InputMethodManager#getInputMethodList()} contains     * {@link Ime2Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[ethodManager#getInputMethodList()} does not contain     * {@link Ime2Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[MethodManager#getEnabledInputMethodList()} contains     * {@link Ime2Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[nager#getEnabledInputMethodList()} does not contain     * {@link Ime2Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[oolean)} for     * {@link Ime1Constants#IME_ID} returns the implicitly enabled subtype.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[ for     * {@link Ime1Constants#IME_ID} does not return the implicitly enabled subtype.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[ANY]:[1]:method_text:[stream())                .anyMatch(InputMethodSubtype::overridesImplicitlyEnabledSubtype));    }}])', 1), ('([1:/android/os/cts/ProcessTest.java]:[ANY]:[1]:method_text:[ection != null) {            getContext().unbindService(mSecondaryConnection);        }    }   ])', 1), (""([1:/android/os/cts/ProcessTest.java]:[ANY]:[1]:method_text:[and any additional processes created by that app be able to kill each other's processes.     */   ])"", 1), ('([1:/android/opengl2/cts/reference/GLReferenceBenchmark.java]:[ANY]:[1]:method_text:[   super(GLReferenceActivity.class);    }    /**     * Runs the reference benchmark.     */   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[ANY]:[1]:method_text:[ createInputSurface() with a non-Surface color format is not required to throw exception     */   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[ANY]:[1]:method_text:[ twice throws exception     * <br> submitting a frame after EOS throws exception [TODO]     */   ])', 1), ('([2:/android/media/cts/MediaCodecTest.java]:[ANY]:[2]:method_text:[ (inputSurface != null) {                inputSurface.release();            }        }    }   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[ANY]:[1]:method_text:[ As of Q, any codec of type ""audio/raw"" must support PCM encoding float.     */    @MediumTest   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[ANY]:[1]:method_text:[ {                codec.stop();                codec.release();            }        }    }   ])', 1)]"	""	""	"[('ANY', 53)]"	"[('[android.media.cts.SystemMediaRouter2Test testGetRoutes CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testCallbackMediaPlayerHandler CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testCallbackMediaPlayerRelease CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetterSoundPool CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetAudioDeviceInfoMediaPlayerStart CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testVolume CtsMediaTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionFiltering CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionSelection CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionEnterKey CtsWidgetTestCases]', 1), ('[com.android.suspendapps.suspendtestapp.TestService isPackageSuspended None]', 1), ('[com.android.cts.managedprofile.CameraPolicyTest testEnableCameraInManagedProfile None]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testBindView CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testAccessViewBinder CtsWidgetTestCases]', 1), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInputConnectionWrapper CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInvalidGetTextBeforeOrAfterCursorRequest CtsInputMethodTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest disable CtsJdwpTunnelHostTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest testAttachDebuggerToProfileableApp CtsJdwpTunnelHostTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest testDdmsWaitsForHandshake CtsJdwpTunnelHostTestCases]', 1), ('[android.server.wm.AppConfigurationTests getDefaultDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.devicepolicy.cts.AppUriAuthenticationPolicyTest getAppAnyUrisMappings_multipleUrisSameAlias_containsBothUris CtsDevicePolicyTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer doTestSpecificRendering None]', 1), ('[android.media.cts.DecodeEditEncodeTest testVideoEdit720p CtsMediaTestCases]', 1), ('[com.android.cts.verifier.ReportExporter currentTimeMillis None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1InInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1NotInInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1InEnabledInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1NotInEnabledInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme2InInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme2NotInInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme2InEnabledInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme2NotInEnabledInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1ImplicitlyEnabledSubtypeExists None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1ImplicitlyEnabledSubtypeNotExist None]', 1), ('[android.os.cts.ProcessTest testMiscMethods None]', 1), ('[android.media.cts.MediaCodecTest testException CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testCreateInputSurfaceErrors CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testAbruptStop CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testCryptoException CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testFlushAfterFirstBuffer CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.3  . The user affordance MUST be accessible from the lockscreen"	"3.9.3"	"C-1-1"	"3.9.3/C-1-1"	"03090300.670101"	"""C-1-1] MUST provide a user affordance to logout from the current user and switch back to the primary user in multiple-user session when isLogoutEnabled returns true. The user affordance MUST be accessible from the lockscreen without unlocking the device. If device implementations declare android.software.device_admin and provide an on-device user affordance to add additional secondary Users, they:"""	""	""	"android.software.device"	""	""	""	""	"[('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('android.appsecurity.cts.ResumeOnRebootHostTest', 1), ('android.appsecurity.cts.DirectBootHostTest', 1), ('com.google.android.cts.settings.PrivacyDeviceOwnerTest', 1), ('com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule', 1)]"	"[('getDevice', 10), ('setUp', 5), ('getBuild', 4), ('getMaxNumberOfUsersSupported', 2), ('getAbi', 2), ('getInstalledPackageNames', 1), ('tearDown', 1), ('getCurrentUser', 1), ('Statement', 1), ('evaluate', 1), ('getApiLevel', 1)]"	"[('CtsDevicePolicyManagerTestCases', 2), ('CtsAppSecurityHostTestCases', 2), ('CtsSettingsHostTestCases', 1)]"	""	"com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule"	"getApiLevel"	"CtsDevicePolicyManagerTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ResumeOnRebootHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/settings/src/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java', 1)]"	"[('(1,android.software.device,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,android.software.device,/android/appsecurity/cts/ResumeOnRebootHostTest.java)', 1), ('(1,android.software.device,/android/appsecurity/cts/DirectBootHostTest.java)', 1), ('(1,android.software.device,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(1,android.software.device,/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java)', 1)]"	"[('([1:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[android.software.device]:[1]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/android/appsecurity/cts/ResumeOnRebootHostTest.java]:[android.software.device]:[1]:method_text:[throws Exception {        removeTestPackages();        deviceRestoreDeviceConfigSync();    }   ])', 1), ('([1:/android/appsecurity/cts/DirectBootHostTest.java]:[android.software.device]:[1]:method_text:[allPackage(OTHER_PKG);    }    /**     * Automotive devices MUST support native FBE.     */   ])', 1), ('([1:/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java]:[android.software.device]:[1]:method_text:[    super.tearDown();    }    /** The case: app is the device owner, has work policy info. */   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java]:[android.software.device]:[1]:method_text:[HOD})    public static @interface IgnoreOnHeadlessSystemUserMode {        String reason();    }}])', 1)]"	""	""	"[('android.software.device', 5)]"	"[('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[android.appsecurity.cts.ResumeOnRebootHostTest removeTestPackages CtsAppSecurityHostTestCases]', 1), ('[com.google.android.cts.settings.PrivacyDeviceOwnerTest isHeadlessSystemUserMode CtsSettingsHostTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule getDisplayName CtsDevicePolicyManagerTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.8.1  . Connectivity Bug Report"	"9.8.1"	"C-1-5"	"9.8.1/C-1-5"	"09080100.670105"	"""C-1-5] MUST NOT include the following in the generated reports: Any kind of information that isn&#39;t directly related to connectivity debugging. Any kind of user-installed application traffic logs or detailed profiles of user-installed applications/packages (UIDs are okay, package names are not). MAY include additional information that is not associated with any user identity. (e.g. vendor logs). If device implementations include additional information (e.g. vendor logs) in bug reports and that information has privacy/security/battery/storage/memory impact, they:"""	""	""	"UID"	""	""	""	""	"[('android.cts.statsdatom.statsd.ProcStateAtomTests', 7), ('com.android.cts.appaccessdata.AccessPrivateDataTest', 4), ('android.server.wm.WindowInputTests', 4), ('android.jobscheduler.cts.shareduidtests.ClipDataJobTest', 3), ('android.packageinstaller.uninstall.cts.UninstallPinnedTest', 3), ('com.android.cts.packagemanager.stats.host.InstalledIncrementalPackageStatsTests', 2), ('android.media.cts.MediaCodecTest', 2), ('android.permission.cts.ShellPermissionTest', 2), ('android.appsecurity.cts.listeningports.ListeningPortsTest', 2), ('android.cts.statsdatom.appexit.AppExitHostTest', 2), ('android.content.pm.cts.InstallSessionParamsUnitTest', 2), ('android.media.cts.AudioPlaybackConfigurationTest', 1), ('com.android.cts.verifier.bluetooth.BleEncryptedServerService', 1), ('android.server.wm.KeyguardLockedTests', 1), ('android.thermal.cts.NativeThermalTest', 1), ('android.os.cts.ProcessTest', 1), ('android.server.wm.lifecycle.ActivityLifecycleTests', 1), ('android.content.cts.MockContentProvider', 1), ('android.provider.cts.SettingsPanelTest', 1), ('android.server.wm.MultiDisplayKeyguardTests', 1), ('android.uirendering.cts.runner.UiRenderingRunner', 1), ('android.mediadrm.cts.MediaDrmMockTest', 1), ('android.app.stubs.InstrumentationTestActivity', 1), ('com.android.cts.appbinding.AppBindingHostTest', 1), ('android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests', 1), ('com.android.cts.verifier.sensors.EventSanitizationTestActivity', 1), ('com.android.cts.helpers.aosp.DefaultCtsPrintHelper', 1), ('android.net.wifi.cts.ConnectedNetworkScorerTest', 1), ('android.keystore.cts.CipherTest', 1), ('android.alarmmanager.cts.BasicApiTests', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofDetectionTest', 1)]"	"[('setUp', 15), ('getContext', 12), ('getInstrumentation', 8), ('getPathSegments', 7), ('getContentResolver', 5), ('getTargetContext', 5), ('crashOnLaunchIfNeeded', 5), ('tearDown', 4), ('getDevice', 4), ('onDestroy', 4), ('onCreate', 3), ('getSimpleName', 3), ('getWritableDatabase', 3), ('trim', 3), ('find', 3), ('close', 2), ('myPid', 2), ('getReadableDatabase', 2), ('SQLiteQueryBuilder', 2), ('getPackageManager', 2), ('waitForActivitiesToComplete', 2), ('onPause', 2), ('onRestart', 2), ('onResume', 2), ('onStart', 2), ('onStop', 2), ('onUserLeaveHint', 2), ('openOptionsMenu', 2), ('run', 2), ('waitForBroadcastIdle', 2), ('get', 2), ('WindowManagerStateHelper', 2), ('BleEncryptedServerService', 1), ('Handler', 1), ('getAdapter', 1), ('supportsSecureLock', 1), ('newSingleThreadExecutor', 1), ('hashCode', 1), ('getMediaDirString', 1), ('MockContentProvider', 1), ('ContentValues', 1), ('moveToNext', 1), ('getFileDescriptor', 1), ('flush', 1), ('wakeUp', 1), ('getWindow', 1), ('getMenuInflater', 1), ('getItemId', 1), ('stream', 1), ('toSet', 1), ('getUidProcessStateChanged', 1), ('getState', 1), ('getNumber', 1), ('StringBuilder', 1), ('toString', 1), ('supports3DES', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('AbandonAllPackageSessionsRule', 1), ('getPackageInstaller', 1), ('toArray', 1), ('getParameters', 1), ('getMySessions', 1), ('getSessionId', 1), ('checkSessionParams', 1), ('getMode', 1), ('getInstallLocation', 1), ('getSize', 1), ('getAppPackageName', 1), ('getOverrideConfig', 1), ('getPackageName', 1), ('setup', 1), ('pressWakeupButton', 1), ('pressUnlockButton', 1), ('launchHomeActivityNoWait', 1), ('waitForIdleSync', 1)]"	"[('CtsStatsdAtomHostTestCases', 9), ('CtsWindowManagerDeviceTestCases', 8), ('CtsMediaTestCases', 3), ('CtsJobSchedulerSharedUidTestCases', 3), ('CtsContentTestCases', 3), ('CtsPackageUninstallTestCases', 3), ('CtsPackageManagerStatsHostTestCases', 2), ('CtsPermissionTestCases', 2), ('CtsThermalTestCases', 1), ('CtsProviderTestCases', 1), ('CtsUiRenderingTestCases', 1), ('CtsMediaDrmTestCases', 1), ('CtsAppBindingHostTestCases', 1), ('CtsWifiTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsAlarmManagerTestCases', 1), ('CtsShortcutManagerTestCases', 1)]"	""	"android.server.wm.WindowInputTests"	"waitForIdleSync"	"CtsWindowManagerDeviceTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/ProcStateAtomTests.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AppAccessData/src/com/android/cts/appaccessdata/AccessPrivateDataTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInputTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/JobSchedulerSharedUid/src/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/uninstall/src/android/packageinstaller/uninstall/cts/UninstallPinnedTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/stats/src/com/android/cts/packagemanager/stats/host/InstalledIncrementalPackageStatsTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ShellPermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ListeningPortsApp/src/android/appsecurity/cts/listeningports/ListeningPortsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/appexit/AppExitHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/InstallSessionParamsUnitTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleEncryptedServerService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/libthermalndk/src/android/thermal/cts/NativeThermalTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/ProcessTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/MockContentProvider.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/SettingsPanelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplayKeyguardTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering27/src/android/uirendering/cts/runner/UiRenderingRunner.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmMockTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/app/src/android/app/stubs/InstrumentationTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appbinding/hostside/src/com/android/cts/appbinding/AppBindingHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/EventSanitizationTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/helpers/default/src/com/android/cts/helpers/aosp/DefaultCtsPrintHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConnectedNetworkScorerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/BasicApiTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofDetectionTest.java', 1)]"	"[('(6,UID,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(53,UID,/com/android/cts/verifier/bluetooth/BleEncryptedServerService.java)', 1), ('(1,UID,/android/server/wm/KeyguardLockedTests.java)', 1), ('(7,UID,/android/thermal/cts/NativeThermalTest.java)', 1), ('(9,UID,/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java)', 1), ('(6,UID,/android/os/cts/ProcessTest.java)', 1), ('(9,UID,/com/android/cts/packagemanager/stats/host/InstalledIncrementalPackageStatsTests.java)', 1), ('(4,UID,/android/media/cts/MediaCodecTest.java)', 1), ('(3,UID,/android/permission/cts/ShellPermissionTest.java)', 1), ('(1,UID,/android/server/wm/lifecycle/ActivityLifecycleTests.java)', 1), ('(1,UID,/android/content/cts/MockContentProvider.java)', 1), ('(27,UID,/android/appsecurity/cts/listeningports/ListeningPortsTest.java)', 1), ('(3,UID,/android/provider/cts/SettingsPanelTest.java)', 1), ('(1,UID,/android/server/wm/MultiDisplayKeyguardTests.java)', 1), ('(3,UID,/android/uirendering/cts/runner/UiRenderingRunner.java)', 1), ('(7,UID,/android/mediadrm/cts/MediaDrmMockTest.java)', 1), ('(8,UID,/android/app/stubs/InstrumentationTestActivity.java)', 1), ('(16,UID,/android/cts/statsdatom/statsd/ProcStateAtomTests.java)', 1), ('(36,UID,/com/android/cts/appaccessdata/AccessPrivateDataTest.java)', 1), ('(2,UID,/com/android/cts/appbinding/AppBindingHostTest.java)', 1), ('(1,UID,/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java)', 1), ('(9,UID,/com/android/cts/verifier/sensors/EventSanitizationTestActivity.java)', 1), ('(3,UID,/com/android/cts/helpers/aosp/DefaultCtsPrintHelper.java)', 1), ('(8,UID,/android/net/wifi/cts/ConnectedNetworkScorerTest.java)', 1), ('(2,UID,/android/keystore/cts/CipherTest.java)', 1), ('(16,UID,/android/cts/statsdatom/appexit/AppExitHostTest.java)', 1), ('(8,UID,/android/content/pm/cts/InstallSessionParamsUnitTest.java)', 1), ('(3,UID,/android/alarmmanager/cts/BasicApiTests.java)', 1), ('(1,UID,/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofDetectionTest.java)', 1), ('(12,UID,/android/packageinstaller/uninstall/cts/UninstallPinnedTest.java)', 1), ('(5,UID,/android/server/wm/WindowInputTests.java)', 1)]"	"[('([2:/android/cts/statsdatom/statsd/ProcStateAtomTests.java]:[UID]:[2]:method_text:[       AtomTestUtils.assertStatesOccurred(stateSet, data, waitTime, PROC_STATE_FUNCTION);    }   ])', 3), ('([6:/android/media/cts/AudioPlaybackConfigurationTest.java]:[UID]:[6]:method_text:[     fail(""Exception thrown during reflection on config privileged fields""+ e);        }    }   ])', 1), ('([53:/com/android/cts/verifier/bluetooth/BleEncryptedServerService.java]:[UID]:[53]:method_text:[Advertiser != null) {            mAdvertiser.stopAdvertising(mAdvertiseCallback);        }    }}])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[UID]:[1]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([7:/android/thermal/cts/NativeThermalTest.java]:[UID]:[7]:method_text:[    /**     * Confirm that we can get thermal status.     *     * @throws Exception     */   ])', 1), ('([1:/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java]:[UID]:[1]:method_text:[_ID);    }    /**     * Test basic granting of URI permissions associated with jobs.     */   ])', 1), (""([4:/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java]:[UID]:[4]:method_text:[orrectly fail when trying to grant permissions to things we don't     * have access to.     */   ])"", 1), ('([4:/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java]:[UID]:[4]:method_text:[d up.        waitPermissionRevoke(mFirstUri, Intent.FLAG_GRANT_WRITE_URI_PERMISSION, 5000);    }}])', 1), (""([6:/android/os/cts/ProcessTest.java]:[UID]:[6]:method_text:[and any additional processes created by that app be able to kill each other's processes.     */   ])"", 1), ('([1:/com/android/cts/packagemanager/stats/host/InstalledIncrementalPackageStatsTests.java]:[UID]:[1]:method_text:[    // Install 2 incremental packages and check if their UIDs are included in the pulled metrics   ])', 1), ('([8:/com/android/cts/packagemanager/stats/host/InstalledIncrementalPackageStatsTests.java]:[UID]:[8]:method_text:[ALL_PACKAGE)));        assertTrue(uidsReported.contains(getAppUid(TEST_INSTALL_PACKAGE2)));    }}])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[UID]:[1]:method_text:[s are thrown from MediaCodec     * methods when called in incorrect operational states.     */   ])', 1), ('([3:/android/media/cts/MediaCodecTest.java]:[UID]:[3]:method_text:[077efecc0b24d02L, 0xace33c1e52e2fb4bL);    /**     * Tests MediaCodec.CryptoException     */   ])', 1), ('([1:/android/permission/cts/ShellPermissionTest.java]:[UID]:[1]:method_text:[oes not have any of the permissions listed in     *   {@link #BLACKLISTED_PERMISSIONS}.     */   ])', 1), ('([2:/android/permission/cts/ShellPermissionTest.java]:[UID]:[2]:method_text:[al permission "" + permission,                    blacklist.contains(permission));        }    }}])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleTests.java]:[UID]:[1]:method_text:[annotation.Group3public class ActivityLifecycleTests extends ActivityLifecycleClientTestBase {   ])', 1), ('([1:/android/content/cts/MockContentProvider.java]:[UID]:[1]:method_text:[xt context) {        return context.getFileStreamPath(""MockContentProvider.crashonlaunch"");    }}])', 1), ('([3:/android/appsecurity/cts/listeningports/ListeningPortsTest.java]:[UID]:[3]:method_text:[e file and the boolean     * values are received as parameters from the host side test.     */   ])', 1), ('([24:/android/appsecurity/cts/listeningports/ListeningPortsTest.java]:[UID]:[24]:method_text:[2*i + 1), 16));            }            return InetAddress.getByAddress(retval);        }    }}])', 1), ('([3:/android/provider/cts/SettingsPanelTest.java]:[UID]:[3]:method_text:[ect(By.pkg(mLauncherPackage).depth(0)), TIMEOUT);    }    // Check correct package is opened   ])', 1), ('([1:/android/server/wm/MultiDisplayKeyguardTests.java]:[UID]:[1]:method_text:[S_KEYGUARD activity on a secondary display is visible (for an     * insecure keyguard).     */   ])', 1), ('([3:/android/uirendering/cts/runner/UiRenderingRunner.java]:[UID]:[3]:method_text:[w wait if necessary        super.waitForActivitiesToComplete();        super.onDestroy();    }}])', 1), ('([7:/android/mediadrm/cts/MediaDrmMockTest.java]:[UID]:[7]:method_text:[an isMockPluginInstalled() {        return MediaDrm.isCryptoSchemeSupported(mockScheme);    }   ])', 1), ('([8:/android/app/stubs/InstrumentationTestActivity.java]:[UID]:[8]:method_text:[mKeyUpList;    }    public List<KeyEvent> getKeyDownList() {        return mKeyDownList;    }}])', 1), ('([4:/android/cts/statsdatom/statsd/ProcStateAtomTests.java]:[UID]:[4]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([2:/android/cts/statsdatom/statsd/ProcStateAtomTests.java]:[UID]:[2]:method_text:[ates.        AtomTestUtils.assertStatesOccurred(stateSet, data, 0, PROC_STATE_FUNCTION);    }   ])', 1), ('([2:/android/cts/statsdatom/statsd/ProcStateAtomTests.java]:[UID]:[2]:method_text:[ists.        AtomTestUtils.assertStatesOccurred(stateSet, data, 0, PROC_STATE_FUNCTION);    }   ])', 1), ('([2:/android/cts/statsdatom/statsd/ProcStateAtomTests.java]:[UID]:[2]:method_text:[.        AtomTestUtils.assertStatesOccurred(stateSet, data, 1_000, PROC_STATE_FUNCTION);    }   ])', 1), (""([2:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[UID]:[2]:method_text:[ntext();    }    /**     * Tests that another app's private data cannot be accessed.     */   ])"", 1), ('([4:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[UID]:[4]:method_text:[ot be able to read qtaguid profile"",            new File(QTAGUID_STATS_FILE).canRead());    }   ])', 1), ('([11:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[UID]:[11]:method_text:[erAppUid));        assertEquals(UNSUPPORTED, TrafficStats.getUidTxPackets(otherAppUid));    }   ])', 1), ('([19:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[UID]:[19]:method_text:[{            throw new IllegalStateException(""Expected package not found: "" + e);        }    }}])', 1), ('([2:/com/android/cts/appbinding/AppBindingHostTest.java]:[UID]:[2]:method_text:[   * Install APK 1 and make it the default SMS app and make sure the service gets bound.     */   ])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[UID]:[1]:method_text:[TestBase {    @Before    public void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([9:/com/android/cts/verifier/sensors/EventSanitizationTestActivity.java]:[UID]:[9]:method_text:[registerListener(listener, sensor);            playSound();        }        return null;    }}])', 1), ('([3:/com/android/cts/helpers/aosp/DefaultCtsPrintHelper.java]:[UID]:[3]:method_text:[on e) {            throw new TestHelperException(""Failed to cancel printing"", e);        }    }}])', 1), ('([8:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[UID]:[8]:method_text:[ilityStatsEntry} retrieved from     * {@link WifiManager.OnWifiUsabilityStatsListener}.     */   ])', 1), ('([2:/android/keystore/cts/CipherTest.java]:[UID]:[2]:method_text:[ close() throws Exception {            mLockCredential.close();        }    }    @Presubmit   ])', 1), ('([4:/android/cts/statsdatom/appexit/AppExitHostTest.java]:[UID]:[4]:method_text:[etPss()).isAtLeast(0);            assertThat(appDied.getRss()).isAtLeast(0);        });    }   ])', 1), ('([12:/android/cts/statsdatom/appexit/AppExitHostTest.java]:[UID]:[12]:method_text:[rue();        final int appUid = Integer.parseInt(matcher.group(1));        return appUid;    }}])', 1), ('([2:/android/content/pm/cts/InstallSessionParamsUnitTest.java]:[UID]:[2]:method_text:[onId) {                return sessionInfo;            }        }        return null;    }   ])', 1), ('([6:/android/content/pm/cts/InstallSessionParamsUnitTest.java]:[UID]:[6]:method_text:[{            if (mIsSet) {                consumer.accept(mValue);            }        }    }}])', 1), ('([3:/android/alarmmanager/cts/BasicApiTests.java]:[UID]:[3]:method_text:[ver::isAlarmed,                ""Exact alarm with work source did not fire as expected"");    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofDetectionTest.java]:[UID]:[1]:method_text:[e mismatch"",                () -> runWithCaller(callerContext, () -> r.run())        );    }   ])', 1), ('([8:/android/packageinstaller/uninstall/cts/UninstallPinnedTest.java]:[UID]:[8]:method_text:[G_ACTIVITY_NEW_TASK);        mContext.startActivity(i);        pinActivity(COMPONENT);    }   ])', 1), ('([2:/android/packageinstaller/uninstall/cts/UninstallPinnedTest.java]:[UID]:[2]:method_text:[      Thread.sleep(5000);        assertTrue(""Package was uninstalled."", isInstalled());    }   ])', 1), ('([2:/android/packageinstaller/uninstall/cts/UninstallPinnedTest.java]:[UID]:[2]:method_text:[      } catch (PackageManager.NameNotFoundException e) {            return false;        }    }}])', 1), ('([2:/android/server/wm/WindowInputTests.java]:[UID]:[2]:method_text:[InputManager.class);        mInstrumentation.waitForIdleSync();        mClickCount = 0;    }   ])', 1), ('([1:/android/server/wm/WindowInputTests.java]:[UID]:[1]:method_text:[            & MotionEvent.FLAG_WINDOW_IS_OBSCURED);        assertEquals(1, mClickCount);    }   ])', 1), ('([1:/android/server/wm/WindowInputTests.java]:[UID]:[1]:method_text:[0, mClickCount);        } finally {            mActivity.stopService(intent);        }    }   ])', 1), ('([1:/android/server/wm/WindowInputTests.java]:[UID]:[1]:method_text:[1, mClickCount);        } finally {            mActivity.stopService(intent);        }    }   ])', 1)]"	""	""	"[('UID', 53)]"	"[('[android.media.cts.AudioPlaybackConfigurationTest testGetterMediaPlayer CtsMediaTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleEncryptedServerService getBluetoothLeAdvertiser None]', 1), ('[android.thermal.cts.NativeThermalTest nativeTestRegisterThermalStatusListener CtsThermalTestCases]', 1), ('[android.jobscheduler.cts.shareduidtests.ClipDataJobTest testClipDataGrant CtsJobSchedulerSharedUidTestCases]', 1), ('[android.jobscheduler.cts.shareduidtests.ClipDataJobTest testClipDataGrantReschedule CtsJobSchedulerSharedUidTestCases]', 1), ('[android.os.cts.ProcessTest testMiscMethods None]', 1), ('[com.android.cts.packagemanager.stats.host.InstalledIncrementalPackageStatsTests testInstalledIncrementalMetricsReported CtsPackageManagerStatsHostTestCases]', 1), ('[android.media.cts.MediaCodecTest testCryptoInfoPattern CtsMediaTestCases]', 1), ('[android.permission.cts.ShellPermissionTest testBlacklistedPermissions CtsPermissionTestCases]', 1), ('[android.content.cts.MockContentProvider exists CtsContentTestCases]', 1), ('[android.appsecurity.cts.listeningports.ListeningPortsTest testNoAccessibleListeningPorts None]', 1), ('[android.provider.cts.SettingsPanelTest isCar CtsProviderTestCases]', 1), ('[android.server.wm.MultiDisplayKeyguardTests supportsMultiDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.mediadrm.cts.MediaDrmMockTest isMockPluginInstalled CtsMediaDrmTestCases]', 1), ('[android.app.stubs.InstrumentationTestActivity isOnCreateCalled None]', 1), ('[android.cts.statsdatom.statsd.ProcStateAtomTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.ProcStateAtomTests testForegroundService CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.ProcStateAtomTests testForeground CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.ProcStateAtomTests testBackground CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.ProcStateAtomTests testTop CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.ProcStateAtomTests testTopSleeping CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.ProcStateAtomTests testCached CtsStatsdAtomHostTestCases]', 1), ('[com.android.cts.appaccessdata.AccessPrivateDataTest testAccessProcQtaguidTrafficStatsFailed None]', 1), ('[com.android.cts.appaccessdata.AccessPrivateDataTest testAccessPrivateTrafficStats None]', 1), ('[com.android.cts.appaccessdata.AccessPrivateDataTest testTrafficStatsStatsUidSelf None]', 1), ('[com.android.cts.appbinding.AppBindingHostTest isSmsCapable CtsAppBindingHostTestCases]', 1), ('[com.android.cts.verifier.sensors.EventSanitizationTestActivity EventSanitizationTestActivity None]', 1), ('[com.android.cts.helpers.aosp.DefaultCtsPrintHelper uptimeMillis None]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest isNotNull CtsWifiTestCases]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked CtsKeystoreTestCases]', 1), ('[android.cts.statsdatom.appexit.AppExitHostTest testLogStatsdPermChanged CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.appexit.AppExitHostTest testLogStatsdOther CtsStatsdAtomHostTestCases]', 1), ('[android.content.pm.cts.InstallSessionParamsUnitTest isPresent CtsContentTestCases]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetExactWithWorkSource CtsAlarmManagerTestCases]', 1), ('[android.packageinstaller.uninstall.cts.UninstallPinnedTest isScreenOn CtsPackageUninstallTestCases]', 1), ('[android.packageinstaller.uninstall.cts.UninstallPinnedTest testAppCantUninstallItself CtsPackageUninstallTestCases]', 1), ('[android.packageinstaller.uninstall.cts.UninstallPinnedTest testCantUninstallWithShell CtsPackageUninstallTestCases]', 1), ('[android.server.wm.WindowInputTests testFilterTouchesWhenObscuredByWindowFromSameUid CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testFilterTouchesWhenObscuredByWindowFromDifferentUid CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testFlagTouchesWhenObscuredByWindowFromDifferentUid CtsWindowManagerDeviceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.1.2"	"3.9.1.2"	"C-1-7"	"3.9.1.2/C-1-7"	"03090102.670107"	"""C-1-7] MUST send the ACTION_ADMIN_POLICY_COMPLIANCE intent to the work profile when a Profile Owner is established during provisioning regardless of which provisioning method is used except when provisioning is triggered by the intent android.app.action.PROVISION_MANAGED_PROFILE. The user must not be able proceed in the Setup Wizard until the Profile Owner app finishes."""	""	""	"ACTION_ADMIN_POLICY_COMPLIANCE android.app.action.PROVISION PROVISION_MANAGED_PROFILE"	""	""	""	""	"[('com.android.cts.comp.provisioning.ManagedProfileProvisioningTest', 2), ('com.android.cts.devicepolicy.singleadmin.ProvisioningSingleAdminTest', 2), ('com.android.cts.managedprofile.PreManagedProfileTest', 2), ('com.android.cts.verifier.managedprovisioning.Utils', 1), ('com.android.cts.deviceowner.PreDeviceOwnerTest', 1), ('com.android.compatibility.common.util.devicepolicy.provisioning.SilentProvisioningTestManager', 1), ('com.android.cts.profileowner.ManagementTest', 1), ('com.android.cts.comp.ManagementTest', 1), ('android.devicepolicy.cts.DevicePolicyManagerTest', 1), ('com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest', 1), ('com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest', 1), ('com.android.cts.verifier.managedprovisioning.ByodProvisioningTestActivity', 1)]"	"[('show', 3), ('setUp', 3), ('getPackageManager', 2), ('getName', 2), ('BigTextStyle', 1), ('TvExtender', 1), ('build', 1), ('Stub', 1), ('getApplicationContext', 1), ('getPackage', 1), ('getTargetContext', 1)]"	"[('CtsDevicePolicyManagerTestCases', 2), ('CtsDevicePolicyTestCases', 1)]"	""	"com.android.cts.verifier.managedprovisioning.ByodProvisioningTestActivity"	"setUp"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/SingleAdminApp/src/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/PreManagedProfileTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/devicepolicy/provisioning/SilentProvisioningTestManager.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/ManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/ManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ByodProvisioningTestActivity.java', 1)]"	"[('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/verifier/managedprovisioning/Utils.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/deviceowner/PreDeviceOwnerTest.java)', 1), ('(2,PROVISION_MANAGED_PROFILE,/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java)', 1), ('(2,PROVISION_MANAGED_PROFILE,/com/android/compatibility/common/util/devicepolicy/provisioning/SilentProvisioningTestManager.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/profileowner/ManagementTest.java)', 1), ('(2,PROVISION_MANAGED_PROFILE,/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/comp/ManagementTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/android/devicepolicy/cts/DevicePolicyManagerTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java)', 1), ('(2,PROVISION_MANAGED_PROFILE,/com/android/cts/managedprofile/PreManagedProfileTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/verifier/managedprovisioning/ByodProvisioningTestActivity.java)', 1)]"	"[('([1:/com/android/cts/verifier/managedprovisioning/Utils.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ckageManager().hasSystemFeature(                PackageManager.FEATURE_SECURE_LOCK_SCREEN);    }}])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[           .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));    }   ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[tends AndroidTestCase {    private static final String TAG = ""ManagedProfileProvisioningTest"";   ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ntent) {        return intent != null && intent.getExtras().containsKey(Intent.EXTRA_USER);    }}])', 1), ('([2:/com/android/compatibility/common/util/devicepolicy/provisioning/SilentProvisioningTestManager.java]:[PROVISION_MANAGED_PROFILE]:[2]:method_text:[nt intent) {            mReceivedIntent = intent;            mLatch.countDown();        }    }}])', 1), ('([1:/com/android/cts/profileowner/ManagementTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ProvisioningAllowed(                DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));    }}])', 1), ('([1:/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[    public void setUp() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([1:/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[TestManager(mContext);        assertTrue(provisioningMgr.startProvisioningAndWait(intent));    }}])', 1), ('([1:/com/android/cts/comp/ManagementTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[visioningAllowed(                DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));    }   ])', 1), ('([1:/android/devicepolicy/cts/DevicePolicyManagerTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[e(PackageManager.FEATURE_DEVICE_ADMIN)    @RequireFeature(PackageManager.FEATURE_MANAGED_USERS)   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[getDevice().uninstallPackage(SINGLE_ADMIN_PKG);        super.tearDown();    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/managedprofile/PreManagedProfileTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[           .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));    }   ])', 1), ('([1:/com/android/cts/managedprofile/PreManagedProfileTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[             .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));    }}])', 1), (""([1:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[se when called with     * ACTION_PROVISION_MANAGED_PROFILE when there's a device owner.     */   ])"", 1), ('([1:/com/android/cts/verifier/managedprovisioning/ByodProvisioningTestActivity.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[           .appendPath(getResources().getResourceEntryName(resId))                .build();    }}])', 1)]"	""	""	"[('PROVISION_MANAGED_PROFILE', 15)]"	"[('[com.android.cts.deviceowner.PreDeviceOwnerTest testIsProvisioningNotAllowedForManagedProfileAction None]', 1), ('[com.android.cts.comp.provisioning.ManagedProfileProvisioningTest testProvisioningCorpOwnedManagedProfile None]', 1), ('[com.android.compatibility.common.util.devicepolicy.provisioning.SilentProvisioningTestManager getReceviedProfileProvisionedIntent None]', 1), ('[com.android.cts.profileowner.ManagementTest testProvisionManagedProfileNotAllowed None]', 1), ('[com.android.cts.devicepolicy.singleadmin.ProvisioningSingleAdminTest testManagedProfileProvisioning None]', 1), ('[com.android.cts.comp.ManagementTest testProvisionManagedProfileNotAllowed None]', 1), ('[android.devicepolicy.cts.DevicePolicyManagerTest newlyProvisionedManagedProfile_removesNonRequiredAppsFromProfile CtsDevicePolicyTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest removeTestUsers CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.managedprofile.PreManagedProfileTest testIsProvisioningAllowedTrue None]', 1), ('[com.android.cts.managedprofile.PreManagedProfileTest testIsProvisioningAllowedFalse None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testCannotAddManagedProfileViaManagedProvisioning CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.ByodProvisioningTestActivity setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
"3.5.2  . Application Hibernation"	"3.5.2"	"C-1-6"	"3.5.2/C-1-6"	"03050200.670106"	"""C-1-6] and"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.8.1  . Music Recognition"	"9.8.1"	"C-2-2"	"9.8.1/C-2-2"	"09080100.670202"	"""C-2-2] MUST NOT share such data beyond the MusicRecognitionService, except with explicit user consent every time it is shared. <h4 id=""9813_sensorprivacymanager"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-2-1"	"9.8/H-2-1"	"09080000.720201"	"""[9.8/H-2-1] MUST provide explicit notice to the user for each hotword phrase supported. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-16-1"	"3.2.3.5/C-16-1"	"03020305.671601"	"""C-16-1] MUST surface such links for all installed autofill services. If device implementations report the feature android.hardware.audio.output, they:"""	""	""	"android.hardware.audio.output"	""	""	""	""	"[('android.cts.statsdatom.statsd.UidAtomTests', 1), ('android.media.metrics.cts.MediaMetricsAtomTests', 1), ('android.cts.statsdatom.statsd.AtomTestCase', 1)]"	"[('setUp', 6), ('hashCode', 1)]"	"[('CtsStatsdAtomHostTestCases', 2), ('CtsMediaHostTestCases', 1)]"	""	"android.cts.statsdatom.statsd.AtomTestCase"	"setUp"	"CtsStatsdAtomHostTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/UidAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/metrics/cts/MediaMetricsAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/AtomTestCase.java', 1)]"	"[('(1,android.hardware.audio.output,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(1,android.hardware.audio.output,/android/media/metrics/cts/MediaMetricsAtomTests.java)', 1), ('(1,android.hardware.audio.output,/android/cts/statsdatom/statsd/AtomTestCase.java)', 1)]"	"[('([1:/android/cts/statsdatom/statsd/UidAtomTests.java]:[android.hardware.audio.output]:[1]:method_text:[atoms logged     * from an isolated process are seen as coming from their host process.     */   ])', 1), ('([1:/android/media/metrics/cts/MediaMetricsAtomTests.java]:[android.hardware.audio.output]:[1]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([1:/android/cts/statsdatom/statsd/AtomTestCase.java]:[android.hardware.audio.output]:[1]:method_text:[estamp is not truncated"")                .that(timestampNs % fiveMinutesInNs).isEqualTo(0);    }}])', 1)]"	""	""	"[('android.hardware.audio.output', 3)]"	"[('[android.cts.statsdatom.statsd.UidAtomTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.media.metrics.cts.MediaMetricsAtomTests isNotNull CtsMediaHostTestCases]', 1), ('[android.cts.statsdatom.statsd.AtomTestCase getReportList CtsStatsdAtomHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-1-1"	"8.2/H-1-1"	"08020000.720101"	"""[8.2/H-1-1] MUST ensure a sequential write performance of at least 100 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.9.1.2"	"3.9.1.2"	"C-1-8"	"3.9.1.2/C-1-8"	"03090102.670108"	"""C-1-8] MUST send ACTION_MANAGED_PROFILE_PROVISIONED broadcast to the personal profile DPC when a Profile Owner is established, regardless of the provisioning method used. <h4 id=""392_managed_profile_support"" """	""	""	"DPC ACTION_MANAGED_PROFILE_PROVISIONED"	""	""	""	""	"[('library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest', 61), ('com.android.cts.deviceandprofileowner.SuspendPackageTest', 2), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 2), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerHostSideTransferTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('processor.main.java.com.android.bedstead.remotedpc.processor.Processor', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi30', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1)]"	"[('users', 36), ('devicePolicy', 34), ('createUser', 18), ('createAndStart', 18), ('userHandle', 16), ('remove', 13), ('getDeviceOwner', 12), ('getDevice', 9), ('devicePolicyController', 8), ('any', 5), ('tearDown', 4), ('setUp', 3), ('deviceOwner', 3), ('profileOwner', 3), ('devicePolicyManager', 3), ('getBuild', 2), ('getSupportedSourceVersion', 1), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1), ('getName', 1), ('DeviceState', 1), ('deviceOwner_noDeviceOwner_returnsNull', 1), ('deviceOwner_nonRemoteDpcDeviceOwner_returnsNull', 1), ('deviceOwner_remoteDpcDeviceOwner_returnsInstance', 1), ('profileOwner_noProfileOwner_returnsNull', 1), ('profileOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userHandle_null_throwsException', 1), ('profileOwner_userHandle_noProfileOwner_returnsNull', 1), ('profileOwner_userHandle_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userHandle_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userReference_null_throwsException', 1), ('profileOwner_userReference_noProfileOwner_returnsNull', 1), ('profileOwner_userReference_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userReference_remoteDpcProfileOwner_returnsInstance', 1), ('any_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userHandle_null_throwsException', 1), ('any_userHandle_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userHandle_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userHandle_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userReference_null_throwsException', 1), ('any_userReference_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userReference_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userReference_remoteDpcProfileOwner_returnsProfileOwner', 1), ('setAsDeviceOwner_userHandle_null_throwsException', 1), ('setAsDeviceOwner_userHandle_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userHandle_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userHandle_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsDeviceOwner_userReference_null_throwsException', 1), ('setAsDeviceOwner_userReference_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userReference_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userReference_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsProfileOwner_userHandle_null_throwsException', 1), ('setAsProfileOwner_userHandle_alreadySet_doesNothing', 1), ('setAsProfileOwner_userHandle_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userHandle_doesNotHaveProfileOwner_setsProfileOwner', 1), ('setAsProfileOwner_userReference_null_throwsException', 1), ('setAsProfileOwner_userReference_alreadySet_doesNothing', 1), ('setAsProfileOwner_userReference_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userReference_doesNotHaveProfileOwner_setsProfileOwner', 1), ('devicePolicyController_returnsDevicePolicyController', 1), ('remove_deviceOwner_removes', 1), ('remove_profileOwner_removes', 1), ('frameworkCall_makesCall', 1), ('getCurrentFailedPasswordAttempts', 1), ('frameworkCall_onProfile_makesCall', 1), ('frameworkCallRequiresProfileOwner_notProfileOwner_throwsSecurityException', 1), ('forDevicePolicyController_nullDevicePolicyController_throwsException', 1), ('forDevicePolicyController_nonRemoteDpcDevicePolicyController_throwsException', 1), ('forDevicePolicyController_remoteDpcDevicePolicyController_returnsRemoteDpc', 1)]"	"[('CtsDevicePolicyManagerTestCases', 4), ('CtsDevicePolicyTestCases', 2), ('CtsMediaParserTestCases', 1), ('CtsTvTestCases', 1)]"	""	"library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest"	"devicePolicyController"	""	"[('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java', 61), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1)]"	"[('(2,DPC,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(4,DPC,/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java)', 1), ('(2,DPC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(4,DPC,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(4,DPC,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(2,DPC,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(19,DPC,/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java)', 1), ('(2,DPC,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(2,DPC,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,DPC,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(4,DPC,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(27,DPC,/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(179,DPC,/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java)', 1)]"	"[('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[);        } finally {            remoteDPC.devicePolicyController().remove();        }    }   ])', 4), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 2), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[        } finally {            deviceOwner.devicePolicyController().remove();        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[    } finally {            sTestApis.devicePolicy().getDeviceOwner().remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[PC.devicePolicyController());        } finally {            profile.remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);    }}])', 1), ('([4:/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java]:[DPC]:[4]:method_text:[NCOMING_TEST);            installAppAsUser(TRANSFER_OWNER_INCOMING_APK, mUserId);        }    }}])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {        testAssetExtraction(""wav/sample_ima_adpcm.wav"");    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[1]:method_text:[RECEIVER_PKG);    }    /**     * Verify that we cannot suspend launcher and dpc app.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[3]:method_text:[);        assertWithMessage(""package %s suspension"", pkg).that(actual).isEqualTo(expected);    }}])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[provider that provides enterprise slice cannot     * see the enterprise slice requests.     */   ])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[()), offerCallback);        offerCallback.assertNoCallback();        return offerCallback;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases. * */public class ResetPasswordTest extends BaseDeviceAdminTest {   ])', 1), ('([19:/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java]:[DPC]:[19]:method_text:[getMessager()                .printMessage(Diagnostic.Kind.ERROR, errorText, errorElement);    }}])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[e(ComponentName, String)} */public class CertInstallDelegateTest extends BaseJUnit3TestCase {   ])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[DPC]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[DPC]:[1]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([4:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[DPC]:[4]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 1), ('([27:/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java]:[DPC]:[27]:method_text:[min void addPersistentPreferredActivity(            IntentFilter filter, ComponentName activity);}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java]:[DPC]:[1]:method_text:[ws Exception {        runDeviceTestsAsUser(DEVICE_ADMIN_PKG, className, testName, mUserId);    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[DPC]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([7:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[7]:method_text:[s    public static void teardownClass() {        sNonRemoteDpcTestApp.uninstall(sUser);    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Owner_noDeviceOwner_returnsNull() {        assertThat(RemoteDpc.deviceOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.deviceOwner()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.profileOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[rofileOwner()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.profileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[e.userHandle())).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[nterException.class,                () -> RemoteDpc.profileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[oDeviceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[moteDpc.any()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[emoteDpc.any()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[        assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser.userHandle())).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.userHandle())).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[())).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[     assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser)).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[teDpc.any(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Dpc.any(sUser)).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[le)).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[terException.class,                () -> RemoteDpc.setAsDeviceOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ption.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Exception.class,                () -> RemoteDpc.setAsDeviceOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[on.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[erException.class,                () -> RemoteDpc.setAsProfileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[tion.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[xception.class,                () -> RemoteDpc.setAsProfileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[n.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[Policy().getDeviceOwner());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[oteDPC.remove();        assertThat(sTestApis.devicePolicy().getDeviceOwner()).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[eed to support the case where there is both a DO and a PO on    //  older versions of Android?   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[ntFailedPasswordAttempts();        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[ succeeds            remoteDPC.devicePolicyManager().isUsingUnifiedPassword();        }    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[.isUsingUnifiedPassword());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.forDevicePolicyController(null));    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Controller(deviceOwner));        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([8:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[8]:method_text:[                 .isNotNull();        } finally {            remoteDPC.remove();        }    }])', 1)]"	""	""	"[('DPC', 77)]"	"[('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNull None]', 19), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNotNull None]', 15), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isUsingUnifiedPassword None]', 2), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testWavWithImaAdpcm CtsMediaParserTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSetPackagesNotSuspended None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSuspendNotSuspendablePackages None]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_enableService_issueRequest CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_disableService_noIssueRequest CtsDevicePolicyTestCases]', 1), ('[processor.main.java.com.android.bedstead.remotedpc.processor.Processor latest None]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testRevokeKeyPairFromApp_keyNotUsable None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtsc3FrontendSettings CtsTvTestCases]', 1), ('[communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager isUsingUnifiedPassword None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest TestApis None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userReference_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userReference_nonExistingUser_throwsException None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-3"	"5.1/H-1-3"	"05010000.720103"	"""[5.1/H-1-3] MUST advertise the maximum number of hardware video encoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods.  | [5.1/H-1-3] MUST advertise the maximum number of hardware video encoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. """	""	""	"CodecCapabilities.getMaxSupportedInstances getSupportedPerformancePoints() VideoCapabilities.getSupportedPerformancePoints getMaxSupportedInstances()"	""	""	""	""	"[('android.mediapc.cts.MultiDecoderPairPerfTest', 4), ('android.mediapc.cts.MultiEncoderPairPerfTest', 4), ('android.mediapc.cts.MultiDecoderPerfTest', 4), ('android.mediapc.cts.MultiTranscoderPerfTest', 4), ('android.mediapc.cts.MultiEncoderPerfTest', 4), ('android.mediapc.cts.MultiCodecPerfTestBase', 2), ('com.android.compatibility.common.util.MediaUtils', 1), ('android.media.cts.EncoderTest', 1), ('android.media.cts.MediaCodecListTest', 1), ('android.video.cts.CodecPerformanceTestBase', 1), ('android.media.cts.MediaCodecCapabilitiesTest', 1), ('android.media.cts.DecoderTest', 1)]"	"[('getSimpleName', 23), ('getMaxSupportedInstances', 20), ('getSupportedPerformancePoints', 20), ('inputParams', 20), ('size', 16), ('release', 2), ('getMediaDirString', 1), ('prologue', 1), ('MediaExtractor', 1), ('getTrackCount', 1), ('getCodecInfos', 1)]"	"[('CtsMediaPerformanceClassTestCases', 22), ('CtsMediaTestCases', 4), ('CtsVideoTestCases', 1)]"	""	"android.mediapc.cts.MultiCodecPerfTestBase"	"getSimpleName"	"CtsMediaPerformanceClassTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiTranscoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiCodecPerfTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/MediaUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecPerformanceTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecCapabilitiesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTest.java', 1)]"	"[('(1,getSupportedPerformancePoints(),/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/EncoderTest.java)', 1), ('(2,getSupportedPerformancePoints(),/android/media/cts/MediaCodecListTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/video/cts/CodecPerformanceTestBase.java)', 1), ('(2,getMaxSupportedInstances(),/android/media/cts/MediaCodecCapabilitiesTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/DecoderTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1)]"	"[('([1:/com/android/compatibility/common/util/MediaUtils.java]:[getSupportedPerformancePoints()]:[1]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([1:/android/media/cts/EncoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[            muxer.stop();            muxer.release();            muxer = null;        }    }}])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[getSupportedPerformancePoints()]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/video/cts/CodecPerformanceTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[SawDecOutputEOS = true;        }        mDecoder.releaseOutputBuffer(bufferIndex, render);    }}])', 1), ('([2:/android/media/cts/MediaCodecCapabilitiesTest.java]:[getMaxSupportedInstances()]:[2]:method_text:[/media_codecs.xml: \\n"";           fail(failMessage + xmlOverrides.toString());        }    }   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/media/cts/DecoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[       continue;            }            return true;        }        return false;    }   ])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getMaxSupportedInstances()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1)]"	""	""	"[('getSupportedPerformancePoints()', 9), ('getMaxSupportedInstances()', 9), ('CodecCapabilities.getMaxSupportedInstances', 5), ('VideoCapabilities.getSupportedPerformancePoints', 5)]"	"[('[android.mediapc.cts.MultiCodecPerfTestBase isSPerfClass CtsMediaPerformanceClassTestCases]', 2), ('[com.android.compatibility.common.util.MediaUtils getTestName None]', 1), ('[android.media.cts.EncoderTest testAACEncoders CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 1), ('[android.video.cts.CodecPerformanceTestBase isEncoder CtsVideoTestCases]', 1), ('[android.media.cts.MediaCodecCapabilitiesTest testGetMaxSupportedInstances CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTest testTunneledAudioTimestampProgressVp9 CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.2  .  These are in the Android source tree at"	"7.1.4.2"	"C-3-1"	"7.1.4.2/C-3-1"	"07010402.670301"	"""C-3-1] MUST expose support for the SYNC_FD external semaphore and handle types and the VK_ANDROID_external_memory_android_hardware_buffer extension. <h5 id=""7143_renderscript"" """	""	""	"SYNC_FD ANDROID_"	""	""	""	""	"[('android.graphics.cts.AImageDecoderTest', 11), ('android.cts.backup.syncadaptersettingsapp.SyncAdapterSettingsTest', 6), ('android.graphics.cts.VulkanFeaturesTest', 5), ('android.accounts.cts.AccountManagerTest', 2), ('android.os.cts.StaticSharedLibsHostTests', 2), ('android.security.cts.DecodeTest', 2), ('android.security.cts.PerfEventParanoidTest', 2), ('android.security.cts.Movie33897722', 2), ('android.videoqualityfloor.cts.CtsVideoQualityFloorHostTest', 2), ('android.scopedstorage.cts.device.ScopedStorageDeviceTest', 2), ('android.gputools.cts.CtsRootlessGpuDebugHostTest', 1), ('android.appsearch.app.a.AppSearchDeviceTest', 1), ('android.webkit.cts.WebSettingsTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('android.appwidget.cts.AppWidgetTestCase', 1), ('android.webkit.cts.URLUtilTest', 1), ('android.content.cts.ContentProviderTest', 1), ('android.suspendapps.permission.cts.NegativePermissionsTest', 1), ('android.security.cts.PackageSignatureTest', 1), ('android.scopedstorage.cts.lib.TestUtils', 1), ('com.android.json.stream.JsonReader', 1), ('android.permission2.cts.PermissionPolicyTest', 1), ('android.adb.cts.AdbHostTest', 1), ('com.android.json.stream.NewlineDelimitedJsonWriter', 1), ('android.os.cts.IntentLaunchActivity', 1), ('android.jdwpsecurity.cts.JdwpSecurityHostTest', 1), ('com.android.json.stream.JsonWriter', 1), ('com.android.cts.apicoverage.CtsApiCoverage', 1), ('com.android.cts.releaseparser.FileParser', 1), ('android.location.cts.privileged.GnssLocationValuesTest', 1), ('android.cts.backup.SyncAdapterSettingsHostSideTest', 1), ('android.media.cts.RingtoneManagerTest', 1), ('android.accessibilityservice.cts.AccessibilityTextActionTest', 1), ('com.android.cts.apicoverage.TestCaseReport', 1), ('android.content.cts.IntentTest', 1), ('android.security.cts.BigRleTest', 1)]"	"[('getInstrumentation', 16), ('getTargetContext', 15), ('getDevice', 10), ('getName', 10), ('beginArray', 9), ('endArray', 9), ('beginObject', 9), ('endObject', 9), ('getType', 9), ('peek', 8), ('println', 8), ('newBuilder', 8), ('setUp', 7), ('getPackageName', 7), ('getResources', 6), ('getAssetManager', 6), ('printUsage', 6), ('getUiAutomation', 5), ('skipValue', 5), ('hasNext', 5), ('close', 5), ('getFd', 5), ('getAnnotations', 5), ('build', 4), ('getSimpleName', 4), ('getPackageManager', 4), ('getGeo', 4), ('length', 4), ('Bundle', 3), ('myUserHandle', 3), ('getProfile', 3), ('getMessage', 3), ('toString', 3), ('getApplicationContext', 3), ('getContentResolver', 3), ('getConfig', 3), ('printStackTrace', 3), ('getMethods', 3), ('setup', 2), ('getSystemAvailableFeatures', 2), ('nativeGetVkJSON', 2), ('getBestDevice', 2), ('hasAppWidgets', 2), ('getFirstWidgetComponent', 2), ('getSecondWidgetComponent', 2), ('size', 2), ('getClassName', 2), ('getAppWidgetManager', 2), ('getBytes', 2), ('nextName', 2), ('nextString', 2), ('getId', 2), ('getText', 2), ('nullValue', 2), ('getUser', 2), ('getFollowersCount', 2), ('newline', 2), ('getAction', 2), ('getColorSpace', 2), ('Options', 2), ('getFile', 2), ('getFileName', 2), ('parse', 2), ('getFileContentId', 2), ('getCodeId', 2), ('setAdditionalInfo', 2), ('tearDown', 2), ('getAccessFlags', 2), ('getValue', 2), ('trim', 1), ('getTime', 1), ('LogScanResult', 1), ('getSchemaType', 1), ('base16', 1), ('get', 1), ('assumeHasWidgets', 1), ('getInstalledProviders', 1), ('readLine', 1), ('wave', 1), ('BackupUtils', 1), ('getAccount', 1), ('call', 1), ('getExternalStorageDirectory', 1), ('setupDefaultDirectories', 1), ('getDefaultTopLevelDirs', 1), ('mkdirs', 1), ('nextNull', 1), ('nextLong', 1), ('nextDouble', 1), ('nextInt', 1), ('advance', 1), ('peekStack', 1), ('nextValue', 1), ('objectValue', 1), ('newlineDelimited', 1), ('getIntent', 1), ('getExtras', 1), ('getAssets', 1), ('getWidth', 1), ('getHeight', 1), ('recycle', 1), ('FilenameFilter', 1), ('toLowerCase', 1), ('PackageFilter', 1), ('getFileEntryBuilder', 1), ('getEncoder', 1), ('digest', 1), ('getAbiBits', 1), ('getAbiArchitecture', 1), ('getDependencies', 1), ('getDynamicLoadingDependencies', 1), ('flush', 1), ('getContext', 1), ('getElements', 1), ('getClasses', 1), ('entries', 1), ('getAbsolutePath', 1), ('getClassLoader', 1), ('hasMoreElements', 1), ('nextElement', 1)]"	"[('CtsGraphicsTestCases', 16), ('CtsSecurityTestCases', 6), ('CtsWebkitTestCases', 2), ('CtsAccountManagerTestCases', 2), ('CtsContentTestCases', 2), ('CtsOsHostTestCases', 2), ('CtsSecurityHostTestCases', 2), ('CtsVideoQualityFloorHostTestCases', 2), ('CtsGpuToolsHostTestCases', 1), ('CtsMediaParserTestCases', 1), ('CtsAppWidgetTestCases', 1), ('CtsSuspendAppsPermissionTestCases', 1), ('CtsPermission2TestCases', 1), ('CtsAdbHostTestCases', 1), ('CtsJdwpSecurityHostTestCases', 1), ('CtsLocationPrivilegedTestCases', 1), ('CtsBackupHostTestCases', 1), ('CtsMediaTestCases', 1), ('CtsAccessibilityServiceTestCases', 1)]"	""	"android.scopedstorage.cts.device.ScopedStorageDeviceTest"	"nextElement"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/AImageDecoderTest.java', 11), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/SyncAdapterSettingsApp/src/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/accounts/src/android/accounts/cts/AccountManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/os/src/android/os/cts/StaticSharedLibsHostTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/DecodeTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/PerfEventParanoidTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/Movie33897722.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/videoencodingminimum/src/android/videoqualityfloor/cts/CtsVideoQualityFloorHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/device/src/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsearch/test-apps/AppSearchHostTestHelperA/src/android/appsearch/app/a/AppSearchDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/AppWidgetTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/URLUtilTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentProviderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/permission/src/android/suspendapps/permission/cts/NegativePermissionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/PackageSignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/libs/ScopedStorageTestLib/src/android/scopedstorage/cts/lib/TestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/libs/json/src/com/android/json/stream/JsonReader.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adb/src/android/adb/cts/AdbHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/json/src/com/android/json/stream/NewlineDelimitedJsonWriter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/IntentLaunchActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwpsecurity/src/android/jdwpsecurity/cts/JdwpSecurityHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/json/src/com/android/json/stream/JsonWriter.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/FileParser.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssLocationValuesTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/SyncAdapterSettingsHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/RingtoneManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityTextActionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/TestCaseReport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/IntentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/BigRleTest.java', 1)]"	"[('(1,ANDROID_,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 1), ('(1,ANDROID_,/android/appsearch/app/a/AppSearchDeviceTest.java)', 1), ('(1,ANDROID_,/android/webkit/cts/WebSettingsTest.java)', 1), ('(1,ANDROID_,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(6,SYNC_FD,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(17,ANDROID_,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,ANDROID_,/android/accounts/cts/AccountManagerTest.java)', 1), ('(2,ANDROID_,/android/appwidget/cts/AppWidgetTestCase.java)', 1), ('(1,ANDROID_,/android/webkit/cts/URLUtilTest.java)', 1), ('(11,ANDROID_,/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java)', 1), ('(1,ANDROID_,/android/content/cts/ContentProviderTest.java)', 1), ('(1,ANDROID_,/android/suspendapps/permission/cts/NegativePermissionsTest.java)', 1), ('(17,ANDROID_,/android/security/cts/PackageSignatureTest.java)', 1), ('(2,ANDROID_,/android/os/cts/StaticSharedLibsHostTests.java)', 1), ('(2,ANDROID_,/android/security/cts/DecodeTest.java)', 1), ('(1,ANDROID_,/android/scopedstorage/cts/lib/TestUtils.java)', 1), ('(2,ANDROID_,/com/android/json/stream/JsonReader.java)', 1), ('(3,ANDROID_,/android/permission2/cts/PermissionPolicyTest.java)', 1), ('(1,ANDROID_,/android/adb/cts/AdbHostTest.java)', 1), ('(2,ANDROID_,/com/android/json/stream/NewlineDelimitedJsonWriter.java)', 1), ('(2,ANDROID_,/android/os/cts/IntentLaunchActivity.java)', 1), ('(15,ANDROID_,/android/graphics/cts/AImageDecoderTest.java)', 1), ('(1,ANDROID_,/android/jdwpsecurity/cts/JdwpSecurityHostTest.java)', 1), ('(2,ANDROID_,/com/android/json/stream/JsonWriter.java)', 1), ('(1,ANDROID_,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(1,ANDROID_,/com/android/cts/releaseparser/FileParser.java)', 1), ('(4,ANDROID_,/android/security/cts/PerfEventParanoidTest.java)', 1), ('(1,ANDROID_,/android/location/cts/privileged/GnssLocationValuesTest.java)', 1), ('(2,ANDROID_,/android/security/cts/Movie33897722.java)', 1), ('(2,ANDROID_,/android/cts/backup/SyncAdapterSettingsHostSideTest.java)', 1), ('(1,ANDROID_,/android/media/cts/RingtoneManagerTest.java)', 1), ('(2,ANDROID_,/android/accessibilityservice/cts/AccessibilityTextActionTest.java)', 1), ('(2,ANDROID_,/android/videoqualityfloor/cts/CtsVideoQualityFloorHostTest.java)', 1), ('(5,ANDROID_,/com/android/cts/apicoverage/TestCaseReport.java)', 1), ('(2,ANDROID_,/android/content/cts/IntentTest.java)', 1), ('(1,ANDROID_,/android/security/cts/BigRleTest.java)', 1), ('(2,ANDROID_,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1)]"	"[('([2:/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java]:[ANDROID_]:[2]:method_text:[e AccountSyncSettingsBackupHelper#restoreExistingAccountSyncSettingsFromJSON(JSONObject)     */   ])', 2), ('([1:/android/graphics/cts/AImageDecoderTest.java]:[ANDROID_]:[1]:method_text:[) {            fail(""Could not open "" + Utils.getAsResourceUri(record.resId));        }    }   ])', 2), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[ANDROID_]:[1]:method_text:[es layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 1), ('([1:/android/appsearch/app/a/AppSearchDeviceTest.java]:[ANDROID_]:[1]:method_text:[;        mUiAutomation = InstrumentationRegistry.getInstrumentation().getUiAutomation();    }   ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[ANDROID_]:[1]:method_text:[with file access disabled"",                dataDirTitle.equals(mOnUiThread.getTitle()));    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[ANDROID_]:[1]:method_text:[) throws IOException {        testAssetExtraction(""mp4/sample_android_slow_motion.mp4"");    }   ])', 1), ('([2:/android/graphics/cts/VulkanFeaturesTest.java]:[SYNC_FD]:[2]:method_text:[;        mBestDevice = getBestDevice();    }    @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")   ])', 1), ('([4:/android/graphics/cts/VulkanFeaturesTest.java]:[SYNC_FD]:[4]:method_text:[atures"", 0x3 /* importable + exportable */));    }    @CddTest(requirement = ""7.1.4.2/C-1-7"")   ])', 1), ('([7:/android/graphics/cts/VulkanFeaturesTest.java]:[ANDROID_]:[7]:method_text:[;        mBestDevice = getBestDevice();    }    @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")   ])', 1), ('([9:/android/graphics/cts/VulkanFeaturesTest.java]:[ANDROID_]:[9]:method_text:[atures"", 0x3 /* importable + exportable */));    }    @CddTest(requirement = ""7.1.4.2/C-1-7"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[ANDROID_]:[1]:method_text:[viceExtension(""VK_KHR_incremental_present"", 1);    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ANDROID_]:[1]:method_text:[eak;            }        }        return result;    }    /**     * Test singleton     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ANDROID_]:[1]:method_text:[countSession(...). A bundle containing account name and account     * type is expected.     */   ])', 1), ('([2:/android/appwidget/cts/AppWidgetTestCase.java]:[ANDROID_]:[2]:method_text:[tic int getCurrentUser() {        return android.os.Process.myUserHandle().getIdentifier();    }}])', 1), ('([1:/android/webkit/cts/URLUtilTest.java]:[ANDROID_]:[1]:method_text:[LID_FTP_URL = ""ftp://www.domain.com"";    private final String FILE_URL_NO_SLASH = ""file:test"";   ])', 1), ('([1:/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java]:[ANDROID_]:[1]:method_text:[ge.     * 3. Check restored MasterSyncAutomatically=true is the same with backup value.     */   ])', 1), ('([2:/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java]:[ANDROID_]:[2]:method_text:[e.     * 3. Check restored MasterSyncAutomatically=false is the same with backup value.     */   ])', 1), ('([2:/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java]:[ANDROID_]:[2]:method_text:[ckage.     * 3. Check restored syncEnabled=false and isSyncable=1. Then remove account.     */   ])', 1), ('([2:/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java]:[ANDROID_]:[2]:method_text:[   Account account = accounts[i];            am.removeAccountExplicitly(account);        }    }}])', 1), ('([1:/android/content/cts/ContentProviderTest.java]:[ANDROID_]:[1]:method_text:[throw out FileNotFoundException!"");        } catch (FileNotFoundException e) {        }    }   ])', 1), ('([1:/android/suspendapps/permission/cts/NegativePermissionsTest.java]:[ANDROID_]:[1]:method_text:[etMessage());        }        fail(""Call ["" + tag + ""] succeeded without permissions"");    }   ])', 1), ('([17:/android/security/cts/PackageSignatureTest.java]:[ANDROID_]:[17]:method_text:[put != null) {                    output.close();                }            }        }    }}])', 1), ('([1:/android/os/cts/StaticSharedLibsHostTests.java]:[ANDROID_]:[1]:method_text:[fo) {        mBuildHelper = new CompatibilityBuildHelper(buildInfo);    }    @AppModeInstant   ])', 1), ('([1:/android/os/cts/StaticSharedLibsHostTests.java]:[ANDROID_]:[1]:method_text:[nstall, false,                apk.contains(""consumer"") && mInstantMode ? ""--instant"" : """");    }}])', 1), ('([1:/android/security/cts/DecodeTest.java]:[ANDROID_]:[1]:method_text:[ash. Instead, it should fail to     * decode.     */    @AsbSecurityTest(cveBugId = 67381469)   ])', 1), ('([1:/android/security/cts/DecodeTest.java]:[ANDROID_]:[1]:method_text:[       Bitmap bitmap = BitmapFactory.decodeStream(exploitImage);        assertNull(bitmap);    }}])', 1), ('([1:/android/scopedstorage/cts/lib/TestUtils.java]:[ANDROID_]:[1]:method_text:[tream().filter(                        p -> packageName.equals(p.processName)).findFirst();    }}])', 1), ('([2:/com/android/json/stream/JsonReader.java]:[ANDROID_]:[2]:method_text:[OException {        private JsonSyntaxException(String s) {            super(s);        }    }}])', 1), ('([3:/android/permission2/cts/PermissionPolicyTest.java]:[ANDROID_]:[3]:method_text:[           this.flags = flags;            this.protectionLevel = protectionLevel;        }    }}])', 1), ('([1:/android/adb/cts/AdbHostTest.java]:[ANDROID_]:[1]:method_text:[e + ""\\n"");        }        assertTrue(""check_ms_os_desc failed:\\n"" + output, result == 0);    }}])', 1), ('([2:/com/android/json/stream/NewlineDelimitedJsonWriter.java]:[ANDROID_]:[2]:method_text:[lt:                throw new IllegalStateException(""Nesting problem: "" + mStack);        }    }}])', 1), ('([2:/android/os/cts/IntentLaunchActivity.java]:[ANDROID_]:[2]:method_text:[getAction()                                + "" was specified"");        }        finish();    }}])', 1), ('([5:/android/graphics/cts/AImageDecoderTest.java]:[ANDROID_]:[5]:method_text:[ANDROID_BITMAP_FORMAT_A_8 = 8;    private static final int ANDROID_BITMAP_FORMAT_RGBA_F16 = 9;   ])', 1), ('([1:/android/graphics/cts/AImageDecoderTest.java]:[ANDROID_]:[1]:method_text:[ode(aimagedecoder, ANDROID_BITMAP_FORMAT_NONE, unpremul, bm);        nCloseAsset(asset);    }   ])', 1), ('([1:/android/graphics/cts/AImageDecoderTest.java]:[ANDROID_]:[1]:method_text:[  } finally {            res.getDisplayMetrics().densityDpi = originalDensity;        }    }   ])', 1), ('([1:/android/graphics/cts/AImageDecoderTest.java]:[ANDROID_]:[1]:method_text:[ode(aimagedecoder, ANDROID_BITMAP_FORMAT_RGB_565, false, bm);        nCloseAsset(asset);    }   ])', 1), ('([1:/android/graphics/cts/AImageDecoderTest.java]:[ANDROID_]:[1]:method_text:[tDecode(aimagedecoder, ANDROID_BITMAP_FORMAT_A_8, false, bm);        nCloseAsset(asset);    }   ])', 1), ('([1:/android/graphics/cts/AImageDecoderTest.java]:[ANDROID_]:[1]:method_text:[ption e) {            fail(""Could not open "" + Utils.getAsResourceUri(resId));        }    }   ])', 1), ('([1:/android/graphics/cts/AImageDecoderTest.java]:[ANDROID_]:[1]:method_text:[aimagedecoder, ANDROID_BITMAP_FORMAT_RGBA_F16, unpremul, bm);        nCloseAsset(asset);    }   ])', 1), ('([1:/android/graphics/cts/AImageDecoderTest.java]:[ANDROID_]:[1]:method_text:[tStackTrace();            fail(""Could not open "" + uri);        }        bm.recycle();    }   ])', 1), ('([1:/android/graphics/cts/AImageDecoderTest.java]:[ANDROID_]:[1]:method_text:[coder, ANDROID_BITMAP_FORMAT_NONE, false /* unpremul */, bm);        nCloseAsset(asset);    }   ])', 1), ('([1:/android/jdwpsecurity/cts/JdwpSecurityHostTest.java]:[ANDROID_]:[1]:method_text:[rmat(""mkdir %s"", remoteFilePath));        return getDevice().doesFileExist(remoteFilePath);    }}])', 1), ('([2:/com/android/json/stream/JsonWriter.java]:[ANDROID_]:[2]:method_text:[lt:                throw new IllegalStateException(""Nesting problem: "" + mStack);        }    }}])', 1), ('([1:/com/android/cts/apicoverage/CtsApiCoverage.java]:[ANDROID_]:[1]:method_text:[                 break;            }        } finally {            out.close();        }    }}])', 1), ('([1:/com/android/cts/releaseparser/FileParser.java]:[ANDROID_]:[1]:method_text:[eId(getCodeId());        mFileEntryBuilder.setType(getType());        setAdditionalInfo();    }}])', 1), ('([2:/android/security/cts/PerfEventParanoidTest.java]:[ANDROID_]:[2]:method_text:[setUp() throws Exception {        mDevice = getDevice();    }    @CddTest(requirement=""9.7"")   ])', 1), ('([2:/android/security/cts/PerfEventParanoidTest.java]:[ANDROID_]:[2]:method_text:[    getDevice().hasFeature(""feature:android.hardware.security.model.compatible""));        }    }}])', 1), (""([1:/android/location/cts/privileged/GnssLocationValuesTest.java]:[ANDROID_]:[1]:method_text:[* 2. Get low-power GNSS locations.     * 3. Check whether all fields' value make sense.     */   ])"", 1), ('([1:/android/security/cts/Movie33897722.java]:[ANDROID_]:[1]:method_text:[st_movie(R.raw.bug_33897722, 600, 752, 10, 10);    }    @AsbSecurityTest(cveBugId = 37662286)   ])', 1), ('([1:/android/security/cts/Movie33897722.java]:[ANDROID_]:[1]:method_text:[             assertEquals(bitmap.getPixel(x, y), Color.TRANSPARENT);            }        }    }}])', 1), ('([2:/android/cts/backup/SyncAdapterSettingsHostSideTest.java]:[ANDROID_]:[2]:method_text:[ACKAGE));    }    /**     * Test backup and restore of MasterSyncAutomatically=true.     */   ])', 1), ('([1:/android/media/cts/RingtoneManagerTest.java]:[ANDROID_]:[1]:method_text:[c"")));        assertFalse(RingtoneManager.hasHapticChannels(Uri.parse(uriPrefix + ""a_4"")));    }}])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityTextActionTest.java]:[ANDROID_]:[2]:method_text:[reen should now be on it        assertNotNull(locationsAfterScroll[firstNullRectIndex]);    }   ])', 1), ('([1:/android/videoqualityfloor/cts/CtsVideoQualityFloorHostTest.java]:[ANDROID_]:[1]:method_text:[ellCommand(""getprop "" + prop).replace(""\\n"", """");    }    /**     * TODO: Add JavaDoc     */   ])', 1), ('([1:/android/videoqualityfloor/cts/CtsVideoQualityFloorHostTest.java]:[ANDROID_]:[1]:method_text:[String cmd = ""wget -O "" + destination.getPath() + "" "" + url;        runCmd(cmd, destDir);    }}])', 1), ('([5:/com/android/cts/apicoverage/TestCaseReport.java]:[ANDROID_]:[5]:method_text:[        printTestSuiteSummary(ts1, outputSummaryFilePath, tsContent.getKnownFailuresList());    }}])', 1), ('([2:/android/content/cts/IntentTest.java]:[ANDROID_]:[2]:method_text:[ent + "" to android-app: uri"",                    androidAppSchemeUri, genUri);        }    }   ])', 1), ('([1:/android/security/cts/BigRleTest.java]:[ANDROID_]:[1]:method_text:[ource(R.raw.bug_33251605);        Bitmap bitmap = BitmapFactory.decodeStream(exploitImage);    }}])', 1), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[ANDROID_]:[1]:method_text:[   }    /**     * Test mount modes for ExternalStorageProvider and DownloadsProvider.     */   ])', 1), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[ANDROID_]:[1]:method_text:[""Deleting file "" + file);        deleteFileAs(APP_D_LEGACY_HAS_RW, file.getAbsolutePath());    }}])', 1)]"	""	""	"[('ANDROID_', 60), ('SYNC_FD', 2)]"	"[('[android.graphics.cts.VulkanFeaturesTest testVulkan1_1Requirements CtsGraphicsTestCases]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest currentTimeMillis CtsGpuToolsHostTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessAllowFileAccess CtsWebkitTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testMp4AndroidSlowMotion CtsMediaParserTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanRequiredExtensions CtsGraphicsTestCases]', 1), ('[android.accounts.cts.AccountManagerTest AccountManagerTest CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testStartUpdateCredentialsSessionErrorWithCallbackAndHandler CtsAccountManagerTestCases]', 1), ('[android.appwidget.cts.AppWidgetTestCase grantBindAppWidgetPermission CtsAppWidgetTestCases]', 1), ('[android.cts.backup.syncadaptersettingsapp.SyncAdapterSettingsTest testMasterSyncAutomatically_whenOn_isRestored None]', 1), ('[android.cts.backup.syncadaptersettingsapp.SyncAdapterSettingsTest testMasterSyncAutomatically_whenOff_isRestored None]', 1), ('[android.cts.backup.syncadaptersettingsapp.SyncAdapterSettingsTest testIsSyncableChanged_ifTurnOnSyncEnabled None]', 1), ('[android.cts.backup.syncadaptersettingsapp.SyncAdapterSettingsTest testIsSyncableIsZero_ifTurnOffSyncEnabled None]', 1), ('[android.cts.backup.syncadaptersettingsapp.SyncAdapterSettingsTest testIsSyncableIsOne_ifTurnOffSyncEnabled None]', 1), ('[android.content.cts.ContentProviderTest testOpenAssetFile CtsContentTestCases]', 1), ('[android.security.cts.PackageSignatureTest testPackageSignatures CtsSecurityTestCases]', 1), ('[android.os.cts.StaticSharedLibsHostTests testCannotSamegradeStaticSharedLibByInstaller CtsOsHostTestCases]', 1), ('[android.security.cts.DecodeTest test_android_bug_34778578 CtsSecurityTestCases]', 1), ('[android.security.cts.DecodeTest test_android_bug_67381469 CtsSecurityTestCases]', 1), ('[android.scopedstorage.cts.lib.TestUtils exists None]', 1), ('[com.android.json.stream.JsonReader AssertionError None]', 1), ('[android.permission2.cts.PermissionPolicyTest platformPermissionPolicyIsUnaltered CtsPermission2TestCases]', 1), ('[android.adb.cts.AdbHostTest testHasMsOsDescriptors CtsAdbHostTestCases]', 1), ('[android.os.cts.IntentLaunchActivity finish None]', 1), ('[android.graphics.cts.AImageDecoderTest getDisplayMetrics CtsGraphicsTestCases]', 1), ('[android.graphics.cts.AImageDecoderTest testDecodeA8Resources CtsGraphicsTestCases]', 1), ('[android.jdwpsecurity.cts.JdwpSecurityHostTest testNonZygoteProgramIsNotDebuggable CtsJdwpSecurityHostTestCases]', 1), ('[com.android.json.stream.JsonWriter isEmpty None]', 1), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 1), ('[android.security.cts.PerfEventParanoidTest testPerfEventRestricted CtsSecurityHostTestCases]', 1), ('[android.location.cts.privileged.GnssLocationValuesTest dropShellPermissionIdentity CtsLocationPrivilegedTestCases]', 1), ('[android.security.cts.Movie33897722 test_android_bug_33897722 CtsSecurityTestCases]', 1), ('[android.security.cts.Movie33897722 test_android_bug_37662286 CtsSecurityTestCases]', 1), ('[android.media.cts.RingtoneManagerTest testHasHapticChannels CtsMediaTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextActionTest testTextLocations_textOutsideOfViewBounds_locationsShouldBeNull CtsAccessibilityServiceTestCases]', 1), ('[android.videoqualityfloor.cts.CtsVideoQualityFloorHostTest testEncoding CtsVideoQualityFloorHostTestCases]', 1), ('[com.android.cts.apicoverage.TestCaseReport isDirectory None]', 1), ('[android.content.cts.IntentTest testUris CtsContentTestCases]', 1), ('[android.security.cts.BigRleTest test_android_bug_33251605 CtsSecurityTestCases]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testMTPAppWithPlatformSignatureMountMode None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testExternalStorageProviderAndDownloadsProvider None]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.2  . Magnetometer"	"7.3.2"	"C-1-10"	"7.3.2/C-1-10"	"07030200.670110"	"""C-1-10] MUST implement the TYPE_MAGNETIC_FIELD_UNCALIBRATED sensor. If device implementations include a 3-axis magnetometer, an accelerometer sensor, and a 3-axis gyroscope sensor, they:"""	""	""	"TYPE_MAGNETIC_FIELD_UNCALIBRATED"	""	""	""	""	"[('android.hardware.cts.SingleSensorTests', 9), ('android.hardware.cts.SensorBatchingTests', 4), ('android.hardware.cts.SensorSupportTest', 2), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.hardware.cts.helpers.sensorverification.InitialValueVerification', 1), ('android.hardware.cts.helpers.sensorverification.OffsetVerification', 1), ('android.hardware.cts.helpers.SensorCtsHelper', 1), ('android.hardware.cts.helpers.sensorverification.StandardDeviationVerification', 1), ('com.android.cts.verifier.sensors.RVCVRecordActivity', 1), ('com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity', 1), ('android.hardware.cts.SensorBatchingFifoTest', 1), ('android.hardware.cts.helpers.sensorverification.JitterVerification', 1), ('android.hardware.cts.SensorIntegrationTests', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.hardware.cts.helpers.SensorRatePermissionDirectReportTestHelper', 1), ('android.hardware.cts.helpers.SensorRatePermissionEventConnectionTestHelper', 1)]"	"[('size', 8), ('getSensor', 7), ('doubleValue', 7), ('setDefaults', 5), ('getType', 5), ('StringBuilder', 3), ('toString', 3), ('clone', 2), ('getContext', 2), ('getPackageManager', 2), ('startRecordcontroller', 2), ('stopRecordcontroller', 2), ('quit', 2), ('stream', 2), ('SensorCtsHelper', 1), ('getName', 1), ('getRequestedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('getFrequencyHz', 1), ('getMinDelay', 1), ('getMaxDelay', 1), ('RecordProcedureControllerCallback', 1), ('startRecordProcedureController', 1), ('stopRecordProcedureController', 1), ('getExpectedSamplingPeriodUs', 1)]"	"[('CtsSensorTestCases', 26)]"	""	"android.hardware.cts.helpers.SensorRatePermissionEventConnectionTestHelper"	"stream"	"CtsSensorTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SingleSensorTests.java', 9), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorBatchingTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/InitialValueVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/OffsetVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/StandardDeviationVerification.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/RVCVRecordActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorBatchingFifoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/JitterVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorIntegrationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorRatePermissionEventConnectionTestHelper.java', 1)]"	"[('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/helpers/sensorverification/InitialValueVerification.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/helpers/sensorverification/OffsetVerification.java)', 1), ('(6,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(2,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorSupportTest.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/helpers/sensorverification/StandardDeviationVerification.java)', 1), ('(3,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/com/android/cts/verifier/sensors/RVCVRecordActivity.java)', 1), ('(2,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(2,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorBatchingFifoTest.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/helpers/sensorverification/JitterVerification.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorIntegrationTests.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java)', 1), ('(4,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SensorBatchingTests.java)', 1), ('(9,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/SingleSensorTests.java)', 1), ('(1,TYPE_MAGNETIC_FIELD_UNCALIBRATED,/android/hardware/cts/helpers/SensorRatePermissionEventConnectionTestHelper.java)', 1)]"	"[('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[or.TYPE_MAGNETIC_FIELD_UNCALIBRATED,                UNCAL_MAGNETOMETER_MIN_FIFO_LENGTH);    }   ])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/InitialValueVerification.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[OR,                new Pair<Float, Long>(Float.MAX_VALUE, DEFAULT_INITIAL_WINDOW_LENGTH));    }}])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/OffsetVerification.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ > maxOffsetWithError) {                mInvalidSamples.add(event);            }        }    }}])', 1), ('([6:/android/hardware/cts/helpers/SensorCtsHelper.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[6]:method_text:[;        SystemUtil.runShellCommand(InstrumentationRegistry.getInstrumentation(), command);    }}])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[Support(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED);    }    @CddTest(requirement=""7.3.9/C-2-7"")   ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[     return (mSensorManager != null && mSensorManager.getDefaultSensor(sensorType) != null);    }}])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/StandardDeviationVerification.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[VALUE, Float.MAX_VALUE, Float.MAX_VALUE, Float.MAX_VALUE,                Float.MAX_VALUE});    }}])', 1), ('([3:/com/android/cts/verifier/sensors/RVCVRecordActivity.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[3]:method_text:[ch (Exception e)            {                e.printStackTrace();            }        }    }}])', 1), ('([2:/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[2]:method_text:[erToContinue();        } finally {            magnetometer.unregisterListener();        }    }}])', 1), ('([2:/android/hardware/cts/SensorBatchingFifoTest.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[2]:method_text:[IBRATED,                getReservedFifoLength(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED));    }   ])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/JitterVerification.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[AX_VALUE);        DEFAULTS.put(Sensor.TYPE_GEOMAGNETIC_ROTATION_VECTOR, Integer.MAX_VALUE);    }}])', 1), ('([1:/android/hardware/cts/SensorIntegrationTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[le {        verifySensorReconfigureWhileActive(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED);    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[D,                                             Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED);    }   ])', 1), ('([1:/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[edMemorySize);        eventPool.reset();        byteBuffer.clear();        return events;    }}])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[tchingSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[nBatchingSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[nFlushSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ runFlushSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[nSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, SensorManager.SENSOR_DELAY_FASTEST);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[s Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_200HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[s Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_100HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_50HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_25HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_15HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ws Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_10HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ows Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_5HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ows Throwable {        runSensorTest(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED, RATE_1HZ);    }   ])', 1), ('([1:/android/hardware/cts/helpers/SensorRatePermissionEventConnectionTestHelper.java]:[TYPE_MAGNETIC_FIELD_UNCALIBRATED]:[1]:method_text:[ents();        mTestSensorManager.unregisterListener();        return testSensorEventList;    }}])', 1)]"	""	""	"[('TYPE_MAGNETIC_FIELD_UNCALIBRATED', 28)]"	"[('[android.hardware.cts.SensorParameterRangeTest testUncalMagnetometerFifoLength CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.OffsetVerification isEmpty CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsMagneticFieldUncalibrated CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsRotationVectorIfHasAGM CtsSensorTestCases]', 1), ('[com.android.cts.verifier.sensors.RVCVRecordActivity getDefaultDisplay None]', 1), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 1), ('[android.hardware.cts.SensorBatchingFifoTest testUncalMagnetometerFifoLength CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.JitterVerification isSensorSamplingRateOverloaded CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testUncalibratedMagneticFieldReconfigureWhileActive CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest testRateIndependencyMagUncalMagSingleChannel CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.SensorRatePermissionDirectReportTestHelper toList CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_fastest_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_50hz_batching CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_fastest_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorBatchingTests testMagneticFieldUncalibrated_50hz_flush CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_fastest CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_200hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_100hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_50hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_25hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_15hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_10hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_5hz CtsSensorTestCases]', 1), ('[android.hardware.cts.SingleSensorTests testMagneticFieldUncalibrated_1hz CtsSensorTestCases]', 1), ('[android.hardware.cts.helpers.SensorRatePermissionEventConnectionTestHelper toList CtsSensorTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.2  . IEEE 802.11"	"7.4.2"	"C-1-7"	"7.4.2/C-1-7"	"07040200.670107"	"""C-1-7] MUST randomize the source MAC address and sequence number of probe request frames, once at the beginning of each scan, while STA is disconnected."""	""	""	"MAC STA"	""	""	""	""	"[('android.media.cts.AudioManagerTest', 37), ('android.server.wm.SplashscreenTests', 8), ('android.media.cts.AudioPlaybackConfigurationTest', 7), ('android.media.cts.SystemMediaRouter2Test', 6), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 4), ('android.view.cts.ViewAnimationMatrixTest', 4), ('com.android.compatibility.common.deviceinfo.TestDeviceInfo', 2), ('android.security.SELinuxTargetSdkTest', 2), ('android.database.cts.AbstractCursor_SelfContentObserverTest', 2), ('android.content.pm.cts.shortcutmanager.throttling.ThrottledTests', 1), ('android.graphics.pdf.cts.Utils', 1), ('android.os.cts.IntentLaunchReceiver', 1), ('android.location.cts.gnss.asn1.supl2.supl_report.ResultCode', 1), ('android.cts.backup.restoresessionapp.BaseRestoreSessionAppTest', 1), ('com.android.cts.verifier.p2p.RequesterTestActivity', 1)]"	"[('getWidth', 12), ('setUp', 11), ('getHeight', 10), ('getName', 5), ('getInstrumentation', 5), ('getClass', 4), ('endGroup', 4), ('getResources', 3), ('recycle', 3), ('tearDown', 3), ('getTargetContext', 3), ('getPackageName', 3), ('run', 2), ('release', 2), ('startGroup', 2), ('endArray', 2), ('StringBuilder', 2), ('toString', 2), ('edit', 2), ('commit', 2), ('getSystem', 2), ('RouteCallback', 1), ('getCacheDir', 1), ('flush', 1), ('Matrix', 1), ('width', 1), ('height', 1), ('getMediaDirString', 1), ('stop', 1), ('DumpOnFailure', 1), ('getAssignedValue', 1), ('clearSharedPrefs', 1), ('clear', 1), ('getContext', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getPackageManager', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1)]"	"[('CtsMediaTestCases', 50), ('CtsWindowManagerDeviceTestCases', 8), ('CtsShortcutManagerTestCases', 4), ('CtsViewTestCases', 4), ('CtsSelinuxTargetSdk27TestCases', 2), ('CtsDatabaseTestCases', 2), ('CtsPdfTestCases', 1), ('CtsLocationGnssTestCases', 1)]"	""	"android.media.cts.AudioManagerTest"	"getInstrumentation"	"CtsMediaTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 37), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SystemMediaRouter2Test.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 4), ('/home/gpoor/cts-12-source/cts/common/device-side/device-info/tests/src/com/android/compatibility/common/deviceinfo/TestDeviceInfo.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/selinux/selinuxTargetSdk27/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/AbstractCursor_SelfContentObserverTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/throttling/src/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/IntentLaunchReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/RestoreSessionTest/src/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/RequesterTestActivity.java', 1)]"	"[('(42,STA,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(8,STA,/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java)', 1), ('(14,STA,/android/graphics/pdf/cts/Utils.java)', 1), ('(62,STA,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(47,STA,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(134,STA,/android/server/wm/SplashscreenTests.java)', 1), ('(2,MAC,/com/android/compatibility/common/deviceinfo/TestDeviceInfo.java)', 1), ('(3,STA,/com/android/compatibility/common/deviceinfo/TestDeviceInfo.java)', 1), ('(5,STA,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(2,STA,/android/security/SELinuxTargetSdkTest.java)', 1), ('(1,STA,/android/os/cts/IntentLaunchReceiver.java)', 1), ('(5,STA,/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java)', 1), ('(4,MAC,/android/database/cts/AbstractCursor_SelfContentObserverTest.java)', 1), ('(3,STA,/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java)', 1), ('(17,STA,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(3,MAC,/android/media/cts/AudioManagerTest.java)', 1), ('(134,STA,/android/media/cts/AudioManagerTest.java)', 1)]"	"[('([1:/android/media/cts/AudioManagerTest.java]:[STA]:[1]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 10), ('([1:/android/media/cts/AudioManagerTest.java]:[STA]:[1]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 2), ('([32:/android/media/cts/SystemMediaRouter2Test.java]:[STA]:[32]:method_text:[callbacks        clearCallbacks();        mUiAutomation.dropShellPermissionIdentity();    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[STA]:[2]:method_text:[        assertNull(MediaRouter2.getInstance(mContext, ""com.non.existent.package.name""));    }   ])', 1), ('([3:/android/media/cts/SystemMediaRouter2Test.java]:[STA]:[3]:method_text:[r2ForCts,                MediaRouter2.getInstance(mContext, mContext.getPackageName()));    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[STA]:[1]:method_text:[ame instance.        assertSame(controller, mSystemRouter2ForCts.getSystemController());    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[STA]:[1]:method_text:[         mSystemRouter2ForCts.unregisterControllerCallback(controllerCallback);        }    }   ])', 1), ('([3:/android/media/cts/SystemMediaRouter2Test.java]:[STA]:[3]:method_text:[r (RoutingController controller : controllers) {            controller.release();        }    }}])', 1), ('([8:/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java]:[STA]:[8]:method_text:[ynamicShortcuts(list()));            assertTrue(manager.updateShortcuts(list()));        }    }}])', 1), ('([14:/android/graphics/pdf/cts/Utils.java]:[STA]:[14]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([15:/android/media/cts/AudioPlaybackConfigurationTest.java]:[STA]:[15]:method_text:[   // create an AudioPlaybackConfiguration directly, we first need to play something to get one.   ])', 1), ('([3:/android/media/cts/AudioPlaybackConfigurationTest.java]:[STA]:[3]:method_text:[             configToMarshall.getAudioAttributes(), restoredConfig.getAudioAttributes());    }   ])', 1), ('([5:/android/media/cts/AudioPlaybackConfigurationTest.java]:[STA]:[5]:method_text:[     fail(""Exception thrown during reflection on config privileged fields""+ e);        }    }   ])', 1), ('([8:/android/media/cts/AudioPlaybackConfigurationTest.java]:[STA]:[8]:method_text:[           if (h != null) {                h.getLooper().quit();            }        }    }   ])', 1), ('([6:/android/media/cts/AudioPlaybackConfigurationTest.java]:[STA]:[6]:method_text:[           if (h != null) {                h.getLooper().quit();            }        }    }   ])', 1), ('([12:/android/media/cts/AudioPlaybackConfigurationTest.java]:[STA]:[12]:method_text:[using SoundPool"",                nbActivePlayersBeforeStart, nbActivePlayersAfterPause);    }   ])', 1), ('([13:/android/media/cts/AudioPlaybackConfigurationTest.java]:[STA]:[13]:method_text:[t HAL, skipping test "" + testName);            return false;        }        return true;    }}])', 1), ('([17:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[STA]:[17]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([18:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[STA]:[18]:method_text:[ents(start3, end3)),                mPackageContext1.getPackageName(), idNonexistance));    }   ])', 1), ('([4:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[STA]:[4]:method_text:[d, mPackageContext1, id1,                ""SHORTCUT_INVOCATION event was not reported."");    }   ])', 1), ('([8:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[STA]:[8]:method_text:[yEvents(start, end)), packageContext.getPackageName(), id),                failureMessage);    }}])', 1), ('([83:/android/server/wm/SplashscreenTests.java]:[STA]:[83]:method_text:[TRA_INTENT, startIntent);        homeActivity.sendCommand(COMMAND_START_ACTIVITY, data);    }   ])', 1), ('([20:/android/server/wm/SplashscreenTests.java]:[STA]:[20]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([5:/android/server/wm/SplashscreenTests.java]:[STA]:[5]:method_text:[Equals(Color.BLUE, journal.extras.getInt(ICON_BACKGROUND_COLOR, Color.YELLOW));        }    }   ])', 1), ('([4:/android/server/wm/SplashscreenTests.java]:[STA]:[4]:method_text:[ConfigNightMode,                journal.extras.getInt(GET_NIGHT_MODE_ACTIVITY_CHANGED));    }   ])', 1), ('([8:/android/server/wm/SplashscreenTests.java]:[STA]:[8]:method_text:[NDING_VIEW));        assertTrue(journal.extras.getBoolean(CENTER_VIEW_IS_SURFACE_VIEW));    }   ])', 1), ('([6:/android/server/wm/SplashscreenTests.java]:[STA]:[6]:method_text:[E_ICON_EXIT);        assertFalse(journal.extras.getBoolean(RECEIVE_SPLASH_SCREEN_EXIT));    }   ])', 1), ('([3:/android/server/wm/SplashscreenTests.java]:[STA]:[3]:method_text:[      }        mWmState.waitForActivityRemoved(activity);        separateTestJournal();    }   ])', 1), ('([5:/android/server/wm/SplashscreenTests.java]:[STA]:[5]:method_text:[CTIVITY,                intent -> {});        waitAndAssertOverrideThemeColor(Color.BLUE);    }}])', 1), ('([2:/com/android/compatibility/common/deviceinfo/TestDeviceInfo.java]:[MAC]:[2]:method_text:[sult(""max_length_string"", sb.toString());        store.addArrayResult(""max_num_ints"", arr);    }}])', 1), ('([3:/com/android/compatibility/common/deviceinfo/TestDeviceInfo.java]:[STA]:[3]:method_text:[sult(""max_length_string"", sb.toString());        store.addArrayResult(""max_num_ints"", arr);    }}])', 1), ('([2:/android/view/cts/ViewAnimationMatrixTest.java]:[STA]:[2]:method_text:[     new ActivityTestRule<>(ViewAnimationMatrixActivity.class, false, false);    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewAnimationMatrixTest.java]:[STA]:[1]:method_text:[iew.setAnimationMatrix(matrix);        assertEquals(matrix, view.getAnimationMatrix());    }   ])', 1), ('([1:/android/view/cts/ViewAnimationMatrixTest.java]:[STA]:[1]:method_text:[ot, view.getWidth(), view.getHeight());        assertAllPixelsAre(Color.BLACK, bitmap);    }   ])', 1), ('([1:/android/view/cts/ViewAnimationMatrixTest.java]:[STA]:[1]:method_text:[ j++) {                assertEquals(color, bitmap.getPixel(i, j));            }        }    }}])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[STA]:[1]:method_text:[erify that selinux context is the expected type based on     * targetSdkVersion = 26-27     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[STA]:[1]:method_text:[ile:s0:c512,c768\\n"" +            ""Actual value: "";        appDataContext(context, msg);    }   ])', 1), ('([1:/android/os/cts/IntentLaunchReceiver.java]:[STA]:[1]:method_text:[        if (innerIntent != null) {            context.sendBroadcast(innerIntent);        }    }}])', 1), ('([5:/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java]:[STA]:[5]:method_text:[blic String toIndentedString(String indent) {    return ""ResultCode = "" + getValue() + "";\\n"";  }}])', 1), ('([2:/android/database/cts/AbstractCursor_SelfContentObserverTest.java]:[MAC]:[2]:method_text:[kAbstractCursor mac = new MockAbstractCursor();        mac.getMockSelfContentObserver();    }   ])', 1), ('([2:/android/database/cts/AbstractCursor_SelfContentObserverTest.java]:[MAC]:[2]:method_text:[ = mac.getMockSelfContentObserver();        assertFalse(msc.deliverSelfNotifications());    }   ])', 1), ('([3:/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java]:[STA]:[3]:method_text:[, int prefValue) {        assertThat(mPreferences.getInt(prefKey, 0)).isEqualTo(prefValue);    }}])', 1), ('([17:/com/android/cts/verifier/p2p/RequesterTestActivity.java]:[STA]:[17]:method_text:[ }).show();    }    private TestCaseListener getTestCaseListener() {        return this;    }}])', 1), ('([3:/android/media/cts/AudioManagerTest.java]:[MAC]:[3]:method_text:[terruptedException e) { }                return mIntentReceived;            }        }    }   ])', 1), ('([51:/android/media/cts/AudioManagerTest.java]:[STA]:[51]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[STA]:[1]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[STA]:[4]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([14:/android/media/cts/AudioManagerTest.java]:[STA]:[14]:method_text:[terruptedException e) { }                return mIntentReceived;            }        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[STA]:[1]:method_text:[);        mAudioManager.playSoundEffect(AudioManager.FX_FOCUS_NAVIGATION_RIGHT, volume);    }   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[STA]:[2]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[STA]:[1]:method_text:[Manager.setMode(MODE_NORMAL);        assertEquals(MODE_NORMAL, mAudioManager.getMode());    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[STA]:[1]:method_text:[)    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[STA]:[1]:method_text:[BRATE : RINGER_MODE_SILENT,                    mAudioManager.getRingerMode());        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[STA]:[1]:method_text:[        if (!isMusicPlayingBeforeTest) {            assertMusicActive(false);        }    }   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[STA]:[2]:method_text:[ITY, originalVol,                    ""Should not be able to change A11y vol"");        }    }   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[STA]:[2]:method_text:[volume to 0"",                    mAudioManager.getStreamVolume(STREAM_VOICE_CALL) != 0);    }   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[STA]:[2]:method_text:[etStreamMute failed."",                    mAudioManager.isStreamMute(stream));        }    }   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[STA]:[2]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 1), ('([3:/android/media/cts/AudioManagerTest.java]:[STA]:[3]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[STA]:[1]:method_text:[           STREAM_ALARM, STREAM_NOTIFICATION,            STREAM_DTMF,  STREAM_ACCESSIBILITY };   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[STA]:[1]:method_text:[ustSuggestedStreamVolume(ADJUST_RAISE, 66747, 0);    }    @CddTest(requirement=""5.4.1/C-1-4"")   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[STA]:[2]:method_text:[         return maxRingVol;        } else {            return maxRingVol - 1;        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[STA]:[1]:method_text:[    assertEquals(""Allowed capture policy doesn\'t match"", setPolicy, getPolicy);        }    }   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[STA]:[2]:method_text:[() {        mAudioManager.startBluetoothSco();        mAudioManager.stopBluetoothSco();    }   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[STA]:[2]:method_text:[  mAudioManager.startBluetoothScoVirtualCall();        mAudioManager.stopBluetoothSco();    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[STA]:[1]:method_text:[ {            fail(""onPreferredDevicesForStrategyChanged must not be called"");        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[STA]:[1]:method_text:[          fail(""onPreferredDevicesForCapturePresetChanged must not be called"");        }    }   ])', 1), ('([23:/android/media/cts/AudioManagerTest.java]:[STA]:[23]:method_text:[ibutes() require privledged permission MODIFY_AUDIO_ROUTING    // and thus cannot be tested here.}])', 1)]"	""	""	"[('STA', 74), ('MAC', 4)]"	"[('[android.media.cts.AudioManagerTest testSpeakerphoneIntent CtsMediaTestCases]', 2), ('[android.media.cts.SystemMediaRouter2Test ArrayList CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetInstanceWithInvalidPackageName CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetInstanceReturnsSameInstance CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetSystemController CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerSelectAndDeselectRoute CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerRelease CtsMediaTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.throttling.ThrottledTests ThrottledTests None]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testParcelableWriteToParcel CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetterMediaPlayer CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testCallbackMediaPlayerHandler CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testCallbackMediaPlayerRelease CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetterSoundPool CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetAudioDeviceInfoMediaPlayerStart CtsMediaTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest testReportShortcutUsed CtsShortcutManagerTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest testShortcutInvocationEventIsVisible CtsShortcutManagerTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest testShortcutInvocationEventIsNotVisible CtsShortcutManagerTestCases]', 1), ('[android.server.wm.SplashscreenTests prepareTestLauncher CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitAnimationCancel CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSetApplicationNightMode CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitIconAnimatingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testCancelHandleExitIconAnimatingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testShortcutChangeTheme CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testOverrideSplashscreenTheme CtsWindowManagerDeviceTestCases]', 1), ('[android.view.cts.ViewAnimationMatrixTest testAnimationMatrixGetter CtsViewTestCases]', 1), ('[android.view.cts.ViewAnimationMatrixTest testAnimationMatrixAppliedDuringDrawing CtsViewTestCases]', 1), ('[android.view.cts.ViewAnimationMatrixTest testAnimationMatrixClearedWithPassingNull CtsViewTestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDomainContext CtsSelinuxTargetSdk27TestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDataContext CtsSelinuxTargetSdk27TestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_report.ResultCode isExtensionValue CtsLocationGnssTestCases]', 1), ('[android.database.cts.AbstractCursor_SelfContentObserverTest testConstructor CtsDatabaseTestCases]', 1), ('[android.database.cts.AbstractCursor_SelfContentObserverTest testDeliverSelfNotifications CtsDatabaseTestCases]', 1), ('[com.android.cts.verifier.p2p.RequesterTestActivity getTestCase None]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMicrophoneMuteIntent CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSoundEffects CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testCheckingZenModeBlockDoesNotRequireNotificationPolicyAccess CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMusicActive CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAccessMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetEncodedSurroundMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAccessRingMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testVolume CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAccessibilityVolume CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetVoiceCallVolumeToZeroPermission CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMuteDndUnaffectedStreams CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInTotalSilenceMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInAlarmsOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInTotalSilenceMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInAlarmsOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInPriorityOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInPriorityOnly CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMuteAll CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMediaAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlySystemAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlySystemDisallowedWithRingerMuted CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyAlarmsAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyRingerAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyChannelsCanBypassDnd CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeWithIllegalDirection CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustSuggestedStreamVolumeWithIllegalArguments CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetAudioHwSyncForSession CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAllowedCapturePolicy CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testStartStopBluetoothSco CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testStartStopBluetoothScoVirtualCall CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetAdditionalOutputDeviceDelay CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPreferredDevicesForStrategy CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetDevices CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-8"	"7.5/H-1-8"	"07050000.720108"	"""[7.5/H-1-8] MUST support CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_RAW and android.graphics.ImageFormat.RAW_SENSOR for the primary back camera. <h4 id=""2273_hardware"" """	""	""	"REQUEST_AVAILABLE_CAPABILITIES_RAW android.graphics.ImageFormat.RAW CameraMetadata.REQUEST RAW_SENSOR"	""	""	""	""	"[('android.hardware.camera2.cts.ImageReaderTest', 8), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 8), ('android.hardware.camera2.cts.StillCaptureTest', 5), ('android.hardware.camera2.cts.StaticMetadataTest', 3), ('android.hardware.camera2.cts.helpers.StaticMetadat', 3), ('android.hardware.camera2.cts.CameraDeviceTest', 2), ('android.hardware.camera2.cts.CaptureRequestTest', 2), ('android.hardware.camera2.cts.MultiResolutionImageReaderTest', 2), ('android.hardware.camera2.cts.ZoomCaptureTest', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('android.app.cts.SystemFeaturesTest', 1), ('android.hardware.camera2.cts.CtsUtilsTest', 1), ('android.media.cts.CodecImage', 1), ('android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase', 1), ('com.android.cts.verifier.sensors.RVCVRecordActivity', 1), ('android.hardware.camera2.cts.PerformanceTest', 1)]"	"[('close', 16), ('start', 8), ('getWidth', 8), ('getHeight', 8), ('AtomicInteger', 7), ('getLooper', 5), ('Object', 4), ('capacity', 4), ('clear', 4), ('getSurface', 4), ('setUp', 4), ('quit', 3), ('quitSafely', 3), ('run', 3), ('getOutputStream', 3), ('getAeModeName', 3), ('getAfModeName', 3), ('BlockingStateCallback', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('startRecordcontroller', 2), ('stopRecordcontroller', 2), ('getSimpleName', 1), ('onCreate', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('build', 1), ('onDestroy', 1), ('size', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('release', 1), ('getFormat', 1), ('getTimestamp', 1), ('getCropRect', 1), ('getPlanes', 1), ('getRowStride', 1), ('getPixelStride', 1), ('getBuffer', 1), ('CameraErrorCollector', 1), ('getPackageManager', 1), ('RecordProcedureControllerCallback', 1), ('startRecordProcedureController', 1), ('stopRecordProcedureController', 1)]"	"[('CtsCameraTestCases', 34), ('CtsAppTestCases', 1)]"	""	"android.hardware.camera2.cts.MultiResolutionImageReaderTest"	"quit"	"CtsCameraTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/StaticMetadata.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CtsUtilsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/CodecImage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/RVCVRecordActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java', 1)]"	"[('(2,RAW_SENSOR,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(5,RAW_SENSOR,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(4,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(6,RAW_SENSOR,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(1,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/app/cts/SystemFeaturesTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/CtsUtilsTest.java)', 1), ('(2,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(2,RAW_SENSOR,/android/media/cts/CodecImage.java)', 1), ('(1,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(2,CameraMetadata.REQUEST,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(8,RAW_SENSOR,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(4,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(10,RAW_SENSOR,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(4,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(1,REQUEST_AVAILABLE_CAPABILITIES_RAW,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,RAW_SENSOR,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(4,RAW_SENSOR,/com/android/cts/verifier/sensors/RVCVRecordActivity.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(2,RAW_SENSOR,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1)]"	"[('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ AE/AF can settle.     * - Capturing with a request targeting all three output streams.     */   ])', 2), ('([2:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[RAW_SENSOR]:[2]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([5:/com/android/cts/verifier/camera/its/ItsService.java]:[RAW_SENSOR]:[5]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([3:/android/hardware/camera2/cts/StaticMetadataTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[3]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[RAW_SENSOR]:[1]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 1), ('([6:/android/hardware/camera2/cts/CameraTestUtils.java]:[RAW_SENSOR]:[6]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[          if (camera != null) {                camera.release();            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CtsUtilsTest.java]:[RAW_SENSOR]:[1]:method_text:[ int getPixelStride() { return 1; }    @Override public ByteBuffer getBuffer() { return buffer; }}])', 1), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[2]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[RAW_SENSOR]:[1]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([2:/android/media/cts/CodecImage.java]:[RAW_SENSOR]:[2]:method_text:[ the image data for this plane.         */        public abstract ByteBuffer getBuffer();    }}])', 1), ('([1:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([2:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[CameraMetadata.REQUEST]:[2]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([2:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[RAW_SENSOR]:[2]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[/false);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[*/true);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[SENSOR);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[* Test two image stream (YUV420_888 and RAW_SENSOR) capture by using ImageReader.     *     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[* ImageReader factory method that has usage flag argument, and uses a custom usage flag.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[geReader with the     * ImageReader factory method that has usage flag argument.     *     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[EG outputs for the same frame match for each YUV     * resolution and format supported.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[pported yet.        }    }    /**     * Test values for the available session keys.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[nputSize));            }        }    }    /**     * Check depth output capability     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[ cross-check the high speed sizes and fps ranges from     * the StreamConfigurationMap.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[1]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[1]:method_text:[     }    }    /**     * Test values for static metadata used by the RAW capability.     */   ])', 1), ('([5:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[5]:method_text:[nputSize));            }        }    }    /**     * Check depth output capability     */   ])', 1), ('([3:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RAW_SENSOR]:[3]:method_text:[ cross-check the high speed sizes and fps ranges from     * the StreamConfigurationMap.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[t basic Raw ZSL capture. Raw buffer avaiablility is checked, but raw buffer data is not.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[e scan is triggered to make sure the AF     * converges in reasonable time.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[RAW_SENSOR]:[2]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[REQUEST_AVAILABLE_CAPABILITIES_RAW]:[1]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[RAW_SENSOR]:[1]:method_text:[ack level should be     *   close enough to the optical black level values.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[RAW_SENSOR]:[1]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([4:/com/android/cts/verifier/sensors/RVCVRecordActivity.java]:[RAW_SENSOR]:[4]:method_text:[ch (Exception e)            {                e.printStackTrace();            }        }    }}])', 1), ('([2:/android/hardware/camera2/cts/PerformanceTest.java]:[RAW_SENSOR]:[2]:method_text:[, and the frame duration, which is the timestamp     * gap between results.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[     testMultiResolutionImageReaderForFormat(ImageFormat.RAW_SENSOR, /*repeating*/false);    }   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[RAW_SENSOR]:[1]:method_text:[      testMultiResolutionImageReaderForFormat(ImageFormat.RAW_SENSOR, /*repeating*/true);    }   ])', 1)]"	""	""	"[('RAW_SENSOR', 27), ('REQUEST_AVAILABLE_CAPABILITIES_RAW', 14), ('CameraMetadata.REQUEST', 1)]"	"[('[android.hardware.camera2.cts.helpers.StaticMetadat getCharacteristics None]', 3), ('[android.hardware.camera2.cts.StaticMetadataTest testCapabilities CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testUltraHighResolutionSensorCharacteristics CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStreamConfigurationMap CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testHwSupportedLevel CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[android.app.cts.SystemFeaturesTest testCameraFeatures CtsAppTestCases]', 1), ('[android.hardware.camera2.cts.CtsUtilsTest testCopyPad3to5 CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testRepeatingRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testLongProcessingRepeatingRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testYuvAndJpegWithUsageFlag CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testImageReaderYuvAndRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testImageReaderPrivateWithProtectedUsageFlag CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testImageReaderYuvAndRawWithUsageFlag CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStaticRawCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testKeys CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testBasicRawCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testBasicRawZslCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFullRawCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFullRawZSLCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testBlackLevelLock CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase isInstantApp CtsCameraTestCases]', 1), ('[com.android.cts.verifier.sensors.RVCVRecordActivity getDefaultDisplay None]', 1), ('[android.hardware.camera2.cts.PerformanceTest testSingleCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRepeatingRaw CtsCameraTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.5.1  . Application Restriction"	"3.5.1"	"C-1-10"	"3.5.1/C-1-10"	"03050100.670110"	"""C-1-10] MUST NOT allow an app to be automatically placed in the RESTRICTED bucket within 2 hours of the most recent usage by a user. If device implementations extend the app restrictions that are implemented in AOSP, they:"""	""	""	"RESTRICTED"	""	""	""	""	"[('android.permission2.cts.RestrictedPermissionsTest', 20), ('android.app.usage.cts.UsageStatsTest', 5), ('android.net.wifi.cts.ConnectedNetworkScorerTest', 4), ('android.car.cts.CarUxRestrictionsManagerTest', 3), ('android.appsecurity.cts.ApexSignatureVerificationTest', 2), ('com.android.cts.verifier.audio.USBRestrictRecordAActivity', 1), ('android.keystore.cts.KeyProtectionTest', 1), ('android.keystore.cts.KeyInfoTest', 1), ('android.os.cts.UsbDebuggingTest', 1), ('android.os.cts.AccessSerialModernTest', 1), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 1), ('com.android.cts.appsearch.external.app.AppSearchSessionCtsTestBase', 1), ('android.security.cts.PackageSignatureTest', 1), ('android.carrierapi.cts.NetworkScanApiTest', 1), ('android.net.vcn.cts.TestNetworkWrapper', 1), ('android.host.accounts.BaseMultiUserTest', 1)]"	"[('getDevice', 6), ('getContext', 5), ('getSimpleName', 5), ('setUp', 4), ('getInstrumentation', 4), ('getPackageName', 2), ('deleteOnExit', 2), ('getUiAutomation', 2), ('build', 2), ('WindowManagerStateHelper', 1), ('ErrorCollector', 1), ('size', 1), ('pullWellKnownSignatures', 1), ('DeviceState', 1), ('Object', 1), ('start', 1), ('tearDown', 1), ('Builder', 1), ('clearCapabilities', 1), ('CloseGuard', 1), ('getFileDescriptor', 1), ('getInterfaceName', 1), ('getMaxNumberOfUsersSupported', 1), ('getCurrentUser', 1), ('getPrimaryUserId', 1), ('setUpOnce', 1), ('CommandBroadcastReceiver', 1), ('IntentFilter', 1), ('tearDownOnce', 1), ('shareUidBetweenRestrictedAndNotRestrictedApp', 1)]"	"[('CtsPermission2TestCases', 20), ('CtsUsageStatsTestCases', 5), ('CtsWifiTestCases', 4), ('CtsCarTestCases', 3), ('CtsKeystoreTestCases', 2), ('CtsAppSecurityHostTestCases', 2), ('CtsDevicePolicyTestCases', 1), ('CtsAppSearchTestCases', 1), ('CtsSecurityTestCases', 1), ('CtsCarrierApiTestCases', 1), ('CtsVcnTestCases', 1), ('CtsAccountsHostTestCases', 1)]"	""	"android.permission2.cts.RestrictedPermissionsTest"	"shareUidBetweenRestrictedAndNotRestrictedApp"	"CtsPermission2TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 20), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConnectedNetworkScorerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarUxRestrictionsManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApexSignatureVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyProtectionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/UsbDebuggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AccessSerialModern/src/android/os/cts/AccessSerialModernTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/appsearch/src/com/android/cts/appsearch/external/app/AppSearchSessionCtsTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/PackageSignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/NetworkScanApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/vcn/src/android/net/vcn/cts/TestNetworkWrapper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/BaseMultiUserTest.java', 1)]"	"[('(1,RESTRICTED,/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java)', 1), ('(1,RESTRICTED,/android/keystore/cts/KeyProtectionTest.java)', 1), ('(10,RESTRICTED,/android/net/wifi/cts/ConnectedNetworkScorerTest.java)', 1), ('(2,RESTRICTED,/android/keystore/cts/KeyInfoTest.java)', 1), ('(8,RESTRICTED,/android/car/cts/CarUxRestrictionsManagerTest.java)', 1), ('(2,RESTRICTED,/android/os/cts/UsbDebuggingTest.java)', 1), ('(23,RESTRICTED,/android/app/usage/cts/UsageStatsTest.java)', 1), ('(1,RESTRICTED,/android/os/cts/AccessSerialModernTest.java)', 1), ('(2,RESTRICTED,/android/appsecurity/cts/ApexSignatureVerificationTest.java)', 1), ('(2,RESTRICTED,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(2,RESTRICTED,/com/android/cts/appsearch/external/app/AppSearchSessionCtsTestBase.java)', 1), ('(2,RESTRICTED,/android/security/cts/PackageSignatureTest.java)', 1), ('(1,RESTRICTED,/android/carrierapi/cts/NetworkScanApiTest.java)', 1), ('(1,RESTRICTED,/android/net/vcn/cts/TestNetworkWrapper.java)', 1), ('(2,RESTRICTED,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(113,RESTRICTED,/android/permission2/cts/RestrictedPermissionsTest.java)', 1)]"	"[('([6:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[6]:method_text:[o restricted permission should be granted.        assertNoRestrictedPermissionGranted();    }   ])', 3), ('([5:/android/app/usage/cts/UsageStatsTest.java]:[RESTRICTED]:[5]:method_text:[t apps    @AppModeFull(reason = ""Test APK Activity not found when installed as an instant app"")   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[1]:method_text:[       ACCESS_BACKGROUND_LOCATION)));        assertAllRestrictedPermissionWhitelisted();    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[1]:method_text:[ions.singleton(ACCESS_FINE_LOCATION));        assertNoRestrictedPermissionWhitelisted();    }   ])', 2), ('([1:/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java]:[RESTRICTED]:[1]:method_text:[ filter);            mUsbManager.requestPermission(theDevice, permissionIntent);        }    }}])', 1), ('([1:/android/keystore/cts/KeyProtectionTest.java]:[RESTRICTED]:[1]:method_text:[E_COUNT, spec.getMaxUsageCount());        assertEquals(spec.isStrongBoxBacked(), false);    }   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[RESTRICTED]:[1]:method_text:[  *     * Verifies that the external scorer is not notified for local only connections.     */   ])', 1), ('([7:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[RESTRICTED]:[7]:method_text:[oem paid suggestion connections.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[RESTRICTED]:[1]:method_text:[ private suggestion connections.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[RESTRICTED]:[1]:method_text:[corerForRestrictedSuggestionConnection(                Set.of(NET_CAPABILITY_OEM_PRIVATE));    }}])', 1), ('([2:/android/keystore/cts/KeyInfoTest.java]:[RESTRICTED]:[2]:method_text:[unt();        assertEquals(KeyProperties.UNRESTRICTED_USAGE_COUNT, remainingUsageCount);    }   ])', 1), ('([3:/android/car/cts/CarUxRestrictionsManagerTest.java]:[RESTRICTED]:[3]:method_text:[oString(),                restrictions.getMaxRestrictedStringLength(), maxStringLength);    }   ])', 1), ('([3:/android/car/cts/CarUxRestrictionsManagerTest.java]:[RESTRICTED]:[3]:method_text:[g(),                copyOfRestrictions.getMaxRestrictedStringLength(), maxStringLength);    }   ])', 1), ('([2:/android/car/cts/CarUxRestrictionsManagerTest.java]:[RESTRICTED]:[2]:method_text:[ 0L);        assertTrue(oneBuilder.build().isSameRestrictions(anotherBuilder.build()));    }   ])', 1), ('([2:/android/os/cts/UsbDebuggingTest.java]:[RESTRICTED]:[2]:method_text:[java.io.File;public class UsbDebuggingTest extends AndroidTestCase {    @RestrictedBuildTest   ])', 1), ('([5:/android/app/usage/cts/UsageStatsTest.java]:[RESTRICTED]:[5]:method_text:[ity(clazz);        }    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([6:/android/app/usage/cts/UsageStatsTest.java]:[RESTRICTED]:[6]:method_text:[t apps    @AppModeFull(reason = ""Test APK Activity not found when installed as an instant app"")   ])', 1), ('([2:/android/app/usage/cts/UsageStatsTest.java]:[RESTRICTED]:[2]:method_text:[        } catch(Exception e) {                return true;            }        }, false);    }}])', 1), ('([1:/android/os/cts/AccessSerialModernTest.java]:[RESTRICTED]:[1]:method_text:[stricted from accessing persistent device identifiers. */public class AccessSerialModernTest {   ])', 1), ('([1:/android/appsecurity/cts/ApexSignatureVerificationTest.java]:[RESTRICTED]:[1]:method_text:[e, Description description, Throwable t) {            mHasTestFailure = true;        }    };   ])', 1), ('([1:/android/appsecurity/cts/ApexSignatureVerificationTest.java]:[RESTRICTED]:[1]:method_text:[oduction (user) builds.     */    @SuppressWarnings(""productionOnly"")    @RestrictedBuildTest   ])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[RESTRICTED]:[2]:method_text:[he provider that provides enterprise slice can     * see the enterprise slice requests.     */   ])', 1), ('([2:/com/android/cts/appsearch/external/app/AppSearchSessionCtsTestBase.java]:[RESTRICTED]:[2]:method_text:[get(""id1"").getResultCode())                .isEqualTo(AppSearchResult.RESULT_NOT_FOUND);    }   ])', 1), ('([2:/android/security/cts/PackageSignatureTest.java]:[RESTRICTED]:[2]:method_text:[ern TEST_PACKAGE_PATTERN = Pattern.compile(""android\\\\.[^\\\\.]+\\\\.cts"");    @RestrictedBuildTest   ])', 1), ('([1:/android/carrierapi/cts/NetworkScanApiTest.java]:[RESTRICTED]:[1]:method_text:[ radioAccessSpecifier;    }    /** Tests that the device properly requests a network scan. */   ])', 1), ('([1:/android/net/vcn/cts/TestNetworkWrapper.java]:[RESTRICTED]:[1]:method_text:[ork;                this.networkCapabilities = networkCapabilities;            }        }    }}])', 1), ('([2:/android/host/accounts/BaseMultiUserTest.java]:[RESTRICTED]:[2]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([12:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[12]:method_text:[c static void tearDownOnce() {        getContext().unregisterReceiver(sCommandReceiver);    }   ])', 1), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[3]:method_text:[ted permission should be whitelisted.        assertAllRestrictedPermissionWhitelisted();    }   ])', 1), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[3]:method_text:[ld be whitelisted.        assertRestrictedPermissionWhitelisted(whitelistedPermissions);    }   ])', 1), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[3]:method_text:[cted permission should be whitelisted.        assertNoRestrictedPermissionWhitelisted();    }   ])', 1), ('([6:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[6]:method_text:[mission should be granted.        assertRestrictedPermissionGranted(grantedPermissions);    }   ])', 1), ('([2:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[2]:method_text:[ionGranted(grantedPermissions);        } finally {            uninstallApp();        }    }   ])', 1), ('([6:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[6]:method_text:[ restricted permission should be granted.        assertAllRestrictedPermissionGranted();    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[1]:method_text:[hellCanReadAndWrite(                PackageManager.FLAG_PERMISSION_WHITELIST_INSTALLER);    }   ])', 1), ('([4:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[4]:method_text:[s whitelisted on side-load by default        assertAllRestrictedPermissionWhitelisted();    }   ])', 1), ('([5:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[5]:method_text:[RestrictedPermissionUserApp(params);        assertAllRestrictedPermissionWhitelisted();    }   ])', 1), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[3]:method_text:[nUserApp(params);        assertRestrictedPermissionWhitelisted(whitelistedPermissions);    }   ])', 1), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[3]:method_text:[lRestrictedPermissionUserApp(params);        assertNoRestrictedPermissionWhitelisted();    }   ])', 1), ('([40:/android/permission2/cts/RestrictedPermissionsTest.java]:[RESTRICTED]:[40]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 1)]"	""	""	"[('RESTRICTED', 45)]"	"[('[com.android.cts.verifier.audio.USBRestrictRecordAActivity LocalClickListener None]', 1), ('[android.keystore.cts.KeyProtectionTest testDefaults CtsKeystoreTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerOnSubsystemRestart CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerForSpecifierConnection CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerForOemPaidSuggestionConnection CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerForOemPrivateSuggestionConnection CtsWifiTestCases]', 1), ('[android.keystore.cts.KeyInfoTest testImmutabilityViaGetterReturnValues CtsKeystoreTestCases]', 1), ('[android.car.cts.CarUxRestrictionsManagerTest testCarUxRestrictionsBuilder CtsCarTestCases]', 1), ('[android.car.cts.CarUxRestrictionsManagerTest testCarUxRestrictions_CopyConstructor CtsCarTestCases]', 1), ('[android.car.cts.CarUxRestrictionsManagerTest testCarUxRestrictions_isSameRestrictions CtsCarTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest isAppStandbyEnabled CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testUserForceIntoRestricted CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testUserForceIntoRestricted_BucketDisabled CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testUserLaunchRemovesFromRestricted CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testLocusIdEventsVisibility CtsUsageStatsTestCases]', 1), ('[android.appsecurity.cts.ApexSignatureVerificationTest getApexPackageList CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApexSignatureVerificationTest testApexIncludePubKey CtsAppSecurityHostTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest TestApis CtsDevicePolicyTestCases]', 1), ('[com.android.cts.appsearch.external.app.AppSearchSessionCtsTestBase testRemoveByQuery_packageFilter CtsAppSearchTestCases]', 1), ('[android.carrierapi.cts.NetworkScanApiTest werePreconditionsSatisfied CtsCarrierApiTestCases]', 1), ('[android.net.vcn.cts.TestNetworkWrapper VcnTestNetworkCallback CtsVcnTestCases]', 1), ('[android.host.accounts.BaseMultiUserTest listUsers CtsAccountsHostTestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testDefaultAllRestrictedPermissionsWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testNoneRestrictedPermissionWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testDefaultAllRestrictedPermissionsWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testNoneRestrictedPermissionWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsGrantedAtInstall CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testCanGrantSoftRestrictedNotWhitelistedPermissions CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testAllRestrictedPermissionsGrantedAtInstall CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testWhitelistAccessControl CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadRestrictedPermissionsWhitelistingDefault CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadAllRestrictedPermissionsWhitelisted CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadWhitelistSomePermissions CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadWhitelistNoPermissions CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest isTrue CtsPermission2TestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"5.1  . Capture for Unprocessed"	"5.1"	"C-1-3"	"5.1/C-1-3"	"05010000.670103"	"""C-1-3] MUST include a USB port(s) supporting USB host mode and USB peripheral mode. | C-1-3] MUST exhibit amplitude levels in the low frequency range: specifically from &plusmn;20 dB from 5 Hz to 100 Hz compared to the mid-frequency range for each and every microphone used to record the unprocessed audio source."""	""	""	"USB port(s)"	""	""	""	""	"[('android.app.notification.legacy29.cts.NotificationAssistantServiceTest', 16), ('android.server.wm.WindowInsetsAnimationTests', 5), ('android.hardware.input.cts.tests.SonyDualshock4UsbTest', 5), ('com.android.cts.usb.TestUsbTest', 3), ('android.server.wm.WindowInputTests', 2), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 2), ('android.os.cts.UsbDebuggingTest', 2), ('android.app.notification.legacy28.cts.NotificationManager28Test', 2), ('android.permission.cts.ServicesInstantAppsCannotAccessTests', 2), ('com.android.cts.verifier.camera.its.ItsTestActivity', 1), ('android.systemui.cts.LightBarActivity', 1), ('com.android.cts.verifier.audio.USBRestrictRecordAActivity', 1), ('android.accessibilityservice.cts.utils.DisplayUtils', 1), ('com.android.cts.usb.serialtest.UsbSerialTest', 1), ('android.server.wm.BarTestUtils', 1), ('com.android.cts.verifier.battery.BatterySaverTestActivity', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('android.app.stubs.TestNotificationListener', 1), ('com.android.cts.verifier.sensors.SensorPowerTestActivity', 1), ('com.android.cts.isolatedsplitapp.SplitAppTest', 1), ('com.android.cts.verifier.audio.USBAudioPeripheralButtonsActivity', 1), ('android.carrierapi.cts.BugreportManagerTest', 1), ('android.webkit.cts.CtsTestServer', 1), ('com.android.cts.verifier.usb.device.UsbDeviceTestActivity', 1), ('com.android.cts.verifier.audio.ProAudioActivity', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('android.media.cts.AudioDeviceInfoTest', 1), ('android.voicesettings.cts.BatterySaverModeTest', 1), ('android.app.cts.SystemFeaturesTest', 1), ('android.server.wm.ForceRelayoutTestBase', 1), ('android.app.cts.TileServiceTest', 1), ('android.app.cts.InstrumentationTest', 1), ('android.adb.cts.AdbHostTest', 1)]"	"[('getWindow', 9), ('setUp', 6), ('getInstrumentation', 5), ('hashCode', 3), ('getDecorView', 3), ('systemBars', 3), ('tearDown', 3), ('getAttributes', 2), ('getIntent', 2), ('getContext', 2), ('getId', 2), ('BugreportCallbackImpl', 2), ('start', 2), ('shutdown', 2), ('getSimpleName', 2), ('close', 2), ('getName', 2), ('ResultReceiver', 1), ('Rect', 1), ('getSurface', 1), ('setup', 1), ('WindowManagerStateHelper', 1), ('pressWakeupButton', 1), ('pressUnlockButton', 1), ('launchHomeActivityNoWait', 1), ('waitForIdleSync', 1), ('getReceiverComponentName', 1), ('myUserId', 1), ('getPackageManager', 1), ('USBAudioPeripheralButtonsActivity', 1), ('cannotGetUsbManager', 1), ('getTargetContext', 1), ('simultaneousBugreportsNotAllowed', 1), ('getMethodName', 1), ('CtsTrustManager', 1), ('getAssets', 1), ('getResources', 1), ('getSingleton', 1), ('getLocalPort', 1), ('shutDownOnClientThread', 1), ('join', 1), ('now', 1), ('nanoTime', 1), ('getMaxPacketSize', 1), ('getPassButton', 1), ('IntentFilter', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getApplicationContext', 1), ('getApplicationInfo', 1), ('getSerialNumber', 1), ('Thread', 1), ('run', 1), ('getProductName', 1), ('getDevice', 1), ('ProAudioActivity', 1), ('super', 1), ('printStackTrace', 1), ('getActivity', 1), ('statusBars', 1), ('navigationBars', 1), ('getInsetsController', 1), ('flush', 1), ('deleteOnExit', 1)]"	"[('CtsLegacyNotification29TestCases', 16), ('CtsWindowManagerDeviceTestCases', 8), ('CtsHardwareTestCases', 5), ('CtsAppTestCases', 3), ('CtsLegacyNotification20TestCases', 2), ('CtsLegacyNotification28TestCases', 2), ('CtsPermissionTestCases', 2), ('CtsSystemUiTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsCarrierApiTestCases', 1), ('CtsMediaTestCases', 1), ('CtsVoiceSettingsTestCases', 1), ('CtsAdbHostTestCases', 1)]"	""	"android.app.notification.legacy29.cts.NotificationAssistantServiceTest"	"deleteOnExit"	"CtsLegacyNotification29TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy29/src/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/usb/src/com/android/cts/usb/TestUsbTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInputTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy20/src/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/UsbDebuggingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy28/src/android/app/notification/legacy28/cts/NotificationManager28Test.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ServicesInstantAppsCannotAccessTests.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/LightBarActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/utils/DisplayUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/usb/SerialTestApp/src/com/android/cts/usb/serialtest/UsbSerialTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/BarTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/battery/BatterySaverTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/app/src/android/app/stubs/TestNotificationListener.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/SensorPowerTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/src/com/android/cts/isolatedsplitapp/SplitAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBAudioPeripheralButtonsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/BugreportManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/testserver/src/android/webkit/cts/CtsTestServer.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/ProAudioActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioDeviceInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/voicesettings/src/android/voicesettings/cts/BatterySaverModeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ForceRelayoutTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/TileServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/InstrumentationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adb/src/android/adb/cts/AdbHostTest.java', 1)]"	"[('(1,USB,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(6,USB,/android/systemui/cts/LightBarActivity.java)', 1), ('(38,USB,/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java)', 1), ('(1,USB,/android/accessibilityservice/cts/utils/DisplayUtils.java)', 1), ('(18,USB,/android/server/wm/WindowInsetsAnimationTests.java)', 1), ('(3,USB,/com/android/cts/usb/serialtest/UsbSerialTest.java)', 1), ('(10,USB,/android/server/wm/BarTestUtils.java)', 1), ('(1,USB,/com/android/cts/verifier/battery/BatterySaverTestActivity.java)', 1), ('(3,USB,/android/server/wm/WindowInputTests.java)', 1), ('(13,USB,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(4,USB,/android/app/stubs/TestNotificationListener.java)', 1), ('(1,USB,/com/android/cts/verifier/sensors/SensorPowerTestActivity.java)', 1), ('(8,USB,/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java)', 1), ('(2,USB,/com/android/cts/isolatedsplitapp/SplitAppTest.java)', 1), ('(8,USB,/com/android/cts/verifier/audio/USBAudioPeripheralButtonsActivity.java)', 1), ('(3,USB,/android/os/cts/UsbDebuggingTest.java)', 1), ('(6,USB,/android/app/notification/legacy28/cts/NotificationManager28Test.java)', 1), ('(3,USB,/android/permission/cts/ServicesInstantAppsCannotAccessTests.java)', 1), ('(1,USB,/android/carrierapi/cts/BugreportManagerTest.java)', 1), ('(1,USB,/android/webkit/cts/CtsTestServer.java)', 1), ('(405,USB,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(22,USB,/com/android/cts/usb/TestUsbTest.java)', 1), ('(26,USB,/com/android/cts/verifier/audio/ProAudioActivity.java)', 1), ('(17,USB,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(6,USB,/android/media/cts/AudioDeviceInfoTest.java)', 1), ('(1,USB,/android/voicesettings/cts/BatterySaverModeTest.java)', 1), ('(4,USB,/android/app/cts/SystemFeaturesTest.java)', 1), ('(2,USB,/android/server/wm/ForceRelayoutTestBase.java)', 1), ('(1,USB,/android/app/cts/TileServiceTest.java)', 1), ('(2,USB,/android/app/cts/InstrumentationTest.java)', 1), ('(7,USB,/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java)', 1), ('(3,USB,/android/adb/cts/AdbHostTest.java)', 1), ('(36,USB,/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java)', 1)]"	"[('([1:/com/android/cts/verifier/camera/its/ItsTestActivity.java]:[USB]:[1]:method_text:[era_its_test, R.string.camera_its_test_info, -1);        setPassFailButtonClickListeners();    }}])', 1), ('([6:/android/systemui/cts/LightBarActivity.java]:[USB]:[6]:method_text:[ranceFlag;        }        controller.setSystemBarsAppearance(appearance, appearanceFlag);    }}])', 1), ('([38:/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java]:[USB]:[38]:method_text:[ filter);            mUsbManager.requestPermission(theDevice, permissionIntent);        }    }}])', 1), ('([1:/android/accessibilityservice/cts/utils/DisplayUtils.java]:[USB]:[1]:method_text:[ger.unregisterDisplayListener(listener);            }            return display;        }    }}])', 1), ('([1:/android/server/wm/WindowInsetsAnimationTests.java]:[USB]:[1]:method_text:[getWindow().getDecorView();        assumeTrue(hasWindowInsets(mRootView, systemBars()));    }   ])', 1), ('([12:/android/server/wm/WindowInsetsAnimationTests.java]:[USB]:[12]:method_text:[ack.statusAnimSteps.size() - 1).insets                        .getInsets(statusBars()));    }   ])', 1), ('([2:/android/server/wm/WindowInsetsAnimationTests.java]:[USB]:[2]:method_text:[te().isWindowVisible(""StatusBar""));        verifyZeroInteractions(mActivity.mCallback);    }   ])', 1), ('([2:/android/server/wm/WindowInsetsAnimationTests.java]:[USB]:[2]:method_text:[            insets -> NONE.equals(insets.getInsets(navigationBars()))), any());        }    }   ])', 1), ('([1:/android/server/wm/WindowInsetsAnimationTests.java]:[USB]:[1]:method_text:[, atLeastOnce()).onProgress(any(), any());        verify(mActivity.mCallback).onEnd(any());    }}])', 1), ('([3:/com/android/cts/usb/serialtest/UsbSerialTest.java]:[USB]:[3]:method_text:[4.class)public class UsbSerialTest {    private static final String TAG = ""CtsUsbSerialTest"";   ])', 1), ('([10:/android/server/wm/BarTestUtils.java]:[USB]:[10]:method_text:[         Log.i(""BarTestUtils"", ""Assumption violated"", e);            return true;        }    }}])', 1), ('([1:/com/android/cts/verifier/battery/BatterySaverTestActivity.java]:[USB]:[1]:method_text:[ } else {                error(R.string.battery_saver_test_bs_on);            }        }    };}])', 1), ('([1:/android/server/wm/WindowInputTests.java]:[USB]:[1]:method_text:[InputManager.class);        mInstrumentation.waitForIdleSync();        mClickCount = 0;    }   ])', 1), ('([2:/android/server/wm/WindowInputTests.java]:[USB]:[2]:method_text:[   // Should not be allowed to inject event to the window from another process.        }    }   ])', 1), ('([13:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[USB]:[13]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([4:/android/app/stubs/TestNotificationListener.java]:[USB]:[4]:method_text:[ void onNotificationRankingUpdate(RankingMap rankingMap) {        mRankingMap = rankingMap;    }}])', 1), ('([1:/com/android/cts/verifier/sensors/SensorPowerTestActivity.java]:[USB]:[1]:method_text:[} else {            throw new IllegalStateException(""Attempt to run test twice"");        }    }}])', 1), ('([1:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[USB]:[1]:method_text:[r listener to disconnect        assertTrue(mListener == null || !mListener.isConnected);    }   ])', 1), ('([7:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[USB]:[7]:method_text:[InterruptedException ex) {                // pass            }        }        return n;    }}])', 1), ('([2:/com/android/cts/isolatedsplitapp/SplitAppTest.java]:[USB]:[2]:method_text:[  };        }        public Context getContext() {            return mContext;        }    }}])', 1), ('([8:/com/android/cts/verifier/audio/USBAudioPeripheralButtonsActivity.java]:[USB]:[8]:method_text:[asBtnA = mHasBtnB = mHasBtnC = false;        showButtonsState();        calculateMatch();    }}])', 1), ('([1:/android/os/cts/UsbDebuggingTest.java]:[USB]:[1]:method_text:[java.io.File;public class UsbDebuggingTest extends AndroidTestCase {    @RestrictedBuildTest   ])', 1), ('([2:/android/os/cts/UsbDebuggingTest.java]:[USB]:[2]:method_text:[       File keys = new File(""/adb_keys"");            assertFalse(keys.exists());        }    }}])', 1), ('([1:/android/app/notification/legacy28/cts/NotificationManager28Test.java]:[USB]:[1]:method_text:[               NOTIFICATION_CHANNEL_ID, ""name"", NotificationManager.IMPORTANCE_DEFAULT));    }   ])', 1), ('([5:/android/app/notification/legacy28/cts/NotificationManager28Test.java]:[USB]:[5]:method_text:[  mContext, 0, new Intent(mContext, this.getClass()), PendingIntent.FLAG_MUTABLE_UNAUDITED);    }}])', 1), ('([1:/android/permission/cts/ServicesInstantAppsCannotAccessTests.java]:[USB]:[1]:method_text:[AppModeInstant@RunWith(AndroidJUnit4.class)public class ServicesInstantAppsCannotAccessTests {   ])', 1), ('([2:/android/permission/cts/ServicesInstantAppsCannotAccessTests.java]:[USB]:[2]:method_text:[strumentationRegistry.getTargetContext().getSystemService(                USB_SERVICE));    }   ])', 1), ('([1:/android/carrierapi/cts/BugreportManagerTest.java]:[USB]:[1]:method_text:[ssertThat(bugreportFile2.length()).isEqualTo(0L);        assertFdIsClosed(bugreportFd2);    }   ])', 1), ('([1:/android/webkit/cts/CtsTestServer.java]:[USB]:[1]:method_text:[         Log.e(TAG, ""Error handling request:"", e);                }            }        }    }}])', 1), ('([405:/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java]:[USB]:[405]:method_text:[     unregisterReceiver(mUsbDevicePermissionReceiver);        }        super.onDestroy();    }}])', 1), ('([7:/com/android/cts/usb/TestUsbTest.java]:[USB]:[7]:method_text:[A-Z0-9]{6,20}     */    @AppModeInstant(reason = ""only instant apps fail when reading serial"")   ])', 1), ('([1:/com/android/cts/usb/TestUsbTest.java]:[USB]:[1]:method_text:[nt [a-zA-Z0-9]{6,20}     */    @AppModeFull(reason = ""serial can not be read by instant apps"")   ])', 1), ('([14:/com/android/cts/usb/TestUsbTest.java]:[USB]:[14]:method_text:[at() throws DeviceNotAvailableException {        mDevice.executeAdbCommand(""logcat"", ""-c"");    }}])', 1), ('([26:/com/android/cts/verifier/audio/ProAudioActivity.java]:[USB]:[26]:method_text:[audio_proaudio_NA));            }            calculatePass();            break;        }    }}])', 1), ('([17:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[USB]:[17]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([6:/android/media/cts/AudioDeviceInfoTest.java]:[USB]:[6]:method_text:[  * Ensure no regression on accepted input device types.     *     * @throws Exception     */   ])', 1), ('([1:/android/voicesettings/cts/BatterySaverModeTest.java]:[USB]:[1]:method_text:[text.getSystemService(Context.POWER_SERVICE);        return powerManager.isPowerSaveMode();    }}])', 1), ('([4:/android/app/cts/SystemFeaturesTest.java]:[USB]:[4]:method_text:[e negatives.            assertAvailable(PackageManager.FEATURE_USB_ACCESSORY);        }    }   ])', 1), ('([2:/android/server/wm/ForceRelayoutTestBase.java]:[USB]:[2]:method_text:[   return WindowInsets.CONSUMED;            });            setContentView(view);        }    }}])', 1), ('([1:/android/app/cts/TileServiceTest.java]:[USB]:[1]:method_text:[= false;        @Override        public void run() {            hasRan = true;        }    }}])', 1), ('([2:/android/app/cts/InstrumentationTest.java]:[USB]:[2]:method_text:[d onCreate() {            super.onCreate();            mIsOnCreateCalled = true;        }    }}])', 1), ('([3:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[USB]:[3]:method_text:[)    public SonyDualshock4UsbTest() {        super(R.raw.sony_dualshock4_usb_register);    }   ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[USB]:[1]:method_text:[ic void testAllKeys() {        testInputEvents(R.raw.sony_dualshock4_usb_keyeventtests);    }   ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[USB]:[1]:method_text:[d testAllMotions() {        testInputEvents(R.raw.sony_dualshock4_usb_motioneventtests);    }   ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[USB]:[1]:method_text:[tBattery() {        testInputBatteryEvents(R.raw.sony_dualshock4_usb_batteryeventtests);    }   ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[USB]:[1]:method_text:[aterThan(""4.19""));        testInputVibratorEvents(R.raw.sony_dualshock4_usb_vibratortests);    }}])', 1), ('([3:/android/adb/cts/AdbHostTest.java]:[USB]:[3]:method_text:[c7c6d5edcbe04454eb9a40f947ac0a3045f64eb    // for the patch that enabled this on Pixel devices.   ])', 1), ('([6:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[6]:method_text:[(false);        toggleAssistantAccess(false);        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[ListenerService.Ranking.USER_SENTIMENT_POSITIVE,                out.getUserSentiment());    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[ListenerService.Ranking.USER_SENTIMENT_NEGATIVE,                out.getUserSentiment());    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[getRanking(sbn.getKey(), out);        assertEquals(newImportance, out.getImportance());    }   ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[2]:method_text:[t(Adjustment.KEY_RANKING_SCORE);            mUi.dropShellPermissionIdentity();        }    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[und || action.actionIntent.equals(sendIntent);        }        assertTrue(actionFound);    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[Found = replyFound || reply.equals(smartReply);        }        assertTrue(replyFound);    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[nking(sbn.getKey(), out);        assertEquals(currentImportance, out.getImportance());    }   ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[2]:method_text:[ank1 > newRank2);        } else {            assertTrue(newRank1 < newRank2);        }    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[;        assertEquals(snoozeContext, mNotificationAssistantService.snoozedUntilContext);    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[             + ""> was not restored when unsnoozed from listener"",                found);    }   ])', 1), ('([3:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[3]:method_text:[icationAssistantService.notificationVisible);        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([3:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[3]:method_text:[;        mStatusBarManager.collapsePanels();        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([3:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[3]:method_text:[e(mNotificationAssistantService.isPanelOpen);        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([5:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[5]:method_text:[        mStatusBarManager.collapsePanels();        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([4:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[4]:method_text:[ new IOException(""Could not read stdout of command:\xa0"" + command, e);            }        }    }}])', 1)]"	""	""	"[('USB', 63)]"	"[('[com.android.cts.verifier.camera.its.ItsTestActivity ItsTestActivity None]', 1), ('[android.systemui.cts.LightBarActivity getSystemUiVisibility CtsSystemUiTestCases]', 1), ('[com.android.cts.verifier.audio.USBRestrictRecordAActivity LocalClickListener None]', 1), ('[android.accessibilityservice.cts.utils.DisplayUtils getDisplay CtsAccessibilityServiceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_overlapping CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_consumedByDecor CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_childInsetting CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_withLegacyFlags CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.BarTestUtils BarTestUtils None]', 1), ('[com.android.cts.verifier.battery.BatterySaverTestActivity getTests None]', 1), ('[android.server.wm.WindowInputTests testInjectToStatusBar CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[android.app.stubs.TestNotificationListener onListenerConnected None]', 1), ('[com.android.cts.verifier.sensors.SensorPowerTestActivity SensorPowerTestActivity None]', 1), ('[android.app.notification.legacy20.cts.LegacyNotificationManager20Test testNotificationListener_cancelNotifications CtsLegacyNotification20TestCases]', 1), ('[com.android.cts.isolatedsplitapp.SplitAppTest testNative_cannotLoadSharedLibrary None]', 1), ('[com.android.cts.verifier.audio.USBAudioPeripheralButtonsActivity showDisableAssistantDialog None]', 1), ('[android.os.cts.UsbDebuggingTest testUsbDebugging None]', 1), ('[android.app.notification.legacy28.cts.NotificationManager28Test testPostFullScreenIntent_noPermission CtsLegacyNotification28TestCases]', 1), ('[android.carrierapi.cts.BugreportManagerTest hasEarlyReportFinished CtsCarrierApiTestCases]', 1), ('[android.webkit.cts.CtsTestServer getAcceptedIssuers None]', 1), ('[com.android.cts.verifier.usb.device.UsbDeviceTestActivity getAccessoryList None]', 1), ('[com.android.cts.usb.TestUsbTest CollectingTestListener None]', 1), ('[com.android.cts.usb.TestUsbTest testInstantAppsCannotReadSerial None]', 1), ('[com.android.cts.usb.TestUsbTest testUsbSerialReadOnDeviceMatches None]', 1), ('[com.android.cts.verifier.audio.ProAudioActivity isHDMIValid None]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[android.voicesettings.cts.BatterySaverModeTest testAll CtsVoiceSettingsTestCases]', 1), ('[android.app.cts.SystemFeaturesTest testUsbAccessory CtsAppTestCases]', 1), ('[android.app.cts.TileServiceTest testTileInDumpAndHasState CtsAppTestCases]', 1), ('[android.app.cts.InstrumentationTest testSendKeySync CtsAppTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest SonyDualshock4UsbTest CtsHardwareTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest testAllKeys CtsHardwareTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest testAllMotions CtsHardwareTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest testBattery CtsHardwareTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest testVibrator CtsHardwareTestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest isWatch CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationEnqueued CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_userSentimentKey CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_importanceKey CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotifications_rankingScoreKey CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_smartActionKey CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_smartReplyKey CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_importanceKey_notAllowed CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_rankingScoreKey_notAllowed CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationSnoozedUntilContext CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testUnsnoozeFromNAS CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationVisibilityChanged CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationsSeen CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnPanelRevealedAndHidden CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationClicked CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationFeedbackReceived CtsLegacyNotification29TestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.1.2"	"3.9.1.2"	"C-1-1"	"3.9.1.2/C-1-1"	"03090102.670101"	"""C-1-1] MUST implement the APIs allowing a Device Policy Controller (DPC) application to become the owner of a new Managed Profile."""	""	""	"DPC"	""	""	""	""	"[('library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest', 61), ('com.android.cts.deviceandprofileowner.SuspendPackageTest', 2), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 2), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerHostSideTransferTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('processor.main.java.com.android.bedstead.remotedpc.processor.Processor', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi30', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1)]"	"[('users', 36), ('devicePolicy', 34), ('createUser', 18), ('createAndStart', 18), ('userHandle', 16), ('remove', 13), ('getDeviceOwner', 12), ('getDevice', 9), ('devicePolicyController', 8), ('any', 5), ('tearDown', 4), ('setUp', 3), ('deviceOwner', 3), ('profileOwner', 3), ('devicePolicyManager', 3), ('getBuild', 2), ('getSupportedSourceVersion', 1), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1), ('getName', 1), ('DeviceState', 1), ('deviceOwner_noDeviceOwner_returnsNull', 1), ('deviceOwner_nonRemoteDpcDeviceOwner_returnsNull', 1), ('deviceOwner_remoteDpcDeviceOwner_returnsInstance', 1), ('profileOwner_noProfileOwner_returnsNull', 1), ('profileOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userHandle_null_throwsException', 1), ('profileOwner_userHandle_noProfileOwner_returnsNull', 1), ('profileOwner_userHandle_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userHandle_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userReference_null_throwsException', 1), ('profileOwner_userReference_noProfileOwner_returnsNull', 1), ('profileOwner_userReference_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userReference_remoteDpcProfileOwner_returnsInstance', 1), ('any_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userHandle_null_throwsException', 1), ('any_userHandle_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userHandle_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userHandle_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userReference_null_throwsException', 1), ('any_userReference_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userReference_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userReference_remoteDpcProfileOwner_returnsProfileOwner', 1), ('setAsDeviceOwner_userHandle_null_throwsException', 1), ('setAsDeviceOwner_userHandle_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userHandle_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userHandle_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsDeviceOwner_userReference_null_throwsException', 1), ('setAsDeviceOwner_userReference_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userReference_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userReference_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsProfileOwner_userHandle_null_throwsException', 1), ('setAsProfileOwner_userHandle_alreadySet_doesNothing', 1), ('setAsProfileOwner_userHandle_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userHandle_doesNotHaveProfileOwner_setsProfileOwner', 1), ('setAsProfileOwner_userReference_null_throwsException', 1), ('setAsProfileOwner_userReference_alreadySet_doesNothing', 1), ('setAsProfileOwner_userReference_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userReference_doesNotHaveProfileOwner_setsProfileOwner', 1), ('devicePolicyController_returnsDevicePolicyController', 1), ('remove_deviceOwner_removes', 1), ('remove_profileOwner_removes', 1), ('frameworkCall_makesCall', 1), ('getCurrentFailedPasswordAttempts', 1), ('frameworkCall_onProfile_makesCall', 1), ('frameworkCallRequiresProfileOwner_notProfileOwner_throwsSecurityException', 1), ('forDevicePolicyController_nullDevicePolicyController_throwsException', 1), ('forDevicePolicyController_nonRemoteDpcDevicePolicyController_throwsException', 1), ('forDevicePolicyController_remoteDpcDevicePolicyController_returnsRemoteDpc', 1)]"	"[('CtsDevicePolicyManagerTestCases', 4), ('CtsDevicePolicyTestCases', 2), ('CtsMediaParserTestCases', 1), ('CtsTvTestCases', 1)]"	""	"library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest"	"devicePolicyController"	""	"[('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java', 61), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1)]"	"[('(2,DPC,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(4,DPC,/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java)', 1), ('(2,DPC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(4,DPC,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(4,DPC,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(2,DPC,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(19,DPC,/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java)', 1), ('(2,DPC,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(2,DPC,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,DPC,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(4,DPC,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(27,DPC,/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(179,DPC,/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java)', 1)]"	"[('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[);        } finally {            remoteDPC.devicePolicyController().remove();        }    }   ])', 4), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 2), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[        } finally {            deviceOwner.devicePolicyController().remove();        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[    } finally {            sTestApis.devicePolicy().getDeviceOwner().remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[PC.devicePolicyController());        } finally {            profile.remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);    }}])', 1), ('([4:/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java]:[DPC]:[4]:method_text:[NCOMING_TEST);            installAppAsUser(TRANSFER_OWNER_INCOMING_APK, mUserId);        }    }}])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {        testAssetExtraction(""wav/sample_ima_adpcm.wav"");    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[1]:method_text:[RECEIVER_PKG);    }    /**     * Verify that we cannot suspend launcher and dpc app.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[3]:method_text:[);        assertWithMessage(""package %s suspension"", pkg).that(actual).isEqualTo(expected);    }}])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[provider that provides enterprise slice cannot     * see the enterprise slice requests.     */   ])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[()), offerCallback);        offerCallback.assertNoCallback();        return offerCallback;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases. * */public class ResetPasswordTest extends BaseDeviceAdminTest {   ])', 1), ('([19:/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java]:[DPC]:[19]:method_text:[getMessager()                .printMessage(Diagnostic.Kind.ERROR, errorText, errorElement);    }}])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[e(ComponentName, String)} */public class CertInstallDelegateTest extends BaseJUnit3TestCase {   ])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[DPC]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[DPC]:[1]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([4:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[DPC]:[4]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 1), ('([27:/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java]:[DPC]:[27]:method_text:[min void addPersistentPreferredActivity(            IntentFilter filter, ComponentName activity);}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java]:[DPC]:[1]:method_text:[ws Exception {        runDeviceTestsAsUser(DEVICE_ADMIN_PKG, className, testName, mUserId);    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[DPC]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([7:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[7]:method_text:[s    public static void teardownClass() {        sNonRemoteDpcTestApp.uninstall(sUser);    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Owner_noDeviceOwner_returnsNull() {        assertThat(RemoteDpc.deviceOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.deviceOwner()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.profileOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[rofileOwner()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.profileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[e.userHandle())).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[nterException.class,                () -> RemoteDpc.profileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[oDeviceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[moteDpc.any()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[emoteDpc.any()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[        assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser.userHandle())).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.userHandle())).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[())).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[     assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser)).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[teDpc.any(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Dpc.any(sUser)).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[le)).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[terException.class,                () -> RemoteDpc.setAsDeviceOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ption.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Exception.class,                () -> RemoteDpc.setAsDeviceOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[on.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[erException.class,                () -> RemoteDpc.setAsProfileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[tion.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[xception.class,                () -> RemoteDpc.setAsProfileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[n.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[Policy().getDeviceOwner());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[oteDPC.remove();        assertThat(sTestApis.devicePolicy().getDeviceOwner()).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[eed to support the case where there is both a DO and a PO on    //  older versions of Android?   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[ntFailedPasswordAttempts();        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[ succeeds            remoteDPC.devicePolicyManager().isUsingUnifiedPassword();        }    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[.isUsingUnifiedPassword());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.forDevicePolicyController(null));    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Controller(deviceOwner));        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([8:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[8]:method_text:[                 .isNotNull();        } finally {            remoteDPC.remove();        }    }])', 1)]"	""	""	"[('DPC', 77)]"	"[('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNull None]', 19), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNotNull None]', 15), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isUsingUnifiedPassword None]', 2), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testWavWithImaAdpcm CtsMediaParserTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSetPackagesNotSuspended None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSuspendNotSuspendablePackages None]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_enableService_issueRequest CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_disableService_noIssueRequest CtsDevicePolicyTestCases]', 1), ('[processor.main.java.com.android.bedstead.remotedpc.processor.Processor latest None]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testRevokeKeyPairFromApp_keyNotUsable None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtsc3FrontendSettings CtsTvTestCases]', 1), ('[communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager isUsingUnifiedPassword None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest TestApis None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userReference_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userReference_nonExistingUser_throwsException None]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-3-4"	"7.3.1/C-3-4"	"07030100.670304"	"""C-3-4] MUST challenge the user for the recommended primary authentication (e.g. PIN, pattern, password) once every 72 hours or less."""	""	""	"PIN"	""	""	""	""	"[('android.server.wm.AppConfigurationTests', 25), ('android.server.wm.KeyguardLockedTests', 6), ('android.media.cts.AudioPlaybackConfigurationTest', 3), ('android.media.cts.AudioManagerTest', 2), ('android.graphics.pdf.cts.Utils', 1), ('android.server.wm.SplashscreenTests', 1), ('android.view.cts.ViewAnimationMatrixTest', 1), ('com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite', 1), ('android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackup2Test', 1), ('main.java.com.android.eventlib.EventLogs', 1), ('android.slice.cts.LocalSliceProvider', 1), ('android.jdwptunnel.cts.JdwpTunnelTest', 1)]"	"[('getWidth', 12), ('getHeight', 10), ('next', 7), ('poll', 7), ('getQuerier', 4), ('recycle', 3), ('getName', 3), ('run', 2), ('getClass', 2), ('now', 2), ('get', 2), ('resetLogs', 2), ('onCreate', 2), ('setUp', 2), ('getCacheDir', 1), ('getResources', 1), ('flush', 1), ('Matrix', 1), ('width', 1), ('height', 1), ('waitForEvent', 1), ('withSettings', 1), ('supportsSecureLock', 1)]"	"[('CtsWindowManagerDeviceTestCases', 32), ('CtsMediaTestCases', 5), ('CtsPdfTestCases', 1), ('CtsViewTestCases', 1), ('CtsSliceTestCases', 1), ('CtsJdwpTunnelHostTestCases', 1)]"	""	"android.server.wm.AppConfigurationTests"	"supportsSecureLock"	"CtsWindowManagerDeviceTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 25), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher2/src/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/eventlib/src/main/java/com/android/eventlib/EventLogs.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/slice/src/android/slice/cts/LocalSliceProvider.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1)]"	"[('(26,PIN,/android/graphics/pdf/cts/Utils.java)', 1), ('(3,PIN,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(3,PIN,/android/server/wm/SplashscreenTests.java)', 1), ('(1,PIN,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(3,PIN,/android/media/cts/AudioManagerTest.java)', 1), ('(1,PIN,/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java)', 1), ('(1,PIN,/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java)', 1), ('(2,PIN,/main/java/com/android/eventlib/EventLogs.java)', 1), ('(9,PIN,/android/slice/cts/LocalSliceProvider.java)', 1), ('(1,PIN,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(12,PIN,/android/server/wm/KeyguardLockedTests.java)', 1), ('(32,PIN,/android/server/wm/AppConfigurationTests.java)', 1)]"	"[('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[PIN]:[1]:method_text:[           if (h != null) {                h.getLooper().quit();            }        }    }   ])', 2), ('([2:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[2]:method_text:[tKeyguardShowingAndNotOccluded();        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 2), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[h has     * rotation sensing optimization. So this is listed in cts-known-failures.xml.     */   ])', 2), ('([26:/android/graphics/pdf/cts/Utils.java]:[PIN]:[26]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[PIN]:[1]:method_text:[t HAL, skipping test "" + testName);            return false;        }        return true;    }}])', 1), ('([3:/android/server/wm/SplashscreenTests.java]:[PIN]:[3]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([1:/android/view/cts/ViewAnimationMatrixTest.java]:[PIN]:[1]:method_text:[ j++) {                assertEquals(color, bitmap.getPixel(i, j));            }        }    }}])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[PIN]:[1]:method_text:[        if (!isMusicPlayingBeforeTest) {            assertMusicActive(false);        }    }   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[PIN]:[2]:method_text:[:"" + microphone.getDirectionality());            Log.i(TAG, ""--------------"");        }    }   ])', 1), ('([1:/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java]:[PIN]:[1]:method_text:[new GoNegReqPbcTestCase(context));        sTestSuite.add(new GoNegReqPinTestCase(context));    }}])', 1), ('([1:/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java]:[PIN]:[1]:method_text:[oOriginalList()                .selectByIds(""s3"", ""ms2"")                .areAllDisabled();   }}])', 1), ('([2:/main/java/com/android/eventlib/EventLogs.java]:[PIN]:[2]:method_text:[ed.     */    public E waitForEvent() {        return waitForEvent(DEFAULT_POLL_TIMEOUT);    }}])', 1), ('([9:/android/slice/cts/LocalSliceProvider.java]:[PIN]:[9]:method_text:[CreatePermissionRequest(sliceUri);        return super.onCreatePermissionRequest(sliceUri);    }}])', 1), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[PIN]:[1]:method_text:[ sent big-endian so first byte has sign bit.        assertTrue((is.read() & 0x80) == 0x80);    }}])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[1]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([4:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[4]:method_text:[t contain pinned stack."", WINDOWING_MODE_PINNED,                ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([2:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[2]:method_text:[SHOW_WHEN_LOCKED_ACTIVITY, true);        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[1]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[nResizedFromFullscreen()} but resizing     * from docked state to fullscreen (reverse).     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[;    }    /**     * Tests whether the Display sizes change when rotating the device.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[datesWhenRotatingWhileFullscreen()} but when the Activity     * is in the docked stack.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[tatingWhileDocked()} but when the Activity     * is launched to side from docked stack.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ Activity will be     * relaunched twice and it should have same config as initial one.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ivity with the DialogWhenLarge theme can transform properly when in split     * screen.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ Test that device handles consequent requested orientations and displays the activities.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[should be in portrait"",                ORIENTATION_PORTRAIT, reportedSizes.orientation);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[uested orientations and will not report a config     * change to an invisible activity.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[y visible activity"",                initialOrientation, finalReportedSizes.orientation);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[),                new Point(globalSizeInfo.metricsWidth, globalSizeInfo.metricsHeight));    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[**     * Test that device handles moving between two tasks with different orientations.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[evice is rotated.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[text derived from an application context     * will not change when the device rotates.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[context derived from an activity context     * will not change when the device rotates.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[PIN]:[3]:method_text:[**     * Test that device handles moving between two tasks with different orientations.     */   ])', 1), (""([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[Test that device doesn't change device orientation by app request while in multi-window.     */   ])"", 1), (""([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[Test that device doesn't change device orientation by app request while in multi-window.     */   ])"", 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[  /**     * Test launching an activity which requests specific UI mode during creation.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ dockedActivitySizes);        assertSizesAreSame(dockedActivitySizes, applicationSizes);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[Sizes);        assertSizesAreSane(fullscreenActivitySizes, secondarySplitActivitySizes);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[tivitySession activitySession) {        return activitySession.getAppConfigInfo().sizeInfo;    }}])', 1)]"	""	""	"[('PIN', 44)]"	"[('[android.media.cts.AudioPlaybackConfigurationTest testCallbackMediaPlayerHandler CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testCallbackMediaPlayerRelease CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetAudioDeviceInfoMediaPlayerStart CtsMediaTestCases]', 1), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.view.cts.ViewAnimationMatrixTest testAnimationMatrixClearedWithPassingNull CtsViewTestCases]', 1), ('[android.media.cts.AudioManagerTest testVolume CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetMicrophones CtsMediaTestCases]', 1), ('[com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite getTestId None]', 1), ('[android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackup2Test testPreBackup None]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest testDdmsWaitsForHandshake CtsJdwpTunnelHostTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testEnterPipOverKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedActivityAndPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromFullscreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromDockedStack CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingWhileFullscreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingWhileDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingToSideFromDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSameConfigurationFullSplitFullNoRelaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testDialogWhenLargeSplitSmall CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testFullscreenAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testNonfullscreenAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationRequestConfigChanges CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationRequestConfigClears CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testRotatedInfoWithFixedRotationTransform CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testNonFullscreenActivityPermitted CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testTaskCloseRestoreFixedOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testTaskCloseRestoreFreeOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testFixedOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testTaskMoveToBackOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenPortraitAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenLandscapeAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesTopActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInFreeform CtsWindowManagerDeviceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"5.1  . Capture for Unprocessed"	"5.1"	"C-1-9"	"5.1/C-1-9"	"05010000.670109"	"""C-1-9] The level multiplier, while allowed to be on the path, MUST NOT introduce delay or latency to the signal path. All SPL measurements are made directly next to the microphone under test. For multiple microphone configurations, these requirements apply to each microphone. If device implementations declare android.hardware.microphone but do not support unprocessed audio source, they:"""	""	""	"SPL android.hardware.microphone"	""	""	""	""	"[('android.server.wm.AppConfigurationTests', 17), ('android.graphics.cts.BitmapColorSpaceTest', 17), ('android.server.wm.SplashscreenTests', 9), ('android.server.wm.KeyguardLockedTests', 5), ('android.server.wm.TvMaxWindowSizeTests', 3), ('android.media.cts.AudioManagerTest', 2), ('android.uirendering.cts.testclasses.ExactCanvasTests', 1), ('com.android.cts.verifier.camera.its.ItsTestActivity', 1), ('android.systemui.cts.LightBarActivity', 1), ('com.android.cts.isolatedsplitapp.feature_a.FeatureAReceiver', 1), ('android.content.res.cts.PluralResourcesTest', 1)]"	"[('getColorSpace', 30), ('getAssets', 19), ('fail', 16), ('getWidth', 13), ('getHeight', 11), ('Options', 10), ('setUp', 7), ('hashCode', 3), ('getWindow', 2), ('getResources', 2), ('getByteCount', 2), ('rewind', 2), ('asIntBuffer', 2), ('get', 2), ('getContext', 2), ('DumpOnFailure', 1), ('tearDown', 1), ('ResultReceiver', 1), ('getAttributes', 1), ('getDecorView', 1), ('Configuration', 1), ('getConfiguration', 1), ('supportsSecureLock', 1), ('createWithColorSpace', 1), ('p3', 1), ('reconfigure', 1), ('reuse', 1), ('getPixel', 1), ('getPixels', 1), ('setPixel', 1), ('setPixels', 1), ('writeColorSpace', 1), ('obtain', 1), ('recycle', 1), ('p3rgb565', 1), ('p3hardware', 1), ('guessP3', 1), ('guessUnknown', 1), ('getName', 1), ('inColorSpaceSRGBToP3', 1), ('inColorSpaceWith16BitWithDecreasedGamut', 1), ('copy', 1), ('compressFormatsAndColorSpaces', 1), ('values', 1), ('getRgbColorSpaces', 1), ('toArray', 1), ('getPackageManager', 1), ('Point', 1)]"	"[('CtsWindowManagerDeviceTestCases', 34), ('CtsGraphicsTestCases', 17), ('CtsMediaTestCases', 2), ('CtsUiRenderingTestCases', 1), ('CtsSystemUiTestCases', 1), ('CtsContentTestCases', 1)]"	""	"android.server.wm.TvMaxWindowSizeTests"	"Point"	"CtsWindowManagerDeviceTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 17), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapColorSpaceTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 9), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/TvMaxWindowSizeTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/LightBarActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_a/src/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/PluralResourcesTest.java', 1)]"	"[('(60,SPL,/android/server/wm/SplashscreenTests.java)', 1), ('(5,SPL,/android/media/cts/AudioManagerTest.java)', 1), ('(3,SPL,/android/uirendering/cts/testclasses/ExactCanvasTests.java)', 1), ('(1,SPL,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(3,SPL,/android/systemui/cts/LightBarActivity.java)', 1), ('(2,SPL,/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java)', 1), ('(1,SPL,/android/content/res/cts/PluralResourcesTest.java)', 1), ('(17,SPL,/android/server/wm/KeyguardLockedTests.java)', 1), ('(172,SPL,/android/server/wm/AppConfigurationTests.java)', 1), ('(27,SPL,/android/graphics/cts/BitmapColorSpaceTest.java)', 1), ('(31,SPL,/android/server/wm/TvMaxWindowSizeTests.java)', 1)]"	"[('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[1]:method_text:[e.Named.DISPLAY_P3), cs);        } catch (IOException e) {            fail();        }    }   ])', 4), ('([10:/android/server/wm/SplashscreenTests.java]:[SPL]:[10]:method_text:[TRA_INTENT, startIntent);        homeActivity.sendCommand(COMMAND_START_ACTIVITY, data);    }   ])', 1), ('([14:/android/server/wm/SplashscreenTests.java]:[SPL]:[14]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([6:/android/server/wm/SplashscreenTests.java]:[SPL]:[6]:method_text:[Equals(Color.BLUE, journal.extras.getInt(ICON_BACKGROUND_COLOR, Color.YELLOW));        }    }   ])', 1), ('([4:/android/server/wm/SplashscreenTests.java]:[SPL]:[4]:method_text:[ConfigNightMode,                journal.extras.getInt(GET_NIGHT_MODE_ACTIVITY_CHANGED));    }   ])', 1), ('([4:/android/server/wm/SplashscreenTests.java]:[SPL]:[4]:method_text:[     testSplashScreenColor(SPLASH_SCREEN_REPLACE_ICON_ACTIVITY, Color.BLUE, Color.WHITE);    }   ])', 1), ('([5:/android/server/wm/SplashscreenTests.java]:[SPL]:[5]:method_text:[NDING_VIEW));        assertTrue(journal.extras.getBoolean(CENTER_VIEW_IS_SURFACE_VIEW));    }   ])', 1), ('([5:/android/server/wm/SplashscreenTests.java]:[SPL]:[5]:method_text:[E_ICON_EXIT);        assertFalse(journal.extras.getBoolean(RECEIVE_SPLASH_SCREEN_EXIT));    }   ])', 1), ('([6:/android/server/wm/SplashscreenTests.java]:[SPL]:[6]:method_text:[      }        mWmState.waitForActivityRemoved(activity);        separateTestJournal();    }   ])', 1), ('([6:/android/server/wm/SplashscreenTests.java]:[SPL]:[6]:method_text:[CTIVITY,                intent -> {});        waitAndAssertOverrideThemeColor(Color.BLUE);    }}])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[SPL]:[4]:method_text:[:"" + microphone.getDirectionality());            Log.i(TAG, ""--------------"");        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[SPL]:[1]:method_text:[ibutes() require privledged permission MODIFY_AUDIO_ROUTING    // and thus cannot be tested here.}])', 1), ('([3:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[SPL]:[3]:method_text:[ect(20, 20, 70, 70, p);                })                .runWithComparer(mExactComparer);    }}])', 1), ('([1:/com/android/cts/verifier/camera/its/ItsTestActivity.java]:[SPL]:[1]:method_text:[era_its_test, R.string.camera_its_test_info, -1);        setPassFailButtonClickListeners();    }}])', 1), ('([3:/android/systemui/cts/LightBarActivity.java]:[SPL]:[3]:method_text:[ranceFlag;        }        controller.setSystemBarsAppearance(appearance, appearanceFlag);    }}])', 1), ('([2:/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java]:[SPL]:[2]:method_text:[(                ""feature_a"", context.getResources().getString(R.string.feature_a_string));    }}])', 1), ('([1:/android/content/res/cts/PluralResourcesTest.java]:[SPL]:[1]:method_text:[Resources(mResources.getAssets(), mResources.getDisplayMetrics(), config);    }    @SmallTest   ])', 1), ('([2:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[2]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([2:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[2]:method_text:[uardControllerState().keyguardShowing);        assertTrue(isDisplayOn(DEFAULT_DISPLAY));    }   ])', 1), ('([3:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[3]:method_text:[expected display.        mWmState.waitAndAssertImeWindowShownOnDisplay(DEFAULT_DISPLAY);    }   ])', 1), ('([5:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[5]:method_text:[xpected display.        mWmState.waitAndAssertImeWindowShownOnDisplay(DEFAULT_DISPLAY);    }   ])', 1), ('([5:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[5]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([8:/android/server/wm/AppConfigurationTests.java]:[SPL]:[8]:method_text:[lues reported in fullscreen should be larger than those reported in     * docked state.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[SPL]:[2]:method_text:[nResizedFromFullscreen()} but resizing     * from docked state to fullscreen (reverse).     */   ])', 1), ('([4:/android/server/wm/AppConfigurationTests.java]:[SPL]:[4]:method_text:[;    }    /**     * Tests whether the Display sizes change when rotating the device.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[SPL]:[2]:method_text:[tatingWhileDocked()} but when the Activity     * is launched to side from docked stack.     */   ])', 1), ('([10:/android/server/wm/AppConfigurationTests.java]:[SPL]:[10]:method_text:[ Activity will be     * relaunched twice and it should have same config as initial one.     */   ])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[SPL]:[3]:method_text:[     * Same as {@link #testSameConfigurationFullSplitFullRelaunch} but without relaunch.     */   ])', 1), ('([11:/android/server/wm/AppConfigurationTests.java]:[SPL]:[11]:method_text:[ivity with the DialogWhenLarge theme can transform properly when in split     * screen.     */   ])', 1), ('([11:/android/server/wm/AppConfigurationTests.java]:[SPL]:[11]:method_text:[ Test that device handles consequent requested orientations and displays the activities.     */   ])', 1), ('([27:/android/server/wm/AppConfigurationTests.java]:[SPL]:[27]:method_text:[),                new Point(globalSizeInfo.metricsWidth, globalSizeInfo.metricsHeight));    }   ])', 1), ('([4:/android/server/wm/AppConfigurationTests.java]:[SPL]:[4]:method_text:[text derived from an application context     * will not change when the device rotates.     */   ])', 1), ('([5:/android/server/wm/AppConfigurationTests.java]:[SPL]:[5]:method_text:[context derived from an activity context     * will not change when the device rotates.     */   ])', 1), ('([33:/android/server/wm/AppConfigurationTests.java]:[SPL]:[33]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([7:/android/server/wm/AppConfigurationTests.java]:[SPL]:[7]:method_text:[**     * Test that device handles moving between two tasks with different orientations.     */   ])', 1), (""([3:/android/server/wm/AppConfigurationTests.java]:[SPL]:[3]:method_text:[Test that device doesn't change device orientation by app request while in multi-window.     */   ])"", 1), ('([30:/android/server/wm/AppConfigurationTests.java]:[SPL]:[30]:method_text:[  /**     * Test launching an activity which requests specific UI mode during creation.     */   ])', 1), ('([4:/android/server/wm/AppConfigurationTests.java]:[SPL]:[4]:method_text:[ dockedActivitySizes);        assertSizesAreSame(dockedActivitySizes, applicationSizes);    }   ])', 1), ('([8:/android/server/wm/AppConfigurationTests.java]:[SPL]:[8]:method_text:[Sizes);        assertSizesAreSane(fullscreenActivitySizes, secondarySplitActivitySizes);    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[1]:method_text:[                    assertSame(linearRgb, cs);                }            }        }    }   ])', 1), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[3]:method_text:[e.Named.DISPLAY_P3), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[1]:method_text:[h (IOException e) {                    fail();                }            }        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[1]:method_text:[255.0f / alpha,                alpha, premulCS, ColorSpace.get(ColorSpace.Named.SRGB)));    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[1]:method_text:[         int pixel = pixels[i];            almostEqual(expected, pixel, 3, i);        }    }   ])', 1), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[3]:method_text:[Stored as RGBA        ColorUtils.verifyColor(expectedColor, dst.asIntBuffer().get(), 1);    }   ])', 1), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[3]:method_text:[red as RGBA            ColorUtils.verifyColor(expectedColor, buffer.get(), 1);        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[1]:method_text:[ace();        assertNotNull(cs);        assertSame(expected, cs);        p.recycle();    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[1]:method_text:[""Unknown"", cs.getName());        } catch (IOException e) {            fail();        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[2]:method_text:[yGetPixel(b, 0x75fb4cff);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[2]:method_text:[e.Named.DISPLAY_P3), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[2]:method_text:[itmap.CompressFormat.values(),                BitmapTest.getRgbColorSpaces().toArray());    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[2]:method_text:[catch (IOException e) {                fail(""Failed with "" + e);            }        }    }   ])', 1), ('([23:/android/server/wm/TvMaxWindowSizeTests.java]:[SPL]:[23]:method_text:[, displaySize.y);        mDisplayShortestWidth = Math.min(displaySize.x, displaySize.y);    }   ])', 1), ('([2:/android/server/wm/TvMaxWindowSizeTests.java]:[SPL]:[2]:method_text:[th, lessThanOrEqualTo(1920));        assertThat(shortestWidth, lessThanOrEqualTo(1080));    }   ])', 1), ('([6:/android/server/wm/TvMaxWindowSizeTests.java]:[SPL]:[6]:method_text:[edSizesForActivity(componentName);        assertNotNull(sizeInfo);        return sizeInfo;    }}])', 1)]"	""	""	"[('SPL', 58)]"	"[('[android.graphics.cts.BitmapColorSpaceTest isMutable CtsGraphicsTestCases]', 2), ('[android.server.wm.SplashscreenTests prepareTestLauncher CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitAnimationCancel CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSetApplicationNightMode CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSetBackgroundColorActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitIconAnimatingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testCancelHandleExitIconAnimatingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testShortcutChangeTheme CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testOverrideSplashscreenTheme CtsWindowManagerDeviceTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetMicrophones CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetDevices CtsMediaTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testColorLongs CtsUiRenderingTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsTestActivity ItsTestActivity None]', 1), ('[android.systemui.cts.LightBarActivity getSystemUiVisibility CtsSystemUiTestCases]', 1), ('[android.content.res.cts.PluralResourcesTest getDisplayMetrics CtsContentTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardAttrActivity_method_turnScreenOn_withSecureKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedAttrImeActivityAndShowSoftInput CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedImeActivityAndShowSoftInput CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests getDefaultDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromFullscreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromDockedStack CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingWhileDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingToSideFromDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSameConfigurationFullSplitFullRelaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSameConfigurationFullSplitFullNoRelaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testDialogWhenLargeSplitSmall CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testRotatedInfoWithFixedRotationTransform CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testFixedOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenPortraitAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenLandscapeAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesTopActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.graphics.cts.BitmapColorSpaceTest testEncodeP3hardware CtsGraphicsTestCases]', 1), ('[android.server.wm.TvMaxWindowSizeTests test_preSApplication_1080p_windowSizeCap CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.TvMaxWindowSizeTests test_windowSize_notLargerThan_displaySize CtsWindowManagerDeviceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.1.1  . The"	"3.9.1.1"	"C-1-3"	"3.9.1.1/C-1-3"	"03090101.670103"	"""C-1-3] MUST NOT hard code the consent or prevent the use of other device owner apps. If device implementations declare android.software.device_admin, but also include a proprietary Device Owner management solution and provide a mechanism to promote an application configured in their solution as a &quot;Device Owner equivalent&quot; to the standard &quot;Device Owner&quot; as recognized by the standard Android DevicePolicyManager APIs, they:"""	""	""	"android.software.device"	""	""	""	""	"[('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('android.appsecurity.cts.ResumeOnRebootHostTest', 1), ('android.appsecurity.cts.DirectBootHostTest', 1), ('com.google.android.cts.settings.PrivacyDeviceOwnerTest', 1), ('com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule', 1)]"	"[('getDevice', 10), ('setUp', 5), ('getBuild', 4), ('getMaxNumberOfUsersSupported', 2), ('getAbi', 2), ('getInstalledPackageNames', 1), ('tearDown', 1), ('getCurrentUser', 1), ('Statement', 1), ('evaluate', 1), ('getApiLevel', 1)]"	"[('CtsDevicePolicyManagerTestCases', 2), ('CtsAppSecurityHostTestCases', 2), ('CtsSettingsHostTestCases', 1)]"	""	"com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule"	"getApiLevel"	"CtsDevicePolicyManagerTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ResumeOnRebootHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/settings/src/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java', 1)]"	"[('(1,android.software.device,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,android.software.device,/android/appsecurity/cts/ResumeOnRebootHostTest.java)', 1), ('(1,android.software.device,/android/appsecurity/cts/DirectBootHostTest.java)', 1), ('(1,android.software.device,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(1,android.software.device,/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java)', 1)]"	"[('([1:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[android.software.device]:[1]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/android/appsecurity/cts/ResumeOnRebootHostTest.java]:[android.software.device]:[1]:method_text:[throws Exception {        removeTestPackages();        deviceRestoreDeviceConfigSync();    }   ])', 1), ('([1:/android/appsecurity/cts/DirectBootHostTest.java]:[android.software.device]:[1]:method_text:[allPackage(OTHER_PKG);    }    /**     * Automotive devices MUST support native FBE.     */   ])', 1), ('([1:/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java]:[android.software.device]:[1]:method_text:[    super.tearDown();    }    /** The case: app is the device owner, has work policy info. */   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java]:[android.software.device]:[1]:method_text:[HOD})    public static @interface IgnoreOnHeadlessSystemUserMode {        String reason();    }}])', 1)]"	""	""	"[('android.software.device', 5)]"	"[('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[android.appsecurity.cts.ResumeOnRebootHostTest removeTestPackages CtsAppSecurityHostTestCases]', 1), ('[com.google.android.cts.settings.PrivacyDeviceOwnerTest isHeadlessSystemUserMode CtsSettingsHostTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule getDisplayName CtsDevicePolicyManagerTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-3-3"	"9.5/C-3-3"	"09050000.670303"	"""C-3-3] MUST have isolated private app data directories from the parent user account."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.5.1  . Application Restriction"	"3.5.1"	"C-1-9"	"3.5.1/C-1-9"	"03050100.670109"	"""C-1-9] MUST report all app restriction events via UsageStats."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-6"	"9.8/H-1-6"	"09080000.720106"	"""[9.8/H-1-6] MUST NOT allow more than 100 bytes of data to be transmitted out of the hotword detection service on each successful hotword result. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.9.2"	"3.9.2"	"C-1-7"	"3.9.2/C-1-7"	"03090200.670107"	"""C-1-7] Where a managed profile exists, MUST expose the following user affordances for both the primary user and the managed profile: Separate accounting for battery, location, mobile data and storage usage for the primary user and managed profile. Independent management of VPN Applications installed within the primary user or managed profile. Independent management of applications installed within the primary user or managed profile. Independent management of accounts within the primary user or managed profile."""	""	""	"VPN"	""	""	""	""	"[('com.android.cts.deviceandprofileowner.AlwaysOnVpnMultiStageTest', 8), ('com.android.cts.deviceandprofileowner.AlwaysOnVpnTest', 8), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTest', 7), ('com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester', 2), ('com.android.cts.verifier.managedprovisioning.VpnTestActivity', 2), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('com.android.cts.vpnfirewall.VpnClient', 1), ('android.net.cts.legacy.api22.ConnectivityManagerLegacyTest', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest', 1), ('com.android.cts.vpnfirewall.Ipv4Packet', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest', 1), ('com.android.server.cts.device.statsdatom.AtomTests', 1), ('com.android.cts.verifier.managedprovisioning.ByodFlowTestActivity', 1), ('android.permission.cts.ServicePermissionTest', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest', 1), ('com.android.cts.verifier.managedprovisioning.AlwaysOnVpnSettingsTestActivity', 1), ('com.android.cts.verifier.managedprovisioning.DeviceAdminTestReceiver', 1), ('com.android.cts.verifier.managedprovisioning.DeviceOwnerPositiveTestActivity', 1), ('com.android.cts.verifier.managedprovisioning.ByodFlowTestHelper', 1), ('android.permission.cts.FileSystemPermissionTest', 1), ('com.android.cts.verifier.managedprovisioning.EnterprisePrivacyTestListActivity', 1), ('com.android.cts.vpnfirewall.ReflectorVpnService', 1), ('com.android.cts.vpnfirewall.PingReflector', 1), ('com.android.cts.deviceandprofileowner.vpn.VpnTestHelper', 1)]"	"[('getIntent', 7), ('getAction', 5), ('getContext', 5), ('getSimpleName', 4), ('setUp', 4), ('getAddress', 4), ('readUnsignedByte', 4), ('readUnsignedShort', 4), ('getEncoded', 4), ('tearDown', 4), ('getReceiverComponentName', 3), ('myUserId', 3), ('getPackageManager', 3), ('getHostAddress', 3), ('valid', 3), ('getResources', 2), ('getAllowedRestrictions', 2), ('toString', 2), ('run', 2), ('getApplicationContext', 2), ('getName', 2), ('getPackageName', 2), ('stop', 2), ('getMessage', 2), ('getAllNetworks', 1), ('getType', 1), ('getLinkAddresses', 1), ('DatagramSocket', 1), ('getLocalAddress', 1), ('reset', 1), ('ByteArrayOutputStream', 1), ('size', 1), ('close', 1), ('toByteArray', 1), ('myUserHandle', 1), ('myLooper', 1), ('Runnable', 1), ('onReceive', 1), ('setup', 1), ('getSafetyAwareOperations', 1), ('getOverloadedSafetyAwareOperations', 1), ('stopSelf', 1), ('build', 1), ('start', 1), ('onCreate', 1), ('onDestroy', 1), ('interrupted', 1)]"	"[('CtsDevicePolicyManagerTestCases', 7), ('CtsPermissionTestCases', 2), ('CtsNetTestCases', 1)]"	""	"com.android.cts.devicepolicy.MixedManagedProfileOwnerTest"	"getMessage"	"CtsDevicePolicyManagerTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnMultiStageTest.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/common/src/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/VpnTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/VpnApp/src/com/android/cts/vpnfirewall/VpnClient.java', 1), ('/home/gpoor/cts-12-source/cts/tests/netlegacy22.api/src/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/VpnApp/src/com/android/cts/vpnfirewall/Ipv4Packet.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/AtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ByodFlowTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ServicePermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/AlwaysOnVpnSettingsTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/DeviceAdminTestReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ByodFlowTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/FileSystemPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/EnterprisePrivacyTestListActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/VpnApp/src/com/android/cts/vpnfirewall/ReflectorVpnService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/VpnApp/src/com/android/cts/vpnfirewall/PingReflector.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/vpn/VpnTestHelper.java', 1)]"	"[('(11,VPN,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(12,VPN,/com/android/cts/vpnfirewall/VpnClient.java)', 1), ('(2,VPN,/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java)', 1), ('(1,VPN,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(1,VPN,/com/android/cts/vpnfirewall/Ipv4Packet.java)', 1), ('(1,VPN,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(52,VPN,/com/android/cts/deviceandprofileowner/AlwaysOnVpnMultiStageTest.java)', 1), ('(4,VPN,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(14,VPN,/com/android/cts/verifier/managedprovisioning/ByodFlowTestActivity.java)', 1), ('(1,VPN,/android/permission/cts/ServicePermissionTest.java)', 1), ('(1,VPN,/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java)', 1), ('(31,VPN,/com/android/cts/verifier/managedprovisioning/AlwaysOnVpnSettingsTestActivity.java)', 1), ('(4,VPN,/com/android/cts/verifier/managedprovisioning/DeviceAdminTestReceiver.java)', 1), ('(12,VPN,/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java)', 1), ('(2,VPN,/com/android/cts/verifier/managedprovisioning/ByodFlowTestHelper.java)', 1), ('(96,VPN,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1), ('(8,VPN,/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java)', 1), ('(1,VPN,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(8,VPN,/com/android/cts/verifier/managedprovisioning/EnterprisePrivacyTestListActivity.java)', 1), ('(25,VPN,/com/android/cts/vpnfirewall/ReflectorVpnService.java)', 1), ('(35,VPN,/com/android/cts/verifier/managedprovisioning/VpnTestActivity.java)', 1), ('(1,VPN,/com/android/cts/vpnfirewall/PingReflector.java)', 1), ('(43,VPN,/com/android/cts/deviceandprofileowner/vpn/VpnTestHelper.java)', 1), ('(18,VPN,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1)]"	"[(""([3:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[VPN]:[3]:method_text:[* VPN tests don't require physical device for managed profile, thus overriding. */    @Override   ])"", 4), ('([11:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[VPN]:[11]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([12:/com/android/cts/vpnfirewall/VpnClient.java]:[VPN]:[12]:method_text:[ode);        } else {            onActivityResult(requestCode, RESULT_OK, null);        }    }}])', 1), ('([2:/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java]:[VPN]:[2]:method_text:[SIM card."");        }    }    /** Test that hipri can be brought up when Wifi is enabled. */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java]:[VPN]:[1]:method_text:[e that {@link UserManager} understands that it is applied but not as a base restriction.     */   ])', 1), ('([1:/com/android/cts/vpnfirewall/Ipv4Packet.java]:[VPN]:[1]:method_text:[    }        out.append(""\\n  ]"");        out.append(""\\n}"");        return out.toString();    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[VPN]:[1]:method_text:[abledRestrictions();    /**     * Test restrictions that should be enabled by default     */   ])', 1), ('([9:/com/android/cts/deviceandprofileowner/AlwaysOnVpnMultiStageTest.java]:[VPN]:[9]:method_text:[MultiStageTest extends BaseDeviceAdminTest {    private final int MAX_NUMBER_OF_ATTEMPTS = 5;   ])', 1), ('([7:/com/android/cts/deviceandprofileowner/AlwaysOnVpnMultiStageTest.java]:[VPN]:[7]:method_text:[rue(VpnTestHelper.isNetworkVpn(mContext));        VpnTestHelper.checkPing(TEST_ADDRESS);    }   ])', 1), ('([6:/com/android/cts/deviceandprofileowner/AlwaysOnVpnMultiStageTest.java]:[VPN]:[6]:method_text:[_ADDRESS);    }    // Should be run after running testAlwaysOnSetWithAllowlist and rebooting.   ])', 1), ('([5:/com/android/cts/deviceandprofileowner/AlwaysOnVpnMultiStageTest.java]:[VPN]:[5]:method_text:[er reboot"",                Collections.singleton(mContext.getPackageName()), allowlist);    }   ])', 1), ('([10:/com/android/cts/deviceandprofileowner/AlwaysOnVpnMultiStageTest.java]:[VPN]:[10]:method_text:[stants.ENETUNREACH) ||                       (e.errno == OsConstants.EACCES));        }    }   ])', 1), ('([8:/com/android/cts/deviceandprofileowner/AlwaysOnVpnMultiStageTest.java]:[VPN]:[8]:method_text:[ge(ADMIN_RECEIVER_COMPONENT));        assertFalse(VpnTestHelper.isNetworkVpn(mContext));    }   ])', 1), ('([6:/com/android/cts/deviceandprofileowner/AlwaysOnVpnMultiStageTest.java]:[VPN]:[6]:method_text:[        assertNull(mDevicePolicyManager.getAlwaysOnVpnPackage(ADMIN_RECEIVER_COMPONENT));    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnMultiStageTest.java]:[VPN]:[1]:method_text:[{        mDevicePolicyManager.setAlwaysOnVpnPackage(ADMIN_RECEIVER_COMPONENT, null, false);    }}])', 1), ('([4:/com/android/server/cts/device/statsdatom/AtomTests.java]:[VPN]:[4]:method_text:[VICE, 117);        APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_ESTABLISH_VPN_MANAGER, 118);    }   ])', 1), ('([14:/com/android/cts/verifier/managedprovisioning/ByodFlowTestActivity.java]:[VPN]:[14]:method_text:[text) {        return context.getSharedPreferences(PROVISIONING_PREFERENCES, MODE_PRIVATE);    }}])', 1), ('([1:/android/permission/cts/ServicePermissionTest.java]:[VPN]:[1]:method_text:[sion.BIND_VPN_SERVICE,            android.Manifest.permission.BIND_VR_LISTENER_SERVICE,    };   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java]:[VPN]:[1]:method_text:[etting all DO restrictions. Global restrictions should be     * visible on other users.     */   ])', 1), ('([31:/com/android/cts/verifier/managedprovisioning/AlwaysOnVpnSettingsTestActivity.java]:[VPN]:[31]:method_text:[his, R.string.provisioning_byod_always_on_vpn_vpn_not_found_note);            }        });    }}])', 1), ('([4:/com/android/cts/verifier/managedprovisioning/DeviceAdminTestReceiver.java]:[VPN]:[4]:method_text:[verride        public IBinder onBind(Intent intent) {            return mBinder;        }    }}])', 1), ('([12:/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java]:[VPN]:[12]:method_text:[vicePolicyManager.class);        return dpm != null && dpm.canUsbDataSignalingBeDisabled();    }}])', 1), ('([2:/com/android/cts/verifier/managedprovisioning/ByodFlowTestHelper.java]:[VPN]:[2]:method_text:[text, component),                    enabledState, PackageManager.DONT_KILL_APP);        }    }}])', 1), ('([21:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[VPN]:[21]:method_text:[MPONENT, VPN_PACKAGE,                /* restrictions */ null);        super.tearDown();    }   ])', 1), ('([6:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[VPN]:[6]:method_text:[lockdown */ true, /* allowlist */ false);        VpnTestHelper.checkPing(TEST_ADDRESS);    }   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[VPN]:[4]:method_text:[ADMIN_RECEIVER_COMPONENT,                    UserManager.DISALLOW_CONFIG_VPN);        }    }   ])', 1), ('([6:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[VPN]:[6]:method_text:[/ true, /* allowlist */ false);        assertTrue(VpnTestHelper.isNetworkVpn(mContext));    }   ])', 1), ('([6:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[VPN]:[6]:method_text:[orkVpn(mContext));    }    // Tests that changes to lockdown allowlist are applied correctly.   ])', 1), ('([27:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[VPN]:[27]:method_text:[isterQuietly();    }    // Tests that when VPN comes up, allowlisted app switches over to it.   ])', 1), ('([19:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[VPN]:[19]:method_text:[PN.        VpnTestHelper.checkPing(TEST_ADDRESS);        receiver.unregisterQuietly();    }   ])', 1), ('([7:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[VPN]:[7]:method_text:[    fail(""Connectivity isn\'t available while expected: "" + message);            }        }    }}])', 1), ('([2:/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java]:[VPN]:[2]:method_text:[        }    }    /**     * Tests {@link DevicePolicyManager#isSafeOperation(int)}.     */   ])', 1), ('([6:/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java]:[VPN]:[6]:method_text:[ssionsNoReturn(dpm,                (obj) -> obj.setNextOperationSafety(operation, reason));    }}])', 1), ('([1:/android/permission/cts/FileSystemPermissionTest.java]:[VPN]:[1]:method_text:[here looking for bad directories.  There has to be     * a better way...     */    @LargeTest   ])', 1), ('([8:/com/android/cts/verifier/managedprovisioning/EnterprisePrivacyTestListActivity.java]:[VPN]:[8]:method_text:[       PolicyTransparencyTestListActivity.MODE_DEVICE_OWNER);        startActivity(intent);    }}])', 1), ('([25:/com/android/cts/vpnfirewall/ReflectorVpnService.java]:[VPN]:[25]:method_text:[, ""Closing filedescriptor failed"", e);        } finally {            mFd = null;        }    }}])', 1), ('([18:/com/android/cts/verifier/managedprovisioning/VpnTestActivity.java]:[VPN]:[18]:method_text:[    } else {            Log.w(TAG, ""Unexpected request code: "" + requestCode);        }    }   ])', 1), ('([17:/com/android/cts/verifier/managedprovisioning/VpnTestActivity.java]:[VPN]:[17]:method_text:[iewById(R.id.device_owner_vpn_info);        vpnInfoTextView.setText(getString(messageId));    }}])', 1), ('([1:/com/android/cts/vpnfirewall/PingReflector.java]:[VPN]:[1]:method_text:[  Log.e(TAG, ""Error reading packet: "" + e.getMessage(), e);            return -1;        }    }}])', 1), ('([43:/com/android/cts/deviceandprofileowner/vpn/VpnTestHelper.java]:[VPN]:[43]:method_text:[t) extra2);        stream.write(data, 0, data.length);        return output.toByteArray();    }}])', 1), (""([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[VPN]:[1]:method_text:['t require physical device for managed profile, thus overriding. */    @FlakyTest    @Override   ])"", 1), (""([3:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[VPN]:[3]:method_text:['t require physical device for managed profile, thus overriding. */    @Override    @LargeTest   ])"", 1), ('([2:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[VPN]:[2]:method_text:[   super.testAlwaysOnVpnUnsupportedPackageReplaced();    }    @Override    @LockSettingsTest   ])', 1)]"	""	""	"[('VPN', 46)]"	"[('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[com.android.cts.vpnfirewall.VpnClient finish None]', 1), ('[android.net.cts.legacy.api22.ConnectivityManagerLegacyTest assertTelephonyInService CtsNetTestCases]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest assertClearDefaultRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnMultiStageTest testAlwaysOnSet None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnMultiStageTest testAlwaysOnSetWithAllowlist None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnMultiStageTest testAlwaysOnSetAfterReboot None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnMultiStageTest testNetworkBlocked None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnMultiStageTest testAlwaysOnVpnDisabled None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnMultiStageTest testSetNonExistingPackage None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnMultiStageTest testCleanup None]', 1), ('[com.android.cts.verifier.managedprovisioning.ByodFlowTestActivity ByodFlowTestActivity None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.verifier.managedprovisioning.AlwaysOnVpnSettingsTestActivity AlwaysOnVpnSettingsTestActivity None]', 1), ('[com.android.cts.verifier.managedprovisioning.DeviceAdminTestReceiver isHeadlessSystemUserMode None]', 1), ('[com.android.cts.verifier.managedprovisioning.DeviceOwnerPositiveTestActivity finish None]', 1), ('[com.android.cts.verifier.managedprovisioning.ByodFlowTestHelper isHeadlessSystemUserMode None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testAlwaysOnVpn None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testDisallowConfigVpn None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testAllowedApps None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testDisallowedApps None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testVpnLockdownUpdateAllowlist None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testVpnLockdownAllowlistVpnComesUp None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testSetNonVpnAlwaysOn None]', 1), ('[com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester isEmpty None]', 1), ('[com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester testOnOperationSafetyStateChanged None]', 1), ('[android.permission.cts.FileSystemPermissionTest testAllOtherDirectoriesNotWritable CtsPermissionTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.EnterprisePrivacyTestListActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.vpnfirewall.ReflectorVpnService ensureNetworkCallbackUnregistered None]', 1), ('[com.android.cts.verifier.managedprovisioning.VpnTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.managedprovisioning.VpnTestActivity testVpnEstablishFails None]', 1), ('[com.android.cts.deviceandprofileowner.vpn.VpnTestHelper register None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testSetPreferentialNetworkServiceStatusLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testAlwaysOnVpn CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testAlwaysOnVpnLockDown CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testAlwaysOnVpnAcrossReboot CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testAlwaysOnVpnPackageUninstalled CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testAlwaysOnVpnUnsupportedPackage CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testAlwaysOnVpnUnsupportedPackageReplaced CtsDevicePolicyManagerTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-3-2"	"7.3.1/C-3-2"	"07030100.670302"	"""C-3-2] MUST have a hardware-backed keystore implementation."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.2  .  These are in the Android source tree at"	"7.1.4.2"	"C-1-9"	"7.1.4.2/C-1-9"	"07010402.670109"	"""C-1-9] MUST at least support version 132317953 (from Mar 1st, 2019) as reported in the android.software.vulkan.deqp.level feature flag."""	""	""	"android.software.vulkan.deqp.level"	""	""	""	""	"[('android.graphics.cts.VulkanDeqpLevelTest', 1)]"	"[('getSimpleName', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getSystemAvailableFeatures', 1)]"	"[('CtsGraphicsTestCases', 1)]"	""	"android.graphics.cts.VulkanDeqpLevelTest"	"getSystemAvailableFeatures"	"CtsGraphicsTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 1)]"	"[('(1,android.software.vulkan.deqp.level,/android/graphics/cts/VulkanDeqpLevelTest.java)', 1)]"	"[('([1:/android/graphics/cts/VulkanDeqpLevelTest.java]:[android.software.vulkan.deqp.level]:[1]:method_text:[              }            }        }    }    @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")   ])', 1)]"	""	""	"[('android.software.vulkan.deqp.level', 1)]"	""	""	""	""	""	""	""	""	""	""
"7.1.4.4"	"7.1.4.4"	"C-0-1"	"7.1.4.4/C-0-1"	"07010404.670001"	"""C-0-1] MUST enable hardware acceleration by default, and MUST disable hardware acceleration if the developer so requests by setting android:hardwareAccelerated=&quot;false” or disabling hardware acceleration directly through the Android View APIs."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.8.1  . Display Cutout"	"3.8.1"	"C-1-4"	"3.8.1/C-1-4"	"03080100.670104"	"""C-1-4] An activity MUST NOT be resized to a size smaller than 220dp in multi-window modes other than Picture-in-Picture. Device implementations with screen size xlarge SHOULD support freeform mode. If device implementations support multi-window mode(s), and the split screen mode, they: | C-1-4] MUST report correct values for all cutout metrics defined in the DisplayCutout API. <h4 id=""3816_device_controls"" """	""	""	"mode(s)"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"5.1.1  . Media Codec Characterization"	"5.1.1"	"C-1-5"	"5.1.1/C-1-5"	"05010100.670105"	"""C-1-5] Codecs that run in a codec process (vendor or system) that have access to hardware drivers other than memory allocators and mappers MUST NOT be characterized as software-only."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-9"	"9.9.3/C-1-9"	"09090300.670109"	"""C-1-9] CE keys MUST be bound to a default passcode when the user has not specified lock screen credentials."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-1-4"	"8.2/H-1-4"	"08020000.720104"	"""[8.2/H-1-4] MUST ensure a random read performance of at least 25 MB/s. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they: """	""	""	"MEDIA_PERFORMANCE_CLASS android.os.Build.VERSION VERSION_CODES android.os.Build.VERSION_CODES.MEDIA"	""	""	""	""	"[('android.net.wifi.cts.ConnectedNetworkScorerTest', 5), ('test.java.com.android.bedstead.nene.utils.ShellCommandTest', 3), ('android.media.cts.SoundPoolTest', 3), ('android.hardware.cts.SensorParameterRangeTest', 2), ('android.media.mediaparser.cts.MediaParserTest', 2), ('com.android.cts.dexmetadata.InstallDexMetadataTest', 2), ('com.android.cts.verifier.camera.its.ItsService', 2), ('main.java.com.android.bedstead.nene.utils.ShellCommandUtils', 2), ('com.android.cts.verifier.wifiaware.testcase.DataPathOutOfBandTestCase', 2), ('main.java.com.android.bedstead.nene.devicepolicy.DevicePolicy', 2), ('android.hardware.camera2.cts.CameraTestUtils', 2), ('android.app.role.cts.RoleManagerTest', 2), ('main.java.com.android.bedstead.nene.users.Users', 2), ('android.media.cts.AudioManagerTest', 1), ('android.media.cts.MediaCodecTest', 1), ('android.provider.cts.media.MediaStore_AudioTest', 1), ('android.media.cts.NdkMediaCodec', 1), ('android.appsecurity.cts.DocumentsTest', 1), ('com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity', 1), ('android.net.wifi.passpoint.cts.PasspointConfigurationTest', 1), ('android.alarmmanager.cts.BasicApiTests', 1), ('com.android.compatibility.common.util.MediaUtils', 1), ('android.media.cts.DecodeAccuracyTestBase', 1), ('android.mediapc.cts.CodecTestBase', 1), ('com.android.cts.verifier.notifications.ToastVerifierActivity', 1), ('android.media.cts.MediaMuxerTest', 1), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 1), ('android.hardware.camera2.cts.ZoomCaptureTest', 1), ('android.provider.cts.media.MediaStore_MetadataKeysTest', 1), ('android.provider.cts.media.MediaStorePlacementTest', 1), ('com.android.cts.verifier.nfc.offhost.UiccTransactionEvent3EmulatorActivity', 1), ('android.leanbackjank.app.Utils', 1), ('com.android.cts.verifier.usb.device.UsbDeviceTestActivity', 1), ('com.android.compatibility.common.deviceinfo.MediaDeviceInfo', 1), ('android.provider.cts.media.MediaStore_Audio_ArtistsTest', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('com.android.cts.deviceadmin.DeviceAdminTest', 1), ('android.app.cts.BroadcastOptionsTest', 1)]"	"[('close', 32), ('start', 16), ('AtomicInteger', 14), ('clear', 13), ('Object', 10), ('NullPointerException', 10), ('getWidth', 9), ('getHeight', 9), ('release', 8), ('getLooper', 8), ('capacity', 8), ('getSurface', 8), ('setUp', 7), ('elapsedRealtime', 7), ('run', 7), ('quitSafely', 6), ('getOutputStream', 6), ('packages', 6), ('fillCache', 6), ('getSimpleName', 5), ('decoderRelease', 5), ('lock', 5), ('getName', 5), ('build', 5), ('unlock', 4), ('closeCameraDevice', 4), ('take', 4), ('checkAndStartThread', 4), ('getState', 4), ('getPackageName', 4), ('all', 4), ('ensureSupportedTypesCacheFilled', 4), ('reset', 3), ('signalAll', 3), ('getTargetContext', 3), ('Builder', 3), ('getAudioAttributes', 3), ('getMediaDirString', 2), ('getApplicationContext', 2), ('startDecoder', 2), ('queueDecoderInputBuffer', 2), ('dequeueDecoderOutputBuffer', 2), ('extractorRelease', 2), ('clearQueues', 2), ('onCreate', 2), ('BlockingStateCallback', 2), ('SerializerRunnable', 2), ('SocketRunnable', 2), ('getId', 2), ('onDestroy', 2), ('quit', 2), ('size', 2), ('getPhysicalCameraIds', 2), ('JSONObject', 2), ('hasArray', 2), ('array', 2), ('flush', 2), ('peek', 2), ('removeFirst', 2), ('accept', 2), ('getInputStream', 2), ('readLine', 2), ('getDefault', 2), ('stopSelf', 2), ('doGetProps', 2), ('doStartSensorEvents', 2), ('execute', 2), ('data', 2), ('getSharedVolumeNames', 2), ('getContentResolver', 2), ('getSoundA', 2), ('flattenToShortString', 2), ('context', 2), ('instrumentedContext', 2), ('getUserSetupComplete', 2), ('values', 2), ('instrumented', 2), ('myUserHandle', 2), ('system', 2), ('getIdentifier', 2), ('supportedTypes', 2), ('baseType', 2), ('stream', 2), ('type', 2), ('toSet', 2), ('getActivity', 1), ('getResources', 1), ('tearDown', 1), ('bringActivityToFront', 1), ('getHelper', 1), ('MediaExtractor', 1), ('failToStart', 1), ('PlayerResult', 1), ('getMediaFormat', 1), ('getInputBuffers', 1), ('getSampleTime', 1), ('advance', 1), ('BufferInfo', 1), ('getOutputBuffers', 1), ('getAssetFileDescriptor', 1), ('getFileDescriptor', 1), ('getStartOffset', 1), ('getLength', 1), ('stop', 1), ('ReentrantLock', 1), ('newCondition', 1), ('CodecAsyncHandler', 1), ('resetContext', 1), ('getMessage', 1), ('toString', 1), ('getOutput', 1), ('getLayoutInflater', 1), ('getStatSize', 1), ('execute_invalidCommand_legacyOutput_throwsException', 1), ('execute_invalidCommand_legacyOutput_preAndroid11_throwsException', 1), ('ContentValues', 1), ('Bundle', 1), ('getSoundCs', 1), ('getSounds', 1), ('Utils', 1), ('now', 1), ('nanoTime', 1), ('getMaxPacketSize', 1), ('getPassButton', 1), ('IntentFilter', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getApplicationInfo', 1), ('getSerialNumber', 1), ('Thread', 1), ('getProductName', 1), ('getCodecInfos', 1), ('startGroup', 1), ('getCanonicalName', 1), ('telephonySmsGetDefaultSmsPackageBackedByRole', 1)]"	"[('CtsMediaTestCases', 7), ('CtsWifiTestCases', 6), ('CtsProviderTestCases', 4), ('CtsSensorTestCases', 2), ('CtsMediaParserTestCases', 2), ('CtsRoleTestCases', 2), ('CtsAppSecurityHostTestCases', 1), ('CtsAlarmManagerTestCases', 1), ('CtsMediaPerformanceClassTestCases', 1), ('CtsLegacyNotification20TestCases', 1), ('CtsCameraTestCases', 1), ('CtsAppTestCases', 1)]"	""	"main.java.com.android.bedstead.nene.users.Users"	"toSet"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConnectedNetworkScorerTest.java', 5), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SoundPoolTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/dexmetadata/app/src/com/android/cts/dexmetadata/InstallDexMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/utils/ShellCommandUtils.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/testcase/DataPathOutOfBandTestCase.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/devicepolicy/DevicePolicy.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/role/src/android/app/role/cts/RoleManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/users/Users.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_AudioTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/NdkMediaCodec.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DocumentsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/BasicApiTests.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/MediaUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeAccuracyTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/CodecTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/notifications/ToastVerifierActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy20/src/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_MetadataKeysTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePlacementTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent3EmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/leanbackjank/app/src/android/leanbackjank/app/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/device-info/src/com/android/compatibility/common/deviceinfo/MediaDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/DeviceAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/BroadcastOptionsTest.java', 1)]"	"[('(1,VERSION_CODES,/android/media/cts/AudioManagerTest.java)', 1), ('(3,VERSION_CODES,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(2,VERSION_CODES,/android/media/cts/MediaCodecTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_AudioTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/NdkMediaCodec.java)', 1), ('(2,VERSION_CODES,/android/appsecurity/cts/DocumentsTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java)', 1), ('(1,VERSION_CODES,/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java)', 1), ('(7,VERSION_CODES,/android/net/wifi/cts/ConnectedNetworkScorerTest.java)', 1), ('(1,VERSION_CODES,/android/alarmmanager/cts/BasicApiTests.java)', 1), ('(3,VERSION_CODES,/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(6,VERSION_CODES,/android/media/cts/DecodeAccuracyTestBase.java)', 1), ('(1,VERSION_CODES,/android/mediapc/cts/CodecTestBase.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/notifications/ToastVerifierActivity.java)', 1), ('(2,VERSION_CODES,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaMuxerTest.java)', 1), ('(1,android.os.Build.VERSION,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 1), ('(2,VERSION_CODES,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 1), ('(1,VERSION_CODES,/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_MetadataKeysTest.java)', 1), ('(2,MEDIA_PERFORMANCE_CLASS,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(2,VERSION_CODES,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(1,android.os.Build.VERSION,/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java)', 1), ('(3,VERSION_CODES,/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStorePlacementTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent3EmulatorActivity.java)', 1), ('(3,VERSION_CODES,/android/media/cts/SoundPoolTest.java)', 1), ('(1,android.os.Build.VERSION,/main/java/com/android/bedstead/nene/utils/ShellCommandUtils.java)', 1), ('(1,VERSION_CODES,/main/java/com/android/bedstead/nene/utils/ShellCommandUtils.java)', 1), ('(1,VERSION_CODES,/android/leanbackjank/app/Utils.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(2,VERSION_CODES,/com/android/compatibility/common/deviceinfo/MediaDeviceInfo.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(3,android.os.Build.VERSION,/com/android/cts/verifier/wifiaware/testcase/DataPathOutOfBandTestCase.java)', 1), ('(2,VERSION_CODES,/com/android/cts/verifier/wifiaware/testcase/DataPathOutOfBandTestCase.java)', 1), ('(1,android.os.Build.VERSION,/main/java/com/android/bedstead/nene/devicepolicy/DevicePolicy.java)', 1), ('(1,VERSION_CODES,/main/java/com/android/bedstead/nene/devicepolicy/DevicePolicy.java)', 1), ('(1,VERSION_CODES,/com.android.cts.deviceadmin/DeviceAdminTest.java)', 1), ('(2,MEDIA_PERFORMANCE_CLASS,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(2,VERSION_CODES,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(4,VERSION_CODES,/android/app/cts/BroadcastOptionsTest.java)', 1), ('(2,VERSION_CODES,/android/app/role/cts/RoleManagerTest.java)', 1), ('(1,android.os.Build.VERSION,/main/java/com/android/bedstead/nene/users/Users.java)', 1), ('(3,VERSION_CODES,/main/java/com/android/bedstead/nene/users/Users.java)', 1)]"	"[('([1:/android/media/cts/AudioManagerTest.java]:[VERSION_CODES]:[1]:method_text:[         return maxRingVol;        } else {            return maxRingVol - 1;        }    }   ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[VERSION_CODES]:[1]:method_text:[ }    @AppModeFull(reason = ""Instant apps cannot have HIGH_SAMPLING_RATE_SENSORS permission."")   ])', 1), ('([2:/android/hardware/cts/SensorParameterRangeTest.java]:[VERSION_CODES]:[2]:method_text:[ }    @AppModeFull(reason = ""Instant apps cannot have HIGH_SAMPLING_RATE_SENSORS permission."")   ])', 1), ('([2:/android/media/cts/MediaCodecTest.java]:[VERSION_CODES]:[2]:method_text:[s are thrown from MediaCodec     * methods when called in incorrect operational states.     */   ])', 1), ('([1:/android/provider/cts/media/MediaStore_AudioTest.java]:[VERSION_CODES]:[1]:method_text:[ public void setUp() throws Exception {        mKeyForBeatles = Audio.keyFor(""beatles"");    }   ])', 1), ('([1:/android/media/cts/NdkMediaCodec.java]:[VERSION_CODES]:[1]:method_text:[ toString() {        return String.format(""%s(%s, %x)"", getClass(), mName, mNdkMediaCodec);    }}])', 1), ('([2:/android/appsecurity/cts/DocumentsTest.java]:[VERSION_CODES]:[2]:method_text:[ch (DeviceNotAvailableException e) {            return true;        }        return true;    }}])', 1), ('([1:/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java]:[VERSION_CODES]:[1]:method_text:[utton().setEnabled(false);                    }                });            }        }    }}])', 1), ('([1:/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java]:[VERSION_CODES]:[1]:method_text:[prefix methods work as expected.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([2:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[VERSION_CODES]:[2]:method_text:[* Tests the {@link android.net.wifi.WifiManager#updateWifiUsabilityScore(int, int, int)}     */   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[VERSION_CODES]:[1]:method_text:[#setWifiScoringEnabled(boolean)}     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([2:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[VERSION_CODES]:[2]:method_text:[r works even after wifi restart.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[VERSION_CODES]:[1]:method_text:[oem paid suggestion connections.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[VERSION_CODES]:[1]:method_text:[ private suggestion connections.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/alarmmanager/cts/BasicApiTests.java]:[VERSION_CODES]:[1]:method_text:[   public void onAlarm() {            onReceive(null, new Intent(mTargetAction));        }    }}])', 1), ('([3:/com/android/compatibility/common/util/MediaUtils.java]:[VERSION_CODES]:[3]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([6:/android/media/cts/DecodeAccuracyTestBase.java]:[VERSION_CODES]:[6]:method_text:[blic static boolean isVideo(String mimeType) {        return mimeType.startsWith(""video"");    }}])', 1), ('([1:/android/mediapc/cts/CodecTestBase.java]:[VERSION_CODES]:[1]:method_text:[    }    @Override    public Double call() throws Exception {        return doEncode();    }}])', 1), ('([1:/com/android/cts/verifier/notifications/ToastVerifierActivity.java]:[VERSION_CODES]:[1]:method_text:[tApplicationContext(), R.string.toast_long_text, Toast.LENGTH_LONG)                .show();    }}])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[VERSION_CODES]:[1]:method_text:[public void setUp() {        assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.R);    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[VERSION_CODES]:[1]:method_text:[aParser.getLogSessionId()).isSameInstanceAs(logSessionId);        mediaParser.release();    }   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[VERSION_CODES]:[1]:method_text:[neAndVerify(source, outputFilePath, 1, 180, MediaMuxer.OutputFormat.MUXER_OUTPUT_MPEG_4);    }   ])', 1), ('([1:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[android.os.Build.VERSION]:[1]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 1), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[VERSION_CODES]:[2]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 1), ('([1:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[VERSION_CODES]:[1]:method_text:[InterruptedException ex) {                // pass            }        }        return n;    }}])', 1), ('([1:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[VERSION_CODES]:[1]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_MetadataKeysTest.java]:[VERSION_CODES]:[1]:method_text:[ce.class.getName();    private Context mContext = InstrumentationRegistry.getTargetContext();   ])', 1), ('([2:/com/android/cts/verifier/camera/its/ItsService.java]:[MEDIA_PERFORMANCE_CLASS]:[2]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([2:/com/android/cts/verifier/camera/its/ItsService.java]:[VERSION_CODES]:[2]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([1:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[android.os.Build.VERSION]:[1]:method_text:[L_OUTPUT_FILTER = (output) -> false;    private static final String COMMAND = ""pm list users"";   ])', 1), ('([1:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[VERSION_CODES]:[1]:method_text:[ss,                () -> ShellCommand.builder(INVALID_COMMAND_LEGACY_OUTPUT).execute());    }   ])', 1), ('([2:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[VERSION_CODES]:[2]:method_text:[ACY_OUTPUT).execute())                .contains(INVALID_COMMAND_EXPECTED_LEGACY_OUTPUT);    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[VERSION_CODES]:[1]:method_text:[ideo.Media.getContentUri(mVolumeName);        mValues.clear();        mExtras.clear();    }   ])', 1), ('([1:/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent3EmulatorActivity.java]:[VERSION_CODES]:[1]:method_text:[utton().setEnabled(false);                    }                });            }        }    }}])', 1), ('([1:/android/media/cts/SoundPoolTest.java]:[VERSION_CODES]:[1]:method_text:[p(waitMsec * 10);        mSoundPool.stop(streamID);        mSoundPool.unload(sampleID);    }   ])', 1), ('([1:/android/media/cts/SoundPoolTest.java]:[VERSION_CODES]:[1]:method_text:[ by themselves; no way to check        mSoundPool.release();        mSoundPool = null;    }   ])', 1), ('([1:/android/media/cts/SoundPoolTest.java]:[VERSION_CODES]:[1]:method_text:[soundIds) {            mSoundPool.unload(sound);        }        mSoundPool.release();    }   ])', 1), ('([1:/main/java/com/android/bedstead/nene/utils/ShellCommandUtils.java]:[android.os.Build.VERSION]:[1]:method_text:[utomation() {        return InstrumentationRegistry.getInstrumentation().getUiAutomation();    }}])', 1), ('([1:/main/java/com/android/bedstead/nene/utils/ShellCommandUtils.java]:[VERSION_CODES]:[1]:method_text:[utomation() {        return InstrumentationRegistry.getInstrumentation().getUiAutomation();    }}])', 1), ('([1:/android/leanbackjank/app/Utils.java]:[VERSION_CODES]:[1]:method_text:[   return Long.parseLong(mmr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION));    }}])', 1), ('([1:/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java]:[VERSION_CODES]:[1]:method_text:[     unregisterReceiver(mUsbDevicePermissionReceiver);        }        super.onDestroy();    }}])', 1), ('([2:/com/android/compatibility/common/deviceinfo/MediaDeviceInfo.java]:[VERSION_CODES]:[2]:method_text:[);            store.endGroup();        }        store.endArray(); // media_codec_profile    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[VERSION_CODES]:[1]:method_text:[l() {        return mContext.getApplicationContext().getApplicationInfo().targetSdkVersion;    }}])', 1), ('([3:/com/android/cts/verifier/wifiaware/testcase/DataPathOutOfBandTestCase.java]:[android.os.Build.VERSION]:[3]:method_text:[estMsgReceived(mContext.getString(R.string.aware_status_lifecycle_ok));        return true;    }}])', 1), ('([2:/com/android/cts/verifier/wifiaware/testcase/DataPathOutOfBandTestCase.java]:[VERSION_CODES]:[2]:method_text:[estMsgReceived(mContext.getString(R.string.aware_status_lifecycle_ok));        return true;    }}])', 1), ('([1:/main/java/com/android/bedstead/nene/devicepolicy/DevicePolicy.java]:[android.os.Build.VERSION]:[1]:method_text:[stemService(DevicePolicyManager.class)                    .getPolicyExemptApps();        }    }}])', 1), ('([1:/main/java/com/android/bedstead/nene/devicepolicy/DevicePolicy.java]:[VERSION_CODES]:[1]:method_text:[stemService(DevicePolicyManager.class)                    .getPolicyExemptApps();        }    }}])', 1), ('([1:/com.android.cts.deviceadmin/DeviceAdminTest.java]:[VERSION_CODES]:[1]:method_text:[             Build.VERSION_CODES.CUR_DEVELOPMENT == pi.applicationInfo.targetSdkVersion);    }   ])', 1), ('([2:/android/hardware/camera2/cts/CameraTestUtils.java]:[MEDIA_PERFORMANCE_CLASS]:[2]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([2:/android/hardware/camera2/cts/CameraTestUtils.java]:[VERSION_CODES]:[2]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([4:/android/app/cts/BroadcastOptionsTest.java]:[VERSION_CODES]:[4]:method_text:[undle(bo);        assertEquals(Build.VERSION_CODES.P, bo.getMaxManifestReceiverApiLevel());    }}])', 1), ('([1:/android/app/role/cts/RoleManagerTest.java]:[VERSION_CODES]:[1]:method_text:[PP_PACKAGE_NAME);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S, codeName = ""S"")   ])', 1), ('([1:/android/app/role/cts/RoleManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ification(true));    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S, codeName = ""S"")   ])', 1), ('([1:/main/java/com/android/bedstead/nene/users/Users.java]:[android.os.Build.VERSION]:[1]:method_text:[       ""Timed out waiting for user state, current state "" + user, e            );        }    }}])', 1), ('([3:/main/java/com/android/bedstead/nene/users/Users.java]:[VERSION_CODES]:[3]:method_text:[       ""Timed out waiting for user state, current state "" + user, e            );        }    }}])', 1)]"	""	""	"[('VERSION_CODES', 48), ('android.os.Build.VERSION', 6), ('MEDIA_PERFORMANCE_CLASS', 2)]"	"[('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 2), ('[main.java.com.android.bedstead.nene.utils.ShellCommandUtils TestApis None]', 2), ('[com.android.cts.verifier.wifiaware.testcase.DataPathOutOfBandTestCase executeTest None]', 2), ('[main.java.com.android.bedstead.nene.devicepolicy.DevicePolicy permissions None]', 2), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 2), ('[main.java.com.android.bedstead.nene.users.Users isEmpty None]', 2), ('[android.media.cts.AudioManagerTest testGetAudioHwSyncForSession CtsMediaTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testAccelerometerRange CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testGyroscopeRange CtsSensorTestCases]', 1), ('[android.media.cts.NdkMediaCodec AMediaCodecCreatePersistentInputSurface None]', 1), ('[android.appsecurity.cts.DocumentsTest testAfterMoveDocumentInStorage_revokeUriPermission CtsAppSecurityHostTestCases]', 1), ('[com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.net.wifi.passpoint.cts.PasspointConfigurationTest testUniqueIdDifferentCertCredential CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testWifiUsabilityStatsEntry CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testUpdateWifiUsabilityScore CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testConnectedNetworkScorerWithSessionId CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerForSpecifierConnection CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerForOemPaidSuggestionConnection CtsWifiTestCases]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetAlarmClock CtsAlarmManagerTestCases]', 1), ('[com.android.compatibility.common.util.MediaUtils getTestName None]', 1), ('[android.media.cts.DecodeAccuracyTestBase isAbrEnabled CtsMediaTestCases]', 1), ('[android.mediapc.cts.CodecTestBase isEmpty CtsMediaPerformanceClassTestCases]', 1), ('[com.android.cts.verifier.notifications.ToastVerifierActivity setPassFailButtonClickListeners None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testLogSessionId CtsMediaParserTestCases]', 1), ('[android.media.cts.MediaMuxerTest SKIP_testVideoAudio CtsMediaTestCases]', 1), ('[android.app.notification.legacy20.cts.LegacyNotificationManager20Test testNotificationListener_cancelNotifications CtsLegacyNotification20TestCases]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture CtsCameraTestCases]', 1), ('[com.android.cts.verifier.nfc.offhost.UiccTransactionEvent3EmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.leanbackjank.app.Utils getDefaultDisplay None]', 1), ('[com.android.cts.verifier.usb.device.UsbDeviceTestActivity getAccessoryList None]', 1), ('[com.android.compatibility.common.deviceinfo.MediaDeviceInfo isEncoder None]', 1), ('[com.android.cts.deviceandprofileowner.ResetPasswordTest testResetPasswordDeprecated None]', 1), ('[com.android.cts.deviceadmin.DeviceAdminTest testTargetApiLevel None]', 1), ('[android.app.cts.BroadcastOptionsTest testMaxManifestReceiverApiLevel CtsAppTestCases]', 1), ('[android.app.role.cts.RoleManagerTest cannotBypassRoleQualificationWithoutPermission CtsRoleTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.3.5  . Security Model"	"9.8.2"	"T-5-2"	"9.8.2/T-5-2"	"09080200.840502"	"""[9.8.2/T-5-2] MUST not hide the camera indicator for system apps that have visible user interfaces or direct user interaction. <h4 id=""236_developer_tools_and_options_compatibility"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-6-2"	"7.3.1/C-6-2"	"07030100.670602"	"""C-6-2] MUST present only Class 3 biometrics when the authentication requires BIOMETRIC_STRONG, or the authentication is invoked with a CryptoObject. If device implementations wish to treat a biometric sensor as Class 1 (formerly Convenience), they:"""	""	""	"BIOMETRIC_STRONG"	""	""	""	""	"[('android.server.biometrics.BiometricSecurityTests', 8), ('android.keystore.cts.KeyProtectionTest', 2), ('android.keystore.cts.KeyGenParameterSpecTest', 2), ('android.hardware.biometrics.cts.BiometricPromptTest', 2), ('com.android.cts.verifier.biometrics.AbstractUserAuthenticationTest', 1), ('com.android.cts.verifier.security.IdentityCredentialAuthentication', 1), ('android.server.biometrics.BiometricCryptoTests', 1), ('android.server.biometrics.BiometricServiceTests', 1), ('android.server.biometrics.Class3BiometricActivity', 1), ('android.server.biometrics.Utils', 1), ('com.android.cts.verifier.biometrics.BiometricStrongTests', 1), ('android.server.biometrics.BiometricSimpleTests', 1), ('com.android.cts.verifier.security.UnlockedDeviceRequiredTest', 1)]"	"[('getSensorStates', 3), ('getMainLooper', 2), ('revertSensorStrengths', 2), ('shouldCredentialUnlockPerUseKey', 1), ('shouldCredentialUnlockTimedKey', 1), ('shouldBiometricUnlockPerUseKey', 1), ('shouldBiometricUnlockTimedKey', 1), ('getTag', 1), ('getInstructionsResourceId', 1), ('getExpectedResults', 1), ('getKeyAuthenticators', 1), ('getCryptoObject', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('ensureReset', 1), ('teardown', 1), ('onNegativeButtonPressed', 1), ('build', 1), ('CancellationSignal', 1), ('areAllSensorsIdle', 1), ('createKey', 1)]"	"[('CtsBiometricsTestCases', 12), ('CtsKeystoreTestCases', 4), ('CtsHardwareTestCases', 2)]"	""	"android.hardware.biometrics.cts.BiometricPromptTest"	"createKey"	"CtsHardwareTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSecurityTests.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyProtectionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyGenParameterSpecTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/biometrics/cts/BiometricPromptTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/AbstractUserAuthenticationTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/IdentityCredentialAuthentication.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricCryptoTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricServiceTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/apps/biometrics/src/android/server/biometrics/Class3BiometricActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/BiometricStrongTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSimpleTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java', 1)]"	"[('(9,BIOMETRIC_STRONG,/com/android/cts/verifier/biometrics/AbstractUserAuthenticationTest.java)', 1), ('(3,BIOMETRIC_STRONG,/android/keystore/cts/KeyProtectionTest.java)', 1), ('(2,BIOMETRIC_STRONG,/com/android/cts/verifier/security/IdentityCredentialAuthentication.java)', 1), ('(34,BIOMETRIC_STRONG,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(3,BIOMETRIC_STRONG,/android/server/biometrics/BiometricCryptoTests.java)', 1), ('(1,BIOMETRIC_STRONG,/android/server/biometrics/BiometricServiceTests.java)', 1), ('(1,BIOMETRIC_STRONG,/android/server/biometrics/Class3BiometricActivity.java)', 1), ('(3,BIOMETRIC_STRONG,/android/server/biometrics/Utils.java)', 1), ('(4,BIOMETRIC_STRONG,/com/android/cts/verifier/biometrics/BiometricStrongTests.java)', 1), ('(1,BIOMETRIC_STRONG,/android/server/biometrics/BiometricSimpleTests.java)', 1), ('(1,BIOMETRIC_STRONG,/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java)', 1), ('(3,BIOMETRIC_STRONG,/android/keystore/cts/KeyGenParameterSpecTest.java)', 1), ('(2,BIOMETRIC_STRONG,/android/hardware/biometrics/cts/BiometricPromptTest.java)', 1)]"	"[('([9:/com/android/cts/verifier/biometrics/AbstractUserAuthenticationTest.java]:[BIOMETRIC_STRONG]:[9]:method_text:[{        Log.d(getTag(), s, e);        Toast.makeText(this, s, Toast.LENGTH_SHORT).show();    }}])', 1), ('([1:/android/keystore/cts/KeyProtectionTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[E_COUNT, spec.getMaxUsageCount());        assertEquals(spec.isStrongBoxBacked(), false);    }   ])', 1), ('([2:/android/keystore/cts/KeyProtectionTest.java]:[BIOMETRIC_STRONG]:[2]:method_text:[getMaxUsageCount(), maxUsageCount);        assertEquals(spec.isStrongBoxBacked(), true);    }   ])', 1), ('([2:/com/android/cts/verifier/security/IdentityCredentialAuthentication.java]:[BIOMETRIC_STRONG]:[2]:method_text:[ RuntimeException(""Error encoding CBOR"", e);        }        return baos.toByteArray();    }}])', 1), ('([3:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[3]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([4:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[4]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([2:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[2]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([7:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[7]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([6:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[6]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([2:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[2]:method_text:[| Error  |     * +-------------------+------------------+--------------------+--------+     */   ])', 1), ('([5:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[5]:method_text:[ror  |     * +-----------------------+------------------+--------------------+--------+     */   ])', 1), ('([5:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[5]:method_text:[urrent: "" + currentStrength);            Thread.sleep(300);        }        return false;    }}])', 1), ('([3:/android/server/biometrics/BiometricCryptoTests.java]:[BIOMETRIC_STRONG]:[3]:method_text:[);                        }                    }                }            }        }    }}])', 1), ('([1:/android/server/biometrics/BiometricServiceTests.java]:[BIOMETRIC_STRONG]:[1]:method_text:[.getSensorId(),                            BiometricsProto.CM_RESET_LOCKOUT));        }    }   ])', 1), ('([1:/android/server/biometrics/Class3BiometricActivity.java]:[BIOMETRIC_STRONG]:[1]:method_text:[     .build();        bp.authenticate(new CancellationSignal(), executor, callbackHelper);    }}])', 1), ('([3:/android/server/biometrics/Utils.java]:[BIOMETRIC_STRONG]:[3]:method_text:[(""Unable to convert testApiStrength: ""                        + testApiStrength);        }    }}])', 1), ('([4:/com/android/cts/verifier/biometrics/BiometricStrongTests.java]:[BIOMETRIC_STRONG]:[4]:method_text:[ll tests passed"");                getPassButton().setEnabled(true);            }        }    }}])', 1), ('([1:/android/server/biometrics/BiometricSimpleTests.java]:[BIOMETRIC_STRONG]:[1]:method_text:[           mBiometricManager.canAuthenticate(Authenticators.BIOMETRIC_STRONG));        }    }   ])', 1), ('([1:/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[ntext()).setMessage(                    mController.getDialogMessage()).create();        }    }}])', 1), ('([1:/android/keystore/cts/KeyGenParameterSpecTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[);        assertEquals(KeyProperties.UNRESTRICTED_USAGE_COUNT, spec.getMaxUsageCount());    }   ])', 1), ('([2:/android/keystore/cts/KeyGenParameterSpecTest.java]:[BIOMETRIC_STRONG]:[2]:method_text:[sUnlockedDeviceRequired());        assertEquals(maxUsageCount, spec.getMaxUsageCount());    }   ])', 1), ('([1:/android/hardware/biometrics/cts/BiometricPromptTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[assertEquals(authenticators, prompt.getAllowedAuthenticators());        }    }    @Presubmit   ])', 1), ('([1:/android/hardware/biometrics/cts/BiometricPromptTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[ld();            assertEquals(authenticators, prompt.getAllowedAuthenticators());        }    }}])', 1)]"	""	""	"[('BIOMETRIC_STRONG', 23)]"	"[('[com.android.cts.verifier.biometrics.AbstractUserAuthenticationTest setPassFailButtonClickListeners None]', 1), ('[android.keystore.cts.KeyProtectionTest testDefaults CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyProtectionTest testSettersReflectedInGetters CtsKeystoreTestCases]', 1), ('[com.android.cts.verifier.security.IdentityCredentialAuthentication setPassFailButtonClickListeners None]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_StrongSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_WeakSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthDowngraded_StrongSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthDowngraded_WeakSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_WeakSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_ConvenienceSensor CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricCryptoTests testGenerateKeyWhenCredentialAndBiometricEnrolled CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricServiceTests testLockoutResetNotRequestedAfterBiometricUnlock_whenNotStrong CtsBiometricsTestCases]', 1), ('[android.server.biometrics.Utils isBusy CtsBiometricsTestCases]', 1), ('[com.android.cts.verifier.biometrics.BiometricStrongTests isOnPauseAllowed None]', 1), ('[android.server.biometrics.BiometricSimpleTests testCanAuthenticate_whenNoSensors CtsBiometricsTestCases]', 1), ('[com.android.cts.verifier.security.UnlockedDeviceRequiredTest verifyTestRequirements None]', 1), ('[android.keystore.cts.KeyGenParameterSpecTest testDefaults CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyGenParameterSpecTest testSettersReflectedInGetters CtsKeystoreTestCases]', 1), ('[android.hardware.biometrics.cts.BiometricPromptTest test_setAllowedAuthenticators_withoutDeviceCredential CtsHardwareTestCases]', 1), ('[android.hardware.biometrics.cts.BiometricPromptTest test_setAllowedAuthenticators_withDeviceCredential CtsHardwareTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-4-3"	"9.1/C-4-3"	"09010000.670403"	"""C-4-3] MUST NOT bind to other apps, except for the following system apps: Bluetooth, Contacts, Media, Telephony, SystemUI, and components providing Internet APIs.This is stricter than the STRONGLY RECOMMENDED listed in section 9.8.6. <h3 id=""92_uid_and_process_isolation"" """	""	""	"APIs.This RECOMMENDED"	""	""	""	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 3), ('android.widget.cts.ToastTest', 2), ('android.view.cts.ViewConfigurationTest', 1), ('android.os.cts.HwBinderTest', 1), ('android.media.cts.CamcorderProfileTest', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('android.widget.cts29.ToastTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1), ('main.java.com.android.bedstead.nene.permissions.Permissions', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.hardware.cts.helpers.SensorCtsHelper', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestGrandparent', 1), ('android.media.cts.AudioHelper', 1), ('com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('main.java.com.android.activitycontext.ActivityContext', 1), ('android.view.accessibility.cts.AccessibilityManagerTest', 1), ('com.android.cts.verifier.audio.AudioTap2ToneActivity', 1), ('android.media.cts.AudioTrackTest', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestParent', 1), ('com.android.compatibility.common.util.UiccUtil', 1), ('android.server.wm.ActivityManagerTestBase', 1), ('com.android.cts.deviceowner.proxy.BaseProxyTest', 1), ('android.video.cts.CodecEncoderPerformanceTest', 1), ('main.java.com.android.bedstead.nene.permissions.PermissionContext', 1)]"	"[('getMediaType', 14), ('size', 8), ('getChannelCount', 8), ('doubleValue', 7), ('Builder', 7), ('getAudioFormat', 7), ('getInstrumentation', 5), ('build', 5), ('getPackageName', 5), ('getCodec', 4), ('setUp', 4), ('getProfile', 3), ('getContext', 3), ('getName', 2), ('getBitrate', 2), ('getWidth', 2), ('getHeight', 2), ('getSampleRate', 2), ('getIntent', 2), ('printStackTrace', 2), ('getSimpleName', 2), ('get', 2), ('makeSomething', 2), ('join', 2), ('getStdJitterMs', 2), ('getStartTimeNs', 2), ('duplicate', 2), ('startRecording', 2), ('stop', 2), ('onResume', 2), ('close', 2), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getAudioProfiles', 1), ('getChannels', 1), ('hasProfile', 1), ('getReceiverComponentName', 1), ('myUserId', 1), ('getLayoutInflater', 1), ('SensorCtsHelper', 1), ('getSensor', 1), ('getRequestedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('StringBuilder', 1), ('toString', 1), ('grandparentBeforeClass', 1), ('shadowedGrandparentBeforeClass', 1), ('shadowedGrandparentWithoutBeforeClass', 1), ('getEncoding', 1), ('getAvg', 1), ('getAvgAbs', 1), ('getMaxAbs', 1), ('notify', 1), ('wait', 1), ('make', 1), ('Thread', 1), ('run', 1), ('prepare', 1), ('myLooper', 1), ('loop', 1), ('start', 1), ('quit', 1), ('getJitterCount', 1), ('getMeanJitterMs', 1), ('getMaxAbsJitterMs', 1), ('nanoTime', 1), ('abs', 1), ('getState', 1), ('play', 1), ('getPlaybackHeadPosition', 1), ('NullPointerException', 1), ('getTargetContext', 1), ('Intent', 1), ('await', 1), ('countDown', 1), ('parentBeforeClass', 1), ('ObjectTracker', 1), ('input', 1), ('getMimesOfAvailableHardwareVideoEncoders', 1)]"	"[('CtsCameraTestCases', 4), ('CtsWidgetTestCases', 3), ('CtsMediaTestCases', 2), ('CtsViewTestCases', 1), ('CtsAdminTestCases', 1), ('CtsSensorTestCases', 1), ('CtsAccessibilityTestCases', 1), ('CtsVideoTestCases', 1)]"	""	"main.java.com.android.bedstead.nene.permissions.PermissionContext"	"close"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/Permissions.java', 1), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelper.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/AudioHelper.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/activitycontext/src/main/java/com/android/activitycontext/ActivityContext.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioTap2ToneActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/UiccUtil.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/ActivityManagerTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/proxy/BaseProxyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecEncoderPerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/PermissionContext.java', 1)]"	"[('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 1), ('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 1), ('(1,RECOMMENDED,/android/media/cts/CamcorderProfileTest.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(21,RECOMMENDED,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 1), ('(4,RECOMMENDED,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(2,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/Permissions.java)', 1), ('(3,RECOMMENDED,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java)', 1), ('(2,RECOMMENDED,/android/media/cts/AudioHelper.java)', 1), ('(1,RECOMMENDED,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(1,RECOMMENDED,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/activitycontext/ActivityContext.java)', 1), ('(18,RECOMMENDED,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/audio/AudioTap2ToneActivity.java)', 1), ('(1,RECOMMENDED,/android/media/cts/AudioTrackTest.java)', 1), ('(7,RECOMMENDED,/android/widget/cts/ToastTest.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java)', 1), ('(1,RECOMMENDED,/com/android/compatibility/common/util/UiccUtil.java)', 1), ('(1,RECOMMENDED,/android/server/wm/ActivityManagerTestBase.java)', 1), ('(1,RECOMMENDED,/com/android/cts/deviceowner/proxy/BaseProxyTest.java)', 1), ('(1,RECOMMENDED,/android/video/cts/CodecEncoderPerformanceTest.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/PermissionContext.java)', 1)]"	"[('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([1:/android/media/cts/CamcorderProfileTest.java]:[RECOMMENDED]:[1]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([3:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[RECOMMENDED]:[3]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([21:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[RECOMMENDED]:[21]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([4:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[RECOMMENDED]:[4]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([2:/main/java/com/android/bedstead/nene/permissions/Permissions.java]:[RECOMMENDED]:[2]:method_text:[ExistingPermissions.toArray(new String[0]));        }        mExistingPermissions = null;    }}])', 1), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[RECOMMENDED]:[3]:method_text:[h (SecurityException e) {            assertDeviceOwnerMessage(e.getMessage());        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 1), ('([1:/android/hardware/cts/helpers/SensorCtsHelper.java]:[RECOMMENDED]:[1]:method_text:[;        SystemUtil.runShellCommand(InstrumentationRegistry.getInstrumentation(), command);    }}])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java]:[RECOMMENDED]:[1]:method_text:[andparentWithoutBeforeClass() {        sShadowedGrandparentWithoutBeforeClassHasRun = true;    }}])', 1), ('([2:/android/media/cts/AudioHelper.java]:[RECOMMENDED]:[2]:method_text:[  private final static String TAG = ""AudioRecordAuditNative"";        private int mPosition;    }}])', 1), ('([1:/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java]:[RECOMMENDED]:[1]:method_text:[erToContinue();        } finally {            magnetometer.unregisterListener();        }    }}])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[RECOMMENDED]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([1:/main/java/com/android/activitycontext/ActivityContext.java]:[RECOMMENDED]:[1]:method_text:[hrowValue = e;                }                sLatch.countDown();            }        }    }}])', 1), ('([18:/android/view/accessibility/cts/AccessibilityManagerTest.java]:[RECOMMENDED]:[18]:method_text:[;        } catch (IOException e) {            fail(""Fail to run shell command"");        }    }}])', 1), ('([3:/com/android/cts/verifier/audio/AudioTap2ToneActivity.java]:[RECOMMENDED]:[3]:method_text:[read(mAnalysisTask).start(); // run asynchronously with audio thread            }        }    }}])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[RECOMMENDED]:[1]:method_text:[wn when setBufferSizeInBytes""                  + "" is excluded from builder"");        }    }   ])', 1), ('([1:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[1]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);        }    }   ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java]:[RECOMMENDED]:[1]:method_text:[ssertThat(sGrandparentBeforeClassHasRun).isTrue();        sParentBeforeClassHasRun = true;    }}])', 1), ('([1:/com/android/compatibility/common/util/UiccUtil.java]:[RECOMMENDED]:[1]:method_text:[tUp} method if an entire class requires a particular     * UICC, or at the top of a specific {@code])', 1), ('([1:/android/server/wm/ActivityManagerTestBase.java]:[RECOMMENDED]:[1]:method_text:[ public static class ConfigChangeHandlingActivity extends CommandSession.BasicTestActivity {    }}])', 1), ('([1:/com/android/cts/deviceowner/proxy/BaseProxyTest.java]:[RECOMMENDED]:[1]:method_text:[ore.tryAcquire(10, TimeUnit.SECONDS)) {        return true;      }      return false;    }  }}])', 1), ('([1:/android/video/cts/CodecEncoderPerformanceTest.java]:[RECOMMENDED]:[1]:method_text:[  /**     * Validates performance of hardware accelerated video encoders     */    @LargeTest   ])', 1), ('([1:/main/java/com/android/bedstead/nene/permissions/PermissionContext.java]:[RECOMMENDED]:[1]:method_text:[ock */public interface PermissionContext extends AutoCloseable {    @Override    void close();}])', 1)]"	""	""	"[('RECOMMENDED', 29)]"	"[('[android.view.cts.ViewConfigurationTest testInstanceValues CtsViewTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[main.java.com.android.bedstead.nene.permissions.Permissions TestApis None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRecommendedGlobalProxy_failIfNotDeviceOwner CtsAdminTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations CtsCameraTestCases]', 1), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 1), ('[android.media.cts.AudioHelper currentTimeMillis None]', 1), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 1), ('[android.view.accessibility.cts.AccessibilityManagerTest testGetRecommendedTimeoutMillis CtsAccessibilityTestCases]', 1), ('[com.android.cts.verifier.audio.AudioTap2ToneActivity OnTouchListener None]', 1), ('[android.media.cts.AudioTrackTest testAc3BuilderNoBufferSize CtsMediaTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[test.java.com.android.bedstead.harrier.DeviceStateTestParent isFalse None]', 1), ('[android.server.wm.ActivityManagerTestBase PostAssertionRule None]', 1), ('[com.android.cts.deviceowner.proxy.BaseProxyTest registerAndWaitForStickyBroadcast None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Keys and Credentials"	"9.1"	"C-1-6"	"9.1/C-1-6"	"09010000.670106"	"""C-1-6] MUST NOT allow boot to complete when system verification fails, unless the user consents to attempt booting anyway, in which case the data from any non-verified storage blocks MUST not be used. | C-1-6] MUST support IKeymasterDevice 4.0, IKeymasterDevice 4.1 or IKeyMintDevice version 1."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.9.2"	"3.9.2"	"C-1-9"	"3.9.2/C-1-9"	"03090200.670109"	"""C-1-9] MUST ensure that it satisfies all the security requirements applicable for a device with multiple users enabled (see section 9.5), even though the managed profile is not counted as another user in addition to the primary user. If device implementations declare android.software.managed_users and android.software.secure_lock_screen, they:"""	""	""	"android.software.secure android.software.managed"	""	""	""	""	"[('android.appsecurity.cts.ResumeOnRebootHostTest', 2), ('android.appsecurity.cts.AppDataIsolationTests', 1), ('android.keystore.cts.CipherTest', 1), ('com.android.cts.webkit.WebViewHostSideMultipleProfileTest', 1), ('android.inputmethodservice.cts.hostside.MultiUserTest', 1), ('android.host.accounts.BaseMultiUserTest', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('android.content.cts.ContextCrossProfileHostTest', 1), ('android.media.session.cts.MediaSessionManagerHostTest', 1), ('com.android.cts.devicepolicy.CrossProfileAppsHostSideTest', 1), ('android.appsecurity.cts.AuthBoundKeyTest', 1), ('android.content.pm.cts.shortcuthost.BaseShortcutManagerHostTest', 1), ('android.appsecurity.cts.DirectBootHostTest', 1), ('main.java.com.android.bedstead.harrier.DeviceState', 1), ('com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule', 1)]"	"[('getDevice', 25), ('setUp', 7), ('getBuild', 5), ('getMaxNumberOfUsersSupported', 3), ('getAbi', 2), ('waitForBroadcastIdle', 2), ('getCurrentUser', 1), ('getPrimaryUserId', 1), ('getInstalledPackageNames', 1), ('resumeOnReboot_ManagedProfile_Success', 1), ('canRequestInteractAcrossProfiles', 1), ('canInteractAcrossProfiles', 1), ('createRequestInteractAcrossProfilesIntent', 1), ('createAndStartManagedProfile', 1), ('createUser', 1), ('useInvalidatedAuthBoundKey', 1), ('InstallMultiple', 1), ('run', 1), ('tearDown', 1), ('getApplicationContext', 1), ('Statement', 1), ('evaluate', 1), ('getApiLevel', 1)]"	"[('CtsAppSecurityHostTestCases', 5), ('CtsDevicePolicyManagerTestCases', 3), ('CtsKeystoreTestCases', 1), ('CtsInputMethodServiceHostTestCases', 1), ('CtsAccountsHostTestCases', 1), ('CtsSyncContentHostTestCases', 1), ('CtsMediaHostTestCases', 1), ('CtsShortcutHostTestCases', 1)]"	""	"com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule"	"getApiLevel"	"CtsDevicePolicyManagerTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ResumeOnRebootHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/webkit/src/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/hostside/src/android/inputmethodservice/cts/hostside/MultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/content/src/android/content/cts/ContextCrossProfileHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/session/cts/MediaSessionManagerHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AuthBoundKeyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/hostside/src/android/content/pm/cts/shortcuthost/BaseShortcutManagerHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/main/java/com/android/bedstead/harrier/DeviceState.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java', 1)]"	"[('(1,android.software.secure,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(1,android.software.secure,/android/keystore/cts/CipherTest.java)', 1), ('(1,android.software.managed,/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java)', 1), ('(1,android.software.managed,/android/inputmethodservice/cts/hostside/MultiUserTest.java)', 1), ('(1,android.software.managed,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(1,android.software.secure,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,android.software.managed,/android/content/cts/ContextCrossProfileHostTest.java)', 1), ('(1,android.software.secure,/android/appsecurity/cts/ResumeOnRebootHostTest.java)', 1), ('(1,android.software.managed,/android/appsecurity/cts/ResumeOnRebootHostTest.java)', 1), ('(1,android.software.managed,/android/media/session/cts/MediaSessionManagerHostTest.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java)', 1), ('(1,android.software.secure,/android/appsecurity/cts/AuthBoundKeyTest.java)', 1), ('(1,android.software.managed,/android/content/pm/cts/shortcuthost/BaseShortcutManagerHostTest.java)', 1), ('(1,android.software.secure,/android/appsecurity/cts/DirectBootHostTest.java)', 1), ('(2,android.software.managed,/main/java/com/android/bedstead/harrier/DeviceState.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java)', 1)]"	"[('([1:/android/appsecurity/cts/AppDataIsolationTests.java]:[android.software.secure]:[1]:method_text:[          }                getDevice().waitForDeviceAvailable();            }        }    }   ])', 1), ('([1:/android/keystore/cts/CipherTest.java]:[android.software.secure]:[1]:method_text:[pm != null && pm.hasSystemFeature(""android.software.secure_lock_screen""));    }    @Presubmit   ])', 1), ('([1:/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java]:[android.software.managed]:[1]:method_text:[st-side test if the device-side test fails.                        .setCheckResults(true));    }}])', 1), ('([1:/android/inputmethodservice/cts/hostside/MultiUserTest.java]:[android.software.managed]:[1]:method_text:[                .setTestMethodName(testInfo.testMethod)                .setUserId(userId));    }}])', 1), ('([1:/android/host/accounts/BaseMultiUserTest.java]:[android.software.managed]:[1]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[android.software.secure]:[1]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/android/content/cts/ContextCrossProfileHostTest.java]:[android.software.managed]:[1]:method_text:[ers"");        } catch (DeviceNotAvailableException e) {            return false;        }    }}])', 1), ('([1:/android/appsecurity/cts/ResumeOnRebootHostTest.java]:[android.software.secure]:[1]:method_text:[throws Exception {        removeTestPackages();        deviceRestoreDeviceConfigSync();    }   ])', 1), ('([1:/android/appsecurity/cts/ResumeOnRebootHostTest.java]:[android.software.managed]:[1]:method_text:[();            } finally {                removeTestPackages();            }        }    }   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[android.software.managed]:[1]:method_text:[ediaSession"", newUser);        removeUser(newUser);    }    @AppModeFull    @RequiresDevice   ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[android.software.managed]:[1]:method_text:[ userId);        installAppAsUser(SIMPLE_APP_APK, userId);    }    @FlakyTest    @LargeTest   ])', 1), ('([1:/android/appsecurity/cts/AuthBoundKeyTest.java]:[android.software.secure]:[1]:method_text:[           getDevice().executeShellCommand(""cmd lock_settings clear --old 12345"");        }    }}])', 1), ('([1:/android/content/pm/cts/shortcuthost/BaseShortcutManagerHostTest.java]:[android.software.managed]:[1]:method_text:[                   + "" \\"""" + expectedOutputPattern + ""\\"""");        }        return output;    }}])', 1), ('([1:/android/appsecurity/cts/DirectBootHostTest.java]:[android.software.secure]:[1]:method_text:[allPackage(OTHER_PKG);    }    /**     * Automotive devices MUST support native FBE.     */   ])', 1), ('([2:/main/java/com/android/bedstead/harrier/DeviceState.java]:[android.software.managed]:[2]:method_text:[    ""This test requires INTERACT_ACROSS_USERS_FULL which can only be used on Q+"");        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java]:[android.software.managed]:[1]:method_text:[HOD})    public static @interface IgnoreOnHeadlessSystemUserMode {        String reason();    }}])', 1)]"	""	""	"[('android.software.managed', 10), ('android.software.secure', 6)]"	"[('[android.appsecurity.cts.AppDataIsolationTests testDirectBootModeWorks CtsAppSecurityHostTestCases]', 1), ('[android.keystore.cts.CipherTest testEncryptsAndDecryptsUsingCipherStreams CtsKeystoreTestCases]', 1), ('[com.android.cts.webkit.WebViewHostSideMultipleProfileTest testManagedProfile None]', 1), ('[android.inputmethodservice.cts.hostside.MultiUserTest testProfileUserInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.host.accounts.BaseMultiUserTest listUsers CtsAccountsHostTestCases]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[android.content.cts.ContextCrossProfileHostTest testCreateContextAsUser_sameProfileGroup_withInteractAcrossUsersPermission_createsContext CtsSyncContentHostTestCases]', 1), ('[android.appsecurity.cts.ResumeOnRebootHostTest removeTestPackages CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ResumeOnRebootHostTest isSupportedDevice CtsAppSecurityHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsFull_managedProfiles CtsMediaHostTestCases]', 1), ('[android.content.pm.cts.shortcuthost.BaseShortcutManagerHostTest isMultiUserSupported CtsShortcutHostTestCases]', 1), ('[main.java.com.android.bedstead.harrier.DeviceState TestApis None]', 1), ('[com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule getDisplayName CtsDevicePolicyManagerTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.1  . Hardware"	"7.1.1.1"	"H-0-2"	"7.1.1.1/H-0-2"	"07010101.720002"	"""[7.1.1.1/H-0-2] MUST support GPU composition of graphic buffers at least as large as the highest resolution of any built-in display. If Handheld device implementations support software screen rotation, they: """	""	""	"GPU"	""	""	""	""	"[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 16), ('android.appmanifest.cts.UsesNativeLibraryTestCase', 3), ('android.security.cts.Poc17_01', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.gpuprofiling.GpuRenderStagesDeviceActivity', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.graphics.cts.BasicVulkanGpuTest', 1), ('GPUStressTestActivity', 1), ('android.graphics.cts.CameraGpuCtsActivity', 1), ('android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test', 1), ('android.view.cts.FrameMetricsListenerTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.hardware.camera2.cts.CameraExtensionSessionTest', 1), ('android.graphics.cts.SyncTest', 1), ('android.openglperf.cts.GLSurfaceViewCustom', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.hardware.camera2.cts.ImageReaderTest', 1), ('android.app.uiautomation.cts.UiAutomationTest', 1), ('com.android.cts.verifier.wifiaware.DiscoveryRangingPublishTestActivity', 1), ('android.openglperf.cts.TextureTestRenderer', 1), ('android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('com.android.cts.verifier.wifiaware.TestListActivity', 1), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 1), ('android.hardware.camera2.cts.RobustnessTest', 1)]"	"[('getDevice', 18), ('onPause', 10), ('onResume', 10), ('getRenderMode', 6), ('start', 5), ('checkRenderThreadState', 5), ('currentThread', 5), ('getId', 5), ('requestRender', 4), ('init', 4), ('eglGetError', 4), ('get', 4), ('getHolder', 3), ('destroySurfaceImp', 3), ('getSimpleName', 2), ('nativeInitVulkan', 2), ('trim', 2), ('getWindow', 2), ('onDestroy', 2), ('run', 2), ('finalize', 2), ('requestExitAndWait', 2), ('onAttachedToWindow', 2), ('onDetachedFromWindow', 2), ('createSurface', 2), ('destroySurface', 2), ('setUp', 2), ('stream', 2), ('cleanup', 2), ('data', 1), ('getTime', 1), ('LogScanResult', 1), ('getIntent', 1), ('getExtras', 1), ('getApplication', 1), ('countDown', 1), ('nCreateRenderer', 1), ('release', 1), ('Renderer', 1), ('setup', 1), ('teardown', 1), ('Runnable', 1), ('handleDpadCenter', 1), ('glError', 1), ('getDebugFlags', 1), ('getPreserveEGLContextOnPause', 1), ('DefaultContextFactory', 1), ('DefaultWindowSurfaceFactory', 1), ('MyRenderer', 1), ('surfaceCreated', 1), ('surfaceDestroyed', 1), ('glLoadIdentity', 1), ('eglSwapBuffers', 1), ('onEglSwapBuffers', 1), ('getEGL', 1), ('createGL', 1), ('getGL', 1), ('LogWriter', 1), ('swap', 1), ('matches', 1), ('size', 1), ('getMessage', 1), ('getOverrideConfig', 1), ('getPackageManager', 1)]"	"[('CtsGpuToolsHostTestCases', 16), ('CtsGraphicsTestCases', 4), ('CtsCameraTestCases', 3), ('CtsViewTestCases', 2), ('CtsOpenGlPerfTestCases', 2), ('CtsGpuProfilingDataTestCases', 2), ('CtsSecurityBulletinHostTestCases', 2), ('CtsShortcutManagerTestCases', 2), ('CtsAppSecurityHostTestCases', 1), ('CtsNativeHardwareTestCases', 1), ('CtsMediaTestCases', 1), ('CtsUiAutomationTestCases', 1), ('CtsSustainedPerformanceHostTestCases', 1)]"	""	"android.hardware.camera2.cts.RobustnessTest"	"setUp"	"CtsCameraTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-12-source/cts/hostsidetests/library/src/android/appmanifest/cts/UsesNativeLibraryTestCase.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/app/src/android/gpuprofiling/GpuRenderStagesDeviceActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sustainedperf/shadertoy_android/src/GPUStressTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DirectReportAPI30/src/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FrameMetricsListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/KeySetHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionSessionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/SyncTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/openglperf/src/android/openglperf/cts/GLSurfaceViewCustom.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/nativehardware/src/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uiautomation/src/android/app/uiautomation/cts/UiAutomationTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/DiscoveryRangingPublishTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/openglperf/src/android/openglperf/cts/TextureTestRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DebuggableAPI31/src/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/TestListActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1)]"	"[('(5,GPU,/android/gpuprofiling/GpuRenderStagesDeviceActivity.java)', 1), ('(1,GPU,/android/view/cts/ASurfaceControlTest.java)', 1), ('(2,GPU,/android/graphics/cts/BasicVulkanGpuTest.java)', 1), ('(91,GPU,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 1), ('(2,GPU,/GPUStressTestActivity.java)', 1), ('(2,GPU,/android/graphics/cts/CameraGpuCtsActivity.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(5,GPU,/android/view/cts/FrameMetricsListenerTest.java)', 1), ('(1,GPU,/android/appsecurity/cts/KeySetHostTest.java)', 1), ('(1,GPU,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(2,GPU,/android/graphics/cts/SyncTest.java)', 1), ('(3,GPU,/android/openglperf/cts/GLSurfaceViewCustom.java)', 1), ('(14,GPU,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(2,GPU,/android/hardware/nativehardware/cts/HardwareBufferVrTest.java)', 1), ('(4,GPU,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(3,GPU,/android/media/cts/PresentationSyncTest.java)', 1), ('(24,GPU,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(2,GPU,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(1,GPU,/android/app/uiautomation/cts/UiAutomationTest.java)', 1), ('(1,GPU,/com/android/cts/verifier/wifiaware/DiscoveryRangingPublishTestActivity.java)', 1), ('(1,GPU,/android/openglperf/cts/TextureTestRenderer.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java)', 1), ('(3,GPU,/android/security/cts/Poc17_01.java)', 1), ('(2,GPU,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(3,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java)', 1), ('(1,GPU,/android/graphics/cts/CameraVulkanGpuTest.java)', 1), ('(2,GPU,/com/android/cts/verifier/wifiaware/TestListActivity.java)', 1), ('(2,GPU,/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java)', 1), ('(2,GPU,/android/hardware/camera2/cts/RobustnessTest.java)', 1)]"	"[('([5:/android/gpuprofiling/GpuRenderStagesDeviceActivity.java]:[GPU]:[5]:method_text:[G, ""GpuProfilingData activity complete"");    }    private static native int nativeInitVulkan();}])', 1), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                    }                });    }   ])', 1), ('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;    public BasicVulkanGpuTest(String name, int format) {        mFormat = format;    }   ])', 1), ('([27:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[27]:method_text:[es layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 1), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     * This test ensures we can still use properties if no layer specified via Settings     */   ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[    /**     * This test ensures system properties are ignored if Settings load a layer     */   ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**     * This test ensures a debuggable app can load layers from an external package     */   ])', 1), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**     * This test ensures we can still use properties if no GLES layers are specified     */   ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**     * This test ensures system properties are ignored if Settings load a GLES layer     */   ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**     * This test ensures that external GLES layers can be loaded by a debuggable app     */   ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);        Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);    }}])', 1), ('([2:/GPUStressTestActivity.java]:[GPU]:[2]:method_text:[   @Override protected void onResume() {        super.onResume();        mView.onResume();    }}])', 1), ('([2:/android/graphics/cts/CameraGpuCtsActivity.java]:[GPU]:[2]:method_text:[ive void nDestroyRenderer(long renderer);    private static native int nDrawFrame(long renderer);}])', 1), ('([1:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[GPU]:[1]:method_text:[                        > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([5:/android/view/cts/FrameMetricsListenerTest.java]:[GPU]:[5]:method_text:[rawFrameMetric,                (firstDrawFrameMetric == 0) || (firstDrawFrameMetric == 1));    }}])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[GPU]:[1]:method_text:[epeating with multi frame capture on all supported extensions.    // Verify still frame output.   ])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([3:/android/openglperf/cts/GLSurfaceViewCustom.java]:[GPU]:[3]:method_text:[ugFlags;    private int mEGLContextClientVersion;    private boolean mPreserveEGLContextOnPause;}])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);            oldFanSpeeds = fanSpeeds;            oldCpuUsages = cpuUsages;        }    }}])', 1), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());            assertEquals(flags, buffer.getUsage());        }    }}])', 1), ('([2:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[2]:method_text:[package manager is the same as     * the public.libraries*.txt files in the partitions.     */   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[iredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[quiredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }}])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([24:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[24]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[2]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([1:/android/app/uiautomation/cts/UiAutomationTest.java]:[GPU]:[1]:method_text:[entation getInstrumentation() {        return InstrumentationRegistry.getInstrumentation();    }}])', 1), ('([1:/com/android/cts/verifier/wifiaware/DiscoveryRangingPublishTestActivity.java]:[GPU]:[1]:method_text:[iscovery_ranging_publish,                R.string.aware_discovery_ranging_publish_info, 0);    }}])', 1), ('([1:/android/openglperf/cts/TextureTestRenderer.java]:[GPU]:[1]:method_text:[ + error);            throw new IllegalStateException(op + "": glError "" + error);        }    }}])', 1), ('([1:/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java]:[GPU]:[1]:method_text:[ecurityException"");        } catch (SecurityException e) {            // Expected        }    }])', 1), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);        }    }    /**     *  b/31799885     */   ])', 1), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);        }    }    /**     *  b/31993456     */   ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[at=PNG,""                + ""icon_quality=100"";    }    @AsbSecurityTest(cveBugId = 109824443)   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                () -> runWithCaller(callerContext, () -> r.run())        );    }}])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {    static {        System.loadLibrary(""ctsgraphics_jni"");    }   ])', 1), ('([2:/com/android/cts/verifier/wifiaware/TestListActivity.java]:[GPU]:[2]:method_text:[_WIFI_SETTINGS));                    }                });        builder.create().show();    }}])', 1), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                FEATURE_WATCH, FEATURE_TELEVISION);    }   ])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 1)]"	""	""	"[('GPU', 48)]"	"[('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setBufferOpaque_transparent CtsViewTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest currentTimeMillis CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testInjectLayerLoadVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testReleaseLayerLoadGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testMultipleExternalApps CtsGpuToolsHostTestCases]', 1), ('[android.graphics.cts.CameraGpuCtsActivity waitToFinishRendering CtsGraphicsTestCases]', 1), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOffOnOff None]', 1), ('[android.view.cts.FrameMetricsListenerTest testDropCount CtsViewTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testBadUpgradeMissingPubKey CtsAppSecurityHostTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testConcurrentSessions CtsCameraTestCases]', 1), ('[android.openglperf.cts.GLSurfaceViewCustom finish CtsOpenGlPerfTestCases]', 1), ('[com.android.cts.deviceowner.HardwarePropertiesManagerTest testHardwarePropertiesManager None]', 1), ('[android.hardware.nativehardware.cts.HardwareBufferVrTest testLayeredBuffersForVr CtsNativeHardwareTestCases]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase getTestInformation None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppDependsOnSomePublicLibraries None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppOptionallyDependsOnSomePublicLibraries None]', 1), ('[android.media.cts.PresentationSyncTest testThroughput CtsMediaTestCases]', 1), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty CtsGpuProfilingDataTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected CtsCameraTestCases]', 1), ('[android.app.uiautomation.cts.UiAutomationTest testCallingPublicAPIsWithDontUseAccessibilityFlag_shouldNotThrowException CtsUiAutomationTestCases]', 1), ('[android.openglperf.cts.TextureTestRenderer TextureTestRenderer CtsOpenGlPerfTestCases]', 1), ('[android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test testDirectChannel None]', 1), ('[android.security.cts.Poc17_01 testPocCVE_2016_8426 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.Poc17_01 testPocCVE_2016_8427 CtsSecurityBulletinHostTestCases]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis CtsSustainedPerformanceHostTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest testSpoofingPublisher CtsShortcutManagerTestCases]', 1), ('[com.android.cts.verifier.wifiaware.TestListActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables CtsCameraTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.2"	"3.9.2"	"C-1-1"	"3.9.2/C-1-1"	"03090200.670101"	"""C-1-1] MUST support managed profiles via the android.app.admin.DevicePolicyManager APIs."""	""	""	"android.app.admin.DevicePolicyManager"	""	""	""	""	"[('com.android.cts.managedprofile.CameraPolicyTest', 1), ('com.android.cts.managedprofile.TestCrossProfileViewEventActivity', 1), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.verifier.managedprovisioning.LockTaskUiTestActivity', 1), ('com.android.cts.deviceowner.SetTimeTest', 1), ('com.android.cts.managedprofile.LauncherAppsTest', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('com.android.cts.comp.DeviceWideLoggingFeaturesTest', 1), ('com.android.cts.managedprofile.CurrentApiHelperTest', 1), ('com.android.cts.verifier.managedprovisioning.Utils', 1), ('com.android.cts.deviceandprofileowner.KeyguardDisabledFeaturesTest', 1), ('android.packageinstaller.admin.cts.SessionCommitBroadcastTest', 1), ('com.android.cts.deviceandprofileowner.DelegationTest', 1), ('com.android.cts.transferowner.DeviceAndProfileOwnerTransferIncomingTest', 1), ('com.android.cts.packageinstaller.ClearDeviceOwnerTest', 1), ('com.android.cts.deviceandprofileowner.ApplicationRestrictionsIsCallerDelegateHelper', 1), ('com.android.cts.deviceandprofileowner.systemupdate.InstallUpdateTest', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('com.android.cts.deviceandprofileowner.CaCertManagementTest', 1), ('main.java.com.android.bedstead.nene.devicepolicy.DevicePolicy', 1), ('com.android.cts.deviceadmin.DeviceAdminTest', 1), ('com.android.cts.verifier.security.LockConfirmBypassTest', 1), ('android.devicepolicy.cts.NegativeCallAuthorizationTest', 1), ('com.android.cts.verifier.security.CredentialManagementAppActivity', 1), ('com.android.cts.verifier.managedprovisioning.NfcTestActivity', 1), ('com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest', 1), ('com.android.cts.managedprofile.ContactsTest', 1), ('android.suspendapps.cts.DualSuspendTests', 1), ('com.android.cts.deviceowner.SetLocationEnabledTest', 1), ('com.android.cts.managedprofile.ResetPasswordWithTokenTest', 1), ('com.android.cts.deviceandprofileowner.DeviceIdAttestationTest', 1), ('com.android.cts.separateprofilechallenge.SeparateProfileChallengePermissionsTest', 1), ('com.android.cts.transferowner.TransferDeviceOwnerIncomingTest', 1), ('com.android.cts.deviceandprofileowner.AllowedAccountManagementTest', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.deviceadmin.BaseDeviceAdminTest', 1), ('com.android.cts.delegate.AppRestrictionsDelegateTest', 1), ('com.android.cts.managedprofile.CrossProfileSharingTest', 1), ('com.android.cts.verifier.admin.ScreenLockTestActivity', 1), ('com.android.cts.verifier.admin.DeviceAdminUninstallTestActivity', 1), ('com.android.cts.verifier.managedprovisioning.ByodHelperActivity', 1), ('com.android.cts.deviceandprofileowner.InputMethodsTest', 1), ('com.android.cts.managedprofile.ProfileTimeoutTestHelper', 1), ('com.android.cts.delegate.PackageAccessDelegateTest', 1), ('com.android.cts.deviceandprofileowner.StorageEncryptionTest', 1), ('com.android.cts.managedprofile.PrimaryUserTest', 1), ('com.android.cts.verifier.security.SetNewPasswordComplexityTest', 1), ('com.android.cts.deviceandprofileowner.DevicePolicyLoggingTest', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('com.android.cts.managedprofile.CrossProfileCalendarTest', 1), ('com.android.cts.deviceowner.PreDeviceOwnerTest', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('com.android.cts.deviceandprofileowner.TrustAgentInfoTest', 1), ('android.packageinstaller.admin.cts.BasePackageInstallTest', 1), ('com.android.cts.verifier.admin.tapjacking.EmptyDeviceAdminReceiver', 1), ('com.android.cts.deviceowner.CreateAndManageUserTest', 1), ('com.android.cts.deviceandprofileowner.ApplicationHiddenTest', 1), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerHelper', 1), ('com.android.cts.verifier.managedprovisioning.DeviceOwnerRequestingBugreportTestActivity', 1), ('com.android.cts.deviceandprofileowner.SetSystemSettingTest', 1), ('com.android.cts.deviceandprofileowner.PermissionsTest', 1), ('com.android.cts.managedprofile.CrossProfileUtils', 1), ('com.android.cts.verifier.managedprovisioning.NonMarketAppsActivity', 1), ('com.android.cts.verifier.security.CAInstallNotificationVerifierActivity', 1), ('com.android.cts.managedprofile.NotificationListenerTest', 1), ('com.android.cts.managedprofile.TrustAgentInfoTest', 1), ('communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager', 1), ('android.devicepolicy.cts.UnsafeStateExceptionTest', 1), ('com.android.cts.delegate.EnableSystemAppDelegateTest', 1), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 1), ('com.android.cts.delegate.AppRestrictionsIsCallerDelegateHelper', 1), ('com.android.cts.verifier.managedprovisioning.ByodFlowTestActivity', 1), ('com.android.cts.verifier.managedprovisioning.PermissionLockdownTestActivity', 1), ('android.suspendapps.cts.DistractingPackageTest', 1), ('test.java.com.android.eventlib.premade.EventLibDeviceAdminReceiverTest', 1), ('com.android.suspendapps.testdeviceadmin.TestCommsReceiver', 1), ('com.android.cts.managedprofile.SetPolicyActivity', 1), ('com.android.cts.deviceandprofileowner.DeviceOwnershipTest', 1), ('com.android.cts.verifier.managedprovisioning.WorkProfileWidgetActivity', 1), ('com.android.compatibility.common.deviceinfo.PackageDeviceInfo', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest', 1), ('com.android.cts.transferowner.TransferProfileOwnerOutgoingTest', 1), ('com.android.cts.comp.provisioning.ManagedProfileProvisioningTest', 1), ('com.android.cts.deviceowner.BaseDeviceOwnerTest', 1), ('com.android.cts.deviceowner.HeadlessSystemUserTest', 1), ('com.android.compatibility.common.util.devicepolicy.provisioning.SilentProvisioningTestManager', 1)]"	"[('setUp', 62), ('tearDown', 27), ('getName', 16), ('getContext', 13), ('getSimpleName', 13), ('getAction', 11), ('getPackageManager', 11), ('getIntent', 10), ('getInstrumentation', 10), ('getPackageName', 9), ('getWho', 6), ('BroadcastReceiver', 5), ('getPackage', 5), ('getTargetContext', 5), ('getApplicationContext', 5), ('getReceiverComponentName', 4), ('build', 4), ('NullPointerException', 4), ('getBytes', 4), ('getMainLooper', 4), ('myUserId', 3), ('show', 3), ('release', 3), ('IntentFilter', 3), ('packages', 3), ('getUserId', 3), ('getArguments', 3), ('startBackgroundThread', 2), ('onStart', 2), ('getUiAutomation', 2), ('size', 2), ('onReceive', 2), ('createPublicVersionNotification', 2), ('getBuild', 2), ('getDevice', 2), ('getClass', 2), ('getContentResolver', 2), ('getActiveDeviceAdminPackages', 2), ('getDefaultAccessibilityComponent', 2), ('startGroup', 2), ('endGroup', 2), ('endArray', 2), ('getResources', 2), ('getConfiguredNetworks', 2), ('stopBackgroundThread', 1), ('ServiceConnection', 1), ('saveTime', 1), ('restoreTime', 1), ('countDown', 1), ('BigTextStyle', 1), ('TvExtender', 1), ('getDefaultLauncher', 1), ('SessionCommitReceiver', 1), ('myUserHandle', 1), ('BasicAdminReceiver', 1), ('BasicAdminReceiverNoMetadata', 1), ('flattenToShortString', 1), ('fillCache', 1), ('context', 1), ('instrumentedContext', 1), ('getUserSetupComplete', 1), ('DeviceState', 1), ('Builder', 1), ('newSingleThreadExecutor', 1), ('CredentialManagementAppActivity', 1), ('getTargetApiLevel', 1), ('length', 1), ('createBundle0', 1), ('createBundle1', 1), ('myUid', 1), ('getData', 1), ('getSchemeSpecificPart', 1), ('onAdminPackageInstalled', 1), ('Bundle', 1), ('Intent', 1), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1), ('getReceiverComponent', 1), ('getProfileOwnerComponent', 1), ('flattenToString', 1), ('waitForIdle', 1), ('Object', 1), ('getExtras', 1), ('notify', 1), ('getPackageInstaller', 1), ('forceUninstall', 1), ('abandon', 1), ('ApplicationHiddenReceiver', 1), ('NonMarketAppsActivity', 1), ('getAdminComponent', 1), ('CAInstallNotificationVerifierActivity', 1), ('getAssets', 1), ('LocalBroadcastReceiver', 1), ('myLooper', 1), ('Runnable', 1), ('run', 1), ('getCurrentUserId', 1), ('WorkProfileWidgetActivity', 1), ('allowToAddCtsVerifierWidget', 1), ('getProtection', 1), ('getProtectionFlags', 1), ('getActiveAdmins', 1), ('cleanUpResetPasswordToken', 1), ('resetComplexPasswordRestrictions', 1), ('Stub', 1)]"	"[('CtsAdminPackageInstallerTestCases', 2), ('CtsDevicePolicyTestCases', 2), ('CtsSuspendAppsTestCases', 2), ('CtsDevicePolicyManagerTestCases', 1), ('CtsAdminTestCases', 1)]"	""	"com.android.compatibility.common.util.devicepolicy.provisioning.SilentProvisioningTestManager"	"getApplicationContext"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CameraPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/TestCrossProfileViewEventActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/LockTaskUiTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/SetTimeTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/LauncherAppsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/DeviceWideLoggingFeaturesTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CurrentApiHelperTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/adminpackageinstaller/src/android/packageinstaller/admin/cts/SessionCommitBroadcastTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TransferOwnerIncomingApp/src/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/PackageInstaller/src/com/android/cts/packageinstaller/ClearDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ApplicationRestrictionsIsCallerDelegateHelper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/systemupdate/InstallUpdateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/CaCertManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/devicepolicy/DevicePolicy.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/DeviceAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/LockConfirmBypassTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/NegativeCallAuthorizationTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/CredentialManagementAppActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/NfcTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ContactsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DualSuspendTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/SetLocationEnabledTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DeviceIdAttestationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/SeparateProfileChallenge/src/com/android/cts/separateprofilechallenge/SeparateProfileChallengePermissionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TransferOwnerIncomingApp/src/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AllowedAccountManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/BaseDeviceAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/AppRestrictionsDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileSharingTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/admin/ScreenLockTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/admin/DeviceAdminUninstallTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/InputMethodsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ProfileTimeoutTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/PackageAccessDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/PrimaryUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/SetNewPasswordComplexityTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileCalendarTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/TrustAgentInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/adminpackageinstaller/src/android/packageinstaller/admin/cts/BasePackageInstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/admin/tapjacking/EmptyDeviceAdminReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/CreateAndManageUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegatedCertInstallerHelper.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/DeviceOwnerRequestingBugreportTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SetSystemSettingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PermissionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/NonMarketAppsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/CAInstallNotificationVerifierActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/NotificationListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/TrustAgentInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/UnsafeStateExceptionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/EnableSystemAppDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/AppRestrictionsIsCallerDelegateHelper.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ByodFlowTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/PermissionLockdownTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DistractingPackageTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/eventlib/src/test/java/com/android/eventlib/premade/EventLibDeviceAdminReceiverTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/test-apps/TestDeviceAdmin/src/com/android/suspendapps/testdeviceadmin/TestCommsReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/SetPolicyActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/WorkProfileWidgetActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/device-info/src/com/android/compatibility/common/deviceinfo/PackageDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TransferOwnerOutgoingApp/src/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/BaseDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HeadlessSystemUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/devicepolicy/provisioning/SilentProvisioningTestManager.java', 1)]"	"[('(1,android.app.admin.DevicePolicyManager,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/managedprofile/TestCrossProfileViewEventActivity.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(8,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/managedprovisioning/LockTaskUiTestActivity.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceowner/SetTimeTest.java)', 1), ('(3,android.app.admin.DevicePolicyManager,/com/android/cts/managedprofile/LauncherAppsTest.java)', 1), ('(4,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/comp/DeviceWideLoggingFeaturesTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/managedprofile/CurrentApiHelperTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/managedprovisioning/Utils.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/android/packageinstaller/admin/cts/SessionCommitBroadcastTest.java)', 1), ('(9,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/DelegationTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/packageinstaller/ClearDeviceOwnerTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/ApplicationRestrictionsIsCallerDelegateHelper.java)', 1), ('(3,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/systemupdate/InstallUpdateTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/CaCertManagementTest.java)', 1), ('(2,android.app.admin.DevicePolicyManager,/main/java/com/android/bedstead/nene/devicepolicy/DevicePolicy.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com.android.cts.deviceadmin/DeviceAdminTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/security/LockConfirmBypassTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/android/devicepolicy/cts/NegativeCallAuthorizationTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/security/CredentialManagementAppActivity.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/managedprovisioning/NfcTestActivity.java)', 1), ('(6,android.app.admin.DevicePolicyManager,/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/managedprofile/ContactsTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/android/suspendapps/cts/DualSuspendTests.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceowner/SetLocationEnabledTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/DeviceIdAttestationTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/separateprofilechallenge/SeparateProfileChallengePermissionsTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/AllowedAccountManagementTest.java)', 1), ('(2,android.app.admin.DevicePolicyManager,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com.android.cts.deviceadmin/BaseDeviceAdminTest.java)', 1), ('(2,android.app.admin.DevicePolicyManager,/com/android/cts/delegate/AppRestrictionsDelegateTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/managedprofile/CrossProfileSharingTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/admin/ScreenLockTestActivity.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/admin/DeviceAdminUninstallTestActivity.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/InputMethodsTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/managedprofile/ProfileTimeoutTestHelper.java)', 1), ('(2,android.app.admin.DevicePolicyManager,/com/android/cts/delegate/PackageAccessDelegateTest.java)', 1), ('(4,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/managedprofile/PrimaryUserTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/security/SetNewPasswordComplexityTest.java)', 1), ('(14,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/managedprofile/CrossProfileCalendarTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceowner/PreDeviceOwnerTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(5,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/TrustAgentInfoTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/android/packageinstaller/admin/cts/BasePackageInstallTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/admin/tapjacking/EmptyDeviceAdminReceiver.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java)', 1), ('(3,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerHelper.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/managedprovisioning/DeviceOwnerRequestingBugreportTestActivity.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/SetSystemSettingTest.java)', 1), ('(7,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/managedprofile/CrossProfileUtils.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/managedprovisioning/NonMarketAppsActivity.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/security/CAInstallNotificationVerifierActivity.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/managedprofile/NotificationListenerTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/managedprofile/TrustAgentInfoTest.java)', 1), ('(3,android.app.admin.DevicePolicyManager,/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java)', 1), ('(2,android.app.admin.DevicePolicyManager,/android/devicepolicy/cts/UnsafeStateExceptionTest.java)', 1), ('(2,android.app.admin.DevicePolicyManager,/com/android/cts/delegate/EnableSystemAppDelegateTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/delegate/AppRestrictionsIsCallerDelegateHelper.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/managedprovisioning/ByodFlowTestActivity.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/managedprovisioning/PermissionLockdownTestActivity.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/android/suspendapps/cts/DistractingPackageTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/test/java/com/android/eventlib/premade/EventLibDeviceAdminReceiverTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/suspendapps/testdeviceadmin/TestCommsReceiver.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/managedprofile/SetPolicyActivity.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/verifier/managedprovisioning/WorkProfileWidgetActivity.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/compatibility/common/deviceinfo/PackageDeviceInfo.java)', 1), ('(11,android.app.admin.DevicePolicyManager,/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java)', 1), ('(2,android.app.admin.DevicePolicyManager,/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceowner/BaseDeviceOwnerTest.java)', 1), ('(1,android.app.admin.DevicePolicyManager,/com/android/cts/deviceowner/HeadlessSystemUserTest.java)', 1), ('(2,android.app.admin.DevicePolicyManager,/com/android/compatibility/common/util/devicepolicy/provisioning/SilentProvisioningTestManager.java)', 1)]"	"[('([1:/com/android/cts/managedprofile/CameraPolicyTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[d tearDown() throws Exception {        stopBackgroundThread();        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/managedprofile/TestCrossProfileViewEventActivity.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ONENT.getPackageName();        return mDevicePolicyManager.isProfileOwnerApp(adminPackage);    }}])', 1), ('([1:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ePolicyManager)                mContext.getSystemService(Context.DEVICE_POLICY_SERVICE);    }   ])', 1), ('([8:/com/android/cts/verifier/managedprovisioning/LockTaskUiTestActivity.java]:[android.app.admin.DevicePolicyManager]:[8]:method_text:[de    public String getTestId() {        return getIntent().getStringExtra(EXTRA_TEST_ID);    }}])', 1), ('([1:/com/android/cts/deviceowner/SetTimeTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[* 1000);        } finally {            mContext.unregisterReceiver(receiver);        }    }   ])', 1), ('([3:/com/android/cts/managedprofile/LauncherAppsTest.java]:[android.app.admin.DevicePolicyManager]:[3]:method_text:[ry.getInstrumentation().getUiAutomation()                .dropShellPermissionIdentity();    }   ])', 1), ('([4:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[android.app.admin.DevicePolicyManager]:[4]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), (""([1:/com/android/cts/comp/DeviceWideLoggingFeaturesTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ there's one user on the device or     * all secondary users / profiles are affiliated.     */   ])"", 1), ('([1:/com/android/cts/managedprofile/CurrentApiHelperTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[    /**     * Test: {@link CurrentApiHelper#getPublicApis} includes public API methods.     */   ])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/Utils.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ckageManager().hasSystemFeature(                PackageManager.FEATURE_SECURE_LOCK_SCREEN);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[n.DevicePolicyManager;public class KeyguardDisabledFeaturesTest extends BaseDeviceAdminTest {   ])', 1), ('([1:/android/packageinstaller/admin/cts/SessionCommitBroadcastTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[tected void tearDown() throws Exception {        mContext.unregisterReceiver(mReceiver);    }   ])', 1), ('([9:/com/android/cts/deviceandprofileowner/DelegationTest.java]:[android.app.admin.DevicePolicyManager]:[9]:method_text:[PONENT,                DELEGATE_PKG, Collections.emptyList());        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[geManager().hasSystemFeature(                PackageManager.FEATURE_SECURE_LOCK_SCREEN);    }   ])', 1), ('([1:/com/android/cts/packageinstaller/ClearDeviceOwnerTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[e admin on tearDown(). To be called from the host    // side test once a test case is finished.   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsIsCallerDelegateHelper.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[st {    private static final String APP_RESTRICTIONS_TARGET_PKG = ""com.android.cts.delegate"";   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/systemupdate/InstallUpdateTest.java]:[android.app.admin.DevicePolicyManager]:[3]:method_text:[cts/deviceowner/"";    public static final int TIMEOUT = 5;    private int callbackErrorCode;   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[s these two negative cases. * */public class ResetPasswordTest extends BaseDeviceAdminTest {   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/CaCertManagementTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[l installed certs.     *     * <p>The list of certificates must never be {@code null}.     */   ])', 1), ('([2:/main/java/com/android/bedstead/nene/devicepolicy/DevicePolicy.java]:[android.app.admin.DevicePolicyManager]:[2]:method_text:[stemService(DevicePolicyManager.class)                    .getPolicyExemptApps();        }    }}])', 1), ('([1:/com.android.cts.deviceadmin/DeviceAdminTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[d void setUp() throws Exception {        super.setUp();        assertNotDeviceOwner();    }   ])', 1), ('([1:/com/android/cts/verifier/security/LockConfirmBypassTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[tials"", false);                startActivity(setPasswordIntent);            }        });    }}])', 1), ('([1:/android/devicepolicy/cts/NegativeCallAuthorizationTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[s);    @ClassRule @Rule    public static final DeviceState sDeviceState = new DeviceState();   ])', 1), ('([1:/com/android/cts/verifier/security/CredentialManagementAppActivity.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ setResult(mRequestCertificateForAuthentication, mChosenAlias.equals(TEST_ALIAS));        }    }}])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/NfcTestActivity.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[               new NdefRecord(NdefRecord.TNF_MIME_MEDIA, mimeBytes, id, payload)        });    }}])', 1), ('([6:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[android.app.admin.DevicePolicyManager]:[6]:method_text:[ntName(            FakeComponent.class.getPackage().getName(), FakeComponent.class.getName());   ])', 1), ('([1:/com/android/cts/managedprofile/ContactsTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[PolicyManager) mContext                .getSystemService(Context.DEVICE_POLICY_SERVICE);    }   ])', 1), ('([1:/android/suspendapps/cts/DualSuspendTests.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[dle(Intent.EXTRA_PACKAGE_NAME, TEST_APP_PACKAGE_NAME),                mReceiverHandler);    }   ])', 1), ('([1:/com/android/cts/deviceowner/SetLocationEnabledTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[er.setUp();        mLocationManager = mContext.getSystemService(LocationManager.class);    }   ])', 1), ('([1:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ordBeforeUnlock} and will be called by the hostside logic     * before it is exercised.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DeviceIdAttestationTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[testation record fails if the profile owner has not been explicitly granted access    // to it.   ])', 1), ('([1:/com/android/cts/separateprofilechallenge/SeparateProfileChallengePermissionsTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[.assertNotNull;public class SeparateProfileChallengePermissionsTest extends AndroidTestCase {   ])', 1), ('([1:/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[public class TransferDeviceOwnerIncomingTest extends DeviceAndProfileOwnerTransferIncomingTest {   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AllowedAccountManagementTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[MPONENT,                UserManager.DISALLOW_MODIFY_ACCOUNTS);        super.tearDown();    }   ])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[android.app.admin.DevicePolicyManager]:[2]:method_text:[e(ComponentName, String)} */public class CertInstallDelegateTest extends BaseJUnit3TestCase {   ])', 1), ('([1:/com.android.cts.deviceadmin/BaseDeviceAdminTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[mumSymbols(mAdminComponent, 0);        dpm.setPasswordMinimumNonLetter(mAdminComponent, 0);    }}])', 1), ('([2:/com/android/cts/delegate/AppRestrictionsDelegateTest.java]:[android.app.admin.DevicePolicyManager]:[2]:method_text:[ows Exception {        mContext.unregisterReceiver(mReceiver);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileSharingTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ cross-profile sharing */@RunWith(AndroidJUnit4.class)public class CrossProfileSharingTest {   ])', 1), ('([1:/com/android/cts/verifier/admin/ScreenLockTestActivity.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[                      .show();                }            }, LOCK_CHECK_DELAY);        }    }}])', 1), ('([1:/com/android/cts/verifier/admin/DeviceAdminUninstallTestActivity.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[;        mUninstallStatus.invalidate();        getPassButton().setEnabled(mAdminRemoved);    }}])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ge = getString(messageId);        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/InputMethodsTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[    private final ComponentName badAdmin = new ComponentName(""com.foo.bar"", "".BazQuxReceiver"");   ])', 1), ('([1:/com/android/cts/managedprofile/ProfileTimeoutTestHelper.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ICE);        mKm = (KeyguardManager) context.getSystemService(Context.KEYGUARD_SERVICE);    }   ])', 1), ('([2:/com/android/cts/delegate/PackageAccessDelegateTest.java]:[android.app.admin.DevicePolicyManager]:[2]:method_text:[ase {    private static final String TEST_APP_PKG = ""com.android.cts.launcherapps.simpleapp"";   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java]:[android.app.admin.DevicePolicyManager]:[4]:method_text:[                InstrumentationRegistry.getArguments().getString(IS_SYSTEM_USER_PARAM));    }   ])', 1), ('([1:/com/android/cts/managedprofile/PrimaryUserTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[istry.getInstrumentation());        mPackageManager = getActivity().getPackageManager();    }   ])', 1), ('([1:/com/android/cts/verifier/security/SetNewPasswordComplexityTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[evicePolicyManager.PASSWORD_COMPLEXITY_NONE);            startActivity(intent);        });    }}])', 1), ('([14:/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java]:[android.app.admin.DevicePolicyManager]:[14]:method_text:[droid.cts.permissionapp"";    public static final String PARAM_APP_TO_ENABLE = ""app_to_enable"";   ])', 1), ('([1:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileCalendarTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[p();        mDevicePolicyManager = mContext.getSystemService(DevicePolicyManager.class);    }   ])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ePolicyManager)                mContext.getSystemService(Context.DEVICE_POLICY_SERVICE);    }   ])', 1), ('([1:/android/admin/cts/DevicePolicyManagerTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[                     + DeviceAdminInfoTest.getProfileOwnerComponent().flattenToString());    }   ])', 1), ('([5:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[android.app.admin.DevicePolicyManager]:[5]:method_text:[      mDevicePolicyManager.removeKeyPair(getWho(), TEST_ALIAS);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/TrustAgentInfoTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[           DevicePolicyManager.KEYGUARD_DISABLE_FEATURES_NONE);        super.tearDown();    }   ])', 1), ('([1:/android/packageinstaller/admin/cts/BasePackageInstallTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ine()) != null) {                ret.add(line);            }        }        return ret;    }}])', 1), ('([1:/com/android/cts/verifier/admin/tapjacking/EmptyDeviceAdminReceiver.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[POLICY_SERVICE);        dpm.removeActiveAdmin(new ComponentName(context, this.getClass()));    }}])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[earUserRestriction(getWho(), UserManager.DISALLOW_REMOVE_USER);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ApplicationHiddenTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[cationHidden(ADMIN_RECEIVER_COMPONENT, PACKAGE_TO_HIDE, false);        super.tearDown();    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerHelper.java]:[android.app.admin.DevicePolicyManager]:[3]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/DeviceOwnerRequestingBugreportTestActivity.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[y.EXTRA_COMMAND,                        CommandReceiverActivity.COMMAND_REQUEST_BUGREPORT);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/SetSystemSettingTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ext.getContentResolver(), Settings.System.SCREEN_BRIGHTNESS,        UserHandle.myUserId()));  } ])', 1), ('([7:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[android.app.admin.DevicePolicyManager]:[7]:method_text:[er(mReceiver);        mDevice.removeWatcher(CRASH_WATCHER_ID);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileUtils.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[_CHANGE"";    private static final String PARAM_CROSS_PROFILE_PACKAGE = ""crossProfilePackage"";   ])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/NonMarketAppsActivity.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ame getAdminComponent() {        return DeviceAdminTestReceiver.getReceiverComponentName();    }}])', 1), ('([1:/com/android/cts/verifier/security/CAInstallNotificationVerifierActivity.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[) {                return;            }            super.performTest(activity);        }    }}])', 1), ('([1:/com/android/cts/managedprofile/NotificationListenerTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[tance(mContext).unregisterReceiver(mReceiver);        toggleNotificationListener(false);    }   ])', 1), ('([1:/com/android/cts/managedprofile/TrustAgentInfoTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ isParent */);        enableTrustAgents(false /* isParent */);        super.tearDown();    }   ])', 1), ('([3:/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java]:[android.app.admin.DevicePolicyManager]:[3]:method_text:[min void addPersistentPreferredActivity(            IntentFilter filter, ComponentName activity);}])', 1), (""([2:/android/devicepolicy/cts/UnsafeStateExceptionTest.java]:[android.app.admin.DevicePolicyManager]:[2]:method_text:[private static final int VALID_OPERATION = Integer.MAX_VALUE; // Value doesn't really matter...   ])"", 1), ('([2:/com/android/cts/delegate/EnableSystemAppDelegateTest.java]:[android.app.admin.DevicePolicyManager]:[2]:method_text:[ase {    private static final String TEST_APP_PKG = ""com.android.cts.launcherapps.simpleapp"";   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ad.sleep(1000);        }        throw new AssertionError(""Failed to get UiAutomation"");    }   ])', 1), ('([1:/com/android/cts/delegate/AppRestrictionsIsCallerDelegateHelper.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[           getInstrumentation().getContext().getSystemService(DevicePolicyManager.class);    }   ])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/ByodFlowTestActivity.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[text) {        return context.getSharedPreferences(PROVISIONING_PREFERENCES, MODE_PRIVATE);    }}])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/PermissionLockdownTestActivity.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[, ""showToast("" + toast + "")"");        Toast.makeText(this, toast, Toast.LENGTH_LONG).show();    }])', 1), ('([1:/android/suspendapps/cts/DistractingPackageTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[           failed) + ""; expected to fail: "" + Arrays.toString(expectedToFail));        }    }   ])', 1), ('([1:/test/java/com/android/eventlib/premade/EventLibDeviceAdminReceiverTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ent = new Intent();    @Before    public void setUp() {        EventLogs.resetLogs();    }   ])', 1), ('([1:/com/android/suspendapps/testdeviceadmin/TestCommsReceiver.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[userRestriction);                setResultCode(RESULT_OK);                break;        }    }}])', 1), ('([1:/com/android/cts/managedprofile/SetPolicyActivity.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[Handle());        } else {            Log.e(TAG, ""Invalid command: "" + command);        }    }])', 1), ('([1:/com/android/cts/deviceandprofileowner/DeviceOwnershipTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ePolicyManager) context.getSystemService(                Context.DEVICE_POLICY_SERVICE);    }   ])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/WorkProfileWidgetActivity.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[ame getAdminComponent() {        return DeviceAdminTestReceiver.getReceiverComponentName();    }}])', 1), ('([1:/com/android/compatibility/common/deviceinfo/PackageDeviceInfo.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[xt()                .getResources()                .getIdentifier(name, type, ""android"");    }}])', 1), ('([11:/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java]:[android.app.admin.DevicePolicyManager]:[11]:method_text:[anager.setRequiredPasswordComplexity(PASSWORD_COMPLEXITY_NONE);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[r.setUp();        setupTestParameters(DevicePolicyManager.ACTION_PROFILE_OWNER_CHANGED);    }   ])', 1), ('([2:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[android.app.admin.DevicePolicyManager]:[2]:method_text:[tends AndroidTestCase {    private static final String TAG = ""ManagedProfileProvisioningTest"";   ])', 1), ('([1:/com/android/cts/deviceowner/BaseDeviceOwnerTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[serHandle getCurrentUser() {        return UserHandle.of(ActivityManager.getCurrentUser());    }}])', 1), ('([1:/com/android/cts/deviceowner/HeadlessSystemUserTest.java]:[android.app.admin.DevicePolicyManager]:[1]:method_text:[.getSystemService(UserManager.class);        Log.d(TAG, ""setUp(): userId="" + mUserId);    }   ])', 1), ('([2:/com/android/compatibility/common/util/devicepolicy/provisioning/SilentProvisioningTestManager.java]:[android.app.admin.DevicePolicyManager]:[2]:method_text:[nt intent) {            mReceivedIntent = intent;            mLatch.countDown();        }    }}])', 1)]"	""	""	"[('android.app.admin.DevicePolicyManager', 87)]"	"[('[com.android.cts.managedprofile.TestCrossProfileViewEventActivity isManagedProfile None]', 1), ('[com.android.cts.verifier.managedprovisioning.LockTaskUiTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.deviceowner.SetTimeTest currentTimeMillis None]', 1), ('[com.android.cts.managedprofile.LauncherAppsTest dropShellPermissionIdentity None]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[com.android.cts.deviceandprofileowner.DelegationTest emptyList None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsIsCallerDelegateHelper isCallerApplicationRestrictionsManagingPackage None]', 1), ('[main.java.com.android.bedstead.nene.devicepolicy.DevicePolicy permissions None]', 1), ('[com.android.cts.deviceadmin.DeviceAdminTest assertNotDeviceOwner None]', 1), ('[com.android.cts.verifier.security.LockConfirmBypassTest setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.security.CredentialManagementAppActivity finish None]', 1), ('[com.android.cts.verifier.managedprovisioning.NfcTestActivity getTestMessage None]', 1), ('[com.android.cts.managedprofile.ContactsTest assertNoPhotoUri None]', 1), ('[android.suspendapps.cts.DualSuspendTests addAndAssertProfileOwner CtsSuspendAppsTestCases]', 1), ('[com.android.cts.deviceandprofileowner.AllowedAccountManagementTest clearAllAccountManagementDisabled None]', 1), ('[com.android.cts.deviceadmin.BaseDeviceAdminTest isDeviceOwner None]', 1), ('[com.android.cts.verifier.admin.ScreenLockTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.admin.DeviceAdminUninstallTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.managedprovisioning.ByodHelperActivity isProfileOwner None]', 1), ('[com.android.cts.managedprofile.PrimaryUserTest PrimaryUserTest None]', 1), ('[com.android.cts.verifier.security.SetNewPasswordComplexityTest setPassFailButtonClickListeners None]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest finish None]', 1), ('[com.android.cts.deviceandprofileowner.TrustAgentInfoTest PersistableBundle None]', 1), ('[android.packageinstaller.admin.cts.BasePackageInstallTest assertInstallPackage CtsAdminPackageInstallerTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.DeviceOwnerRequestingBugreportTestActivity finish None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest PermissionBroadcastReceiver None]', 1), ('[com.android.cts.managedprofile.TrustAgentInfoTest PersistableBundle None]', 1), ('[communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager isUsingUnifiedPassword None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest dropShellPermissionIdentity None]', 1), ('[com.android.cts.delegate.AppRestrictionsIsCallerDelegateHelper isCallerApplicationRestrictionsManagingPackage None]', 1), ('[com.android.cts.verifier.managedprovisioning.ByodFlowTestActivity ByodFlowTestActivity None]', 1), ('[com.android.cts.verifier.managedprovisioning.PermissionLockdownTestActivity isProfileOrDeviceOwner None]', 1), ('[android.suspendapps.cts.DistractingPackageTest isEmpty CtsSuspendAppsTestCases]', 1), ('[test.java.com.android.eventlib.premade.EventLibDeviceAdminReceiverTest TestApis None]', 1), ('[com.android.cts.managedprofile.SetPolicyActivity finish None]', 1), ('[com.android.cts.verifier.managedprovisioning.WorkProfileWidgetActivity finish None]', 1), ('[com.android.cts.deviceowner.BaseDeviceOwnerTest assertDeviceOwner None]', 1), ('[com.android.cts.deviceowner.HeadlessSystemUserTest isHeadlessSystemUserMode None]', 1), ('[com.android.compatibility.common.util.devicepolicy.provisioning.SilentProvisioningTestManager getReceviedProfileProvisionedIntent None]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-3-6"	"7.3.1/C-3-6"	"07030100.670306"	"""C-3-6] Must enable biometric-backed keystore keys to third-party applications. If device implementations contain an under-display fingerprint sensor (UDFPS), they:"""	""	""	"UDFPS"	""	""	""	""	"[('android.server.biometrics.fingerprint.FingerprintServiceTest', 1)]"	""	"[('CtsBiometricsTestCases', 1)]"	""	"android.server.biometrics.fingerprint.FingerprintServiceTest"	""	"CtsBiometricsTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/fingerprint/FingerprintServiceTest.java', 1)]"	"[('(4,UDFPS,/android/server/biometrics/fingerprint/FingerprintServiceTest.java)', 1)]"	"[('([4:/android/server/biometrics/fingerprint/FingerprintServiceTest.java]:[UDFPS]:[4]:method_text:[        return state.mSensorStates.containsModalityFlag(SensorStateProto.FINGERPRINT_UDFPS);    }])', 1)]"	""	""	"[('UDFPS', 1)]"	"[('[android.server.biometrics.fingerprint.FingerprintServiceTest testRejectThenErrorFromForegroundActivity CtsBiometricsTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.1.2"	"3.9.1.2"	"C-1-6"	"3.9.1.2/C-1-6"	"03090102.670106"	"""C-1-6] MUST send the ACTION_GET_PROVISIONING_MODE intent after profile owner provisioning is triggered so that the DPC app can choose whether to become a Device Owner or a Profile Owner execpt when provisioning is triggered by the intent android.app.action.PROVISION_MANAGED_PROFILE."""	""	""	"PROVISION_MANAGED_PROFILE DPC ACTION_GET_PROVISIONING_MODE android.app.action.PROVISION"	""	""	""	""	"[('library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest', 61), ('com.android.cts.deviceandprofileowner.SuspendPackageTest', 2), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 2), ('com.android.cts.comp.provisioning.ManagedProfileProvisioningTest', 2), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerHostSideTransferTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('com.android.cts.verifier.managedprovisioning.Utils', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('processor.main.java.com.android.bedstead.remotedpc.processor.Processor', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('com.android.cts.deviceowner.PreDeviceOwnerTest', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi30', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1)]"	"[('users', 36), ('devicePolicy', 34), ('createUser', 18), ('createAndStart', 18), ('userHandle', 16), ('remove', 13), ('getDeviceOwner', 12), ('getDevice', 9), ('devicePolicyController', 8), ('any', 5), ('tearDown', 4), ('setUp', 3), ('show', 3), ('deviceOwner', 3), ('profileOwner', 3), ('devicePolicyManager', 3), ('getPackageManager', 2), ('getBuild', 2), ('BigTextStyle', 1), ('TvExtender', 1), ('build', 1), ('getSupportedSourceVersion', 1), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1), ('getName', 1), ('DeviceState', 1), ('deviceOwner_noDeviceOwner_returnsNull', 1), ('deviceOwner_nonRemoteDpcDeviceOwner_returnsNull', 1), ('deviceOwner_remoteDpcDeviceOwner_returnsInstance', 1), ('profileOwner_noProfileOwner_returnsNull', 1), ('profileOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userHandle_null_throwsException', 1), ('profileOwner_userHandle_noProfileOwner_returnsNull', 1), ('profileOwner_userHandle_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userHandle_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userReference_null_throwsException', 1), ('profileOwner_userReference_noProfileOwner_returnsNull', 1), ('profileOwner_userReference_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userReference_remoteDpcProfileOwner_returnsInstance', 1), ('any_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userHandle_null_throwsException', 1), ('any_userHandle_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userHandle_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userHandle_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userReference_null_throwsException', 1), ('any_userReference_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userReference_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userReference_remoteDpcProfileOwner_returnsProfileOwner', 1), ('setAsDeviceOwner_userHandle_null_throwsException', 1), ('setAsDeviceOwner_userHandle_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userHandle_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userHandle_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsDeviceOwner_userReference_null_throwsException', 1), ('setAsDeviceOwner_userReference_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userReference_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userReference_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsProfileOwner_userHandle_null_throwsException', 1), ('setAsProfileOwner_userHandle_alreadySet_doesNothing', 1), ('setAsProfileOwner_userHandle_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userHandle_doesNotHaveProfileOwner_setsProfileOwner', 1), ('setAsProfileOwner_userReference_null_throwsException', 1), ('setAsProfileOwner_userReference_alreadySet_doesNothing', 1), ('setAsProfileOwner_userReference_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userReference_doesNotHaveProfileOwner_setsProfileOwner', 1), ('devicePolicyController_returnsDevicePolicyController', 1), ('remove_deviceOwner_removes', 1), ('remove_profileOwner_removes', 1), ('frameworkCall_makesCall', 1), ('getCurrentFailedPasswordAttempts', 1), ('frameworkCall_onProfile_makesCall', 1), ('frameworkCallRequiresProfileOwner_notProfileOwner_throwsSecurityException', 1), ('forDevicePolicyController_nullDevicePolicyController_throwsException', 1), ('forDevicePolicyController_nonRemoteDpcDevicePolicyController_throwsException', 1), ('forDevicePolicyController_remoteDpcDevicePolicyController_returnsRemoteDpc', 1)]"	"[('CtsDevicePolicyManagerTestCases', 4), ('CtsDevicePolicyTestCases', 2), ('CtsMediaParserTestCases', 1), ('CtsTvTestCases', 1)]"	""	"library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest"	"devicePolicyController"	""	"[('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java', 61), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1)]"	"[('(2,DPC,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(4,DPC,/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java)', 1), ('(2,DPC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/verifier/managedprovisioning/Utils.java)', 1), ('(4,DPC,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(4,DPC,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(2,DPC,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(19,DPC,/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java)', 1), ('(2,DPC,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(2,DPC,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/deviceowner/PreDeviceOwnerTest.java)', 1), ('(1,DPC,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(4,DPC,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(27,DPC,/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(2,PROVISION_MANAGED_PROFILE,/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java)', 1), ('(179,DPC,/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java)', 1)]"	"[('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[);        } finally {            remoteDPC.devicePolicyController().remove();        }    }   ])', 4), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 2), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[        } finally {            deviceOwner.devicePolicyController().remove();        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[    } finally {            sTestApis.devicePolicy().getDeviceOwner().remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[PC.devicePolicyController());        } finally {            profile.remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);    }}])', 1), ('([4:/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java]:[DPC]:[4]:method_text:[NCOMING_TEST);            installAppAsUser(TRANSFER_OWNER_INCOMING_APK, mUserId);        }    }}])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {        testAssetExtraction(""wav/sample_ima_adpcm.wav"");    }   ])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/Utils.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ckageManager().hasSystemFeature(                PackageManager.FEATURE_SECURE_LOCK_SCREEN);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[1]:method_text:[RECEIVER_PKG);    }    /**     * Verify that we cannot suspend launcher and dpc app.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[3]:method_text:[);        assertWithMessage(""package %s suspension"", pkg).that(actual).isEqualTo(expected);    }}])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[provider that provides enterprise slice cannot     * see the enterprise slice requests.     */   ])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[()), offerCallback);        offerCallback.assertNoCallback();        return offerCallback;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases. * */public class ResetPasswordTest extends BaseDeviceAdminTest {   ])', 1), ('([19:/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java]:[DPC]:[19]:method_text:[getMessager()                .printMessage(Diagnostic.Kind.ERROR, errorText, errorElement);    }}])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[e(ComponentName, String)} */public class CertInstallDelegateTest extends BaseJUnit3TestCase {   ])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[DPC]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[           .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[DPC]:[1]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([4:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[DPC]:[4]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 1), ('([27:/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java]:[DPC]:[27]:method_text:[min void addPersistentPreferredActivity(            IntentFilter filter, ComponentName activity);}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java]:[DPC]:[1]:method_text:[ws Exception {        runDeviceTestsAsUser(DEVICE_ADMIN_PKG, className, testName, mUserId);    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[DPC]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[tends AndroidTestCase {    private static final String TAG = ""ManagedProfileProvisioningTest"";   ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ntent) {        return intent != null && intent.getExtras().containsKey(Intent.EXTRA_USER);    }}])', 1), ('([7:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[7]:method_text:[s    public static void teardownClass() {        sNonRemoteDpcTestApp.uninstall(sUser);    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Owner_noDeviceOwner_returnsNull() {        assertThat(RemoteDpc.deviceOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.deviceOwner()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.profileOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[rofileOwner()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.profileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[e.userHandle())).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[nterException.class,                () -> RemoteDpc.profileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[oDeviceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[moteDpc.any()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[emoteDpc.any()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[        assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser.userHandle())).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.userHandle())).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[())).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[     assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser)).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[teDpc.any(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Dpc.any(sUser)).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[le)).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[terException.class,                () -> RemoteDpc.setAsDeviceOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ption.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Exception.class,                () -> RemoteDpc.setAsDeviceOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[on.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[erException.class,                () -> RemoteDpc.setAsProfileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[tion.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[xception.class,                () -> RemoteDpc.setAsProfileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[n.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[Policy().getDeviceOwner());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[oteDPC.remove();        assertThat(sTestApis.devicePolicy().getDeviceOwner()).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[eed to support the case where there is both a DO and a PO on    //  older versions of Android?   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[ntFailedPasswordAttempts();        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[ succeeds            remoteDPC.devicePolicyManager().isUsingUnifiedPassword();        }    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[.isUsingUnifiedPassword());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.forDevicePolicyController(null));    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Controller(deviceOwner));        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([8:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[8]:method_text:[                 .isNotNull();        } finally {            remoteDPC.remove();        }    }])', 1)]"	""	""	"[('DPC', 77), ('PROVISION_MANAGED_PROFILE', 4)]"	"[('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNull None]', 19), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNotNull None]', 15), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isUsingUnifiedPassword None]', 2), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testWavWithImaAdpcm CtsMediaParserTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSetPackagesNotSuspended None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSuspendNotSuspendablePackages None]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_enableService_issueRequest CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_disableService_noIssueRequest CtsDevicePolicyTestCases]', 1), ('[processor.main.java.com.android.bedstead.remotedpc.processor.Processor latest None]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceowner.PreDeviceOwnerTest testIsProvisioningNotAllowedForManagedProfileAction None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testRevokeKeyPairFromApp_keyNotUsable None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtsc3FrontendSettings CtsTvTestCases]', 1), ('[communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager isUsingUnifiedPassword None]', 1), ('[com.android.cts.comp.provisioning.ManagedProfileProvisioningTest testProvisioningCorpOwnedManagedProfile None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest TestApis None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userReference_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userReference_nonExistingUser_throwsException None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Device Integrity"	"9.1"	"C-3-3"	"9.1/C-3-3"	"09010000.670303"	"""C-3-3] MUST ensure that the user has been able to review and approve the prompted message even in the event that the Android OS, including its kernel, is compromised. <h3 id=""911_keys_and_credentials"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.5.1  . Hardware"	"7.1.4.1"	"A-0-2"	"7.1.4.1/A-0-2"	"07010401.650002"	"""[7.1.4.1/A-0-2] MUST support Vulkan 1.1. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"5.1.1  . Media Codec Characterization"	"5.1.1"	"C-1-7"	"5.1.1/C-1-7"	"05010100.670107"	"""C-1-7] Codecs that utilize hardware acceleration MUST be characterized as hardware accelerated."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-2-4"	"7.3.1/C-2-4"	"07030100.670204"	"""C-2-4] MUST have all identifiable data encrypted and cryptographically authenticated such that they cannot be acquired, read or altered outside of the isolated execution environment or a chip with a secure channel to the isolated execution environment as documented in the implementation guidelines on the Android Open Source Project site."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Application Data Migration"	"9.1"	"C-1-5"	"9.1/C-1-5"	"09010000.670105"	"""C-1-5] MUST use verification algorithms as strong as current recommendations from NIST for hashing algorithms (SHA-256) and public key sizes (RSA-2048). | C-1-5] MUST allow the user to choose the Sleep timeout for transition from the unlocked to the locked state, with a minimum allowable timeout up to 15 seconds. Automotive devices, that lock the screen whenever the head unit is turned off or the user is switched, MAY NOT have the Sleep timeout configuration. | C-1-5] MUST show an indication that the source device has had data migrated by a device-to-device data migration in the settings menu. A user SHOULD NOT be able to remove this indication. <h2 id=""10_software_compatibility_testing"" """	""	""	"SHA RSA NIST"	""	""	""	""	"[('android.server.wm.lifecycle.ActivityLifecycleTests', 11), ('android.uirendering.cts.testclasses.GradientTests', 11), ('android.media.cts.AudioPlaybackConfigurationTest', 3), ('android.devicepolicy.cts.AppUriAuthenticationPolicyTest', 3), ('android.media.cts.AudioManagerTest', 2), ('android.jdwptunnel.cts.JdwpTunnelTest', 2), ('android.media.cts.DecodeEditEncodeTest', 2), ('android.graphics.cts.BitmapColorSpaceTest', 2), ('android.hardware.camera2.cts.NativeCameraDeviceTest', 2), ('android.media.cts.MediaCodecTest', 2), ('android.media.cts.SystemMediaRouter2Test', 1), ('android.server.wm.SplashscreenTests', 1), ('android.cts.backup.restoresessionapp.BaseRestoreSessionAppTest', 1), ('com.android.cts.verifier.p2p.RequesterTestActivity', 1), ('android.provider.cts.simphonebook.SimPhonebookRequirementsRule', 1), ('android.view.inputmethod.cts.InputConnectionWrapperTest', 1), ('android.systemui.cts.LightBarActivity', 1), ('test.java.com.android.bedstead.nene.packages.PackageReferenceTest', 1), ('android.jobscheduler.cts.shareduidtests.ClipDataJobTest', 1), ('android.opengl.cts.OpenGLES20NativeActivityOne', 1), ('android.appsecurity.cts.ApkVerityInstallTest', 1), ('android.renderscript.cts.generated.TestLength', 1), ('android.renderscript.cts.generated.TestSin', 1), ('android.acceleration.AcceleratedView', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.renderscript.cts.generated.TestTanpi', 1)]"	"[('destroy', 78), ('toString', 72), ('StringBuilder', 24), ('setUp', 11), ('tearDown', 9), ('ArgumentsFloatFloat', 9), ('ArgumentsHalfHalf', 9), ('getWindow', 3), ('Builder', 3), ('onPause', 3), ('onResume', 3), ('ArgumentsFloatNFloat', 3), ('ArgumentsHalfNHalf', 3), ('release', 2), ('edit', 2), ('commit', 2), ('getSubscriptionInfoForRemovableSims', 2), ('size', 2), ('getColorSpace', 2), ('getIntent', 2), ('RouteCallback', 1), ('getMediaDirString', 1), ('stop', 1), ('getTargetContext', 1), ('clearSharedPrefs', 1), ('clear', 1), ('SimPhonebookRequirementsRule', 1), ('before', 1), ('getApplicationContext', 1), ('getSupportedModemCount', 1), ('getRemovableSimSlotCount', 1), ('getAttributes', 1), ('getDecorView', 1), ('addAppAndUriMapping_nullUri_throwException', 1), ('addAppAndUriMapping_nullPackageName_throwException', 1), ('addAppAndUriMapping_nullAlias_throwException', 1), ('hashCode', 1), ('getContext', 1), ('getContentResolver', 1), ('close', 1), ('main', 1), ('writeColorSpace', 1), ('getAssets', 1), ('fail', 1), ('obtain', 1), ('recycle', 1), ('waitForFrameDrawn', 1), ('getRenderer', 1), ('getAttachShaderError', 1), ('getAttachedShaderCount', 1), ('countDown', 1), ('checkLengthFloatFloat', 1), ('checkLengthFloat2Float', 1), ('checkLengthFloat3Float', 1), ('checkLengthFloat4Float', 1), ('checkLengthHalfHalf', 1), ('checkLengthHalf2Half', 1), ('checkLengthHalf3Half', 1), ('checkLengthHalf4Half', 1), ('checkSinFloatFloat', 1), ('checkSinFloat2Float2', 1), ('checkSinFloat3Float3', 1), ('checkSinFloat4Float4', 1), ('checkSinHalfHalf', 1), ('checkSinHalf2Half2', 1), ('checkSinHalf3Half3', 1), ('checkSinHalf4Half4', 1), ('checkTanpiFloatFloat', 1), ('checkTanpiFloat2Float2', 1), ('checkTanpiFloat3Float3', 1), ('checkTanpiFloat4Float4', 1), ('checkTanpiHalfHalf', 1), ('checkTanpiHalf2Half2', 1), ('checkTanpiHalf3Half3', 1), ('checkTanpiHalf4Half4', 1)]"	"[('CtsWindowManagerDeviceTestCases', 12), ('CtsUiRenderingTestCases', 11), ('CtsMediaTestCases', 10), ('CtsDevicePolicyTestCases', 3), ('CtsRenderscriptTestCases', 3), ('CtsJdwpTunnelHostTestCases', 2), ('CtsGraphicsTestCases', 2), ('CtsCameraTestCases', 2), ('CtsSimPhonebookProviderTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsSystemUiTestCases', 1), ('CtsJobSchedulerSharedUidTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsAccelerationTestCases', 1), ('CtsViewTestCases', 1)]"	""	"android.uirendering.cts.testclasses.GradientTests"	"toString"	"CtsUiRenderingTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTests.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/GradientTests.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapColorSpaceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SystemMediaRouter2Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/RestoreSessionTest/src/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/RequesterTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/LightBarActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobSchedulerSharedUid/src/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGLES20NativeActivityOne.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestLength.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestSin.java', 1), ('/home/gpoor/cts-12-source/cts/tests/acceleration/src/android/acceleration/AcceleratedView.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestTanpi.java', 1)]"	"[('(1,SHA,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(12,SHA,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(3,RSA,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(1,SHA,/android/server/wm/SplashscreenTests.java)', 1), ('(9,SHA,/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java)', 1), ('(1,RSA,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(3,SHA,/android/media/cts/AudioManagerTest.java)', 1), ('(1,RSA,/android/media/cts/AudioManagerTest.java)', 1), ('(1,SHA,/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java)', 1), ('(1,SHA,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(2,RSA,/android/systemui/cts/LightBarActivity.java)', 1), ('(10,SHA,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(1,SHA,/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java)', 1), ('(3,SHA,/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java)', 1), ('(1,SHA,/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java)', 1), ('(6,SHA,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(5,SHA,/android/graphics/cts/BitmapColorSpaceTest.java)', 1), ('(9,SHA,/android/opengl/cts/OpenGLES20NativeActivityOne.java)', 1), ('(4,SHA,/android/hardware/camera2/cts/NativeCameraDeviceTest.java)', 1), ('(1,SHA,/android/appsecurity/cts/ApkVerityInstallTest.java)', 1), ('(4,SHA,/android/media/cts/MediaCodecTest.java)', 1), ('(10,SHA,/android/renderscript/cts/generated/TestLength.java)', 1), ('(13,SHA,/android/server/wm/lifecycle/ActivityLifecycleTests.java)', 1), ('(9,SHA,/android/renderscript/cts/generated/TestSin.java)', 1), ('(5,SHA,/android/acceleration/AcceleratedView.java)', 1), ('(1,SHA,/android/view/cts/ASurfaceControlTest.java)', 1), ('(9,SHA,/android/renderscript/cts/generated/TestTanpi.java)', 1), ('(17,SHA,/android/uirendering/cts/testclasses/GradientTests.java)', 1), ('(1,RSA,/android/uirendering/cts/testclasses/GradientTests.java)', 1)]"	"[('([1:/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java]:[SHA]:[1]:method_text:[llPointerException expected) {            // Expected behavior, nothing to do.        }    }   ])', 3), ('([1:/android/server/wm/lifecycle/ActivityLifecycleTests.java]:[SHA]:[1]:method_text:[A_FINISH_IN_ON_CREATE,                Arrays.asList(ON_CREATE, ON_DESTROY), ""onCreate"");    }   ])', 2), ('([1:/android/server/wm/lifecycle/ActivityLifecycleTests.java]:[SHA]:[1]:method_text:[EATE, ON_START, ON_POST_CREATE, ON_STOP,                        ON_DESTROY), ""onStart"");    }   ])', 2), ('([2:/android/server/wm/lifecycle/ActivityLifecycleTests.java]:[SHA]:[2]:method_text:[tAndAssertActivityTransitions(activityClass, expectedSequence, ""finish in "" + stageName);    }   ])', 2), ('([1:/android/uirendering/cts/testclasses/GradientTests.java]:[SHA]:[1]:method_text:[         null,                        Shader.TileMode.CLAMP                )        );    }   ])', 2), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[SHA]:[1]:method_text:[callbacks        clearCallbacks();        mUiAutomation.dropShellPermissionIdentity();    }   ])', 1), ('([2:/android/media/cts/AudioPlaybackConfigurationTest.java]:[SHA]:[2]:method_text:[   // create an AudioPlaybackConfiguration directly, we first need to play something to get one.   ])', 1), ('([10:/android/media/cts/AudioPlaybackConfigurationTest.java]:[SHA]:[10]:method_text:[             configToMarshall.getAudioAttributes(), restoredConfig.getAudioAttributes());    }   ])', 1), ('([3:/android/media/cts/AudioPlaybackConfigurationTest.java]:[RSA]:[3]:method_text:[using SoundPool"",                nbActivePlayersBeforeStart, nbActivePlayersAfterPause);    }   ])', 1), ('([1:/android/server/wm/SplashscreenTests.java]:[SHA]:[1]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([9:/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java]:[SHA]:[9]:method_text:[, int prefValue) {        assertThat(mPreferences.getInt(prefKey, 0)).isEqualTo(prefValue);    }}])', 1), ('([1:/com/android/cts/verifier/p2p/RequesterTestActivity.java]:[RSA]:[1]:method_text:[ }).show();    }    private TestCaseListener getTestCaseListener() {        return this;    }}])', 1), ('([3:/android/media/cts/AudioManagerTest.java]:[SHA]:[3]:method_text:[    Log.i(TAG, ""isHapticPlaybackSupported: "" + AudioManager.isHapticPlaybackSupported());    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[RSA]:[1]:method_text:[;            assertEquals(RINGER_MODE_VIBRATE, mAudioManager.getRingerMode());        }    }   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java]:[SHA]:[1]:method_text:[.getSubscriptionInfoForRemovableSims().size())                .isAtLeast(mMinimumSimCount);    }}])', 1), ('([1:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[SHA]:[1]:method_text:[     expectThrows(IllegalArgumentException.class,  ()-> wrapper.getTextBeforeCursor(-1, 0));    }}])', 1), ('([2:/android/systemui/cts/LightBarActivity.java]:[RSA]:[2]:method_text:[ranceFlag;        }        controller.setSystemBarsAppearance(appearance, appearanceFlag);    }}])', 1), ('([2:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[SHA]:[2]:method_text:[ould race with the JDWP handshake. This could     * confuse clients. See bug: 178655046     */   ])', 1), ('([8:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[SHA]:[8]:method_text:[ sent big-endian so first byte has sign bit.        assertTrue((is.read() & 0x80) == 0x80);    }}])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java]:[SHA]:[1]:method_text:[ Use annotations to share state instead of doing so manually        sOtherUser.remove();    }   ])', 1), ('([1:/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java]:[SHA]:[1]:method_text:[_ID);    }    /**     * Test basic granting of URI permissions associated with jobs.     */   ])', 1), ('([3:/android/media/cts/DecodeEditEncodeTest.java]:[SHA]:[3]:method_text:[gest color component delta seen (i.e. actual vs. expected)    private int mLargestColorDelta;   ])', 1), ('([3:/android/media/cts/DecodeEditEncodeTest.java]:[SHA]:[3]:method_text:[                  throw new RuntimeException(ioe);                }            }        }    }}])', 1), ('([4:/android/graphics/cts/BitmapColorSpaceTest.java]:[SHA]:[4]:method_text:[ace();        assertNotNull(cs);        assertSame(expected, cs);        p.recycle();    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SHA]:[1]:method_text:[        }        } catch (Exception e) {            fail(""Failed with "" + e);        }    }   ])', 1), ('([9:/android/opengl/cts/OpenGLES20NativeActivityOne.java]:[SHA]:[9]:method_text:[   mLatch.countDown();    }    public void onSurfaceCreated(GL10 gl, EGLConfig config) {    }}])', 1), ('([3:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[SHA]:[3]:method_text:[ceSharedOutputUpdate(mPreviewSurface, outputSurface,                mOverrideCameraId));    }   ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[SHA]:[1]:method_text:[    private static native boolean testCameraDeviceCaptureFailureNative(String overrideCameraId);}])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[SHA]:[1]:method_text:[eriveRemoteName(String originalName, int index) {            return originalName;        }    }}])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[SHA]:[1]:method_text:[() throws Exception, InterruptedException {        testAsyncReset(false /* testStop */);    }   ])', 1), ('([3:/android/media/cts/MediaCodecTest.java]:[SHA]:[3]:method_text:[ {                codec.stop();                codec.release();            }        }    }   ])', 1), ('([10:/android/renderscript/cts/generated/TestLength.java]:[SHA]:[10]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleTests.java]:[SHA]:[1]:method_text:[eption {        testLaunchForResultAndLaunchAfterResultSequence(EXTRA_LAUNCH_ON_RESULT);    }   ])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleTests.java]:[SHA]:[1]:method_text:[lass, ON_TOP_POSITION_GAINED)),                ""launchForResultAndLaunchAfterOnResult"");    }   ])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleTests.java]:[SHA]:[1]:method_text:[N_TOP_POSITION_LOST, ON_PAUSE, ON_STOP,                        ON_DESTROY), ""onResume"");    }   ])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleTests.java]:[SHA]:[1]:method_text:[y.class, EXTRA_FINISH_IN_ON_PAUSE, ""onPause"",                TranslucentActivity.class);    }   ])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleTests.java]:[SHA]:[1]:method_text:[tActivity.class, EXTRA_FINISH_IN_ON_STOP, ""onStop"",                FirstActivity.class);    }   ])', 1), ('([9:/android/renderscript/cts/generated/TestSin.java]:[SHA]:[9]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([5:/android/acceleration/AcceleratedView.java]:[SHA]:[5]:method_text:[     } catch (InterruptedException e) {            throw new RuntimeException(e);        }    }}])', 1), ('([1:/android/view/cts/ASurfaceControlTest.java]:[SHA]:[1]:method_text:[                        return pixelCount == 0;                    }                });    }   ])', 1), ('([9:/android/renderscript/cts/generated/TestTanpi.java]:[SHA]:[9]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/GradientTests.java]:[SHA]:[1]:method_text:[@MediumTest@RunWith(AndroidJUnit4.class)public class GradientTests extends ActivityTestBase {   ])', 1), ('([2:/android/uirendering/cts/testclasses/GradientTests.java]:[SHA]:[2]:method_text:[0000                }, 20)); // Tolerance set to account for dithering and interpolation    }   ])', 1), ('([2:/android/uirendering/cts/testclasses/GradientTests.java]:[SHA]:[2]:method_text:[ Color.CYAN, Color.RED                            }                    )            );    }   ])', 1), ('([2:/android/uirendering/cts/testclasses/GradientTests.java]:[SHA]:[2]:method_text:[     Color.RED                                }                        )            );    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/GradientTests.java]:[SHA]:[1]:method_text:[,                        null,                        Shader.TileMode.CLAMP        ));    }   ])', 1), ('([3:/android/uirendering/cts/testclasses/GradientTests.java]:[SHA]:[3]:method_text:[ srcCanvas.drawRect(0f, 0f, TEST_WIDTH, TEST_HEIGHT, srcPaint);        return srcBitmap;    }   ])', 1), ('([2:/android/uirendering/cts/testclasses/GradientTests.java]:[SHA]:[2]:method_text:[fier(                        new GoldenImageVerifier(golden, new MSSIMComparer(0.99f)));    }   ])', 1), ('([2:/android/uirendering/cts/testclasses/GradientTests.java]:[SHA]:[2]:method_text:[       Color.CYAN                                }                        )            );    }}])', 1), ('([1:/android/uirendering/cts/testclasses/GradientTests.java]:[RSA]:[1]:method_text:[ srcCanvas.drawRect(0f, 0f, TEST_WIDTH, TEST_HEIGHT, srcPaint);        return srcBitmap;    }   ])', 1)]"	""	""	"[('SHA', 51), ('RSA', 5)]"	"[('[android.uirendering.cts.testclasses.GradientTests testMismatchColorsAndStopsThrows CtsUiRenderingTestCases]', 2), ('[android.media.cts.SystemMediaRouter2Test ArrayList CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testParcelableWriteToParcel CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetterSoundPool CtsMediaTestCases]', 1), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.p2p.RequesterTestActivity getTestCase None]', 1), ('[android.media.cts.AudioManagerTest testIsHapticPlaybackSupported CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetRingerModePolicyAccess CtsMediaTestCases]', 1), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInvalidGetTextBeforeOrAfterCursorRequest CtsInputMethodTestCases]', 1), ('[android.systemui.cts.LightBarActivity getSystemUiVisibility CtsSystemUiTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest testAttachDebuggerToProfileableApp CtsJdwpTunnelHostTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest testDdmsWaitsForHandshake CtsJdwpTunnelHostTestCases]', 1), ('[test.java.com.android.bedstead.nene.packages.PackageReferenceTest TestApis None]', 1), ('[android.media.cts.DecodeEditEncodeTest testVideoEdit720p CtsMediaTestCases]', 1), ('[android.graphics.cts.BitmapColorSpaceTest test16bitHardware CtsGraphicsTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceSharedOutputUpdate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceCaptureFailure CtsCameraTestCases]', 1), ('[android.appsecurity.cts.ApkVerityInstallTest testInstallBaseIncrementallyWithWrongIdSigAndFsvSig CtsAppSecurityHostTestCases]', 1), ('[android.media.cts.MediaCodecTest testAsyncFlushAndReset CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testFlushAfterFirstBuffer CtsMediaTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testFinishAndLaunchOnResult CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testFinishAndLaunchAfterOnResultInOnResume CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testFinishInOnCreate CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testFinishInOnCreateNoDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testFinishInOnStart CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testFinishInOnStartNoDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testFinishInOnResume CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testFinishInOnResumeNoDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testFinishInOnPause CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testFinishInOnStop CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testFinishBelowDialogActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.acceleration.AcceleratedView isHardwareAccelerated CtsAccelerationTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setBufferOpaque_transparent CtsViewTestCases]', 1), ('[android.uirendering.cts.testclasses.GradientTests testAlphaPreMultiplication CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.GradientTests testRadialGradientWithFocalPoint CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.GradientTests testRadialGradientSameStartEndCircles CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.GradientTests testNegativeFocalRadiusThrows CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.GradientTests testRadialGradientWithFocalPointMatchesRegularRadialGradient CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.GradientTests testZeroEndRadiusThrows CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.GradientTests testNullColorsThrows CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.GradientTests testMatrixTransformation CtsUiRenderingTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.1  . These are in the Android source tree at"	"7.1.4.1"	"C-2-4"	"7.1.4.1/C-2-4"	"07010401.670204"	"""C-2-4] MUST at least support version 132383489 (from Mar 1st, 2020) as reported in the android.software.opengles.deqp.level feature flag."""	""	""	"android.software.opengles.deqp.level"	""	""	""	""	"[('android.graphics.cts.OpenGlEsDeqpLevelTest', 1)]"	"[('getSimpleName', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1)]"	"[('CtsGraphicsTestCases', 1)]"	""	"android.graphics.cts.OpenGlEsDeqpLevelTest"	"getPackageManager"	"CtsGraphicsTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/OpenGlEsDeqpLevelTest.java', 1)]"	"[('(1,android.software.opengles.deqp.level,/android/graphics/cts/OpenGlEsDeqpLevelTest.java)', 1)]"	"[('([1:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[android.software.opengles.deqp.level]:[1]:method_text:[d setup() {        mPm = InstrumentationRegistry.getTargetContext().getPackageManager();    }   ])', 1)]"	""	""	"[('android.software.opengles.deqp.level', 1)]"	""	""	""	""	""	""	""	""	""	""
"7.1  . Media Performance Class"	"7.1"	"C-1-1"	"7.1/C-1-1"	"07010000.670101"	"""C-1-1] MUST return at least a value of android.os.Build.VERSION_CODES.R."""	""	""	"android.os.Build.VERSION VERSION_CODES"	""	""	""	""	"[('android.net.wifi.cts.ConnectedNetworkScorerTest', 5), ('android.net.wifi.cts.WifiConfigurationTest', 4), ('test.java.com.android.bedstead.nene.utils.ShellCommandTest', 3), ('android.media.cts.SoundPoolTest', 3), ('android.hardware.cts.SensorParameterRangeTest', 2), ('android.media.mediaparser.cts.MediaParserTest', 2), ('com.android.cts.dexmetadata.InstallDexMetadataTest', 2), ('main.java.com.android.bedstead.nene.utils.ShellCommandUtils', 2), ('com.android.cts.verifier.wifiaware.testcase.DataPathOutOfBandTestCase', 2), ('main.java.com.android.bedstead.nene.devicepolicy.DevicePolicy', 2), ('android.app.role.cts.RoleManagerTest', 2), ('main.java.com.android.bedstead.nene.users.Users', 2), ('android.media.cts.AudioManagerTest', 1), ('android.media.cts.MediaCodecTest', 1), ('android.provider.cts.media.MediaStore_AudioTest', 1), ('android.media.cts.NdkMediaCodec', 1), ('android.appsecurity.cts.DocumentsTest', 1), ('com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity', 1), ('android.net.wifi.passpoint.cts.PasspointConfigurationTest', 1), ('android.alarmmanager.cts.BasicApiTests', 1), ('com.android.compatibility.common.util.MediaUtils', 1), ('android.media.cts.DecodeAccuracyTestBase', 1), ('android.mediapc.cts.CodecTestBase', 1), ('com.android.cts.verifier.notifications.ToastVerifierActivity', 1), ('android.media.cts.MediaMuxerTest', 1), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 1), ('android.hardware.camera2.cts.ZoomCaptureTest', 1), ('android.provider.cts.media.MediaStore_MetadataKeysTest', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('android.provider.cts.media.MediaStorePlacementTest', 1), ('com.android.cts.verifier.nfc.offhost.UiccTransactionEvent3EmulatorActivity', 1), ('android.leanbackjank.app.Utils', 1), ('com.android.cts.verifier.usb.device.UsbDeviceTestActivity', 1), ('com.android.compatibility.common.deviceinfo.MediaDeviceInfo', 1), ('android.provider.cts.media.MediaStore_Audio_ArtistsTest', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('com.android.cts.deviceadmin.DeviceAdminTest', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('android.app.cts.BroadcastOptionsTest', 1)]"	"[('close', 17), ('NullPointerException', 10), ('clear', 9), ('start', 9), ('setUp', 7), ('release', 7), ('elapsedRealtime', 7), ('AtomicInteger', 7), ('Object', 6), ('packages', 6), ('fillCache', 6), ('decoderRelease', 5), ('getWidth', 5), ('getHeight', 5), ('lock', 5), ('getName', 5), ('getSimpleName', 4), ('unlock', 4), ('getLooper', 4), ('build', 4), ('run', 4), ('capacity', 4), ('getPackageName', 4), ('getSurface', 4), ('all', 4), ('ensureSupportedTypesCacheFilled', 4), ('reset', 3), ('signalAll', 3), ('getTargetContext', 3), ('quitSafely', 3), ('getOutputStream', 3), ('Builder', 3), ('getAudioAttributes', 3), ('getMediaDirString', 2), ('getApplicationContext', 2), ('startDecoder', 2), ('queueDecoderInputBuffer', 2), ('dequeueDecoderOutputBuffer', 2), ('extractorRelease', 2), ('clearQueues', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('execute', 2), ('data', 2), ('getSharedVolumeNames', 2), ('getContentResolver', 2), ('getSoundA', 2), ('flattenToShortString', 2), ('context', 2), ('instrumentedContext', 2), ('getUserSetupComplete', 2), ('values', 2), ('instrumented', 2), ('myUserHandle', 2), ('system', 2), ('getIdentifier', 2), ('supportedTypes', 2), ('baseType', 2), ('stream', 2), ('type', 2), ('toSet', 2), ('getActivity', 1), ('getResources', 1), ('tearDown', 1), ('bringActivityToFront', 1), ('getHelper', 1), ('MediaExtractor', 1), ('failToStart', 1), ('PlayerResult', 1), ('getMediaFormat', 1), ('getInputBuffers', 1), ('getSampleTime', 1), ('advance', 1), ('BufferInfo', 1), ('getOutputBuffers', 1), ('getAssetFileDescriptor', 1), ('getFileDescriptor', 1), ('getStartOffset', 1), ('getLength', 1), ('stop', 1), ('ReentrantLock', 1), ('newCondition', 1), ('CodecAsyncHandler', 1), ('resetContext', 1), ('getMessage', 1), ('toString', 1), ('getOutput', 1), ('getLayoutInflater', 1), ('getStatSize', 1), ('onCreate', 1), ('BlockingStateCallback', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('onDestroy', 1), ('quit', 1), ('size', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('execute_invalidCommand_legacyOutput_throwsException', 1), ('execute_invalidCommand_legacyOutput_preAndroid11_throwsException', 1), ('ContentValues', 1), ('Bundle', 1), ('getSoundCs', 1), ('getSounds', 1), ('Utils', 1), ('now', 1), ('nanoTime', 1), ('getMaxPacketSize', 1), ('getPassButton', 1), ('IntentFilter', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getApplicationInfo', 1), ('getSerialNumber', 1), ('Thread', 1), ('getProductName', 1), ('getCodecInfos', 1), ('startGroup', 1), ('getCanonicalName', 1), ('telephonySmsGetDefaultSmsPackageBackedByRole', 1)]"	"[('CtsWifiTestCases', 10), ('CtsMediaTestCases', 7), ('CtsProviderTestCases', 4), ('CtsSensorTestCases', 2), ('CtsMediaParserTestCases', 2), ('CtsRoleTestCases', 2), ('CtsAppSecurityHostTestCases', 1), ('CtsAlarmManagerTestCases', 1), ('CtsMediaPerformanceClassTestCases', 1), ('CtsLegacyNotification20TestCases', 1), ('CtsCameraTestCases', 1), ('CtsAppTestCases', 1)]"	""	"android.net.wifi.cts.WifiConfigurationTest"	"toSet"	"CtsWifiTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConnectedNetworkScorerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiConfigurationTest.java', 4), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SoundPoolTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/dexmetadata/app/src/com/android/cts/dexmetadata/InstallDexMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/utils/ShellCommandUtils.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/testcase/DataPathOutOfBandTestCase.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/devicepolicy/DevicePolicy.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/role/src/android/app/role/cts/RoleManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/users/Users.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_AudioTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/NdkMediaCodec.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DocumentsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/BasicApiTests.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/MediaUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeAccuracyTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/CodecTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/notifications/ToastVerifierActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy20/src/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_MetadataKeysTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePlacementTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent3EmulatorActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/leanbackjank/app/src/android/leanbackjank/app/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/device-info/src/com/android/compatibility/common/deviceinfo/MediaDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/DeviceAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/BroadcastOptionsTest.java', 1)]"	"[('(1,VERSION_CODES,/android/media/cts/AudioManagerTest.java)', 1), ('(3,VERSION_CODES,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(2,VERSION_CODES,/android/media/cts/MediaCodecTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_AudioTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/NdkMediaCodec.java)', 1), ('(2,VERSION_CODES,/android/appsecurity/cts/DocumentsTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java)', 1), ('(1,VERSION_CODES,/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java)', 1), ('(7,VERSION_CODES,/android/net/wifi/cts/ConnectedNetworkScorerTest.java)', 1), ('(1,VERSION_CODES,/android/alarmmanager/cts/BasicApiTests.java)', 1), ('(3,VERSION_CODES,/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(6,VERSION_CODES,/android/media/cts/DecodeAccuracyTestBase.java)', 1), ('(1,VERSION_CODES,/android/mediapc/cts/CodecTestBase.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/notifications/ToastVerifierActivity.java)', 1), ('(2,VERSION_CODES,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,VERSION_CODES,/android/media/cts/MediaMuxerTest.java)', 1), ('(1,android.os.Build.VERSION,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 1), ('(2,VERSION_CODES,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 1), ('(1,VERSION_CODES,/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_MetadataKeysTest.java)', 1), ('(2,VERSION_CODES,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(1,android.os.Build.VERSION,/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java)', 1), ('(3,VERSION_CODES,/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStorePlacementTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent3EmulatorActivity.java)', 1), ('(3,VERSION_CODES,/android/media/cts/SoundPoolTest.java)', 1), ('(1,android.os.Build.VERSION,/main/java/com/android/bedstead/nene/utils/ShellCommandUtils.java)', 1), ('(1,VERSION_CODES,/main/java/com/android/bedstead/nene/utils/ShellCommandUtils.java)', 1), ('(1,VERSION_CODES,/android/leanbackjank/app/Utils.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(2,VERSION_CODES,/com/android/compatibility/common/deviceinfo/MediaDeviceInfo.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(3,android.os.Build.VERSION,/com/android/cts/verifier/wifiaware/testcase/DataPathOutOfBandTestCase.java)', 1), ('(2,VERSION_CODES,/com/android/cts/verifier/wifiaware/testcase/DataPathOutOfBandTestCase.java)', 1), ('(1,android.os.Build.VERSION,/main/java/com/android/bedstead/nene/devicepolicy/DevicePolicy.java)', 1), ('(1,VERSION_CODES,/main/java/com/android/bedstead/nene/devicepolicy/DevicePolicy.java)', 1), ('(1,VERSION_CODES,/com.android.cts.deviceadmin/DeviceAdminTest.java)', 1), ('(2,VERSION_CODES,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(4,VERSION_CODES,/android/app/cts/BroadcastOptionsTest.java)', 1), ('(2,VERSION_CODES,/android/app/role/cts/RoleManagerTest.java)', 1), ('(1,android.os.Build.VERSION,/main/java/com/android/bedstead/nene/users/Users.java)', 1), ('(3,VERSION_CODES,/main/java/com/android/bedstead/nene/users/Users.java)', 1), ('(4,VERSION_CODES,/android/net/wifi/cts/WifiConfigurationTest.java)', 1)]"	"[('([1:/android/net/wifi/cts/WifiConfigurationTest.java]:[VERSION_CODES]:[1]:method_text:[ {            // empty        }    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 2), ('([1:/android/media/cts/AudioManagerTest.java]:[VERSION_CODES]:[1]:method_text:[         return maxRingVol;        } else {            return maxRingVol - 1;        }    }   ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[VERSION_CODES]:[1]:method_text:[ }    @AppModeFull(reason = ""Instant apps cannot have HIGH_SAMPLING_RATE_SENSORS permission."")   ])', 1), ('([2:/android/hardware/cts/SensorParameterRangeTest.java]:[VERSION_CODES]:[2]:method_text:[ }    @AppModeFull(reason = ""Instant apps cannot have HIGH_SAMPLING_RATE_SENSORS permission."")   ])', 1), ('([2:/android/media/cts/MediaCodecTest.java]:[VERSION_CODES]:[2]:method_text:[s are thrown from MediaCodec     * methods when called in incorrect operational states.     */   ])', 1), ('([1:/android/provider/cts/media/MediaStore_AudioTest.java]:[VERSION_CODES]:[1]:method_text:[ public void setUp() throws Exception {        mKeyForBeatles = Audio.keyFor(""beatles"");    }   ])', 1), ('([1:/android/media/cts/NdkMediaCodec.java]:[VERSION_CODES]:[1]:method_text:[ toString() {        return String.format(""%s(%s, %x)"", getClass(), mName, mNdkMediaCodec);    }}])', 1), ('([2:/android/appsecurity/cts/DocumentsTest.java]:[VERSION_CODES]:[2]:method_text:[ch (DeviceNotAvailableException e) {            return true;        }        return true;    }}])', 1), ('([1:/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java]:[VERSION_CODES]:[1]:method_text:[utton().setEnabled(false);                    }                });            }        }    }}])', 1), ('([1:/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java]:[VERSION_CODES]:[1]:method_text:[prefix methods work as expected.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([2:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[VERSION_CODES]:[2]:method_text:[* Tests the {@link android.net.wifi.WifiManager#updateWifiUsabilityScore(int, int, int)}     */   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[VERSION_CODES]:[1]:method_text:[#setWifiScoringEnabled(boolean)}     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([2:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[VERSION_CODES]:[2]:method_text:[r works even after wifi restart.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[VERSION_CODES]:[1]:method_text:[oem paid suggestion connections.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[VERSION_CODES]:[1]:method_text:[ private suggestion connections.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/alarmmanager/cts/BasicApiTests.java]:[VERSION_CODES]:[1]:method_text:[   public void onAlarm() {            onReceive(null, new Intent(mTargetAction));        }    }}])', 1), ('([3:/com/android/compatibility/common/util/MediaUtils.java]:[VERSION_CODES]:[3]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([6:/android/media/cts/DecodeAccuracyTestBase.java]:[VERSION_CODES]:[6]:method_text:[blic static boolean isVideo(String mimeType) {        return mimeType.startsWith(""video"");    }}])', 1), ('([1:/android/mediapc/cts/CodecTestBase.java]:[VERSION_CODES]:[1]:method_text:[    }    @Override    public Double call() throws Exception {        return doEncode();    }}])', 1), ('([1:/com/android/cts/verifier/notifications/ToastVerifierActivity.java]:[VERSION_CODES]:[1]:method_text:[tApplicationContext(), R.string.toast_long_text, Toast.LENGTH_LONG)                .show();    }}])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[VERSION_CODES]:[1]:method_text:[public void setUp() {        assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.R);    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[VERSION_CODES]:[1]:method_text:[aParser.getLogSessionId()).isSameInstanceAs(logSessionId);        mediaParser.release();    }   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[VERSION_CODES]:[1]:method_text:[neAndVerify(source, outputFilePath, 1, 180, MediaMuxer.OutputFormat.MUXER_OUTPUT_MPEG_4);    }   ])', 1), ('([1:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[android.os.Build.VERSION]:[1]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 1), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[VERSION_CODES]:[2]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 1), ('([1:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[VERSION_CODES]:[1]:method_text:[InterruptedException ex) {                // pass            }        }        return n;    }}])', 1), ('([1:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[VERSION_CODES]:[1]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_MetadataKeysTest.java]:[VERSION_CODES]:[1]:method_text:[ce.class.getName();    private Context mContext = InstrumentationRegistry.getTargetContext();   ])', 1), ('([2:/com/android/cts/verifier/camera/its/ItsService.java]:[VERSION_CODES]:[2]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([1:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[android.os.Build.VERSION]:[1]:method_text:[L_OUTPUT_FILTER = (output) -> false;    private static final String COMMAND = ""pm list users"";   ])', 1), ('([1:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[VERSION_CODES]:[1]:method_text:[ss,                () -> ShellCommand.builder(INVALID_COMMAND_LEGACY_OUTPUT).execute());    }   ])', 1), ('([2:/test/java/com/android/bedstead/nene/utils/ShellCommandTest.java]:[VERSION_CODES]:[2]:method_text:[ACY_OUTPUT).execute())                .contains(INVALID_COMMAND_EXPECTED_LEGACY_OUTPUT);    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[VERSION_CODES]:[1]:method_text:[ideo.Media.getContentUri(mVolumeName);        mValues.clear();        mExtras.clear();    }   ])', 1), ('([1:/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent3EmulatorActivity.java]:[VERSION_CODES]:[1]:method_text:[utton().setEnabled(false);                    }                });            }        }    }}])', 1), ('([1:/android/media/cts/SoundPoolTest.java]:[VERSION_CODES]:[1]:method_text:[p(waitMsec * 10);        mSoundPool.stop(streamID);        mSoundPool.unload(sampleID);    }   ])', 1), ('([1:/android/media/cts/SoundPoolTest.java]:[VERSION_CODES]:[1]:method_text:[ by themselves; no way to check        mSoundPool.release();        mSoundPool = null;    }   ])', 1), ('([1:/android/media/cts/SoundPoolTest.java]:[VERSION_CODES]:[1]:method_text:[soundIds) {            mSoundPool.unload(sound);        }        mSoundPool.release();    }   ])', 1), ('([1:/main/java/com/android/bedstead/nene/utils/ShellCommandUtils.java]:[android.os.Build.VERSION]:[1]:method_text:[utomation() {        return InstrumentationRegistry.getInstrumentation().getUiAutomation();    }}])', 1), ('([1:/main/java/com/android/bedstead/nene/utils/ShellCommandUtils.java]:[VERSION_CODES]:[1]:method_text:[utomation() {        return InstrumentationRegistry.getInstrumentation().getUiAutomation();    }}])', 1), ('([1:/android/leanbackjank/app/Utils.java]:[VERSION_CODES]:[1]:method_text:[   return Long.parseLong(mmr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION));    }}])', 1), ('([1:/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java]:[VERSION_CODES]:[1]:method_text:[     unregisterReceiver(mUsbDevicePermissionReceiver);        }        super.onDestroy();    }}])', 1), ('([2:/com/android/compatibility/common/deviceinfo/MediaDeviceInfo.java]:[VERSION_CODES]:[2]:method_text:[);            store.endGroup();        }        store.endArray(); // media_codec_profile    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[VERSION_CODES]:[1]:method_text:[l() {        return mContext.getApplicationContext().getApplicationInfo().targetSdkVersion;    }}])', 1), ('([3:/com/android/cts/verifier/wifiaware/testcase/DataPathOutOfBandTestCase.java]:[android.os.Build.VERSION]:[3]:method_text:[estMsgReceived(mContext.getString(R.string.aware_status_lifecycle_ok));        return true;    }}])', 1), ('([2:/com/android/cts/verifier/wifiaware/testcase/DataPathOutOfBandTestCase.java]:[VERSION_CODES]:[2]:method_text:[estMsgReceived(mContext.getString(R.string.aware_status_lifecycle_ok));        return true;    }}])', 1), ('([1:/main/java/com/android/bedstead/nene/devicepolicy/DevicePolicy.java]:[android.os.Build.VERSION]:[1]:method_text:[stemService(DevicePolicyManager.class)                    .getPolicyExemptApps();        }    }}])', 1), ('([1:/main/java/com/android/bedstead/nene/devicepolicy/DevicePolicy.java]:[VERSION_CODES]:[1]:method_text:[stemService(DevicePolicyManager.class)                    .getPolicyExemptApps();        }    }}])', 1), ('([1:/com.android.cts.deviceadmin/DeviceAdminTest.java]:[VERSION_CODES]:[1]:method_text:[             Build.VERSION_CODES.CUR_DEVELOPMENT == pi.applicationInfo.targetSdkVersion);    }   ])', 1), ('([2:/android/hardware/camera2/cts/CameraTestUtils.java]:[VERSION_CODES]:[2]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([4:/android/app/cts/BroadcastOptionsTest.java]:[VERSION_CODES]:[4]:method_text:[undle(bo);        assertEquals(Build.VERSION_CODES.P, bo.getMaxManifestReceiverApiLevel());    }}])', 1), ('([1:/android/app/role/cts/RoleManagerTest.java]:[VERSION_CODES]:[1]:method_text:[PP_PACKAGE_NAME);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S, codeName = ""S"")   ])', 1), ('([1:/android/app/role/cts/RoleManagerTest.java]:[VERSION_CODES]:[1]:method_text:[ification(true));    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S, codeName = ""S"")   ])', 1), ('([1:/main/java/com/android/bedstead/nene/users/Users.java]:[android.os.Build.VERSION]:[1]:method_text:[       ""Timed out waiting for user state, current state "" + user, e            );        }    }}])', 1), ('([3:/main/java/com/android/bedstead/nene/users/Users.java]:[VERSION_CODES]:[3]:method_text:[       ""Timed out waiting for user state, current state "" + user, e            );        }    }}])', 1), ('([1:/android/net/wifi/cts/WifiConfigurationTest.java]:[VERSION_CODES]:[1]:method_text:[tring());            }        }    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiConfigurationTest.java]:[VERSION_CODES]:[1]:method_text:[RT, configuration.getAuthType());    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1)]"	""	""	"[('VERSION_CODES', 52), ('android.os.Build.VERSION', 6)]"	"[('[main.java.com.android.bedstead.nene.utils.ShellCommandUtils TestApis None]', 2), ('[com.android.cts.verifier.wifiaware.testcase.DataPathOutOfBandTestCase executeTest None]', 2), ('[main.java.com.android.bedstead.nene.devicepolicy.DevicePolicy permissions None]', 2), ('[main.java.com.android.bedstead.nene.users.Users isEmpty None]', 2), ('[android.media.cts.AudioManagerTest testGetAudioHwSyncForSession CtsMediaTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testAccelerometerRange CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testGyroscopeRange CtsSensorTestCases]', 1), ('[android.media.cts.NdkMediaCodec AMediaCodecCreatePersistentInputSurface None]', 1), ('[android.appsecurity.cts.DocumentsTest testAfterMoveDocumentInStorage_revokeUriPermission CtsAppSecurityHostTestCases]', 1), ('[com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.net.wifi.passpoint.cts.PasspointConfigurationTest testUniqueIdDifferentCertCredential CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testWifiUsabilityStatsEntry CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testUpdateWifiUsabilityScore CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testConnectedNetworkScorerWithSessionId CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerForSpecifierConnection CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerForOemPaidSuggestionConnection CtsWifiTestCases]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetAlarmClock CtsAlarmManagerTestCases]', 1), ('[com.android.compatibility.common.util.MediaUtils getTestName None]', 1), ('[android.media.cts.DecodeAccuracyTestBase isAbrEnabled CtsMediaTestCases]', 1), ('[android.mediapc.cts.CodecTestBase isEmpty CtsMediaPerformanceClassTestCases]', 1), ('[com.android.cts.verifier.notifications.ToastVerifierActivity setPassFailButtonClickListeners None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testLogSessionId CtsMediaParserTestCases]', 1), ('[android.media.cts.MediaMuxerTest SKIP_testVideoAudio CtsMediaTestCases]', 1), ('[android.app.notification.legacy20.cts.LegacyNotificationManager20Test testNotificationListener_cancelNotifications CtsLegacyNotification20TestCases]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[com.android.cts.verifier.nfc.offhost.UiccTransactionEvent3EmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.leanbackjank.app.Utils getDefaultDisplay None]', 1), ('[com.android.cts.verifier.usb.device.UsbDeviceTestActivity getAccessoryList None]', 1), ('[com.android.compatibility.common.deviceinfo.MediaDeviceInfo isEncoder None]', 1), ('[com.android.cts.deviceandprofileowner.ResetPasswordTest testResetPasswordDeprecated None]', 1), ('[com.android.cts.deviceadmin.DeviceAdminTest testTargetApiLevel None]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[android.app.cts.BroadcastOptionsTest testMaxManifestReceiverApiLevel CtsAppTestCases]', 1), ('[android.app.role.cts.RoleManagerTest cannotBypassRoleQualificationWithoutPermission CtsRoleTestCases]', 1), ('[android.net.wifi.cts.WifiConfigurationTest testWifiConfiguration CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiConfigurationTest testGetAuthType CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiConfigurationTest testGetAuthTypeFailurePsk8021X CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiConfigurationTest testGetAuthTypeFailure8021xEapSae CtsWifiTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-5"	"5.1/H-1-5"	"05010000.720105"	"""[5.1/H-1-5] MUST advertise the maximum number of hardware video encoder and decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods.  | [5.1/H-1-5] MUST advertise the maximum number of hardware video encoder and decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. """	""	""	"CodecCapabilities.getMaxSupportedInstances getSupportedPerformancePoints() VideoCapabilities.getSupportedPerformancePoints getMaxSupportedInstances()"	""	""	""	""	"[('android.mediapc.cts.MultiDecoderPairPerfTest', 4), ('android.mediapc.cts.MultiEncoderPairPerfTest', 4), ('android.mediapc.cts.MultiDecoderPerfTest', 4), ('android.mediapc.cts.MultiTranscoderPerfTest', 4), ('android.mediapc.cts.MultiEncoderPerfTest', 4), ('android.mediapc.cts.MultiCodecPerfTestBase', 2), ('com.android.compatibility.common.util.MediaUtils', 1), ('android.media.cts.EncoderTest', 1), ('android.media.cts.MediaCodecListTest', 1), ('android.video.cts.CodecPerformanceTestBase', 1), ('android.media.cts.MediaCodecCapabilitiesTest', 1), ('android.media.cts.DecoderTest', 1)]"	"[('getSimpleName', 23), ('getMaxSupportedInstances', 20), ('getSupportedPerformancePoints', 20), ('inputParams', 20), ('size', 16), ('release', 2), ('getMediaDirString', 1), ('prologue', 1), ('MediaExtractor', 1), ('getTrackCount', 1), ('getCodecInfos', 1)]"	"[('CtsMediaPerformanceClassTestCases', 22), ('CtsMediaTestCases', 4), ('CtsVideoTestCases', 1)]"	""	"android.mediapc.cts.MultiCodecPerfTestBase"	"getSimpleName"	"CtsMediaPerformanceClassTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiTranscoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiCodecPerfTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/MediaUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecPerformanceTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecCapabilitiesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTest.java', 1)]"	"[('(1,getSupportedPerformancePoints(),/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/EncoderTest.java)', 1), ('(2,getSupportedPerformancePoints(),/android/media/cts/MediaCodecListTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/video/cts/CodecPerformanceTestBase.java)', 1), ('(2,getMaxSupportedInstances(),/android/media/cts/MediaCodecCapabilitiesTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/DecoderTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1)]"	"[('([1:/com/android/compatibility/common/util/MediaUtils.java]:[getSupportedPerformancePoints()]:[1]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([1:/android/media/cts/EncoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[            muxer.stop();            muxer.release();            muxer = null;        }    }}])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[getSupportedPerformancePoints()]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/video/cts/CodecPerformanceTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[SawDecOutputEOS = true;        }        mDecoder.releaseOutputBuffer(bufferIndex, render);    }}])', 1), ('([2:/android/media/cts/MediaCodecCapabilitiesTest.java]:[getMaxSupportedInstances()]:[2]:method_text:[/media_codecs.xml: \\n"";           fail(failMessage + xmlOverrides.toString());        }    }   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/media/cts/DecoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[       continue;            }            return true;        }        return false;    }   ])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getMaxSupportedInstances()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1)]"	""	""	"[('getSupportedPerformancePoints()', 9), ('getMaxSupportedInstances()', 9), ('CodecCapabilities.getMaxSupportedInstances', 5), ('VideoCapabilities.getSupportedPerformancePoints', 5)]"	"[('[android.mediapc.cts.MultiCodecPerfTestBase isSPerfClass CtsMediaPerformanceClassTestCases]', 2), ('[com.android.compatibility.common.util.MediaUtils getTestName None]', 1), ('[android.media.cts.EncoderTest testAACEncoders CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 1), ('[android.video.cts.CodecPerformanceTestBase isEncoder CtsVideoTestCases]', 1), ('[android.media.cts.MediaCodecCapabilitiesTest testGetMaxSupportedInstances CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTest testTunneledAudioTimestampProgressVp9 CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"C-3-1"	"9.8/C-3-1"	"09080000.670301"	"""[9.8/C-3-1], when a successful hotword result is transmitted to the voice interaction service or similar entity. [9.8/H-SR] Are STRONGLY RECOMMENDED to notify users before setting an application as the provider of the hotword detection service. [9.8/H-SR] Are STRONGLY RECOMMENDED to disallow the transmission of unstructured data out of the hotword detection service. If device implementations include an application that uses the System API HotwordDetectionService, or similar mechanism for hotword detection without mic usage indication, the application: """	""	""	"RECOMMENDED"	""	""	""	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 3), ('android.widget.cts.ToastTest', 2), ('android.view.cts.ViewConfigurationTest', 1), ('android.os.cts.HwBinderTest', 1), ('android.media.cts.CamcorderProfileTest', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('android.widget.cts29.ToastTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1), ('main.java.com.android.bedstead.nene.permissions.Permissions', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.hardware.cts.helpers.SensorCtsHelper', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestGrandparent', 1), ('android.media.cts.AudioHelper', 1), ('com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('main.java.com.android.activitycontext.ActivityContext', 1), ('android.view.accessibility.cts.AccessibilityManagerTest', 1), ('com.android.cts.verifier.audio.AudioTap2ToneActivity', 1), ('android.media.cts.AudioTrackTest', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestParent', 1), ('com.android.compatibility.common.util.UiccUtil', 1), ('android.server.wm.ActivityManagerTestBase', 1), ('com.android.cts.deviceowner.proxy.BaseProxyTest', 1), ('android.video.cts.CodecEncoderPerformanceTest', 1), ('main.java.com.android.bedstead.nene.permissions.PermissionContext', 1)]"	"[('getMediaType', 14), ('size', 8), ('getChannelCount', 8), ('doubleValue', 7), ('Builder', 7), ('getAudioFormat', 7), ('getInstrumentation', 5), ('build', 5), ('getPackageName', 5), ('getCodec', 4), ('setUp', 4), ('getProfile', 3), ('getContext', 3), ('getName', 2), ('getBitrate', 2), ('getWidth', 2), ('getHeight', 2), ('getSampleRate', 2), ('getIntent', 2), ('printStackTrace', 2), ('getSimpleName', 2), ('get', 2), ('makeSomething', 2), ('join', 2), ('getStdJitterMs', 2), ('getStartTimeNs', 2), ('duplicate', 2), ('startRecording', 2), ('stop', 2), ('onResume', 2), ('close', 2), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getAudioProfiles', 1), ('getChannels', 1), ('hasProfile', 1), ('getReceiverComponentName', 1), ('myUserId', 1), ('getLayoutInflater', 1), ('SensorCtsHelper', 1), ('getSensor', 1), ('getRequestedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('StringBuilder', 1), ('toString', 1), ('grandparentBeforeClass', 1), ('shadowedGrandparentBeforeClass', 1), ('shadowedGrandparentWithoutBeforeClass', 1), ('getEncoding', 1), ('getAvg', 1), ('getAvgAbs', 1), ('getMaxAbs', 1), ('notify', 1), ('wait', 1), ('make', 1), ('Thread', 1), ('run', 1), ('prepare', 1), ('myLooper', 1), ('loop', 1), ('start', 1), ('quit', 1), ('getJitterCount', 1), ('getMeanJitterMs', 1), ('getMaxAbsJitterMs', 1), ('nanoTime', 1), ('abs', 1), ('getState', 1), ('play', 1), ('getPlaybackHeadPosition', 1), ('NullPointerException', 1), ('getTargetContext', 1), ('Intent', 1), ('await', 1), ('countDown', 1), ('parentBeforeClass', 1), ('ObjectTracker', 1), ('input', 1), ('getMimesOfAvailableHardwareVideoEncoders', 1)]"	"[('CtsCameraTestCases', 4), ('CtsWidgetTestCases', 3), ('CtsMediaTestCases', 2), ('CtsViewTestCases', 1), ('CtsAdminTestCases', 1), ('CtsSensorTestCases', 1), ('CtsAccessibilityTestCases', 1), ('CtsVideoTestCases', 1)]"	""	"main.java.com.android.bedstead.nene.permissions.PermissionContext"	"close"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/Permissions.java', 1), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelper.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/AudioHelper.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/activitycontext/src/main/java/com/android/activitycontext/ActivityContext.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioTap2ToneActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/UiccUtil.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/ActivityManagerTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/proxy/BaseProxyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecEncoderPerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/PermissionContext.java', 1)]"	"[('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 1), ('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 1), ('(1,RECOMMENDED,/android/media/cts/CamcorderProfileTest.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(21,RECOMMENDED,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 1), ('(4,RECOMMENDED,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(2,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/Permissions.java)', 1), ('(3,RECOMMENDED,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java)', 1), ('(2,RECOMMENDED,/android/media/cts/AudioHelper.java)', 1), ('(1,RECOMMENDED,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(1,RECOMMENDED,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/activitycontext/ActivityContext.java)', 1), ('(18,RECOMMENDED,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/audio/AudioTap2ToneActivity.java)', 1), ('(1,RECOMMENDED,/android/media/cts/AudioTrackTest.java)', 1), ('(7,RECOMMENDED,/android/widget/cts/ToastTest.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java)', 1), ('(1,RECOMMENDED,/com/android/compatibility/common/util/UiccUtil.java)', 1), ('(1,RECOMMENDED,/android/server/wm/ActivityManagerTestBase.java)', 1), ('(1,RECOMMENDED,/com/android/cts/deviceowner/proxy/BaseProxyTest.java)', 1), ('(1,RECOMMENDED,/android/video/cts/CodecEncoderPerformanceTest.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/PermissionContext.java)', 1)]"	"[('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([1:/android/media/cts/CamcorderProfileTest.java]:[RECOMMENDED]:[1]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([3:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[RECOMMENDED]:[3]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([21:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[RECOMMENDED]:[21]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([4:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[RECOMMENDED]:[4]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([2:/main/java/com/android/bedstead/nene/permissions/Permissions.java]:[RECOMMENDED]:[2]:method_text:[ExistingPermissions.toArray(new String[0]));        }        mExistingPermissions = null;    }}])', 1), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[RECOMMENDED]:[3]:method_text:[h (SecurityException e) {            assertDeviceOwnerMessage(e.getMessage());        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 1), ('([1:/android/hardware/cts/helpers/SensorCtsHelper.java]:[RECOMMENDED]:[1]:method_text:[;        SystemUtil.runShellCommand(InstrumentationRegistry.getInstrumentation(), command);    }}])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java]:[RECOMMENDED]:[1]:method_text:[andparentWithoutBeforeClass() {        sShadowedGrandparentWithoutBeforeClassHasRun = true;    }}])', 1), ('([2:/android/media/cts/AudioHelper.java]:[RECOMMENDED]:[2]:method_text:[  private final static String TAG = ""AudioRecordAuditNative"";        private int mPosition;    }}])', 1), ('([1:/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java]:[RECOMMENDED]:[1]:method_text:[erToContinue();        } finally {            magnetometer.unregisterListener();        }    }}])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[RECOMMENDED]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([1:/main/java/com/android/activitycontext/ActivityContext.java]:[RECOMMENDED]:[1]:method_text:[hrowValue = e;                }                sLatch.countDown();            }        }    }}])', 1), ('([18:/android/view/accessibility/cts/AccessibilityManagerTest.java]:[RECOMMENDED]:[18]:method_text:[;        } catch (IOException e) {            fail(""Fail to run shell command"");        }    }}])', 1), ('([3:/com/android/cts/verifier/audio/AudioTap2ToneActivity.java]:[RECOMMENDED]:[3]:method_text:[read(mAnalysisTask).start(); // run asynchronously with audio thread            }        }    }}])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[RECOMMENDED]:[1]:method_text:[wn when setBufferSizeInBytes""                  + "" is excluded from builder"");        }    }   ])', 1), ('([1:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[1]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);        }    }   ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java]:[RECOMMENDED]:[1]:method_text:[ssertThat(sGrandparentBeforeClassHasRun).isTrue();        sParentBeforeClassHasRun = true;    }}])', 1), ('([1:/com/android/compatibility/common/util/UiccUtil.java]:[RECOMMENDED]:[1]:method_text:[tUp} method if an entire class requires a particular     * UICC, or at the top of a specific {@code])', 1), ('([1:/android/server/wm/ActivityManagerTestBase.java]:[RECOMMENDED]:[1]:method_text:[ public static class ConfigChangeHandlingActivity extends CommandSession.BasicTestActivity {    }}])', 1), ('([1:/com/android/cts/deviceowner/proxy/BaseProxyTest.java]:[RECOMMENDED]:[1]:method_text:[ore.tryAcquire(10, TimeUnit.SECONDS)) {        return true;      }      return false;    }  }}])', 1), ('([1:/android/video/cts/CodecEncoderPerformanceTest.java]:[RECOMMENDED]:[1]:method_text:[  /**     * Validates performance of hardware accelerated video encoders     */    @LargeTest   ])', 1), ('([1:/main/java/com/android/bedstead/nene/permissions/PermissionContext.java]:[RECOMMENDED]:[1]:method_text:[ock */public interface PermissionContext extends AutoCloseable {    @Override    void close();}])', 1)]"	""	""	"[('RECOMMENDED', 29)]"	"[('[android.view.cts.ViewConfigurationTest testInstanceValues CtsViewTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[main.java.com.android.bedstead.nene.permissions.Permissions TestApis None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRecommendedGlobalProxy_failIfNotDeviceOwner CtsAdminTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations CtsCameraTestCases]', 1), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 1), ('[android.media.cts.AudioHelper currentTimeMillis None]', 1), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 1), ('[android.view.accessibility.cts.AccessibilityManagerTest testGetRecommendedTimeoutMillis CtsAccessibilityTestCases]', 1), ('[com.android.cts.verifier.audio.AudioTap2ToneActivity OnTouchListener None]', 1), ('[android.media.cts.AudioTrackTest testAc3BuilderNoBufferSize CtsMediaTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[test.java.com.android.bedstead.harrier.DeviceStateTestParent isFalse None]', 1), ('[android.server.wm.ActivityManagerTestBase PostAssertionRule None]', 1), ('[com.android.cts.deviceowner.proxy.BaseProxyTest registerAndWaitForStickyBroadcast None]', 1)]"	""	""	""	""	""	""	""	""	""
"3.1  . Contacts"	"3.1"	"C-1-3"	"3.1/C-1-3"	"03010000.670103"	"""C-1-3] MUST display all the user-added tiles from third-party apps alongside the system-provided quick setting tiles. <h3 id=""314_media_ui""  | C-1-3] MUST show the third-party application icon whenever displaying content provided by this third-party application. | C-1-3] MUST provide user affordances for the user to select/confirm a companion device is present and operational. <h3 id=""317_heavyweight_apps""  | C-1-3] MUST NOT apply other changes in policy to apps that specify cantSaveState, such as changing CPU performance or changing scheduling prioritization. If device implementations don&#39;t declare the feature FEATURE_CANT_SAVE_STATE, then they: | C-1-3] Raw contacts that are inserted by third party applications with the default local account (i.e. by setting null values for ACCOUNT_NAME and ACCOUNT_TYPE) MUST be inserted to the custom local account."""	""	""	"FEATURE_CANT_SAVE_STATE ACCOUNT_NAME ACCOUNT_TYPE CPU"	""	""	""	""	"[('android.accounts.cts.AccountManagerTest', 49), ('android.graphics.cts.VulkanFeaturesTest', 4), ('android.os.cts.TaggedPointerTest', 2), ('android.security.cts.ProcessMustUseSeccompTest', 2), ('com.android.cts.accountmanager.MockAuthenticator', 2), ('android.jdwptunnel.cts.JdwpTunnelTest', 1), ('android.security.cts.CVE_2018_9584', 1), ('android.os.cts.ProcessTest', 1), ('android.media.cts.MediaCodecTest', 1), ('android.security.cts.CVE_2017_0726', 1), ('android.security.cts.CVE_2020_0038', 1), ('android.jvmti.cts.JvmtiAttachingHostTest', 1), ('android.security.cts.PocPusher', 1), ('android.extractnativelibs.cts.CtsExtractNativeLibsHostTestBase', 1), ('android.os.cts.SeccompTest', 1), ('android.security.cts.CVE_2019_2019', 1), ('android.security.cts.CVE_2019_2021', 1)]"	"[('Bundle', 6), ('setUp', 5), ('getDevice', 5), ('bothBitness', 2), ('tearDown', 2), ('getApplicationContext', 2), ('getIBinder', 2), ('HashSet', 1), ('iterator', 1), ('hasNext', 1), ('next', 1), ('remove', 1), ('only32', 1), ('only64', 1), ('getBitness', 1), ('trim', 1), ('toString', 1), ('cleanUp', 1), ('getSimpleName', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getSystemAvailableFeatures', 1), ('nativeGetVkJSON', 1), ('getBestDevice', 1)]"	"[('CtsAccountManagerTestCases', 49), ('CtsSecurityBulletinHostTestCases', 6), ('CtsGraphicsTestCases', 4), ('CtsSecurityHostTestCases', 2), ('CtsJdwpTunnelHostTestCases', 1), ('CtsMediaTestCases', 1), ('CtsJvmtiAttachingHostTestCases', 1), ('CtsExtractNativeLibsHostTestCases', 1)]"	""	"android.accounts.cts.AccountManagerTest"	"Bundle"	"CtsAccountManagerTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/accounts/src/android/accounts/cts/AccountManagerTest.java', 49), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/TaggedPointerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/ProcessMustUseSeccompTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/test-apps/AccountManagerCrossUserApp/src/com/android/cts/accountmanager/MockAuthenticator.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2018_9584.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/ProcessTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2017_0726.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2020_0038.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/attaching/host/src/android/jvmti/cts/JvmtiAttachingHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/PocPusher.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/extractnativelibs/src/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/SeccompTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2019_2019.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2019_2021.java', 1)]"	"[('(1,CPU,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(1,CPU,/android/security/cts/CVE_2018_9584.java)', 1), ('(1,CPU,/android/os/cts/ProcessTest.java)', 1), ('(2,CPU,/android/media/cts/MediaCodecTest.java)', 1), ('(1,CPU,/android/security/cts/CVE_2017_0726.java)', 1), ('(1,CPU,/android/security/cts/CVE_2020_0038.java)', 1), ('(1,CPU,/android/jvmti/cts/JvmtiAttachingHostTest.java)', 1), ('(9,CPU,/android/security/cts/PocPusher.java)', 1), ('(2,CPU,/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestBase.java)', 1), ('(6,CPU,/android/os/cts/SeccompTest.java)', 1), ('(7,CPU,/android/os/cts/TaggedPointerTest.java)', 1), ('(2,CPU,/android/security/cts/ProcessMustUseSeccompTest.java)', 1), ('(1,CPU,/android/security/cts/CVE_2019_2019.java)', 1), ('(5,ACCOUNT_NAME,/com/android/cts/accountmanager/MockAuthenticator.java)', 1), ('(5,ACCOUNT_TYPE,/com/android/cts/accountmanager/MockAuthenticator.java)', 1), ('(5,CPU,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(1,CPU,/android/security/cts/CVE_2019_2021.java)', 1), ('(30,ACCOUNT_NAME,/android/accounts/cts/AccountManagerTest.java)', 1), ('(112,ACCOUNT_TYPE,/android/accounts/cts/AccountManagerTest.java)', 1)]"	"[('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[1]:method_text:[ Or separate the authenticator and test app to allow the instant app mode test.    @AppModeFull   ])', 3), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_NAME]:[1]:method_text:[status token should be included in     * the result as session bundle is not inspected.     */   ])', 2), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_NAME]:[1]:method_text:[ Or separate the authenticator and test app to allow the instant app mode test.    @AppModeFull   ])', 2), ('([2:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[2]:method_text:[ Or separate the authenticator and test app to allow the instant app mode test.    @AppModeFull   ])', 2), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[CPU]:[1]:method_text:[ould race with the JDWP handshake. This could     * confuse clients. See bug: 178655046     */   ])', 1), ('([1:/android/security/cts/CVE_2018_9584.java]:[CPU]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2018-9584"", null, getDevice());    }}])', 1), ('([1:/android/os/cts/ProcessTest.java]:[CPU]:[1]:method_text:[ndSignal}.     * Test sendSignal(int) point.     * Send a signal to the given process.     */   ])', 1), ('([2:/android/media/cts/MediaCodecTest.java]:[CPU]:[2]:method_text:[ createInputSurface() with a non-Surface color format is not required to throw exception     */   ])', 1), ('([1:/android/security/cts/CVE_2017_0726.java]:[CPU]:[1]:method_text:[             AdbUtils.TMP_PATH + inputFiles[0], inputFiles, AdbUtils.TMP_PATH, getDevice());    }}])', 1), ('([1:/android/security/cts/CVE_2020_0038.java]:[CPU]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2020-0038"", null, getDevice());    }}])', 1), ('([1:/android/jvmti/cts/JvmtiAttachingHostTest.java]:[CPU]:[1]:method_text:[   CLog.e(""Failed cleaning up library on device"");                }            }        }    }}])', 1), ('([9:/android/security/cts/PocPusher.java]:[CPU]:[9]:method_text:[e, remoteFile);        if (cleanup) {            filesToCleanup.add(remoteFile);        }    }}])', 1), ('([2:/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestBase.java]:[CPU]:[2]:method_text:[IG_SUFFIX);        return installPackageIncrementalFromFiles(apkFile, v4SignatureFile, """");    }}])', 1), ('([6:/android/os/cts/SeccompTest.java]:[CPU]:[6]:method_text:[ &&               !(primaryAbi.equals(""armeabi-v7a"") || primaryAbi.equals(""arm64-v8a""));    }   ])', 1), ('([1:/android/os/cts/TaggedPointerTest.java]:[CPU]:[1]:method_text:[ase {    @Override    protected void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([6:/android/os/cts/TaggedPointerTest.java]:[CPU]:[6]:method_text:[   assertTrue(""Machine does not support tagged pointers"", TaggedPointer.hasTaggedPointer());    }}])', 1), ('([1:/android/security/cts/ProcessMustUseSeccompTest.java]:[CPU]:[1]:method_text:[+ Pid + ""/status file should be set to \\""2\\"""",                   pidHasSeccompBpf(Pid));    }   ])', 1), ('([1:/android/security/cts/ProcessMustUseSeccompTest.java]:[CPU]:[1]:method_text:[e.configstore"", PS_CMD, true,                    false /* mustHaveProcess */);        }    }   ])', 1), ('([1:/android/security/cts/CVE_2019_2019.java]:[CPU]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2019-2019"", null, getDevice());    }}])', 1), ('([5:/com/android/cts/accountmanager/MockAuthenticator.java]:[ACCOUNT_NAME]:[5]:method_text:[t.putBoolean(AccountManager.KEY_BOOLEAN_RESULT, true);            return result;        }    }}])', 1), ('([5:/com/android/cts/accountmanager/MockAuthenticator.java]:[ACCOUNT_TYPE]:[5]:method_text:[t.putBoolean(AccountManager.KEY_BOOLEAN_RESULT, true);            return result;        }    }}])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CPU]:[1]:method_text:[;        mBestDevice = getBestDevice();    }    @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CPU]:[1]:method_text:[l, mVulkanHardwareCompute.version);        }    }    @CddTest(requirement = ""7.1.4.2/C-3-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CPU]:[1]:method_text:[atures"", 0x3 /* importable + exportable */));    }    @CddTest(requirement = ""7.1.4.2/C-1-7"")   ])', 1), ('([2:/android/graphics/cts/VulkanFeaturesTest.java]:[CPU]:[2]:method_text:[ {            devices[i] = devicesArray.getJSONObject(i);        }        return devices;    }}])', 1), ('([1:/android/security/cts/CVE_2019_2021.java]:[CPU]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2019-2021"", null, getDevice());    }}])', 1), ('([14:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_NAME]:[14]:method_text:[eak;            }        }        return result;    }    /**     * Test singleton     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_NAME]:[1]:method_text:[ /**     * Test successful blockingGetAuthToken() with customTokens=true authenticator.     */   ])', 1), ('([4:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_NAME]:[4]:method_text:[countSession(...). A bundle containing account name and account     * type is expected.     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_NAME]:[1]:method_text:[ted when     * AccountManager.ERROR_CODE_INVALID_RESPONSE is returned by authenticator.     */   ])', 1), ('([2:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_NAME]:[2]:method_text:[ should be returned via the callback regardless of     * whether a handler is provided.     */   ])', 1), ('([4:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_NAME]:[4]:method_text:[s a basic isCredentialsUpdateSuggested() which returns a bundle containing boolean true.     */   ])', 1), ('([23:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[23]:method_text:[eak;            }        }        return result;    }    /**     * Test singleton     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[1]:method_text:[nResult(resultBundle);    }    /**     * Test addAccount() with callback and handler     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[1]:method_text:[    @AppModeFull(reason = ""The methods are for sign-up wizards associated with authenticators."")   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[1]:method_text:[ @AppModeFull(reason = ""The methods requires the caller to match signature with authenticator."")   ])', 1), ('([9:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[9]:method_text:[ @AppModeFull(reason = ""The methods requires the caller to match signature with authenticator."")   ])', 1), ('([6:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[6]:method_text:[kage(null, PACKAGE_NAME_1));    }    /**     * Test setUserData() and getUserData().     */   ])', 1), ('([2:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[2]:method_text:[    assertEquals(0, accounts.length);    }    /**     * Test getAuthenticatorTypes()     */   ])', 1), ('([2:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[2]:method_text:[ator type: "" + ACCOUNT_TYPE);    }    /**     * Test setPassword() and getPassword()     */   ])', 1), ('([2:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[2]:method_text:[th);    }    /**     * Test getAccountsByTypeAndFeatures() with callback and handler     */   ])', 1), ('([2:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[2]:method_text:[ptedException"");        }    }    /**     * Test setAuthToken() and peekAuthToken()     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[1]:method_text:[/**     * Test successful blockingGetAuthToken() with customTokens=false authenticator.     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[1]:method_text:[ /**     * Test successful blockingGetAuthToken() with customTokens=true authenticator.     */   ])', 1), ('([2:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[2]:method_text:[getAccountType());    }    /**     * Test editProperties() with callback and handler     */   ])', 1), ('([2:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[2]:method_text:[tion"");        }    }    /**     * Test addOnAccountsUpdatedListener() with handler     */   ])', 1), ('([4:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[4]:method_text:[ner(listener);    }    /**     * Test removeOnAccountsUpdatedListener() with handler     */   ])', 1), ('([3:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[3]:method_text:[count);    }    /**     * Tests that AccountManagerService is properly caching data.     */   ])', 1), ('([5:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[5]:method_text:[ a bundle containing     * encrypted session bundle, account password and status token.     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[1]:method_text:[status token should be included in the result as session     * bundle is not inspected.     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[1]:method_text:[status token should be included in     * the result as session bundle is not inspected.     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[1]:method_text:[thenticator return     * {@link AccountManager#ERROR_CODE_INVALID_RESPONSE} error code.     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[1]:method_text:[k should be triggered with the result regardless of a     * handler is provided or not.     */   ])', 1), ('([4:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[4]:method_text:[ a bundle containing     * encrypted session bundle, account password and status token.     */   ])', 1), ('([2:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[2]:method_text:[tialsSession(...). A bundle containing account name and account     * type is expected.     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[1]:method_text:[on bundle. IllegalArgumentException     * is expected as session bundle cannot be null.     */   ])', 1), ('([3:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[3]:method_text:[rSerivce will always add account type to the session bundle     * before encrypting it.     */   ])', 1), ('([2:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[2]:method_text:[ce     * will always overrides account type to the session bundle before encrypting it.     */   ])', 1), ('([3:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[3]:method_text:[vce will always override account type to the session bundle     * before encrypting it.     */   ])', 1), ('([3:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[3]:method_text:[ted when     * AccountManager.ERROR_CODE_INVALID_RESPONSE is returned by authenticator.     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[1]:method_text:[ should be returned via the callback regardless of     * whether a handler is provided.     */   ])', 1), ('([10:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[10]:method_text:[s a basic isCredentialsUpdateSuggested() which returns a bundle containing boolean true.     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[1]:method_text:[eSuggested() when account is null.     * It should throw IllegalArgumentationException.     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[1]:method_text:[   * authenticator return {@link AccountManager#ERROR_CODE_INVALID_RESPONSE} error code.     */   ])', 1), ('([1:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[1]:method_text:[k should be triggered with the result regardless of a handler is     * provided or not.     */   ])', 1), ('([2:/android/accounts/cts/AccountManagerTest.java]:[ACCOUNT_TYPE]:[2]:method_text:[),                firstPositionForType.get(type) + counterForType.get(type) - 1);        }    }}])', 1)]"	""	""	"[('ACCOUNT_TYPE', 40), ('CPU', 20), ('ACCOUNT_NAME', 11)]"	"[('[com.android.cts.accountmanager.MockAuthenticator getTestAccount None]', 2), ('[android.accounts.cts.AccountManagerTest AccountManagerTest CtsAccountManagerTestCases]', 2), ('[android.accounts.cts.AccountManagerTest testBlockingGetAuthToken_DefaultToken_Success CtsAccountManagerTestCases]', 2), ('[android.accounts.cts.AccountManagerTest testStartAddAccountSessionWithNullSessionBundle CtsAccountManagerTestCases]', 2), ('[android.accounts.cts.AccountManagerTest testStartAddAccountSessionWithEmptySessionBundle CtsAccountManagerTestCases]', 2), ('[android.accounts.cts.AccountManagerTest testFinishSessionWithReturnIntent CtsAccountManagerTestCases]', 2), ('[android.accounts.cts.AccountManagerTest testFinishSessionError CtsAccountManagerTestCases]', 2), ('[android.accounts.cts.AccountManagerTest testFinishSessionErrorWithCallbackAndHandler CtsAccountManagerTestCases]', 2), ('[android.jdwptunnel.cts.JdwpTunnelTest testAttachDebuggerToProfileableApp CtsJdwpTunnelHostTestCases]', 1), ('[android.security.cts.CVE_2018_9584 testPocCVE_2018_9584 CtsSecurityBulletinHostTestCases]', 1), ('[android.os.cts.ProcessTest testKillProcess None]', 1), ('[android.media.cts.MediaCodecTest testException CtsMediaTestCases]', 1), ('[android.security.cts.CVE_2017_0726 testPocCVE_2017_0726 CtsSecurityBulletinHostTestCases]', 1), ('[android.security.cts.CVE_2020_0038 testPocCVE_2020_0038 CtsSecurityBulletinHostTestCases]', 1), ('[android.jvmti.cts.JvmtiAttachingHostTest testJvmtiAgentAppExternal CtsJvmtiAttachingHostTestCases]', 1), ('[android.extractnativelibs.cts.CtsExtractNativeLibsHostTestBase isIncrementalInstallSupported CtsExtractNativeLibsHostTestCases]', 1), ('[android.os.cts.SeccompTest isRunningUnderEmulatedAbi None]', 1), ('[android.os.cts.TaggedPointerTest testHasTaggedPointer None]', 1), ('[android.security.cts.ProcessMustUseSeccompTest isFullTrebleDevice CtsSecurityHostTestCases]', 1), ('[android.security.cts.ProcessMustUseSeccompTest testConfigStoreHalHasSeccompFilter CtsSecurityHostTestCases]', 1), ('[android.security.cts.CVE_2019_2019 testPocCVE_2019_2019 CtsSecurityBulletinHostTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanHardwareFeatures CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkan1_1Requirements CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanBlockedExtensions CtsGraphicsTestCases]', 1), ('[android.security.cts.CVE_2019_2021 testPocCVE_2019_2021 CtsSecurityBulletinHostTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testStartUpdateCredentialsSessionWithNullSessionBundle CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testStartUpdateCredentialsSessionWithEmptySessionBundle CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testStartUpdateCredentialsSessionErrorWithCallbackAndHandler CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testAddAccount CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testAddAccountWithNoAuthenticator CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testAddAccountExplicitlyWithVisibility CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testGetAccountsAndVisibilityForPackage CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testGetAccountsReturnedOrder CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testGetAccountsAndGetAccountsByType CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testGetAuthenticatorTypes CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testGetAccountsByTypeAndFeatures CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testGetAccountsByTypeAndFeaturesWithCallbackAndHandler CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testSetAndPeekAndInvalidateAuthToken CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testConfirmCredentialsAccountNotOnDevice CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testEditProperties CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testEditPropertiesWithCallbackAndHandler CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testAddOnAccountsUpdatedListenerWithVisibility CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testHasFeature CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testGetsAreCached CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testStartAddAccountSession CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testStartAddAccountSessionIntervene CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testStartAddAccountSessionWithReturnIntent CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testStartAddAccountSessionError CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testStartAddAccountSessionErrorWithCallbackAndHandler CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testFinishSessionWithStartAddAccountSession CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testFinishSessionWithStartUpdateCredentialsSession CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testFinishSessionFromStartAddAccountWithoutAccountType CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testFinishSessionFromStartUpdateCredentialsSessionWithoutAccountType CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testFinishSessionFromStartAddAccountAccountTypeOverriden CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testFinishSessionFromStartUpdateCredentialsSessionAccountTypeOverriden CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testFinishSessionIntervene CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testIsCredentialsUpdateSuggested_Success CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testIsCredentialsUpdateSuggestedEmptyToken_IllegalArgumentationException CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testIsCredentialsUpdateSuggested_Error CtsAccountManagerTestCases]', 1), ('[android.accounts.cts.AccountManagerTest testIsCredentialsUpdateSuggestedErrorWithCallbackAndHandler CtsAccountManagerTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.8.1  . Display Cutout"	"3.8.1"	"C-1-3"	"3.8.1/C-1-3"	"03080100.670103"	"""C-1-3] MUST NOT display location modes in the Location menu within Settings. <h4 id=""3813_unicode_and_font""  | C-1-3] MUST NOT remove or modify NotoColorEmoji.tff in the system image. (It is acceptable to add a new emoji font to override emoji in NotoColorEmoji.tff) SHOULD support the skin tone and diverse family emojis as specified in the Unicode Technical Report #51. If device implementations include an IME, they: SHOULD provide an input method to the user for these emoji characters. Android includes support to render Myanmar fonts. Myanmar has several non-Unicode compliant fonts, commonly known as “Zawgyi,” for rendering Myanmar languages. If device implementations include support for Burmese, they: * | C-1-3] MUST NOT offer split-screen or freeform mode if the screen height is less than 440 dp and the screen width is less than 440 dp. | C-1-3] MUST honor the display cutout flags set by the app through the WindowManager.LayoutParams API as described in the SDK."""	""	""	"IME WindowManager.LayoutParams NotoColorEmoji.tff"	""	""	""	""	"[('android.media.cts.SystemMediaRouter2Test', 15), ('android.media.cts.AudioManagerTest', 8), ('android.server.wm.SplashscreenTests', 7), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 4), ('android.widget.cts.SearchView_CursorTest', 4), ('android.media.cts.AudioPlaybackConfigurationTest', 3), ('android.view.cts.ViewAnimationMatrixTest', 2), ('com.android.cts.verifier.p2p.RequesterTestActivity', 2), ('android.graphics.pdf.cts.Utils', 1)]"	"[('getWidth', 12), ('getHeight', 10), ('setUp', 6), ('getInstrumentation', 6), ('getResources', 3), ('recycle', 3), ('getName', 3), ('getPackageName', 3), ('enoughToFilter', 3), ('run', 2), ('getClass', 2), ('tearDown', 2), ('release', 2), ('getTargetContext', 2), ('getSystem', 2), ('toLowerCase', 2), ('RouteCallback', 1), ('getCacheDir', 1), ('flush', 1), ('Matrix', 1), ('width', 1), ('height', 1), ('getMediaDirString', 1), ('stop', 1), ('getContext', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getPackageManager', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('getChildCount', 1), ('getCursor', 1), ('setup', 1), ('getActivity', 1)]"	"[('CtsMediaTestCases', 26), ('CtsWindowManagerDeviceTestCases', 7), ('CtsShortcutManagerTestCases', 4), ('CtsWidgetTestCases', 4), ('CtsViewTestCases', 2), ('CtsPdfTestCases', 1)]"	""	"android.widget.cts.SearchView_CursorTest"	"getActivity"	"CtsWidgetTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SystemMediaRouter2Test.java', 15), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/RequesterTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 1)]"	"[('(55,IME,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(2,IME,/android/graphics/pdf/cts/Utils.java)', 1), ('(9,IME,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(14,IME,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(12,IME,/android/server/wm/SplashscreenTests.java)', 1), ('(1,WindowManager.LayoutParams,/android/server/wm/SplashscreenTests.java)', 1), ('(3,IME,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(16,IME,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(1,WindowManager.LayoutParams,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(39,IME,/android/media/cts/AudioManagerTest.java)', 1), ('(12,IME,/android/widget/cts/SearchView_CursorTest.java)', 1)]"	"[('([3:/android/media/cts/SystemMediaRouter2Test.java]:[IME]:[3]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 3), ('([3:/android/media/cts/SystemMediaRouter2Test.java]:[IME]:[3]:method_text:[callbacks        clearCallbacks();        mUiAutomation.dropShellPermissionIdentity();    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[IME]:[2]:method_text:[ute(routeToAdd);        assertTrue(addedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[IME]:[2]:method_text:[te(ROUTE_ID2);        assertTrue(removedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[IME]:[2]:method_text:[argetVolume);        assertTrue(changedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[IME]:[2]:method_text:[   mAudioManager.setStreamVolume(AudioManager.STREAM_MUSIC, originalVolume, 0);        }    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[IME]:[2]:method_text:[ld());        assertTrue(featuresChangedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([8:/android/media/cts/SystemMediaRouter2Test.java]:[IME]:[8]:method_text:[erCalled,    // but with MediaRouter2#transfer(controller, route) instead of transferTo(route).   ])', 1), ('([5:/android/media/cts/SystemMediaRouter2Test.java]:[IME]:[5]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 1), ('([6:/android/media/cts/SystemMediaRouter2Test.java]:[IME]:[6]:method_text:[         mSystemRouter2ForCts.unregisterControllerCallback(controllerCallback);        }    }   ])', 1), ('([4:/android/media/cts/SystemMediaRouter2Test.java]:[IME]:[4]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 1), ('([4:/android/media/cts/SystemMediaRouter2Test.java]:[IME]:[4]:method_text:[         mSystemRouter2ForCts.unregisterControllerCallback(controllerCallback);        }    }   ])', 1), ('([6:/android/media/cts/SystemMediaRouter2Test.java]:[IME]:[6]:method_text:[r (RoutingController controller : controllers) {            controller.release();        }    }}])', 1), ('([2:/android/graphics/pdf/cts/Utils.java]:[IME]:[2]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([4:/android/media/cts/AudioPlaybackConfigurationTest.java]:[IME]:[4]:method_text:[   // create an AudioPlaybackConfiguration directly, we first need to play something to get one.   ])', 1), ('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[IME]:[1]:method_text:[using SoundPool"",                nbActivePlayersBeforeStart, nbActivePlayersAfterPause);    }   ])', 1), ('([4:/android/media/cts/AudioPlaybackConfigurationTest.java]:[IME]:[4]:method_text:[t HAL, skipping test "" + testName);            return false;        }        return true;    }}])', 1), ('([4:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[IME]:[4]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([6:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[IME]:[6]:method_text:[ents(start3, end3)),                mPackageContext1.getPackageName(), idNonexistance));    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[IME]:[2]:method_text:[d, mPackageContext1, id1,                ""SHORTCUT_INVOCATION event was not reported."");    }   ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[IME]:[2]:method_text:[yEvents(start, end)), packageContext.getPackageName(), id),                failureMessage);    }}])', 1), ('([1:/android/server/wm/SplashscreenTests.java]:[IME]:[1]:method_text:[sLeanBack());        launchRuntimeHandleExitAnimationActivity(true, false, false, true);    }   ])', 1), ('([1:/android/server/wm/SplashscreenTests.java]:[IME]:[1]:method_text:[sLeanBack());        launchRuntimeHandleExitAnimationActivity(false, true, false, true);    }   ])', 1), ('([4:/android/server/wm/SplashscreenTests.java]:[IME]:[4]:method_text:[Equals(Color.BLUE, journal.extras.getInt(ICON_BACKGROUND_COLOR, Color.YELLOW));        }    }   ])', 1), ('([1:/android/server/wm/SplashscreenTests.java]:[IME]:[1]:method_text:[ConfigNightMode,                journal.extras.getInt(GET_NIGHT_MODE_ACTIVITY_CHANGED));    }   ])', 1), ('([2:/android/server/wm/SplashscreenTests.java]:[IME]:[2]:method_text:[NDING_VIEW));        assertTrue(journal.extras.getBoolean(CENTER_VIEW_IS_SURFACE_VIEW));    }   ])', 1), ('([3:/android/server/wm/SplashscreenTests.java]:[IME]:[3]:method_text:[CTIVITY,                intent -> {});        waitAndAssertOverrideThemeColor(Color.BLUE);    }}])', 1), ('([1:/android/server/wm/SplashscreenTests.java]:[WindowManager.LayoutParams]:[1]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([1:/android/view/cts/ViewAnimationMatrixTest.java]:[IME]:[1]:method_text:[     new ActivityTestRule<>(ViewAnimationMatrixActivity.class, false, false);    @UiThreadTest   ])', 1), ('([2:/android/view/cts/ViewAnimationMatrixTest.java]:[IME]:[2]:method_text:[ j++) {                assertEquals(color, bitmap.getPixel(i, j));            }        }    }}])', 1), ('([16:/com/android/cts/verifier/p2p/RequesterTestActivity.java]:[IME]:[16]:method_text:[ }).show();    }    private TestCaseListener getTestCaseListener() {        return this;    }}])', 1), ('([1:/com/android/cts/verifier/p2p/RequesterTestActivity.java]:[WindowManager.LayoutParams]:[1]:method_text:[ }).show();    }    private TestCaseListener getTestCaseListener() {        return this;    }}])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[IME]:[4]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[IME]:[2]:method_text:[terruptedException e) { }                return mIntentReceived;            }        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[IME]:[1]:method_text:[);        mAudioManager.playSoundEffect(AudioManager.FX_FOCUS_NAVIGATION_RIGHT, volume);    }   ])', 1), ('([8:/android/media/cts/AudioManagerTest.java]:[IME]:[8]:method_text:[On(),                DEFAULT_ASYNC_CALL_TIMEOUT_MS, ""isSpeakerPhoneOn() returned true"");    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[IME]:[1]:method_text:[etStreamMute failed."",                    mAudioManager.isStreamMute(stream));        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[IME]:[1]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 1), ('([3:/android/media/cts/AudioManagerTest.java]:[IME]:[3]:method_text:[         return maxRingVol;        } else {            return maxRingVol - 1;        }    }   ])', 1), ('([19:/android/media/cts/AudioManagerTest.java]:[IME]:[19]:method_text:[ibutes() require privledged permission MODIFY_AUDIO_ROUTING    // and thus cannot be tested here.}])', 1), ('([1:/android/widget/cts/SearchView_CursorTest.java]:[IME]:[1]:method_text:[    mSearchView.setSuggestionsAdapter(mSuggestionsAdapter);        });    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/SearchView_CursorTest.java]:[IME]:[2]:method_text:[ry(""Di"", false);        verify(mockQueryTextListener, times(1)).onQueryTextChange(""Di"");    }   ])', 1), ('([5:/android/widget/cts/SearchView_CursorTest.java]:[IME]:[5]:method_text:[times(1)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }   ])', 1), ('([4:/android/widget/cts/SearchView_CursorTest.java]:[IME]:[4]:method_text:[, times(2)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }}])', 1)]"	""	""	"[('IME', 44), ('WindowManager.LayoutParams', 2)]"	"[('[com.android.cts.verifier.p2p.RequesterTestActivity getTestCase None]', 2), ('[android.media.cts.SystemMediaRouter2Test ArrayList CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesAdded CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesRemoved CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesChanged CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesChanged_whenLocalVolumeChanged CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnPreferredFeaturesChanged CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransferTo_succeeds_onTransferCalled CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransferTo_fails_onTransferFailureCalled CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransferToTwice CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransfer_succeeds_onTransferCalled CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testStop CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerSelectAndDeselectRoute CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerTransferToRoute CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerSetSessionVolume CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerRelease CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetterSoundPool CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetAudioDeviceInfoMediaPlayerStart CtsMediaTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest testReportShortcutUsed CtsShortcutManagerTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest testShortcutInvocationEventIsVisible CtsShortcutManagerTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest testShortcutInvocationEventIsNotVisible CtsShortcutManagerTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitAnimationOnCreate CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitAnimationOnResume CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitAnimationCancel CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSetApplicationNightMode CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitIconAnimatingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testOverrideSplashscreenTheme CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.view.cts.ViewAnimationMatrixTest testAnimationMatrixClearedWithPassingNull CtsViewTestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSpeakerphoneIntent CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSoundEffects CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testRouting CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMuteDndUnaffectedStreams CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyChannelsCanBypassDnd CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetAudioHwSyncForSession CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetDevices CtsMediaTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionFiltering CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionSelection CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionEnterKey CtsWidgetTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.3.5  . Security Model"	"9.8.2"	"T-4-2"	"9.8.2/T-4-2"	"09080200.840402"	"""[9.8.2/T-4-2] MUST not hide the microphone indicator for system apps that have visible user interfaces or direct user interaction. If Television device implementations declare android.hardware.camera.any, they: ["""	""	""	"android.hardware.camera.any"	""	""	""	""	"[('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('com.android.cts.verifier.features.FeatureSummaryActivity', 1)]"	"[('hashCode', 2), ('getDevice', 1), ('getStdout', 1), ('trim', 1)]"	"[('CtsAdbManagerHostTestCases', 1)]"	""	"com.android.cts.verifier.features.FeatureSummaryActivity"	"hashCode"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/features/FeatureSummaryActivity.java', 1)]"	"[('(1,android.hardware.camera.any,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1), ('(1,android.hardware.camera.any,/com/android/cts/verifier/features/FeatureSummaryActivity.java)', 1)]"	"[('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.camera.any]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 1), ('([1:/com/android/cts/verifier/features/FeatureSummaryActivity.java]:[android.hardware.camera.any]:[1]:method_text:[lse {            ((TextView) (findViewById(R.id.fs_warnings))).setText(warnings);        }    }}])', 1)]"	""	""	"[('android.hardware.camera.any', 2)]"	"[('[com.android.cts.verifier.features.FeatureSummaryActivity setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-7"	"5.1/H-1-7"	"05010000.720107"	"""[5.1/H-1-7] MUST have a codec initialization latency of 65 ms or less for a 1080p or smaller video encoding session for all hardware video encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization.  | [5.1/H-1-7] MUST have a codec initialization latency of 50 ms or less for a 1080p or smaller video encoding session for all hardware video encoders when under load. Load here is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs together with the 1080p audio-video recording initialization. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.9.1.2"	"3.9.1.2"	"C-1-4"	"3.9.1.2/C-1-4"	"03090102.670104"	"""C-1-4] MUST launch the handler for ACTION_PROVISIONING_SUCCESSFUL intent in the work profile if a Profile Owner is established when provisioning is initiated by the android.app.action.PROVISION_MANAGED_PROFILE intent and the DPC has implemented the handler."""	""	""	"PROVISION_MANAGED_PROFILE ACTION_PROVISIONING_SUCCESSFUL DPC android.app.action.PROVISION"	""	""	""	""	"[('library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest', 61), ('com.android.cts.deviceandprofileowner.SuspendPackageTest', 2), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 2), ('com.android.cts.comp.provisioning.ManagedProfileProvisioningTest', 2), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerHostSideTransferTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('com.android.cts.verifier.managedprovisioning.Utils', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('processor.main.java.com.android.bedstead.remotedpc.processor.Processor', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('com.android.cts.deviceowner.PreDeviceOwnerTest', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi30', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1)]"	"[('users', 36), ('devicePolicy', 34), ('createUser', 18), ('createAndStart', 18), ('userHandle', 16), ('remove', 13), ('getDeviceOwner', 12), ('getDevice', 9), ('devicePolicyController', 8), ('any', 5), ('tearDown', 4), ('setUp', 3), ('show', 3), ('deviceOwner', 3), ('profileOwner', 3), ('devicePolicyManager', 3), ('getPackageManager', 2), ('getBuild', 2), ('BigTextStyle', 1), ('TvExtender', 1), ('build', 1), ('getSupportedSourceVersion', 1), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1), ('getName', 1), ('DeviceState', 1), ('deviceOwner_noDeviceOwner_returnsNull', 1), ('deviceOwner_nonRemoteDpcDeviceOwner_returnsNull', 1), ('deviceOwner_remoteDpcDeviceOwner_returnsInstance', 1), ('profileOwner_noProfileOwner_returnsNull', 1), ('profileOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userHandle_null_throwsException', 1), ('profileOwner_userHandle_noProfileOwner_returnsNull', 1), ('profileOwner_userHandle_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userHandle_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userReference_null_throwsException', 1), ('profileOwner_userReference_noProfileOwner_returnsNull', 1), ('profileOwner_userReference_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userReference_remoteDpcProfileOwner_returnsInstance', 1), ('any_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userHandle_null_throwsException', 1), ('any_userHandle_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userHandle_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userHandle_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userReference_null_throwsException', 1), ('any_userReference_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userReference_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userReference_remoteDpcProfileOwner_returnsProfileOwner', 1), ('setAsDeviceOwner_userHandle_null_throwsException', 1), ('setAsDeviceOwner_userHandle_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userHandle_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userHandle_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsDeviceOwner_userReference_null_throwsException', 1), ('setAsDeviceOwner_userReference_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userReference_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userReference_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsProfileOwner_userHandle_null_throwsException', 1), ('setAsProfileOwner_userHandle_alreadySet_doesNothing', 1), ('setAsProfileOwner_userHandle_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userHandle_doesNotHaveProfileOwner_setsProfileOwner', 1), ('setAsProfileOwner_userReference_null_throwsException', 1), ('setAsProfileOwner_userReference_alreadySet_doesNothing', 1), ('setAsProfileOwner_userReference_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userReference_doesNotHaveProfileOwner_setsProfileOwner', 1), ('devicePolicyController_returnsDevicePolicyController', 1), ('remove_deviceOwner_removes', 1), ('remove_profileOwner_removes', 1), ('frameworkCall_makesCall', 1), ('getCurrentFailedPasswordAttempts', 1), ('frameworkCall_onProfile_makesCall', 1), ('frameworkCallRequiresProfileOwner_notProfileOwner_throwsSecurityException', 1), ('forDevicePolicyController_nullDevicePolicyController_throwsException', 1), ('forDevicePolicyController_nonRemoteDpcDevicePolicyController_throwsException', 1), ('forDevicePolicyController_remoteDpcDevicePolicyController_returnsRemoteDpc', 1)]"	"[('CtsDevicePolicyManagerTestCases', 4), ('CtsDevicePolicyTestCases', 2), ('CtsMediaParserTestCases', 1), ('CtsTvTestCases', 1)]"	""	"library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest"	"devicePolicyController"	""	"[('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java', 61), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1)]"	"[('(2,DPC,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(4,DPC,/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java)', 1), ('(2,DPC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/verifier/managedprovisioning/Utils.java)', 1), ('(4,DPC,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(4,DPC,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(2,DPC,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(19,DPC,/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java)', 1), ('(2,DPC,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(2,DPC,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/deviceowner/PreDeviceOwnerTest.java)', 1), ('(1,DPC,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(4,DPC,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(27,DPC,/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(2,PROVISION_MANAGED_PROFILE,/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java)', 1), ('(179,DPC,/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java)', 1)]"	"[('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[);        } finally {            remoteDPC.devicePolicyController().remove();        }    }   ])', 4), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 2), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[        } finally {            deviceOwner.devicePolicyController().remove();        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[    } finally {            sTestApis.devicePolicy().getDeviceOwner().remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[PC.devicePolicyController());        } finally {            profile.remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);    }}])', 1), ('([4:/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java]:[DPC]:[4]:method_text:[NCOMING_TEST);            installAppAsUser(TRANSFER_OWNER_INCOMING_APK, mUserId);        }    }}])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {        testAssetExtraction(""wav/sample_ima_adpcm.wav"");    }   ])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/Utils.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ckageManager().hasSystemFeature(                PackageManager.FEATURE_SECURE_LOCK_SCREEN);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[1]:method_text:[RECEIVER_PKG);    }    /**     * Verify that we cannot suspend launcher and dpc app.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[3]:method_text:[);        assertWithMessage(""package %s suspension"", pkg).that(actual).isEqualTo(expected);    }}])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[provider that provides enterprise slice cannot     * see the enterprise slice requests.     */   ])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[()), offerCallback);        offerCallback.assertNoCallback();        return offerCallback;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases. * */public class ResetPasswordTest extends BaseDeviceAdminTest {   ])', 1), ('([19:/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java]:[DPC]:[19]:method_text:[getMessager()                .printMessage(Diagnostic.Kind.ERROR, errorText, errorElement);    }}])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[e(ComponentName, String)} */public class CertInstallDelegateTest extends BaseJUnit3TestCase {   ])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[DPC]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[           .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[DPC]:[1]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([4:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[DPC]:[4]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 1), ('([27:/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java]:[DPC]:[27]:method_text:[min void addPersistentPreferredActivity(            IntentFilter filter, ComponentName activity);}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java]:[DPC]:[1]:method_text:[ws Exception {        runDeviceTestsAsUser(DEVICE_ADMIN_PKG, className, testName, mUserId);    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[DPC]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[tends AndroidTestCase {    private static final String TAG = ""ManagedProfileProvisioningTest"";   ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ntent) {        return intent != null && intent.getExtras().containsKey(Intent.EXTRA_USER);    }}])', 1), ('([7:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[7]:method_text:[s    public static void teardownClass() {        sNonRemoteDpcTestApp.uninstall(sUser);    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Owner_noDeviceOwner_returnsNull() {        assertThat(RemoteDpc.deviceOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.deviceOwner()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.profileOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[rofileOwner()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.profileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[e.userHandle())).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[nterException.class,                () -> RemoteDpc.profileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[oDeviceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[moteDpc.any()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[emoteDpc.any()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[        assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser.userHandle())).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.userHandle())).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[())).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[     assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser)).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[teDpc.any(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Dpc.any(sUser)).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[le)).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[terException.class,                () -> RemoteDpc.setAsDeviceOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ption.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Exception.class,                () -> RemoteDpc.setAsDeviceOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[on.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[erException.class,                () -> RemoteDpc.setAsProfileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[tion.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[xception.class,                () -> RemoteDpc.setAsProfileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[n.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[Policy().getDeviceOwner());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[oteDPC.remove();        assertThat(sTestApis.devicePolicy().getDeviceOwner()).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[eed to support the case where there is both a DO and a PO on    //  older versions of Android?   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[ntFailedPasswordAttempts();        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[ succeeds            remoteDPC.devicePolicyManager().isUsingUnifiedPassword();        }    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[.isUsingUnifiedPassword());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.forDevicePolicyController(null));    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Controller(deviceOwner));        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([8:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[8]:method_text:[                 .isNotNull();        } finally {            remoteDPC.remove();        }    }])', 1)]"	""	""	"[('DPC', 77), ('PROVISION_MANAGED_PROFILE', 4)]"	"[('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNull None]', 19), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNotNull None]', 15), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isUsingUnifiedPassword None]', 2), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testWavWithImaAdpcm CtsMediaParserTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSetPackagesNotSuspended None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSuspendNotSuspendablePackages None]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_enableService_issueRequest CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_disableService_noIssueRequest CtsDevicePolicyTestCases]', 1), ('[processor.main.java.com.android.bedstead.remotedpc.processor.Processor latest None]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceowner.PreDeviceOwnerTest testIsProvisioningNotAllowedForManagedProfileAction None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testRevokeKeyPairFromApp_keyNotUsable None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtsc3FrontendSettings CtsTvTestCases]', 1), ('[communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager isUsingUnifiedPassword None]', 1), ('[com.android.cts.comp.provisioning.ManagedProfileProvisioningTest testProvisioningCorpOwnedManagedProfile None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest TestApis None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userReference_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userReference_nonExistingUser_throwsException None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-0-14"	"9.1/C-0-14"	"09010000.670014"	"""C-0-14] MUST only assign roles to applications with functionalities that meet the role requirements."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.9.1.1  . The"	"3.9.1.1"	"C-2-2"	"3.9.1.1/C-2-2"	"03090101.670202"	"""C-2-2] MUST show the same AOSP Device Owner consent disclosure as the flow initiated by android.app.action.PROVISION_MANAGED_DEVICE prior to enrolling the DPC application as &quot;Device Owner&quot;. MAY have user data on the device prior to enrolling the DPC application as &quot;Device Owner&quot;. <h5 id=""3912_managed_profile_provisioning"" """	""	""	"DPC android.app.action.PROVISION PROVISION_MANAGED_DEVICE"	""	""	""	""	"[('library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest', 61), ('com.android.cts.deviceandprofileowner.SuspendPackageTest', 2), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 2), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerHostSideTransferTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('processor.main.java.com.android.bedstead.remotedpc.processor.Processor', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('com.android.cts.deviceowner.PreDeviceOwnerTest', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi30', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1)]"	"[('users', 36), ('devicePolicy', 34), ('createUser', 18), ('createAndStart', 18), ('userHandle', 16), ('remove', 13), ('getDeviceOwner', 12), ('getDevice', 9), ('devicePolicyController', 8), ('any', 5), ('tearDown', 4), ('setUp', 3), ('deviceOwner', 3), ('profileOwner', 3), ('devicePolicyManager', 3), ('getBuild', 2), ('getSupportedSourceVersion', 1), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1), ('getName', 1), ('DeviceState', 1), ('deviceOwner_noDeviceOwner_returnsNull', 1), ('deviceOwner_nonRemoteDpcDeviceOwner_returnsNull', 1), ('deviceOwner_remoteDpcDeviceOwner_returnsInstance', 1), ('profileOwner_noProfileOwner_returnsNull', 1), ('profileOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userHandle_null_throwsException', 1), ('profileOwner_userHandle_noProfileOwner_returnsNull', 1), ('profileOwner_userHandle_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userHandle_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userReference_null_throwsException', 1), ('profileOwner_userReference_noProfileOwner_returnsNull', 1), ('profileOwner_userReference_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userReference_remoteDpcProfileOwner_returnsInstance', 1), ('any_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userHandle_null_throwsException', 1), ('any_userHandle_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userHandle_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userHandle_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userReference_null_throwsException', 1), ('any_userReference_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userReference_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userReference_remoteDpcProfileOwner_returnsProfileOwner', 1), ('setAsDeviceOwner_userHandle_null_throwsException', 1), ('setAsDeviceOwner_userHandle_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userHandle_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userHandle_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsDeviceOwner_userReference_null_throwsException', 1), ('setAsDeviceOwner_userReference_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userReference_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userReference_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsProfileOwner_userHandle_null_throwsException', 1), ('setAsProfileOwner_userHandle_alreadySet_doesNothing', 1), ('setAsProfileOwner_userHandle_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userHandle_doesNotHaveProfileOwner_setsProfileOwner', 1), ('setAsProfileOwner_userReference_null_throwsException', 1), ('setAsProfileOwner_userReference_alreadySet_doesNothing', 1), ('setAsProfileOwner_userReference_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userReference_doesNotHaveProfileOwner_setsProfileOwner', 1), ('devicePolicyController_returnsDevicePolicyController', 1), ('remove_deviceOwner_removes', 1), ('remove_profileOwner_removes', 1), ('frameworkCall_makesCall', 1), ('getCurrentFailedPasswordAttempts', 1), ('frameworkCall_onProfile_makesCall', 1), ('frameworkCallRequiresProfileOwner_notProfileOwner_throwsSecurityException', 1), ('forDevicePolicyController_nullDevicePolicyController_throwsException', 1), ('forDevicePolicyController_nonRemoteDpcDevicePolicyController_throwsException', 1), ('forDevicePolicyController_remoteDpcDevicePolicyController_returnsRemoteDpc', 1)]"	"[('CtsDevicePolicyManagerTestCases', 4), ('CtsDevicePolicyTestCases', 2), ('CtsMediaParserTestCases', 1), ('CtsTvTestCases', 1)]"	""	"library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest"	"devicePolicyController"	""	"[('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java', 61), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1)]"	"[('(2,DPC,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(4,DPC,/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java)', 1), ('(2,DPC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(4,DPC,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(4,DPC,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(2,DPC,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(19,DPC,/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java)', 1), ('(2,DPC,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(2,DPC,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,PROVISION_MANAGED_DEVICE,/com/android/cts/deviceowner/PreDeviceOwnerTest.java)', 1), ('(1,DPC,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(4,DPC,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(27,DPC,/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(179,DPC,/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java)', 1)]"	"[('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[);        } finally {            remoteDPC.devicePolicyController().remove();        }    }   ])', 4), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 2), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[        } finally {            deviceOwner.devicePolicyController().remove();        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[    } finally {            sTestApis.devicePolicy().getDeviceOwner().remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[PC.devicePolicyController());        } finally {            profile.remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);    }}])', 1), ('([4:/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java]:[DPC]:[4]:method_text:[NCOMING_TEST);            installAppAsUser(TRANSFER_OWNER_INCOMING_APK, mUserId);        }    }}])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {        testAssetExtraction(""wav/sample_ima_adpcm.wav"");    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[1]:method_text:[RECEIVER_PKG);    }    /**     * Verify that we cannot suspend launcher and dpc app.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[3]:method_text:[);        assertWithMessage(""package %s suspension"", pkg).that(actual).isEqualTo(expected);    }}])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[provider that provides enterprise slice cannot     * see the enterprise slice requests.     */   ])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[()), offerCallback);        offerCallback.assertNoCallback();        return offerCallback;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases. * */public class ResetPasswordTest extends BaseDeviceAdminTest {   ])', 1), ('([19:/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java]:[DPC]:[19]:method_text:[getMessager()                .printMessage(Diagnostic.Kind.ERROR, errorText, errorElement);    }}])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[e(ComponentName, String)} */public class CertInstallDelegateTest extends BaseJUnit3TestCase {   ])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[DPC]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[PROVISION_MANAGED_DEVICE]:[1]:method_text:[            .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_DEVICE));    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[DPC]:[1]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([4:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[DPC]:[4]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 1), ('([27:/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java]:[DPC]:[27]:method_text:[min void addPersistentPreferredActivity(            IntentFilter filter, ComponentName activity);}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java]:[DPC]:[1]:method_text:[ws Exception {        runDeviceTestsAsUser(DEVICE_ADMIN_PKG, className, testName, mUserId);    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[DPC]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([7:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[7]:method_text:[s    public static void teardownClass() {        sNonRemoteDpcTestApp.uninstall(sUser);    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Owner_noDeviceOwner_returnsNull() {        assertThat(RemoteDpc.deviceOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.deviceOwner()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.profileOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[rofileOwner()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.profileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[e.userHandle())).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[nterException.class,                () -> RemoteDpc.profileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[oDeviceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[moteDpc.any()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[emoteDpc.any()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[        assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser.userHandle())).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.userHandle())).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[())).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[     assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser)).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[teDpc.any(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Dpc.any(sUser)).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[le)).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[terException.class,                () -> RemoteDpc.setAsDeviceOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ption.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Exception.class,                () -> RemoteDpc.setAsDeviceOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[on.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[erException.class,                () -> RemoteDpc.setAsProfileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[tion.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[xception.class,                () -> RemoteDpc.setAsProfileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[n.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[Policy().getDeviceOwner());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[oteDPC.remove();        assertThat(sTestApis.devicePolicy().getDeviceOwner()).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[eed to support the case where there is both a DO and a PO on    //  older versions of Android?   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[ntFailedPasswordAttempts();        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[ succeeds            remoteDPC.devicePolicyManager().isUsingUnifiedPassword();        }    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[.isUsingUnifiedPassword());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.forDevicePolicyController(null));    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Controller(deviceOwner));        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([8:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[8]:method_text:[                 .isNotNull();        } finally {            remoteDPC.remove();        }    }])', 1)]"	""	""	"[('DPC', 77), ('PROVISION_MANAGED_DEVICE', 1)]"	"[('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNull None]', 19), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNotNull None]', 15), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isUsingUnifiedPassword None]', 2), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testWavWithImaAdpcm CtsMediaParserTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSetPackagesNotSuspended None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSuspendNotSuspendablePackages None]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_enableService_issueRequest CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_disableService_noIssueRequest CtsDevicePolicyTestCases]', 1), ('[processor.main.java.com.android.bedstead.remotedpc.processor.Processor latest None]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceowner.PreDeviceOwnerTest testIsProvisioningAllowedFalse None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testRevokeKeyPairFromApp_keyNotUsable None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtsc3FrontendSettings CtsTvTestCases]', 1), ('[communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager isUsingUnifiedPassword None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest TestApis None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userReference_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userReference_nonExistingUser_throwsException None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-2-1"	"8.2/H-2-1"	"08020000.720201"	"""[8.2/H-2-1] MUST ensure a sequential write performance of at least 125 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"5.1  . Capture for Unprocessed"	"5.1"	"C-1-7"	"5.1/C-1-7"	"05010000.670107"	"""C-1-7] MUST have Cold input latency of 200 milliseconds or less. | C-1-7] MUST have a total harmonic distortion (THD) less than be less than 1% for 1 kHZ at 90 dB SPL input level at each and every microphone used to record the unprocessed audio source. MUST not have any other signal processing (e.g. Automatic Gain Control, High Pass Filter, or Echo cancellation) in the path other than a level multiplier to bring the level to desired range. In other words:"""	""	""	"SPL THD"	""	""	""	""	"[('android.server.wm.AppConfigurationTests', 18), ('android.server.wm.SplashscreenTests', 9), ('com.android.compatibility.common.util.SafeCleanerRuleTest', 5), ('android.server.wm.KeyguardLockedTests', 5), ('android.media.cts.AudioManagerTest', 2), ('com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest', 1), ('android.uirendering.cts.testclasses.ExactCanvasTests', 1), ('com.android.cts.verifier.camera.its.ItsTestActivity', 1), ('com.android.cts.verifier.bluetooth.BleEncryptedServerService', 1), ('android.systemui.cts.LightBarActivity', 1), ('com.android.cts.isolatedsplitapp.feature_a.FeatureAReceiver', 1), ('android.content.res.cts.PluralResourcesTest', 1)]"	"[('setUp', 6), ('hashCode', 3), ('onCreate', 2), ('getWindow', 2), ('getResources', 2), ('DumpOnFailure', 1), ('tearDown', 1), ('getContext', 1), ('getTargetContext', 1), ('ResultReceiver', 1), ('BleEncryptedServerService', 1), ('Handler', 1), ('getAdapter', 1), ('getAttributes', 1), ('getDecorView', 1), ('Configuration', 1), ('getConfiguration', 1), ('getAssets', 1), ('supportsSecureLock', 1)]"	"[('CtsWindowManagerDeviceTestCases', 32), ('CtsMediaTestCases', 2), ('CtsUiRenderingTestCases', 1), ('CtsSystemUiTestCases', 1), ('CtsContentTestCases', 1)]"	""	"android.server.wm.AppConfigurationTests"	"supportsSecureLock"	"CtsWindowManagerDeviceTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 18), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 9), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/tests/src/com/android/compatibility/common/util/SafeCleanerRuleTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleEncryptedServerService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/LightBarActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_a/src/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/PluralResourcesTest.java', 1)]"	"[('(60,SPL,/android/server/wm/SplashscreenTests.java)', 1), ('(5,SPL,/android/media/cts/AudioManagerTest.java)', 1), ('(2,THD,/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java)', 1), ('(3,SPL,/android/uirendering/cts/testclasses/ExactCanvasTests.java)', 1), ('(5,THD,/com/android/compatibility/common/util/SafeCleanerRuleTest.java)', 1), ('(1,SPL,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(9,THD,/com/android/cts/verifier/bluetooth/BleEncryptedServerService.java)', 1), ('(3,SPL,/android/systemui/cts/LightBarActivity.java)', 1), ('(2,SPL,/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java)', 1), ('(1,SPL,/android/content/res/cts/PluralResourcesTest.java)', 1), ('(17,SPL,/android/server/wm/KeyguardLockedTests.java)', 1), ('(172,SPL,/android/server/wm/AppConfigurationTests.java)', 1), ('(10,THD,/android/server/wm/AppConfigurationTests.java)', 1)]"	"[('([1:/com/android/compatibility/common/util/SafeCleanerRuleTest.java]:[THD]:[1]:method_text:[odGuyExtraExceptions1).call();        verify(mDumper).dump(""Whatever"", actualException);    }   ])', 3), ('([10:/android/server/wm/SplashscreenTests.java]:[SPL]:[10]:method_text:[TRA_INTENT, startIntent);        homeActivity.sendCommand(COMMAND_START_ACTIVITY, data);    }   ])', 1), ('([14:/android/server/wm/SplashscreenTests.java]:[SPL]:[14]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([6:/android/server/wm/SplashscreenTests.java]:[SPL]:[6]:method_text:[Equals(Color.BLUE, journal.extras.getInt(ICON_BACKGROUND_COLOR, Color.YELLOW));        }    }   ])', 1), ('([4:/android/server/wm/SplashscreenTests.java]:[SPL]:[4]:method_text:[ConfigNightMode,                journal.extras.getInt(GET_NIGHT_MODE_ACTIVITY_CHANGED));    }   ])', 1), ('([4:/android/server/wm/SplashscreenTests.java]:[SPL]:[4]:method_text:[     testSplashScreenColor(SPLASH_SCREEN_REPLACE_ICON_ACTIVITY, Color.BLUE, Color.WHITE);    }   ])', 1), ('([5:/android/server/wm/SplashscreenTests.java]:[SPL]:[5]:method_text:[NDING_VIEW));        assertTrue(journal.extras.getBoolean(CENTER_VIEW_IS_SURFACE_VIEW));    }   ])', 1), ('([5:/android/server/wm/SplashscreenTests.java]:[SPL]:[5]:method_text:[E_ICON_EXIT);        assertFalse(journal.extras.getBoolean(RECEIVE_SPLASH_SCREEN_EXIT));    }   ])', 1), ('([6:/android/server/wm/SplashscreenTests.java]:[SPL]:[6]:method_text:[      }        mWmState.waitForActivityRemoved(activity);        separateTestJournal();    }   ])', 1), ('([6:/android/server/wm/SplashscreenTests.java]:[SPL]:[6]:method_text:[CTIVITY,                intent -> {});        waitAndAssertOverrideThemeColor(Color.BLUE);    }}])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[SPL]:[4]:method_text:[:"" + microphone.getDirectionality());            Log.i(TAG, ""--------------"");        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[SPL]:[1]:method_text:[ibutes() require privledged permission MODIFY_AUDIO_ROUTING    // and thus cannot be tested here.}])', 1), ('([2:/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java]:[THD]:[2]:method_text:[ static Context getContext() {        return InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([3:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[SPL]:[3]:method_text:[ect(20, 20, 70, 70, p);                })                .runWithComparer(mExactComparer);    }}])', 1), ('([1:/com/android/compatibility/common/util/SafeCleanerRuleTest.java]:[THD]:[1]:method_text:[InstanceAs(mRuntimeException);        verify(mDumper).dump(""Whatever"", actualException);    }   ])', 1), ('([1:/com/android/compatibility/common/util/SafeCleanerRuleTest.java]:[THD]:[1]:method_text:[mGoodGuyExtraExceptions1).call();        verify(mDumper).dump(""Whatever"", actualException);    }}])', 1), ('([1:/com/android/cts/verifier/camera/its/ItsTestActivity.java]:[SPL]:[1]:method_text:[era_its_test, R.string.camera_its_test_info, -1);        setPassFailButtonClickListeners();    }}])', 1), ('([9:/com/android/cts/verifier/bluetooth/BleEncryptedServerService.java]:[THD]:[9]:method_text:[Advertiser != null) {            mAdvertiser.stopAdvertising(mAdvertiseCallback);        }    }}])', 1), ('([3:/android/systemui/cts/LightBarActivity.java]:[SPL]:[3]:method_text:[ranceFlag;        }        controller.setSystemBarsAppearance(appearance, appearanceFlag);    }}])', 1), ('([2:/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java]:[SPL]:[2]:method_text:[(                ""feature_a"", context.getResources().getString(R.string.feature_a_string));    }}])', 1), ('([1:/android/content/res/cts/PluralResourcesTest.java]:[SPL]:[1]:method_text:[Resources(mResources.getAssets(), mResources.getDisplayMetrics(), config);    }    @SmallTest   ])', 1), ('([2:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[2]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([2:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[2]:method_text:[uardControllerState().keyguardShowing);        assertTrue(isDisplayOn(DEFAULT_DISPLAY));    }   ])', 1), ('([3:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[3]:method_text:[expected display.        mWmState.waitAndAssertImeWindowShownOnDisplay(DEFAULT_DISPLAY);    }   ])', 1), ('([5:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[5]:method_text:[xpected display.        mWmState.waitAndAssertImeWindowShownOnDisplay(DEFAULT_DISPLAY);    }   ])', 1), ('([5:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[5]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([8:/android/server/wm/AppConfigurationTests.java]:[SPL]:[8]:method_text:[lues reported in fullscreen should be larger than those reported in     * docked state.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[SPL]:[2]:method_text:[nResizedFromFullscreen()} but resizing     * from docked state to fullscreen (reverse).     */   ])', 1), ('([4:/android/server/wm/AppConfigurationTests.java]:[SPL]:[4]:method_text:[;    }    /**     * Tests whether the Display sizes change when rotating the device.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[SPL]:[2]:method_text:[tatingWhileDocked()} but when the Activity     * is launched to side from docked stack.     */   ])', 1), ('([10:/android/server/wm/AppConfigurationTests.java]:[SPL]:[10]:method_text:[ Activity will be     * relaunched twice and it should have same config as initial one.     */   ])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[SPL]:[3]:method_text:[     * Same as {@link #testSameConfigurationFullSplitFullRelaunch} but without relaunch.     */   ])', 1), ('([11:/android/server/wm/AppConfigurationTests.java]:[SPL]:[11]:method_text:[ivity with the DialogWhenLarge theme can transform properly when in split     * screen.     */   ])', 1), ('([11:/android/server/wm/AppConfigurationTests.java]:[SPL]:[11]:method_text:[ Test that device handles consequent requested orientations and displays the activities.     */   ])', 1), ('([27:/android/server/wm/AppConfigurationTests.java]:[SPL]:[27]:method_text:[),                new Point(globalSizeInfo.metricsWidth, globalSizeInfo.metricsHeight));    }   ])', 1), ('([4:/android/server/wm/AppConfigurationTests.java]:[SPL]:[4]:method_text:[text derived from an application context     * will not change when the device rotates.     */   ])', 1), ('([5:/android/server/wm/AppConfigurationTests.java]:[SPL]:[5]:method_text:[context derived from an activity context     * will not change when the device rotates.     */   ])', 1), ('([33:/android/server/wm/AppConfigurationTests.java]:[SPL]:[33]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([7:/android/server/wm/AppConfigurationTests.java]:[SPL]:[7]:method_text:[**     * Test that device handles moving between two tasks with different orientations.     */   ])', 1), (""([3:/android/server/wm/AppConfigurationTests.java]:[SPL]:[3]:method_text:[Test that device doesn't change device orientation by app request while in multi-window.     */   ])"", 1), ('([30:/android/server/wm/AppConfigurationTests.java]:[SPL]:[30]:method_text:[  /**     * Test launching an activity which requests specific UI mode during creation.     */   ])', 1), ('([4:/android/server/wm/AppConfigurationTests.java]:[SPL]:[4]:method_text:[ dockedActivitySizes);        assertSizesAreSame(dockedActivitySizes, applicationSizes);    }   ])', 1), ('([8:/android/server/wm/AppConfigurationTests.java]:[SPL]:[8]:method_text:[Sizes);        assertSizesAreSane(fullscreenActivitySizes, secondarySplitActivitySizes);    }   ])', 1), ('([10:/android/server/wm/AppConfigurationTests.java]:[THD]:[10]:method_text:[  /**     * Test launching an activity which requests specific UI mode during creation.     */   ])', 1)]"	""	""	"[('SPL', 38), ('THD', 8)]"	"[('[android.server.wm.AppConfigurationTests testSplitscreenLandscapeAppOrientationRequests CtsWindowManagerDeviceTestCases]', 2), ('[android.server.wm.SplashscreenTests prepareTestLauncher CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitAnimationCancel CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSetApplicationNightMode CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSetBackgroundColorActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitIconAnimatingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testCancelHandleExitIconAnimatingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testShortcutChangeTheme CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testOverrideSplashscreenTheme CtsWindowManagerDeviceTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetMicrophones CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetDevices CtsMediaTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testColorLongs CtsUiRenderingTestCases]', 1), ('[com.android.compatibility.common.util.SafeCleanerRuleTest testEmptyRule_testFails_withDumper None]', 1), ('[com.android.compatibility.common.util.SafeCleanerRuleTest testOnlyTestFails_withDumper None]', 1), ('[com.android.compatibility.common.util.SafeCleanerRuleTest testTestPass_oneRunnerFails_withDumper None]', 1), ('[com.android.compatibility.common.util.SafeCleanerRuleTest testTestPass_oneExtraExceptionThrown_withDumper None]', 1), ('[com.android.compatibility.common.util.SafeCleanerRuleTest testThrowTheKitchenSinkAKAEverybodyThrows_withDumper None]', 1), ('[com.android.cts.verifier.camera.its.ItsTestActivity ItsTestActivity None]', 1), ('[com.android.cts.verifier.bluetooth.BleEncryptedServerService getBluetoothLeAdvertiser None]', 1), ('[android.systemui.cts.LightBarActivity getSystemUiVisibility CtsSystemUiTestCases]', 1), ('[android.content.res.cts.PluralResourcesTest getDisplayMetrics CtsContentTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardAttrActivity_method_turnScreenOn_withSecureKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedAttrImeActivityAndShowSoftInput CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedImeActivityAndShowSoftInput CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests getDefaultDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromFullscreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromDockedStack CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingWhileDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingToSideFromDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSameConfigurationFullSplitFullRelaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSameConfigurationFullSplitFullNoRelaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testDialogWhenLargeSplitSmall CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testRotatedInfoWithFixedRotationTransform CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testFixedOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenPortraitAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesTopActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-2-7"	"7.3.1/C-2-7"	"07030100.670207"	"""C-2-7] MUST NOT allow unencrypted access to identifiable biometric data or any data derived from it (such as embeddings) to the Application Processor outside the context of the TEE."""	""	""	"TEE"	""	""	""	""	"[('android.mediav2.cts.CodecUnitTest', 82), ('android.hardware.camera2.cts.NativeCameraDeviceTest', 6), ('com.android.suspendapps.suspendtestapp.TestService', 1), ('android.widget.cts.SimpleCursorAdapterTest', 1), ('com.android.cts.deviceandprofileowner.ContentSuggestionsActivity', 1), ('android.media.cts.DecodeEditEncodeTest', 1)]"	"[('hasSeenError', 2), ('getSimpleName', 1), ('Object', 1), ('Stub', 1), ('Intent', 1), ('countDown', 1)]"	"[('CtsMediaV2TestCases', 82), ('CtsCameraTestCases', 6), ('CtsWidgetTestCases', 1), ('CtsMediaTestCases', 1)]"	""	"android.mediav2.cts.CodecUnitTest"	"hasSeenError"	"CtsMediaV2TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecUnitTest.java', 82), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraDeviceTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/test-apps/SuspendTestApp/src/com/android/suspendapps/suspendtestapp/TestService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SimpleCursorAdapterTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ContentSuggestionsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 1)]"	"[('(9,TEE,/com/android/suspendapps/suspendtestapp/TestService.java)', 1), ('(3,TEE,/android/widget/cts/SimpleCursorAdapterTest.java)', 1), ('(1,TEE,/com/android/cts/deviceandprofileowner/ContentSuggestionsActivity.java)', 1), ('(3,TEE,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(6,TEE,/android/hardware/camera2/cts/NativeCameraDeviceTest.java)', 1), ('(120,TEE,/android/mediav2/cts/CodecUnitTest.java)', 1)]"	"[('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[op();                mCodec.reset();            }            mCodec.release();        }       ])', 14), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[te"");                mCodec.reset();            }            mCodec.release();        }       ])', 13), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[ate"");                mCodec.stop();            }            mCodec.release();        }       ])', 6), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[uts();                mCodec.stop();            }            mCodec.release();        }       ])', 5), ('([2:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[2]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 4), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[     }                mCodec.stop();            }            mCodec.release();        }       ])', 3), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[3]:method_text:[  } finally {                if (mCodec != null) mCodec.release();            }        }       ])', 2), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[t buffer succeeds in stopped state"");            }            mCodec.release();        }       ])', 2), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[    waitForAllOutputs();            mCodec.stop();            mCodec.release();        }       ])', 2), ('([9:/com/android/suspendapps/suspendtestapp/TestService.java]:[TEE]:[9]:method_text:[{            sRegisteredReporters.clear();        }        return super.onUnbind(intent);    }}])', 1), ('([3:/android/widget/cts/SimpleCursorAdapterTest.java]:[TEE]:[3]:method_text:[  } catch (IllegalStateException e) {            // expected        }    }    @UiThreadTest   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ContentSuggestionsActivity.java]:[TEE]:[1]:method_text:[      + "" didn\'t finish in 2 seconds"");        }        finish();        return mEnabled;    }}])', 1), ('([3:/android/media/cts/DecodeEditEncodeTest.java]:[TEE]:[3]:method_text:[                  throw new RuntimeException(ioe);                }            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[TEE]:[1]:method_text:[          testCameraDeviceSessionOpenAndCloseNative(mPreviewSurface, mOverrideCameraId));    }   ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[TEE]:[1]:method_text:[                testCameraDeviceSimplePreviewNative(mPreviewSurface, mOverrideCameraId));    }   ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[TEE]:[1]:method_text:[ePreviewWithSessionParametersNative(mPreviewSurface,                mOverrideCameraId));    }   ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[TEE]:[1]:method_text:[ceSharedOutputUpdate(mPreviewSurface, outputSurface,                mOverrideCameraId));    }   ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[TEE]:[1]:method_text:[     testCameraDeviceLogicalPhysicalStreamingNative(mPreviewSurface, mOverrideCameraId));    }   ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[TEE]:[1]:method_text:[      testCameraDeviceLogicalPhysicalSettingsNative(mPreviewSurface, mOverrideCameraId));    }   ])', 1), ('([20:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[20]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[ull, null, null, MediaCodec.CONFIGURE_FLAG_ENCODE);            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[t(), null, null, MediaCodec.CONFIGURE_FLAG_ENCODE);            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[(format, false,                    ""codec configure succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[alidState(                    ""dequeue input buffer succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[lidState(                    ""dequeue output buffer succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[le.isInputQueueEmpty());            mCodec.stop();            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[e();            tryFlushInInvalidState(""codec flush succeeds in release state"");        }       ])', 1), ('([5:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[5]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[3]:method_text:[    waitForAllOutputs();            mCodec.stop();            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[     tryGetInputBufferInInvalidState(""getInputBuffer succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[art();                mCodec.stop();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[     tryGetInputFormatInInvalidState(""getInputFormat succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[   tryGetOutputBufferInInvalidState(""getOutputBuffer succeeds in release state"");        }       ])', 1), ('([2:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[2]:method_text:[art();                mCodec.stop();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[   tryGetOutputFormatInInvalidState(""getOutputFormat succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[ 1));                mCodec.reset();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[alidState(""codec start succeeds in stopped state"");            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[eeds in running state"");            mCodec.stop();            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[tate            tryStartInInvalidState(""codec start succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[top();                mCodec.stop();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[true);                mCodec.stop();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[EOS();                mCodec.stop();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[rue);                mCodec.reset();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[OS();                mCodec.reset();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[       tryGetInputImageInInvalidState(""getInputImage succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[ tryQueueInputBufferInInvalidState(""queueInputBuffer succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[validState(                    ""releaseOutputBuffer succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[ECONDS);        static {            System.loadLibrary(""ctsmediav2codec_jni"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[3]:method_text:[rNull());        }        private native boolean nativeTestCreateEncoderByTypeForNull();       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[3]:method_text:[);        }        private native boolean nativeTestCreateEncoderByTypeForInvalidMime();       ])', 1)]"	""	""	"[('TEE', 92)]"	"[('[android.mediav2.cts.CodecUnitTest testCreateEncoderByTypeForNull CtsMediaV2TestCases]', 2), ('[android.mediav2.cts.CodecUnitTest testCreateEncoderByTypeForInvalidMime CtsMediaV2TestCases]', 2), ('[com.android.suspendapps.suspendtestapp.TestService isPackageSuspended None]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testBindView CtsWidgetTestCases]', 1), ('[com.android.cts.deviceandprofileowner.ContentSuggestionsActivity isContentSuggestionsEnabled None]', 1), ('[android.media.cts.DecodeEditEncodeTest testVideoEdit720p CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceSessionOpenAndClose CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceSimplePreview CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDevicePreviewWithSessionParameters CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceSharedOutputUpdate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceLogicalPhysicalStreaming CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceLogicalPhysicalSettings CtsCameraTestCases]', 1), ('[android.mediav2.cts.CodecUnitTest TestApi CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureForNullFormat CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureForEmptyFormat CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureAfterStart CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureAfterQueueInputBuffer CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureInEOSState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureInFlushState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueInputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueInputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueInputBufferInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueInputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueOutputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueOutputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueOutputBufferInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueOutputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testFlushInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testFlushInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testFlushInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testFlushInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetMetaDataInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetMetaDataInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetMetaDataInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetMetaDataInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetCallBackInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetCallBackInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetCallBackInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetCallBackInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputBufferInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputFormatInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputFormatInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputFormatInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputFormatInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputBufferInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputFormatInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputFormatInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputFormatInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputFormatInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetParametersInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetParametersInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetParametersInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetParametersInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStartInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStartInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStartInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStopInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStopInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStopInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStopInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testResetInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testResetInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testResetInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testResetInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputImageInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputImageInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputImageInRunningStateVideo CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputImageInRunningStateAudio CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputImageInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferWithBadIndex CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferWithBadSize CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferWithBadBuffInfo CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferWithBadOffset CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testReleaseOutputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testReleaseOutputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testReleaseOutputBufferInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testReleaseOutputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testReleaseIdempotent CtsMediaV2TestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-0-12"	"9.1/C-0-12"	"09010000.670012"	"""C-0-12] MUST NOT provide any custom functions or APIs to bypass the permission restrictions defined in setPermissionPolicy and setPermissionGrantState APIs."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Device Integrity"	"9.1"	"C-1-7"	"9.1/C-1-7"	"09010000.670107"	"""C-1-7] MUST NOT allow verified partitions on the device to be modified unless the user has explicitly unlocked the bootloader."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.3"	"7.1.4.3"	"C-0-1"	"7.1.4.3/C-0-1"	"07010403.670001"	"""C-0-1] Device implementations MUST support Android RenderScript, as detailed in the Android SDK documentation. <h5 id=""7144_2d_graphics_acceleration"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-1-9"	"7.3.1/C-1-9"	"07030100.670109"	"""C-1-9] MUST challenge the user for the recommended primary authentication (e.g. PIN, pattern, password) after no more than twenty false trials and no less than ninety-second backoff time for biometric verification - where a false trial is one with an adequate capture quality (BIOMETRIC_ACQUIRED_GOOD) that does not match an enrolled biometric. | C-1-9] if the spoof and imposter acceptance rates are higher than 7% as measure by the Android Biometrics Test Protocols. | C-1-9] - where a false trial is one with an adequate capture quality (BIOMETRIC_ACQUIRED_GOOD) that does not match an enrolled biometric."""	""	""	"PIN BIOMETRIC_ACQUIRED_GOOD"	""	""	""	""	"[('android.server.wm.AppConfigurationTests', 25), ('android.server.wm.KeyguardLockedTests', 6), ('android.media.cts.AudioPlaybackConfigurationTest', 3), ('android.media.cts.AudioManagerTest', 2), ('android.graphics.pdf.cts.Utils', 1), ('android.server.wm.SplashscreenTests', 1), ('android.view.cts.ViewAnimationMatrixTest', 1), ('com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite', 1), ('android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackup2Test', 1), ('main.java.com.android.eventlib.EventLogs', 1), ('android.slice.cts.LocalSliceProvider', 1), ('android.jdwptunnel.cts.JdwpTunnelTest', 1)]"	"[('getWidth', 12), ('getHeight', 10), ('next', 7), ('poll', 7), ('getQuerier', 4), ('recycle', 3), ('getName', 3), ('run', 2), ('getClass', 2), ('now', 2), ('get', 2), ('resetLogs', 2), ('onCreate', 2), ('setUp', 2), ('getCacheDir', 1), ('getResources', 1), ('flush', 1), ('Matrix', 1), ('width', 1), ('height', 1), ('waitForEvent', 1), ('withSettings', 1), ('supportsSecureLock', 1)]"	"[('CtsWindowManagerDeviceTestCases', 32), ('CtsMediaTestCases', 5), ('CtsPdfTestCases', 1), ('CtsViewTestCases', 1), ('CtsSliceTestCases', 1), ('CtsJdwpTunnelHostTestCases', 1)]"	""	"android.server.wm.AppConfigurationTests"	"supportsSecureLock"	"CtsWindowManagerDeviceTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 25), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher2/src/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/eventlib/src/main/java/com/android/eventlib/EventLogs.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/slice/src/android/slice/cts/LocalSliceProvider.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1)]"	"[('(26,PIN,/android/graphics/pdf/cts/Utils.java)', 1), ('(3,PIN,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(3,PIN,/android/server/wm/SplashscreenTests.java)', 1), ('(1,PIN,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(3,PIN,/android/media/cts/AudioManagerTest.java)', 1), ('(1,PIN,/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java)', 1), ('(1,PIN,/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java)', 1), ('(2,PIN,/main/java/com/android/eventlib/EventLogs.java)', 1), ('(9,PIN,/android/slice/cts/LocalSliceProvider.java)', 1), ('(1,PIN,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(12,PIN,/android/server/wm/KeyguardLockedTests.java)', 1), ('(32,PIN,/android/server/wm/AppConfigurationTests.java)', 1)]"	"[('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[PIN]:[1]:method_text:[           if (h != null) {                h.getLooper().quit();            }        }    }   ])', 2), ('([2:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[2]:method_text:[tKeyguardShowingAndNotOccluded();        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 2), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[h has     * rotation sensing optimization. So this is listed in cts-known-failures.xml.     */   ])', 2), ('([26:/android/graphics/pdf/cts/Utils.java]:[PIN]:[26]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[PIN]:[1]:method_text:[t HAL, skipping test "" + testName);            return false;        }        return true;    }}])', 1), ('([3:/android/server/wm/SplashscreenTests.java]:[PIN]:[3]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([1:/android/view/cts/ViewAnimationMatrixTest.java]:[PIN]:[1]:method_text:[ j++) {                assertEquals(color, bitmap.getPixel(i, j));            }        }    }}])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[PIN]:[1]:method_text:[        if (!isMusicPlayingBeforeTest) {            assertMusicActive(false);        }    }   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[PIN]:[2]:method_text:[:"" + microphone.getDirectionality());            Log.i(TAG, ""--------------"");        }    }   ])', 1), ('([1:/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java]:[PIN]:[1]:method_text:[new GoNegReqPbcTestCase(context));        sTestSuite.add(new GoNegReqPinTestCase(context));    }}])', 1), ('([1:/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java]:[PIN]:[1]:method_text:[oOriginalList()                .selectByIds(""s3"", ""ms2"")                .areAllDisabled();   }}])', 1), ('([2:/main/java/com/android/eventlib/EventLogs.java]:[PIN]:[2]:method_text:[ed.     */    public E waitForEvent() {        return waitForEvent(DEFAULT_POLL_TIMEOUT);    }}])', 1), ('([9:/android/slice/cts/LocalSliceProvider.java]:[PIN]:[9]:method_text:[CreatePermissionRequest(sliceUri);        return super.onCreatePermissionRequest(sliceUri);    }}])', 1), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[PIN]:[1]:method_text:[ sent big-endian so first byte has sign bit.        assertTrue((is.read() & 0x80) == 0x80);    }}])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[1]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([4:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[4]:method_text:[t contain pinned stack."", WINDOWING_MODE_PINNED,                ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([2:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[2]:method_text:[SHOW_WHEN_LOCKED_ACTIVITY, true);        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[1]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[nResizedFromFullscreen()} but resizing     * from docked state to fullscreen (reverse).     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[;    }    /**     * Tests whether the Display sizes change when rotating the device.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[datesWhenRotatingWhileFullscreen()} but when the Activity     * is in the docked stack.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[tatingWhileDocked()} but when the Activity     * is launched to side from docked stack.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ Activity will be     * relaunched twice and it should have same config as initial one.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ivity with the DialogWhenLarge theme can transform properly when in split     * screen.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ Test that device handles consequent requested orientations and displays the activities.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[should be in portrait"",                ORIENTATION_PORTRAIT, reportedSizes.orientation);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[uested orientations and will not report a config     * change to an invisible activity.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[y visible activity"",                initialOrientation, finalReportedSizes.orientation);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[),                new Point(globalSizeInfo.metricsWidth, globalSizeInfo.metricsHeight));    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[**     * Test that device handles moving between two tasks with different orientations.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[evice is rotated.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[text derived from an application context     * will not change when the device rotates.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[context derived from an activity context     * will not change when the device rotates.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[PIN]:[3]:method_text:[**     * Test that device handles moving between two tasks with different orientations.     */   ])', 1), (""([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[Test that device doesn't change device orientation by app request while in multi-window.     */   ])"", 1), (""([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[Test that device doesn't change device orientation by app request while in multi-window.     */   ])"", 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[  /**     * Test launching an activity which requests specific UI mode during creation.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ dockedActivitySizes);        assertSizesAreSame(dockedActivitySizes, applicationSizes);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[Sizes);        assertSizesAreSane(fullscreenActivitySizes, secondarySplitActivitySizes);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[tivitySession activitySession) {        return activitySession.getAppConfigInfo().sizeInfo;    }}])', 1)]"	""	""	"[('PIN', 44)]"	"[('[android.media.cts.AudioPlaybackConfigurationTest testCallbackMediaPlayerHandler CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testCallbackMediaPlayerRelease CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetAudioDeviceInfoMediaPlayerStart CtsMediaTestCases]', 1), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.view.cts.ViewAnimationMatrixTest testAnimationMatrixClearedWithPassingNull CtsViewTestCases]', 1), ('[android.media.cts.AudioManagerTest testVolume CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetMicrophones CtsMediaTestCases]', 1), ('[com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite getTestId None]', 1), ('[android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackup2Test testPreBackup None]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest testDdmsWaitsForHandshake CtsJdwpTunnelHostTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testEnterPipOverKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedActivityAndPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromFullscreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromDockedStack CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingWhileFullscreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingWhileDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingToSideFromDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSameConfigurationFullSplitFullNoRelaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testDialogWhenLargeSplitSmall CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testFullscreenAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testNonfullscreenAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationRequestConfigChanges CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationRequestConfigClears CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testRotatedInfoWithFixedRotationTransform CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testNonFullscreenActivityPermitted CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testTaskCloseRestoreFixedOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testTaskCloseRestoreFreeOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testFixedOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testTaskMoveToBackOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenPortraitAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenLandscapeAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesTopActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInFreeform CtsWindowManagerDeviceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.5"	"7.1.4.5"	"C-1-2"	"7.1.4.5/C-1-2"	"07010405.670102"	"""C-1-2] MUST have a display whose gamut covers the sRGB color gamut entirely in CIE 1931 xyY space."""	""	""	"CIE RGB"	""	""	""	""	"[('android.graphics.cts.BitmapColorSpaceTest', 41), ('android.graphics.drawable.cts.IconTest', 6), ('android.view.inputmethod.cts.BaseInputConnectionTest', 2), ('android.graphics.cts.PaintFlagsDrawFilterTest', 2), ('android.widget.cts.util.TestUtils', 2), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 2), ('android.media.cts.DecodeAccuracyTestBase', 2), ('android.graphics.pdf.cts.Utils', 1), ('android.server.wm.SplashscreenTests', 1), ('android.view.cts.ViewAnimationMatrixTest', 1), ('android.graphics.cts.VulkanPreTransformTest', 1), ('android.keystore.cts.DESedeCipherTestBase', 1), ('android.jdwptunnel.cts.JdwpTunnelTest', 1), ('android.graphics.cts.ColorMatrixColorFilterTest', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer', 1), ('android.media.cts.DecodeEditEncodeTest', 1), ('android.content.pm.cts.ComponentInfoTest', 1), ('android.accessibilityservice.cts.utils.DisplayUtils', 1), ('android.app.cts.WallpaperColorsTest', 1), ('android.uirendering.cts.testclasses.GradientTests', 1), ('GLtestView', 1), ('android.media.cts.LocalMediaProjectionService', 1), ('android.keystore.cts.BlockCipherTestBase', 1), ('com.android.cts.managedprofile.CrossProfileWidgetTest', 1), ('android.renderscript.cts.TypeTest', 1), ('android.net.wifi.cts.ConnectedNetworkScorerTest', 1), ('android.graphics.cts.BitmapFactory_OptionsTest', 1), ('com.android.compatibility.common.util.BitmapUtils', 1), ('android.content.pm.cts.InstallSessionParamsUnitTest', 1), ('android.graphics.drawable.cts.ThemedDrawableTest', 1), ('android.security.cts.LaunchSomeWhere', 1), ('android.renderscript.cts.refocus.RefocusFilter', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerHostSideTransferTest', 1), ('android.uirendering.cts.testclasses.SweepTests', 1)]"	"[('getColorSpace', 60), ('getWidth', 42), ('getHeight', 38), ('getAssets', 31), ('fail', 28), ('Options', 21), ('elapsedRealtime', 14), ('decoderRelease', 10), ('getConfig', 9), ('release', 8), ('setUp', 7), ('compareBitmaps', 7), ('reset', 6), ('getResources', 5), ('recycle', 5), ('now', 4), ('getIntent', 4), ('startDecoder', 4), ('queueDecoderInputBuffer', 4), ('dequeueDecoderOutputBuffer', 4), ('extractorRelease', 4), ('getClass', 3), ('getName', 3), ('stream', 3), ('getRgbColorSpaces', 3), ('booleanValue', 3), ('getSimpleName', 3), ('flush', 2), ('Matrix', 2), ('run', 2), ('getDevice', 2), ('moveToHomeScreen', 2), ('name', 2), ('findFirst', 2), ('trim', 2), ('createWithNonRgbColorSpace', 2), ('inColorSpaceNotRGB', 2), ('getByteCount', 2), ('rewind', 2), ('asIntBuffer', 2), ('get', 2), ('getPixels', 2), ('toArray', 2), ('ByteArrayOutputStream', 2), ('toByteArray', 2), ('eglGetError', 2), ('startForeground', 2), ('onDestroy', 2), ('createNotificationIcon', 2), ('getBackground', 2), ('getReceiverComponentName', 2), ('myUserId', 2), ('getActivity', 2), ('getApplicationContext', 2), ('tearDown', 2), ('bringActivityToFront', 2), ('getHelper', 2), ('MediaExtractor', 2), ('failToStart', 2), ('PlayerResult', 2), ('getMediaFormat', 2), ('getInputBuffers', 2), ('getSampleTime', 2), ('advance', 2), ('BufferInfo', 2), ('getOutputBuffers', 2), ('clear', 2), ('getAssetFileDescriptor', 2), ('getFileDescriptor', 2), ('getStartOffset', 2), ('getLength', 2), ('close', 2), ('start', 2), ('stop', 2), ('getCacheDir', 1), ('width', 1), ('height', 1), ('virtualMachineManager', 1), ('attachingConnectors', 1), ('transport', 1), ('defaultArguments', 1), ('eventRequestManager', 1), ('suspend', 1), ('allClasses', 1), ('createClassPrepareRequest', 1), ('enable', 1), ('resume', 1), ('eventQueue', 1), ('remove', 1), ('request', 1), ('referenceType', 1), ('Object', 1), ('setUpExtrinsics', 1), ('getLocation', 1), ('getRingRotation', 1), ('doPreRenderingSetup', 1), ('createWithColorSpace', 1), ('createAlpha8ColorSpace', 1), ('createDefaultColorSpace', 1), ('createWithoutColorSpace', 1), ('createWithNoTransferParameters', 1), ('createFromSourceWithColorSpace', 1), ('sRGB', 1), ('extendedSRGB', 1), ('linearSRGB', 1), ('reconfigure', 1), ('reuse', 1), ('getPixel', 1), ('setPixel', 1), ('setPixels', 1), ('writeColorSpace', 1), ('obtain', 1), ('p3rgb565', 1), ('guessSRGB', 1), ('guess16bitUntagged', 1), ('guessProPhotoRGB', 1), ('guessAdobeRGB', 1), ('guessCMYK', 1), ('inColorSpaceP3ToSRGB', 1), ('inColorSpaceSRGBToP3', 1), ('inColorSpaceWith16BitSrc', 1), ('inColorSpaceWith16BitDst', 1), ('inColorSpaceWith16BitSrcAndDst', 1), ('inColorSpaceWith16BitWithDecreasedGamut', 1), ('inColorSpace565', 1), ('inColorSpaceNoTransferParameters', 1), ('copyF16', 1), ('copyAlpha8', 1), ('copy', 1), ('compressFormatsAndColorSpaces', 1), ('values', 1), ('Rect', 1), ('getWindow', 1), ('getDecorView', 1), ('getSurface', 1), ('eglChooseConfig', 1), ('GLSurfaceView', 1), ('getHolder', 1), ('ContextFactory', 1), ('Renderer', 1), ('chooseConfig', 1), ('step', 1), ('LocalBinder', 1), ('getService', 1), ('build', 1), ('BitmapUtils', 1), ('Random', 1), ('mkdirs', 1), ('printStackTrace', 1), ('AbandonAllPackageSessionsRule', 1), ('getInstrumentation', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getPackageInstaller', 1), ('getParameters', 1), ('getMySessions', 1), ('getSessionId', 1), ('waitForDeviceAvailable', 1), ('getFocusLayer', 1), ('extractResultImage', 1)]"	"[('CtsGraphicsTestCases', 53), ('CtsMediaTestCases', 3), ('CtsKeystoreTestCases', 2), ('CtsContentTestCases', 2), ('CtsUiRenderingTestCases', 2), ('CtsInputMethodTestCases', 2), ('CtsRenderscriptTestCases', 2), ('CtsWidgetTestCases', 2), ('CtsPdfTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsViewTestCases', 1), ('CtsJdwpTunnelHostTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsAppTestCases', 1), ('CtsWifiTestCases', 1), ('CtsSecurityBulletinHostTestCases', 1), ('CtsDevicePolicyManagerTestCases', 1)]"	""	"android.uirendering.cts.testclasses.SweepTests"	"getHeight"	"CtsUiRenderingTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapColorSpaceTest.java', 41), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/IconTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/BaseInputConnectionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintFlagsDrawFilterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/util/TestUtils.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeAccuracyTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanPreTransformTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/DESedeCipherTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ColorMatrixColorFilterTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ComponentInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/utils/DisplayUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/WallpaperColorsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/GradientTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sustainedperf/shadertoy_android/src/GLtestView.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/LocalMediaProjectionService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/BlockCipherTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileWidgetTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/TypeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConnectedNetworkScorerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapFactory_OptionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/BitmapUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/InstallSessionParamsUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/ThemedDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/LaunchSomeWhere.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusFilter.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/SweepTests.java', 1)]"	"[('(6,RGB,/android/graphics/pdf/cts/Utils.java)', 1), ('(2,RGB,/android/server/wm/SplashscreenTests.java)', 1), ('(1,RGB,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(1,RGB,/android/graphics/cts/VulkanPreTransformTest.java)', 1), ('(1,CIE,/android/keystore/cts/DESedeCipherTestBase.java)', 1), ('(1,CIE,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(2,RGB,/android/graphics/cts/ColorMatrixColorFilterTest.java)', 1), ('(1,RGB,/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java)', 1), ('(4,RGB,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(2,CIE,/android/graphics/cts/BitmapColorSpaceTest.java)', 1), ('(180,RGB,/android/graphics/cts/BitmapColorSpaceTest.java)', 1), ('(1,RGB,/android/content/pm/cts/ComponentInfoTest.java)', 1), ('(1,RGB,/android/accessibilityservice/cts/utils/DisplayUtils.java)', 1), ('(1,RGB,/android/app/cts/WallpaperColorsTest.java)', 1), ('(1,RGB,/android/uirendering/cts/testclasses/GradientTests.java)', 1), ('(6,RGB,/android/graphics/drawable/cts/IconTest.java)', 1), ('(5,RGB,/GLtestView.java)', 1), ('(2,CIE,/android/view/inputmethod/cts/BaseInputConnectionTest.java)', 1), ('(1,RGB,/android/media/cts/LocalMediaProjectionService.java)', 1), ('(4,RGB,/android/graphics/cts/PaintFlagsDrawFilterTest.java)', 1), ('(4,CIE,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(1,CIE,/com/android/cts/managedprofile/CrossProfileWidgetTest.java)', 1), ('(3,RGB,/android/renderscript/cts/TypeTest.java)', 1), ('(1,CIE,/android/widget/cts/util/TestUtils.java)', 1), ('(4,RGB,/android/widget/cts/util/TestUtils.java)', 1), ('(1,CIE,/android/net/wifi/cts/ConnectedNetworkScorerTest.java)', 1), ('(8,RGB,/android/graphics/cts/BitmapFactory_OptionsTest.java)', 1), ('(4,RGB,/com/android/compatibility/common/util/BitmapUtils.java)', 1), ('(1,RGB,/android/content/pm/cts/InstallSessionParamsUnitTest.java)', 1), ('(1,RGB,/android/graphics/drawable/cts/ThemedDrawableTest.java)', 1), ('(2,CIE,/android/security/cts/LaunchSomeWhere.java)', 1), ('(2,RGB,/android/renderscript/cts/refocus/RefocusFilter.java)', 1), ('(2,CIE,/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java)', 1), ('(12,CIE,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(1,RGB,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(12,CIE,/android/media/cts/DecodeAccuracyTestBase.java)', 1), ('(39,RGB,/android/media/cts/DecodeAccuracyTestBase.java)', 1), ('(1,RGB,/android/uirendering/cts/testclasses/SweepTests.java)', 1)]"	"[('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[2]:method_text:[e.Named.DISPLAY_P3), cs);        } catch (IOException e) {            fail();        }    }   ])', 3), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[3]:method_text:[ace, opts.outColorSpace);        } catch (IOException e) {            fail();        }    }   ])', 2), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[1]:method_text:[deStream(in, null, opts);        } catch (IOException e) {            fail();        }    }   ])', 2), ('([6:/android/graphics/pdf/cts/Utils.java]:[RGB]:[6]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([2:/android/server/wm/SplashscreenTests.java]:[RGB]:[2]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([1:/android/view/cts/ViewAnimationMatrixTest.java]:[RGB]:[1]:method_text:[ j++) {                assertEquals(color, bitmap.getPixel(i, j));            }        }    }}])', 1), ('([1:/android/graphics/cts/VulkanPreTransformTest.java]:[RGB]:[1]:method_text:[iff(bitmap.getPixel(width - 1, height - 1), 0, 255, 0);        }        return diff < 10;    }}])', 1), ('([1:/android/keystore/cts/DESedeCipherTestBase.java]:[CIE]:[1]:method_text:[            super.testUpdateWithEmptyInputReturnsCorrectValue();        }    }    @Override   ])', 1), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[CIE]:[1]:method_text:[of the activity     * class and put and wait for a breakpoint on the onCreate function.     */   ])', 1), ('([2:/android/graphics/cts/ColorMatrixColorFilterTest.java]:[RGB]:[2]:method_text:[rawPoint(0, 0, paint);        ColorUtils.verifyColor(Color.BLUE, bitmap.getPixel(0, 0));    }   ])', 1), ('([1:/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java]:[RGB]:[1]:method_text:[        yScale * height / 2.0f,                near, far);        return projectionMatrix;    }}])', 1), ('([4:/android/media/cts/DecodeEditEncodeTest.java]:[RGB]:[4]:method_text:[                  throw new RuntimeException(ioe);                }            }        }    }}])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[CIE]:[1]:method_text:[Bitmap.Config.ARGB_8888, true,                ColorSpace.get(ColorSpace.Named.CIE_LAB));    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[CIE]:[1]:method_text:[deStream(in, null, opts);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([26:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[26]:method_text:[                    assertSame(linearRgb, cs);                }            }        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[1]:method_text:[tmap.Config.ALPHA_8, true, cs);            assertNull(bitmap.getColorSpace());        }    }   ])', 1), ('([5:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[5]:method_text:[ap(32, 32, config, true);            assertSame(sRGB, bitmap.getColorSpace());        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[1]:method_text:[tColorSpace() {        Bitmap.createBitmap(32, 32, Bitmap.Config.ARGB_8888, true, null);    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[2]:method_text:[Bitmap.Config.ARGB_8888, true,                ColorSpace.get(ColorSpace.Named.CIE_LAB));    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[2]:method_text:[       x -> Math.pow(x, 1.0f / 2.2f), x -> Math.pow(x, 2.2f),                    0, 1));    }   ])', 1), ('([11:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[11]:method_text:[etColorSpace());                        break;                }            }        }    }   ])', 1), ('([4:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[4]:method_text:[        assertNotNull(cs);        assertSame(ColorSpace.get(ColorSpace.Named.SRGB), cs);    }   ])', 1), ('([5:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[5]:method_text:[amed.EXTENDED_SRGB), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([8:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[8]:method_text:[            this.name = name;            this.colorSpace = ColorSpace.get(e);        }    };   ])', 1), ('([5:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[5]:method_text:[h (IOException e) {                    fail();                }            }        }    }   ])', 1), ('([7:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[7]:method_text:[255.0f / alpha,                alpha, premulCS, ColorSpace.get(ColorSpace.Named.SRGB)));    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[1]:method_text:[         int pixel = pixels[i];            almostEqual(expected, pixel, 3, i);        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[1]:method_text:[Stored as RGBA        ColorUtils.verifyColor(expectedColor, dst.asIntBuffer().get(), 1);    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[1]:method_text:[red as RGBA            ColorUtils.verifyColor(expectedColor, buffer.get(), 1);        }    }   ])', 1), ('([5:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[5]:method_text:[ace();        assertNotNull(cs);        assertSame(expected, cs);        p.recycle();    }   ])', 1), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[3]:method_text:[orSpace.Named.SRGB), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[2]:method_text:[amed.EXTENDED_SRGB), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[2]:method_text:[amed.PRO_PHOTO_RGB), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[3]:method_text:[ce.Named.ADOBE_RGB), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[1]:method_text:[orSpace.Named.SRGB), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[3]:method_text:[fyGetPixel(b, 0x2ff00ff);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[2]:method_text:[yGetPixel(b, 0x75fb4cff);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[3]:method_text:[amed.EXTENDED_SRGB), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[2]:method_text:[ace, opts.outColorSpace);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([13:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[13]:method_text:[    assertSame(srcCS[i], copy.getColorSpace());                }            }        }    }   ])', 1), ('([6:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[6]:method_text:[   ColorSpace.get(ColorSpace.Named.SRGB), copy2.getColorSpace());            }        }    }   ])', 1), ('([10:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[10]:method_text:[itmap.CompressFormat.values(),                BitmapTest.getRgbColorSpaces().toArray());    }   ])', 1), ('([12:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[12]:method_text:[      }        } catch (IOException e) {            fail(""Failed with "" + e);        }    }   ])', 1), ('([5:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[5]:method_text:[        }        } catch (Exception e) {            fail(""Failed with "" + e);        }    }   ])', 1), ('([6:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[6]:method_text:[ot convert properly"", expected,                    dst.getColor(0, 0), .001f);        }    }   ])', 1), ('([8:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[8]:method_text:[ = true;                break;            }        }        assertTrue(foundOtherColor);    }}])', 1), ('([1:/android/content/pm/cts/ComponentInfoTest.java]:[RGB]:[1]:method_text:[d.setBounds(0, 0, size, size);        d.draw(new Canvas(bitmap));        return bitmap;    }   ])', 1), ('([1:/android/accessibilityservice/cts/utils/DisplayUtils.java]:[RGB]:[1]:method_text:[ger.unregisterDisplayListener(listener);            }            return display;        }    }}])', 1), ('([1:/android/app/cts/WallpaperColorsTest.java]:[RGB]:[1]:method_text:[NotNull(colors.getPrimaryColor());        Assert.assertNull(colors.getSecondaryColor());    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/GradientTests.java]:[RGB]:[1]:method_text:[ srcCanvas.drawRect(0f, 0f, TEST_WIDTH, TEST_HEIGHT, srcPaint);        return srcBitmap;    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[RGB]:[1]:method_text:[            Icon.createWithBitmap(Bitmap.createBitmap(16, 16, Bitmap.Config.ARGB_8888)));    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[RGB]:[1]:method_text:[thAdaptiveBitmap(                Bitmap.createBitmap(16, 16, Bitmap.Config.ARGB_8888)));    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[RGB]:[1]:method_text:[Thread.sleep(TIMEOUT_MS);        verify(mockListener, times(1)).onDrawableLoaded(any());    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[RGB]:[1]:method_text:[d timeout        Thread.sleep(TIMEOUT_MS);        verify(mockRunnable, times(1)).run();    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[RGB]:[1]:method_text:[6, 16, Bitmap.Config.ARGB_8888));        assertEquals(Icon.TYPE_BITMAP, icon.getType());    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[RGB]:[1]:method_text:[tmap.Config.ARGB_8888));        assertEquals(Icon.TYPE_ADAPTIVE_BITMAP, icon.getType());    }   ])', 1), ('([5:/GLtestView.java]:[RGB]:[5]:method_text:[blic void onSurfaceCreated(GL10 gl, EGLConfig config) {            // Do nothing.        }    }}])', 1), ('([1:/android/view/inputmethod/cts/BaseInputConnectionTest.java]:[CIE]:[1]:method_text:[    * Tests {@link BaseInputConnection#deleteSurroundingText(int, int)} comprehensively.     */   ])', 1), ('([1:/android/view/inputmethod/cts/BaseInputConnectionTest.java]:[CIE]:[1]:method_text:[BaseInputConnection#deleteSurroundingTextInCodePoints(int, int)}     * comprehensively.     */   ])', 1), ('([1:/android/media/cts/LocalMediaProjectionService.java]:[RGB]:[1]:method_text:[ext(""Context"")                .build();        startForeground(2 /* id */, notification);    }}])', 1), ('([2:/android/graphics/cts/PaintFlagsDrawFilterTest.java]:[RGB]:[2]:method_text:[assertTrue(rect.top >= TEXT_Y);    }    // Tests that FILTER_BITMAP_FLAG is handled properly.   ])', 1), ('([2:/android/graphics/cts/PaintFlagsDrawFilterTest.java]:[RGB]:[2]:method_text:[           assertTrue(color == Color.BLACK || color == Color.WHITE);            }        }    }}])', 1), ('([4:/android/keystore/cts/BlockCipherTestBase.java]:[CIE]:[4]:method_text:[    assertEquals(0, update(ByteBuffer.allocate(1), ByteBuffer.allocate(getBlockSize())));    }   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileWidgetTest.java]:[CIE]:[1]:method_text:[ and verifies that     * if was added successfully and can be found inside the profile.     */   ])', 1), ('([3:/android/renderscript/cts/TypeTest.java]:[RGB]:[3]:method_text:[lderHelper(Element.TYPE(mRS));        // Add some complex and struct types to test here    }   ])', 1), ('([1:/android/widget/cts/util/TestUtils.java]:[CIE]:[1]:method_text:[                    ((BitmapDrawable) compoundDrawablesRelative[3]).getBitmap());        }    }}])', 1), ('([4:/android/widget/cts/util/TestUtils.java]:[RGB]:[4]:method_text:[                    ((BitmapDrawable) compoundDrawablesRelative[3]).getBitmap());        }    }}])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[CIE]:[1]:method_text:[* Tests the {@link android.net.wifi.WifiManager#updateWifiUsabilityScore(int, int, int)}     */   ])', 1), ('([8:/android/graphics/cts/BitmapFactory_OptionsTest.java]:[RGB]:[8]:method_text:[s);        assertNull(b);        assertEquals(Bitmap.Config.ARGB_8888, options.outConfig);    }}])', 1), ('([4:/com/android/compatibility/common/util/BitmapUtils.java]:[RGB]:[4]:method_text:[Color.blue(actual) - Color.blue(expect);            return r * r + g * g + b * b;        }    }}])', 1), ('([1:/android/content/pm/cts/InstallSessionParamsUnitTest.java]:[RGB]:[1]:method_text:[onId) {                return sessionInfo;            }        }        return null;    }   ])', 1), ('([1:/android/graphics/drawable/cts/ThemedDrawableTest.java]:[RGB]:[1]:method_text:[(bitmap);        d.draw(canvas);        assertEquals(0xff0000ff, bitmap.getPixel(32, 32));    }}])', 1), ('([2:/android/security/cts/LaunchSomeWhere.java]:[CIE]:[2]:method_text:[    if (device.waitForDeviceNotAvailable(9_000))            device.waitForDeviceAvailable();    }])', 1), ('([2:/android/renderscript/cts/refocus/RefocusFilter.java]:[RGB]:[2]:method_text:[ filterLayerInFrontOfFocalDepth();  protected abstract void finalizeFuzzyImageUsingSharpImage();}])', 1), ('([2:/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java]:[CIE]:[2]:method_text:[NCOMING_TEST);            installAppAsUser(TRANSFER_OWNER_INCOMING_APK, mUserId);        }    }}])', 1), ('([12:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[CIE]:[12]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[RGB]:[1]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([12:/android/media/cts/DecodeAccuracyTestBase.java]:[CIE]:[12]:method_text:[blic static boolean isVideo(String mimeType) {        return mimeType.startsWith(""video"");    }}])', 1), ('([39:/android/media/cts/DecodeAccuracyTestBase.java]:[RGB]:[39]:method_text:[blic static boolean isVideo(String mimeType) {        return mimeType.startsWith(""video"");    }}])', 1), ('([1:/android/uirendering/cts/testclasses/SweepTests.java]:[RGB]:[1]:method_text:[LT_MSSIM_COMPARER = new BitmapComparer[] {            new MSSIMComparer(HIGH_THRESHOLD)    };   ])', 1)]"	""	""	"[('RGB', 70), ('CIE', 14)]"	"[('[android.graphics.cts.BitmapColorSpaceTest isMutable CtsGraphicsTestCases]', 2), ('[android.widget.cts.util.TestUtils isVisible CtsWidgetTestCases]', 2), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 2), ('[android.media.cts.DecodeAccuracyTestBase isAbrEnabled CtsMediaTestCases]', 2), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.view.cts.ViewAnimationMatrixTest testAnimationMatrixClearedWithPassingNull CtsViewTestCases]', 1), ('[android.graphics.cts.VulkanPreTransformTest testVulkanPreTransformNotSetToMatchCurrentTransform CtsGraphicsTestCases]', 1), ('[android.keystore.cts.DESedeCipherTestBase testUpdateDoesNotProduceOutputWhenInsufficientInput CtsKeystoreTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest disable CtsJdwpTunnelHostTestCases]', 1), ('[android.graphics.cts.ColorMatrixColorFilterTest testColorMatrixColorFilter CtsGraphicsTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer doTestSpecificRendering None]', 1), ('[android.media.cts.DecodeEditEncodeTest testVideoEdit720p CtsMediaTestCases]', 1), ('[android.graphics.cts.BitmapColorSpaceTest test16bitHardware CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapColorSpaceTest testProPhoto CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapColorSpaceTest testGrayscaleProfile CtsGraphicsTestCases]', 1), ('[android.content.pm.cts.ComponentInfoTest testConstructor CtsContentTestCases]', 1), ('[android.accessibilityservice.cts.utils.DisplayUtils getDisplay CtsAccessibilityServiceTestCases]', 1), ('[android.app.cts.WallpaperColorsTest fromBitmapTest CtsAppTestCases]', 1), ('[android.uirendering.cts.testclasses.GradientTests testMismatchColorsAndStopsThrows CtsUiRenderingTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testBitmapIcon CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testAdaptiveBitmapIcon CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testLoadDrawableAsync CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testLoadDrawableAsyncWithMessage CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testBitmapIcon_getType CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testAdaptiveBitmapIcon_getType CtsGraphicsTestCases]', 1), ('[android.view.inputmethod.cts.BaseInputConnectionTest testReportFullscreenMode CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.BaseInputConnectionTest testDeleteSurroundingText CtsInputMethodTestCases]', 1), ('[android.graphics.cts.PaintFlagsDrawFilterTest testPaintFlagsDrawFilter CtsGraphicsTestCases]', 1), ('[android.graphics.cts.PaintFlagsDrawFilterTest testPaintFlagsDrawFilter2 CtsGraphicsTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testUpdateDoesNotProduceOutputWhenInsufficientInput CtsKeystoreTestCases]', 1), ('[android.renderscript.cts.TypeTest testTypeBuilder CtsRenderscriptTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testWifiUsabilityStatsEntry CtsWifiTestCases]', 1), ('[android.graphics.cts.BitmapFactory_OptionsTest testExtractMetaData CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.ThemedDrawableTest testVectorDrawableWithStateListColorThemeAttrs CtsGraphicsTestCases]', 1), ('[android.renderscript.cts.refocus.RefocusFilter finish CtsRenderscriptTestCases]', 1), ('[android.uirendering.cts.testclasses.SweepTests DisplayModifier CtsUiRenderingTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.2  . IEEE 802.11"	"7.4.2"	"C-1-8"	"7.4.2/C-1-8"	"07040200.670108"	"""C-1-8] MUST use one consistent MAC address (SHOULD NOT randomize MAC address halfway through a scan)."""	""	""	"MAC"	""	""	""	""	"[('android.graphics.drawable.cts.IconTest', 9), ('android.widget.cts.SearchView_CursorTest', 3), ('android.graphics.cts.VulkanPreTransformTest', 3), ('android.widget.cts.RelativeLayout_LayoutParamsTest', 3), ('android.server.wm.lifecycle.ActivityLifecycleTests', 3), ('com.android.cts.deviceandprofileowner.WifiTest', 3), ('android.database.cts.AbstractCursor_SelfContentObserverTest', 2), ('android.media.cts.FaceDetectorTest', 2), ('com.android.server.cts.device.graphicsstats.SimpleDrawFrameTests', 2), ('android.app.cts.PipNotSupportedActivityTest', 2), ('com.android.compatibility.common.deviceinfo.TestDeviceInfo', 1), ('android.media.cts.AudioManagerTest', 1), ('android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation', 1), ('android.jdwptunnel.cts.JdwpTunnelTest', 1), ('android.server.wm.AppConfigurationTests', 1), ('android.assist.cts.TextViewTest', 1), ('com.android.cts.verifier.notifications.InteractiveVerifierActivity', 1), ('com.android.cts.verifier.security.FingerprintBoundKeysTest', 1), ('android.view.cts.KeyEventInjectionTest', 1), ('android.view.cts.ASurfaceControlTest', 1), ('com.android.cts.verifier.AbstractTestListActivity', 1), ('android.location.cts.gnss.asn1.supl2.supl_triggered_start.WLANAreaId', 1), ('android.preference.cts.SwitchPreferenceTest', 1), ('android.content.pm.cts.ResolveInfoTest', 1)]"	"[('setUp', 8), ('getActivity', 5), ('getInstrumentation', 4), ('now', 4), ('getName', 3), ('enoughToFilter', 3), ('setup', 3), ('stream', 3), ('tearDown', 3), ('endGroup', 2), ('super', 2), ('getTag', 2), ('toLowerCase', 2), ('moveToHomeScreen', 2), ('name', 2), ('findFirst', 2), ('trim', 2), ('clear', 2), ('getRenderedFramesCount', 2), ('getDroppedReportsCount', 2), ('getClass', 1), ('startGroup', 1), ('endArray', 1), ('StringBuilder', 1), ('toString', 1), ('WcdmaCellInformation', 1), ('getChildCount', 1), ('getCursor', 1), ('getDevice', 1), ('virtualMachineManager', 1), ('attachingConnectors', 1), ('transport', 1), ('defaultArguments', 1), ('eventRequestManager', 1), ('suspend', 1), ('allClasses', 1), ('createClassPrepareRequest', 1), ('enable', 1), ('resume', 1), ('eventQueue', 1), ('remove', 1), ('request', 1), ('referenceType', 1), ('getAction', 1), ('autoStart', 1), ('next', 1), ('Intent', 1), ('getTargetContext', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('getUiAutomation', 1), ('waitForReady', 1), ('getSimpleName', 1), ('getPackage', 1), ('WLANAreaId', 1)]"	"[('CtsGraphicsTestCases', 12), ('CtsWidgetTestCases', 6), ('CtsWindowManagerDeviceTestCases', 4), ('CtsMediaTestCases', 3), ('CtsDatabaseTestCases', 2), ('CtsLocationGnssTestCases', 2), ('CtsViewTestCases', 2), ('CtsAppTestCases', 2), ('CtsJdwpTunnelHostTestCases', 1), ('CtsAssistTestCases', 1), ('CtsPreferenceTestCases', 1), ('CtsContentTestCases', 1)]"	""	"android.content.pm.cts.ResolveInfoTest"	"getTag"	"CtsContentTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/IconTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanPreTransformTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RelativeLayout_LayoutParamsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTests.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/WifiTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/AbstractCursor_SelfContentObserverTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/FaceDetectorTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/apps/graphicsstatsapp/src/com/android/server/cts/device/graphicsstats/SimpleDrawFrameTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/PipNotSupportedActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/device-info/tests/src/com/android/compatibility/common/deviceinfo/TestDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/assist/src/android/assist/cts/TextViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/notifications/InteractiveVerifierActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/FingerprintBoundKeysTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyEventInjectionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/AbstractTestListActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_triggered_start/WLANAreaId.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/preference/src/android/preference/cts/SwitchPreferenceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ResolveInfoTest.java', 1)]"	"[('(2,MAC,/com/android/compatibility/common/deviceinfo/TestDeviceInfo.java)', 1), ('(4,MAC,/android/database/cts/AbstractCursor_SelfContentObserverTest.java)', 1), ('(3,MAC,/android/media/cts/AudioManagerTest.java)', 1), ('(48,MAC,/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java)', 1), ('(13,MAC,/android/widget/cts/SearchView_CursorTest.java)', 1), ('(3,MAC,/android/graphics/cts/VulkanPreTransformTest.java)', 1), ('(26,MAC,/android/widget/cts/RelativeLayout_LayoutParamsTest.java)', 1), ('(7,MAC,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(5,MAC,/android/server/wm/AppConfigurationTests.java)', 1), ('(1,MAC,/android/assist/cts/TextViewTest.java)', 1), ('(2,MAC,/com/android/cts/verifier/notifications/InteractiveVerifierActivity.java)', 1), ('(4,MAC,/android/media/cts/FaceDetectorTest.java)', 1), ('(12,MAC,/com/android/cts/verifier/security/FingerprintBoundKeysTest.java)', 1), ('(12,MAC,/android/server/wm/lifecycle/ActivityLifecycleTests.java)', 1), ('(5,MAC,/android/view/cts/KeyEventInjectionTest.java)', 1), ('(3,MAC,/com/android/server/cts/device/graphicsstats/SimpleDrawFrameTests.java)', 1), ('(5,MAC,/android/view/cts/ASurfaceControlTest.java)', 1), ('(13,MAC,/com/android/cts/deviceandprofileowner/WifiTest.java)', 1), ('(4,MAC,/android/app/cts/PipNotSupportedActivityTest.java)', 1), ('(17,MAC,/android/graphics/drawable/cts/IconTest.java)', 1), ('(1,MAC,/com/android/cts/verifier/AbstractTestListActivity.java)', 1), ('(35,MAC,/android/location/cts/gnss/asn1/supl2/supl_triggered_start/WLANAreaId.java)', 1), ('(4,MAC,/android/preference/cts/SwitchPreferenceTest.java)', 1), ('(1,MAC,/android/content/pm/cts/ResolveInfoTest.java)', 1)]"	"[('([1:/android/graphics/drawable/cts/IconTest.java]:[MAC]:[1]:method_text:[ntUri(file.toURI().toString()));        } finally {            file.delete();        }    }   ])', 2), ('([1:/android/graphics/drawable/cts/IconTest.java]:[MAC]:[1]:method_text:[ePath, icon.getUri().getPath());        } finally {            file.delete();        }    }   ])', 2), ('([2:/com/android/compatibility/common/deviceinfo/TestDeviceInfo.java]:[MAC]:[2]:method_text:[sult(""max_length_string"", sb.toString());        store.addArrayResult(""max_num_ints"", arr);    }}])', 1), ('([2:/android/database/cts/AbstractCursor_SelfContentObserverTest.java]:[MAC]:[2]:method_text:[kAbstractCursor mac = new MockAbstractCursor();        mac.getMockSelfContentObserver();    }   ])', 1), ('([2:/android/database/cts/AbstractCursor_SelfContentObserverTest.java]:[MAC]:[2]:method_text:[ = mac.getMockSelfContentObserver();        assertFalse(msc.deliverSelfNotifications());    }   ])', 1), ('([3:/android/media/cts/AudioManagerTest.java]:[MAC]:[3]:method_text:[terruptedException e) { }                return mIntentReceived;            }        }    }   ])', 1), ('([48:/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java]:[MAC]:[48]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([7:/android/widget/cts/SearchView_CursorTest.java]:[MAC]:[7]:method_text:[    mSearchView.setSuggestionsAdapter(mSuggestionsAdapter);        });    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/SearchView_CursorTest.java]:[MAC]:[4]:method_text:[times(1)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }   ])', 1), ('([2:/android/widget/cts/SearchView_CursorTest.java]:[MAC]:[2]:method_text:[, times(2)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }}])', 1), ('([1:/android/graphics/cts/VulkanPreTransformTest.java]:[MAC]:[1]:method_text:[ {        Log.d(TAG, ""setUp!"");        mContext = InstrumentationRegistry.getContext();    }   ])', 1), ('([1:/android/graphics/cts/VulkanPreTransformTest.java]:[MAC]:[1]:method_text:[ivity.testVulkanPreTransform(true);        sActivity.finish();        sActivity = null;    }   ])', 1), ('([1:/android/graphics/cts/VulkanPreTransformTest.java]:[MAC]:[1]:method_text:[iff(bitmap.getPixel(width - 1, height - 1), 0, 255, 0);        }        return diff < 10;    }}])', 1), ('([4:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[MAC]:[4]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([12:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[MAC]:[12]:method_text:[IGN_TOP]);        assertEquals(R.id.relative_view3, rules[RelativeLayout.ALIGN_BOTTOM]);    }   ])', 1), ('([10:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[MAC]:[10]:method_text:[t.ALIGN_BOTTOM]);        layoutParams.resolveLayoutDirection(View.LAYOUT_DIRECTION_LTR);    }   ])', 1), ('([7:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[MAC]:[7]:method_text:[of the activity     * class and put and wait for a breakpoint on the onCreate function.     */   ])', 1), ('([5:/android/server/wm/AppConfigurationTests.java]:[MAC]:[5]:method_text:[tivitySession activitySession) {        return activitySession.getAppConfigInfo().sizeInfo;    }}])', 1), ('([1:/android/assist/cts/TextViewTest.java]:[MAC]:[1]:method_text:[le.putInt(Utils.SCROLL_Y_POSITION, scrollY);        m3pActivityCallback.sendResult(bundle);    }}])', 1), ('([2:/com/android/cts/verifier/notifications/InteractiveVerifierActivity.java]:[MAC]:[2]:method_text:[logFail();                status = RETEST;                delay();            }        }    }}])', 1), ('([3:/android/media/cts/FaceDetectorTest.java]:[MAC]:[3]:method_text:[ void tearDown() throws Exception {        super.tearDown();        mActivity.finish();    }   ])', 1), ('([1:/android/media/cts/FaceDetectorTest.java]:[MAC]:[1]:method_text:[      Thread.sleep(waitMsec);        assertTrue(mActivity.getDetectedFaces().size() == 5);    }}])', 1), ('([12:/com/android/cts/verifier/security/FingerprintBoundKeysTest.java]:[MAC]:[12]:method_text:[etMessage(R.string.sec_fp_dialog_message);            return builder.create();        }    }}])', 1), ('([4:/android/server/wm/lifecycle/ActivityLifecycleTests.java]:[MAC]:[4]:method_text:[mptySequence(SecondActivity.class, getLifecycleLog(),                ""destroyOnBottom"");    }   ])', 1), ('([4:/android/server/wm/lifecycle/ActivityLifecycleTests.java]:[MAC]:[4]:method_text:[slucentCallbackTrackingActivity.class,                getLifecycleLog(), ""finishBelow"");    }   ])', 1), ('([4:/android/server/wm/lifecycle/ActivityLifecycleTests.java]:[MAC]:[4]:method_text:[sertEmptySequence(FirstActivity.class, getLifecycleLog(),                ""finishBelow"");    }   ])', 1), ('([5:/android/view/cts/KeyEventInjectionTest.java]:[MAC]:[5]:method_text:[nts.clear();    }    /**     * Long press event can be injected through UiAutomation     */   ])', 1), ('([2:/com/android/server/cts/device/graphicsstats/SimpleDrawFrameTests.java]:[MAC]:[2]:method_text:[ctedFrameCount + 5));        assertThat(activity.getDroppedReportsCount()).isEqualTo(0);    }   ])', 1), ('([1:/com/android/server/cts/device/graphicsstats/SimpleDrawFrameTests.java]:[MAC]:[1]:method_text:[getActivity();        activity.waitForReady();        activity.drawFrames(new int[10]);    }   ])', 1), ('([5:/android/view/cts/ASurfaceControlTest.java]:[MAC]:[5]:method_text:[derCallback(callback);        mActivity.verifyTest(surfaceHolderCallback, pixelChecker);    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/WifiTest.java]:[MAC]:[2]:method_text:[        mDevicePolicyManager.removeKeyPair(ADMIN, TEST_ALIAS);        super.tearDown();    }   ])', 1), ('([8:/com/android/cts/deviceandprofileowner/WifiTest.java]:[MAC]:[8]:method_text:[ned an empty string.  WiFi not enabled?"",                TextUtils.isEmpty(macAddress));    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/WifiTest.java]:[MAC]:[3]:method_text:[e able to get the MAC address"");        } catch (SecurityException expected) {        }    }   ])', 1), ('([2:/android/app/cts/PipNotSupportedActivityTest.java]:[MAC]:[2]:method_text:[Up();        mInstrumentation = getInstrumentation();        mActivity = getActivity();    }   ])', 1), ('([2:/android/app/cts/PipNotSupportedActivityTest.java]:[MAC]:[2]:method_text:[ctureInPictureMode());            }        });        mInstrumentation.waitForIdleSync();    }}])', 1), ('([4:/android/graphics/drawable/cts/IconTest.java]:[MAC]:[4]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([2:/android/graphics/drawable/cts/IconTest.java]:[MAC]:[2]:method_text:[on.createWithResource(                mActivity.getPackageName(), R.drawable.bmp_test));    }   ])', 1), ('([2:/android/graphics/drawable/cts/IconTest.java]:[MAC]:[2]:method_text:[Thread.sleep(TIMEOUT_MS);        verify(mockListener, times(1)).onDrawableLoaded(any());    }   ])', 1), ('([2:/android/graphics/drawable/cts/IconTest.java]:[MAC]:[2]:method_text:[d timeout        Thread.sleep(TIMEOUT_MS);        verify(mockRunnable, times(1)).run();    }   ])', 1), ('([3:/android/graphics/drawable/cts/IconTest.java]:[MAC]:[3]:method_text:[ity(icon);        assertTrue(icon.loadDrawable(mActivity) instanceof AdaptiveIconDrawable);    }}])', 1), ('([1:/com/android/cts/verifier/AbstractTestListActivity.java]:[MAC]:[1]:method_text:[LICKED_COORDINATE;                }                return false;            }        });    }}])', 1), ('([35:/android/location/cts/gnss/asn1/supl2/supl_triggered_start/WLANAreaId.java]:[MAC]:[35]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([4:/android/preference/cts/SwitchPreferenceTest.java]:[MAC]:[4]:method_text:[nce(                ""switch_preference"");        mResources = mActivity.getResources();    }   ])', 1), ('([1:/android/content/pm/cts/ResolveInfoTest.java]:[MAC]:[1]:method_text:[alled;        public void println(String x) {            isPrintlnCalled = true;        }    }}])', 1)]"	""	""	"[('MAC', 46)]"	"[('[android.graphics.cts.VulkanPreTransformTest testVulkanPreTransformSetToMatchCurrentTransform CtsGraphicsTestCases]', 2), ('[android.database.cts.AbstractCursor_SelfContentObserverTest testConstructor CtsDatabaseTestCases]', 1), ('[android.database.cts.AbstractCursor_SelfContentObserverTest testDeliverSelfNotifications CtsDatabaseTestCases]', 1), ('[android.media.cts.AudioManagerTest testSpeakerphoneIntent CtsMediaTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionSelection CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionEnterKey CtsWidgetTestCases]', 1), ('[android.graphics.cts.VulkanPreTransformTest testVulkanPreTransformNotSetToMatchCurrentTransform CtsGraphicsTestCases]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testStartEnd CtsWidgetTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest disable CtsJdwpTunnelHostTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInFreeform CtsWindowManagerDeviceTestCases]', 1), ('[android.assist.cts.TextViewTest testTextView CtsAssistTestCases]', 1), ('[com.android.cts.verifier.notifications.InteractiveVerifierActivity test None]', 1), ('[android.media.cts.FaceDetectorTest finish CtsMediaTestCases]', 1), ('[android.media.cts.FaceDetectorTest testFindFaces CtsMediaTestCases]', 1), ('[com.android.cts.verifier.security.FingerprintBoundKeysTest setPassFailButtonClickListeners None]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testFinishBottom CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testFinishBelowTranslucentActivityAfterDelay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testFinishBelowFullscreenActivityAfterDelay CtsWindowManagerDeviceTestCases]', 1), ('[com.android.server.cts.device.graphicsstats.SimpleDrawFrameTests testNothing None]', 1), ('[android.view.cts.ASurfaceControlTest TestName CtsViewTestCases]', 1), ('[com.android.cts.deviceandprofileowner.WifiTest emptyList None]', 1), ('[com.android.cts.deviceandprofileowner.WifiTest testGetWifiMacAddress None]', 1), ('[com.android.cts.deviceandprofileowner.WifiTest testCannotGetWifiMacAddress None]', 1), ('[android.app.cts.PipNotSupportedActivityTest PipNotSupportedActivityTest CtsAppTestCases]', 1), ('[android.app.cts.PipNotSupportedActivityTest testLaunchPipNotSupportedActivity CtsAppTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testFileIcon CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testAdaptiveFileIcon CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testResourceIcon CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testLoadDrawableAsync CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testLoadDrawableAsyncWithMessage CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testFileIcon_getType CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testAdaptiveFileIcon_getType CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testResourceIcon_getType CtsGraphicsTestCases]', 1), ('[com.android.cts.verifier.AbstractTestListActivity loadTestResults None]', 1), ('[android.location.cts.gnss.asn1.supl2.supl_triggered_start.WLANAreaId isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.preference.cts.SwitchPreferenceTest SwitchPreferenceTest CtsPreferenceTestCases]', 1), ('[android.content.pm.cts.ResolveInfoTest testResolveInfo CtsContentTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.2  .  These are in the Android source tree at"	"7.1.4.2"	"C-1-3"	"7.1.4.2/C-1-3"	"07010402.670103"	"""C-1-3] MUST fully implement the Vulkan 1.0 APIs for each enumerated VkPhysicalDevice."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.2.4  . Wi"	"7.4.2.4"	"C-1-8"	"7.4.2.4/C-1-8"	"07040204.670108"	"""C-1-8] MUST support user control of provisioning through the Wi-Fi picker."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.8.1  . Multi"	"3.8.1"	"C-3-2"	"3.8.1/C-3-2"	"03080100.670302"	"""C-3-2] MUST expose the actions in their SystemUI as specified by the current PIP activity through the setActions() API."""	""	""	"setActions() PIP"	""	""	""	""	"[('android.server.wm.KeyguardLockedTests', 6), ('android.os.cts.ParcelFileDescriptorProcessTest', 5), ('android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests', 3), ('android.opengl2.cts.primitive.GLPrimitiveBenchmark', 3), ('android.renderscript.cts.DebugContext', 3), ('android.app.usage.cts.UsageStatsTest', 3), ('android.app.cts.PipNotSupportedActivityTest', 2), ('android.content.cts.MockContentProvider', 1), ('com.android.cts.documentprovider.MyDocumentsProvider', 1), ('android.os.cts.SeccompTest', 1), ('com.android.cts.verifier.audio.SoundPlayerObject', 1), ('android.signature.cts.tests.ApiPresenceCheckerTest', 1), ('android.server.wm.app.AlwaysFocusablePipActivity', 1), ('com.android.cts.releaseparser.ApkParser', 1), ('android.cts.statsdatom.statsd.UidAtomTests', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('android.signature.cts.tests.ApiComplianceCheckerTest', 1), ('com.android.cts.verifier.audio.HifiUltrasoundTestActivity', 1), ('com.android.cts.apicoverage.ApiCoverage', 1), ('android.hardware.camera2.cts.BurstCaptureTest', 1), ('android.server.wm.app.AssistantActivity', 1), ('android.musicrecognition.cts.MusicRecognitionManagerTest', 1), ('android.adb.cts.AdbHostTest', 1), ('android.signature.cts.AnnotationChecker', 1), ('android.webkit.cts.MockContentProvider', 1), ('com.android.cts.verifier.audio.WavAnalyzer', 1), ('com.android.cts.apicoverage.CtsApiCoverage', 1), ('com.android.cts.verifier.usb.mtp.MtpHostTestActivity', 1), ('android.hardware.camera2.cts.helpers.StaticMetadat', 1), ('android.signature.cts.ApiComplianceChecker', 1)]"	"[('getContext', 11), ('close', 8), ('getPathSegments', 7), ('AtomicInteger', 7), ('start', 7), ('getBytes', 6), ('setUp', 5), ('crashOnLaunchIfNeeded', 5), ('getContentResolver', 5), ('clear', 5), ('Object', 5), ('getIntent', 5), ('onCreate', 4), ('newRow', 4), ('values', 4), ('run', 4), ('getLooper', 4), ('capacity', 4), ('printUsage', 4), ('println', 4), ('getWritableDatabase', 3), ('flush', 3), ('resetRoots', 3), ('toLowerCase', 3), ('FileNotFoundException', 3), ('printStackTrace', 3), ('quitSafely', 3), ('getOutputStream', 3), ('getName', 3), ('myPid', 2), ('getReadableDatabase', 2), ('SQLiteQueryBuilder', 2), ('getFileDescriptor', 2), ('size', 2), ('makeBasic', 2), ('toBundle', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('getInstrumentation', 2), ('checkDeferred', 2), ('getAbsoluteClassName', 2), ('supportsSecureLock', 1), ('MockContentProvider', 1), ('ContentValues', 1), ('moveToNext', 1), ('Doc', 1), ('getAndIncrement', 1), ('createPipe', 1), ('notifyAll', 1), ('wait', 1), ('getIntentSender', 1), ('ByteArrayOutputStream', 1), ('toByteArray', 1), ('SoundPlayerObject', 1), ('getCurrentResId', 1), ('getChannelCount', 1), ('BufferInfo', 1), ('interrupted', 1), ('availableToRead', 1), ('getSampleTime', 1), ('advance', 1), ('rewind', 1), ('GLPrimitiveBenchmark', 1), ('getType', 1), ('setAdditionalInfo', 1), ('getFileEntryBuilder', 1), ('getAppInfo', 1), ('getExternalApiPackage', 1), ('prase', 1), ('getSimpleName', 1), ('BlockingStateCallback', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('build', 1), ('onDestroy', 1), ('quit', 1), ('getWidth', 1), ('getHeight', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('getPackageName', 1), ('WindowManagerStateHelper', 1), ('getPackages', 1), ('resolveSuperClasses', 1), ('entrySet', 1), ('getValue', 1), ('Intent', 1), ('enterPictureInPictureMode', 1), ('getAllClasses', 1), ('toString', 1), ('asShortBuffer', 1), ('doWork', 1), ('FilenameFilter', 1), ('PackageFilter', 1), ('getAeModeName', 1), ('getAfModeName', 1), ('checkQueued', 1), ('getClassType', 1), ('toSignatureString', 1)]"	"[('CtsWindowManagerDeviceTestCases', 9), ('CtsOpenGlPerf2TestCases', 3), ('CtsRenderscriptTestCases', 3), ('CtsUsageStatsTestCases', 3), ('CtsAppTestCases', 2), ('CtsContentTestCases', 1), ('CtsStatsdAtomHostTestCases', 1), ('CtsCameraTestCases', 1), ('CtsMusicRecognitionTestCases', 1), ('CtsAdbHostTestCases', 1), ('CtsWebkitTestCases', 1)]"	""	"android.os.cts.ParcelFileDescriptorProcessTest"	"getAbsoluteClassName"	""	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/ParcelFileDescriptorProcessTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/openglperf2/src/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/DebugContext.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/PipNotSupportedActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/MockContentProvider.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/DocumentProvider/src/com/android/cts/documentprovider/MyDocumentsProvider.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/SeccompTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/SoundPlayerObject.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/tests/src/android/signature/cts/tests/ApiPresenceCheckerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/AlwaysFocusablePipActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/ApkParser.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/UidAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/tests/src/android/signature/cts/tests/ApiComplianceCheckerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/ApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/AssistantActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/musicrecognition/src/android/musicrecognition/cts/MusicRecognitionManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adb/src/android/adb/cts/AdbHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/lib/common/src/android/signature/cts/AnnotationChecker.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/MockContentProvider.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/WavAnalyzer.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/usb/mtp/MtpHostTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/StaticMetadata.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/lib/common/src/android/signature/cts/ApiComplianceChecker.java', 1)]"	"[('(50,PIP,/android/server/wm/KeyguardLockedTests.java)', 1), ('(5,PIP,/android/content/cts/MockContentProvider.java)', 1), ('(14,PIP,/android/app/cts/PipNotSupportedActivityTest.java)', 1), ('(47,PIP,/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java)', 1), ('(7,PIP,/com/android/cts/documentprovider/MyDocumentsProvider.java)', 1), ('(6,PIP,/android/os/cts/SeccompTest.java)', 1), ('(15,PIP,/com/android/cts/verifier/audio/SoundPlayerObject.java)', 1), ('(4,PIP,/android/signature/cts/tests/ApiPresenceCheckerTest.java)', 1), ('(6,PIP,/android/server/wm/app/AlwaysFocusablePipActivity.java)', 1), ('(8,PIP,/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java)', 1), ('(20,PIP,/com/android/cts/releaseparser/ApkParser.java)', 1), ('(4,PIP,/android/renderscript/cts/DebugContext.java)', 1), ('(5,PIP,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(5,PIP,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(28,PIP,/android/app/usage/cts/UsageStatsTest.java)', 1), ('(1,PIP,/android/signature/cts/tests/ApiComplianceCheckerTest.java)', 1), ('(11,PIP,/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java)', 1), ('(6,PIP,/com/android/cts/apicoverage/ApiCoverage.java)', 1), ('(7,PIP,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(3,PIP,/android/server/wm/app/AssistantActivity.java)', 1), ('(5,PIP,/android/musicrecognition/cts/MusicRecognitionManagerTest.java)', 1), ('(1,PIP,/android/adb/cts/AdbHostTest.java)', 1), ('(1,PIP,/android/signature/cts/AnnotationChecker.java)', 1), ('(4,PIP,/android/webkit/cts/MockContentProvider.java)', 1), ('(32,PIP,/com/android/cts/verifier/audio/WavAnalyzer.java)', 1), ('(10,PIP,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(5,PIP,/com/android/cts/verifier/usb/mtp/MtpHostTestActivity.java)', 1), ('(9,PIP,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(1,PIP,/android/signature/cts/ApiComplianceChecker.java)', 1), ('(11,PIP,/android/os/cts/ParcelFileDescriptorProcessTest.java)', 1)]"	"[('([10:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[10]:method_text:[tKeyguardShowingAndNotOccluded();        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 2), ('([7:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[7]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([12:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[12]:method_text:[t contain pinned stack."", WINDOWING_MODE_PINNED,                ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([10:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[10]:method_text:[SHOW_WHEN_LOCKED_ACTIVITY, true);        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[1]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([5:/android/content/cts/MockContentProvider.java]:[PIP]:[5]:method_text:[xt context) {        return context.getFileStreamPath(""MockContentProvider.crashonlaunch"");    }}])', 1), ('([6:/android/app/cts/PipNotSupportedActivityTest.java]:[PIP]:[6]:method_text:[Up();        mInstrumentation = getInstrumentation();        mActivity = getActivity();    }   ])', 1), ('([8:/android/app/cts/PipNotSupportedActivityTest.java]:[PIP]:[8]:method_text:[ctureInPictureMode());            }        });        mInstrumentation.waitForIdleSync();    }}])', 1), ('([2:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[PIP]:[2]:method_text:[TestBase {    @Before    public void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([27:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[PIP]:[27]:method_text:[Sequence(CallbackTrackingActivity.class, getLifecycleLog(),                ""finishPip"");    }   ])', 1), ('([18:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[PIP]:[18]:method_text:[ackingActivity.class, ON_TOP_POSITION_GAINED)),                ""finishAlwaysFocusablePip"");    }}])', 1), ('([7:/com/android/cts/documentprovider/MyDocumentsProvider.java]:[PIP]:[7]:method_text:[) {            bytes.write(buffer, 0, count);        }        return bytes.toByteArray();    }}])', 1), ('([6:/android/os/cts/SeccompTest.java]:[PIP]:[6]:method_text:[policy specified by installTestFilter().     */    private native static int getClockBootTime();}])', 1), ('([15:/com/android/cts/verifier/audio/SoundPlayerObject.java]:[PIP]:[15]:method_text:[ public void onPeriodicNotification(AudioTrack track) {        periodicNotification(track);    }}])', 1), ('([4:/android/signature/cts/tests/ApiPresenceCheckerTest.java]:[PIP]:[4]:method_text:[        }        void validate() {            Assert.assertTrue(failureSeen);        }    }}])', 1), ('([6:/android/server/wm/app/AlwaysFocusablePipActivity.java]:[PIP]:[6]:method_text:[dowingMode(WINDOWING_MODE_PINNED);        caller.startActivity(intent, options.toBundle());    }}])', 1), ('([1:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[PIP]:[1]:method_text:[ivity.class);    }    /**     * Runs the full OpenGL ES 2.0 pipeline test offscreen.     */   ])', 1), ('([4:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[PIP]:[4]:method_text:[  streamName);    }    /**     * Runs the full OpenGL ES 2.0 pipeline test onscreen.     */   ])', 1), ('([3:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[PIP]:[3]:method_text:[                streamName);    }    /**     * Runs the pixel output test offscreen.     */   ])', 1), ('([20:/com/android/cts/releaseparser/ApkParser.java]:[PIP]:[20]:method_text:[tatic Logger getLogger() {        return Logger.getLogger(ApkParser.class.getSimpleName());    }}])', 1), ('([1:/android/renderscript/cts/DebugContext.java]:[PIP]:[1]:method_text:[    * Test whether we are detect out-of-bounds allocation accesses     * from a kernel.     */   ])', 1), ('([2:/android/renderscript/cts/DebugContext.java]:[PIP]:[2]:method_text:[  * 1D copy - things should work under DebugContext if given     * legitimate arguments     */   ])', 1), (""([1:/android/renderscript/cts/DebugContext.java]:[PIP]:[1]:method_text:[dead at this point so make sure it's not reused        RenderScript.releaseAllContexts();    }}])"", 1), ('([5:/android/cts/statsdatom/statsd/UidAtomTests.java]:[PIP]:[5]:method_text:[(entered).hasSize(1);    }    //Note: this test does not have uid, but must run on the device   ])', 1), ('([5:/com/android/cts/verifier/camera/its/ItsService.java]:[PIP]:[5]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([4:/android/app/usage/cts/UsageStatsTest.java]:[PIP]:[4]:method_text:[ity(clazz);        }    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([7:/android/app/usage/cts/UsageStatsTest.java]:[PIP]:[7]:method_text:[ty stops"", 0, stops);    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([17:/android/app/usage/cts/UsageStatsTest.java]:[PIP]:[17]:method_text:[t(0).getEventType());    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([1:/android/signature/cts/tests/ApiComplianceCheckerTest.java]:[PIP]:[1]:method_text:[     checker.checkDeferred();                },                excludedRuntimeClasses);    }   ])', 1), ('([11:/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java]:[PIP]:[11]:method_text:[ @Override    public void sendMessage(String message) {      publishProgress(message);    }  }}])', 1), ('([6:/com/android/cts/apicoverage/ApiCoverage.java]:[PIP]:[6]:method_text:[ApiPackage pkg = entry.getValue();            pkg.resolveSuperClasses(mPackages);        }    }}])', 1), ('([7:/android/hardware/camera2/cts/BurstCaptureTest.java]:[PIP]:[7]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([3:/android/server/wm/app/AssistantActivity.java]:[PIP]:[3]:method_text:[ngMode(WINDOWING_MODE_FULLSCREEN);        caller.startActivity(intent, options.toBundle());    }}])', 1), ('([5:/android/musicrecognition/cts/MusicRecognitionManagerTest.java]:[PIP]:[5]:method_text:[nly allowed when the caller of the api is also the owner of     * the override service.     */   ])', 1), ('([1:/android/adb/cts/AdbHostTest.java]:[PIP]:[1]:method_text:[e + ""\\n"");        }        assertTrue(""check_ms_os_desc failed:\\n"" + output, result == 0);    }}])', 1), ('([1:/android/signature/cts/AnnotationChecker.java]:[PIP]:[1]:method_text:[      if (annotatedMethods != null) {            annotatedMethods.remove(method);        }    }}])', 1), ('([4:/android/webkit/cts/MockContentProvider.java]:[PIP]:[4]:method_text:[        outputStream.close();            } catch (IOException e) {            }        }    }}])', 1), ('([32:/com/android/cts/verifier/audio/WavAnalyzer.java]:[PIP]:[32]:method_text:[ss of the analyzer.   */  public interface Listener {    void sendMessage(String message);  }}])', 1), ('([10:/com/android/cts/apicoverage/CtsApiCoverage.java]:[PIP]:[10]:method_text:[                 break;            }        } finally {            out.close();        }    }}])', 1), ('([5:/com/android/cts/verifier/usb/mtp/MtpHostTestActivity.java]:[PIP]:[5]:method_text:[ageResource(R.drawable.fs_indeterminate);                    break;            }        }    }}])', 1), ('([9:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[PIP]:[9]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([1:/android/signature/cts/ApiComplianceChecker.java]:[PIP]:[1]:method_text:[ } catch (ClassNotFoundException e) {                // Do nothing.            }        }    }}])', 1), ('([2:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[2]:method_text:[se();        assertEquals(-1, red.read());        assertEquals(null, red.checkError());    }   ])', 1), ('([2:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[2]:method_text:[();        assertEquals(-1, blue.read());        assertEquals(null, blue.checkError());    }   ])', 1), ('([3:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[3]:method_text:[ assertEquals(-1, blue.read());        assertContains(""OMG MUFFINS"", blue.checkError());    }   ])', 1), ('([3:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[3]:method_text:[quals(-1, blue.read());        assertContains(""Remote side is dead"", blue.checkError());    }   ])', 1), ('([1:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[1]:method_text:[    assertContains(""BLUE RAWR"", red.checkError());        assertNull(blue.checkError());    }   ])', 1)]"	""	""	"[('PIP', 48)]"	"[('[android.server.wm.KeyguardLockedTests testEnterPipOverKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedActivityAndPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap CtsWindowManagerDeviceTestCases]', 1), ('[android.content.cts.MockContentProvider exists CtsContentTestCases]', 1), ('[android.app.cts.PipNotSupportedActivityTest PipNotSupportedActivityTest CtsAppTestCases]', 1), ('[android.app.cts.PipNotSupportedActivityTest testLaunchPipNotSupportedActivity CtsAppTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests testTopPositionNotSwitchedToPip CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests testTopPositionForAlwaysFocusableActivityInPip CtsWindowManagerDeviceTestCases]', 1), ('[android.os.cts.SeccompTest testViolateIsolatedServicePolicy None]', 1), ('[com.android.cts.verifier.audio.SoundPlayerObject isPlaying None]', 1), ('[android.signature.cts.tests.ApiPresenceCheckerTest TestClassesProvider None]', 1), ('[android.opengl2.cts.primitive.GLPrimitiveBenchmark testFullPipelineOffscreen CtsOpenGlPerf2TestCases]', 1), ('[android.opengl2.cts.primitive.GLPrimitiveBenchmark testFullPipelineOnscreen CtsOpenGlPerf2TestCases]', 1), ('[com.android.cts.releaseparser.ApkParser getTestCaseApiPackage None]', 1), ('[android.renderscript.cts.DebugContext testDebugContextI CtsRenderscriptTestCases]', 1), ('[android.renderscript.cts.DebugContext testDebugContextK CtsRenderscriptTestCases]', 1), ('[android.renderscript.cts.DebugContext testDebugContextRsAllocationCopy2D_Short_WrongD CtsRenderscriptTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testPictureInPictureState CtsStatsdAtomHostTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[android.app.usage.cts.UsageStatsTest isAppStandbyEnabled CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testPipActivity CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testPipActivity_StopToPause CtsUsageStatsTestCases]', 1), ('[com.android.cts.verifier.audio.HifiUltrasoundTestActivity dismiss None]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 1), ('[android.server.wm.app.AssistantActivity finish None]', 1), ('[android.musicrecognition.cts.MusicRecognitionManagerTest testRemovesBindersFromBundle CtsMusicRecognitionTestCases]', 1), ('[android.adb.cts.AdbHostTest testHasMsOsDescriptors CtsAdbHostTestCases]', 1), ('[android.signature.cts.AnnotationChecker isEmpty None]', 1), ('[com.android.cts.verifier.audio.WavAnalyzer isClipped None]', 1), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 1), ('[com.android.cts.verifier.usb.mtp.MtpHostTestActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.helpers.StaticMetadat getCharacteristics None]', 1), ('[android.signature.cts.ApiComplianceChecker isAnnotation None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPullPipeNormal None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPushPipeNormal None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPipeWriterError None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPipeWriterCrash None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testSocketErrorAfterClose None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-4-1"	"9.1/C-4-1"	"09010000.670401"	"""C-4-1] MUST fulfill all requirements outlined for device implementations in section &quot;9.8.6 Content Capture&quot;."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-3-2"	"9.5/C-3-2"	"09050000.670302"	"""C-3-2] MUST NOT have this as a work profile."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-1"	"5.1/H-1-1"	"05010000.720101"	"""[5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods.  | [5.1/H-1-1] MUST advertise the maximum number of hardware video decoder sessions that can be run concurrently in any codec combination via the CodecCapabilities.getMaxSupportedInstances() and VideoCapabilities.getSupportedPerformancePoints() methods. """	""	""	"CodecCapabilities.getMaxSupportedInstances getSupportedPerformancePoints() VideoCapabilities.getSupportedPerformancePoints getMaxSupportedInstances()"	""	""	""	""	"[('android.mediapc.cts.MultiDecoderPairPerfTest', 4), ('android.mediapc.cts.MultiEncoderPairPerfTest', 4), ('android.mediapc.cts.MultiDecoderPerfTest', 4), ('android.mediapc.cts.MultiTranscoderPerfTest', 4), ('android.mediapc.cts.MultiEncoderPerfTest', 4), ('android.mediapc.cts.MultiCodecPerfTestBase', 2), ('com.android.compatibility.common.util.MediaUtils', 1), ('android.media.cts.EncoderTest', 1), ('android.media.cts.MediaCodecListTest', 1), ('android.video.cts.CodecPerformanceTestBase', 1), ('android.media.cts.MediaCodecCapabilitiesTest', 1), ('android.media.cts.DecoderTest', 1)]"	"[('getSimpleName', 23), ('getMaxSupportedInstances', 20), ('getSupportedPerformancePoints', 20), ('inputParams', 20), ('size', 16), ('release', 2), ('getMediaDirString', 1), ('prologue', 1), ('MediaExtractor', 1), ('getTrackCount', 1), ('getCodecInfos', 1)]"	"[('CtsMediaPerformanceClassTestCases', 22), ('CtsMediaTestCases', 4), ('CtsVideoTestCases', 1)]"	""	"android.mediapc.cts.MultiCodecPerfTestBase"	"getSimpleName"	"CtsMediaPerformanceClassTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPairPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiDecoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiTranscoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPerfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiCodecPerfTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/MediaUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecPerformanceTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecCapabilitiesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTest.java', 1)]"	"[('(1,getSupportedPerformancePoints(),/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/EncoderTest.java)', 1), ('(2,getSupportedPerformancePoints(),/android/media/cts/MediaCodecListTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPairPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiDecoderPerfTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiTranscoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/video/cts/CodecPerformanceTestBase.java)', 1), ('(2,getMaxSupportedInstances(),/android/media/cts/MediaCodecCapabilitiesTest.java)', 1), ('(1,CodecCapabilities.getMaxSupportedInstances,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,VideoCapabilities.getSupportedPerformancePoints,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,getMaxSupportedInstances(),/android/media/cts/DecoderTest.java)', 1), ('(1,getSupportedPerformancePoints(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(1,getMaxSupportedInstances(),/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1)]"	"[('([1:/com/android/compatibility/common/util/MediaUtils.java]:[getSupportedPerformancePoints()]:[1]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([1:/android/media/cts/EncoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[            muxer.stop();            muxer.release();            muxer = null;        }    }}])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[getSupportedPerformancePoints()]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[urrent sessions succeed in decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiDecoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[sessions succeed in decoding     * with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiTranscoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ceed in     * transcoding/decoding with meeting the expected frame rate.     */    @LargeTest   ])', 1), ('([1:/android/video/cts/CodecPerformanceTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[SawDecOutputEOS = true;        }        mDecoder.releaseOutputBuffer(bufferIndex, render);    }}])', 1), ('([2:/android/media/cts/MediaCodecCapabilitiesTest.java]:[getMaxSupportedInstances()]:[2]:method_text:[/media_codecs.xml: \\n"";           fail(failMessage + xmlOverrides.toString());        }    }   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[CodecCapabilities.getMaxSupportedInstances]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getSupportedPerformancePoints()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[VideoCapabilities.getSupportedPerformancePoints]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[ances. Also ensures that all the concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([1:/android/media/cts/DecoderTest.java]:[getMaxSupportedInstances()]:[1]:method_text:[       continue;            }            return true;        }        return false;    }   ])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getSupportedPerformancePoints()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[getMaxSupportedInstances()]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1)]"	""	""	"[('getSupportedPerformancePoints()', 9), ('getMaxSupportedInstances()', 9), ('CodecCapabilities.getMaxSupportedInstances', 5), ('VideoCapabilities.getSupportedPerformancePoints', 5)]"	"[('[android.mediapc.cts.MultiCodecPerfTestBase isSPerfClass CtsMediaPerformanceClassTestCases]', 2), ('[com.android.compatibility.common.util.MediaUtils getTestName None]', 1), ('[android.media.cts.EncoderTest testAACEncoders CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 1), ('[android.video.cts.CodecPerformanceTestBase isEncoder CtsVideoTestCases]', 1), ('[android.media.cts.MediaCodecCapabilitiesTest testGetMaxSupportedInstances CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTest testTunneledAudioTimestampProgressVp9 CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.1  . Telephony"	"7.4.1"	"C-5-2"	"7.4.1/C-5-2"	"07040100.670502"	"""C-5-2] MUST declare the android.hardware.telephony.ims.singlereg feature flag and provide a complete implementation of the SipTransport API, the GbaService API, dedicated bearer indications using the IRadio 1.6 HAL, and provisioning via Auto Configuration Server (ACS) or other proprietary provisioning mechanism using the IMS Configuration API. <h5 id=""7411_number_blocking_compatibility"" """	""	""	"ACS IMS HAL android.hardware.telephony.ims.singlereg"	""	""	""	""	"[('android.view.cts.ASurfaceControlTest', 12), ('dot.junit.opcodes.sget_wide.Test_sget_wide', 7), ('android.uirendering.cts.testclasses.ViewFadingEdgeTests', 5), ('android.media.cts.AudioPlaybackConfigurationTest', 3), ('android.devicepolicy.cts.AppUriAuthenticationPolicyTest', 3), ('android.telephony.ims.cts.TestImsConfig', 2), ('android.renderscript.cts.generated.TestLength', 2), ('android.renderscript.cts.generated.TestSin', 2), ('android.renderscript.cts.generated.TestTanpi', 2), ('android.renderscript.cts.generated.TestNormalize', 2), ('dot.junit.opcodes.if_gez.Test_if_gez', 2), ('android.provider.cts.simphonebook.SimPhonebookRequirementsRule', 1), ('android.telephony.ims.cts.TestSipTransport', 1), ('android.view.inputmethod.cts.InputConnectionWrapperTest', 1), ('android.graphics.cts.BitmapColorSpaceTest', 1), ('android.server.wm.CloseOnOutsideTestActivity', 1), ('com.android.cts.verifier.security.FingerprintBoundKeysTest', 1), ('android.media.cts.MediaSyncEventTest', 1), ('android.telephony.ims.cts.TestSipDelegateConnection', 1), ('dot.junit.opcodes.invoke_super_range.Test_invoke_super_range', 1), ('com.android.cts.verifier.sensors.MotionIndicatorView', 1), ('android.graphics.drawable.cts.AnimatedStateListDrawableTest', 1)]"	"[('destroy', 104), ('toString', 96), ('StringBuilder', 32), ('setUp', 10), ('ArgumentsFloatFloat', 10), ('ArgumentsHalfHalf', 10), ('tearDown', 9), ('countDown', 5), ('getVersion', 4), ('Builder', 3), ('ArgumentsFloatNFloat', 3), ('ArgumentsHalfNHalf', 3), ('ArgumentsFloatNFloatN', 3), ('ArgumentsHalfNHalfN', 3), ('getViaBranchParameter', 3), ('release', 2), ('getSubscriptionInfoForRemovableSims', 2), ('size', 2), ('getColorSpace', 2), ('intValue', 2), ('getMediaDirString', 1), ('stop', 1), ('SimPhonebookRequirementsRule', 1), ('before', 1), ('getApplicationContext', 1), ('getSupportedModemCount', 1), ('getRemovableSimSlotCount', 1), ('Object', 1), ('getDelegates', 1), ('stream', 1), ('findFirst', 1), ('getCount', 1), ('addAppAndUriMapping_nullUri_throwException', 1), ('addAppAndUriMapping_nullPackageName_throwException', 1), ('addAppAndUriMapping_nullAlias_throwException', 1), ('writeColorSpace', 1), ('getAssets', 1), ('fail', 1), ('obtain', 1), ('recycle', 1), ('getResources', 1), ('checkLengthFloatFloat', 1), ('checkLengthFloat2Float', 1), ('checkLengthFloat3Float', 1), ('checkLengthFloat4Float', 1), ('checkLengthHalfHalf', 1), ('checkLengthHalf2Half', 1), ('checkLengthHalf3Half', 1), ('checkLengthHalf4Half', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('checkSinFloatFloat', 1), ('checkSinFloat2Float2', 1), ('checkSinFloat3Float3', 1), ('checkSinFloat4Float4', 1), ('checkSinHalfHalf', 1), ('checkSinHalf2Half2', 1), ('checkSinHalf3Half3', 1), ('checkSinHalf4Half4', 1), ('checkTanpiFloatFloat', 1), ('checkTanpiFloat2Float2', 1), ('checkTanpiFloat3Float3', 1), ('checkTanpiFloat4Float4', 1), ('checkTanpiHalfHalf', 1), ('checkTanpiHalf2Half2', 1), ('checkTanpiHalf3Half3', 1), ('checkTanpiHalf4Half4', 1), ('checkNormalizeFloatFloat', 1), ('checkNormalizeFloat2Float2', 1), ('checkNormalizeFloat3Float3', 1), ('checkNormalizeFloat4Float4', 1), ('checkNormalizeHalfHalf', 1), ('checkNormalizeHalf2Half2', 1), ('checkNormalizeHalf3Half3', 1), ('checkNormalizeHalf4Half4', 1), ('run', 1), ('verifyDelegateCreated', 1)]"	"[('CtsViewTestCases', 12), ('CtsRenderscriptTestCases', 8), ('CtsUiRenderingTestCases', 5), ('CtsMediaTestCases', 4), ('CtsTelephonyTestCases', 4), ('CtsDevicePolicyTestCases', 3), ('CtsGraphicsTestCases', 2), ('CtsSimPhonebookProviderTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1)]"	""	"android.uirendering.cts.testclasses.ViewFadingEdgeTests"	"getVersion"	"CtsUiRenderingTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 12), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/sget_wide/Test_sget_wide.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestImsConfig.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestLength.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestSin.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestTanpi.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNormalize.java', 2), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/if_gez/Test_if_gez.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestSipTransport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapColorSpaceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CloseOnOutsideTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/FingerprintBoundKeysTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaSyncEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestSipDelegateConnection.java', 1), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/invoke_super_range/Test_invoke_super_range.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MotionIndicatorView.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/AnimatedStateListDrawableTest.java', 1)]"	"[('(13,HAL,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(12,IMS,/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java)', 1), ('(10,IMS,/android/telephony/ims/cts/TestSipTransport.java)', 1), ('(1,HAL,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(5,ACS,/android/telephony/ims/cts/TestImsConfig.java)', 1), ('(11,IMS,/android/telephony/ims/cts/TestImsConfig.java)', 1), ('(3,HAL,/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java)', 1), ('(4,HAL,/android/graphics/cts/BitmapColorSpaceTest.java)', 1), ('(1,HAL,/android/server/wm/CloseOnOutsideTestActivity.java)', 1), ('(104,HAL,/android/renderscript/cts/generated/TestLength.java)', 1), ('(3,HAL,/com/android/cts/verifier/security/FingerprintBoundKeysTest.java)', 1), ('(102,HAL,/android/renderscript/cts/generated/TestSin.java)', 1), ('(58,HAL,/android/view/cts/ASurfaceControlTest.java)', 1), ('(102,HAL,/android/renderscript/cts/generated/TestTanpi.java)', 1), ('(5,HAL,/android/media/cts/MediaSyncEventTest.java)', 1), ('(104,HAL,/android/renderscript/cts/generated/TestNormalize.java)', 1), ('(7,HAL,/dot/junit/opcodes/sget_wide/Test_sget_wide.java)', 1), ('(39,IMS,/android/telephony/ims/cts/TestSipDelegateConnection.java)', 1), ('(1,HAL,/dot/junit/opcodes/invoke_super_range/Test_invoke_super_range.java)', 1), ('(5,HAL,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(2,HAL,/dot/junit/opcodes/if_gez/Test_if_gez.java)', 1), ('(4,HAL,/android/graphics/drawable/cts/AnimatedStateListDrawableTest.java)', 1), ('(6,HAL,/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java)', 1)]"	"[('([8:/android/view/cts/ASurfaceControlTest.java]:[HAL]:[8]:method_text:[      return MAGENTA;                        }                    }                });    }   ])', 4), ('([4:/android/view/cts/ASurfaceControlTest.java]:[HAL]:[4]:method_text:[       return YELLOW;                        }                    }                });    }   ])', 4), ('([1:/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java]:[HAL]:[1]:method_text:[llPointerException expected) {            // Expected behavior, nothing to do.        }    }   ])', 3), ('([2:/android/view/cts/ASurfaceControlTest.java]:[HAL]:[2]:method_text:[      return MAGENTA;                        }                    }                });    }   ])', 2), ('([1:/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java]:[HAL]:[1]:method_text:[       Color.WHITE                }, 20)); // Tolerance set to account for interpolation    }   ])', 2), ('([2:/android/media/cts/AudioPlaybackConfigurationTest.java]:[HAL]:[2]:method_text:[   // create an AudioPlaybackConfiguration directly, we first need to play something to get one.   ])', 1), ('([10:/android/media/cts/AudioPlaybackConfigurationTest.java]:[HAL]:[10]:method_text:[             configToMarshall.getAudioAttributes(), restoredConfig.getAudioAttributes());    }   ])', 1), ('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[HAL]:[1]:method_text:[t HAL, skipping test "" + testName);            return false;        }        return true;    }}])', 1), ('([12:/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java]:[IMS]:[12]:method_text:[.getSubscriptionInfoForRemovableSims().size())                .isAtLeast(mMinimumSimCount);    }}])', 1), ('([10:/android/telephony/ims/cts/TestSipTransport.java]:[IMS]:[10]:method_text:[ex) {        synchronized (mLock) {            sLatches[latchIndex].countDown();        }    }}])', 1), ('([1:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[HAL]:[1]:method_text:[     expectThrows(IllegalArgumentException.class,  ()-> wrapper.getTextBeforeCursor(-1, 0));    }}])', 1), ('([5:/android/telephony/ims/cts/TestImsConfig.java]:[ACS]:[5]:method_text:[riggerAutoConfiguration();        TestAcsClient.getInstance().onTriggerAutoConfiguration();    }}])', 1), ('([11:/android/telephony/ims/cts/TestImsConfig.java]:[IMS]:[11]:method_text:[riggerAutoConfiguration();        TestAcsClient.getInstance().onTriggerAutoConfiguration();    }}])', 1), ('([4:/android/graphics/cts/BitmapColorSpaceTest.java]:[HAL]:[4]:method_text:[ace();        assertNotNull(cs);        assertSame(expected, cs);        p.recycle();    }   ])', 1), ('([1:/android/server/wm/CloseOnOutsideTestActivity.java]:[HAL]:[1]:method_text:[ = width / 2;        params.height = height / 2;        getWindow().setAttributes(params);    }}])', 1), ('([96:/android/renderscript/cts/generated/TestLength.java]:[HAL]:[96]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestLength.java]:[HAL]:[8]:method_text:[     checkLengthHalf2Half();        checkLengthHalf3Half();        checkLengthHalf4Half();    }}])', 1), ('([3:/com/android/cts/verifier/security/FingerprintBoundKeysTest.java]:[HAL]:[3]:method_text:[etMessage(R.string.sec_fp_dialog_message);            return builder.create();        }    }}])', 1), ('([94:/android/renderscript/cts/generated/TestSin.java]:[HAL]:[94]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestSin.java]:[HAL]:[8]:method_text:[);        checkSinHalf2Half2();        checkSinHalf3Half3();        checkSinHalf4Half4();    }}])', 1), ('([2:/android/view/cts/ASurfaceControlTest.java]:[HAL]:[2]:method_text:[         return BLUE;                        }                    }                });    }   ])', 1), ('([4:/android/view/cts/ASurfaceControlTest.java]:[HAL]:[4]:method_text:[chTime;            mPresentTime = presentTime;            mLatch.countDown();        }    }   ])', 1), ('([94:/android/renderscript/cts/generated/TestTanpi.java]:[HAL]:[94]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestTanpi.java]:[HAL]:[8]:method_text:[     checkTanpiHalf2Half2();        checkTanpiHalf3Half3();        checkTanpiHalf4Half4();    }}])', 1), ('([5:/android/media/cts/MediaSyncEventTest.java]:[HAL]:[5]:method_text:[ackageManager().hasSystemFeature(                PackageManager.FEATURE_AUDIO_LOW_LATENCY);    }}])', 1), ('([96:/android/renderscript/cts/generated/TestNormalize.java]:[HAL]:[96]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/renderscript/cts/generated/TestNormalize.java]:[HAL]:[8]:method_text:[rmalizeHalf2Half2();        checkNormalizeHalf3Half3();        checkNormalizeHalf4Half4();    }}])', 1), ('([1:/dot/junit/opcodes/sget_wide/Test_sget_wide.java]:[HAL]:[1]:method_text:[   /**     * @constraint B1     * @title sget-wide shall not work for reference fields     */   ])', 1), ('([1:/dot/junit/opcodes/sget_wide/Test_sget_wide.java]:[HAL]:[1]:method_text:[/**     *     * @constraint B1     * @title sget-wide shall not work for short fields     */   ])', 1), ('([1:/dot/junit/opcodes/sget_wide/Test_sget_wide.java]:[HAL]:[1]:method_text:[*     *     * @constraint B1     * @title sget-wide shall not work for boolean fields     */   ])', 1), ('([1:/dot/junit/opcodes/sget_wide/Test_sget_wide.java]:[HAL]:[1]:method_text:[ /**     *     * @constraint B1     * @title sget-wide shall not work for char fields     */   ])', 1), ('([1:/dot/junit/opcodes/sget_wide/Test_sget_wide.java]:[HAL]:[1]:method_text:[ /**     *     * @constraint B1     * @title sget-wide shall not work for byte fields     */   ])', 1), ('([1:/dot/junit/opcodes/sget_wide/Test_sget_wide.java]:[HAL]:[1]:method_text:[/**     *     * @constraint B1     * @title sget-wide shall not work for float fields     */   ])', 1), ('([1:/dot/junit/opcodes/sget_wide/Test_sget_wide.java]:[HAL]:[1]:method_text:[  /**     *     * @constraint B1     * @title sget-wide shall not work for int fields     */   ])', 1), ('([39:/android/telephony/ims/cts/TestSipDelegateConnection.java]:[IMS]:[39]:method_text:[              }            }            Thread.sleep(1000);            retry++;        }    }}])', 1), ('([1:/dot/junit/opcodes/invoke_super_range/Test_invoke_super_range.java]:[HAL]:[1]:method_text:[@constraint n/a     * @title invoke-super/range shall be used to invoke private methods     */   ])', 1), ('([5:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[HAL]:[5]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([1:/dot/junit/opcodes/if_gez/Test_if_gez.java]:[HAL]:[1]:method_text:[      /**     * @constraint A6      * @title branch target shall be inside the method     */   ])', 1), ('([1:/dot/junit/opcodes/if_gez/Test_if_gez.java]:[HAL]:[1]:method_text:[**     * @constraint A6      * @title  branch target shall not be ""inside"" instruction     */   ])', 1), ('([4:/android/graphics/drawable/cts/AnimatedStateListDrawableTest.java]:[HAL]:[4]:method_text:[ XmlPullParser.END_DOCUMENT) {            // Empty loop        }        return parser;    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java]:[HAL]:[1]:method_text:[       Color.RED,                }, 20)); // Tolerance set to account for interpolation    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java]:[HAL]:[1]:method_text:[        Color.RED,                }, 20)); // Tolerance set to account for interpolation    }   ])', 1), ('([2:/android/uirendering/cts/testclasses/ViewFadingEdgeTests.java]:[HAL]:[2]:method_text:[          Color.WHITE                }, 20)); // Tolerance set to account for interpolation    }}])', 1)]"	""	""	"[('HAL', 48), ('IMS', 4), ('ACS', 1)]"	"[('[android.telephony.ims.cts.TestImsConfig TestImsConfig CtsTelephonyTestCases]', 2), ('[android.media.cts.AudioPlaybackConfigurationTest testParcelableWriteToParcel CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetAudioDeviceInfoMediaPlayerStart CtsMediaTestCases]', 1), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInvalidGetTextBeforeOrAfterCursorRequest CtsInputMethodTestCases]', 1), ('[android.server.wm.CloseOnOutsideTestActivity getDisplayMetrics CtsWindowManagerDeviceTestCases]', 1), ('[android.renderscript.cts.generated.TestLength testLength CtsRenderscriptTestCases]', 1), ('[com.android.cts.verifier.security.FingerprintBoundKeysTest setPassFailButtonClickListeners None]', 1), ('[android.renderscript.cts.generated.TestSin testSin CtsRenderscriptTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setSourceRect CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setSourceRect_smallCentered CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setSourceRect_small CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setSourceRect_extraLarge CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setTransform_flipH CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setTransform_rotate180 CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setScale CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setBufferTransform90 CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setCropSmall CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setCropLarge CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setCropOffset CtsViewTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setCropNegative CtsViewTestCases]', 1), ('[android.renderscript.cts.generated.TestTanpi testTanpi CtsRenderscriptTestCases]', 1), ('[android.media.cts.MediaSyncEventTest testParcelableWriteToParcelCreate CtsMediaTestCases]', 1), ('[android.renderscript.cts.generated.TestNormalize testNormalize CtsRenderscriptTestCases]', 1), ('[dot.junit.opcodes.sget_wide.Test_sget_wide testVFE7 None]', 1), ('[dot.junit.opcodes.sget_wide.Test_sget_wide testVFE8 None]', 1), ('[dot.junit.opcodes.sget_wide.Test_sget_wide testVFE9 None]', 1), ('[dot.junit.opcodes.sget_wide.Test_sget_wide testVFE10 None]', 1), ('[dot.junit.opcodes.sget_wide.Test_sget_wide testVFE11 None]', 1), ('[dot.junit.opcodes.sget_wide.Test_sget_wide testVFE12 None]', 1), ('[dot.junit.opcodes.sget_wide.Test_sget_wide testVFE13 None]', 1), ('[android.telephony.ims.cts.TestSipDelegateConnection verifyRegistrationStateRegistered CtsTelephonyTestCases]', 1), ('[dot.junit.opcodes.invoke_super_range.Test_invoke_super_range testVFE15 None]', 1), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 1), ('[dot.junit.opcodes.if_gez.Test_if_gez testVFE4 None]', 1), ('[dot.junit.opcodes.if_gez.Test_if_gez testVFE5 None]', 1), ('[android.graphics.drawable.cts.AnimatedStateListDrawableTest testPreloadDensityConstantSize CtsGraphicsTestCases]', 1), ('[android.uirendering.cts.testclasses.ViewFadingEdgeTests testCreateLeftFade CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ViewFadingEdgeTests testCreateRightFade CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ViewFadingEdgeTests testCreateTopFade CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ViewFadingEdgeTests testCreateBottomFade CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ViewFadingEdgeTests testCreateLeftAndRightFade CtsUiRenderingTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-4"	"9.8/H-1-4"	"09080000.720104"	"""[9.8/H-1-4] MUST NOT supply buffered mic audio older than 8 seconds for an individual request to the hotword detection service. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.1  . These are in the Android source tree at"	"7.1.4.1"	"C-0-2"	"7.1.4.1/C-0-2"	"07010401.670002"	"""C-0-2] MUST include the support for all the corresponding managed APIs and native APIs for every OpenGL ES versions they identified to support. If device implementations include a screen or video output, they:"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-3"	"7.5/H-1-3"	"07050000.720103"	"""[7.5/H-1-3] MUST support android.info.supportedHardwareLevel property as FULL or better for back primary and LIMITED or better for front primary camera.  | [7.5/H-1-3] MUST support android.info.supportedHardwareLevel property as FULL or better for both primary cameras. """	""	""	"LIMITED android.info.supportedHardwareLevel FULL"	""	""	""	""	"[('android.server.wm.AppConfigurationTests', 20), ('android.media.cts.AudioManagerTest', 8), ('android.hardware.cts.SensorParameterRangeTest', 3), ('android.server.wm.KeyguardLockedTests', 2), ('android.media.cts.SystemMediaRouter2Test', 1), ('android.media.cts.AudioPlaybackConfigurationTest', 1), ('android.server.wm.SplashscreenTests', 1), ('android.widget.cts.SearchView_CursorTest', 1), ('android.view.inputmethod.cts.InputConnectionWrapperTest', 1), ('android.jdwptunnel.cts.JdwpTunnelTest', 1), ('android.media.cts.DecodeEditEncodeTest', 1), ('android.permission.cts.CameraPermissionTest', 1), ('com.android.cts.verifier.deskclock.DeskClockTestsActivity', 1), ('android.webkit.cts.WebViewRenderProcessClientTest', 1), ('android.opengl.cts.OpenGLES20NativeActivityOne', 1), ('android.appsecurity.cts.ApkVerityInstallTest', 1)]"	"[('setUp', 9), ('getInstrumentation', 4), ('now', 4), ('tearDown', 3), ('getContext', 3), ('getPackageName', 3), ('getDevice', 3), ('stream', 3), ('onPause', 3), ('onResume', 3), ('release', 2), ('getTargetContext', 2), ('getResources', 2), ('getSystem', 2), ('getPackageManager', 2), ('moveToHomeScreen', 2), ('name', 2), ('findFirst', 2), ('trim', 2), ('getIntent', 2), ('RouteCallback', 1), ('getMediaDirString', 1), ('stop', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('virtualMachineManager', 1), ('attachingConnectors', 1), ('transport', 1), ('defaultArguments', 1), ('eventRequestManager', 1), ('suspend', 1), ('allClasses', 1), ('createClassPrepareRequest', 1), ('enable', 1), ('resume', 1), ('eventQueue', 1), ('remove', 1), ('request', 1), ('referenceType', 1), ('getExternalStorageDirectory', 1), ('toString', 1), ('onShutter', 1), ('flush', 1), ('getName', 1), ('getWindow', 1), ('waitForFrameDrawn', 1), ('getRenderer', 1), ('getAttachShaderError', 1), ('getAttachedShaderCount', 1), ('countDown', 1), ('installSingle', 1), ('installAndUpdate', 1), ('getLaunchApiLevel', 1), ('assumeSecurityModelCompat', 1)]"	"[('CtsWindowManagerDeviceTestCases', 23), ('CtsMediaTestCases', 11), ('CtsSensorTestCases', 3), ('CtsWidgetTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsJdwpTunnelHostTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsAppSecurityHostTestCases', 1)]"	""	"android.hardware.cts.SensorParameterRangeTest"	"getContext"	"CtsSensorTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 20), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SystemMediaRouter2Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/CameraPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/deskclock/DeskClockTestsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewRenderProcessClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGLES20NativeActivityOne.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 1)]"	"[('(2,FULL,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(2,FULL,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(1,FULL,/android/server/wm/SplashscreenTests.java)', 1), ('(1,LIMITED,/android/media/cts/AudioManagerTest.java)', 1), ('(8,FULL,/android/media/cts/AudioManagerTest.java)', 1), ('(2,FULL,/android/widget/cts/SearchView_CursorTest.java)', 1), ('(2,FULL,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(5,FULL,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(2,FULL,/android/server/wm/KeyguardLockedTests.java)', 1), ('(86,FULL,/android/server/wm/AppConfigurationTests.java)', 1), ('(1,FULL,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(1,FULL,/android/permission/cts/CameraPermissionTest.java)', 1), ('(3,FULL,/com/android/cts/verifier/deskclock/DeskClockTestsActivity.java)', 1), ('(2,FULL,/android/webkit/cts/WebViewRenderProcessClientTest.java)', 1), ('(1,FULL,/android/opengl/cts/OpenGLES20NativeActivityOne.java)', 1), ('(2,FULL,/android/appsecurity/cts/ApkVerityInstallTest.java)', 1), ('(4,FULL,/android/hardware/cts/SensorParameterRangeTest.java)', 1)]"	"[('([1:/android/media/cts/AudioManagerTest.java]:[FULL]:[1]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 3), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[FULL]:[1]:method_text:[ }    @AppModeFull(reason = ""Instant apps cannot have HIGH_SAMPLING_RATE_SENSORS permission."")   ])', 2), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[FULL]:[2]:method_text:[callbacks        clearCallbacks();        mUiAutomation.dropShellPermissionIdentity();    }   ])', 1), ('([2:/android/media/cts/AudioPlaybackConfigurationTest.java]:[FULL]:[2]:method_text:[   // create an AudioPlaybackConfiguration directly, we first need to play something to get one.   ])', 1), ('([1:/android/server/wm/SplashscreenTests.java]:[FULL]:[1]:method_text:[      }        mWmState.waitForActivityRemoved(activity);        separateTestJournal();    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[LIMITED]:[1]:method_text:[        if (!isMusicPlayingBeforeTest) {            assertMusicActive(false);        }    }   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[FULL]:[2]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[FULL]:[1]:method_text:[)    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[FULL]:[1]:method_text:[        if (!isMusicPlayingBeforeTest) {            assertMusicActive(false);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[FULL]:[1]:method_text:[         return maxRingVol;        } else {            return maxRingVol - 1;        }    }   ])', 1), ('([2:/android/widget/cts/SearchView_CursorTest.java]:[FULL]:[2]:method_text:[times(1)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }   ])', 1), ('([2:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[FULL]:[2]:method_text:[ */);        verify(inputConnection, times(1)).commitContent(inputContentInfo, 0, null);    }   ])', 1), ('([5:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[FULL]:[5]:method_text:[of the activity     * class and put and wait for a breakpoint on the onCreate function.     */   ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[FULL]:[1]:method_text:[t contain pinned stack."", WINDOWING_MODE_PINNED,                ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[FULL]:[1]:method_text:[SHOW_WHEN_LOCKED_ACTIVITY, true);        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[FULL]:[3]:method_text:[lues reported in fullscreen should be larger than those reported in     * docked state.     */   ])', 1), ('([6:/android/server/wm/AppConfigurationTests.java]:[FULL]:[6]:method_text:[nResizedFromFullscreen()} but resizing     * from docked state to fullscreen (reverse).     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[FULL]:[2]:method_text:[;    }    /**     * Tests whether the Display sizes change when rotating the device.     */   ])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[FULL]:[3]:method_text:[datesWhenRotatingWhileFullscreen()} but when the Activity     * is in the docked stack.     */   ])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[FULL]:[3]:method_text:[ Activity will be     * relaunched twice and it should have same config as initial one.     */   ])', 1), ('([6:/android/server/wm/AppConfigurationTests.java]:[FULL]:[6]:method_text:[     * Same as {@link #testSameConfigurationFullSplitFullRelaunch} but without relaunch.     */   ])', 1), ('([18:/android/server/wm/AppConfigurationTests.java]:[FULL]:[18]:method_text:[ivity with the DialogWhenLarge theme can transform properly when in split     * screen.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[FULL]:[1]:method_text:[should be in portrait"",                ORIENTATION_PORTRAIT, reportedSizes.orientation);    }   ])', 1), ('([4:/android/server/wm/AppConfigurationTests.java]:[FULL]:[4]:method_text:[uested orientations and will not report a config     * change to an invisible activity.     */   ])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[FULL]:[3]:method_text:[h has     * rotation sensing optimization. So this is listed in cts-known-failures.xml.     */   ])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[FULL]:[3]:method_text:[**     * Test that device handles moving between two tasks with different orientations.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[FULL]:[2]:method_text:[h has     * rotation sensing optimization. So this is listed in cts-known-failures.xml.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[FULL]:[2]:method_text:[text derived from an application context     * will not change when the device rotates.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[FULL]:[1]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[FULL]:[2]:method_text:[**     * Test that device handles moving between two tasks with different orientations.     */   ])', 1), (""([2:/android/server/wm/AppConfigurationTests.java]:[FULL]:[2]:method_text:[Test that device doesn't change device orientation by app request while in multi-window.     */   ])"", 1), ('([10:/android/server/wm/AppConfigurationTests.java]:[FULL]:[10]:method_text:[  /**     * Test launching an activity which requests specific UI mode during creation.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[FULL]:[1]:method_text:[mWmState.assertResumedActivity(""Launched activity must be resumed"", NIGHT_MODE_ACTIVITY);    }   ])', 1), ('([5:/android/server/wm/AppConfigurationTests.java]:[FULL]:[5]:method_text:[ dockedActivitySizes);        assertSizesAreSame(dockedActivitySizes, applicationSizes);    }   ])', 1), ('([9:/android/server/wm/AppConfigurationTests.java]:[FULL]:[9]:method_text:[Sizes);        assertSizesAreSane(fullscreenActivitySizes, secondarySplitActivitySizes);    }   ])', 1), ('([1:/android/media/cts/DecodeEditEncodeTest.java]:[FULL]:[1]:method_text:[                  throw new RuntimeException(ioe);                }            }        }    }}])', 1), ('([1:/android/permission/cts/CameraPermissionTest.java]:[FULL]:[1]:method_text:[ Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */    @MediumTest   ])', 1), ('([3:/com/android/cts/verifier/deskclock/DeskClockTestsActivity.java]:[FULL]:[3]:method_text:[      throw new IllegalArgumentException(""Unknown test: "" + testId);            }        }    }}])', 1), ('([2:/android/webkit/cts/WebViewRenderProcessClientTest.java]:[FULL]:[2]:method_text:[       blockRenderProcess(blocker);        WebkitUtils.waitForFuture(rendererUnblocked);    }   ])', 1), ('([1:/android/opengl/cts/OpenGLES20NativeActivityOne.java]:[FULL]:[1]:method_text:[   mLatch.countDown();    }    public void onSurfaceCreated(GL10 gl, EGLConfig config) {    }}])', 1), ('([2:/android/appsecurity/cts/ApkVerityInstallTest.java]:[FULL]:[2]:method_text:[     getDevice().uninstallPackage(PACKAGE_NAME);    }    @CddTest(requirement = ""9.10/C-0-3"")   ])', 1), ('([2:/android/hardware/cts/SensorParameterRangeTest.java]:[FULL]:[2]:method_text:[ }    @AppModeFull(reason = ""Instant apps cannot have HIGH_SAMPLING_RATE_SENSORS permission."")   ])', 1)]"	""	""	"[('FULL', 44), ('LIMITED', 1)]"	"[('[android.media.cts.AudioManagerTest testVolume CtsMediaTestCases]', 2), ('[android.media.cts.SystemMediaRouter2Test ArrayList CtsMediaTestCases]', 1), ('[android.server.wm.SplashscreenTests testShortcutChangeTheme CtsWindowManagerDeviceTestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMicrophoneMuteIntent CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMusicActive CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetEncodedSurroundMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetAudioHwSyncForSession CtsMediaTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionSelection CtsWidgetTestCases]', 1), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInputConnectionWrapper CtsInputMethodTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest disable CtsJdwpTunnelHostTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testEnterPipOverKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedActivityAndPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests getDefaultDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromFullscreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromDockedStack CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingWhileFullscreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingToSideFromDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSameConfigurationFullSplitFullRelaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSameConfigurationFullSplitFullNoRelaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testFullscreenAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testNonfullscreenAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationRequestConfigChanges CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testNonFullscreenActivityPermitted CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testTaskCloseRestoreFixedOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testFixedOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testTaskMoveToBackOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenLandscapeAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testLaunchWithUiModeChange CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesTopActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.media.cts.DecodeEditEncodeTest testVideoEdit720p CtsMediaTestCases]', 1), ('[com.android.cts.verifier.deskclock.DeskClockTestsActivity setPassFailButtonClickListeners None]', 1), ('[android.webkit.cts.WebViewRenderProcessClientTest WebViewRenderProcessClientTest CtsWebkitTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testAccelerometerRange CtsSensorTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testGyroscopeRange CtsSensorTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.1  . These are in the Android source tree at"	"7.1.4.1"	"C-2-3"	"7.1.4.1/C-2-3"	"07010401.670203"	"""C-2-3] MUST report the maximum version of the OpenGL ES dEQP tests supported via the android.software.opengles.deqp.level feature flag."""	""	""	"android.software.opengles.deqp.level EQP"	""	""	""	""	"[('android.graphics.cts.OpenGlEsDeqpLevelTest', 3), ('android.graphics.cts.VulkanDeqpLevelTest', 2), ('com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite', 1), ('com.android.cts.apicoverage.TestCaseReport', 1), ('com.android.cts.releaseparser.TestSuiteParser', 1), ('android.hardware.camera2.cts.HeifWriterTest', 1), ('com.android.compatibility.common.tradefed.presubmit.CtsConfigLoadingTest', 1), ('android.midi.cts.MidiEchoTest', 1)]"	"[('getType', 7), ('newBuilder', 7), ('getAnnotations', 5), ('println', 4), ('getName', 4), ('getMethods', 3), ('getSimpleName', 3), ('setup', 3), ('getTargetContext', 3), ('getPackageManager', 3), ('printUsage', 2), ('getAccessFlags', 2), ('getValue', 2), ('length', 2), ('getElements', 1), ('toString', 1), ('printStackTrace', 1), ('getClasses', 1), ('entries', 1), ('getAbsolutePath', 1), ('getClassLoader', 1), ('hasMoreElements', 1), ('nextElement', 1), ('getSystemAvailableFeatures', 1), ('nanoTime', 1), ('notifyAll', 1)]"	"[('CtsGraphicsTestCases', 5), ('CtsCameraTestCases', 1), ('CtsMidiTestCases', 1)]"	""	"android.midi.cts.MidiEchoTest"	"notifyAll"	"CtsMidiTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/OpenGlEsDeqpLevelTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/TestCaseReport.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/TestSuiteParser.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/midi/src/android/midi/cts/MidiEchoTest.java', 1)]"	"[('(2,EQP,/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java)', 1), ('(5,EQP,/com/android/cts/apicoverage/TestCaseReport.java)', 1), ('(10,EQP,/android/graphics/cts/VulkanDeqpLevelTest.java)', 1), ('(3,EQP,/com/android/cts/releaseparser/TestSuiteParser.java)', 1), ('(3,EQP,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(3,EQP,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(1,android.software.opengles.deqp.level,/android/graphics/cts/OpenGlEsDeqpLevelTest.java)', 1), ('(10,EQP,/android/graphics/cts/OpenGlEsDeqpLevelTest.java)', 1), ('(1,EQP,/android/midi/cts/MidiEchoTest.java)', 1)]"	"[('([2:/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java]:[EQP]:[2]:method_text:[new GoNegReqPbcTestCase(context));        sTestSuite.add(new GoNegReqPinTestCase(context));    }}])', 1), ('([5:/com/android/cts/apicoverage/TestCaseReport.java]:[EQP]:[5]:method_text:[        printTestSuiteSummary(ts1, outputSummaryFilePath, tsContent.getKnownFailuresList());    }}])', 1), ('([4:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[4]:method_text:[              }            }        }    }    @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")   ])', 1), ('([6:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[6]:method_text:[kageManager.FEATURE_VULKAN_DEQP_LEVEL,                        MINIMUM_VULKAN_DEQP_LEVEL));    }}])', 1), ('([3:/com/android/cts/releaseparser/TestSuiteParser.java]:[EQP]:[3]:method_text:[thod : classDef.getMethods()) {                            // Junit4 style test case annotated with])', 1), ('([3:/android/hardware/camera2/cts/HeifWriterTest.java]:[EQP]:[3]:method_text:[           }            // TODO: add more key validations.        }        return result;    }}])', 1), ('([3:/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java]:[EQP]:[3]:method_text:[ * -> Exclude deprecated ApkInstaller.     * -> Check if host-side tests are non empty.     */   ])', 1), ('([1:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[android.software.opengles.deqp.level]:[1]:method_text:[d setup() {        mPm = InstrumentationRegistry.getTargetContext().getPackageManager();    }   ])', 1), ('([4:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[EQP]:[4]:method_text:[d setup() {        mPm = InstrumentationRegistry.getTargetContext().getPackageManager();    }   ])', 1), ('([6:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[EQP]:[6]:method_text:[Manager.FEATURE_OPENGLES_DEQP_LEVEL,                        MINIMUM_OPENGLES_DEQP_LEVEL));    }}])', 1), ('([1:/android/midi/cts/MidiEchoTest.java]:[EQP]:[1]:method_text:[o.TYPE_VIRTUAL,                echoInfo.getType());    }    // Is the MidiManager supported?   ])', 1)]"	""	""	"[('EQP', 10), ('android.software.opengles.deqp.level', 1)]"	"[('[com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite getTestId None]', 1), ('[com.android.cts.apicoverage.TestCaseReport isDirectory None]', 1), ('[android.graphics.cts.VulkanDeqpLevelTest testVulkanDeqpLevel CtsGraphicsTestCases]', 1), ('[com.android.cts.releaseparser.TestSuiteParser getTestSuite None]', 1), ('[android.hardware.camera2.cts.HeifWriterTest testHeif CtsCameraTestCases]', 1), ('[android.graphics.cts.OpenGlEsDeqpLevelTest testOpenGlEsDeqpLevel CtsGraphicsTestCases]', 1), ('[android.midi.cts.MidiEchoTest currentTimeMillis CtsMidiTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.2"	"3.9.2"	"C-1-4"	"3.9.2/C-1-4"	"03090200.670104"	"""C-1-4] MUST display a notification icon (similar to the AOSP upstream work badge) to indicate when user is within a managed profile application."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-5"	"7.5/H-1-5"	"07050000.720105"	"""[7.5/H-1-5] MUST have camera2 JPEG capture latency &lt; 1000ms for 1080p resolution as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras.  | [7.5/H-1-5] MUST have camera2 JPEG capture latency &lt; 1000 ms for 1080p resolution as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. """	""	""	"ITS JPEG CTS"	""	""	""	""	"[('android.media.cts.SystemMediaRouter2Test', 23), ('android.media.cts.AudioManagerTest', 5), ('android.widget.cts.SearchView_CursorTest', 3), ('android.location.cts.gnss.asn1.supl2.supl_report.ResultCode', 2), ('android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation', 2), ('android.telephony.cts.CellBroadcastDataMigrationTest', 2), ('android.content.pm.cts.shortcutmanager.throttling.ThrottledTests', 1), ('android.graphics.pdf.cts.Utils', 1), ('android.media.cts.AudioPlaybackConfigurationTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.server.wm.SplashscreenTests', 1), ('android.view.cts.ViewAnimationMatrixTest', 1), ('android.os.cts.IntentLaunchReceiver', 1), ('android.database.cts.AbstractCursor_SelfContentObserverTest', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.RenderUtils.DrawParameters', 1), ('android.cts.backup.restoresessionapp.BaseRestoreSessionAppTest', 1), ('com.android.cts.verifier.p2p.RequesterTestActivity', 1), ('android.net.wifi.nl80211.cts.RadioChainInfoTest', 1), ('com.android.cts.deviceowner.wificonfigcreator.WifiConfigCreatorActivity', 1)]"	"[('getWidth', 12), ('getHeight', 10), ('setUp', 10), ('getInstrumentation', 7), ('getResources', 3), ('recycle', 3), ('getName', 3), ('tearDown', 3), ('getTargetContext', 3), ('getPackageName', 3), ('enoughToFilter', 3), ('run', 2), ('getClass', 2), ('release', 2), ('getAssignedValue', 2), ('edit', 2), ('commit', 2), ('getContext', 2), ('getSystem', 2), ('WcdmaCellInformation', 2), ('super', 2), ('getTag', 2), ('toLowerCase', 2), ('RouteCallback', 1), ('getCacheDir', 1), ('flush', 1), ('Matrix', 1), ('width', 1), ('height', 1), ('getMediaDirString', 1), ('stop', 1), ('DumpOnFailure', 1), ('getViewMatrix', 1), ('getProjectionMatrix', 1), ('getLight', 1), ('clearSharedPrefs', 1), ('clear', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getPackageManager', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('getSimpleName', 1), ('myUserHandle', 1), ('getIntent', 1), ('getAction', 1), ('getChildCount', 1), ('getCursor', 1), ('setup', 1), ('getActivity', 1)]"	"[('CtsMediaTestCases', 29), ('CtsLocationGnssTestCases', 4), ('CtsWidgetTestCases', 3), ('CtsTelephonyTestCases', 2), ('CtsPdfTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsViewTestCases', 1), ('CtsDatabaseTestCases', 1), ('CtsWifiTestCases', 1)]"	""	"android.widget.cts.SearchView_CursorTest"	"getActivity"	"CtsWidgetTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SystemMediaRouter2Test.java', 23), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellBroadcastDataMigrationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/throttling/src/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/IntentLaunchReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/AbstractCursor_SelfContentObserverTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/RestoreSessionTest/src/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/RequesterTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/RadioChainInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/WifiConfigCreator/src/com/android/cts/deviceowner/wificonfigcreator/WifiConfigCreatorActivity.java', 1)]"	"[('(1,ITS,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(87,CTS,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(1,CTS,/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java)', 1), ('(3,CTS,/android/graphics/pdf/cts/Utils.java)', 1), ('(4,CTS,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(3,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(1,CTS,/android/server/wm/SplashscreenTests.java)', 1), ('(1,CTS,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(1,CTS,/android/os/cts/IntentLaunchReceiver.java)', 1), ('(8,ITS,/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java)', 1), ('(5,CTS,/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java)', 1), ('(1,CTS,/android/database/cts/AbstractCursor_SelfContentObserverTest.java)', 1), ('(2,CTS,/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java)', 1), ('(1,CTS,/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java)', 1), ('(7,CTS,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(17,CTS,/android/media/cts/AudioManagerTest.java)', 1), ('(38,ITS,/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java)', 1), ('(9,CTS,/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java)', 1), ('(1,ITS,/android/telephony/cts/CellBroadcastDataMigrationTest.java)', 1), ('(1,CTS,/android/telephony/cts/CellBroadcastDataMigrationTest.java)', 1), ('(3,CTS,/android/net/wifi/nl80211/cts/RadioChainInfoTest.java)', 1), ('(1,CTS,/com/android/cts/deviceowner/wificonfigcreator/WifiConfigCreatorActivity.java)', 1), ('(8,CTS,/android/widget/cts/SearchView_CursorTest.java)', 1)]"	"[('([7:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[7]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 2), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[ITS]:[1]:method_text:[nd = true;                break;            }        }        assertTrue(routeFound);    }   ])', 1), ('([14:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[14]:method_text:[callbacks        clearCallbacks();        mUiAutomation.dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[r2ForCts,                MediaRouter2.getInstance(mContext, mContext.getPackageName()));    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[    assertEquals(mContext.getPackageName(), mSystemRouter2ForCts.getClientPackageName());    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[2]:method_text:[ame instance.        assertSame(controller, mSystemRouter2ForCts.getSystemController());    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[Id() {        assertNull(mSystemRouter2ForCts.getController(""nonExistentControllerId""));    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[2]:method_text:[otNull(controllerById);        assertEquals(systemControllerId, controllerById.getId());    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[nd = true;                break;            }        }        assertTrue(routeFound);    }   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[2]:method_text:[nd = true;                break;            }        }        assertTrue(routeFound);    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[ute(routeToAdd);        assertTrue(addedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[te(ROUTE_ID2);        assertTrue(removedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([3:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[3]:method_text:[argetVolume);        assertTrue(changedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([3:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[3]:method_text:[   mAudioManager.setStreamVolume(AudioManager.STREAM_MUSIC, originalVolume, 0);        }    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[1]:method_text:[ld());        assertTrue(featuresChangedLatch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([5:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[5]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 1), ('([3:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[3]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 1), ('([4:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[4]:method_text:[erCalled,    // but with MediaRouter2#transfer(controller, route) instead of transferTo(route).   ])', 1), ('([6:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[6]:method_text:[            mSystemRouter2ForCts.unregisterTransferCallback(transferCallback);        }    }   ])', 1), ('([6:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[6]:method_text:[         mSystemRouter2ForCts.unregisterControllerCallback(controllerCallback);        }    }   ])', 1), ('([5:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[5]:method_text:[         mSystemRouter2ForCts.unregisterControllerCallback(controllerCallback);        }    }   ])', 1), ('([11:/android/media/cts/SystemMediaRouter2Test.java]:[CTS]:[11]:method_text:[r (RoutingController controller : controllers) {            controller.release();        }    }}])', 1), ('([1:/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java]:[CTS]:[1]:method_text:[ynamicShortcuts(list()));            assertTrue(manager.updateShortcuts(list()));        }    }}])', 1), ('([3:/android/graphics/pdf/cts/Utils.java]:[CTS]:[3]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([4:/android/media/cts/AudioPlaybackConfigurationTest.java]:[CTS]:[4]:method_text:[   // create an AudioPlaybackConfiguration directly, we first need to play something to get one.   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CTS]:[3]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/server/wm/SplashscreenTests.java]:[CTS]:[1]:method_text:[TRA_INTENT, startIntent);        homeActivity.sendCommand(COMMAND_START_ACTIVITY, data);    }   ])', 1), ('([1:/android/view/cts/ViewAnimationMatrixTest.java]:[CTS]:[1]:method_text:[     new ActivityTestRule<>(ViewAnimationMatrixActivity.class, false, false);    @UiThreadTest   ])', 1), ('([1:/android/os/cts/IntentLaunchReceiver.java]:[CTS]:[1]:method_text:[        if (innerIntent != null) {            context.sendBroadcast(innerIntent);        }    }}])', 1), ('([8:/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java]:[ITS]:[8]:method_text:[blic String toIndentedString(String indent) {    return ""ResultCode = "" + getValue() + "";\\n"";  }}])', 1), ('([5:/android/location/cts/gnss/asn1/supl2/supl_report/ResultCode.java]:[CTS]:[5]:method_text:[blic String toIndentedString(String indent) {    return ""ResultCode = "" + getValue() + "";\\n"";  }}])', 1), ('([1:/android/database/cts/AbstractCursor_SelfContentObserverTest.java]:[CTS]:[1]:method_text:[.AndroidTestCase;public class AbstractCursor_SelfContentObserverTest extends AndroidTestCase{   ])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java]:[CTS]:[2]:method_text:[       return mProjectionMatrix;    }    public Light getLight() {        return mLight;    }}])', 1), ('([1:/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java]:[CTS]:[1]:method_text:[, int prefValue) {        assertThat(mPreferences.getInt(prefKey, 0)).isEqualTo(prefValue);    }}])', 1), ('([7:/com/android/cts/verifier/p2p/RequesterTestActivity.java]:[CTS]:[7]:method_text:[ }).show();    }    private TestCaseListener getTestCaseListener() {        return this;    }}])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[CTS]:[4]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([6:/android/media/cts/AudioManagerTest.java]:[CTS]:[6]:method_text:[);        mAudioManager.playSoundEffect(AudioManager.FX_FOCUS_NAVIGATION_RIGHT, volume);    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CTS]:[1]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CTS]:[1]:method_text:[ {            fail(""onPreferredDevicesForStrategyChanged must not be called"");        }    }   ])', 1), ('([5:/android/media/cts/AudioManagerTest.java]:[CTS]:[5]:method_text:[          fail(""onPreferredDevicesForCapturePresetChanged must not be called"");        }    }   ])', 1), ('([38:/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java]:[ITS]:[38]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([9:/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java]:[CTS]:[9]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/android/telephony/cts/CellBroadcastDataMigrationTest.java]:[ITS]:[1]:method_text:[rray) {        if (array != null && array.length > 0) {            fail(message);        }    }])', 1), ('([1:/android/telephony/cts/CellBroadcastDataMigrationTest.java]:[CTS]:[1]:method_text:[should be headless without any other activities, services or providers to handle alerts.     */   ])', 1), ('([3:/android/net/wifi/nl80211/cts/RadioChainInfoTest.java]:[CTS]:[3]:method_text:[ tests if Wifi is not supported        assumeTrue(WifiFeature.isWifiSupported(context));    }   ])', 1), ('([1:/com/android/cts/deviceowner/wificonfigcreator/WifiConfigCreatorActivity.java]:[CTS]:[1]:method_text:[pted while changing wifi settings"", ie);        } finally {            finish();        }    }}])', 1), ('([5:/android/widget/cts/SearchView_CursorTest.java]:[CTS]:[5]:method_text:[    mSearchView.setSuggestionsAdapter(mSuggestionsAdapter);        });    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/SearchView_CursorTest.java]:[CTS]:[1]:method_text:[times(1)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }   ])', 1), ('([2:/android/widget/cts/SearchView_CursorTest.java]:[CTS]:[2]:method_text:[, times(2)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }}])', 1)]"	""	""	"[('CTS', 46), ('ITS', 4)]"	"[('[android.media.cts.SystemMediaRouter2Test testGetAllRoutes CtsMediaTestCases]', 2), ('[android.location.cts.gnss.asn1.supl2.supl_report.ResultCode isExtensionValue CtsLocationGnssTestCases]', 2), ('[android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation isTagImplicit CtsLocationGnssTestCases]', 2), ('[android.media.cts.SystemMediaRouter2Test ArrayList CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetInstanceReturnsSameInstance CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetClientPackageName CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetSystemController CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetControllerReturnsNullForUnknownId CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetController CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testGetRoutes CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesAdded CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesRemoved CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesChanged CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnRoutesChanged_whenLocalVolumeChanged CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRouteCallbackOnPreferredFeaturesChanged CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransferTo_succeeds_onTransferCalled CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransferTo_fails_onTransferFailureCalled CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransferToTwice CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testTransfer_succeeds_onTransferCalled CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testStop CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerSelectAndDeselectRoute CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerTransferToRoute CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerSetSessionVolume CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerRelease CtsMediaTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.throttling.ThrottledTests ThrottledTests None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.server.wm.SplashscreenTests prepareTestLauncher CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.p2p.RequesterTestActivity getTestCase None]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSoundEffects CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testCheckingZenModeBlockDoesNotRequireNotificationPolicyAccess CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetAdditionalOutputDeviceDelay CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPreferredDevicesForStrategy CtsMediaTestCases]', 1), ('[android.telephony.cts.CellBroadcastDataMigrationTest testLegacyContentProvider CtsTelephonyTestCases]', 1), ('[com.android.cts.deviceowner.wificonfigcreator.WifiConfigCreatorActivity finish None]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionSelection CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionEnterKey CtsWidgetTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.2  . IEEE 802.11"	"7.4.2"	"C-1-9"	"7.4.2/C-1-9"	"07040200.670109"	"""C-1-9] MUST iterate probe request sequence number as normal (sequentially) between the probe requests in a scan."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"5.1.1  . Media Codec Characterization"	"5.1.1"	"C-1-6"	"5.1.1/C-1-6"	"05010100.670106"	"""C-1-6] Codecs not present in the Android Open Source Project or not based on the source code in that project MUST be characterized as vendor."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.9.1.1  . The"	"3.9.1.1"	"C-1-7"	"3.9.1.1/C-1-7"	"03090101.670107"	"""C-1-7] MUST not enroll any DPC application as the Device Owner App any more."""	""	""	"DPC"	""	""	""	""	"[('library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest', 61), ('com.android.cts.deviceandprofileowner.SuspendPackageTest', 2), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 2), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerHostSideTransferTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('processor.main.java.com.android.bedstead.remotedpc.processor.Processor', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi30', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1)]"	"[('users', 36), ('devicePolicy', 34), ('createUser', 18), ('createAndStart', 18), ('userHandle', 16), ('remove', 13), ('getDeviceOwner', 12), ('getDevice', 9), ('devicePolicyController', 8), ('any', 5), ('tearDown', 4), ('setUp', 3), ('deviceOwner', 3), ('profileOwner', 3), ('devicePolicyManager', 3), ('getBuild', 2), ('getSupportedSourceVersion', 1), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1), ('getName', 1), ('DeviceState', 1), ('deviceOwner_noDeviceOwner_returnsNull', 1), ('deviceOwner_nonRemoteDpcDeviceOwner_returnsNull', 1), ('deviceOwner_remoteDpcDeviceOwner_returnsInstance', 1), ('profileOwner_noProfileOwner_returnsNull', 1), ('profileOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userHandle_null_throwsException', 1), ('profileOwner_userHandle_noProfileOwner_returnsNull', 1), ('profileOwner_userHandle_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userHandle_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userReference_null_throwsException', 1), ('profileOwner_userReference_noProfileOwner_returnsNull', 1), ('profileOwner_userReference_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userReference_remoteDpcProfileOwner_returnsInstance', 1), ('any_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userHandle_null_throwsException', 1), ('any_userHandle_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userHandle_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userHandle_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userReference_null_throwsException', 1), ('any_userReference_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userReference_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userReference_remoteDpcProfileOwner_returnsProfileOwner', 1), ('setAsDeviceOwner_userHandle_null_throwsException', 1), ('setAsDeviceOwner_userHandle_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userHandle_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userHandle_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsDeviceOwner_userReference_null_throwsException', 1), ('setAsDeviceOwner_userReference_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userReference_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userReference_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsProfileOwner_userHandle_null_throwsException', 1), ('setAsProfileOwner_userHandle_alreadySet_doesNothing', 1), ('setAsProfileOwner_userHandle_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userHandle_doesNotHaveProfileOwner_setsProfileOwner', 1), ('setAsProfileOwner_userReference_null_throwsException', 1), ('setAsProfileOwner_userReference_alreadySet_doesNothing', 1), ('setAsProfileOwner_userReference_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userReference_doesNotHaveProfileOwner_setsProfileOwner', 1), ('devicePolicyController_returnsDevicePolicyController', 1), ('remove_deviceOwner_removes', 1), ('remove_profileOwner_removes', 1), ('frameworkCall_makesCall', 1), ('getCurrentFailedPasswordAttempts', 1), ('frameworkCall_onProfile_makesCall', 1), ('frameworkCallRequiresProfileOwner_notProfileOwner_throwsSecurityException', 1), ('forDevicePolicyController_nullDevicePolicyController_throwsException', 1), ('forDevicePolicyController_nonRemoteDpcDevicePolicyController_throwsException', 1), ('forDevicePolicyController_remoteDpcDevicePolicyController_returnsRemoteDpc', 1)]"	"[('CtsDevicePolicyManagerTestCases', 4), ('CtsDevicePolicyTestCases', 2), ('CtsMediaParserTestCases', 1), ('CtsTvTestCases', 1)]"	""	"library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest"	"devicePolicyController"	""	"[('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java', 61), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1)]"	"[('(2,DPC,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(4,DPC,/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java)', 1), ('(2,DPC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(4,DPC,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(4,DPC,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(2,DPC,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(19,DPC,/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java)', 1), ('(2,DPC,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(2,DPC,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,DPC,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(4,DPC,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(27,DPC,/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(179,DPC,/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java)', 1)]"	"[('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[);        } finally {            remoteDPC.devicePolicyController().remove();        }    }   ])', 4), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 2), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[        } finally {            deviceOwner.devicePolicyController().remove();        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[    } finally {            sTestApis.devicePolicy().getDeviceOwner().remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[PC.devicePolicyController());        } finally {            profile.remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);    }}])', 1), ('([4:/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java]:[DPC]:[4]:method_text:[NCOMING_TEST);            installAppAsUser(TRANSFER_OWNER_INCOMING_APK, mUserId);        }    }}])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {        testAssetExtraction(""wav/sample_ima_adpcm.wav"");    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[1]:method_text:[RECEIVER_PKG);    }    /**     * Verify that we cannot suspend launcher and dpc app.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[3]:method_text:[);        assertWithMessage(""package %s suspension"", pkg).that(actual).isEqualTo(expected);    }}])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[provider that provides enterprise slice cannot     * see the enterprise slice requests.     */   ])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[()), offerCallback);        offerCallback.assertNoCallback();        return offerCallback;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases. * */public class ResetPasswordTest extends BaseDeviceAdminTest {   ])', 1), ('([19:/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java]:[DPC]:[19]:method_text:[getMessager()                .printMessage(Diagnostic.Kind.ERROR, errorText, errorElement);    }}])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[e(ComponentName, String)} */public class CertInstallDelegateTest extends BaseJUnit3TestCase {   ])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[DPC]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[DPC]:[1]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([4:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[DPC]:[4]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 1), ('([27:/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java]:[DPC]:[27]:method_text:[min void addPersistentPreferredActivity(            IntentFilter filter, ComponentName activity);}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java]:[DPC]:[1]:method_text:[ws Exception {        runDeviceTestsAsUser(DEVICE_ADMIN_PKG, className, testName, mUserId);    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[DPC]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([7:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[7]:method_text:[s    public static void teardownClass() {        sNonRemoteDpcTestApp.uninstall(sUser);    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Owner_noDeviceOwner_returnsNull() {        assertThat(RemoteDpc.deviceOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.deviceOwner()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.profileOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[rofileOwner()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.profileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[e.userHandle())).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[nterException.class,                () -> RemoteDpc.profileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[oDeviceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[moteDpc.any()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[emoteDpc.any()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[        assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser.userHandle())).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.userHandle())).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[())).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[     assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser)).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[teDpc.any(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Dpc.any(sUser)).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[le)).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[terException.class,                () -> RemoteDpc.setAsDeviceOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ption.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Exception.class,                () -> RemoteDpc.setAsDeviceOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[on.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[erException.class,                () -> RemoteDpc.setAsProfileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[tion.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[xception.class,                () -> RemoteDpc.setAsProfileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[n.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[Policy().getDeviceOwner());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[oteDPC.remove();        assertThat(sTestApis.devicePolicy().getDeviceOwner()).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[eed to support the case where there is both a DO and a PO on    //  older versions of Android?   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[ntFailedPasswordAttempts();        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[ succeeds            remoteDPC.devicePolicyManager().isUsingUnifiedPassword();        }    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[.isUsingUnifiedPassword());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.forDevicePolicyController(null));    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Controller(deviceOwner));        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([8:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[8]:method_text:[                 .isNotNull();        } finally {            remoteDPC.remove();        }    }])', 1)]"	""	""	"[('DPC', 77)]"	"[('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNull None]', 19), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNotNull None]', 15), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isUsingUnifiedPassword None]', 2), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testWavWithImaAdpcm CtsMediaParserTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSetPackagesNotSuspended None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSuspendNotSuspendablePackages None]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_enableService_issueRequest CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_disableService_noIssueRequest CtsDevicePolicyTestCases]', 1), ('[processor.main.java.com.android.bedstead.remotedpc.processor.Processor latest None]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testRevokeKeyPairFromApp_keyNotUsable None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtsc3FrontendSettings CtsTvTestCases]', 1), ('[communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager isUsingUnifiedPassword None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest TestApis None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userReference_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userReference_nonExistingUser_throwsException None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-12"	"9.9.3/C-1-12"	"09090300.670112"	"""C-1-12] If the device has Advanced Encryption Standard (AES) instructions (such as ARMv8 Cryptography Extensions on ARM-based devices, or AES-NI on x86-based devices) then the AES-based options above for file name, file contents, and filesystem metadata encryption MUST be used, not Adiantum. | C-1-12] MUST be securely erased during bootloader unlock and lock as described here. SHOULD make preinstalled essential apps (e.g. Alarm, Phone, Messenger) Direct Boot aware. The upstream Android Open Source project provides a preferred implementation of File Based Encryption based on the Linux kernel &quot;fscrypt&quot; encryption feature, and of Metadata Encryption based on the Linux kernel &quot;dm-default-key&quot; feature. <h4 id=""994_resume_on_reboot"" """	""	""	"AES ARM"	""	""	""	""	"[('android.media.cts.AudioManagerTest', 16), ('android.alarmmanager.cts.BasicApiTests', 12), ('android.mediadrm.cts.MediaDrmMockTest', 5), ('android.keystore.cts.ImportWrappedKeyTest', 3), ('android.keystore.cts.CipherTest', 3), ('android.os.cts.SeccompTest', 2), ('android.view.inputmethod.cts.InputConnectionWrapperTest', 1), ('com.android.cts.verifier.deskclock.DeskClockTestsActivity', 1), ('com.android.cts.verifier.sensors.OffBodySensorTestActivity', 1), ('com.android.cts.verifier.security.FingerprintBoundKeysTest', 1), ('com.android.cts.verifier.sensors.SignificantMotionTestActivity', 1), ('android.view.inputmethod.cts.BaseInputConnectionTest', 1), ('android.keystore.cts.BlockCipherTestBase', 1), ('com.android.cts.appbinding.AppBindingHostTest', 1), ('android.widget.cts.AbsListViewTest', 1), ('android.extractnativelibs.cts.CtsExtractNativeLibsHostTestBase', 1)]"	"[('getInstrumentation', 7), ('getDevice', 6), ('getTargetContext', 5), ('setUp', 5), ('getContext', 4), ('getAction', 4), ('getPackageName', 3), ('getResources', 3), ('onSensorChanged', 3), ('trim', 3), ('find', 3), ('getSystem', 2), ('tearDown', 2), ('waitForBroadcastIdle', 2), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getPackageManager', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('getName', 1), ('elapsedRealtimeNanos', 1), ('getType', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('SecureRandom', 1), ('run', 1), ('StringBuilder', 1), ('toString', 1), ('setup', 1), ('getActivity', 1), ('getRootWindowInsets', 1), ('getSystemGestureInsets', 1), ('cleanUp', 1), ('supports3DES', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('getSimpleName', 1), ('AlarmManagerDeviceConfigHelper', 1), ('commitAndAwaitPropagation', 1), ('restoreAll', 1)]"	"[('CtsMediaTestCases', 16), ('CtsAlarmManagerTestCases', 12), ('CtsKeystoreTestCases', 7), ('CtsMediaDrmTestCases', 5), ('CtsInputMethodTestCases', 2), ('CtsAppBindingHostTestCases', 1), ('CtsWidgetTestCases', 1), ('CtsExtractNativeLibsHostTestCases', 1)]"	""	"android.alarmmanager.cts.BasicApiTests"	"restoreAll"	"CtsAlarmManagerTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/BasicApiTests.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmMockTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/ImportWrappedKeyTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/SeccompTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/deskclock/DeskClockTestsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/OffBodySensorTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/FingerprintBoundKeysTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/SignificantMotionTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/BaseInputConnectionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/BlockCipherTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appbinding/hostside/src/com/android/cts/appbinding/AppBindingHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/AbsListViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/extractnativelibs/src/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestBase.java', 1)]"	"[('(48,ARM,/android/media/cts/AudioManagerTest.java)', 1), ('(2,ARM,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(74,ARM,/com/android/cts/verifier/deskclock/DeskClockTestsActivity.java)', 1), ('(21,ARM,/com/android/cts/verifier/sensors/OffBodySensorTestActivity.java)', 1), ('(2,AES,/com/android/cts/verifier/security/FingerprintBoundKeysTest.java)', 1), ('(16,ARM,/com/android/cts/verifier/sensors/SignificantMotionTestActivity.java)', 1), ('(16,AES,/android/keystore/cts/ImportWrappedKeyTest.java)', 1), ('(2,ARM,/android/view/inputmethod/cts/BaseInputConnectionTest.java)', 1), ('(1,AES,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(5,AES,/android/mediadrm/cts/MediaDrmMockTest.java)', 1), ('(1,ARM,/com/android/cts/appbinding/AppBindingHostTest.java)', 1), ('(1,ARM,/android/widget/cts/AbsListViewTest.java)', 1), ('(3,ARM,/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestBase.java)', 1), ('(6,ARM,/android/os/cts/SeccompTest.java)', 1), ('(37,AES,/android/keystore/cts/CipherTest.java)', 1), ('(212,ARM,/android/alarmmanager/cts/BasicApiTests.java)', 1)]"	"[('([3:/android/media/cts/AudioManagerTest.java]:[ARM]:[3]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 5), ('([6:/android/media/cts/AudioManagerTest.java]:[ARM]:[6]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 3), ('([2:/android/media/cts/AudioManagerTest.java]:[ARM]:[2]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 2), ('([1:/android/mediadrm/cts/MediaDrmMockTest.java]:[AES]:[1]:method_text:[opertyByteArray(""mock-iv"")));        assertTrue(Arrays.equals(output, expected_output));    }   ])', 2), ('([6:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[6]:method_text:[ver::isAlarmed,                ""Exact alarm with work source did not fire as expected"");    }   ])', 2), ('([2:/android/media/cts/AudioManagerTest.java]:[ARM]:[2]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[ARM]:[1]:method_text:[        if (!isMusicPlayingBeforeTest) {            assertMusicActive(false);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[ARM]:[1]:method_text:[e."",                        mAudioManager.isStreamMute(stream));            }        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[ARM]:[1]:method_text:[etStreamMute failed."",                    mAudioManager.isStreamMute(stream));        }    }   ])', 1), ('([5:/android/media/cts/AudioManagerTest.java]:[ARM]:[5]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[ARM]:[1]:method_text:[           STREAM_ALARM, STREAM_NOTIFICATION,            STREAM_DTMF,  STREAM_ACCESSIBILITY };   ])', 1), ('([2:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[ARM]:[2]:method_text:[ */);        verify(inputConnection, times(1)).commitContent(inputContentInfo, 0, null);    }   ])', 1), ('([74:/com/android/cts/verifier/deskclock/DeskClockTestsActivity.java]:[ARM]:[74]:method_text:[      throw new IllegalArgumentException(""Unknown test: "" + testId);            }        }    }}])', 1), ('([21:/com/android/cts/verifier/sensors/OffBodySensorTestActivity.java]:[ARM]:[21]:method_text:[ null) && mDeviceSuspendLock.isHeld()) {            mDeviceSuspendLock.release();        }    }}])', 1), ('([2:/com/android/cts/verifier/security/FingerprintBoundKeysTest.java]:[AES]:[2]:method_text:[etMessage(R.string.sec_fp_dialog_message);            return builder.create();        }    }}])', 1), ('([16:/com/android/cts/verifier/sensors/SignificantMotionTestActivity.java]:[ARM]:[16]:method_text:[           return registry != null ? registry : new TriggerEventRegistry(null, 0);        }    }}])', 1), ('([1:/android/keystore/cts/ImportWrappedKeyTest.java]:[AES]:[1]:method_text:[ntext() {        return InstrumentationRegistry.getInstrumentation().getTargetContext();    }   ])', 1), ('([3:/android/keystore/cts/ImportWrappedKeyTest.java]:[AES]:[3]:method_text:[RYPT_MODE, key);        assertEquals(new String(c.doFinal(encrypted)), ""hello, world"");    }   ])', 1), ('([12:/android/keystore/cts/ImportWrappedKeyTest.java]:[AES]:[12]:method_text:[(isStrongBoxBacked)                        .build());        return kpg.generateKeyPair();    }}])', 1), ('([2:/android/view/inputmethod/cts/BaseInputConnectionTest.java]:[ARM]:[2]:method_text:[ text.     * setSelection: changes the selection position in the current editable text.     */   ])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[AES]:[1]:method_text:[param);            fail();        } catch (InvalidAlgorithmParameterException expected) {}    }}])', 1), ('([1:/android/mediadrm/cts/MediaDrmMockTest.java]:[AES]:[1]:method_text:[toSession(sessionId, ""AES/CBC/NoPadding"", ""HmacSHA256"");        assertFalse(cs == null);    }   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmMockTest.java]:[AES]:[1]:method_text:[rray(""mock-message"")));        assertTrue(Arrays.equals(signature, expected_signature));    }   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmMockTest.java]:[AES]:[1]:method_text:[ata, mExpectedData));            mGotEvent = true;            mLock.notify();        }    }   ])', 1), ('([1:/com/android/cts/appbinding/AppBindingHostTest.java]:[ARM]:[1]:method_text:[   * Install APK 1 and make it the default SMS app and make sure the service gets bound.     */   ])', 1), ('([1:/android/widget/cts/AbsListViewTest.java]:[ARM]:[1]:method_text:[e                & Configuration.UI_MODE_TYPE_MASK) == Configuration.UI_MODE_TYPE_WATCH;    }   ])', 1), ('([3:/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestBase.java]:[ARM]:[3]:method_text:[IG_SUFFIX);        return installPackageIncrementalFromFiles(apkFile, v4SignatureFile, """");    }}])', 1), ('([5:/android/os/cts/SeccompTest.java]:[ARM]:[5]:method_text:[ &&               !(primaryAbi.equals(""armeabi-v7a"") || primaryAbi.equals(""arm64-v8a""));    }   ])', 1), ('([1:/android/os/cts/SeccompTest.java]:[ARM]:[1]:method_text:[lUnitTestSuite(tests);    }    /* // The SECCOMP_RET_TRACE does not work under Android Arm32.   ])', 1), ('([16:/android/keystore/cts/CipherTest.java]:[AES]:[16]:method_text:[ close() throws Exception {            mLockCredential.close();        }    }    @Presubmit   ])', 1), ('([6:/android/keystore/cts/CipherTest.java]:[AES]:[6]:method_text:[yptionProvider,                            e);                }            }        }    }   ])', 1), ('([15:/android/keystore/cts/CipherTest.java]:[AES]:[15]:method_text:[s key            return Arrays.copyOf(plaintext, maxSupportedPlaintextSizeBytes);        }    }}])', 1), ('([32:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[32]:method_text:[        mContext.unregisterReceiver(mMockAlarmReceiver2);        toggleIdleMode(false);    }   ])', 1), ('([11:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[11]:method_text:[un();        assertEquals(mMockAlarmReceiver.getElapsedTime(), mWakeupTime, TIME_DELTA);    }   ])', 1), ('([8:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[8]:method_text:[) {                return mMockAlarmReceiver.isAlarmed();            }        }.run();    }   ])', 1), ('([5:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[5]:method_text:[be     * statistically significant -- i.e. that the two alarms are not being coalesced.     */   ])', 1), ('([17:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[17]:method_text:[es with exact alarms close to inexact alarms"");                }            }        }    }   ])', 1), ('([11:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[11]:method_text:[ mPowerManager.isDeviceIdleMode()),                ""Could not set doze state to "" + on);    }   ])', 1), ('([2:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[2]:method_text:[                ""testSetPrioritizedWithoutPermission"", r -> r.run(), mMockAlarmReceiver);    }   ])', 1), ('([42:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[42]:method_text:[               (secondAlarmTime - firstAlarmTime) > (PRIORITY_ALARM_DELAY - FAIL_DELTA));    }   ])', 1), ('([10:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[10]:method_text:[d();            }        }.run();        assertFalse(mMockAlarmReceiver.isAlarmed());    }   ])', 1), ('([62:/android/alarmmanager/cts/BasicApiTests.java]:[ARM]:[62]:method_text:[   public void onAlarm() {            onReceive(null, new Intent(mTargetAction));        }    }}])', 1)]"	""	""	"[('ARM', 38), ('AES', 13)]"	"[('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testVolume CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMuteFixedVolume CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMuteDndUnaffectedStreams CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInAlarmsOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInAlarmsOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInPriorityOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInPriorityOnly CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMuteAll CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMediaAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlySystemAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlySystemDisallowedWithRingerMuted CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyAlarmsAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyRingerAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyChannelsCanBypassDnd CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeWithIllegalDirection CtsMediaTestCases]', 1), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInputConnectionWrapper CtsInputMethodTestCases]', 1), ('[com.android.cts.verifier.deskclock.DeskClockTestsActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.sensors.OffBodySensorTestActivity getTestLogger None]', 1), ('[com.android.cts.verifier.security.FingerprintBoundKeysTest setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.sensors.SignificantMotionTestActivity SignificantMotionTestActivity None]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey CtsKeystoreTestCases]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey_AES_StrongBox CtsKeystoreTestCases]', 1), ('[android.view.inputmethod.cts.BaseInputConnectionTest testOpComposingSpans CtsInputMethodTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testVeryLargeBlock CtsKeystoreTestCases]', 1), ('[android.mediadrm.cts.MediaDrmMockTest testCryptoSession CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmMockTest testCryptoSessionEncrypt CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmMockTest testCryptoSessionDecrypt CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmMockTest testCryptoSessionSign CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmMockTest testCryptoSessionVerify CtsMediaDrmTestCases]', 1), ('[com.android.cts.appbinding.AppBindingHostTest isSmsCapable CtsAppBindingHostTestCases]', 1), ('[android.widget.cts.AbsListViewTest isWatch CtsWidgetTestCases]', 1), ('[android.extractnativelibs.cts.CtsExtractNativeLibsHostTestBase isIncrementalInstallSupported CtsExtractNativeLibsHostTestCases]', 1), ('[android.os.cts.SeccompTest isRunningUnderEmulatedAbi None]', 1), ('[android.os.cts.SeccompTest testKernelPrecedenceTests None]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testCiphertextGeneratedByHighestPriorityProviderDecryptsByAndroidKeyStore CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testInitEncryptAsymmetricIgnoresThatKeyNoLongerValid CtsKeystoreTestCases]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetTypes CtsAlarmManagerTestCases]', 1), ('[android.alarmmanager.cts.BasicApiTests testAlarmTriggersImmediatelyIfSetTimeIsNegative CtsAlarmManagerTestCases]', 1), ('[android.alarmmanager.cts.BasicApiTests noBinderOverflowWithListenerSpam CtsAlarmManagerTestCases]', 1), ('[android.alarmmanager.cts.BasicApiTests testExactAlarmBatching CtsAlarmManagerTestCases]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetExactWithWorkSource CtsAlarmManagerTestCases]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetExact CtsAlarmManagerTestCases]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetRepeating CtsAlarmManagerTestCases]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetPrioritizedWithoutPermission CtsAlarmManagerTestCases]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetPrioritized CtsAlarmManagerTestCases]', 1), ('[android.alarmmanager.cts.BasicApiTests testCancel CtsAlarmManagerTestCases]', 1), ('[android.alarmmanager.cts.BasicApiTests testSetAlarmClock CtsAlarmManagerTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-10"	"9.9.3/C-1-10"	"09090300.670110"	"""C-1-10] MUST be unique and distinct, in other words no user&#39;s CE or DE key matches any other user&#39;s CE or DE keys."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-10"	"9.8/H-1-10"	"09080000.720110"	"""[9.8/H-1-10] MUST NOT surface in the UI quantitative data about mic usage by the hotword detection service. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.8.9  . Installed apps"	"9.8.9"	"C-0-2"	"9.8.9/C-0-2"	"09080900.670002"	"""C-0-2] MUST NOT give to any app, read or write access to files in any other app’s dedicated, app-specific directory within external storage. The only exceptions are as follows: The external storage provider authority (e.g. apps like DocumentsUI). Download Provider which uses the “downloads” provider authority for downloading files to app storage. Platform-signed media transfer protocol (MTP) apps which use the privileged permission ACCESS_MTP to enable transferring files to another device. Apps which install other apps and have the permission INSTALL_PACKAGES can access only “obb” directories for the purpose of managing APK expansion files. <h4 id=""9810_connectivity_bug_report"" """	""	""	"ACCESS_MTP MTP APK INSTALL_PACKAGES"	""	""	""	""	"[('android.appsecurity.cts.ApkVerityInstallTest', 21), ('android.appsecurity.cts.AppDataIsolationTests', 13), ('android.gputools.cts.CtsRootlessGpuDebugHostTest', 12), ('test.java.com.android.bedstead.nene.packages.PackageReferenceTest', 5), ('com.android.tests.atomicinstall.AtomicInstallTest', 4), ('android.keystore.cts.ImportWrappedKeyTest', 4), ('com.android.cts.packagemanager.stats.host.InstalledIncrementalPackageStatsTests', 2), ('com.android.cts.deviceandprofileowner.ContentSuggestionsActivity', 1), ('android.jdwptunnel.cts.JdwpTunnelTest', 1), ('android.media.cts.bitstreams.MediaBitstreamsTest', 1), ('com.android.tests.loadingprogress.device.LoadingProgressTest', 1), ('com.android.cts.monkey.AbstractMonkeyTest', 1), ('com.android.cts.devicepolicy.PasswordComplexityTest', 1)]"	"[('getDevice', 20), ('run', 13), ('tearDown', 6), ('setUp', 5), ('now', 4), ('runExpectingFailure', 4), ('stream', 3), ('trim', 3), ('moveToHomeScreen', 2), ('name', 2), ('findFirst', 2), ('getDefaultBitstreamsDir', 2), ('clearLogCat', 2), ('Intent', 1), ('countDown', 1), ('virtualMachineManager', 1), ('attachingConnectors', 1), ('transport', 1), ('defaultArguments', 1), ('eventRequestManager', 1), ('suspend', 1), ('allClasses', 1), ('createClassPrepareRequest', 1), ('enable', 1), ('resume', 1), ('eventQueue', 1), ('remove', 1), ('request', 1), ('referenceType', 1), ('uninstall_packageNotInstalledForUser_doesNotThrowException', 1), ('packages', 1), ('installSingle', 1), ('installAndUpdate', 1), ('getLaunchApiLevel', 1), ('assumeSecurityModelCompat', 1), ('toString', 1), ('getDefaultMediaDir', 1), ('FileFilter', 1), ('getTime', 1), ('LogScanResult', 1), ('getName', 1)]"	"[('CtsAppSecurityHostTestCases', 34), ('CtsGpuToolsHostTestCases', 12), ('CtsAtomicInstallTestCases', 4), ('CtsKeystoreTestCases', 4), ('CtsPackageManagerStatsHostTestCases', 2), ('CtsJdwpTunnelHostTestCases', 1), ('CtsMediaBitstreamsTestCases', 1), ('CtsMonkeyTestCases', 1), ('CtsDevicePolicyManagerTestCases', 1)]"	""	"android.appsecurity.cts.AppDataIsolationTests"	"getDevice"	"CtsAppSecurityHostTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 21), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 13), ('/home/gpoor/cts-12-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 12), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/atomicinstall/src/com/android/tests/atomicinstall/AtomicInstallTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/ImportWrappedKeyTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/stats/src/com/android/cts/packagemanager/stats/host/InstalledIncrementalPackageStatsTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ContentSuggestionsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/src/android/media/cts/bitstreams/MediaBitstreamsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/installedloadingprogess/deviceside/src/com/android/tests/loadingprogress/device/LoadingProgressTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/monkey/src/com/android/cts/monkey/AbstractMonkeyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/PasswordComplexityTest.java', 1)]"	"[('(1,APK,/com/android/cts/deviceandprofileowner/ContentSuggestionsActivity.java)', 1), ('(3,APK,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(8,APK,/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java)', 1), ('(6,APK,/com/android/cts/packagemanager/stats/host/InstalledIncrementalPackageStatsTests.java)', 1), ('(133,APK,/android/appsecurity/cts/ApkVerityInstallTest.java)', 1), ('(3,APK,/com/android/tests/atomicinstall/AtomicInstallTest.java)', 1), ('(1,INSTALL_PACKAGES,/com/android/tests/atomicinstall/AtomicInstallTest.java)', 1), ('(1,APK,/android/media/cts/bitstreams/MediaBitstreamsTest.java)', 1), ('(37,APK,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 1), ('(6,APK,/android/keystore/cts/ImportWrappedKeyTest.java)', 1), ('(11,APK,/com/android/tests/loadingprogress/device/LoadingProgressTest.java)', 1), ('(4,APK,/com/android/cts/monkey/AbstractMonkeyTest.java)', 1), ('(1,APK,/com/android/cts/devicepolicy/PasswordComplexityTest.java)', 1), ('(34,APK,/android/appsecurity/cts/AppDataIsolationTests.java)', 1)]"	"[('([2:/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java]:[APK]:[2]:method_text:[ally {            pkg.uninstall(sUser);            pkg.uninstall(sOtherUser);        }    }   ])', 2), ('([1:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[1]:method_text:[;        runDeviceTests(APPA_PKG, APPA_CLASS, APPA_METHOD_CHECK_REF_PROFILE_ACCESSIBLE);    }   ])', 2), ('([1:/com/android/cts/deviceandprofileowner/ContentSuggestionsActivity.java]:[APK]:[1]:method_text:[      + "" didn\'t finish in 2 seconds"");        }        finish();        return mEnabled;    }}])', 1), ('([3:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[APK]:[3]:method_text:[of the activity     * class and put and wait for a breakpoint on the onCreate function.     */   ])', 1), ('([2:/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java]:[APK]:[2]:method_text:[ Use annotations to share state instead of doing so manually        sOtherUser.remove();    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java]:[APK]:[1]:method_text:[   if (pkg != null) {            assertThat(pkg.installedOnUsers()).isEmpty();        }    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java]:[APK]:[1]:method_text:[OtherUser);        } finally {            mTestAppReference.uninstall(sUser);        }    }   ])', 1), ('([4:/com/android/cts/packagemanager/stats/host/InstalledIncrementalPackageStatsTests.java]:[APK]:[4]:method_text:[    // Install 2 incremental packages and check if their UIDs are included in the pulled metrics   ])', 1), ('([2:/com/android/cts/packagemanager/stats/host/InstalledIncrementalPackageStatsTests.java]:[APK]:[2]:method_text:[ALL_PACKAGE)));        assertTrue(uidsReported.contains(getAppUid(TEST_INSTALL_PACKAGE2)));    }}])', 1), ('([28:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[28]:method_text:[     getDevice().uninstallPackage(PACKAGE_NAME);    }    @CddTest(requirement = ""9.10/C-0-3"")   ])', 1), ('([3:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[3]:method_text:[   verifyFsverityInstall(incremental, BASE_APK);    }    @CddTest(requirement = ""9.10/C-0-3"")   ])', 1), ('([2:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[2]:method_text:[();        install.run(expectingSuccess);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([6:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[6]:method_text:[Install(incremental, BASE_APK, SPLIT_APK);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([6:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[6]:method_text:[stall(incremental, BASE_APK, BASE_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([12:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[12]:method_text:[PK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([7:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[7]:method_text:[cremental, BASE_APK, SPLIT_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([4:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[4]:method_text:[();        install.run(expectingSuccess);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([4:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[4]:method_text:[l(updateIncremental, SPLIT_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([6:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[6]:method_text:[ll(updateIncremental, BASE_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([6:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[6]:method_text:[erityInstall(updateIncremental, BASE_APK);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([7:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[7]:method_text:[X)                .runExpectingFailure();    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([8:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[8]:method_text:[l(incremental, BASE_APK_DM, SPLIT_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([6:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[6]:method_text:[stall(incremental, BASE_APK_DM);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([8:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[8]:method_text:[tal, BASE_APK_DM, SPLIT_APK_DM);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([4:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[4]:method_text:[eIncremental)                .addFile(SPLIT_APK)                .runExpectingFailure();    }   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[1]:method_text:[Multiple(/*incremental=*/true)                .addFile(BASE_APK)                .run();    }   ])', 1), ('([3:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[3]:method_text:[ + FSV_SIG_SUFFIX)                .run();        verifyFsverityInstall(true, BASE_APK);    }   ])', 1), ('([4:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[4]:method_text:[ + FSV_SIG_SUFFIX)                .run();        verifyFsverityInstall(true, BASE_APK);    }   ])', 1), ('([4:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[4]:method_text:[_APK + FSV_SIG_SUFFIX, BASE_APK + FSV_SIG_SUFFIX)                .runExpectingFailure();    }   ])', 1), ('([4:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[4]:method_text:[eriveRemoteName(String originalName, int index) {            return originalName;        }    }}])', 1), ('([1:/com/android/tests/atomicinstall/AtomicInstallTest.java]:[APK]:[1]:method_text:[ionError(message);    }    /**     * Tests a completed session should be cleaned up.     */   ])', 1), (""([1:/com/android/tests/atomicinstall/AtomicInstallTest.java]:[APK]:[1]:method_text:[pp.B)).isEqualTo(1);    }    /**     * Tests a removed child shouldn't be installed.     */   ])"", 1), ('([1:/com/android/tests/atomicinstall/AtomicInstallTest.java]:[APK]:[1]:method_text:[estApp.A)).isEqualTo(2);        assertThat(getInstalledVersion(TestApp.B)).isEqualTo(1);    }   ])', 1), ('([1:/com/android/tests/atomicinstall/AtomicInstallTest.java]:[INSTALL_PACKAGES]:[1]:method_text:[ionError(message);    }    /**     * Tests a completed session should be cleaned up.     */   ])', 1), ('([1:/android/media/cts/bitstreams/MediaBitstreamsTest.java]:[APK]:[1]:method_text:[            CLog.e(e);                return false;            }        }    }    @Ignore   ])', 1), ('([25:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[25]:method_text:[es layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 1), (""([2:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[2]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[     * This test ensures we can still use properties if no layer specified via Settings     */   ])', 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[  /**     * This test ensures a debuggable app can load layers from an external package     */   ])', 1), (""([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[/**     * This test ensures we can still use properties if no GLES layers are specified     */   ])', 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[/**     * This test ensures that external GLES layers can be loaded by a debuggable app     */   ])', 1), ('([1:/android/keystore/cts/ImportWrappedKeyTest.java]:[APK]:[1]:method_text:[RYPT_MODE, key);        assertEquals(new String(c.doFinal(encrypted)), ""hello, world"");    }   ])', 1), ('([1:/android/keystore/cts/ImportWrappedKeyTest.java]:[APK]:[1]:method_text:[key, paramSpec);        assertEquals(new String(c.doFinal(encrypted)), ""hello, world"");    }   ])', 1), ('([1:/android/keystore/cts/ImportWrappedKeyTest.java]:[APK]:[1]:method_text:[oxUnavailableException | SecureKeyImportUnavailableException e) {            }        }    }   ])', 1), ('([3:/android/keystore/cts/ImportWrappedKeyTest.java]:[APK]:[3]:method_text:[(isStrongBoxBacked)                        .build());        return kpg.generateKeyPair();    }}])', 1), ('([11:/com/android/tests/loadingprogress/device/LoadingProgressTest.java]:[APK]:[11]:method_text:[rtNotNull(apkContentBytes);            assertTrue(apkContentBytes.length > 0);        }    }   ])', 1), ('([4:/com/android/cts/monkey/AbstractMonkeyTest.java]:[APK]:[4]:method_text:[at() throws DeviceNotAvailableException {        mDevice.executeAdbCommand(""logcat"", ""-c"");    }}])', 1), ('([1:/com/android/cts/devicepolicy/PasswordComplexityTest.java]:[APK]:[1]:method_text:[ throws Exception {        getDevice().uninstallPackage(PKG);        super.tearDown();    }   ])', 1), ('([12:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[12]:method_text:[  getDevice().uninstallPackage(APPA_PKG);        getDevice().uninstallPackage(APPB_PKG);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[          }                getDevice().waitForDeviceAvailable();            }        }    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[      runDeviceTests(APPA_PKG, APPA_CLASS, APPA_METHOD_CHECK_EXTERNAL_DIRS_DO_NOT_EXIST);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[un();        runDeviceTests(APPB_PKG, APPB_CLASS, APPB_METHOD_CAN_NOT_ACCESS_APPA_DIR);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[K).run();        runDeviceTests(APPB_PKG, APPB_CLASS, APPB_METHOD_CAN_ACCESS_APPA_DIR);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[     runDeviceTests(APPB_PKG, APPB_CLASS, APPB_METHOD_CAN_NOT_ACCESS_APPA_EXTERNAL_DIRS);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[        runDeviceTests(APPB_PKG, APPB_CLASS, APPB_METHOD_CAN_ACCESS_APPA_EXTERNAL_DIRS);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[).run();        runDeviceTests(APPA_PKG, APPA_CLASS, APPA_METHOD_TEST_ISOLATED_PROCESS);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[      runDeviceTests(APPA_PKG, APPA_CLASS, APPA_METHOD_TEST_APP_ZYGOTE_ISOLATED_PROCESS);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[ETHOD_TEST_OTHER_USER_DIRS_NOT_PRESENT,                makeOtherUserIdArgs(mOtherUser));    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[    return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }}])', 1)]"	""	""	"[('APK', 66), ('INSTALL_PACKAGES', 1)]"	"[('[android.appsecurity.cts.ApkVerityInstallTest isIncrementalDeliveryV2Feature CtsAppSecurityHostTestCases]', 2), ('[com.android.tests.atomicinstall.AtomicInstallTest adoptShellPermissions CtsAtomicInstallTestCases]', 2), ('[com.android.cts.deviceandprofileowner.ContentSuggestionsActivity isContentSuggestionsEnabled None]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest disable CtsJdwpTunnelHostTestCases]', 1), ('[test.java.com.android.bedstead.nene.packages.PackageReferenceTest TestApis None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackageReferenceTest uninstallForAllUsers_isUninstalledForAllUsers None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackageReferenceTest uninstall_packageIsInstalledForDifferentUser_isUninstalledForUser None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackageReferenceTest uninstall_packageIsUninstalled None]', 1), ('[com.android.cts.packagemanager.stats.host.InstalledIncrementalPackageStatsTests testInstalledIncrementalMetricsReported CtsPackageManagerStatsHostTestCases]', 1), ('[android.appsecurity.cts.ApkVerityInstallTest testInstallBaseIncrementally CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApkVerityInstallTest testInstallBaseIncrementallyWithFsvSig CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApkVerityInstallTest testInstallBaseIncrementallyWithFsvSigAndIdSig CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApkVerityInstallTest testInstallBaseIncrementallyWithIdSigAndWrongFsvSig CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApkVerityInstallTest testInstallBaseIncrementallyWithWrongIdSigAndFsvSig CtsAppSecurityHostTestCases]', 1), ('[com.android.tests.atomicinstall.AtomicInstallTest testInstallTwoApks CtsAtomicInstallTestCases]', 1), ('[com.android.tests.atomicinstall.AtomicInstallTest testInstallTwoApksDowngradeFail CtsAtomicInstallTestCases]', 1), ('[android.media.cts.bitstreams.MediaBitstreamsTest isDirectory CtsMediaBitstreamsTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest currentTimeMillis CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testReleaseLayerLoadGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreGLES CtsGpuToolsHostTestCases]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey CtsKeystoreTestCases]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey_3DES CtsKeystoreTestCases]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey_3DES_StrongBox CtsKeystoreTestCases]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey_AES_StrongBox CtsKeystoreTestCases]', 1), ('[com.android.tests.loadingprogress.device.LoadingProgressTest testReadAllBytes None]', 1), ('[com.android.cts.devicepolicy.PasswordComplexityTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppAbleToAccessItsDataAfterForceStop CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppAbleToAccessItsDataAfterReboot CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testDirectBootModeWorks CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppNotAbleToAccessItsDataAfterReinstall CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testNormalProcessCannotAccessOtherAppDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testSharedAppAbleToAccessOtherAppDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testNormalProcessCannotAccessOtherAppExternalDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testSharedAppAbleToAccessOtherAppExternalDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testIsolatedProcess CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppZygoteIsolatedProcess CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDirApi29 CtsAppSecurityHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"5.1.1  . Media Codec Characterization"	"5.1.1"	"C-2-2"	"5.1.1/C-2-2"	"05010100.670202"	"""C-2-2] Video codecs that are characterized as hardware accelerated MUST publish performance points information. They MUST each list all supported standard performance points (listed in PerformancePoint API), unless they are covered by another supported standard performance point. Additionally they SHOULD publish extended performance points if they support sustained video performance other than one of the standard ones listed. <h3 id=""52_video_encoding"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-5-3"	"9.8.2/H-5-3"	"09080200.720503"	"""[9.8.2/H-5-3] MUST not hide the camera indicator for system apps that have visible user interfaces or direct user interaction. <h4 id=""226_developer_tools_and_options_compatibility"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"5.1.1  . Media Codec Characterization"	"5.1.1"	"C-1-4"	"5.1.1/C-1-4"	"05010100.670104"	"""C-1-4] Codecs with names starting with &quot;OMX.google.&quot; or &quot;c2.android.&quot; MUST NOT be characterized as vendor or as hardware-accelerated."""	""	""	"OMX c2.android OMX.google"	""	""	""	""	"[('android.media.mediatranscoding.cts.ApplicationMediaCapabilitiesTest', 14), ('android.graphics.drawable.cts.AnimatedImageDrawableTest', 8), ('android.media.cts.MediaCodecListTest', 4), ('com.android.compatibility.common.util.MediaUtils', 3), ('android.content.res.cts.ColorStateListTest', 3), ('android.media.cts.MediaCodecTest', 2), ('android.security.cts.ProcessMustUseSeccompTest', 1), ('android.server.wm.WindowInputTests', 1), ('android.widget.cts.HorizontalScrollViewTest', 1), ('android.preference.cts.CustomDialogPreferenceTest', 1), ('android.widget.cts29.ToastTest', 1), ('android.media.cts.EncoderTest', 1), ('android.view.animation.cts.TranslateAnimationTest', 1), ('android.security.cts.Poc16_04', 1), ('android.widget.cts.SearchViewTest', 1), ('android.accessibilityservice.cts.AccessibilityPaneTest', 1), ('android.view.animation.cts.ScaleAnimationTest', 1), ('android.security.cts.CVE_2017_13194', 1), ('android.widget.cts.ScrollViewTest', 1), ('android.graphics.drawable.cts.ScaleDrawableTest', 1), ('android.uirendering.cts.testclasses.CanvasTests', 1), ('android.media.cts.ResourceManagerStubActivity', 1)]"	"[('getMediaDirString', 1), ('paneTitleFromXml_reportedToAccessibility', 1), ('getContext', 1), ('getAccessibilityPaneTitle', 1), ('getPaneNode', 1), ('getPaneTitle', 1), ('Object', 1), ('notify', 1)]"	"[('CtsMediaTranscodingTestCases', 14), ('CtsGraphicsTestCases', 9), ('CtsMediaTestCases', 8), ('CtsWidgetTestCases', 4), ('CtsContentTestCases', 3), ('CtsViewTestCases', 2), ('CtsSecurityBulletinHostTestCases', 2), ('CtsSecurityHostTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsPreferenceTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsUiRenderingTestCases', 1)]"	""	"android.graphics.drawable.cts.AnimatedImageDrawableTest"	"notify"	"CtsGraphicsTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/mediatranscoding/src/android/media/mediatranscoding/cts/ApplicationMediaCapabilitiesTest.java', 14), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/AnimatedImageDrawableTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 4), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/MediaUtils.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ColorStateListTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/ProcessMustUseSeccompTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInputTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/HorizontalScrollViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/preference/src/android/preference/cts/CustomDialogPreferenceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/animation/cts/TranslateAnimationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc16_04.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityPaneTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/animation/cts/ScaleAnimationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2017_13194.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ScrollViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/ScaleDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/CanvasTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/ResourceManagerStubActivity.java', 1)]"	"[('(2,OMX,/android/media/cts/MediaCodecTest.java)', 1), ('(1,OMX,/android/security/cts/ProcessMustUseSeccompTest.java)', 1), ('(1,OMX,/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(1,c2.android,/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(1,OMX.google,/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(2,OMX,/android/server/wm/WindowInputTests.java)', 1), ('(4,OMX,/android/widget/cts/HorizontalScrollViewTest.java)', 1), ('(3,OMX,/android/preference/cts/CustomDialogPreferenceTest.java)', 1), ('(6,OMX,/android/widget/cts29/ToastTest.java)', 1), ('(3,OMX,/android/media/cts/EncoderTest.java)', 1), ('(4,OMX,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,c2.android,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,OMX.google,/android/media/cts/MediaCodecListTest.java)', 1), ('(2,OMX,/android/view/animation/cts/TranslateAnimationTest.java)', 1), ('(1,OMX,/android/security/cts/Poc16_04.java)', 1), ('(6,OMX,/android/content/res/cts/ColorStateListTest.java)', 1), ('(1,OMX,/android/widget/cts/SearchViewTest.java)', 1), ('(1,OMX,/android/accessibilityservice/cts/AccessibilityPaneTest.java)', 1), ('(2,OMX,/android/view/animation/cts/ScaleAnimationTest.java)', 1), ('(1,OMX,/android/security/cts/CVE_2017_13194.java)', 1), ('(4,OMX,/android/widget/cts/ScrollViewTest.java)', 1), ('(4,OMX,/android/graphics/drawable/cts/ScaleDrawableTest.java)', 1), ('(1,OMX,/android/uirendering/cts/testclasses/CanvasTests.java)', 1), ('(2,OMX,/android/media/cts/ResourceManagerStubActivity.java)', 1), ('(15,OMX,/android/media/mediatranscoding/cts/ApplicationMediaCapabilitiesTest.java)', 1), ('(14,OMX,/android/graphics/drawable/cts/AnimatedImageDrawableTest.java)', 1)]"	"[('([2:/android/graphics/drawable/cts/AnimatedImageDrawableTest.java]:[OMX]:[2]:method_text:[  assertNotNull(drawable);        assertTrue(drawable instanceof AnimatedImageDrawable);    }   ])', 3), ('([2:/android/content/res/cts/ColorStateListTest.java]:[OMX]:[2]:method_text:[));        assertEquals(colorInXml, c.getColorForState(new int[]{0}, 0));    }    @SmallTest   ])', 2), ('([1:/android/media/mediatranscoding/cts/ApplicationMediaCapabilitiesTest.java]:[OMX]:[1]:method_text:[ndroid:name=""VP9"" supported=""false""/>    //    <format android:name=""HDR10"" supported=""false""/>   ])', 2), ('([1:/android/media/cts/MediaCodecTest.java]:[OMX]:[1]:method_text:[s are thrown from MediaCodec     * methods when called in incorrect operational states.     */   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[OMX]:[1]:method_text:[w ByteBufferInputStream(new PcmAudioBufferStream(audioStream))));            }        }    }   ])', 1), ('([1:/android/security/cts/ProcessMustUseSeccompTest.java]:[OMX]:[1]:method_text:[ows DeviceNotAvailableException {        assertSeccompFilter(""media.codec"", PS_CMD, false);    }}])', 1), ('([1:/com/android/compatibility/common/util/MediaUtils.java]:[OMX]:[1]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([1:/com/android/compatibility/common/util/MediaUtils.java]:[c2.android]:[1]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([1:/com/android/compatibility/common/util/MediaUtils.java]:[OMX.google]:[1]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([2:/android/server/wm/WindowInputTests.java]:[OMX]:[2]:method_text:[tInt(bounds.bottom - bounds.top) + bounds.top;        outLocation.set(randomX, randomY);    }   ])', 1), ('([4:/android/widget/cts/HorizontalScrollViewTest.java]:[OMX]:[4]:method_text:[d = true;            super.requestDisallowInterceptTouchEvent(disallowIntercept);        }    }}])', 1), ('([3:/android/preference/cts/CustomDialogPreferenceTest.java]:[OMX]:[3]:method_text:[ustomDialogPreference) mActivity.findPreference(                ""custom_dialog_pref_1"");    }   ])', 1), ('([6:/android/widget/cts29/ToastTest.java]:[OMX]:[6]:method_text:[XY[0]);        assertEquals(bottomXY[1] - yOffset, bottomOffsetXY[1]);    }    @UiThreadTest   ])', 1), ('([3:/android/media/cts/EncoderTest.java]:[OMX]:[3]:method_text:[            muxer.stop();            muxer.release();            muxer = null;        }    }}])', 1), ('([3:/android/media/cts/MediaCodecListTest.java]:[OMX]:[3]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[OMX]:[1]:method_text:[            assertFalse(info.isHardwareAccelerated() && info.isSoftwareOnly());        }    }   ])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[c2.android]:[1]:method_text:[            assertFalse(info.isHardwareAccelerated() && info.isSoftwareOnly());        }    }   ])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[OMX.google]:[1]:method_text:[            assertFalse(info.isHardwareAccelerated() && info.isSoftwareOnly());        }    }   ])', 1), ('([2:/android/view/animation/cts/TranslateAnimationTest.java]:[OMX]:[2]:method_text:[e, Transformation t) {            super.applyTransformation(interpolatedTime, t);        }    }}])', 1), ('([1:/android/security/cts/Poc16_04.java]:[OMX]:[1]:method_text:[tNotMatchesMultiLine(""IOMX_InfoLeak b26323455"", logcat);    }    /**    *  b/26324307    */   ])', 1), ('([2:/android/content/res/cts/ColorStateListTest.java]:[OMX]:[2]:method_text:[/* delta */);        assertEquals(alphaInXml, Color.alpha(defaultColor));    }    @SmallTest   ])', 1), ('([1:/android/widget/cts/SearchViewTest.java]:[OMX]:[1]:method_text:[ew_max_width),                searchViewWithAttributes.getMaxWidth());    }    @UiThreadTest   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityPaneTest.java]:[OMX]:[1]:method_text:[eInfo paneNode = getPaneNode();        assertEquals(paneTitle, paneNode.getPaneTitle());    }   ])', 1), ('([2:/android/view/animation/cts/ScaleAnimationTest.java]:[OMX]:[2]:method_text:[e, Transformation t) {            super.applyTransformation(interpolatedTime, t);        }    }}])', 1), ('([1:/android/security/cts/CVE_2017_13194.java]:[OMX]:[1]:method_text:[esNotVulnerable(""CVE-2017-13194"", null, getDevice(),                processPatternStrings);    }}])', 1), ('([4:/android/widget/cts/ScrollViewTest.java]:[OMX]:[4]:method_text:[) {            onAbsorbVelocity = velocity;            super.onAbsorb(velocity);        }    }}])', 1), ('([4:/android/graphics/drawable/cts/ScaleDrawableTest.java]:[OMX]:[4]:method_text:[xception if attribute set is null"");        } catch (NullPointerException e) {        }    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/CanvasTests.java]:[OMX]:[1]:method_text:[else {                return nonTargetColorCount > mCountThreshold;            }        }    }}])', 1), ('([2:/android/media/cts/ResourceManagerStubActivity.java]:[OMX]:[2]:method_text:[chronized (mFinishEvent) {                mFinishEvent.notify();            }        }    }   ])', 1), ('([1:/android/media/mediatranscoding/cts/ApplicationMediaCapabilitiesTest.java]:[OMX]:[1]:method_text:[d:name=""Dolby-Vision"" supported=""true""/>    //    <format android:name=""HLG"" supported=""true""/>   ])', 1), ('([1:/android/media/mediatranscoding/cts/ApplicationMediaCapabilitiesTest.java]:[OMX]:[1]:method_text:[d=""true""/>    //    <format android:name=""HDR10"" supported=""true""/>    // </MediaCapabilities>   ])', 1), ('([1:/android/media/mediatranscoding/cts/ApplicationMediaCapabilitiesTest.java]:[OMX]:[1]:method_text:[ted=""true""/>    //    <format android:name=""HDR10"" supported=""true""/>    // </MediaCapability>   ])', 1), ('([1:/android/media/mediatranscoding/cts/ApplicationMediaCapabilitiesTest.java]:[OMX]:[1]:method_text:[=""yes""/>    //    <format android:name=""HDR10"" supported=""false""/>    // </media-capabilities>   ])', 1), ('([2:/android/media/mediatranscoding/cts/ApplicationMediaCapabilitiesTest.java]:[OMX]:[2]:method_text:[android"">    //    <format android:name=""HDR10"" supported=""true""/>    // </media-capabilities>   ])', 1), ('([1:/android/media/mediatranscoding/cts/ApplicationMediaCapabilitiesTest.java]:[OMX]:[1]:method_text:[""true""/>    //     <format android:name=""HEVC"" supported=""false""/>    // </media-capabilities>   ])', 1), ('([1:/android/media/mediatranscoding/cts/ApplicationMediaCapabilitiesTest.java]:[OMX]:[1]:method_text:[=""http://schemas.android.com/apk/res/android"">    //     <format/>    // </media-capabilities>   ])', 1), ('([1:/android/media/mediatranscoding/cts/ApplicationMediaCapabilitiesTest.java]:[OMX]:[1]:method_text:[roid.com/apk/res/android"">    //     <format android:name=""HEVC""/>    // </media-capabilities>   ])', 1), ('([1:/android/media/mediatranscoding/cts/ApplicationMediaCapabilitiesTest.java]:[OMX]:[1]:method_text:[android.com/apk/res/android"">    //     <format supported=""true""/>    // </media-capabilities>   ])', 1), ('([1:/android/media/mediatranscoding/cts/ApplicationMediaCapabilitiesTest.java]:[OMX]:[1]:method_text:[}    // Test unsupported codec type.    //    <format android:name=""HEVC"" supported=""false""/>   ])', 1), ('([1:/android/media/mediatranscoding/cts/ApplicationMediaCapabilitiesTest.java]:[OMX]:[1]:method_text:[ndroid:name=""HEVC"" supported=""true""/>    //    <format android:name=""HDR10"" supported=""false""/>   ])', 1), ('([1:/android/media/mediatranscoding/cts/ApplicationMediaCapabilitiesTest.java]:[OMX]:[1]:method_text:[ype.HDR10));        assertFalse(capability.isHdrTypeSupported(MediaFeature.HdrType.HDR10));    }}])', 1), ('([1:/android/graphics/drawable/cts/AnimatedImageDrawableTest.java]:[OMX]:[1]:method_text:[tedimagedrawable_nosrc);        Drawable drawable = Drawable.createFromXml(res, parser);    }   ])', 1), ('([2:/android/graphics/drawable/cts/AnimatedImageDrawableTest.java]:[OMX]:[2]:method_text:[wable instanceof AnimatedImageDrawable);        return (AnimatedImageDrawable) drawable;    }   ])', 1), ('([1:/android/graphics/drawable/cts/AnimatedImageDrawableTest.java]:[OMX]:[1]:method_text:[   drawable.draw(canvas);        assertTrue(BitmapUtils.compareBitmaps(expected, test));    }   ])', 1), ('([2:/android/graphics/drawable/cts/AnimatedImageDrawableTest.java]:[OMX]:[2]:method_text:[e aid = (AnimatedImageDrawable) drawable;        assertEquals(17, aid.getRepeatCount());    }   ])', 1), ('([2:/android/graphics/drawable/cts/AnimatedImageDrawableTest.java]:[OMX]:[2]:method_text:[rface        // pointer.        cb.waitForStart();        cb.waitForEnd(DURATION * 2);    }   ])', 1)]"	""	""	"[('OMX', 46), ('c2.android', 2), ('OMX.google', 2)]"	"[('[com.android.compatibility.common.util.MediaUtils getTestName None]', 3), ('[android.media.cts.MediaCodecListTest testCodecCharacterizations CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecTest testFlacIdentity CtsMediaTestCases]', 1), ('[android.security.cts.ProcessMustUseSeccompTest testOmxHalHasSeccompFilter CtsSecurityHostTestCases]', 1), ('[android.server.wm.WindowInputTests testMoveWindowAndTap CtsWindowManagerDeviceTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testFlingWhileStretchedRight CtsWidgetTestCases]', 1), ('[android.preference.cts.CustomDialogPreferenceTest CustomDialogPreferenceTest CtsPreferenceTestCases]', 1), ('[android.widget.cts29.ToastTest testAccessGravity CtsWidgetTestCases]', 1), ('[android.media.cts.EncoderTest testAACEncoders CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 1), ('[android.view.animation.cts.TranslateAnimationTest testInitialize CtsViewTestCases]', 1), ('[android.security.cts.Poc16_04 testPocCVE_2016_2419 CtsSecurityBulletinHostTestCases]', 1), ('[android.content.res.cts.ColorStateListTest testCreateFromXml CtsContentTestCases]', 1), ('[android.content.res.cts.ColorStateListTest testCreateFromXmlThemed CtsContentTestCases]', 1), ('[android.content.res.cts.ColorStateListTest testCreateFromXmlWithLStar CtsContentTestCases]', 1), ('[android.widget.cts.SearchViewTest testAttributesFromXml CtsWidgetTestCases]', 1), ('[android.view.animation.cts.ScaleAnimationTest testApplyTransformationIndirectly CtsViewTestCases]', 1), ('[android.security.cts.CVE_2017_13194 testPocCVE_2017_13194 CtsSecurityBulletinHostTestCases]', 1), ('[android.widget.cts.ScrollViewTest testFlingWhileStretchedBottom CtsWidgetTestCases]', 1), ('[android.graphics.drawable.cts.ScaleDrawableTest testInflate CtsGraphicsTestCases]', 1), ('[android.uirendering.cts.testclasses.CanvasTests testAntiAliasClipping CtsUiRenderingTestCases]', 1), ('[android.media.mediatranscoding.cts.ApplicationMediaCapabilitiesTest testReadMediaCapabilitiesXml CtsMediaTranscodingTestCases]', 1), ('[android.media.mediatranscoding.cts.ApplicationMediaCapabilitiesTest testReadFromCorrectXmlWithInputStreamInAssets CtsMediaTranscodingTestCases]', 1), ('[android.media.mediatranscoding.cts.ApplicationMediaCapabilitiesTest testReadMediaCapabilitiesXmlWithSupportAllHdr CtsMediaTranscodingTestCases]', 1), ('[android.media.mediatranscoding.cts.ApplicationMediaCapabilitiesTest testReadFromWrongMediaCapabilityXml CtsMediaTranscodingTestCases]', 1), ('[android.media.mediatranscoding.cts.ApplicationMediaCapabilitiesTest testReadFromWrongMediaCapabilityXml2 CtsMediaTranscodingTestCases]', 1), ('[android.media.mediatranscoding.cts.ApplicationMediaCapabilitiesTest testReadFromXmlWithWrongBoolean CtsMediaTranscodingTestCases]', 1), ('[android.media.mediatranscoding.cts.ApplicationMediaCapabilitiesTest testReadXmlSupportHdrWithoutSupportHevc CtsMediaTranscodingTestCases]', 1), ('[android.media.mediatranscoding.cts.ApplicationMediaCapabilitiesTest testReadXmlConflictSupportedValue CtsMediaTranscodingTestCases]', 1), ('[android.media.mediatranscoding.cts.ApplicationMediaCapabilitiesTest testReadXmlWithEmptyFormat CtsMediaTranscodingTestCases]', 1), ('[android.media.mediatranscoding.cts.ApplicationMediaCapabilitiesTest testReadXmlFormatWithoutSupported CtsMediaTranscodingTestCases]', 1), ('[android.media.mediatranscoding.cts.ApplicationMediaCapabilitiesTest testReadXmlSupportedWithoutFormat CtsMediaTranscodingTestCases]', 1), ('[android.media.mediatranscoding.cts.ApplicationMediaCapabilitiesTest testUnspecifiedCodecMimetype CtsMediaTranscodingTestCases]', 1), ('[android.media.mediatranscoding.cts.ApplicationMediaCapabilitiesTest testUnsupportedCodecMimetype CtsMediaTranscodingTestCases]', 1), ('[android.media.mediatranscoding.cts.ApplicationMediaCapabilitiesTest testUnsupportedHdrtype CtsMediaTranscodingTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testCreateFromXml CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testCreateFromXmlClass CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testCreateFromXmlClassAttribute CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testMissingSrcInflate CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testAutoMirroredFromXml CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testAutoStartFromXml CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testRepeatCountFromXml CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedImageDrawableTest testInfiniteRepeatCountFromXml CtsGraphicsTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-2-9"	"7.3.1/C-2-9"	"07030100.670209"	"""C-2-9] MUST make the biometric sensor available to third-party applications. If device implementations wish to treat a biometric sensor as Class 3 (formerly Strong), they:"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"5.1  . Capture for Unprocessed"	"5.1"	"C-1-2"	"5.1/C-1-2"	"05010000.670102"	"""C-1-2] MUST have the continuous round-trip audio latency, as defined in section 5.6 Audio Latency, MUST be 20 milliseconds or less and SHOULD be 10 milliseconds or less over at least one supported path. | C-1-2] MUST exhibit approximately flat amplitude-versus-frequency characteristics in the mid-frequency range: specifically &plusmn;10dB from 100 Hz to 7000 Hz for each and every microphone used to record the unprocessed audio source."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.1  . Telephony"	"7.4.1"	"C-4-1"	"7.4.1/C-4-1"	"07040100.670401"	"""C-4-1] MUST NOT report ‘NETWORK_TYPE_IWLAN’ via NetworkRegistrationInfo#getAccessNetworkTechnology() when NetworkRegistrationInfo#getTransportType() is reported as ‘TRANSPORT_TYPE_WWAN’ for the same NetworkRegistrationInfo instance. If device implementations support a single IP Multimedia Subsystem (IMS) registration for both multimedia telephony service (MMTEL) and rich communication service (RCS) features and are expected to comply with cellular carrier requirements regarding using a single IMS registration for all IMS signalling traffic, they:"""	""	""	"IMS TRANSPORT_TYPE_WWAN MMTEL getTransportType() RCS NETWORK_TYPE_IWLAN getAccessNetworkTechnology()"	""	""	""	""	"[('android.telephony.cts.TelephonyManagerTest', 21), ('android.telephony.ims.cts.TestSipTransport', 2), ('android.telephony.ims.cts.TestImsConfig', 2), ('android.net.wifi.passpoint.cts.PasspointConfigurationTest', 2), ('android.telephony.cts.CellInfoTest', 2), ('android.telephony.ims.cts.TestAcsClient', 2), ('android.provider.cts.simphonebook.SimPhonebookContract_ElementaryFilesTest', 2), ('android.cts.statsdatom.telephony.TelephonyStatsTests', 2), ('android.provider.cts.simphonebook.SimPhonebookRequirementsRule', 1), ('android.telephony.ims.cts.TestSipDelegateConnection', 1), ('android.server.wm.WindowInsetsAnimationTests', 1), ('android.net.wifi.cts.ConnectedNetworkScorerTest', 1), ('com.android.compatibility.common.util.MediaUtils', 1), ('android.appsecurity.cts.AdoptableHostTest', 1), ('android.media.cts.MediaMuxerTest', 1), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsMultiSimTest', 1), ('android.telephony.cts.ApnSettingTest', 1), ('com.android.cts.verifier.usb.device.UsbDeviceTestActivity', 1), ('com.android.compatibility.common.deviceinfo.GlesStubActivity', 1), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 1), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('com.android.cts.verifier.audio.ProAudioActivity', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('android.hardware.camera2.cts.CtsUtilsTest', 1), ('android.telephony.ims.cts.SipMessageParsingTest', 1), ('android.mediadrm.cts.MediaDrmClearkeyTest', 1)]"	"[('getContext', 16), ('close', 12), ('countDown', 8), ('run', 5), ('getApplicationContext', 4), ('Object', 4), ('getVersion', 4), ('setUp', 4), ('notifyAll', 4), ('getSurface', 4), ('getInstrumentation', 4), ('saveAllowedNetworkTypesForAllReasons', 4), ('recoverAllowedNetworkType', 4), ('hasCellular', 4), ('getSubscriptionInfoForRemovableSims', 3), ('getViaBranchParameter', 3), ('getAction', 3), ('getWidth', 3), ('getHeight', 3), ('getDefaultSubscriptionId', 3), ('SimPhonebookRequirementsRule', 2), ('size', 2), ('getDelegates', 2), ('stream', 2), ('findFirst', 2), ('getCount', 2), ('intValue', 2), ('getContentResolver', 2), ('getSubscriptionId', 2), ('getAllCellInfo', 2), ('Executor', 2), ('getSimpleName', 2), ('Thread', 2), ('start', 2), ('clearQueue', 2), ('waitForCarrierConfigChanged', 2), ('getPackageManager', 2), ('getPackageName', 2), ('getRadioHalVersion', 2), ('getUiAutomation', 2), ('tearDown', 2), ('StringBuilder', 2), ('toString', 2), ('keySet', 2), ('toByteArray', 2), ('getPhoneCount', 2), ('before', 1), ('getSupportedModemCount', 1), ('getRemovableSimSlotCount', 1), ('verifyDelegateCreated', 1), ('now', 1), ('nanoTime', 1), ('getMaxPacketSize', 1), ('getPassButton', 1), ('IntentFilter', 1), ('BroadcastReceiver', 1), ('getApplicationInfo', 1), ('getSerialNumber', 1), ('getProductName', 1), ('getWindow', 1), ('getDeviceConfigurationInfo', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('release', 1), ('ProAudioActivity', 1), ('super', 1), ('printStackTrace', 1), ('query_includesRowForEachElementaryFileOnEachSim', 1)]"	"[('CtsTelephonyTestCases', 32), ('CtsSimPhonebookProviderTestCases', 4), ('CtsWifiTestCases', 3), ('CtsStatsdAtomHostTestCases', 2), ('CtsWindowManagerDeviceTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsMediaTestCases', 1), ('CtsContactsProviderTestCases', 1), ('CtsUsageStatsTestCases', 1), ('CtsCameraTestCases', 1), ('CtsMediaDrmTestCases', 1)]"	""	"android.telephony.cts.TelephonyManagerTest"	"getPhoneCount"	"CtsTelephonyTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 21), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestSipTransport.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestImsConfig.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestAcsClient.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_ElementaryFilesTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/telephony/TelephonyStatsTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestSipDelegateConnection.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConnectedNetworkScorerTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/MediaUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AdoptableHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/ApnSettingTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/device-info/src/com/android/compatibility/common/deviceinfo/GlesStubActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/ProAudioActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CtsUtilsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/SipMessageParsingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmClearkeyTest.java', 1)]"	"[('(12,IMS,/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java)', 1), ('(10,IMS,/android/telephony/ims/cts/TestSipTransport.java)', 1), ('(1,RCS,/android/telephony/ims/cts/TestSipTransport.java)', 1), ('(11,IMS,/android/telephony/ims/cts/TestImsConfig.java)', 1), ('(8,RCS,/android/telephony/ims/cts/TestImsConfig.java)', 1), ('(39,IMS,/android/telephony/ims/cts/TestSipDelegateConnection.java)', 1), ('(8,IMS,/android/server/wm/WindowInsetsAnimationTests.java)', 1), ('(2,IMS,/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java)', 1), ('(1,NETWORK_TYPE_IWLAN,/android/net/wifi/cts/ConnectedNetworkScorerTest.java)', 1), ('(1,IMS,/com/android/compatibility/common/util/MediaUtils.java)', 1), ('(2,IMS,/android/appsecurity/cts/AdoptableHostTest.java)', 1), ('(18,RCS,/android/media/cts/MediaMuxerTest.java)', 1), ('(6,IMS,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java)', 1), ('(1,TRANSPORT_TYPE_WWAN,/android/telephony/cts/CellInfoTest.java)', 1), ('(1,getTransportType(),/android/telephony/cts/CellInfoTest.java)', 1), ('(4,IMS,/android/telephony/cts/ApnSettingTest.java)', 1), ('(2,IMS,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(1,IMS,/com/android/compatibility/common/deviceinfo/GlesStubActivity.java)', 1), ('(2,IMS,/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java)', 1), ('(4,getTransportType(),/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(3,RCS,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(63,IMS,/com/android/cts/verifier/audio/ProAudioActivity.java)', 1), ('(18,IMS,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(11,IMS,/android/telephony/ims/cts/TestAcsClient.java)', 1), ('(7,RCS,/android/telephony/ims/cts/TestAcsClient.java)', 1), ('(3,IMS,/android/provider/cts/simphonebook/SimPhonebookContract_ElementaryFilesTest.java)', 1), ('(1,IMS,/android/hardware/camera2/cts/CtsUtilsTest.java)', 1), ('(7,IMS,/android/cts/statsdatom/telephony/TelephonyStatsTests.java)', 1), ('(2,IMS,/android/telephony/ims/cts/SipMessageParsingTest.java)', 1), ('(2,IMS,/android/mediadrm/cts/MediaDrmClearkeyTest.java)', 1), ('(44,IMS,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(7,TRANSPORT_TYPE_WWAN,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(2,getTransportType(),/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(3,NETWORK_TYPE_IWLAN,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(5,getAccessNetworkTechnology(),/android/telephony/cts/TelephonyManagerTest.java)', 1)]"	"[('([12:/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java]:[IMS]:[12]:method_text:[.getSubscriptionInfoForRemovableSims().size())                .isAtLeast(mMinimumSimCount);    }}])', 1), ('([10:/android/telephony/ims/cts/TestSipTransport.java]:[IMS]:[10]:method_text:[ex) {        synchronized (mLock) {            sLatches[latchIndex].countDown();        }    }}])', 1), ('([1:/android/telephony/ims/cts/TestSipTransport.java]:[RCS]:[1]:method_text:[ex) {        synchronized (mLock) {            sLatches[latchIndex].countDown();        }    }}])', 1), ('([11:/android/telephony/ims/cts/TestImsConfig.java]:[IMS]:[11]:method_text:[riggerAutoConfiguration();        TestAcsClient.getInstance().onTriggerAutoConfiguration();    }}])', 1), ('([8:/android/telephony/ims/cts/TestImsConfig.java]:[RCS]:[8]:method_text:[riggerAutoConfiguration();        TestAcsClient.getInstance().onTriggerAutoConfiguration();    }}])', 1), ('([39:/android/telephony/ims/cts/TestSipDelegateConnection.java]:[IMS]:[39]:method_text:[              }            }            Thread.sleep(1000);            retry++;        }    }}])', 1), ('([8:/android/server/wm/WindowInsetsAnimationTests.java]:[IMS]:[8]:method_text:[ack.statusAnimSteps.size() - 1).insets                        .getInsets(statusBars()));    }   ])', 1), ('([1:/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java]:[IMS]:[1]:method_text:[erated is different for two instances with different     * Realm in the Credential node     */   ])', 1), ('([1:/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java]:[IMS]:[1]:method_text:[etClientCertificateChain(null);        cred.setClientPrivateKey(null);        return cred;    }}])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[NETWORK_TYPE_IWLAN]:[1]:method_text:[* Tests the {@link android.net.wifi.WifiManager#updateWifiUsabilityScore(int, int, int)}     */   ])', 1), ('([1:/com/android/compatibility/common/util/MediaUtils.java]:[IMS]:[1]:method_text:[     *  -------------------------------------- END --------------------------------------     */}])', 1), ('([2:/android/appsecurity/cts/AdoptableHostTest.java]:[IMS]:[2]:method_text:[0);        }        assertTrue(""Volumes are not ready: "" + result, noCheckingEjecting);    }   ])', 1), ('([18:/android/media/cts/MediaMuxerTest.java]:[RCS]:[18]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([6:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsMultiSimTest.java]:[IMS]:[6]:method_text:[.get(0).getSubscriptionId();        mSubscriptionId2 = infos.get(1).getSubscriptionId();    }   ])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[TRANSPORT_TYPE_WWAN]:[1]:method_text:[er receives callbacks every time that new CellInfo     * is received and not otherwise.     */   ])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[getTransportType()]:[1]:method_text:[er receives callbacks every time that new CellInfo     * is received and not otherwise.     */   ])', 1), ('([4:/android/telephony/cts/ApnSettingTest.java]:[IMS]:[4]:method_text:[       EXPECTED_INT_TO_STRING_MAP.put(ApnSetting.TYPE_XCAP, ApnSetting.TYPE_XCAP_STRING);    }   ])', 1), ('([2:/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java]:[IMS]:[2]:method_text:[     unregisterReceiver(mUsbDevicePermissionReceiver);        }        super.onDestroy();    }}])', 1), ('([1:/com/android/compatibility/common/deviceinfo/GlesStubActivity.java]:[IMS]:[1]:method_text:[e extension string.            collector.addEglExtensions(extensions.split("" ""));        }    }}])', 1), ('([2:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[IMS]:[2]:method_text:[     * one account is removed.  But contact should have last updated timestamp updated.     */   ])', 1), ('([4:/android/app/usage/cts/NetworkUsageStatsTest.java]:[getTransportType()]:[4]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([3:/android/hardware/camera2/cts/CameraTestUtils.java]:[RCS]:[3]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([63:/com/android/cts/verifier/audio/ProAudioActivity.java]:[IMS]:[63]:method_text:[audio_proaudio_NA));            }            calculatePass();            break;        }    }}])', 1), ('([18:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[IMS]:[18]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([11:/android/telephony/ims/cts/TestAcsClient.java]:[IMS]:[11]:method_text:[fyPreProvisioning(byte[] conf) {        mImsConfigImpl.notifyPreProvisioningReceived(conf);    }}])', 1), ('([7:/android/telephony/ims/cts/TestAcsClient.java]:[RCS]:[7]:method_text:[fyPreProvisioning(byte[] conf) {        mImsConfigImpl.notifyPreProvisioningReceived(conf);    }}])', 1), ('([2:/android/provider/cts/simphonebook/SimPhonebookContract_ElementaryFilesTest.java]:[IMS]:[2]:method_text:[s);        mValidSubscriptionId = new RemovableSims(context).getDefaultSubscriptionId();    }   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookContract_ElementaryFilesTest.java]:[IMS]:[1]:method_text:[   .isAtLeast(PHONE_NUMBER_MAX_LENGTH_MINIMUM);                }            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CtsUtilsTest.java]:[IMS]:[1]:method_text:[de. * </p> */public class CtsUtilsTest {    private static final byte PADBYTE = (byte)0xa5;   ])', 1), ('([4:/android/cts/statsdatom/telephony/TelephonyStatsTests.java]:[IMS]:[4]:method_text:[asGsmPhone()) {            assertThat(atom.getActiveSlotCount()).isAtLeast(1);        }    }   ])', 1), ('([3:/android/cts/statsdatom/telephony/TelephonyStatsTests.java]:[IMS]:[3]:method_text:[().executeShellCommand(""cmd phone restart-modem"");        return response.contains(""true"");    }}])', 1), ('([2:/android/telephony/ims/cts/SipMessageParsingTest.java]:[IMS]:[2]:method_text:[9hG4bK9ikj8"";    public static final String SIP_MESSAGE_8_CALL_ID = ""wsinv.ndaksdj@192.0.2.1"";   ])', 1), ('([2:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[IMS]:[2]:method_text:[RYPTO"");        }    }    @Presubmit    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([4:/android/telephony/cts/TelephonyManagerTest.java]:[IMS]:[4]:method_text:[ckageManager.FEATURE_TELEPHONY)                && mTelephonyManager.getPhoneCount() > 0;    }   ])', 1), ('([6:/android/telephony/cts/TelephonyManagerTest.java]:[IMS]:[6]:method_text:[  setAppOpsPermissionAllowed(false, OPSTR_USE_ICC_AUTH_WITH_DEVICE_IDENTIFIER);        }    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[IMS]:[1]:method_text:[rifyDeviceId(deviceId);    }    /**     * Tests the max number of active SIMs method     */   ])', 1), ('([2:/android/telephony/cts/TelephonyManagerTest.java]:[IMS]:[2]:method_text:[or a valid MAC address     * if only a WiFi device. At least one of them must be valid.     */   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[IMS]:[1]:method_text:[caller does not have carrier privileges or is not the     * current default dialer app.     */   ])', 1), ('([3:/android/telephony/cts/TelephonyManagerTest.java]:[IMS]:[3]:method_text:[  }    }    /**     * Tests {@link TelephonyManager#getSupportedRadioAccessFamily()}     */   ])', 1), ('([22:/android/telephony/cts/TelephonyManagerTest.java]:[IMS]:[22]:method_text:[) {            // IllegalArgumentException is okay, just not SecurityException        }    }   ])', 1), ('([5:/android/telephony/cts/TelephonyManagerTest.java]:[IMS]:[5]:method_text:[ fail(""testResetCarrierKeysForImsiEncryption: SecurityException not expected"");        }    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[TRANSPORT_TYPE_WWAN]:[1]:method_text:[mOnPhoneCapabilityChanged = true;                mLock.notify();            }        }    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[TRANSPORT_TYPE_WWAN]:[1]:method_text:[ ensure {@link NetworkRegistrationInfo#isRoaming()} does not throw any     * exception.     */   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[TRANSPORT_TYPE_WWAN]:[1]:method_text:[throw any     * exception and returns valid result     * @see ServiceState.RoamingType     */   ])', 1), ('([2:/android/telephony/cts/TelephonyManagerTest.java]:[TRANSPORT_TYPE_WWAN]:[2]:method_text:[ exception and returns valid result     * @see android.telephony.Annotation.NetworkType     */   ])', 1), ('([2:/android/telephony/cts/TelephonyManagerTest.java]:[TRANSPORT_TYPE_WWAN]:[2]:method_text:[  }    /**     * Tests that the device properly reports either a valid MEID or null.     */   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[getTransportType()]:[1]:method_text:[mOnPhoneCapabilityChanged = true;                mLock.notify();            }        }    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[getTransportType()]:[1]:method_text:[ ensure {@link NetworkRegistrationInfo#isRoaming()} does not throw any     * exception.     */   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[NETWORK_TYPE_IWLAN]:[1]:method_text:[ckageManager.FEATURE_TELEPHONY)                && mTelephonyManager.getPhoneCount() > 0;    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[NETWORK_TYPE_IWLAN]:[1]:method_text:[mOnPhoneCapabilityChanged = true;                mLock.notify();            }        }    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[NETWORK_TYPE_IWLAN]:[1]:method_text:[NetworkTypes));        assertTrue(actualNetworkTypes.containsAll(expectedNetworkTypes));    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[getAccessNetworkTechnology()]:[1]:method_text:[mOnPhoneCapabilityChanged = true;                mLock.notify();            }        }    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[getAccessNetworkTechnology()]:[1]:method_text:[ exception and returns valid result     * @see android.telephony.Annotation.NetworkType     */   ])', 1), ('([3:/android/telephony/cts/TelephonyManagerTest.java]:[getAccessNetworkTechnology()]:[3]:method_text:[  }    /**     * Tests that the device properly reports either a valid MEID or null.     */   ])', 1)]"	""	""	"[('IMS', 32), ('TRANSPORT_TYPE_WWAN', 6), ('RCS', 5), ('NETWORK_TYPE_IWLAN', 4), ('getTransportType()', 4), ('getAccessNetworkTechnology()', 3)]"	"[('[android.telephony.cts.TelephonyManagerTest testIWlanServiceState CtsTelephonyTestCases]', 4), ('[android.telephony.ims.cts.TestImsConfig TestImsConfig CtsTelephonyTestCases]', 2), ('[android.telephony.cts.CellInfoTest isCamped CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.TestAcsClient TestAcsClient CtsTelephonyTestCases]', 2), ('[android.telephony.cts.TelephonyManagerTest testNetworkRegistrationInfoRegisteredPlmn CtsTelephonyTestCases]', 2), ('[android.telephony.cts.TelephonyManagerTest testNetworkRegistrationInfoGetRoamingType CtsTelephonyTestCases]', 2), ('[android.telephony.cts.TelephonyManagerTest testNetworkRegistationStateGetAccessNetworkTechnology CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.TestSipDelegateConnection verifyRegistrationStateRegistered CtsTelephonyTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_overlapping CtsWindowManagerDeviceTestCases]', 1), ('[android.net.wifi.passpoint.cts.PasspointConfigurationTest testUniqueIdDifferentSimCredential CtsWifiTestCases]', 1), ('[android.net.wifi.passpoint.cts.PasspointConfigurationTest testSetGetDecoratedIdentityPrefix CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testWifiUsabilityStatsEntry CtsWifiTestCases]', 1), ('[com.android.compatibility.common.util.MediaUtils getTestName None]', 1), ('[android.appsecurity.cts.AdoptableHostTest testFeatureConsistent CtsAppSecurityHostTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[com.android.cts.verifier.usb.device.UsbDeviceTestActivity getAccessoryList None]', 1), ('[com.android.compatibility.common.deviceinfo.GlesStubActivity waitForActivityToFinish None]', 1), ('[android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest testRemoveSimAccount_deleteSimAccountContacts CtsContactsProviderTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[com.android.cts.verifier.audio.ProAudioActivity isHDMIValid None]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[android.provider.cts.simphonebook.SimPhonebookContract_ElementaryFilesTest getActiveSubscriptionInfoList CtsSimPhonebookProviderTestCases]', 1), ('[android.cts.statsdatom.telephony.TelephonyStatsTests testSimSlotState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.telephony.TelephonyStatsTests testModemRestart CtsStatsdAtomHostTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest testIsCryptoSchemeSupportedWithSecurityLevel CtsMediaDrmTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testTelephonyManager CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetDeviceId CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetMaxNumberOfSimultaneouslyActiveSims CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetMeidForSlot CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testSetGetCallComposerStatus CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetCarrierInfoForImsiEncryption CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testResetCarrierKeysForImsiEncryption CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testNetworkRegistrationInfoIsRoaming CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetAllNetworkTypes CtsTelephonyTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.5.1  . Hardware"	"7.1.4.1"	"A-0-3"	"7.1.4.1/A-0-3"	"07010401.650003"	"""[7.1.4.1/A-0-3] MUST include Vulkan loader and export all symbols. If Automotive device implementations include a 3-axis accelerometer, they: """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-2-5"	"7.3.1/C-2-5"	"07030100.670205"	"""C-2-5] For camera based biometrics, while biometric based authentication or enrollment is happening: MUST operate the camera in a mode that prevents camera frames from being read or altered outside the isolated execution environment or a chip with a secure channel to the isolated execution environment. For RGB single-camera solutions, the camera frames CAN be readable outside the isolated execution environment to support operations such as preview for enrollment, but MUST still NOT be alterable."""	""	""	"CAN RGB"	""	""	""	""	"[('android.uirendering.cts.testclasses.ExactCanvasTests', 20), ('android.media.cts.AudioManagerTest', 19), ('android.server.wm.SplashscreenTests', 4), ('android.media.cts.SystemMediaRouter2Test', 2), ('android.graphics.pdf.cts.Utils', 2), ('android.media.cts.AudioPlaybackConfigurationTest', 2), ('com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest', 2), ('android.graphics.cts.Canvas_EdgeTypeTest', 2), ('com.android.cts.managedprofile.CameraPolicyTest', 2), ('android.permission.cts.Camera2PermissionTest', 2), ('android.content.pm.cts.shortcutmanager.throttling.ThrottledTests', 1), ('android.view.cts.ViewAnimationMatrixTest', 1), ('com.android.cts.verifier.p2p.RequesterTestActivity', 1), ('android.net.wifi.nl80211.cts.RadioChainInfoTest', 1)]"	"[('getWidth', 24), ('getHeight', 20), ('setUp', 8), ('recycle', 6), ('getName', 6), ('getResources', 4), ('run', 4), ('getClass', 4), ('getInstrumentation', 4), ('tearDown', 3), ('getPackageName', 3), ('getCacheDir', 2), ('flush', 2), ('Matrix', 2), ('width', 2), ('height', 2), ('release', 2), ('getTargetContext', 2), ('getSystem', 2), ('hashCode', 2), ('RouteCallback', 1), ('getMediaDirString', 1), ('stop', 1), ('DumpOnFailure', 1), ('getContext', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getPackageManager', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('canSerializeAndDeserialize', 1), ('obtain', 1), ('getChainId', 1), ('getLevelDbm', 1), ('ExactComparer', 1)]"	"[('CtsMediaTestCases', 23), ('CtsUiRenderingTestCases', 20), ('CtsWindowManagerDeviceTestCases', 4), ('CtsPdfTestCases', 2), ('CtsGraphicsTestCases', 2), ('CtsPermissionTestCases', 2), ('CtsViewTestCases', 1), ('CtsWifiTestCases', 1)]"	""	"android.uirendering.cts.testclasses.ExactCanvasTests"	"ExactComparer"	"CtsUiRenderingTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 20), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 19), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SystemMediaRouter2Test.java', 2), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/Canvas_EdgeTypeTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CameraPolicyTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/Camera2PermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/throttling/src/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/RequesterTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/RadioChainInfoTest.java', 1)]"	"[('(3,CAN,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(1,CAN,/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java)', 1), ('(11,CAN,/android/graphics/pdf/cts/Utils.java)', 1), ('(6,RGB,/android/graphics/pdf/cts/Utils.java)', 1), ('(4,CAN,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(7,CAN,/android/server/wm/SplashscreenTests.java)', 1), ('(2,RGB,/android/server/wm/SplashscreenTests.java)', 1), ('(1,RGB,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(1,CAN,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(40,CAN,/android/media/cts/AudioManagerTest.java)', 1), ('(1,CAN,/android/net/wifi/nl80211/cts/RadioChainInfoTest.java)', 1), ('(5,CAN,/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java)', 1), ('(5,CAN,/android/graphics/cts/Canvas_EdgeTypeTest.java)', 1), ('(8,CAN,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(2,CAN,/android/permission/cts/Camera2PermissionTest.java)', 1), ('(88,CAN,/android/uirendering/cts/testclasses/ExactCanvasTests.java)', 1)]"	"[('([2:/android/media/cts/AudioManagerTest.java]:[CAN]:[2]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 4), ('([1:/android/media/cts/AudioManagerTest.java]:[CAN]:[1]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 3), ('([1:/android/media/cts/AudioManagerTest.java]:[CAN]:[1]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 3), ('([5:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[5]:method_text:[ectVerifier(Color.WHITE, Color.BLACK,                        new Rect(20, 20, 70, 70)));    }   ])', 2), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[CAN]:[2]:method_text:[callbacks        clearCallbacks();        mUiAutomation.dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[CAN]:[1]:method_text:[r (RoutingController controller : controllers) {            controller.release();        }    }}])', 1), ('([1:/android/content/pm/cts/shortcutmanager/throttling/ThrottledTests.java]:[CAN]:[1]:method_text:[ynamicShortcuts(list()));            assertTrue(manager.updateShortcuts(list()));        }    }}])', 1), ('([11:/android/graphics/pdf/cts/Utils.java]:[CAN]:[11]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([6:/android/graphics/pdf/cts/Utils.java]:[RGB]:[6]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([3:/android/media/cts/AudioPlaybackConfigurationTest.java]:[CAN]:[3]:method_text:[   // create an AudioPlaybackConfiguration directly, we first need to play something to get one.   ])', 1), ('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[CAN]:[1]:method_text:[             configToMarshall.getAudioAttributes(), restoredConfig.getAudioAttributes());    }   ])', 1), ('([1:/android/server/wm/SplashscreenTests.java]:[CAN]:[1]:method_text:[TRA_INTENT, startIntent);        homeActivity.sendCommand(COMMAND_START_ACTIVITY, data);    }   ])', 1), ('([4:/android/server/wm/SplashscreenTests.java]:[CAN]:[4]:method_text:[Equals(Color.BLUE, journal.extras.getInt(ICON_BACKGROUND_COLOR, Color.YELLOW));        }    }   ])', 1), ('([2:/android/server/wm/SplashscreenTests.java]:[CAN]:[2]:method_text:[E_ICON_EXIT);        assertFalse(journal.extras.getBoolean(RECEIVE_SPLASH_SCREEN_EXIT));    }   ])', 1), ('([2:/android/server/wm/SplashscreenTests.java]:[RGB]:[2]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([1:/android/view/cts/ViewAnimationMatrixTest.java]:[RGB]:[1]:method_text:[ j++) {                assertEquals(color, bitmap.getPixel(i, j));            }        }    }}])', 1), ('([1:/com/android/cts/verifier/p2p/RequesterTestActivity.java]:[CAN]:[1]:method_text:[ }).show();    }    private TestCaseListener getTestCaseListener() {        return this;    }}])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[CAN]:[2]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CAN]:[1]:method_text:[)    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([8:/android/media/cts/AudioManagerTest.java]:[CAN]:[8]:method_text:[;            assertEquals(RINGER_MODE_VIBRATE, mAudioManager.getRingerMode());        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CAN]:[1]:method_text:[        if (!isMusicPlayingBeforeTest) {            assertMusicActive(false);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CAN]:[1]:method_text:[volume to 0"",                    mAudioManager.getStreamVolume(STREAM_VOICE_CALL) != 0);    }   ])', 1), ('([7:/android/media/cts/AudioManagerTest.java]:[CAN]:[7]:method_text:[ckageName(), getInstrumentation(), true);            testStreamMuting(stream);        }    }   ])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[CAN]:[4]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CAN]:[1]:method_text:[         return maxRingVol;        } else {            return maxRingVol - 1;        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CAN]:[1]:method_text:[ibutes() require privledged permission MODIFY_AUDIO_ROUTING    // and thus cannot be tested here.}])', 1), ('([1:/android/net/wifi/nl80211/cts/RadioChainInfoTest.java]:[CAN]:[1]:method_text:[qualTo(info);        assertThat(infoDeserialized.hashCode()).isEqualTo(info.hashCode());    }   ])', 1), ('([3:/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java]:[CAN]:[3]:method_text:[clipFromClipboard);            assertWritingClipNotAllowed(clipFromClipboard);        }    }   ])', 1), ('([2:/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java]:[CAN]:[2]:method_text:[clip + "" on clipboard!"");            } catch (Exception expected) {            }        }    }}])', 1), ('([3:/android/graphics/cts/Canvas_EdgeTypeTest.java]:[CAN]:[3]:method_text:[nit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class Canvas_EdgeTypeTest {   ])', 1), ('([2:/android/graphics/cts/Canvas_EdgeTypeTest.java]:[CAN]:[2]:method_text:[Reject(10, 100, 100, 10, EdgeType.AA);        c.quickReject(10, 100, 100, 10, EdgeType.BW);    }}])', 1), ('([1:/com/android/cts/managedprofile/CameraPolicyTest.java]:[CAN]:[1]:method_text:[ertTrue(mDevicePolicyManager.getCameraDisabled(null));        checkCanOpenCamera(false);    }   ])', 1), ('([7:/com/android/cts/managedprofile/CameraPolicyTest.java]:[CAN]:[7]:method_text:[ null;        } catch (InterruptedException e) {            e.printStackTrace();        }    }}])', 1), ('([1:/android/permission/cts/Camera2PermissionTest.java]:[CAN]:[1]:method_text:[ to open camera. Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */   ])', 1), ('([1:/android/permission/cts/Camera2PermissionTest.java]:[CAN]:[1]:method_text:[t     * {@link android.Manifest.permission#CAMERA} and android.permission.SYSTEM_CAMERA     */   ])', 1), ('([2:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[2]:method_text:[tends ActivityTestBase {    private final BitmapComparer mExactComparer = new ExactComparer();   ])', 1), ('([3:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[3]:method_text:[    })                .runWithVerifier(new RectVerifier(Color.WHITE, Color.BLUE, rect));    }   ])', 1), ('([3:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[3]:method_text:[                   }                })                .runWithComparer(mExactComparer);    }   ])', 1), ('([4:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[4]:method_text:[(10, 10, 80, 80, p);                })                .runWithComparer(mExactComparer);    }   ])', 1), ('([4:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[4]:method_text:[ine(0, 0, 50, 0, p);                })                .runWithComparer(mExactComparer);    }   ])', 1), ('([4:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[4]:method_text:[(10, 10, 40, 40, p);                })                .runWithComparer(mExactComparer);    }   ])', 1), ('([4:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[4]:method_text:[s.drawLines(pts, p);                })                .runWithComparer(mExactComparer);    }   ])', 1), ('([3:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[3]:method_text:[ight) -> canvas.drawColor(Color.WHITE))                .runWithComparer(mExactComparer);    }   ])', 1), ('([7:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[7]:method_text:[        p.setAntiAlias(true);        canvas.drawTextOnPath(testString, path, 0f, 0f, p);    }   ])', 1), ('([3:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[3]:method_text:[ill fail the test.                    R.drawable.text_on_path, new MSSIMComparer(0.6)));    }   ])', 1), ('([6:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[6]:method_text:[ill fail the test.                    R.drawable.text_on_path, new MSSIMComparer(0.6)));    }   ])', 1), ('([4:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[4]:method_text:[Duff.Mode.MULTIPLY);                })                .runWithComparer(mExactComparer);    }   ])', 1), ('([4:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[4]:method_text:[as.drawColor(Color.BLUE, BlendMode.MULTIPLY);        }).runWithComparer(mExactComparer);    }   ])', 1), ('([7:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[7]:method_text:[.addLayout(R.layout.blue_padded_square, null)                .runWithVerifier(verifier);    }   ])', 1), ('([5:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[5]:method_text:[   canvas.restore();                })                .runWithComparer(mExactComparer);    }   ])', 1), ('([4:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[4]:method_text:[       new Paint());                })                .runWithComparer(mExactComparer);    }   ])', 1), ('([6:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[6]:method_text:[             new Paint());                })                .runWithVerifier(verifier);    }   ])', 1), ('([5:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[CAN]:[5]:method_text:[ect(20, 20, 70, 70, p);                })                .runWithComparer(mExactComparer);    }}])', 1)]"	""	""	"[('CAN', 58), ('RGB', 3)]"	"[('[android.media.cts.SystemMediaRouter2Test ArrayList CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerRelease CtsMediaTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.throttling.ThrottledTests ThrottledTests None]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testParcelableWriteToParcel CtsMediaTestCases]', 1), ('[android.server.wm.SplashscreenTests prepareTestLauncher CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitAnimationCancel CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testCancelHandleExitIconAnimatingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.view.cts.ViewAnimationMatrixTest testAnimationMatrixClearedWithPassingNull CtsViewTestCases]', 1), ('[com.android.cts.verifier.p2p.RequesterTestActivity getTestCase None]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMicrophoneMuteIntent CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMusicActive CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetEncodedSurroundMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetRingerModePolicyAccess CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testVolume CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetVoiceCallVolumeToZeroPermission CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMuteDndAffectedStreams CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInTotalSilenceMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInAlarmsOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInPriorityOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInPriorityOnly CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMuteAll CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMediaAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyAlarmsAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyChannelsCanBypassDnd CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetAudioHwSyncForSession CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetDevices CtsMediaTestCases]', 1), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest testClipboardWithPermission None]', 1), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest testClipboardWithoutPermission None]', 1), ('[android.graphics.cts.Canvas_EdgeTypeTest testValues CtsGraphicsTestCases]', 1), ('[com.android.cts.managedprofile.CameraPolicyTest testDisableCameraInManagedProfile None]', 1), ('[com.android.cts.managedprofile.CameraPolicyTest testEnableCameraInManagedProfile None]', 1), ('[android.permission.cts.Camera2PermissionTest getCameraIdList CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testCameraOpen CtsPermissionTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testBlueRect CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testPoints CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testBlackRectWithStroke CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testBlackLineOnGreenBack CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testDrawRedRectOnBlueBack CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testDrawLine CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testDrawWhiteScreen CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testBasicText CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testTextOnPath CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testTextOnPathUsingPicture CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testBasicColorXfermode CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testBasicColorBlendMode CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testBluePaddedSquare CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testEmptyLayer CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testSaveLayerRounding CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testUnclippedSaveLayerRounding CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testBlackTriangleVertices CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testBlackTriangleVertices2 CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testColorLongs CtsUiRenderingTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.1.1  . The"	"3.9.1.1"	"C-1-9"	"3.9.1.1/C-1-9"	"03090101.670109"	"""C-1-9] MUST send the ACTION_ADMIN_POLICY_COMPLIANCE intent to the Device Owner app if a Device Owner is established during provisioning regardless of the provisioning method used. The user must not be able to proceed in the Setup Wizard until the Device Owner app finishes. When the device implementation has user data, it:"""	""	""	"ACTION_ADMIN_POLICY_COMPLIANCE"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"5.1  . Capture for Unprocessed"	"5.1"	"C-1-1"	"5.1/C-1-1"	"05010000.670101"	"""C-1-1] MUST report support for feature android.hardware.audio.low_latency. | C-1-1] MUST report the support through the android.media.AudioManager property PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED."""	""	""	"android.media.AudioManager android.hardware.audio.low PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED"	""	""	""	""	"[('com.android.cts.verifier.audio.AudioFrequencyUnprocessedActivity', 2), ('android.media.cts.SystemMediaRouter2Test', 1), ('android.media.cts.AudioPlaybackConfigurationTest', 1), ('android.media.cts.AudioManagerTest', 1), ('android.media.cts.AudioModeListenerTest', 1), ('android.media.cts.MediaSyncEventTest', 1), ('com.android.cts.verifier.audio.SoundPlayerObject', 1), ('com.android.cts.verifier.telecom.CtsConnection', 1), ('android.telecom.cts.BaseTelecomTestWithMockServices', 1), ('android.media.cts.SoundPoolTest', 1), ('android.telecom.cts.BackgroundCallAudioTest', 1), ('com.android.cts.verifier.audio.HifiUltrasoundTestActivity', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('android.media.cts.PresetReverbTest', 1), ('com.android.cts.verifier.tunnelmode.MediaCodecFlushActivity', 1), ('android.media.cts.MediaRouter2Test', 1), ('android.media.cts.VisualizerTest', 1), ('android.media.cts.AudioTrackSurroundTest', 1), ('android.media.cts.AudioManagerStub', 1), ('android.mediadrm.cts.MediaPlayerDrmTest', 1), ('android.media.cts.Utils', 1), ('android.media.cts.AudioTrack_ListenerTest', 1), ('android.media.cts.RingtoneManagerTest', 1), ('android.media.cts.EnvReverbTest', 1), ('android.media.cts.DynamicsProcessingTest', 1), ('android.media.cts.AudioCommunicationDeviceTest', 1), ('android.mediadrm.cts.Utils', 1), ('android.media.cts.LoudnessEnhancerTest', 1), ('android.media.cts.HapticGeneratorTest', 1), ('com.android.cts.verifier.audio.USBAudioPeripheralActivity', 1), ('android.accessibilityservice.cts.AccessibilityVolumeTest', 1), ('com.android.cts.verifier.audio.AnalogHeadsetAudioActivity', 1), ('android.media.cts.MediaSessionTest', 1), ('com.android.cts.verifier.audio.HifiUltrasoundSpeakerTestActivity', 1), ('com.android.cts.verifier.audio.AudioInputRoutingNotificationsActivity', 1), ('com.android.cts.verifier.audio.AudioOutputRoutingNotificationsActivity', 1), ('android.server.wm.WindowTest', 1), ('com.android.cts.verifier.tunnelmode.VolumeLevelChangesActivity', 1), ('android.media.cts.EnumDevicesTest', 1), ('android.media.cts.AudioAttributesTest', 1), ('android.media.cts.MediaControllerTest', 1), ('android.permission.cts.telephony.TelephonyManagerPermissionTest', 1), ('android.media.cts.VolumeShaperTest', 1), ('android.telecom.cts.TelecomManagerTest', 1), ('android.media.tv.cts.TvInputManagerTest', 1), ('android.media.cts.AudioPlaybackCaptureTest', 1), ('android.media.cts.AsyncPlayerTest', 1), ('android.telecom.cts.ConnectionServiceTest', 1), ('com.android.cts.verifier.audio.NativeAnalyzerThread', 1), ('com.android.cts.verifier.audio.AudioOutputDeviceNotificationsActivity', 1), ('android.media.cts.RingtoneTest', 1), ('android.widget.cts.VideoViewTest', 1), ('android.media.cts.MediaRouterTest', 1), ('android.media.cts.AudioRecordingConfigurationTest', 1), ('android.media.cts.ToneGeneratorTest', 1), ('android.media.cts.AudioHelper', 1), ('com.android.cts.verifier.sensors.RVCVRecordActivity', 1), ('android.media.cts.RoutingTest', 1), ('android.media.cts.AudioNativeTest', 1), ('com.android.cts.verifier.audio.AudioFrequencyActivity', 1), ('android.media.cts.AudioPlayRoutingNative', 1), ('android.media.cts.AudioFocusTest', 1), ('android.security.cts.AudioSecurityTest', 1), ('android.media.cts.NonBlockingAudioTrack', 1), ('android.app.cts.NotificationManagerTest', 1), ('android.telecom.cts.IncomingCallTest', 1), ('com.android.cts.verifier.audio.RingerModeActivity', 1), ('android.telecom.cts.SelfManagedConnectionServiceTest', 1), ('android.media.cts.AudioRecordRoutingNative', 1), ('com.android.cts.verifier.tv.display.ModeSwitchingTestActivity', 1), ('android.permission.cts.NoAudioPermissionTest', 1)]"	"[('setUp', 42), ('build', 31), ('getContext', 26), ('tearDown', 24), ('Builder', 22), ('getInstrumentation', 21), ('getPackageName', 12), ('getChannelCount', 9), ('getSimpleName', 8), ('getResources', 7), ('printStackTrace', 7), ('getAudioFormat', 7), ('release', 6), ('getPackageManager', 6), ('any', 6), ('toString', 6), ('stop', 5), ('getRingerMode', 5), ('getId', 5), ('getMediaDirString', 4), ('Object', 4), ('getMainLooper', 4), ('getName', 4), ('quit', 4), ('getContentResolver', 4), ('getMessage', 4), ('getTargetContext', 3), ('run', 3), ('start', 3), ('setup', 3), ('hasMicrophone', 3), ('prepare', 3), ('loop', 3), ('play', 3), ('RouteCallback', 2), ('getSystem', 2), ('reset', 2), ('getMode', 2), ('getSoundA', 2), ('getSoundCs', 2), ('getSoundE', 2), ('getSoundB', 2), ('getSoundGs', 2), ('getFileName', 2), ('scanDevicesForEncodings', 2), ('onPause', 2), ('getDownloadedFolder', 2), ('hasNext', 2), ('next', 2), ('getMediaPath', 2), ('getArguments', 2), ('myPid', 2), ('myUid', 2), ('getActivity', 2), ('stopVideo', 2), ('enableAppOps', 2), ('prepareSampleVideo', 2), ('Thread', 2), ('myLooper', 2), ('notify', 2), ('wait', 2), ('get', 2), ('makeSomething', 2), ('join', 2), ('getStdJitterMs', 2), ('getStartTimeNs', 2), ('duplicate', 2), ('startRecording', 2), ('getPlaybackHeadPosition', 2), ('startRecordcontroller', 2), ('stopRecordcontroller', 2), ('cancelAll', 2), ('getActiveNotifications', 2), ('getGroupKey', 2), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('wasCalled', 1), ('waitForModeUpdate', 1), ('SoundPlayerObject', 1), ('getCurrentResId', 1), ('BufferInfo', 1), ('interrupted', 1), ('availableToRead', 1), ('getSampleTime', 1), ('advance', 1), ('rewind', 1), ('createMediaPlayer', 1), ('getSounds', 1), ('getAudioAttributes', 1), ('getFilesDir', 1), ('getProductName', 1), ('getPath', 1), ('ProfileManager', 1), ('AccessibilityDumpOnFailureRule', 1), ('AnalogHeadsetAudioActivity', 1), ('super', 1), ('setupPlayer', 1), ('MediaControllerCallback', 1), ('getWindow', 1), ('anyInt', 1), ('teardown', 1), ('setFlagFalse', 1), ('getApplicationContext', 1), ('generateAudioSessionId', 1), ('getHolder', 1), ('Callback', 1), ('getPassButton', 1), ('playVideo', 1), ('describeContents', 1), ('MediaSessionCallback', 1), ('Bundle', 1), ('getController', 1), ('getVolume', 1), ('replace', 1), ('hasAudioOutput', 1), ('getPackage', 1), ('LoggingCallback', 1), ('MockCallback', 1), ('getServiceInfo', 1), ('getMatchingUsages', 1), ('getExcludeUsages', 1), ('getMatchingUids', 1), ('getExcludeUids', 1), ('getStreamType', 1), ('StringBuilder', 1), ('getUiAutomation', 1), ('hasCodec', 1), ('getAbsolutePath', 1), ('makeVideoView', 1), ('clearUserRoutes', 1), ('onStart', 1), ('getEncoding', 1), ('getSampleRate', 1), ('getAvg', 1), ('getAvgAbs', 1), ('getMaxAbs', 1), ('make', 1), ('getJitterCount', 1), ('getMeanJitterMs', 1), ('getMaxAbsJitterMs', 1), ('nanoTime', 1), ('abs', 1), ('getState', 1), ('RecordProcedureControllerCallback', 1), ('startRecordProcedureController', 1), ('stopRecordProcedureController', 1), ('queryEffects', 1), ('IllegalArgumentException', 1), ('getAudioTimeUs', 1), ('getTimestamp', 1), ('AudioTimestamp', 1), ('getNumBytesQueued', 1), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('restoreDefaultBrowser', 1), ('getCount', 1), ('moveToFirst', 1), ('close', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getKey', 1), ('getOverrideGroupKey', 1), ('getConnectionService', 1), ('getSelfManagedPhoneAccounts', 1)]"	"[('CtsMediaTestCases', 33), ('CtsTelecomTestCases', 6), ('CtsMediaDrmTestCases', 2), ('CtsPermissionTestCases', 2), ('CtsAccessibilityServiceTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsTvTestCases', 1), ('CtsWidgetTestCases', 1), ('CtsSecurityTestCases', 1), ('CtsAppTestCases', 1)]"	""	"com.android.cts.verifier.audio.AudioFrequencyUnprocessedActivity"	"getPackageManager"	""	"[('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SystemMediaRouter2Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioModeListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaSyncEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/SoundPlayerObject.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/telecom/CtsConnection.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/BaseTelecomTestWithMockServices.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SoundPoolTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/BackgroundCallAudioTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/PresetReverbTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/tunnelmode/MediaCodecFlushActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaRouter2Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VisualizerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackSurroundTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/AudioManagerStub.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaPlayerDrmTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrack_ListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/RingtoneManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EnvReverbTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DynamicsProcessingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioCommunicationDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/LoudnessEnhancerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/HapticGeneratorTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBAudioPeripheralActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityVolumeTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AnalogHeadsetAudioActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaSessionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/HifiUltrasoundSpeakerTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioInputRoutingNotificationsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioOutputRoutingNotificationsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/tunnelmode/VolumeLevelChangesActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EnumDevicesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioAttributesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaControllerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/telephony/src/android/permission/cts/telephony/TelephonyManagerPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VolumeShaperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/TelecomManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/cts/TvInputManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AsyncPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/ConnectionServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/NativeAnalyzerThread.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioOutputDeviceNotificationsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/RingtoneTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/VideoViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaRouterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioRecordingConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/ToneGeneratorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/AudioHelper.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/RVCVRecordActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/RoutingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioNativeTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioFrequencyActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlayRoutingNative.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioFocusTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/AudioSecurityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/NonBlockingAudioTrack.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/IncomingCallTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/RingerModeActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/SelfManagedConnectionServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioRecordRoutingNative.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/tv/display/ModeSwitchingTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NoAudioPermissionTest.java', 1)]"	"[('(1,android.media.AudioManager,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(25,android.media.AudioManager,/android/media/cts/AudioManagerTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/AudioModeListenerTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/MediaSyncEventTest.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/audio/SoundPlayerObject.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/telecom/CtsConnection.java)', 1), ('(1,android.media.AudioManager,/android/telecom/cts/BaseTelecomTestWithMockServices.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/SoundPoolTest.java)', 1), ('(1,android.media.AudioManager,/android/telecom/cts/BackgroundCallAudioTest.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/PresetReverbTest.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/tunnelmode/MediaCodecFlushActivity.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/MediaRouter2Test.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/VisualizerTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/AudioTrackSurroundTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/AudioManagerStub.java)', 1), ('(1,android.media.AudioManager,/android/mediadrm/cts/MediaPlayerDrmTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/Utils.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/AudioTrack_ListenerTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/RingtoneManagerTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/EnvReverbTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/DynamicsProcessingTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/AudioCommunicationDeviceTest.java)', 1), ('(1,android.media.AudioManager,/android/mediadrm/cts/Utils.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/LoudnessEnhancerTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/HapticGeneratorTest.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/audio/USBAudioPeripheralActivity.java)', 1), ('(1,android.media.AudioManager,/android/accessibilityservice/cts/AccessibilityVolumeTest.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/audio/AnalogHeadsetAudioActivity.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/MediaSessionTest.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/audio/HifiUltrasoundSpeakerTestActivity.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/audio/AudioInputRoutingNotificationsActivity.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/audio/AudioOutputRoutingNotificationsActivity.java)', 1), ('(1,android.media.AudioManager,/android/server/wm/WindowTest.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/tunnelmode/VolumeLevelChangesActivity.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/EnumDevicesTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/AudioAttributesTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/MediaControllerTest.java)', 1), ('(1,android.media.AudioManager,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/VolumeShaperTest.java)', 1), ('(1,android.media.AudioManager,/android/telecom/cts/TelecomManagerTest.java)', 1), ('(1,android.media.AudioManager,/android/media/tv/cts/TvInputManagerTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/AudioPlaybackCaptureTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/AsyncPlayerTest.java)', 1), ('(1,android.media.AudioManager,/android/telecom/cts/ConnectionServiceTest.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/audio/NativeAnalyzerThread.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/audio/AudioOutputDeviceNotificationsActivity.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/RingtoneTest.java)', 1), ('(1,android.media.AudioManager,/android/widget/cts/VideoViewTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/MediaRouterTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/AudioRecordingConfigurationTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/ToneGeneratorTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/AudioHelper.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/sensors/RVCVRecordActivity.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/RoutingTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/AudioNativeTest.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/audio/AudioFrequencyActivity.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/AudioPlayRoutingNative.java)', 1), ('(2,android.media.AudioManager,/android/media/cts/AudioFocusTest.java)', 1), ('(1,android.media.AudioManager,/android/security/cts/AudioSecurityTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/NonBlockingAudioTrack.java)', 1), ('(1,android.media.AudioManager,/android/app/cts/NotificationManagerTest.java)', 1), ('(1,android.media.AudioManager,/android/telecom/cts/IncomingCallTest.java)', 1), ('(14,android.media.AudioManager,/com/android/cts/verifier/audio/RingerModeActivity.java)', 1), ('(2,android.media.AudioManager,/android/telecom/cts/SelfManagedConnectionServiceTest.java)', 1), ('(1,android.media.AudioManager,/android/media/cts/AudioRecordRoutingNative.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/tv/display/ModeSwitchingTestActivity.java)', 1), ('(1,android.media.AudioManager,/android/permission/cts/NoAudioPermissionTest.java)', 1), ('(1,android.media.AudioManager,/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java)', 1), ('(1,PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED,/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java)', 1)]"	"[('([1:/android/media/cts/SystemMediaRouter2Test.java]:[android.media.AudioManager]:[1]:method_text:[callbacks        clearCallbacks();        mUiAutomation.dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[android.media.AudioManager]:[1]:method_text:[   // create an AudioPlaybackConfiguration directly, we first need to play something to get one.   ])', 1), ('([25:/android/media/cts/AudioManagerTest.java]:[android.media.AudioManager]:[25]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioModeListenerTest.java]:[android.media.AudioManager]:[1]:method_text:[   }        }    }    @AppModeFull(reason = ""Instant apps don\'t have MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/MediaSyncEventTest.java]:[android.media.AudioManager]:[1]:method_text:[)public class MediaSyncEventTest {    private final static String TAG = ""MediaSyncEventTest"";   ])', 1), ('([1:/com/android/cts/verifier/audio/SoundPlayerObject.java]:[android.media.AudioManager]:[1]:method_text:[ public void onPeriodicNotification(AudioTrack track) {        periodicNotification(track);    }}])', 1), ('([1:/com/android/cts/verifier/telecom/CtsConnection.java]:[android.media.AudioManager]:[1]:method_text:[tributes, audioSessionId);        mediaPlayer.setLooping(true);        return mediaPlayer;    }}])', 1), ('([1:/android/telecom/cts/BaseTelecomTestWithMockServices.java]:[android.media.AudioManager]:[1]:method_text:[                return false;                }            }        }        return true;    }}])', 1), ('([1:/android/media/cts/SoundPoolTest.java]:[android.media.AudioManager]:[1]:method_text:[       mSoundPool.release();            mSoundPool = null;            return;        }    }   ])', 1), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[android.media.AudioManager]:[1]:method_text:[   MockCallScreeningService.disableService(mContext);        }        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java]:[android.media.AudioManager]:[1]:method_text:[ @Override    public void sendMessage(String message) {      publishProgress(message);    }  }}])', 1), ('([1:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[android.media.AudioManager]:[1]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([1:/android/media/cts/PresetReverbTest.java]:[android.media.AudioManager]:[1]:method_text:[ctor    //----------------------------------    //Test case 0.0: test constructor and release   ])', 1), ('([1:/com/android/cts/verifier/tunnelmode/MediaCodecFlushActivity.java]:[android.media.AudioManager]:[1]:method_text:[   if (mPlayer != null) {            mPlayer.reset();            mPlayer = null;        }    }}])', 1), ('([1:/android/media/cts/MediaRouter2Test.java]:[android.media.AudioManager]:[1]:method_text:[(mService != null) {            mService.clear();            mService = null;        }    }   ])', 1), ('([1:/android/media/cts/VisualizerTest.java]:[android.media.AudioManager]:[1]:method_text:[ctor    //----------------------------------    //Test case 0.0: test constructor and release   ])', 1), ('([1:/android/media/cts/AudioTrackSurroundTest.java]:[android.media.AudioManager]:[1]:method_text:[++) {            mainBuffer[i] = shortBuffer.get();        }        return mainBuffer;    }   ])', 1), ('([1:/android/media/cts/AudioManagerStub.java]:[android.media.AudioManager]:[1]:method_text:[mMediaPlayer.release();        mCTSResult.setResult(CTSResult.RESULT_OK);        finish();    }}])', 1), ('([1:/android/mediadrm/cts/MediaPlayerDrmTest.java]:[android.media.AudioManager]:[1]:method_text:[inal Uri CENC_VIDEO_URL_DOWNLOADED = getUriFromFile(""car_cenc-20120827-88.mp4"");    // Tests   ])', 1), ('([1:/android/media/cts/Utils.java]:[android.media.AudioManager]:[1]:method_text:[      mActiveConfigSize = configs.size();            mCountDownLatch.countDown();        }    }}])', 1), ('([1:/android/media/cts/AudioTrack_ListenerTest.java]:[android.media.AudioManager]:[1]:method_text:[          mIsHandleMessageCalled = true;            super.handleMessage(msg);        }    };   ])', 1), ('([1:/android/media/cts/RingtoneManagerTest.java]:[android.media.AudioManager]:[1]:method_text:[IO_OUTPUT)                && !pm.hasSystemFeature(PackageManager.FEATURE_LEANBACK_ONLY);    }   ])', 1), ('([1:/android/media/cts/EnvReverbTest.java]:[android.media.AudioManager]:[1]:method_text:[ctor    //----------------------------------    //Test case 0.0: test constructor and release   ])', 1), ('([1:/android/media/cts/DynamicsProcessingTest.java]:[android.media.AudioManager]:[1]:method_text:[r and release    @AppModeFull(reason = ""Fails for instant but not enough to block the release"")   ])', 1), ('([1:/android/media/cts/AudioCommunicationDeviceTest.java]:[android.media.AudioManager]:[1]:method_text:[  mAudioManager = getInstrumentation().getContext().getSystemService(AudioManager.class);    }   ])', 1), ('([1:/android/mediadrm/cts/Utils.java]:[android.media.AudioManager]:[1]:method_text:[      mActiveConfigSize = configs.size();            mCountDownLatch.countDown();        }    }}])', 1), ('([1:/android/media/cts/LoudnessEnhancerTest.java]:[android.media.AudioManager]:[1]:method_text:[ctor    //----------------------------------    //Test case 0.0: test constructor and release   ])', 1), ('([1:/android/media/cts/HapticGeneratorTest.java]:[android.media.AudioManager]:[1]:method_text:[ctor    //----------------------------------    //Test case 0.0: test constructor and release   ])', 1), ('([1:/com/android/cts/verifier/audio/USBAudioPeripheralActivity.java]:[android.media.AudioManager]:[1]:method_text:[          updateConnectStatus();        }    }    abstract public void updateConnectStatus();}])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityVolumeTest.java]:[android.media.AudioManager]:[1]:method_text:[eamMaxVolume(AudioManager.STREAM_ACCESSIBILITY);        mFixedA11yVolume = (MIN == MAX);    }   ])', 1), ('([1:/com/android/cts/verifier/audio/AnalogHeadsetAudioActivity.java]:[android.media.AudioManager]:[1]:method_text:[Unit.NONE);                break;        }        return super.onKeyDown(keyCode, event);    }}])', 1), ('([1:/android/media/cts/MediaSessionTest.java]:[android.media.AudioManager]:[1]:method_text:[ that a session can be created and that all the fields are     * initialized correctly.     */   ])', 1), ('([1:/com/android/cts/verifier/audio/HifiUltrasoundSpeakerTestActivity.java]:[android.media.AudioManager]:[1]:method_text:[ @Override    public void sendMessage(String message) {      publishProgress(message);    }  }}])', 1), ('([1:/com/android/cts/verifier/audio/AudioInputRoutingNotificationsActivity.java]:[android.media.AudioManager]:[1]:method_text:[!= null) {            mAudioRecorder.stopStream();        }        super.onBackPressed();    }}])', 1), ('([1:/com/android/cts/verifier/audio/AudioOutputRoutingNotificationsActivity.java]:[android.media.AudioManager]:[1]:method_text:[r != null) {            mAudioPlayer.stopStream();        }        super.onBackPressed();    }}])', 1), ('([1:/android/server/wm/WindowTest.java]:[android.media.AudioManager]:[1]:method_text:[f (mActivity != null) {            mActivity.setFlagFalse();        }    }    @UiThreadTest   ])', 1), ('([1:/com/android/cts/verifier/tunnelmode/VolumeLevelChangesActivity.java]:[android.media.AudioManager]:[1]:method_text:[  }    }    private void stopVideo() {        mPlayer.pause();        mPlayer.reset();    }}])', 1), ('([1:/android/media/cts/EnumDevicesTest.java]:[android.media.AudioManager]:[1]:method_text:[) mContext.getSystemService(Context.AUDIO_SERVICE);        assertNotNull(mAudioManager);    }   ])', 1), ('([1:/android/media/cts/AudioAttributesTest.java]:[android.media.AudioManager]:[1]:method_text:[----------    // Test case 1: call describeContents(), not used yet, but needs to be exercised   ])', 1), ('([1:/android/media/cts/MediaControllerTest.java]:[android.media.AudioManager]:[1]:method_text:[Session != null) {            mSession.release();            mSession = null;        }    }   ])', 1), ('([1:/android/permission/cts/telephony/TelephonyManagerPermissionTest.java]:[android.media.AudioManager]:[1]:method_text:[     * Requires Permission:     * {@link android.Manifest.permission#READ_PHONE_STATE}.     */   ])', 1), ('([1:/android/media/cts/VolumeShaperTest.java]:[android.media.AudioManager]:[1]:method_text:[.Builder()                .setCurve(ramp, ramp)                .build();    }    @SmallTest   ])', 1), ('([1:/android/telecom/cts/TelecomManagerTest.java]:[android.media.AudioManager]:[1]:method_text:[ private static final String CTS_TELECOM_PKG = TelecomManagerTest.class.getPackage().getName();   ])', 1), ('([1:/android/media/tv/cts/TvInputManagerTest.java]:[android.media.AudioManager]:[1]:method_text:[get(0);                assertEquals(expectedInfo, callbackInfo);            }        }    }   ])', 1), ('([1:/android/media/cts/AudioPlaybackCaptureTest.java]:[android.media.AudioManager]:[1]:method_text:[tributes.USAGE_ASSISTANT,            AudioAttributes.USAGE_NOTIFICATION,    };    @Presubmit   ])', 1), ('([1:/android/media/cts/AsyncPlayerTest.java]:[android.media.AudioManager]:[1]:method_text:[.AndroidTestCase;@NonMediaMainlineTestpublic class AsyncPlayerTest extends AndroidTestCase {   ])', 1), ('([1:/android/telecom/cts/ConnectionServiceTest.java]:[android.media.AudioManager]:[1]:method_text:[lecomManager.registerPhoneAccount(TestUtils.TEST_SELF_MANAGED_PHONE_ACCOUNT_1);        }    }   ])', 1), ('([1:/com/android/cts/verifier/audio/NativeAnalyzerThread.java]:[android.media.AudioManager]:[1]:method_text:[}    private static void log(String msg) {        Log.v(""Loopback"", msg);    }}  //end thread.])', 1), ('([1:/com/android/cts/verifier/audio/AudioOutputDeviceNotificationsActivity.java]:[android.media.AudioManager]:[1]:method_text:[// ""Honor System"" buttons        super.setup();        setPassFailButtonClickListeners();    }}])', 1), ('([1:/android/media/cts/RingtoneTest.java]:[android.media.AudioManager]:[1]:method_text:[PackageManager()                .hasSystemFeature(PackageManager.FEATURE_LEANBACK_ONLY);    }   ])', 1), ('([1:/android/widget/cts/VideoViewTest.java]:[android.media.AudioManager]:[1]:method_text:[            mVideoView.setMediaController(mediaController);        });    }    @UiThreadTest   ])', 1), ('([1:/android/media/cts/MediaRouterTest.java]:[android.media.AudioManager]:[1]:method_text:[.tearDown();    }    /**     * Test {@link MediaRouter#selectRoute(int, RouteInfo)}.     */   ])', 1), ('([1:/android/media/cts/AudioRecordingConfigurationTest.java]:[android.media.AudioManager]:[1]:method_text:[  super.tearDown();    }    // start a recording and verify it is seen as an active recording   ])', 1), ('([1:/android/media/cts/ToneGeneratorTest.java]:[android.media.AudioManager]:[1]:method_text:[ ""TODO: evaluate and port to instant"")public class ToneGeneratorTest extends AndroidTestCase {   ])', 1), ('([1:/android/media/cts/AudioHelper.java]:[android.media.AudioManager]:[1]:method_text:[  private final static String TAG = ""AudioRecordAuditNative"";        private int mPosition;    }}])', 1), ('([1:/com/android/cts/verifier/sensors/RVCVRecordActivity.java]:[android.media.AudioManager]:[1]:method_text:[ch (Exception e)            {                e.printStackTrace();            }        }    }}])', 1), ('([1:/android/media/cts/RoutingTest.java]:[android.media.AudioManager]:[1]:method_text:[          bufferSize,                AudioTrack.MODE_STREAM);        return audioTrack;    }   ])', 1), ('([1:/android/media/cts/AudioNativeTest.java]:[android.media.AudioManager]:[1]:method_text:[<< MAX_CHANNEL_COUNT) - 1;    private static final int CHANNEL_INDEX_MASK_MAGIC = 0x80000000;   ])', 1), ('([1:/com/android/cts/verifier/audio/AudioFrequencyActivity.java]:[android.media.AudioManager]:[1]:method_text:[d setMinLevel() {        mAudioManager.setStreamVolume(AudioManager.STREAM_MUSIC, 0, 0);    }   ])', 1), ('([1:/android/media/cts/AudioPlayRoutingNative.java]:[android.media.AudioManager]:[1]:method_text:[  }    //    // Tests    //    // Test a basic Aquire/Release cycle on the default player.   ])', 1), ('([2:/android/media/cts/AudioFocusTest.java]:[android.media.AudioManager]:[2]:method_text:[BILITY)            .setContentType(AudioAttributes.CONTENT_TYPE_SPEECH)            .build();   ])', 1), ('([1:/android/security/cts/AudioSecurityTest.java]:[android.media.AudioManager]:[1]:method_text:[ 0 /* expected */, failures);    }    // b/28173666    @AsbSecurityTest(cveBugId = 28173666)   ])', 1), ('([1:/android/media/cts/NonBlockingAudioTrack.java]:[android.media.AudioManager]:[1]:method_text:[umulate size written to queue        mNumBytesQueued += size;        mQueue.add(element);    }}])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[android.media.AudioManager]:[1]:method_text:[oid deactivateGracePeriod() {        UiDevice.getInstance(mInstrumentation).pressHome();    }   ])', 1), ('([1:/android/telecom/cts/IncomingCallTest.java]:[android.media.AudioManager]:[1]:method_text:[ANDLE = new PhoneAccountHandle(            new ComponentName(PACKAGE, COMPONENT), ""WRONG_ID"");   ])', 1), ('([14:/com/android/cts/verifier/audio/RingerModeActivity.java]:[android.media.AudioManager]:[14]:method_text:[eRingerDndOn());        tests.add(new TestSetRingerModePolicyAccessDndOn());        // TODO: Add a])', 1), ('([2:/android/telecom/cts/SelfManagedConnectionServiceTest.java]:[android.media.AudioManager]:[2]:method_text:[urns a list of     * the registered self-managed {@link android.telecom.PhoneAccount}s.     */   ])', 1), ('([1:/android/media/cts/AudioRecordRoutingNative.java]:[android.media.AudioManager]:[1]:method_text:[}    //    // Tests    //    // Test a basic Aquire/Release cycle on the default recorder.   ])', 1), ('([1:/com/android/cts/verifier/tv/display/ModeSwitchingTestActivity.java]:[android.media.AudioManager]:[1]:method_text:[edDisplayModeId = mNextMode.getModeId();            window.setAttributes(params);        }    }}])', 1), ('([1:/android/permission/cts/NoAudioPermissionTest.java]:[android.media.AudioManager]:[1]:method_text:[sion:     *   {@link android.Manifest.permission#MODIFY_AUDIO_SETTINGS}.     */    @SmallTest   ])', 1), ('([1:/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java]:[android.media.AudioManager]:[1]:method_text:[0) {                mPipe.write(mAudioShortArray, 0, nSamplesRead);            }        }    }}])', 1), ('([1:/com/android/cts/verifier/audio/AudioFrequencyUnprocessedActivity.java]:[PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED]:[1]:method_text:[0) {                mPipe.write(mAudioShortArray, 0, nSamplesRead);            }        }    }}])', 1)]"	""	""	"[('android.media.AudioManager', 71), ('PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED', 1)]"	"[('[com.android.cts.verifier.audio.AudioFrequencyUnprocessedActivity OnBtnClickListener None]', 2), ('[android.media.cts.SystemMediaRouter2Test ArrayList CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioModeListenerTest MyOnModeChangedListener CtsMediaTestCases]', 1), ('[com.android.cts.verifier.audio.SoundPlayerObject isPlaying None]', 1), ('[com.android.cts.verifier.telecom.CtsConnection isIncomingCall None]', 1), ('[android.telecom.cts.BaseTelecomTestWithMockServices disableCarMode CtsTelecomTestCases]', 1), ('[android.media.cts.SoundPoolTest exists CtsMediaTestCases]', 1), ('[android.telecom.cts.BackgroundCallAudioTest isCallScreeningModeSupported CtsTelecomTestCases]', 1), ('[com.android.cts.verifier.audio.HifiUltrasoundTestActivity dismiss None]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[com.android.cts.verifier.tunnelmode.MediaCodecFlushActivity setPassFailButtonClickListeners None]', 1), ('[android.media.cts.MediaRouter2Test emptyList CtsMediaTestCases]', 1), ('[android.media.cts.AudioTrackSurroundTest isSink CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerStub finish None]', 1), ('[android.media.cts.Utils isEmpty None]', 1), ('[android.media.cts.RingtoneManagerTest RingtoneManagerTest CtsMediaTestCases]', 1), ('[android.mediadrm.cts.Utils isEmpty CtsMediaDrmTestCases]', 1), ('[com.android.cts.verifier.audio.USBAudioPeripheralActivity OnBtnClickListener None]', 1), ('[android.accessibilityservice.cts.AccessibilityVolumeTest isVolumeFixed CtsAccessibilityServiceTestCases]', 1), ('[com.android.cts.verifier.audio.AnalogHeadsetAudioActivity ConnectListener None]', 1), ('[com.android.cts.verifier.audio.HifiUltrasoundSpeakerTestActivity dismiss None]', 1), ('[com.android.cts.verifier.audio.AudioInputRoutingNotificationsActivity OnBtnClickListener None]', 1), ('[com.android.cts.verifier.audio.AudioOutputRoutingNotificationsActivity OnBtnClickListener None]', 1), ('[com.android.cts.verifier.tunnelmode.VolumeLevelChangesActivity OnClickListener None]', 1), ('[android.media.cts.VolumeShaperTest isLowRamDevice CtsMediaTestCases]', 1), ('[android.media.tv.cts.TvInputManagerTest TvInputManagerTest CtsTvTestCases]', 1), ('[android.media.cts.AudioPlaybackCaptureTest APCTestConfig CtsMediaTestCases]', 1), ('[com.android.cts.verifier.audio.NativeAnalyzerThread getLatencyMillis None]', 1), ('[com.android.cts.verifier.audio.AudioOutputDeviceNotificationsActivity OnClickListener None]', 1), ('[android.media.cts.RingtoneTest isPlaying CtsMediaTestCases]', 1), ('[android.media.cts.AudioHelper currentTimeMillis None]', 1), ('[com.android.cts.verifier.sensors.RVCVRecordActivity getDefaultDisplay None]', 1), ('[android.media.cts.RoutingTest exists CtsMediaTestCases]', 1), ('[com.android.cts.verifier.audio.AudioFrequencyActivity OnBtnClickListener None]', 1), ('[android.media.cts.NonBlockingAudioTrack isEmpty None]', 1), ('[android.app.cts.NotificationManagerTest isGroup CtsAppTestCases]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity isLowRamDevice None]', 1), ('[com.android.cts.verifier.tv.display.ModeSwitchingTestActivity isEmpty None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-2"	"5.1/H-1-2"	"05010000.720102"	"""[5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps.  | [5.1/H-1-2] MUST support 6 instances of hardware video decoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p resolution@30 fps. *Only 2 instances are required if VP9 codec is present. """	""	""	"HEVC VP9 AVC"	""	""	""	""	"[('android.media.cts.MediaCodecListTest', 10), ('android.media.cts.MediaCodecTest', 5), ('android.media.cts.MediaMuxerTest', 5), ('android.mediav2.cts.CodecDecoderSurfaceTest', 3), ('android.media.cts.VideoDecoderRotationTest', 3), ('android.mediav2.cts.AdaptivePlaybackTest', 3), ('android.media.cts.DecodeEditEncodeTest', 2), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 2), ('android.media.cts.CamcorderProfileTest', 2), ('android.media.cts.DecodeAccuracyTestBase', 2), ('android.media.mediaparser.cts.MediaParserTest', 2), ('android.media.cts.MediaCodecPlayerTest', 1), ('android.mediastress.cts.HEVCR1080pAacLongPlayerTest', 1), ('android.mediav2.cts.CodecUnitTest', 1), ('android.mediastress.cts.NativeMediaTest', 1), ('android.location.cts.gnss.asn1.supl2.rrlp_components.CNAVclockModel', 1), ('android.mediadrm.cts.MediaDrmCodecTest', 1), ('android.media.cts.EncodeVirtualDisplayWithCompositionTest', 1), ('android.autofillservice.cts.activities.OptionalSaveActivity', 1), ('android.media.metrics.cts.MediaMetricsAtomHostSideTests', 1), ('android.location.cts.gnss.asn1.supl2.rrlp_components.NavModel_NAVKeplerianSet', 1), ('android.mediav2.cts.CodecListTest', 1), ('android.location.cts.gnss.suplClient.SuplRrlpController', 1)]"	"[('getMediaType', 28), ('release', 14), ('elapsedRealtime', 14), ('decoderRelease', 10), ('getCodec', 8), ('BufferInfo', 8), ('getProfile', 6), ('reset', 6), ('input', 6), ('getSimpleName', 5), ('getSampleTime', 5), ('advance', 5), ('clear', 5), ('start', 5), ('stop', 5), ('getArguments', 4), ('setUp', 4), ('getBitrate', 4), ('getWidth', 4), ('getHeight', 4), ('startDecoder', 4), ('queueDecoderInputBuffer', 4), ('dequeueDecoderOutputBuffer', 4), ('extractorRelease', 4), ('OutputManager', 3), ('queueEOS', 3), ('waitForAllOutputs', 3), ('limit', 3), ('getSampleFlags', 3), ('hasSeenError', 2), ('getContext', 2), ('getExternalCacheDir', 2), ('super', 2), ('getTag', 2), ('getDefaultDurationSeconds', 2), ('getRecommendedFileFormat', 2), ('getVideoProfiles', 2), ('getFrameRate', 2), ('getAudioProfiles', 2), ('getSampleRate', 2), ('getChannels', 2), ('hasProfile', 2), ('getActivity', 2), ('getApplicationContext', 2), ('getResources', 2), ('tearDown', 2), ('bringActivityToFront', 2), ('getHelper', 2), ('MediaExtractor', 2), ('failToStart', 2), ('PlayerResult', 2), ('getMediaFormat', 2), ('getInputBuffers', 2), ('getOutputBuffers', 2), ('getAssetFileDescriptor', 2), ('getFileDescriptor', 2), ('getStartOffset', 2), ('getLength', 2), ('close', 2), ('main', 1), ('getMediaDirString', 1), ('CNAVclockModel', 1), ('createMediaFormat', 1), ('getCodecInfos', 1), ('NavModel_NAVKeplerianSet', 1), ('getSuplResponse', 1), ('GpsNavMessageProto', 1), ('getMessage', 1)]"	"[('CtsMediaTestCases', 31), ('CtsMediaV2TestCases', 8), ('CtsLocationGnssTestCases', 3), ('CtsMediaStressTestCases', 2), ('CtsMediaParserTestCases', 2), ('CtsMediaDrmTestCases', 1), ('CtsAutoFillServiceTestCases', 1)]"	""	"android.media.cts.MediaCodecListTest"	"getMessage"	"CtsMediaTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderSurfaceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoDecoderRotationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/AdaptivePlaybackTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeAccuracyTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/NativeMediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/CNAVclockModel.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmCodecTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeVirtualDisplayWithCompositionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/activities/OptionalSaveActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/app/MediaMetricsTest/src/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/NavModel_NAVKeplerianSet.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/suplClient/SuplRrlpController.java', 1)]"	"[('(4,AVC,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(3,AVC,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java)', 1), ('(1,AVC,/android/mediav2/cts/CodecUnitTest.java)', 1), ('(19,AVC,/android/media/cts/MediaCodecTest.java)', 1), ('(3,HEVC,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(3,VP9,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(1,AVC,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(120,AVC,/android/location/cts/gnss/asn1/supl2/rrlp_components/CNAVclockModel.java)', 1), ('(2,HEVC,/android/media/cts/CamcorderProfileTest.java)', 1), ('(1,AVC,/android/media/cts/CamcorderProfileTest.java)', 1), ('(6,VP9,/android/media/cts/DecodeAccuracyTestBase.java)', 1), ('(1,AVC,/android/media/cts/DecodeAccuracyTestBase.java)', 1), ('(1,AVC,/android/mediadrm/cts/MediaDrmCodecTest.java)', 1), ('(4,AVC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,HEVC,/android/media/cts/MediaMuxerTest.java)', 1), ('(2,VP9,/android/media/cts/MediaMuxerTest.java)', 1), ('(7,AVC,/android/media/cts/MediaMuxerTest.java)', 1), ('(3,HEVC,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(6,VP9,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(12,AVC,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(1,AVC,/android/media/cts/EncodeVirtualDisplayWithCompositionTest.java)', 1), ('(1,HEVC,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(1,VP9,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(1,AVC,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(7,AVC,/android/autofillservice/cts/activities/OptionalSaveActivity.java)', 1), ('(10,HEVC,/android/mediav2/cts/AdaptivePlaybackTest.java)', 1), ('(4,VP9,/android/mediav2/cts/AdaptivePlaybackTest.java)', 1), ('(10,AVC,/android/mediav2/cts/AdaptivePlaybackTest.java)', 1), ('(1,AVC,/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java)', 1), ('(210,AVC,/android/location/cts/gnss/asn1/supl2/rrlp_components/NavModel_NAVKeplerianSet.java)', 1), ('(2,AVC,/android/mediav2/cts/CodecListTest.java)', 1), ('(1,AVC,/android/location/cts/gnss/suplClient/SuplRrlpController.java)', 1), ('(7,HEVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(6,VP9,/android/media/cts/MediaCodecListTest.java)', 1), ('(10,AVC,/android/media/cts/MediaCodecListTest.java)', 1)]"	"[('([1:/android/media/cts/DecodeEditEncodeTest.java]:[AVC]:[1]:method_text:[gest color component delta seen (i.e. actual vs. expected)    private int mLargestColorDelta;   ])', 1), ('([3:/android/media/cts/DecodeEditEncodeTest.java]:[AVC]:[3]:method_text:[                  throw new RuntimeException(ioe);                }            }        }    }}])', 1), ('([3:/android/media/cts/MediaCodecPlayerTest.java]:[AVC]:[3]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([1:/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java]:[HEVC]:[1]:method_text:[bbb_full.ffmpeg.1920x1080.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[AVC]:[1]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[AVC]:[1]:method_text:[s are thrown from MediaCodec     * methods when called in incorrect operational states.     */   ])', 1), ('([2:/android/media/cts/MediaCodecTest.java]:[AVC]:[2]:method_text:[ createInputSurface() with a non-Surface color format is not required to throw exception     */   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[AVC]:[1]:method_text:[ts:     * <br> dequeueInputBuffer() fails when encoder configured with an input Surface     */   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[AVC]:[1]:method_text:[nt mMaxW;        public int mMaxH;        public int mFps;        public int mBitRate;    }   ])', 1), ('([14:/android/media/cts/MediaCodecTest.java]:[AVC]:[14]:method_text:[077efecc0b24d02L, 0xace33c1e52e2fb4bL);    /**     * Tests MediaCodec.CryptoException     */   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[HEVC]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[VP9]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([1:/android/mediastress/cts/NativeMediaTest.java]:[AVC]:[1]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([120:/android/location/cts/gnss/asn1/supl2/rrlp_components/CNAVclockModel.java]:[AVC]:[120]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([2:/android/media/cts/CamcorderProfileTest.java]:[HEVC]:[2]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([1:/android/media/cts/CamcorderProfileTest.java]:[AVC]:[1]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([6:/android/media/cts/DecodeAccuracyTestBase.java]:[VP9]:[6]:method_text:[blic static boolean isVideo(String mimeType) {        return mimeType.startsWith(""video"");    }}])', 1), ('([1:/android/media/cts/DecodeAccuracyTestBase.java]:[AVC]:[1]:method_text:[blic static boolean isVideo(String mimeType) {        return mimeType.startsWith(""video"");    }}])', 1), ('([1:/android/mediadrm/cts/MediaDrmCodecTest.java]:[AVC]:[1]:method_text:[ception     * <br> getInputBuffer() after the failed queueSecureInputBuffer() succeeds.     */   ])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[AVC]:[2]:method_text:[UNITS);        assertSupportFor(MediaParser.PARAMETER_TS_ENABLE_HDMV_DTS_AUDIO_STREAMS);    }   ])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[AVC]:[2]:method_text:[,                /* value= */ ""multi_pmt"",                /* valueIsIllegal= */ false);    }   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[HEVC]:[1]:method_text:[ well when video with B Frames are muxed using MPEG4Writer     * and a few frames drop.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[VP9]:[1]:method_text:[e frame     * drops as in b/63590381 and b/64949961 while B Frames encoding is enabled.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[VP9]:[1]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([6:/android/media/cts/MediaMuxerTest.java]:[AVC]:[6]:method_text:[e frame     * drops as in b/63590381 and b/64949961 while B Frames encoding is enabled.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[AVC]:[1]:method_text:[ well when video with B Frames are muxed using MPEG4Writer     * and a few frames drop.     */   ])', 1), (""([3:/android/mediav2/cts/CodecDecoderSurfaceTest.java]:[HEVC]:[3]:method_text:[face.     * In these scenarios, Timestamp and it's ordering is verified.     */    @LargeTest   ])"", 1), (""([6:/android/mediav2/cts/CodecDecoderSurfaceTest.java]:[VP9]:[6]:method_text:[face.     * In these scenarios, Timestamp and it's ordering is verified.     */    @LargeTest   ])"", 1), (""([12:/android/mediav2/cts/CodecDecoderSurfaceTest.java]:[AVC]:[12]:method_text:[face.     * In these scenarios, Timestamp and it's ordering is verified.     */    @LargeTest   ])"", 1), ('([1:/android/media/cts/EncodeVirtualDisplayWithCompositionTest.java]:[AVC]:[1]:method_text:[yWithCompositionTestImpl mImpl =            new EncodeVirtualDisplayWithCompositionTestImpl();   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[HEVC]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[VP9]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[AVC]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([7:/android/autofillservice/cts/activities/OptionalSaveActivity.java]:[AVC]:[7]:method_text:[                   : new OneTimeTextWatcher(""favColor"", mFavoriteColor, favColor);        }    }}])', 1), ('([10:/android/mediav2/cts/AdaptivePlaybackTest.java]:[HEVC]:[10]:method_text:[   buffer.clear();        buffer.position(offset);        return format;    }    @LargeTest   ])', 1), ('([4:/android/mediav2/cts/AdaptivePlaybackTest.java]:[VP9]:[4]:method_text:[   buffer.clear();        buffer.position(offset);        return format;    }    @LargeTest   ])', 1), ('([10:/android/mediav2/cts/AdaptivePlaybackTest.java]:[AVC]:[10]:method_text:[   buffer.clear();        buffer.position(offset);        return format;    }    @LargeTest   ])', 1), ('([1:/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java]:[AVC]:[1]:method_text:[                .build();        s.reportTrackChangeEvent(e);        resetProperties();    }   ])', 1), ('([210:/android/location/cts/gnss/asn1/supl2/rrlp_components/NavModel_NAVKeplerianSet.java]:[AVC]:[210]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([2:/android/mediav2/cts/CodecListTest.java]:[AVC]:[2]:method_text:[                       CodecTestBase.hasEncoder(MediaFormat.MIMETYPE_VIDEO_VP8));        }    }}])', 1), ('([1:/android/location/cts/gnss/suplClient/SuplRrlpController.java]:[AVC]:[1]:method_text:[Proto.cis = ephemeris.getEphemCis().getInteger().shortValue() * NAVIGATION_CIS_SCALE_FACTOR;  }}])', 1), ('([3:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[3]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[AVC]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[                  pp2 != pp && pp2.covers(pp));                }            }        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1)]"	""	""	"[('AVC', 31), ('HEVC', 10), ('VP9', 10)]"	"[('[android.media.cts.VideoDecoderRotationTest EncodeVirtualDisplayWithCompositionTestImpl CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 3), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 2), ('[android.media.cts.DecodeAccuracyTestBase isAbrEnabled CtsMediaTestCases]', 2), ('[android.media.cts.MediaMuxerTest testSimulateAudioBVideoFramesDropIssues CtsMediaTestCases]', 2), ('[android.media.cts.MediaMuxerTest testWebmOutput CtsMediaTestCases]', 2), ('[android.media.cts.DecodeEditEncodeTest testVideoEdit720p CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecPlayerTest MediaCodecPlayerTest CtsMediaTestCases]', 1), ('[android.mediav2.cts.CodecUnitTest TestApi CtsMediaV2TestCases]', 1), ('[android.media.cts.MediaCodecTest testException CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testAsyncStopAndReset CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testConcurrentAudioVideoEncodings CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testCryptoInfoPattern CtsMediaTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.CNAVclockModel isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.mediadrm.cts.MediaDrmCodecTest isEncoder CtsMediaDrmTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testSupportsParameter CtsMediaParserTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testSetKnownParameters CtsMediaParserTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[android.media.cts.EncodeVirtualDisplayWithCompositionTest EncodeVirtualDisplayWithCompositionTestImpl CtsMediaTestCases]', 1), ('[android.autofillservice.cts.activities.OptionalSaveActivity OnClickListener CtsAutoFillServiceTestCases]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests testTrackChangeEvent_audio None]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.NavModel_NAVKeplerianSet isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.mediav2.cts.CodecListTest testCddRequiredCodecsAvailability CtsMediaV2TestCases]', 1), ('[android.location.cts.gnss.suplClient.SuplRrlpController isMsSUPLRESPONSE CtsLocationGnssTestCases]', 1), ('[android.media.cts.MediaCodecListTest testVideoPerformancePointsSanity CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"5.1.1  . Media Codec Characterization"	"5.1.1"	"C-2-1"	"5.1.1/C-2-1"	"05010100.670201"	"""C-2-1] All video codecs MUST publish achievable frame rate data for the following sizes if supported by the codec: SD (low quality) SD (high quality) HD 720p HD 1080p UHD Video resolution 176 x 144 px (H263, MPEG2, MPEG4) 352 x 288 px (MPEG4 encoder, H263, MPEG2) 320 x 180 px (VP8, VP8) 320 x 240 px (other) 704 x 576 px (H263) 640 x 360 px (VP8, VP9) 640 x 480 px (MPEG4 encoder) 720 x 480 px (other) 1408 x 1152 px (H263) 1280 x 720 px (other) 1920 x 1080 px (other than MPEG4) 3840 x 2160 px (HEVC, VP9)"""	""	""	"HEVC UHD MPEG2 H263 MPEG4 VP8 VP9"	""	""	""	""	"[('android.media.cts.MediaMuxerTest', 16), ('android.media.cts.MediaCodecListTest', 15), ('android.mediav2.cts.CodecDecoderSurfaceTest', 6), ('android.media.cts.CamcorderProfileTest', 5), ('android.mediav2.cts.AdaptivePlaybackTest', 5), ('android.media.cts.VideoDecoderRotationTest', 3), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 2), ('android.mediapc.cts.CodecTestBase', 2), ('com.android.cts.verifier.streamquality.StreamingVideoActivity', 2), ('android.mediastress.cts.HEVCR1080pAacLongPlayerTest', 1), ('android.media.cts.DecodeAccuracyTestBase', 1), ('android.media.cts.bitstreams.Vp8BitstreamsFullTest', 1), ('android.mediav2.cts.CodecListTest', 1)]"	"[('getMediaType', 70), ('getCodec', 20), ('release', 16), ('getProfile', 15), ('BufferInfo', 11), ('input', 11), ('getBitrate', 10), ('clear', 10), ('lock', 10), ('getSimpleName', 9), ('unlock', 8), ('hashCode', 8), ('elapsedRealtime', 7), ('start', 7), ('stop', 7), ('getWidth', 6), ('getHeight', 6), ('getSampleTime', 6), ('advance', 6), ('signalAll', 6), ('OutputManager', 6), ('queueEOS', 6), ('waitForAllOutputs', 6), ('getDefaultDurationSeconds', 5), ('getRecommendedFileFormat', 5), ('getVideoProfiles', 5), ('getFrameRate', 5), ('getAudioProfiles', 5), ('getSampleRate', 5), ('getChannels', 5), ('hasProfile', 5), ('decoderRelease', 5), ('limit', 5), ('getSampleFlags', 5), ('getArguments', 4), ('clearQueues', 4), ('toString', 4), ('setUp', 3), ('reset', 3), ('getContext', 2), ('getExternalCacheDir', 2), ('startDecoder', 2), ('queueDecoderInputBuffer', 2), ('dequeueDecoderOutputBuffer', 2), ('extractorRelease', 2), ('ReentrantLock', 2), ('newCondition', 2), ('CodecAsyncHandler', 2), ('resetContext', 2), ('getMessage', 2), ('getOutput', 2), ('getName', 2), ('getActivity', 1), ('getApplicationContext', 1), ('getResources', 1), ('tearDown', 1), ('bringActivityToFront', 1), ('getHelper', 1), ('MediaExtractor', 1), ('failToStart', 1), ('PlayerResult', 1), ('getMediaFormat', 1), ('getInputBuffers', 1), ('getOutputBuffers', 1), ('getAssetFileDescriptor', 1), ('getFileDescriptor', 1), ('getStartOffset', 1), ('getLength', 1), ('close', 1), ('getMediaDirString', 1), ('getStatSize', 1), ('bitstreams', 1)]"	"[('CtsMediaTestCases', 40), ('CtsMediaV2TestCases', 12), ('CtsMediaPerformanceClassTestCases', 2), ('CtsMediaStressTestCases', 1), ('CtsMediaBitstreamsTestCases', 1)]"	""	"android.media.cts.MediaCodecListTest"	"getName"	"CtsMediaTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderSurfaceTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/AdaptivePlaybackTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoDecoderRotationTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/CodecTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/streamquality/StreamingVideoActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeAccuracyTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/src/android/media/cts/bitstreams/Vp8BitstreamsFullTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecListTest.java', 1)]"	"[('(1,HEVC,/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java)', 1), ('(3,HEVC,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(3,VP9,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(2,HEVC,/android/media/cts/CamcorderProfileTest.java)', 1), ('(4,UHD,/android/media/cts/CamcorderProfileTest.java)', 1), ('(2,H263,/android/media/cts/CamcorderProfileTest.java)', 1), ('(1,MPEG4,/android/media/cts/CamcorderProfileTest.java)', 1), ('(2,VP8,/android/media/cts/CamcorderProfileTest.java)', 1), ('(6,VP9,/android/media/cts/DecodeAccuracyTestBase.java)', 1), ('(1,H263,/android/mediapc/cts/CodecTestBase.java)', 1), ('(1,MPEG4,/android/mediapc/cts/CodecTestBase.java)', 1), ('(1,HEVC,/android/media/cts/MediaMuxerTest.java)', 1), ('(7,H263,/android/media/cts/MediaMuxerTest.java)', 1), ('(22,MPEG4,/android/media/cts/MediaMuxerTest.java)', 1), ('(2,VP9,/android/media/cts/MediaMuxerTest.java)', 1), ('(3,HEVC,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(9,MPEG2,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(3,H263,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(3,MPEG4,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(3,VP8,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(6,VP9,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(3,VP8,/android/media/cts/bitstreams/Vp8BitstreamsFullTest.java)', 1), ('(1,HEVC,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(1,VP8,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(1,VP9,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(10,HEVC,/android/mediav2/cts/AdaptivePlaybackTest.java)', 1), ('(10,MPEG2,/android/mediav2/cts/AdaptivePlaybackTest.java)', 1), ('(4,MPEG4,/android/mediav2/cts/AdaptivePlaybackTest.java)', 1), ('(4,VP8,/android/mediav2/cts/AdaptivePlaybackTest.java)', 1), ('(4,VP9,/android/mediav2/cts/AdaptivePlaybackTest.java)', 1), ('(5,H263,/com/android/cts/verifier/streamquality/StreamingVideoActivity.java)', 1), ('(4,MPEG4,/com/android/cts/verifier/streamquality/StreamingVideoActivity.java)', 1), ('(2,VP8,/android/mediav2/cts/CodecListTest.java)', 1), ('(7,HEVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(9,UHD,/android/media/cts/MediaCodecListTest.java)', 1), ('(2,MPEG2,/android/media/cts/MediaCodecListTest.java)', 1), ('(5,H263,/android/media/cts/MediaCodecListTest.java)', 1), ('(2,MPEG4,/android/media/cts/MediaCodecListTest.java)', 1), ('(8,VP8,/android/media/cts/MediaCodecListTest.java)', 1), ('(6,VP9,/android/media/cts/MediaCodecListTest.java)', 1)]"	"[('([1:/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java]:[HEVC]:[1]:method_text:[bbb_full.ffmpeg.1920x1080.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[HEVC]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[VP9]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([2:/android/media/cts/CamcorderProfileTest.java]:[HEVC]:[2]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([4:/android/media/cts/CamcorderProfileTest.java]:[UHD]:[4]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([2:/android/media/cts/CamcorderProfileTest.java]:[H263]:[2]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([1:/android/media/cts/CamcorderProfileTest.java]:[MPEG4]:[1]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([2:/android/media/cts/CamcorderProfileTest.java]:[VP8]:[2]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([6:/android/media/cts/DecodeAccuracyTestBase.java]:[VP9]:[6]:method_text:[blic static boolean isVideo(String mimeType) {        return mimeType.startsWith(""video"");    }}])', 1), ('([1:/android/mediapc/cts/CodecTestBase.java]:[H263]:[1]:method_text:[    }    @Override    public Double call() throws Exception {        return doEncode();    }}])', 1), ('([1:/android/mediapc/cts/CodecTestBase.java]:[MPEG4]:[1]:method_text:[    }    @Override    public Double call() throws Exception {        return doEncode();    }}])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[HEVC]:[1]:method_text:[ well when video with B Frames are muxed using MPEG4Writer     * and a few frames drop.     */   ])', 1), ('([6:/android/media/cts/MediaMuxerTest.java]:[H263]:[6]:method_text:[neAndVerify(source, outputFilePath, 1, 180, MediaMuxer.OutputFormat.MUXER_OUTPUT_MPEG_4);    }   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[H263]:[1]:method_text:[e frame     * drops as in b/63590381 and b/64949961 while B Frames encoding is enabled.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[MPEG4]:[1]:method_text:[e frame     * drops as in b/63590381 and b/64949961 while B Frames encoding is enabled.     */   ])', 1), ('([2:/android/media/cts/MediaMuxerTest.java]:[MPEG4]:[2]:method_text:[ well when video with B Frames are muxed using MPEG4Writer     * and a few frames drop.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[MPEG4]:[1]:method_text:[video muxing while framedrops occurs twice using MPEG4Writer     * works with B Frames.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[MPEG4]:[1]:method_text:[f audio/video muxing while framedrops once using MPEG4Writer     * works with B Frames.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[MPEG4]:[1]:method_text:[ audio/video muxing while framedrops twice using MPEG4Writer     * works with B Frames.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[MPEG4]:[1]:method_text:[g using MPEG4Writer works with B Frames     * when video frames start later than audio.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[MPEG4]:[1]:method_text:[h B Frames     * when video and audio samples start after zero, video later than audio.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[MPEG4]:[1]:method_text:[h B Frames     * when video and audio samples start after zero, audio later than video.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[MPEG4]:[1]:method_text:[er works with B Frames     * when video starts after zero and audio starts before zero.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[MPEG4]:[1]:method_text:[ using MPEG4Writer works with B Frames when audio     * samples start later than video.     */   ])', 1), ('([11:/android/media/cts/MediaMuxerTest.java]:[MPEG4]:[11]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[VP9]:[1]:method_text:[e frame     * drops as in b/63590381 and b/64949961 while B Frames encoding is enabled.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[VP9]:[1]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), (""([3:/android/mediav2/cts/CodecDecoderSurfaceTest.java]:[HEVC]:[3]:method_text:[face.     * In these scenarios, Timestamp and it's ordering is verified.     */    @LargeTest   ])"", 1), (""([9:/android/mediav2/cts/CodecDecoderSurfaceTest.java]:[MPEG2]:[9]:method_text:[face.     * In these scenarios, Timestamp and it's ordering is verified.     */    @LargeTest   ])"", 1), (""([3:/android/mediav2/cts/CodecDecoderSurfaceTest.java]:[H263]:[3]:method_text:[face.     * In these scenarios, Timestamp and it's ordering is verified.     */    @LargeTest   ])"", 1), (""([3:/android/mediav2/cts/CodecDecoderSurfaceTest.java]:[MPEG4]:[3]:method_text:[face.     * In these scenarios, Timestamp and it's ordering is verified.     */    @LargeTest   ])"", 1), (""([3:/android/mediav2/cts/CodecDecoderSurfaceTest.java]:[VP8]:[3]:method_text:[face.     * In these scenarios, Timestamp and it's ordering is verified.     */    @LargeTest   ])"", 1), (""([6:/android/mediav2/cts/CodecDecoderSurfaceTest.java]:[VP9]:[6]:method_text:[face.     * In these scenarios, Timestamp and it's ordering is verified.     */    @LargeTest   ])"", 1), ('([3:/android/media/cts/bitstreams/Vp8BitstreamsFullTest.java]:[VP8]:[3]:method_text:[packageToRun, boolean enforce) {        super(prefix, path, pkg, packageToRun, enforce);    }   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[HEVC]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[VP8]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[VP9]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([10:/android/mediav2/cts/AdaptivePlaybackTest.java]:[HEVC]:[10]:method_text:[   buffer.clear();        buffer.position(offset);        return format;    }    @LargeTest   ])', 1), ('([10:/android/mediav2/cts/AdaptivePlaybackTest.java]:[MPEG2]:[10]:method_text:[   buffer.clear();        buffer.position(offset);        return format;    }    @LargeTest   ])', 1), ('([4:/android/mediav2/cts/AdaptivePlaybackTest.java]:[MPEG4]:[4]:method_text:[   buffer.clear();        buffer.position(offset);        return format;    }    @LargeTest   ])', 1), ('([4:/android/mediav2/cts/AdaptivePlaybackTest.java]:[VP8]:[4]:method_text:[   buffer.clear();        buffer.position(offset);        return format;    }    @LargeTest   ])', 1), ('([4:/android/mediav2/cts/AdaptivePlaybackTest.java]:[VP9]:[4]:method_text:[   buffer.clear();        buffer.position(offset);        return format;    }    @LargeTest   ])', 1), ('([5:/com/android/cts/verifier/streamquality/StreamingVideoActivity.java]:[H263]:[5]:method_text:[ {                    urlConnection.disconnect();                }            }        }    }}])', 1), ('([4:/com/android/cts/verifier/streamquality/StreamingVideoActivity.java]:[MPEG4]:[4]:method_text:[ {                    urlConnection.disconnect();                }            }        }    }}])', 1), ('([2:/android/mediav2/cts/CodecListTest.java]:[VP8]:[2]:method_text:[                       CodecTestBase.hasEncoder(MediaFormat.MIMETYPE_VIDEO_VP8));        }    }}])', 1), ('([3:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[3]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([9:/android/media/cts/MediaCodecListTest.java]:[UHD]:[9]:method_text:[                  pp2 != pp && pp2.covers(pp));                }            }        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[MPEG2]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[H263]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[H263]:[1]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[MPEG4]:[1]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[MPEG4]:[1]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[VP8]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP8]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP8]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1)]"	""	""	"[('MPEG4', 18), ('HEVC', 10), ('VP9', 10), ('VP8', 9), ('H263', 8), ('MPEG2', 3), ('UHD', 2)]"	"[('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 6), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 5), ('[android.media.cts.MediaMuxerTest testWebmOutput CtsMediaTestCases]', 3), ('[android.media.cts.VideoDecoderRotationTest EncodeVirtualDisplayWithCompositionTestImpl CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 3), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 2), ('[android.mediapc.cts.CodecTestBase isEmpty CtsMediaPerformanceClassTestCases]', 2), ('[android.media.cts.MediaMuxerTest testSimulateAudioBVideoFramesDropIssues CtsMediaTestCases]', 2), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 2), ('[com.android.cts.verifier.streamquality.StreamingVideoActivity setPassFailButtonClickListeners None]', 2), ('[android.media.cts.DecodeAccuracyTestBase isAbrEnabled CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest SKIP_testVideoAudio CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsBVideoOnlyFramesDropOnce CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsBVideoOnlyFramesDropTwice CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsAudioBVideoFramesDropOnce CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsAudioBVideoFramesDropTwice CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsAudioBVideoStartOffsetVideo CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsAudioBVideoStartOffsetVideoAudio CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsAudioBVideoStartOffsetAudioVideo CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsAudioBVideoStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[android.mediav2.cts.CodecListTest testCddRequiredCodecsAvailability CtsMediaV2TestCases]', 1), ('[android.media.cts.MediaCodecListTest testVideoPerformancePointsSanity CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-4-3"	"9.8.2/H-4-3"	"09080200.720403"	"""[9.8.2/H-4-3] MUST not hide the microphone indicator for system apps that have visible user interfaces or direct user interaction. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-1"	"7.5/H-1-1"	"07050000.720101"	"""[7.5/H-1-1] MUST have a primary rear facing camera with a resolution of at least 12 megapixels supporting video capture at 4k@30fps. The primary rear-facing camera is the rear-facing camera with the lowest camera ID.  | [7.5/H-1-1] MUST have a primary rear facing camera with a resolution of at least 12 megapixels supporting video capture at 4k@30fps. The primary rear-facing camera is the rear-facing camera with the lowest camera ID. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-9"	"9.8/H-1-9"	"09080000.720109"	"""[9.8/H-1-9] MUST NOT allow a user-installable application to provide the hotword detection service. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.5.1  . Hardware"	"7.1.4.1"	"A-0-1"	"7.1.4.1/A-0-1"	"07010401.650001"	"""[7.1.4.1/A-0-1] MUST declare OpenGL ES 3.1 or higher. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.8.1  . SensorPrivacyManager"	"9.8.1"	"C-1-1"	"9.8.1/C-1-1"	"09080100.670101"	"""C-1-1] MUST support generating connectivity bug reports via BUGREPORT_MODE_TELEPHONY with BugreportManager. | C-1-1] MUST NOT share data blobs belonging to apps beyond what they intended to allow (i.e. the scope of default access and the other access modes that can be specified using BlobStoreManager.session#allowPackageAccess(), BlobStoreManager.session#allowSameSignatureAccess(), or BlobStoreManager.session#allowPublicAccess() MUST NOT be modified). The AOSP reference implementation meets these requirements. | C-1-1] MUST enforce that the caller of MusicRecognitionManager holds the MANAGE_MUSIC_RECOGNITION permission | C-1-1] MUST accurately return &#39;true&#39; for the relevant supportsSensorToggle() API method."""	""	""	"BlobStoreManager.session allowSameSignatureAccess() supportsSensorToggle() allowPackageAccess() allowPublicAccess() BUGREPORT_MODE_TELEPHONY MANAGE_MUSIC_RECOGNITION"	""	""	""	""	"[('com.android.cts.blob.BlobStoreManagerTest', 29), ('com.android.cts.device.blob.DataCleanupTest', 8), ('com.android.cts.device.blob.DataPersistenceTest', 3), ('com.android.cts.blob.helper.BlobStoreTestService', 2), ('android.carrierapi.cts.BugreportManagerTest', 1), ('android.bugreport.cts.BugreportManagerTest', 1), ('android.musicrecognition.cts.MusicRecognitionManagerTest', 1), ('com.android.cts.device.blob.AtomTest', 1), ('com.android.cts.appsearch.app.GlobalSearchSessionPlatformCtsTest', 1)]"	"[('CommandReceiver', 2), ('allowPublicAccess', 2), ('getMainExecutor', 2), ('startBugreport_connectivityBugreport', 1), ('BugreportCallbackImpl', 1)]"	"[('CtsBlobStoreTestCases', 29), ('CtsCarrierApiTestCases', 1), ('CtsBugreportTestCases', 1), ('CtsMusicRecognitionTestCases', 1), ('CtsAppSearchTestCases', 1)]"	""	"com.android.cts.blob.BlobStoreManagerTest"	"getMainExecutor"	"CtsBlobStoreTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/BlobStore/src/com/android/cts/blob/BlobStoreManagerTest.java', 29), ('/home/gpoor/cts-12-source/cts/hostsidetests/blobstore/test-apps/BlobStoreHostTestHelper/src/com/android/cts/device/blob/DataCleanupTest.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/blobstore/test-apps/BlobStoreHostTestHelper/src/com/android/cts/device/blob/DataPersistenceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/BlobStore/helper-app/src/com/android/cts/blob/helper/BlobStoreTestService.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/BugreportManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/bugreport/src/android/bugreport/cts/BugreportManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/musicrecognition/src/android/musicrecognition/cts/MusicRecognitionManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/blobstore/test-apps/BlobStoreHostTestHelper/src/com/android/cts/device/blob/AtomTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/appsearch/src/com/android/cts/appsearch/app/GlobalSearchSessionPlatformCtsTest.java', 1)]"	"[('(4,BlobStoreManager.session,/com/android/cts/device/blob/DataCleanupTest.java)', 1), ('(2,allowSameSignatureAccess(),/com/android/cts/device/blob/DataCleanupTest.java)', 1), ('(2,allowPublicAccess(),/com/android/cts/device/blob/DataCleanupTest.java)', 1), ('(1,BUGREPORT_MODE_TELEPHONY,/android/carrierapi/cts/BugreportManagerTest.java)', 1), ('(1,BUGREPORT_MODE_TELEPHONY,/android/bugreport/cts/BugreportManagerTest.java)', 1), ('(1,MANAGE_MUSIC_RECOGNITION,/android/musicrecognition/cts/MusicRecognitionManagerTest.java)', 1), ('(1,BlobStoreManager.session,/com/android/cts/device/blob/AtomTest.java)', 1), ('(1,allowPackageAccess(),/com/android/cts/appsearch/app/GlobalSearchSessionPlatformCtsTest.java)', 1), ('(3,BlobStoreManager.session,/com/android/cts/device/blob/DataPersistenceTest.java)', 1), ('(2,BlobStoreManager.session,/com/android/cts/blob/helper/BlobStoreTestService.java)', 1), ('(1,allowPublicAccess(),/com/android/cts/blob/helper/BlobStoreTestService.java)', 1), ('(27,BlobStoreManager.session,/com/android/cts/blob/BlobStoreManagerTest.java)', 1), ('(6,allowSameSignatureAccess(),/com/android/cts/blob/BlobStoreManagerTest.java)', 1), ('(1,allowPackageAccess(),/com/android/cts/blob/BlobStoreManagerTest.java)', 1), ('(8,allowPublicAccess(),/com/android/cts/blob/BlobStoreManagerTest.java)', 1)]"	"[('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[essAllowed());            }        } finally {            blobData.delete();        }    }   ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[ctSuccess */);            }        } finally {            blobData.delete();        }    }   ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[rifyBlob(pfd);            }        } finally {            blobData.delete();        }    }   ])', 2), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[BlobStoreManager.session]:[1]:method_text:[ssion, 0, PARTIAL_FILE_LENGTH_BYTES);        }        addSessionIdToResults(sessionId);    }   ])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[BlobStoreManager.session]:[1]:method_text:[            assertThat(session.getSize()).isEqualTo(PARTIAL_FILE_LENGTH_BYTES);        }    }   ])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[BlobStoreManager.session]:[1]:method_text:[       .isEqualTo(0);        }        addBlobHandleToResults(blobData.getBlobHandle());    }   ])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[BlobStoreManager.session]:[1]:method_text:[egistry.getArguments();        return ""1"".equals(args.getString(KEY_ALLOW_SAME_SIGNATURE));    }}])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[allowSameSignatureAccess()]:[1]:method_text:[       .isEqualTo(0);        }        addBlobHandleToResults(blobData.getBlobHandle());    }   ])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[allowSameSignatureAccess()]:[1]:method_text:[egistry.getArguments();        return ""1"".equals(args.getString(KEY_ALLOW_SAME_SIGNATURE));    }}])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[allowPublicAccess()]:[1]:method_text:[       .isEqualTo(0);        }        addBlobHandleToResults(blobData.getBlobHandle());    }   ])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[allowPublicAccess()]:[1]:method_text:[egistry.getArguments();        return ""1"".equals(args.getString(KEY_ALLOW_SAME_SIGNATURE));    }}])', 1), ('([1:/android/carrierapi/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[ertThat(mScreenshotFile.length()).isEqualTo(0L);        assertFdIsClosed(mScreenshotFd);    }   ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[port does not take any screenshot        assertThat(screenshot).isNull();    }    @LargeTest   ])', 1), ('([1:/android/musicrecognition/cts/MusicRecognitionManagerTest.java]:[MANAGE_MUSIC_RECOGNITION]:[1]:method_text:[doptShellPermissionIdentity(                ""android.permission.MANAGE_MUSIC_RECOGNITION"");    }}])', 1), ('([1:/com/android/cts/device/blob/AtomTest.java]:[BlobStoreManager.session]:[1]:method_text:[   callback.get(BLOB_COMMIT_CALLBACK_TIMEOUT_SEC, TimeUnit.SECONDS)).isEqualTo(0);        }    }}])', 1), ('([1:/com/android/cts/appsearch/app/GlobalSearchSessionPlatformCtsTest.java]:[allowPackageAccess()]:[1]:method_text:[ assertPackageCanAccess(EMAIL_DOCUMENT, PKG_A);        assertPackageCannotAccess(PKG_B);    }   ])', 1), ('([1:/com/android/cts/device/blob/DataPersistenceTest.java]:[BlobStoreManager.session]:[1]:method_text:[UT_WAIT_FOR_IDLE_MS),                Exception.class, android.Manifest.permission.DUMP);    }   ])', 1), ('([1:/com/android/cts/device/blob/DataPersistenceTest.java]:[BlobStoreManager.session]:[1]:method_text:[BYTES,                    blobData.getFileSize() - PARTIAL_FILE_LENGTH_BYTES);        }    }   ])', 1), ('([1:/com/android/cts/device/blob/DataPersistenceTest.java]:[BlobStoreManager.session]:[1]:method_text:[_COMMIT_CALLBACK_MS, TimeUnit.MILLISECONDS))                    .isEqualTo(0);        }    }   ])', 1), ('([2:/com/android/cts/blob/helper/BlobStoreTestService.java]:[BlobStoreManager.session]:[2]:method_text:[ertionError e) {                throw new IllegalStateException(e);            }        }    }}])', 1), ('([1:/com/android/cts/blob/helper/BlobStoreTestService.java]:[allowPublicAccess()]:[1]:method_text:[ertionError e) {                throw new IllegalStateException(e);            }        }    }}])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[BlobHandle());            }        } finally {            blobData.delete();        }    }   ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[2]:method_text:[kg(sessionId, HELPER_PKG2));        } finally {            blobData.delete();        }    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[ger.openSession(sessionId));        } finally {            blobData.delete();        }    }   ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[2]:method_text:[ssion.close();            }        } finally {            blobData.delete();        }    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[.getBytes()));            }        } finally {            blobData.delete();        }    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[rite(0L, 0L));            }        } finally {            blobData.delete();        }    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[esults.add(result);            }        }        assertThat(invalidResults).isEmpty();    }   ])', 1), ('([3:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[3]:method_text:[(0L,                afterStatsForUid.getDataBytes() - beforeStatsForUid.getDataBytes());    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[id.getDataBytes());        } finally {            serviceConnection.unbind();        }    }   ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[2]:method_text:[ze());            commitSession(sessionId, session, blobData.getBlobHandle());        }    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[;        }, Pair.create(KEY_SESSION_EXPIRY_TIMEOUT_MS, String.valueOf(waitDurationMs)));    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[    }        }, Pair.create(KEY_MAX_BLOB_ACCESS_PERMITTED_PACKAGES, String.valueOf(1)));    }   ])', 1), ('([4:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[4]:method_text:[) {            mCommandReceiver = null;            mContext.unbindService(this);        }    }}])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[2]:method_text:[cess(blobData, HELPER_PKG3);        } finally {            blobData.delete();        }    }   ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[2]:method_text:[essAllowed());            }        } finally {            blobData.delete();        }    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[1]:method_text:[cess(blobData, HELPER_PKG3);        } finally {            blobData.delete();        }    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[1]:method_text:[1.unbind();            connection2.unbind();            connection3.unbind();        }    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPackageAccess()]:[1]:method_text:[cess(blobData, HELPER_PKG3);        } finally {            blobData.delete();        }    }   ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[2]:method_text:[kg(sessionId, HELPER_PKG2));        } finally {            blobData.delete();        }    }   ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[2]:method_text:[cess(blobData, HELPER_PKG3);        } finally {            blobData.delete();        }    }   ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[2]:method_text:[essAllowed());            }        } finally {            blobData.delete();        }    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[1]:method_text:[inally {            blobData.delete();            serviceConnection.unbind();        }    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[1]:method_text:[id.getDataBytes());        } finally {            serviceConnection.unbind();        }    }   ])', 1)]"	""	""	"[('BlobStoreManager.session', 28), ('allowPublicAccess()', 8), ('allowSameSignatureAccess()', 6), ('BUGREPORT_MODE_TELEPHONY', 2), ('allowPackageAccess()', 2), ('MANAGE_MUSIC_RECOGNITION', 1)]"	"[('[com.android.cts.device.blob.DataCleanupTest testCommitBlob None]', 3), ('[com.android.cts.device.blob.DataCleanupTest testRecommitBlob None]', 3), ('[com.android.cts.blob.helper.BlobStoreTestService isNotNull None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testOpenSession_fromAnotherPkg CtsBlobStoreTestCases]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testAllowPublicAccess_abandonedSession CtsBlobStoreTestCases]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testAllowSameSignatureAccess_abandonedSession CtsBlobStoreTestCases]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testStorageAttribution_acquireLease CtsBlobStoreTestCases]', 2), ('[com.android.cts.device.blob.DataCleanupTest testCreateSession None]', 1), ('[com.android.cts.device.blob.DataCleanupTest testOpenSession None]', 1), ('[android.carrierapi.cts.BugreportManagerTest hasEarlyReportFinished CtsCarrierApiTestCases]', 1), ('[android.bugreport.cts.BugreportManagerTest testTelephonyBugreport CtsBugreportTestCases]', 1), ('[android.musicrecognition.cts.MusicRecognitionManagerTest testRecordAudioOpsAreTracked CtsMusicRecognitionTestCases]', 1), ('[com.android.cts.device.blob.AtomTest testBlobStoreOps None]', 1), ('[com.android.cts.appsearch.app.GlobalSearchSessionPlatformCtsTest testAllowPackageAccess CtsAppSearchTestCases]', 1), ('[com.android.cts.device.blob.DataPersistenceTest testCreateSession None]', 1), ('[com.android.cts.device.blob.DataPersistenceTest testOpenSessionAndWrite None]', 1), ('[com.android.cts.device.blob.DataPersistenceTest testCommitSession None]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testOpenReadWriteSession CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testOpenSessionAndAbandon CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testCloseSession CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testAllowPackageAccess_abandonedSession CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testSessionCommit CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testSessionCommit_incompleteData CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testSessionCommit_incorrectData CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testSessionCommit_largeBlob CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testCommitSession_multipleReadWrites CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testOpenBlob CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testStorageAttributedToSelf CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testCommitBlobAfterIdleMaintenance CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testExpiredSessionsDeleted_withPartialData CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testAllowPackageAccess_countLimitExceeded CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testBlobHandleCreation CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testAllowSameSignatureAccess CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testMixedAccessType CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testMixedAccessType_fromMultiplePackages CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testAllowPackageAccess CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testAllowPublicAccess CtsBlobStoreTestCases]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testAcquireLease_multipleLeasees CtsBlobStoreTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-5"	"9.8/H-1-5"	"09080000.720105"	"""[9.8/H-1-5] MUST NOT supply buffered mic audio older than 30 seconds to the voice interaction service or similar entity. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.9.2"	"3.9.2"	"C-1-6"	"3.9.2/C-1-6"	"03090200.670106"	"""C-1-6] Where a managed profile exists, MUST show a visual affordance in the Intent &#39;Chooser&#39; to allow the user to forward the intent from the managed profile to the primary user or vice versa, if enabled by the Device Policy Controller."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-5-2"	"9.8.2/H-5-2"	"09080200.720502"	"""[9.8.2/H-5-2] MUST display Recent and Active apps using camera as returned from PermissionManager.getIndicatorAppOpUsageData(), along with any attribution messages associated with them. """	""	""	"getIndicatorAppOpUsageData() PermissionManager.getIndicatorAppOpUsageData"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.2  .  These are in the Android source tree at"	"7.1.4.2"	"C-1-6"	"7.1.4.2/C-1-6"	"07010402.670106"	"""C-1-6] MUST report all extension strings that they do support via the Vulkan native APIs , and conversely MUST NOT report extension strings that they do not correctly support."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.4"	"7.1.4.4"	"C-0-3"	"7.1.4.4/C-0-3"	"07010404.670003"	"""C-0-3] MUST support the TextureView API, and MUST exhibit consistent behavior with the upstream Android implementation. <h5 id=""7145_wide-gamut_displays"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.5.2  . Application Hibernation"	"3.5.2"	"C-1-2"	"3.5.2/C-1-2"	"03050200.670102"	"""C-1-2] MUST only apply the restriction on the app for a user when there is evidence that the user has not used the app for some period of time. This duration is STRONGLY RECOMMENDED to be one month or longer. Usage MUST be defined by either explicit user interaction via the"""	""	""	"RECOMMENDED"	""	""	""	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 3), ('android.widget.cts.ToastTest', 2), ('android.view.cts.ViewConfigurationTest', 1), ('android.os.cts.HwBinderTest', 1), ('android.media.cts.CamcorderProfileTest', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('android.widget.cts29.ToastTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1), ('main.java.com.android.bedstead.nene.permissions.Permissions', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.hardware.cts.helpers.SensorCtsHelper', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestGrandparent', 1), ('android.media.cts.AudioHelper', 1), ('com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('main.java.com.android.activitycontext.ActivityContext', 1), ('android.view.accessibility.cts.AccessibilityManagerTest', 1), ('com.android.cts.verifier.audio.AudioTap2ToneActivity', 1), ('android.media.cts.AudioTrackTest', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestParent', 1), ('com.android.compatibility.common.util.UiccUtil', 1), ('android.server.wm.ActivityManagerTestBase', 1), ('com.android.cts.deviceowner.proxy.BaseProxyTest', 1), ('android.video.cts.CodecEncoderPerformanceTest', 1), ('main.java.com.android.bedstead.nene.permissions.PermissionContext', 1)]"	"[('getMediaType', 14), ('size', 8), ('getChannelCount', 8), ('doubleValue', 7), ('Builder', 7), ('getAudioFormat', 7), ('getInstrumentation', 5), ('build', 5), ('getPackageName', 5), ('getCodec', 4), ('setUp', 4), ('getProfile', 3), ('getContext', 3), ('getName', 2), ('getBitrate', 2), ('getWidth', 2), ('getHeight', 2), ('getSampleRate', 2), ('getIntent', 2), ('printStackTrace', 2), ('getSimpleName', 2), ('get', 2), ('makeSomething', 2), ('join', 2), ('getStdJitterMs', 2), ('getStartTimeNs', 2), ('duplicate', 2), ('startRecording', 2), ('stop', 2), ('onResume', 2), ('close', 2), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getAudioProfiles', 1), ('getChannels', 1), ('hasProfile', 1), ('getReceiverComponentName', 1), ('myUserId', 1), ('getLayoutInflater', 1), ('SensorCtsHelper', 1), ('getSensor', 1), ('getRequestedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('StringBuilder', 1), ('toString', 1), ('grandparentBeforeClass', 1), ('shadowedGrandparentBeforeClass', 1), ('shadowedGrandparentWithoutBeforeClass', 1), ('getEncoding', 1), ('getAvg', 1), ('getAvgAbs', 1), ('getMaxAbs', 1), ('notify', 1), ('wait', 1), ('make', 1), ('Thread', 1), ('run', 1), ('prepare', 1), ('myLooper', 1), ('loop', 1), ('start', 1), ('quit', 1), ('getJitterCount', 1), ('getMeanJitterMs', 1), ('getMaxAbsJitterMs', 1), ('nanoTime', 1), ('abs', 1), ('getState', 1), ('play', 1), ('getPlaybackHeadPosition', 1), ('NullPointerException', 1), ('getTargetContext', 1), ('Intent', 1), ('await', 1), ('countDown', 1), ('parentBeforeClass', 1), ('ObjectTracker', 1), ('input', 1), ('getMimesOfAvailableHardwareVideoEncoders', 1)]"	"[('CtsCameraTestCases', 4), ('CtsWidgetTestCases', 3), ('CtsMediaTestCases', 2), ('CtsViewTestCases', 1), ('CtsAdminTestCases', 1), ('CtsSensorTestCases', 1), ('CtsAccessibilityTestCases', 1), ('CtsVideoTestCases', 1)]"	""	"main.java.com.android.bedstead.nene.permissions.PermissionContext"	"close"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/Permissions.java', 1), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelper.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/AudioHelper.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/activitycontext/src/main/java/com/android/activitycontext/ActivityContext.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioTap2ToneActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/UiccUtil.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/ActivityManagerTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/proxy/BaseProxyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecEncoderPerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/PermissionContext.java', 1)]"	"[('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 1), ('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 1), ('(1,RECOMMENDED,/android/media/cts/CamcorderProfileTest.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(21,RECOMMENDED,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 1), ('(4,RECOMMENDED,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(2,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/Permissions.java)', 1), ('(3,RECOMMENDED,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java)', 1), ('(2,RECOMMENDED,/android/media/cts/AudioHelper.java)', 1), ('(1,RECOMMENDED,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(1,RECOMMENDED,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/activitycontext/ActivityContext.java)', 1), ('(18,RECOMMENDED,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/audio/AudioTap2ToneActivity.java)', 1), ('(1,RECOMMENDED,/android/media/cts/AudioTrackTest.java)', 1), ('(7,RECOMMENDED,/android/widget/cts/ToastTest.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java)', 1), ('(1,RECOMMENDED,/com/android/compatibility/common/util/UiccUtil.java)', 1), ('(1,RECOMMENDED,/android/server/wm/ActivityManagerTestBase.java)', 1), ('(1,RECOMMENDED,/com/android/cts/deviceowner/proxy/BaseProxyTest.java)', 1), ('(1,RECOMMENDED,/android/video/cts/CodecEncoderPerformanceTest.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/PermissionContext.java)', 1)]"	"[('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([1:/android/media/cts/CamcorderProfileTest.java]:[RECOMMENDED]:[1]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([3:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[RECOMMENDED]:[3]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([21:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[RECOMMENDED]:[21]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([4:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[RECOMMENDED]:[4]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([2:/main/java/com/android/bedstead/nene/permissions/Permissions.java]:[RECOMMENDED]:[2]:method_text:[ExistingPermissions.toArray(new String[0]));        }        mExistingPermissions = null;    }}])', 1), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[RECOMMENDED]:[3]:method_text:[h (SecurityException e) {            assertDeviceOwnerMessage(e.getMessage());        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 1), ('([1:/android/hardware/cts/helpers/SensorCtsHelper.java]:[RECOMMENDED]:[1]:method_text:[;        SystemUtil.runShellCommand(InstrumentationRegistry.getInstrumentation(), command);    }}])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java]:[RECOMMENDED]:[1]:method_text:[andparentWithoutBeforeClass() {        sShadowedGrandparentWithoutBeforeClassHasRun = true;    }}])', 1), ('([2:/android/media/cts/AudioHelper.java]:[RECOMMENDED]:[2]:method_text:[  private final static String TAG = ""AudioRecordAuditNative"";        private int mPosition;    }}])', 1), ('([1:/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java]:[RECOMMENDED]:[1]:method_text:[erToContinue();        } finally {            magnetometer.unregisterListener();        }    }}])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[RECOMMENDED]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([1:/main/java/com/android/activitycontext/ActivityContext.java]:[RECOMMENDED]:[1]:method_text:[hrowValue = e;                }                sLatch.countDown();            }        }    }}])', 1), ('([18:/android/view/accessibility/cts/AccessibilityManagerTest.java]:[RECOMMENDED]:[18]:method_text:[;        } catch (IOException e) {            fail(""Fail to run shell command"");        }    }}])', 1), ('([3:/com/android/cts/verifier/audio/AudioTap2ToneActivity.java]:[RECOMMENDED]:[3]:method_text:[read(mAnalysisTask).start(); // run asynchronously with audio thread            }        }    }}])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[RECOMMENDED]:[1]:method_text:[wn when setBufferSizeInBytes""                  + "" is excluded from builder"");        }    }   ])', 1), ('([1:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[1]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);        }    }   ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java]:[RECOMMENDED]:[1]:method_text:[ssertThat(sGrandparentBeforeClassHasRun).isTrue();        sParentBeforeClassHasRun = true;    }}])', 1), ('([1:/com/android/compatibility/common/util/UiccUtil.java]:[RECOMMENDED]:[1]:method_text:[tUp} method if an entire class requires a particular     * UICC, or at the top of a specific {@code])', 1), ('([1:/android/server/wm/ActivityManagerTestBase.java]:[RECOMMENDED]:[1]:method_text:[ public static class ConfigChangeHandlingActivity extends CommandSession.BasicTestActivity {    }}])', 1), ('([1:/com/android/cts/deviceowner/proxy/BaseProxyTest.java]:[RECOMMENDED]:[1]:method_text:[ore.tryAcquire(10, TimeUnit.SECONDS)) {        return true;      }      return false;    }  }}])', 1), ('([1:/android/video/cts/CodecEncoderPerformanceTest.java]:[RECOMMENDED]:[1]:method_text:[  /**     * Validates performance of hardware accelerated video encoders     */    @LargeTest   ])', 1), ('([1:/main/java/com/android/bedstead/nene/permissions/PermissionContext.java]:[RECOMMENDED]:[1]:method_text:[ock */public interface PermissionContext extends AutoCloseable {    @Override    void close();}])', 1)]"	""	""	"[('RECOMMENDED', 29)]"	"[('[android.view.cts.ViewConfigurationTest testInstanceValues CtsViewTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[main.java.com.android.bedstead.nene.permissions.Permissions TestApis None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRecommendedGlobalProxy_failIfNotDeviceOwner CtsAdminTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations CtsCameraTestCases]', 1), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 1), ('[android.media.cts.AudioHelper currentTimeMillis None]', 1), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 1), ('[android.view.accessibility.cts.AccessibilityManagerTest testGetRecommendedTimeoutMillis CtsAccessibilityTestCases]', 1), ('[com.android.cts.verifier.audio.AudioTap2ToneActivity OnTouchListener None]', 1), ('[android.media.cts.AudioTrackTest testAc3BuilderNoBufferSize CtsMediaTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[test.java.com.android.bedstead.harrier.DeviceStateTestParent isFalse None]', 1), ('[android.server.wm.ActivityManagerTestBase PostAssertionRule None]', 1), ('[com.android.cts.deviceowner.proxy.BaseProxyTest registerAndWaitForStickyBroadcast None]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.2.4  . Wi"	"7.4.2.4"	"C-3-1"	"7.4.2.4/C-3-1"	"07040204.670301"	"""C-3-1] MUST enable Passpoint by default. <h5 id=""7425_wi-fi_location_wi-fi_round_trip_time_-_rtt"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.8.1  . SensorPrivacyManager"	"9.8.1"	"C-1-3"	"9.8.1/C-1-3"	"09080100.670103"	"""C-1-3] MUST NOT return the generated report to the requesting app without explicit user consent. | C-1-3] MUST NOT allow users to replace the MusicRecognitionManagerService or MusicRecognitionService with a user-installable application or service. | C-1-3] MUST only pass blank (or fake) camera and audio data to apps and not report an error code due to the user not turning on the camera nor microphone via the user affordance presented per"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.8.1  . Display Cutout"	"3.8.1"	"C-1-5"	"3.8.1/C-1-5"	"03080100.670105"	"""C-1-5] MUST NOT have cutout(s) if the device&#39;s aspect ratio is 1.0(1:1)."""	""	""	"cutout(s)"	""	""	""	""	"[('android.server.wm.ConfigChangeTests', 1)]"	""	"[('CtsWindowManagerDeviceTestCases', 1)]"	""	"android.server.wm.ConfigChangeTests"	""	"CtsWindowManagerDeviceTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ConfigChangeTests.java', 1)]"	"[('(1,cutout(s),/android/server/wm/ConfigChangeTests.java)', 1)]"	"[('([1:/android/server/wm/ConfigChangeTests.java]:[cutout(s)]:[1]:method_text:[    * reverse-landscape rotations should result in same screen space available for apps.     */   ])', 1)]"	""	""	"[('cutout(s)', 1)]"	"[('[android.server.wm.ConfigChangeTests testRotation180_NoRelaunchActivity CtsWindowManagerDeviceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-11"	"9.9.3/C-1-11"	"09090300.670111"	"""C-1-11] MUST use the mandatorily supported ciphers, key lengths and modes."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-2-1"	"9.5/C-2-1"	"09050000.670201"	"""C-2-1] MUST have separate and isolated shared application storage (a.k.a. /sdcard) directories for each user instance."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.8  . Proximity Sensor"	"7.3.8"	"C-1-4"	"7.3.8/C-1-4"	"07030800.670104"	"""C-1-4] MUST report a maximum range and resolution of 5. <h4 id=""739_high_fidelity_sensors"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-5-1"	"9.8.2/H-5-1"	"09080200.720501"	"""[9.8.2/H-5-1] MUST display the camera indicator when an app is accessing live camera data, but not when the camera is only being accessed by app(s) holding the roles called out in section 9.1 with CDD identifier [C-4-X]. """	""	""	"app(s) CDD"	""	""	""	""	"[('android.appsecurity.cts.ApkVerityInstallTest', 15), ('android.graphics.cts.VulkanFeaturesTest', 5), ('android.hardware.cts.LowRamDeviceTest', 4), ('android.graphics.cts.PaintTest', 3), ('android.media.cts.AudioManagerTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 2), ('android.appwidget.cts.RequestPinAppWidgetTest', 2), ('android.security.cts.MetadataEncryptionTest', 2), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 2), ('android.car.cts.CarBluetoothTest', 2), ('android.content.cts.AvailableIntentsTest', 2), ('android.media.cts.EncoderTest', 2), ('android.app.cts.SystemFeaturesTest', 2), ('android.location.cts.gnss.GnssPseudorangeVerificationTest', 2), ('android.mediav2.cts.CodecListTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.keystore.cts.CipherTest', 1), ('android.webkit.cts.WebSettingsTest', 1), ('com.android.cts.verifier.companion.CompanionDeviceServiceTestActivity', 1), ('android.hardware.camera2.cts.testcases.Camera2AndroidTestCase', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('com.android.cts.verifier.audio.ProAudioActivity', 1), ('com.android.cts.verifier.security.IdentityCredentialAuthentication', 1), ('android.host.accounts.BaseMultiUserTest', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('android.security.identity.cts.ProvisioningTest', 1), ('android.text.cts.FontCoverageTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1)]"	"[('setUp', 16), ('run', 15), ('close', 15), ('getPackageManager', 9), ('getDevice', 9), ('getInstrumentation', 8), ('start', 8), ('getContext', 7), ('AtomicInteger', 7), ('build', 7), ('getTargetContext', 6), ('tearDown', 6), ('getLooper', 5), ('size', 5), ('getSimpleName', 4), ('Object', 4), ('getWidth', 4), ('getHeight', 4), ('capacity', 4), ('clear', 4), ('getSurface', 4), ('printStackTrace', 4), ('getPackageName', 3), ('runExpectingFailure', 3), ('getSystemAvailableFeatures', 3), ('quitSafely', 3), ('getOutputStream', 3), ('getName', 3), ('getBytes', 3), ('Builder', 3), ('getResources', 2), ('getSystem', 2), ('getLaunchApiLevel', 2), ('BlockingBroadcastReceiver', 2), ('await', 2), ('getExtras', 2), ('BlockingStateCallback', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('getClass', 2), ('getTargetException', 2), ('release', 2), ('lock', 2), ('getExampleDrivingPrivilegesCbor', 2), ('end', 2), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('installSingle', 1), ('installAndUpdate', 1), ('assumeSecurityModelCompat', 1), ('getOverrideConfig', 1), ('setUpLauncher', 1), ('getDefaultLauncher', 1), ('tearDownLauncher', 1), ('Bundle', 1), ('getFirstWidgetComponent', 1), ('supports3DES', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('setup', 1), ('nativeGetVkJSON', 1), ('getBestDevice', 1), ('CameraErrorCollector', 1), ('onCreate', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('onDestroy', 1), ('quit', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('NoSuchFieldError', 1), ('getDeclaredMethods', 1), ('NoSuchMethodError', 1), ('getMessage', 1), ('getContentResolver', 1), ('ProAudioActivity', 1), ('super', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('getAction', 1), ('signal', 1), ('unlock', 1), ('waitForAdapterOn', 1), ('waitForAdapterOff', 1), ('enable', 1), ('getMaxNumberOfUsersSupported', 1), ('getCurrentUser', 1), ('getPrimaryUserId', 1), ('getComponentInfo', 1), ('getMediaDirString', 1), ('ByteArrayOutputStream', 1), ('CborBuilder', 1), ('addArray', 1), ('addMap', 1), ('toByteArray', 1), ('iterator', 1), ('next', 1), ('getPublicKey', 1), ('HashMap', 1), ('toLanguageTag', 1), ('getLayoutInflater', 1)]"	"[('CtsAppSecurityHostTestCases', 15), ('CtsGraphicsTestCases', 8), ('CtsShortcutManagerTestCases', 5), ('CtsMediaTestCases', 4), ('CtsHardwareTestCases', 4), ('CtsAppWidgetTestCases', 2), ('CtsSecurityHostTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsCarTestCases', 2), ('CtsContentTestCases', 2), ('CtsAppTestCases', 2), ('CtsLocationGnssTestCases', 2), ('CtsMediaV2TestCases', 2), ('CtsIncrementalInstallHostTestCases', 2), ('CtsSensorTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsCameraTestCases', 1), ('CtsAccountsHostTestCases', 1), ('CtsIdentityTestCases', 1), ('CtsTextTestCases', 1)]"	""	"android.incrementalinstall.cts.IncrementalFeatureTest"	"getLaunchApiLevel"	"CtsIncrementalInstallHostTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/MetadataEncryptionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarBluetoothTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncoderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssPseudorangeVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecListTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/companion/CompanionDeviceServiceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/ProAudioActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/IdentityCredentialAuthentication.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1)]"	"[('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(2,CDD,/android/media/cts/AudioManagerTest.java)', 1), ('(16,CDD,/android/appsecurity/cts/ApkVerityInstallTest.java)', 1), ('(1,CDD,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java)', 1), ('(3,CDD,/android/appwidget/cts/RequestPinAppWidgetTest.java)', 1), ('(3,CDD,/android/keystore/cts/CipherTest.java)', 1), ('(1,CDD,/android/webkit/cts/WebSettingsTest.java)', 1), ('(7,CDD,/android/hardware/cts/LowRamDeviceTest.java)', 1), ('(6,CDD,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/companion/CompanionDeviceServiceTestActivity.java)', 1), ('(1,CDD,/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java)', 1), ('(3,CDD,/android/security/cts/MetadataEncryptionTest.java)', 1), ('(1,CDD,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java)', 1), ('(3,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java)', 1), ('(2,CDD,/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java)', 1), ('(2,CDD,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(5,CDD,/com/android/cts/verifier/audio/ProAudioActivity.java)', 1), ('(2,CDD,/com/android/cts/verifier/security/IdentityCredentialAuthentication.java)', 1), ('(2,CDD,/android/car/cts/CarBluetoothTest.java)', 1), ('(3,CDD,/android/graphics/cts/PaintTest.java)', 1), ('(1,CDD,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(2,CDD,/android/content/cts/AvailableIntentsTest.java)', 1), ('(2,CDD,/android/media/cts/EncoderTest.java)', 1), ('(2,CDD,/android/app/cts/SystemFeaturesTest.java)', 1), ('(1,CDD,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(2,CDD,/android/text/cts/FontCoverageTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(3,CDD,/android/location/cts/gnss/GnssPseudorangeVerificationTest.java)', 1), ('(6,CDD,/android/mediav2/cts/CodecListTest.java)', 1), ('(3,CDD,/android/incrementalinstall/cts/IncrementalFeatureTest.java)', 1)]"	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[();        install.run(expectingSuccess);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 2), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CDD]:[2]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CDD]:[1]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CDD]:[1]:method_text:[ustSuggestedStreamVolume(ADJUST_RAISE, 66747, 0);    }    @CddTest(requirement=""5.4.1/C-1-4"")   ])', 1), ('([2:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[2]:method_text:[     getDevice().uninstallPackage(PACKAGE_NAME);    }    @CddTest(requirement = ""9.10/C-0-3"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[   verifyFsverityInstall(incremental, BASE_APK);    }    @CddTest(requirement = ""9.10/C-0-3"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[Install(incremental, BASE_APK, SPLIT_APK);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[stall(incremental, BASE_APK, BASE_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[PK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[cremental, BASE_APK, SPLIT_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[l(updateIncremental, SPLIT_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[ll(updateIncremental, BASE_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[erityInstall(updateIncremental, BASE_APK);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[X)                .runExpectingFailure();    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[l(incremental, BASE_APK_DM, SPLIT_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[stall(incremental, BASE_APK_DM);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[tal, BASE_APK_DM, SPLIT_APK_DM);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[CDD]:[1]:method_text:[Frequency),                    actualMinFrequency <=  hifiMinFrequency + 0.1);        }    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[dp_lowram=96,""                + ""icon_format=PNG,""                + ""icon_quality=100"";    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));    }    @CddTest(requirement=""3.8.1/C-1-2"")   ])', 1), ('([2:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[2]:method_text:[he extras        assertEquals(""dummy-2"", resultReceiver.result.getStringExtra(""dummy""));    }   ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[1]:method_text:[                AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());    }   ])', 1), ('([3:/android/keystore/cts/CipherTest.java]:[CDD]:[3]:method_text:[ close() throws Exception {            mLockCredential.close();        }    }    @Presubmit   ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[CDD]:[1]:method_text:[l:\\n%s"", patternString, useragent),                    patternMatcher.find());        }    }   ])', 1), ('([2:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[2]:method_text:[ces reported memory to ensure it meets the minimum values described     * in CDD 7.6.1.     */   ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[44);            } else {                assertMinMemoryMb(592);            }        }    }   ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[  mContext.getExternalFilesDir(null),                MIN_SHARED_DATA_PARTITION_SIZE_GB);    }   ])', 1), ('([3:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[3]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                size > minSizeBytes);    }}])', 1), ('([2:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[2]:method_text:[;        mBestDevice = getBestDevice();    }    @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[l, mVulkanHardwareCompute.version);        }    }    @CddTest(requirement = ""7.1.4.2/C-3-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[atures"", 0x3 /* importable + exportable */));    }    @CddTest(requirement = ""7.1.4.2/C-1-7"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[viceExtension(""VK_KHR_incremental_present"", 1);    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[ null && mVulkanHardwareLevel.version >= 0);    }    @CddTest(requirement = ""7.1.4.2/C-1-11"")   ])', 1), ('([2:/com/android/cts/verifier/companion/CompanionDeviceServiceTestActivity.java]:[CDD]:[2]:method_text:[null"");            }        } else super.onActivityResult(requestCode, resultCode, data);    }}])', 1), ('([1:/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java]:[CDD]:[1]:method_text:[ is closed"");        } catch (IllegalStateException e) {            // Expected.        }    }}])', 1), ('([2:/android/security/cts/MetadataEncryptionTest.java]:[CDD]:[2]:method_text:[ryption/metadata     *     * @throws Exception     */    @CddTest(requirement=""9.9.3/C-1-5"")   ])', 1), ('([1:/android/security/cts/MetadataEncryptionTest.java]:[CDD]:[1]:method_text:[    getDevice().hasFeature(""feature:android.hardware.security.model.compatible""));        }    }}])', 1), ('([1:/com/android/cts/verifier/camera/its/ItsService.java]:[CDD]:[1]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java]:[CDD]:[2]:method_text:[    }        }    }    /**     * Make sure the internal AIDL methods are protected.     */   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[CDD]:[3]:method_text:[ic final String SHORTCUT_ID = ""s12345"";    @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[IM_SLOT_0);            SimContacts.removeSimAccounts(mResolver, SIM_SLOT_1);        });    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[ut this should not be done for the local account.     */    @CddTest(requirement=""3.18/C-1-4"")   ])', 1), ('([2:/android/hardware/camera2/cts/CameraTestUtils.java]:[CDD]:[2]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([5:/com/android/cts/verifier/audio/ProAudioActivity.java]:[CDD]:[5]:method_text:[audio_proaudio_NA));            }            calculatePass();            break;        }    }}])', 1), ('([2:/com/android/cts/verifier/security/IdentityCredentialAuthentication.java]:[CDD]:[2]:method_text:[ RuntimeException(""Error encoding CBOR"", e);        }        return baos.toByteArray();    }}])', 1), ('([1:/android/car/cts/CarBluetoothTest.java]:[CDD]:[1]:method_text:[ented), or for the    // configured timeout. If all required profiles connect, the test passes.   ])', 1), ('([1:/android/car/cts/CarBluetoothTest.java]:[CDD]:[1]:method_text:[(mBluetoothAdapter);        waitForProfileConnections();        checkProfileConnections();    }}])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[        Typeface.MONOSPACE,            Typeface.SANS_SERIF,            Typeface.SERIF,    };   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());    }    @CddTest(requirement=""3.8.13/C-1-2"")   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[SCULAPIUS                p.hasGlyph(""\\uD83D\\uDC69\\u200D\\u2695\\uFE0F""));  // above + VS16    }   ])', 1), ('([1:/android/host/accounts/BaseMultiUserTest.java]:[CDD]:[1]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([2:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[CDD]:[2]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[CDD]:[1]:method_text:[en url is http://web_address,     * it will open a browser window to the URL specified.     */   ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[CDD]:[1]:method_text:[ntent.ACTION_POWER_USAGE_SUMMARY));        }    }    @CddTest(requirement = ""7.4.2.6/C-1-1"")   ])', 1), ('([1:/android/media/cts/EncoderTest.java]:[CDD]:[1]:method_text:[ltEncoders.put(mime, codec.getName());        codec.release();        return isDefault;    }   ])', 1), ('([1:/android/media/cts/EncoderTest.java]:[CDD]:[1]:method_text:[ithFormats(MediaFormat.MIMETYPE_AUDIO_AMR_WB, formats);    }    @CddTest(requirement=""5.1.3"")   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[properly prefixed with ""android."" that are not defined in     * {@link PackageManager}.     */   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[          if (camera != null) {                camera.release();            }        }    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[CDD]:[1]:method_text:[tStackTrace();            assertTrue(false);        }        return certificateChain;    }   ])', 1), ('([2:/android/text/cts/FontCoverageTest.java]:[CDD]:[2]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([2:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[CDD]:[2]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([2:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[2]:method_text:[d.   * This tests uses actual data retrieved from Gnss HAL.   */  @CddTest(requirement=""7.3.3"") ])', 1), ('([1:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[1]:method_text:[instant mode"")    @RequiresDevice  // emulated devices do not support real measurements so far.   ])', 1), ('([2:/android/mediav2/cts/CodecListTest.java]:[CDD]:[2]:method_text:[   * adheres to additional requirements (support for min profile/level, ...) set by cdd.     */   ])', 1), ('([4:/android/mediav2/cts/CodecListTest.java]:[CDD]:[4]:method_text:[                       CodecTestBase.hasEncoder(MediaFormat.MIMETYPE_VIDEO_VP8));        }    }}])', 1), ('([2:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[2]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);    }    @CddTest(requirement=""4/C-1-1"")   ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[1]:method_text:[ture android.software.incremental_delivery"")));    }    @CddTest(requirement=""4/C-1-1,C-3-1"")   ])', 1)]"	""	""	"[('CDD', 68)]"	"[('[android.appsecurity.cts.ApkVerityInstallTest isIncrementalDeliveryV2Feature CtsAppSecurityHostTestCases]', 2), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustSuggestedStreamVolumeWithIllegalArguments CtsMediaTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testPressureRange CtsSensorTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest testGetShortcutIcon CtsShortcutManagerTestCases]', 1), ('[android.appwidget.cts.RequestPinAppWidgetTest testPinWidget_launcher2 CtsAppWidgetTestCases]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked CtsKeystoreTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testUserAgentStringTest CtsWebkitTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest DisplayMetrics CtsHardwareTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinimumMemory CtsHardwareTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinSharedDataPartitionSize CtsHardwareTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinDataPartitionSize CtsHardwareTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanHardwareFeatures CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkan1_1Requirements CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanRequiredExtensions CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanVersionForVrHighPerformance CtsGraphicsTestCases]', 1), ('[com.android.cts.verifier.companion.CompanionDeviceServiceTestActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.testcases.Camera2AndroidTestCase isInstantApp CtsCameraTestCases]', 1), ('[android.security.cts.MetadataEncryptionTest testMetadataEncryptionIsEnabled CtsSecurityHostTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest testAccountRemovalWithMergedContact_deletesContacts CtsContactsProviderTestCases]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[com.android.cts.verifier.audio.ProAudioActivity isHDMIValid None]', 1), ('[com.android.cts.verifier.security.IdentityCredentialAuthentication setPassFailButtonClickListeners None]', 1), ('[android.car.cts.CarBluetoothTest disable CtsCarTestCases]', 1), ('[android.car.cts.CarBluetoothTest testRequiredBluetoothProfilesExist CtsCarTestCases]', 1), ('[android.graphics.cts.PaintTest testGetTextPathStringCountTooHigh CtsGraphicsTestCases]', 1), ('[android.graphics.cts.PaintTest testHasGlyph CtsGraphicsTestCases]', 1), ('[android.host.accounts.BaseMultiUserTest listUsers CtsAccountsHostTestCases]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[android.content.cts.AvailableIntentsTest testPowerUsageSummarySettings CtsContentTestCases]', 1), ('[android.media.cts.EncoderTest testAMRWBEncoders CtsMediaTestCases]', 1), ('[android.app.cts.SystemFeaturesTest testCameraFeatures CtsAppTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[android.location.cts.gnss.GnssPseudorangeVerificationTest testPseudorangeValue CtsLocationGnssTestCases]', 1), ('[android.mediav2.cts.CodecListTest testCddRequiredCodecsAvailability CtsMediaV2TestCases]', 1), ('[android.incrementalinstall.cts.IncrementalFeatureTest testFeatureAvailable CtsIncrementalInstallHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1  . Media Performance Class"	"7.1"	"C-1-2"	"7.1/C-1-2"	"07010000.670102"	"""C-1-2] MUST be a handheld device implementation. See Section 2.2.7 for device-specific requirements. <h2 id=""8_performance_and_power"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.3  . Hardware"	"7.1.1.3"	"H-1-1"	"7.1.1.3/H-1-1"	"07010103.720101"	"""[7.1.1.3/H-1-1] MUST have screen density of at least 400 dpi. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Device Integrity"	"9.1"	"C-1-9"	"9.1/C-1-9"	"09010000.670109"	"""C-1-9] MUST prompt the user, while using the device, and require physical confirmation before allowing a transition from bootloader locked mode to bootloader unlocked mode."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-3-3"	"7.3.1/C-3-3"	"07030100.670303"	"""C-3-3] MUST have a spoof and imposter acceptance rate not higher than 7% as measured by the Android Biometrics Test Protocols."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Device Integrity"	"9.1"	"C-1-8"	"9.1/C-1-8"	"09010000.670108"	"""C-1-8] MUST use tamper-evident storage: for storing whether the bootloader is unlocked. Tamper-evident storage means that the bootloader can detect if the storage has been tampered with from inside Android. | C-SR] Are STRONGLY RECOMMENDED to verify any executable artifacts loaded by a privileged app from outside its APK file (such as dynamically loaded code or compiled code) before executing them or STRONGLY RECOMMENDED not to execute them at all. SHOULD implement rollback protection for any component with persistent firmware (e.g. modem, camera) and SHOULD use tamper-evident storage for storing the metadata used for determining the minimum allowable version. If device implementations are already launched without supporting C-1-8 through C-1-11 on an earlier version of Android and can not add support for these requirements with a system software update, they MAY be exempted from the requirements. The upstream Android Open Source Project provides a preferred implementation of this feature in the external/avb/ repository, which can be integrated into the bootloader used for loading Android. Device implementations:"""	""	""	"APK RECOMMENDED"	""	""	""	""	"[('android.appsecurity.cts.ApkVerityInstallTest', 21), ('android.appsecurity.cts.AppDataIsolationTests', 13), ('android.gputools.cts.CtsRootlessGpuDebugHostTest', 12), ('test.java.com.android.bedstead.nene.packages.PackageReferenceTest', 5), ('android.keystore.cts.ImportWrappedKeyTest', 4), ('com.android.tests.atomicinstall.AtomicInstallTest', 3), ('com.android.cts.packagemanager.stats.host.InstalledIncrementalPackageStatsTests', 2), ('com.android.cts.deviceandprofileowner.ContentSuggestionsActivity', 1), ('android.jdwptunnel.cts.JdwpTunnelTest', 1), ('android.view.cts.ViewConfigurationTest', 1), ('android.media.cts.bitstreams.MediaBitstreamsTest', 1), ('com.android.tests.loadingprogress.device.LoadingProgressTest', 1), ('com.android.cts.monkey.AbstractMonkeyTest', 1), ('com.android.cts.devicepolicy.PasswordComplexityTest', 1)]"	"[('getDevice', 20), ('run', 13), ('tearDown', 6), ('setUp', 5), ('now', 4), ('runExpectingFailure', 4), ('stream', 3), ('trim', 3), ('moveToHomeScreen', 2), ('name', 2), ('findFirst', 2), ('getDefaultBitstreamsDir', 2), ('clearLogCat', 2), ('Intent', 1), ('countDown', 1), ('virtualMachineManager', 1), ('attachingConnectors', 1), ('transport', 1), ('defaultArguments', 1), ('eventRequestManager', 1), ('suspend', 1), ('allClasses', 1), ('createClassPrepareRequest', 1), ('enable', 1), ('resume', 1), ('eventQueue', 1), ('remove', 1), ('request', 1), ('referenceType', 1), ('uninstall_packageNotInstalledForUser_doesNotThrowException', 1), ('packages', 1), ('installSingle', 1), ('installAndUpdate', 1), ('getLaunchApiLevel', 1), ('assumeSecurityModelCompat', 1), ('toString', 1), ('getDefaultMediaDir', 1), ('FileFilter', 1), ('getTime', 1), ('LogScanResult', 1), ('getName', 1)]"	"[('CtsAppSecurityHostTestCases', 34), ('CtsGpuToolsHostTestCases', 12), ('CtsKeystoreTestCases', 4), ('CtsAtomicInstallTestCases', 3), ('CtsPackageManagerStatsHostTestCases', 2), ('CtsJdwpTunnelHostTestCases', 1), ('CtsViewTestCases', 1), ('CtsMediaBitstreamsTestCases', 1), ('CtsMonkeyTestCases', 1), ('CtsDevicePolicyManagerTestCases', 1)]"	""	"android.appsecurity.cts.AppDataIsolationTests"	"getDevice"	"CtsAppSecurityHostTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 21), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 13), ('/home/gpoor/cts-12-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 12), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/ImportWrappedKeyTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/atomicinstall/src/com/android/tests/atomicinstall/AtomicInstallTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/stats/src/com/android/cts/packagemanager/stats/host/InstalledIncrementalPackageStatsTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ContentSuggestionsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/src/android/media/cts/bitstreams/MediaBitstreamsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/installedloadingprogess/deviceside/src/com/android/tests/loadingprogress/device/LoadingProgressTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/monkey/src/com/android/cts/monkey/AbstractMonkeyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/PasswordComplexityTest.java', 1)]"	"[('(1,APK,/com/android/cts/deviceandprofileowner/ContentSuggestionsActivity.java)', 1), ('(3,APK,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(8,APK,/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java)', 1), ('(6,APK,/com/android/cts/packagemanager/stats/host/InstalledIncrementalPackageStatsTests.java)', 1), ('(133,APK,/android/appsecurity/cts/ApkVerityInstallTest.java)', 1), ('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 1), ('(3,APK,/com/android/tests/atomicinstall/AtomicInstallTest.java)', 1), ('(1,APK,/android/media/cts/bitstreams/MediaBitstreamsTest.java)', 1), ('(37,APK,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 1), ('(6,APK,/android/keystore/cts/ImportWrappedKeyTest.java)', 1), ('(11,APK,/com/android/tests/loadingprogress/device/LoadingProgressTest.java)', 1), ('(4,APK,/com/android/cts/monkey/AbstractMonkeyTest.java)', 1), ('(1,APK,/com/android/cts/devicepolicy/PasswordComplexityTest.java)', 1), ('(34,APK,/android/appsecurity/cts/AppDataIsolationTests.java)', 1)]"	"[('([2:/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java]:[APK]:[2]:method_text:[ally {            pkg.uninstall(sUser);            pkg.uninstall(sOtherUser);        }    }   ])', 2), ('([1:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[1]:method_text:[;        runDeviceTests(APPA_PKG, APPA_CLASS, APPA_METHOD_CHECK_REF_PROFILE_ACCESSIBLE);    }   ])', 2), ('([1:/com/android/cts/deviceandprofileowner/ContentSuggestionsActivity.java]:[APK]:[1]:method_text:[      + "" didn\'t finish in 2 seconds"");        }        finish();        return mEnabled;    }}])', 1), ('([3:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[APK]:[3]:method_text:[of the activity     * class and put and wait for a breakpoint on the onCreate function.     */   ])', 1), ('([2:/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java]:[APK]:[2]:method_text:[ Use annotations to share state instead of doing so manually        sOtherUser.remove();    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java]:[APK]:[1]:method_text:[   if (pkg != null) {            assertThat(pkg.installedOnUsers()).isEmpty();        }    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java]:[APK]:[1]:method_text:[OtherUser);        } finally {            mTestAppReference.uninstall(sUser);        }    }   ])', 1), ('([4:/com/android/cts/packagemanager/stats/host/InstalledIncrementalPackageStatsTests.java]:[APK]:[4]:method_text:[    // Install 2 incremental packages and check if their UIDs are included in the pulled metrics   ])', 1), ('([2:/com/android/cts/packagemanager/stats/host/InstalledIncrementalPackageStatsTests.java]:[APK]:[2]:method_text:[ALL_PACKAGE)));        assertTrue(uidsReported.contains(getAppUid(TEST_INSTALL_PACKAGE2)));    }}])', 1), ('([28:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[28]:method_text:[     getDevice().uninstallPackage(PACKAGE_NAME);    }    @CddTest(requirement = ""9.10/C-0-3"")   ])', 1), ('([3:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[3]:method_text:[   verifyFsverityInstall(incremental, BASE_APK);    }    @CddTest(requirement = ""9.10/C-0-3"")   ])', 1), ('([2:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[2]:method_text:[();        install.run(expectingSuccess);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([6:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[6]:method_text:[Install(incremental, BASE_APK, SPLIT_APK);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([6:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[6]:method_text:[stall(incremental, BASE_APK, BASE_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([12:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[12]:method_text:[PK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([7:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[7]:method_text:[cremental, BASE_APK, SPLIT_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([4:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[4]:method_text:[();        install.run(expectingSuccess);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([4:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[4]:method_text:[l(updateIncremental, SPLIT_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([6:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[6]:method_text:[ll(updateIncremental, BASE_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([6:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[6]:method_text:[erityInstall(updateIncremental, BASE_APK);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([7:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[7]:method_text:[X)                .runExpectingFailure();    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([8:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[8]:method_text:[l(incremental, BASE_APK_DM, SPLIT_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([6:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[6]:method_text:[stall(incremental, BASE_APK_DM);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([8:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[8]:method_text:[tal, BASE_APK_DM, SPLIT_APK_DM);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([4:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[4]:method_text:[eIncremental)                .addFile(SPLIT_APK)                .runExpectingFailure();    }   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[1]:method_text:[Multiple(/*incremental=*/true)                .addFile(BASE_APK)                .run();    }   ])', 1), ('([3:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[3]:method_text:[ + FSV_SIG_SUFFIX)                .run();        verifyFsverityInstall(true, BASE_APK);    }   ])', 1), ('([4:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[4]:method_text:[ + FSV_SIG_SUFFIX)                .run();        verifyFsverityInstall(true, BASE_APK);    }   ])', 1), ('([4:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[4]:method_text:[_APK + FSV_SIG_SUFFIX, BASE_APK + FSV_SIG_SUFFIX)                .runExpectingFailure();    }   ])', 1), ('([4:/android/appsecurity/cts/ApkVerityInstallTest.java]:[APK]:[4]:method_text:[eriveRemoteName(String originalName, int index) {            return originalName;        }    }}])', 1), ('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 1), ('([1:/com/android/tests/atomicinstall/AtomicInstallTest.java]:[APK]:[1]:method_text:[ionError(message);    }    /**     * Tests a completed session should be cleaned up.     */   ])', 1), (""([1:/com/android/tests/atomicinstall/AtomicInstallTest.java]:[APK]:[1]:method_text:[pp.B)).isEqualTo(1);    }    /**     * Tests a removed child shouldn't be installed.     */   ])"", 1), ('([1:/com/android/tests/atomicinstall/AtomicInstallTest.java]:[APK]:[1]:method_text:[estApp.A)).isEqualTo(2);        assertThat(getInstalledVersion(TestApp.B)).isEqualTo(1);    }   ])', 1), ('([1:/android/media/cts/bitstreams/MediaBitstreamsTest.java]:[APK]:[1]:method_text:[            CLog.e(e);                return false;            }        }    }    @Ignore   ])', 1), ('([25:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[25]:method_text:[es layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 1), (""([2:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[2]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[     * This test ensures we can still use properties if no layer specified via Settings     */   ])', 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[  /**     * This test ensures a debuggable app can load layers from an external package     */   ])', 1), (""([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[/**     * This test ensures we can still use properties if no GLES layers are specified     */   ])', 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[APK]:[1]:method_text:[/**     * This test ensures that external GLES layers can be loaded by a debuggable app     */   ])', 1), ('([1:/android/keystore/cts/ImportWrappedKeyTest.java]:[APK]:[1]:method_text:[RYPT_MODE, key);        assertEquals(new String(c.doFinal(encrypted)), ""hello, world"");    }   ])', 1), ('([1:/android/keystore/cts/ImportWrappedKeyTest.java]:[APK]:[1]:method_text:[key, paramSpec);        assertEquals(new String(c.doFinal(encrypted)), ""hello, world"");    }   ])', 1), ('([1:/android/keystore/cts/ImportWrappedKeyTest.java]:[APK]:[1]:method_text:[oxUnavailableException | SecureKeyImportUnavailableException e) {            }        }    }   ])', 1), ('([3:/android/keystore/cts/ImportWrappedKeyTest.java]:[APK]:[3]:method_text:[(isStrongBoxBacked)                        .build());        return kpg.generateKeyPair();    }}])', 1), ('([11:/com/android/tests/loadingprogress/device/LoadingProgressTest.java]:[APK]:[11]:method_text:[rtNotNull(apkContentBytes);            assertTrue(apkContentBytes.length > 0);        }    }   ])', 1), ('([4:/com/android/cts/monkey/AbstractMonkeyTest.java]:[APK]:[4]:method_text:[at() throws DeviceNotAvailableException {        mDevice.executeAdbCommand(""logcat"", ""-c"");    }}])', 1), ('([1:/com/android/cts/devicepolicy/PasswordComplexityTest.java]:[APK]:[1]:method_text:[ throws Exception {        getDevice().uninstallPackage(PKG);        super.tearDown();    }   ])', 1), ('([12:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[12]:method_text:[  getDevice().uninstallPackage(APPA_PKG);        getDevice().uninstallPackage(APPB_PKG);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[          }                getDevice().waitForDeviceAvailable();            }        }    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[      runDeviceTests(APPA_PKG, APPA_CLASS, APPA_METHOD_CHECK_EXTERNAL_DIRS_DO_NOT_EXIST);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[un();        runDeviceTests(APPB_PKG, APPB_CLASS, APPB_METHOD_CAN_NOT_ACCESS_APPA_DIR);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[K).run();        runDeviceTests(APPB_PKG, APPB_CLASS, APPB_METHOD_CAN_ACCESS_APPA_DIR);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[     runDeviceTests(APPB_PKG, APPB_CLASS, APPB_METHOD_CAN_NOT_ACCESS_APPA_EXTERNAL_DIRS);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[        runDeviceTests(APPB_PKG, APPB_CLASS, APPB_METHOD_CAN_ACCESS_APPA_EXTERNAL_DIRS);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[).run();        runDeviceTests(APPA_PKG, APPA_CLASS, APPA_METHOD_TEST_ISOLATED_PROCESS);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[      runDeviceTests(APPA_PKG, APPA_CLASS, APPA_METHOD_TEST_APP_ZYGOTE_ISOLATED_PROCESS);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[ETHOD_TEST_OTHER_USER_DIRS_NOT_PRESENT,                makeOtherUserIdArgs(mOtherUser));    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[    return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }}])', 1)]"	""	""	"[('APK', 66), ('RECOMMENDED', 1)]"	"[('[android.appsecurity.cts.ApkVerityInstallTest isIncrementalDeliveryV2Feature CtsAppSecurityHostTestCases]', 2), ('[com.android.cts.deviceandprofileowner.ContentSuggestionsActivity isContentSuggestionsEnabled None]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest disable CtsJdwpTunnelHostTestCases]', 1), ('[test.java.com.android.bedstead.nene.packages.PackageReferenceTest TestApis None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackageReferenceTest uninstallForAllUsers_isUninstalledForAllUsers None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackageReferenceTest uninstall_packageIsInstalledForDifferentUser_isUninstalledForUser None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackageReferenceTest uninstall_packageIsUninstalled None]', 1), ('[com.android.cts.packagemanager.stats.host.InstalledIncrementalPackageStatsTests testInstalledIncrementalMetricsReported CtsPackageManagerStatsHostTestCases]', 1), ('[android.appsecurity.cts.ApkVerityInstallTest testInstallBaseIncrementally CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApkVerityInstallTest testInstallBaseIncrementallyWithFsvSig CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApkVerityInstallTest testInstallBaseIncrementallyWithFsvSigAndIdSig CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApkVerityInstallTest testInstallBaseIncrementallyWithIdSigAndWrongFsvSig CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApkVerityInstallTest testInstallBaseIncrementallyWithWrongIdSigAndFsvSig CtsAppSecurityHostTestCases]', 1), ('[android.view.cts.ViewConfigurationTest testInstanceValues CtsViewTestCases]', 1), ('[com.android.tests.atomicinstall.AtomicInstallTest adoptShellPermissions CtsAtomicInstallTestCases]', 1), ('[com.android.tests.atomicinstall.AtomicInstallTest testInstallTwoApks CtsAtomicInstallTestCases]', 1), ('[com.android.tests.atomicinstall.AtomicInstallTest testInstallTwoApksDowngradeFail CtsAtomicInstallTestCases]', 1), ('[android.media.cts.bitstreams.MediaBitstreamsTest isDirectory CtsMediaBitstreamsTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest currentTimeMillis CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testReleaseLayerLoadGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreGLES CtsGpuToolsHostTestCases]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey CtsKeystoreTestCases]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey_3DES CtsKeystoreTestCases]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey_3DES_StrongBox CtsKeystoreTestCases]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey_AES_StrongBox CtsKeystoreTestCases]', 1), ('[com.android.tests.loadingprogress.device.LoadingProgressTest testReadAllBytes None]', 1), ('[com.android.cts.devicepolicy.PasswordComplexityTest assumeTestEnabled CtsDevicePolicyManagerTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppAbleToAccessItsDataAfterForceStop CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppAbleToAccessItsDataAfterReboot CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testDirectBootModeWorks CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppNotAbleToAccessItsDataAfterReinstall CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testNormalProcessCannotAccessOtherAppDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testSharedAppAbleToAccessOtherAppDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testNormalProcessCannotAccessOtherAppExternalDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testSharedAppAbleToAccessOtherAppExternalDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testIsolatedProcess CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppZygoteIsolatedProcess CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDirApi29 CtsAppSecurityHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.8  . Proximity Sensor"	"7.3.8"	"C-1-3"	"7.3.8/C-1-3"	"07030800.670103"	"""C-1-3] MUST use 0 centimeters as the near reading and 5 centimeters as the far reading."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-5-2"	"7.3.1/C-5-2"	"07030100.670502"	"""C-5-2] MUST additionally implement an implicit authentication flow (without confirmation step) corresponding to setConfirmationRequired(boolean), which applications can set to utilize for sign-in flows. If device implementations have multiple biometric sensors, they:"""	""	""	"setConfirmationRequired(boolean)"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-8"	"9.9.3/C-1-8"	"09090300.670108"	"""C-1-8] CE keys MUST be bound to a user&#39;s lock screen credentials."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-3-4"	"9.5/C-3-4"	"09050000.670304"	"""C-3-4] MUST NOT allow the additional user profile to be created if there is a Device Owner provisioned (see section 3.9.1) or allow a Device Owner to be provisioned without removing the additional user profile first. <h3 id=""96_premium_sms_warning"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Device Integrity"	"9.1"	"C-3-1"	"9.1/C-3-1"	"09010000.670301"	"""C-3-1] MUST show a disclaimer during fully managed device setup (device owner setup) stating that the IT admin will have the ability to allow apps to control settings on the phone including microphone, camera and location, with options for user to continue setup or exit setup UNLESS the admin has opted out of control of permissions on the device. If device implementations pre-install any packages that hold any of the System UI Intelligence, System Ambient Audio Intelligence, System Audio Intelligence, System Notification Intelligence, System Text Intelligence, or System Visual Intelligence roles, the packages: | C-3-1] MUST report true for the ConfirmationPrompt.isSupported() API."""	""	""	"ConfirmationPrompt.isSupported UNLESS isSupported()"	""	""	""	""	"[('com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest', 4), ('android.deviceconfig.cts.DeviceConfigApiTests', 2), ('art.Main', 2), ('android.autofillservice.cts.dropdown.LoginActivityTest', 2), ('android.appsecurity.cts.PkgInstallSignatureVerificationTest', 2), ('android.media.cts.AudioManagerTest', 1), ('com.android.cts.isolatedsplitapp.feature_a.FeatureAReceiver', 1), ('android.server.wm.AppConfigurationTests', 1), ('android.opengl2.cts.reference.GLReferenceBenchmark', 1), ('android.jvmti.cts.JvmtiAttachingHostTest', 1), ('android.location.cts.gnss.asn1.base.Asn1BMPString', 1), ('android.server.wm.app.FontScaleActivity', 1), ('android.app.cts.ApplyOverrideConfigurationActivity', 1), ('android.keystore.cts.RSASignatureTest', 1), ('android.opengl2.cts.primitive.GLPrimitiveBenchmark', 1), ('android.app.stubs.LocalActivityManagerTestHelper', 1), ('android.renderscript.cts.Target', 1), ('android.app.usage.cts.UsageStatsTest', 1), ('android.content.cts.ContentProviderTest', 1), ('android.app.cts.ActivityCallbacksTest', 1), ('android.appsecurity.cts.BaseInstallMultiple', 1), ('android.widget.cts.NumberPickerTest', 1), ('android.net.cts.legacy.api22.ConnectivityManagerLegacyTest', 1), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('com.android.cts.isolatedsplitapp.feature_b.FeatureBReceiver', 1), ('android.view.inputmethod.cts.InputMethodInfoTest', 1), ('com.android.cts.helpers.ICtsDeviceInteractionHelper', 1), ('android.jvmti.cts.JvmtiHostTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1), ('android.content.cts.ContentQueryMapTest', 1), ('android.media.cts.MediaCodecListTest', 1), ('android.hardware.camera2.cts.CameraDeviceTest', 1), ('com.android.compatibility.common.util.CTSResult', 1), ('android.widget.cts.PositionTesterContextMenuListener', 1), ('android.classloaders.cts.BaseInstallMultiple', 1), ('android.opengl.cts.CompressedTextureSurfaceView', 1), ('android.app.cts.ApplyOverrideConfigurationTest', 1), ('android.classloaders.cts.ClassloaderSplitsTest', 1), ('android.app.usage.cts.test2.FinishingTaskRootActivity', 1), ('android.security.cts.X509CertChainBuildingTest', 1), ('android.keystore.cts.SignatureTest', 1), ('android.leanbackjank.app.ui.MainActivity', 1), ('com.android.cts.verifier.camera.intents.CameraIntentsActivity', 1), ('android.autofillservice.cts.FatActivityTest', 1), ('android.appsecurity.cts.CorruptApkTests', 1), ('android.accessibility.cts.common.InstrumentedAccessibilityServiceTestRule', 1), ('android.provider.cts.media.MediaStore_Video_MediaTest', 1), ('art.CtsMain', 1), ('com.android.cts.writeexternalstorageapp.WriteExternalStorageTest', 1), ('android.app.usage.cts.test1.SomeActivityWithLocus', 1), ('com.android.cts.isolatedsplitapp.BaseReceiver', 1), ('android.content.res.cts.Resources_ThemeTest', 1), ('android.content.cts.AsyncQueryHandlerTest', 1), ('android.autofillservice.cts.commontests.AutoFillServiceTestCase', 1), ('com.android.cts.isolatedsplitapp.feature_c.FeatureCReceiver', 1), ('com.android.cts.isolatedsplitapp.feature_c.FeatureCActivity', 1), ('android.jvmti.cts.JvmtiRedefineClassesTest', 1), ('android.server.wm.app.FontScaleNoRelaunchActivity', 1), ('android.jvmti.cts.JvmtiTaggingTest', 1), ('android.content.cts.ContentProviderOperationTest', 1), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 1), ('android.cts.statsdatom.lib.DeviceUtils', 1), ('android.app.usage.cts.CacheQuotaHintTest', 1), ('android.server.wm.WindowTest', 1)]"	"[('setUp', 22), ('tearDown', 12), ('toString', 12), ('getInstrumentation', 11), ('getResources', 10), ('getDevice', 10), ('getContext', 9), ('getTargetContext', 6), ('ContentValues', 6), ('getPackageName', 4), ('length', 4), ('getStageIndex', 4), ('getPackageManager', 3), ('UnsupportedOperationException', 3), ('dumpActivityDpi', 3), ('dumpFontSize', 3), ('getWindow', 3), ('onConfigurationChanged', 3), ('retrieveInfo', 3), ('uninstallApks', 3), ('Bundle', 3), ('getSystem', 2), ('getCurrentUser', 2), ('encodeCharactersPer', 2), ('setBeginByteAligned', 2), ('spoolToByteBoundary', 2), ('StringBuilder', 2), ('readByte', 2), ('Object', 2), ('getApplicationContext', 2), ('InstallMultiple', 2), ('useNaturalAbi', 2), ('getSimpleName', 2), ('getAddress', 2), ('getLayoutInflater', 2), ('getContentResolver', 2), ('close', 2), ('never', 2), ('onResume', 2), ('onStop', 2), ('getAction', 2), ('updateSuccessState', 2), ('onStart', 2), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('GLReferenceBenchmark', 1), ('getPossibleFirstTags', 1), ('getDefaultTag', 1), ('getBerValueLength', 1), ('getValue', 1), ('encodePerUnaligned', 1), ('encodePerAligned', 1), ('BitStream', 1), ('getMainExecutor', 1), ('assumeTrue', 1), ('getUserId', 1), ('next', 1), ('getTheme', 1), ('getTag', 1), ('recycle', 1), ('Configuration', 1), ('watchForSingleOnConfigurationChangedCallback', 1), ('size', 1), ('GLPrimitiveBenchmark', 1), ('ExpandRangeByUlpFactor', 1), ('WindowManagerStateHelper', 1), ('DeviceState', 1), ('useIncremental', 1), ('setup', 1), ('getUiAutomation', 1), ('getActivity', 1), ('getAllNetworks', 1), ('getType', 1), ('getLinkAddresses', 1), ('DatagramSocket', 1), ('getLocalAddress', 1), ('getHostAddress', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('getCacheDir', 1), ('BlockingStateCallback', 1), ('anyInt', 1), ('getErrorMessage', 1), ('Intent', 1), ('onSearchRequested', 1), ('hashCode', 1), ('build', 1), ('getIntent', 1), ('trim', 1), ('toLowerCase', 1), ('startup', 1), ('countDown', 1), ('waitFor', 1), ('clearTransformations', 1), ('getDecoder', 1), ('Start', 1), ('IllegalArgumentException', 1), ('getIDevice', 1)]"	"[('CtsContentTestCases', 5), ('CtsAppSecurityHostTestCases', 4), ('CtsAutoFillServiceTestCases', 4), ('CtsUsageStatsTestCases', 3), ('CtsMediaTestCases', 2), ('CtsWindowManagerDeviceTestCases', 2), ('CtsOpenGlPerf2TestCases', 2), ('CtsDeviceConfigTestCases', 2), ('CtsAndroidAppTestCases', 2), ('CtsKeystoreTestCases', 2), ('CtsWidgetTestCases', 2), ('CtsJvmtiAttachingHostTestCases', 1), ('CtsLocationGnssTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsAppTestCases', 1), ('CtsNetTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsCameraTestCases', 1), ('CtsUsesLibraryHostTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsClassloaderSplitsHostTestCases', 1), ('CtsSecurityTestCases', 1), ('CtsProviderTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsStatsdAtomHostTestCases', 1)]"	""	"android.server.wm.WindowTest"	"getIDevice"	"CtsWindowManagerDeviceTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/LoginActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_a/src/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/openglperf2/src/android/opengl2/cts/reference/GLReferenceBenchmark.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/attaching/host/src/android/jvmti/cts/JvmtiAttachingHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/base/Asn1BMPString.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/tagging/app/src/art/Main.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/FontScaleActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app/src/android/app/cts/ApplyOverrideConfigurationActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/RSASignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/openglperf2/src/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/app/src/android/app/stubs/LocalActivityManagerTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/Target.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentProviderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityCallbacksTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/BaseInstallMultiple.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/NumberPickerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/netlegacy22.api/src/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_b/src/com/android/cts/isolatedsplitapp/feature_b/FeatureBReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/helpers/core/src/com/android/cts/helpers/ICtsDeviceInteractionHelper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/allocation-tracking/app/src/art/Main.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/base/host/src/android/jvmti/cts/JvmtiHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentQueryMapTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/CTSResult.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/PositionTesterContextMenuListener.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/classloaders/useslibrary/src/android/classloaders/cts/BaseInstallMultiple.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/CompressedTextureSurfaceView.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app/src/android/app/cts/ApplyOverrideConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/classloaders/splits/src/android/classloaders/cts/ClassloaderSplitsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/TestApp2/src/android/app/usage/cts/test2/FinishingTaskRootActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/X509CertChainBuildingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/SignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/leanbackjank/app/src/android/leanbackjank/app/ui/MainActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/FatActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/CorruptApkTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/common/src/android/accessibility/cts/common/InstrumentedAccessibilityServiceTestRule.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Video_MediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/base/app/src/art/CtsMain.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/WriteExternalStorageApp/src/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/TestApp1/src/android/app/usage/cts/test1/SomeActivityWithLocus.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/src/com/android/cts/isolatedsplitapp/BaseReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/Resources_ThemeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AsyncQueryHandlerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/AutoFillServiceTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_c/src/com/android/cts/isolatedsplitapp/feature_c/FeatureCReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_c/src/com/android/cts/isolatedsplitapp/feature_c/FeatureCActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/redefining/app/src/android/jvmti/cts/JvmtiRedefineClassesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/FontScaleNoRelaunchActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/tagging/app/src/android/jvmti/cts/JvmtiTaggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentProviderOperationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/lib/DeviceUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/CacheQuotaHintTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowTest.java', 1)]"	"[('(1,UNLESS,/art/Main.java)', 2), ('(1,UNLESS,/android/media/cts/AudioManagerTest.java)', 1), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java)', 1), ('(1,UNLESS,/android/server/wm/AppConfigurationTests.java)', 1), ('(1,UNLESS,/android/opengl2/cts/reference/GLReferenceBenchmark.java)', 1), ('(1,UNLESS,/android/jvmti/cts/JvmtiAttachingHostTest.java)', 1), ('(2,UNLESS,/android/location/cts/gnss/asn1/base/Asn1BMPString.java)', 1), ('(4,isSupported(),/android/deviceconfig/cts/DeviceConfigApiTests.java)', 1), ('(1,UNLESS,/android/server/wm/app/FontScaleActivity.java)', 1), ('(1,UNLESS,/android/app/cts/ApplyOverrideConfigurationActivity.java)', 1), ('(1,UNLESS,/android/keystore/cts/RSASignatureTest.java)', 1), ('(1,UNLESS,/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java)', 1), ('(1,UNLESS,/android/app/stubs/LocalActivityManagerTestHelper.java)', 1), ('(1,UNLESS,/android/renderscript/cts/Target.java)', 1), ('(1,UNLESS,/android/app/usage/cts/UsageStatsTest.java)', 1), ('(1,UNLESS,/android/content/cts/ContentProviderTest.java)', 1), ('(1,UNLESS,/android/app/cts/ActivityCallbacksTest.java)', 1), ('(1,UNLESS,/android/appsecurity/cts/BaseInstallMultiple.java)', 1), ('(1,UNLESS,/android/widget/cts/NumberPickerTest.java)', 1), ('(1,UNLESS,/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java)', 1), ('(1,UNLESS,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(4,isSupported(),/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java)', 1), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/feature_b/FeatureBReceiver.java)', 1), ('(1,UNLESS,/android/view/inputmethod/cts/InputMethodInfoTest.java)', 1), ('(1,UNLESS,/com/android/cts/helpers/ICtsDeviceInteractionHelper.java)', 1), ('(1,UNLESS,/android/jvmti/cts/JvmtiHostTest.java)', 1), ('(1,UNLESS,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(1,UNLESS,/android/content/cts/ContentQueryMapTest.java)', 1), ('(1,UNLESS,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,UNLESS,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(1,UNLESS,/com/android/compatibility/common/util/CTSResult.java)', 1), ('(1,UNLESS,/android/widget/cts/PositionTesterContextMenuListener.java)', 1), ('(1,UNLESS,/android/classloaders/cts/BaseInstallMultiple.java)', 1), ('(1,isSupported(),/android/opengl/cts/CompressedTextureSurfaceView.java)', 1), ('(1,UNLESS,/android/app/cts/ApplyOverrideConfigurationTest.java)', 1), ('(1,UNLESS,/android/classloaders/cts/ClassloaderSplitsTest.java)', 1), ('(2,UNLESS,/android/autofillservice/cts/dropdown/LoginActivityTest.java)', 1), ('(1,UNLESS,/android/app/usage/cts/test2/FinishingTaskRootActivity.java)', 1), ('(1,UNLESS,/android/security/cts/X509CertChainBuildingTest.java)', 1), ('(1,UNLESS,/android/keystore/cts/SignatureTest.java)', 1), ('(1,UNLESS,/android/leanbackjank/app/ui/MainActivity.java)', 1), ('(1,UNLESS,/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java)', 1), ('(1,UNLESS,/android/autofillservice/cts/FatActivityTest.java)', 1), ('(1,UNLESS,/android/appsecurity/cts/CorruptApkTests.java)', 1), ('(2,UNLESS,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(1,UNLESS,/android/accessibility/cts/common/InstrumentedAccessibilityServiceTestRule.java)', 1), ('(1,UNLESS,/android/provider/cts/media/MediaStore_Video_MediaTest.java)', 1), ('(1,UNLESS,/art/CtsMain.java)', 1), ('(1,UNLESS,/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java)', 1), ('(1,UNLESS,/android/app/usage/cts/test1/SomeActivityWithLocus.java)', 1), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/BaseReceiver.java)', 1), ('(1,UNLESS,/android/content/res/cts/Resources_ThemeTest.java)', 1), ('(1,UNLESS,/android/content/cts/AsyncQueryHandlerTest.java)', 1), ('(1,UNLESS,/android/autofillservice/cts/commontests/AutoFillServiceTestCase.java)', 1), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/feature_c/FeatureCReceiver.java)', 1), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/feature_c/FeatureCActivity.java)', 1), ('(1,UNLESS,/android/jvmti/cts/JvmtiRedefineClassesTest.java)', 1), ('(1,UNLESS,/android/server/wm/app/FontScaleNoRelaunchActivity.java)', 1), ('(1,UNLESS,/android/jvmti/cts/JvmtiTaggingTest.java)', 1), ('(1,UNLESS,/android/content/cts/ContentProviderOperationTest.java)', 1), ('(1,UNLESS,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(1,UNLESS,/android/cts/statsdatom/lib/DeviceUtils.java)', 1), ('(1,UNLESS,/android/app/usage/cts/CacheQuotaHintTest.java)', 1), ('(1,UNLESS,/android/server/wm/WindowTest.java)', 1)]"	"[('([1:/art/Main.java]:[UNLESS]:[1]:method_text:[ic static native void setTag(Object o, long tag);    public static native long getTag(Object o);}])', 2), ('([1:/android/media/cts/AudioManagerTest.java]:[UNLESS]:[1]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java]:[UNLESS]:[1]:method_text:[(                ""feature_a"", context.getResources().getString(R.string.feature_a_string));    }}])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[UNLESS]:[1]:method_text:[lues reported in fullscreen should be larger than those reported in     * docked state.     */   ])', 1), ('([1:/android/opengl2/cts/reference/GLReferenceBenchmark.java]:[UNLESS]:[1]:method_text:[   super(GLReferenceActivity.class);    }    /**     * Runs the reference benchmark.     */   ])', 1), ('([1:/android/jvmti/cts/JvmtiAttachingHostTest.java]:[UNLESS]:[1]:method_text:[cted void setUp() throws Exception {        mCurrentUser = getDevice().getCurrentUser();    }   ])', 1), ('([2:/android/location/cts/gnss/asn1/base/Asn1BMPString.java]:[UNLESS]:[2]:method_text:[0xFF;      builder.append(Character.toChars(codepoint));    }    return builder.toString();  }}])', 1), ('([3:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[isSupported()]:[3]:method_text:[);    }    /**     * Checks that getting property which does not exist returns null.     */   ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[isSupported()]:[1]:method_text:[ONG),                        properties.getLong(key, DEFAULT_LONG));            }        }    }])', 1), ('([1:/android/server/wm/app/FontScaleActivity.java]:[UNLESS]:[1]:method_text:[as(this,                bundle -> bundle.putInt(EXTRA_FONT_ACTIVITY_DPI, fontActivityDpi));    }}])', 1), ('([1:/android/app/cts/ApplyOverrideConfigurationActivity.java]:[UNLESS]:[1]:method_text:[tionChangedFuture = new CompletableFuture<>();        return mOnConfigurationChangedFuture;    }}])', 1), ('([1:/android/keystore/cts/RSASignatureTest.java]:[UNLESS]:[1]:method_text:[ntext() {        return InstrumentationRegistry.getInstrumentation().getTargetContext();    }   ])', 1), ('([1:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[UNLESS]:[1]:method_text:[ivity.class);    }    /**     * Runs the full OpenGL ES 2.0 pipeline test offscreen.     */   ])', 1), ('([1:/android/app/stubs/LocalActivityManagerTestHelper.java]:[UNLESS]:[1]:method_text:[    private void pass() {        sResult.setResult(CTSResult.RESULT_OK);        finish();    }}])', 1), ('([1:/android/renderscript/cts/Target.java]:[UNLESS]:[1]:method_text:[lue));                }            }            s += ""]"";            return s;        }    }}])', 1), ('([1:/android/app/usage/cts/UsageStatsTest.java]:[UNLESS]:[1]:method_text:[ity(clazz);        }    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([1:/android/content/cts/ContentProviderTest.java]:[UNLESS]:[1]:method_text:[      sContext.deleteDatabase(TEST_DB_NAME);        sContext.deleteFile(TEST_FILE_NAME);    }   ])', 1), ('([1:/android/app/cts/ActivityCallbacksTest.java]:[UNLESS]:[1]:method_text:[          application.unregisterActivityLifecycleCallbacks(mActivityCallbacks);        }    }   ])', 1), ('([1:/android/appsecurity/cts/BaseInstallMultiple.java]:[UNLESS]:[1]:method_text:[Path = ""/data/local/tmp/"" + remoteName;            device.deleteFile(remotePath);        }    }}])', 1), ('([1:/android/widget/cts/NumberPickerTest.java]:[UNLESS]:[1]:method_text:[mberPicker = (NumberPicker) mActivity.findViewById(R.id.number_picker);    }    @UiThreadTest   ])', 1), ('([1:/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java]:[UNLESS]:[1]:method_text:[SIM card."");        }    }    /** Test that hipri can be brought up when Wifi is enabled. */   ])', 1), ('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UNLESS]:[1]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[isSupported()]:[1]:method_text:[entDevicePolicyManager.setRequiredPasswordComplexity(PASSWORD_COMPLEXITY_NONE);        }    }   ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[isSupported()]:[1]:method_text:[  mDevicePolicyManager.setRequiredPasswordComplexity(PASSWORD_COMPLEXITY_NONE);        }    }   ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[isSupported()]:[1]:method_text:[  assertThat(mParentDevicePolicyManager.getCurrentFailedPasswordAttempts()).isEqualTo(0);    }   ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[isSupported()]:[1]:method_text:[rentDevicePolicyManager.lockNow();        // Will fail if a SecurityException is thrown.    }   ])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_b/FeatureBReceiver.java]:[UNLESS]:[1]:method_text:[(                ""feature_b"", context.getResources().getString(R.string.feature_b_string));    }}])', 1), ('([1:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[UNLESS]:[1]:method_text:[() : """";            }        } catch (IOException e) {            return """";        }    }   ])', 1), ('([1:/com/android/cts/helpers/ICtsDeviceInteractionHelper.java]:[UNLESS]:[1]:method_text:[     * tearDown} method or another {@code @After} method.     */    default void tearDown() {};}])', 1), ('([1:/android/jvmti/cts/JvmtiHostTest.java]:[UNLESS]:[1]:method_text:[ILURE) {            throw new RuntimeException(""am get-current-user failed!"");        }    }   ])', 1), ('([1:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[UNLESS]:[1]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([1:/android/content/cts/ContentQueryMapTest.java]:[UNLESS]:[1]:method_text:[lete(DummyProvider.CONTENT_URI, null, null);        super.tearDown();    }    @UiThreadTest   ])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[UNLESS]:[1]:method_text:[                  pp2 != pp && pp2.covers(pp));                }            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[UNLESS]:[1]:method_text:[ure the stable frame rate is guaranteed for the given     * settings.</li>     * </ul>     */   ])', 1), ('([1:/com/android/compatibility/common/util/CTSResult.java]:[UNLESS]:[1]:method_text:[LT_OK = 1;    public static final int RESULT_FAIL = 2;    public void setResult(int resultCode);}])', 1), ('([1:/android/widget/cts/PositionTesterContextMenuListener.java]:[UNLESS]:[1]:method_text:[      return true;    }    public String getErrorMessage() {        return errorMessage;    }}])', 1), ('([1:/android/classloaders/cts/BaseInstallMultiple.java]:[UNLESS]:[1]:method_text:[       } else {            TestCase.assertTrue(result, result.contains(failure));        }    }}])', 1), ('([1:/android/opengl/cts/CompressedTextureSurfaceView.java]:[isSupported()]:[1]:method_text:[}    }  // End of class CompressedTextureRender.}  // End of class CompressedTextureSurfaceView.])', 1), ('([1:/android/app/cts/ApplyOverrideConfigurationTest.java]:[UNLESS]:[1]:method_text:[n().setRotation(UiAutomation.ROTATION_UNFREEZE);        super.tearDown();    }    @SmallTest   ])', 1), ('([1:/android/classloaders/cts/ClassloaderSplitsTest.java]:[UNLESS]:[1]:method_text:[    public void tearDown() throws Exception {        getDevice().uninstallPackage(PKG);    }   ])', 1), ('([1:/android/autofillservice/cts/dropdown/LoginActivityTest.java]:[UNLESS]:[1]:method_text:[hould not trigger a new session, unless a manual autofill     * workflow was requested.     */   ])', 1), ('([1:/android/autofillservice/cts/dropdown/LoginActivityTest.java]:[UNLESS]:[1]:method_text:[ } catch (Exception e) {                mSafeCleanerRule.add(e);            }        }    }   ])', 1), ('([1:/android/app/usage/cts/test2/FinishingTaskRootActivity.java]:[UNLESS]:[1]:method_text:[    }    @Override    protected void onStop() {        super.onStop();        finish();    }}])', 1), ('([1:/android/security/cts/X509CertChainBuildingTest.java]:[UNLESS]:[1]:method_text:[ate(""intermediate_a.pem"");        intermediateB = loadCertificate(""intermediate_b.pem"");    }   ])', 1), ('([1:/android/keystore/cts/SignatureTest.java]:[UNLESS]:[1]:method_text:[gAlgorithm + "" with key "" + key.getAlias(), e);                }            }        }    }   ])', 1), ('([1:/android/leanbackjank/app/ui/MainActivity.java]:[UNLESS]:[1]:method_text:[t.main);    }    @Override    public boolean onSearchRequested() {        return false;    }}])', 1), ('([1:/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java]:[UNLESS]:[1]:method_text:[sButtonGoesToNextStage() {        findViewById(R.id.pass_button).setOnClickListener(this);    }}])', 1), ('([1:/android/autofillservice/cts/FatActivityTest.java]:[UNLESS]:[1]:method_text:[ways shown        assertThat(findNodeByAutofillHint(mRoot, ""importantAmI"")).isNotNull();    }   ])', 1), ('([1:/android/appsecurity/cts/CorruptApkTests.java]:[UNLESS]:[1]:method_text:[Info());    }    /** Installing the APK described in b/71360999 must not crash the device. */   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[UNLESS]:[1]:method_text:[       assertInstallFailsWithError(""v2-only-missing-classes.dex.apk"", ""code is missing"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[UNLESS]:[1]:method_text:[ error);        assertInstallFailsWithError(""v2-only-starts-with-dex-magic.apk"", error);    }   ])', 1), ('([1:/android/accessibility/cts/common/InstrumentedAccessibilityServiceTestRule.java]:[UNLESS]:[1]:method_text:[valuate();            } finally {                disableService();            }        }    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Video_MediaTest.java]:[UNLESS]:[1]:method_text:[SS_MEDIA_LOCATION"");        } catch (UnsupportedOperationException expected) {        }    }   ])', 1), ('([1:/art/CtsMain.java]:[UNLESS]:[1]:method_text:[e) {            throw new RuntimeException(""Got interrupted waiting for agent."");        }    }}])', 1), ('([1:/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java]:[UNLESS]:[1]:method_text:[ctories tested by     * {@link CommonExternalStorageTest#testAllPackageDirsWritable()}.     */   ])', 1), ('([1:/android/app/usage/cts/test1/SomeActivityWithLocus.java]:[UNLESS]:[1]:method_text:[ onStart() {        super.onStart();        setLocusContext(new LocusId(""Locus11""), null);    }}])', 1), ('([1:/com/android/cts/isolatedsplitapp/BaseReceiver.java]:[UNLESS]:[1]:method_text:[.putString(                ""base"", context.getResources().getString(R.string.base_string));    }}])', 1), ('([1:/android/content/res/cts/Resources_ThemeTest.java]:[UNLESS]:[1]:method_text:[veAttribute(R.attr.type1, tv, false));        assertNotSame(TypedValue.TYPE_NULL, tv.type);    }}])', 1), ('([1:/android/content/cts/AsyncQueryHandlerTest.java]:[UNLESS]:[1]:method_text:[lete(DummyProvider.CONTENT_URI, null, null);        super.tearDown();    }    @UiThreadTest   ])', 1), ('([1:/android/autofillservice/cts/commontests/AutoFillServiceTestCase.java]:[UNLESS]:[1]:method_text:[ceTestCase() {        throw new UnsupportedOperationException(""Contain static stuff only"");    }}])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_c/FeatureCReceiver.java]:[UNLESS]:[1]:method_text:[(                ""feature_c"", context.getResources().getString(R.string.feature_c_string));    }}])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_c/FeatureCActivity.java]:[UNLESS]:[1]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_c_textview, linearLayout);    }}])', 1), ('([1:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[UNLESS]:[1]:method_text:[             ""TRANSFORMED - post Finish private method call"",                }, output);    }   ])', 1), ('([1:/android/server/wm/app/FontScaleNoRelaunchActivity.java]:[UNLESS]:[1]:method_text:[ super.onConfigurationChanged(newConfig);        dumpActivityDpi();        dumpFontSize();    }}])', 1), ('([1:/android/jvmti/cts/JvmtiTaggingTest.java]:[UNLESS]:[1]:method_text:[tTag(o2));        return new WeakReference<Object>(o1);    }    // Very simplistic tagging.   ])', 1), ('([1:/android/content/cts/ContentProviderOperationTest.java]:[UNLESS]:[1]:method_text:[   public void setUp() throws Exception {        provider = mock(ContentProvider.class);    }   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[UNLESS]:[1]:method_text:[();            revokeBindAppWidgetPermission();        }    }    @MediumTest    @Presubmit   ])', 1), ('([1:/android/cts/statsdatom/lib/DeviceUtils.java]:[UNLESS]:[1]:method_text:[t == version.first && kernelVersion.second >= version.second);    }    private DeviceUtils() {}}])', 1), ('([1:/android/app/usage/cts/CacheQuotaHintTest.java]:[UNLESS]:[1]:method_text:[port org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class CacheQuotaHintTest {   ])', 1), ('([1:/android/server/wm/WindowTest.java]:[UNLESS]:[1]:method_text:[Format.UNKNOWN to allow the Window to select     *                          the format.     */   ])', 1)]"	""	""	"[('UNLESS', 64), ('isSupported()', 7)]"	"[('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.server.wm.AppConfigurationTests getDefaultDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests isInstantApp CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests testResetToPackageDefaults CtsDeviceConfigTestCases]', 1), ('[android.server.wm.app.FontScaleActivity getDisplayMetrics None]', 1), ('[android.app.stubs.LocalActivityManagerTestHelper LocalActivityManagerTestHelper None]', 1), ('[android.renderscript.cts.Target ExpandRangeToTargetPrecision CtsRenderscriptTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest isAppStandbyEnabled CtsUsageStatsTestCases]', 1), ('[android.content.cts.ContentProviderTest TestApis CtsContentTestCases]', 1), ('[android.appsecurity.cts.BaseInstallMultiple allowTest CtsAppSecurityHostTestCases]', 1), ('[android.net.cts.legacy.api22.ConnectivityManagerLegacyTest assertTelephonyInService CtsNetTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testIsActivePasswordSufficient_onParent_setOnParent_isSupported None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testIsActivePasswordSufficient_onParent_setOnProfile_isSupported None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testGetCurrentFailedPasswordAttempts_onParent_isSupported None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testLockNow_onParent_isSupported None]', 1), ('[android.view.inputmethod.cts.InputMethodInfoTest testAtLeastOneEncryptionAwareInputMethodIsAvailable CtsInputMethodTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[android.media.cts.MediaCodecListTest testVideoPerformancePointsSanity CtsMediaTestCases]', 1), ('[android.classloaders.cts.BaseInstallMultiple allowTest CtsUsesLibraryHostTestCases]', 1), ('[android.opengl.cts.CompressedTextureSurfaceView getTestPassed CtsOpenGLTestCases]', 1), ('[android.app.cts.ApplyOverrideConfigurationTest ApplyOverrideConfigurationTest CtsAndroidAppTestCases]', 1), ('[android.autofillservice.cts.dropdown.LoginActivityTest testAutoFillOneDataset CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.dropdown.LoginActivityTest testAutoFillOneDatasetAndSaveHidingOverlays CtsAutoFillServiceTestCases]', 1), ('[android.app.usage.cts.test2.FinishingTaskRootActivity finish None]', 1), ('[android.keystore.cts.SignatureTest testValidSignatureGeneratedForEmptyMessageByLimitedUseKey CtsKeystoreTestCases]', 1), ('[com.android.cts.verifier.camera.intents.CameraIntentsActivity setPassFailButtonClickListeners None]', 1), ('[android.autofillservice.cts.FatActivityTest testAutomaticRequest CtsAutoFillServiceTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV2RejectsWhenMissingCode CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallApkWhichDoesNotStartWithZipLocalFileHeaderMagic CtsAppSecurityHostTestCases]', 1), ('[android.accessibility.cts.common.InstrumentedAccessibilityServiceTestRule testWithEnabledAccessibilityService None]', 1), ('[android.provider.cts.media.MediaStore_Video_MediaTest testOriginalAccess CtsProviderTestCases]', 1), ('[com.android.cts.writeexternalstorageapp.WriteExternalStorageTest testVerifyNoMediaCreated None]', 1), ('[android.content.res.cts.Resources_ThemeTest testEmptyDoesNotGetOverriden CtsContentTestCases]', 1), ('[android.autofillservice.cts.commontests.AutoFillServiceTestCase isInlineMode CtsAutoFillServiceTestCases]', 1), ('[android.jvmti.cts.JvmtiRedefineClassesTest Finish None]', 1), ('[android.jvmti.cts.JvmtiTaggingTest test None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testPackageNameCannotBeFakedAppWidget CtsAccessibilityServiceTestCases]', 1), ('[android.cts.statsdatom.lib.DeviceUtils CollectingTestListener CtsStatsdAtomHostTestCases]', 1), ('[android.server.wm.WindowTest testTakeKeyEvents CtsWindowManagerDeviceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.2  .  These are in the Android source tree at"	"7.1.4.2"	"C-1-10"	"7.1.4.2/C-1-10"	"07010402.670110"	"""C-1-10] MUST pass all Vulkan dEQP Tests in the test lists between version 132317953 and the version specified in the android.software.vulkan.deqp.level feature flag."""	""	""	"android.software.vulkan.deqp.level EQP"	""	""	""	""	"[('android.graphics.cts.VulkanDeqpLevelTest', 3), ('android.graphics.cts.OpenGlEsDeqpLevelTest', 2), ('com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite', 1), ('com.android.cts.apicoverage.TestCaseReport', 1), ('com.android.cts.releaseparser.TestSuiteParser', 1), ('android.hardware.camera2.cts.HeifWriterTest', 1), ('com.android.compatibility.common.tradefed.presubmit.CtsConfigLoadingTest', 1), ('android.midi.cts.MidiEchoTest', 1)]"	"[('getType', 7), ('newBuilder', 7), ('getAnnotations', 5), ('println', 4), ('getName', 4), ('getMethods', 3), ('getSimpleName', 3), ('setup', 3), ('getTargetContext', 3), ('getPackageManager', 3), ('printUsage', 2), ('getAccessFlags', 2), ('getValue', 2), ('length', 2), ('getSystemAvailableFeatures', 2), ('getElements', 1), ('toString', 1), ('printStackTrace', 1), ('getClasses', 1), ('entries', 1), ('getAbsolutePath', 1), ('getClassLoader', 1), ('hasMoreElements', 1), ('nextElement', 1), ('nanoTime', 1), ('notifyAll', 1)]"	"[('CtsGraphicsTestCases', 5), ('CtsCameraTestCases', 1), ('CtsMidiTestCases', 1)]"	""	"android.midi.cts.MidiEchoTest"	"notifyAll"	"CtsMidiTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/OpenGlEsDeqpLevelTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/TestCaseReport.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/TestSuiteParser.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/midi/src/android/midi/cts/MidiEchoTest.java', 1)]"	"[('(2,EQP,/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java)', 1), ('(5,EQP,/com/android/cts/apicoverage/TestCaseReport.java)', 1), ('(1,android.software.vulkan.deqp.level,/android/graphics/cts/VulkanDeqpLevelTest.java)', 1), ('(10,EQP,/android/graphics/cts/VulkanDeqpLevelTest.java)', 1), ('(3,EQP,/com/android/cts/releaseparser/TestSuiteParser.java)', 1), ('(3,EQP,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(3,EQP,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(10,EQP,/android/graphics/cts/OpenGlEsDeqpLevelTest.java)', 1), ('(1,EQP,/android/midi/cts/MidiEchoTest.java)', 1)]"	"[('([2:/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java]:[EQP]:[2]:method_text:[new GoNegReqPbcTestCase(context));        sTestSuite.add(new GoNegReqPinTestCase(context));    }}])', 1), ('([5:/com/android/cts/apicoverage/TestCaseReport.java]:[EQP]:[5]:method_text:[        printTestSuiteSummary(ts1, outputSummaryFilePath, tsContent.getKnownFailuresList());    }}])', 1), ('([1:/android/graphics/cts/VulkanDeqpLevelTest.java]:[android.software.vulkan.deqp.level]:[1]:method_text:[              }            }        }    }    @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")   ])', 1), ('([4:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[4]:method_text:[              }            }        }    }    @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")   ])', 1), ('([6:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[6]:method_text:[kageManager.FEATURE_VULKAN_DEQP_LEVEL,                        MINIMUM_VULKAN_DEQP_LEVEL));    }}])', 1), ('([3:/com/android/cts/releaseparser/TestSuiteParser.java]:[EQP]:[3]:method_text:[thod : classDef.getMethods()) {                            // Junit4 style test case annotated with])', 1), ('([3:/android/hardware/camera2/cts/HeifWriterTest.java]:[EQP]:[3]:method_text:[           }            // TODO: add more key validations.        }        return result;    }}])', 1), ('([3:/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java]:[EQP]:[3]:method_text:[ * -> Exclude deprecated ApkInstaller.     * -> Check if host-side tests are non empty.     */   ])', 1), ('([4:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[EQP]:[4]:method_text:[d setup() {        mPm = InstrumentationRegistry.getTargetContext().getPackageManager();    }   ])', 1), ('([6:/android/graphics/cts/OpenGlEsDeqpLevelTest.java]:[EQP]:[6]:method_text:[Manager.FEATURE_OPENGLES_DEQP_LEVEL,                        MINIMUM_OPENGLES_DEQP_LEVEL));    }}])', 1), ('([1:/android/midi/cts/MidiEchoTest.java]:[EQP]:[1]:method_text:[o.TYPE_VIRTUAL,                echoInfo.getType());    }    // Is the MidiManager supported?   ])', 1)]"	""	""	"[('EQP', 10), ('android.software.vulkan.deqp.level', 1)]"	"[('[com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite getTestId None]', 1), ('[com.android.cts.apicoverage.TestCaseReport isDirectory None]', 1), ('[android.graphics.cts.VulkanDeqpLevelTest testVulkanDeqpLevel CtsGraphicsTestCases]', 1), ('[com.android.cts.releaseparser.TestSuiteParser getTestSuite None]', 1), ('[android.hardware.camera2.cts.HeifWriterTest testHeif CtsCameraTestCases]', 1), ('[android.graphics.cts.OpenGlEsDeqpLevelTest testOpenGlEsDeqpLevel CtsGraphicsTestCases]', 1), ('[android.midi.cts.MidiEchoTest currentTimeMillis CtsMidiTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"5.1  . Capture for Unprocessed"	"5.1"	"C-1-6"	"5.1/C-1-6"	"05010000.670106"	"""C-1-6] MUST have Cold output latency of 200 milliseconds or less. | C-1-6] MUST have a signal-to-noise ratio (SNR) at 60 dB or higher for each and every microphone used to record the unprocessed audio source. (whereas the SNR is measured as the difference between 94 dB SPL and equivalent SPL of self noise, A-weighted)."""	""	""	"SNR SPL"	""	""	""	""	"[('android.server.wm.AppConfigurationTests', 17), ('android.graphics.cts.BitmapColorSpaceTest', 17), ('android.server.wm.SplashscreenTests', 9), ('android.server.wm.KeyguardLockedTests', 5), ('android.server.wm.TvMaxWindowSizeTests', 3), ('android.media.cts.AudioManagerTest', 2), ('android.uirendering.cts.testclasses.ExactCanvasTests', 1), ('com.android.cts.verifier.camera.its.ItsTestActivity', 1), ('android.systemui.cts.LightBarActivity', 1), ('com.android.cts.isolatedsplitapp.feature_a.FeatureAReceiver', 1), ('android.content.res.cts.PluralResourcesTest', 1)]"	"[('getColorSpace', 30), ('getAssets', 19), ('fail', 16), ('getWidth', 13), ('getHeight', 11), ('Options', 10), ('setUp', 7), ('hashCode', 3), ('getWindow', 2), ('getResources', 2), ('getByteCount', 2), ('rewind', 2), ('asIntBuffer', 2), ('get', 2), ('getContext', 2), ('DumpOnFailure', 1), ('tearDown', 1), ('ResultReceiver', 1), ('getAttributes', 1), ('getDecorView', 1), ('Configuration', 1), ('getConfiguration', 1), ('supportsSecureLock', 1), ('createWithColorSpace', 1), ('p3', 1), ('reconfigure', 1), ('reuse', 1), ('getPixel', 1), ('getPixels', 1), ('setPixel', 1), ('setPixels', 1), ('writeColorSpace', 1), ('obtain', 1), ('recycle', 1), ('p3rgb565', 1), ('p3hardware', 1), ('guessP3', 1), ('guessUnknown', 1), ('getName', 1), ('inColorSpaceSRGBToP3', 1), ('inColorSpaceWith16BitWithDecreasedGamut', 1), ('copy', 1), ('compressFormatsAndColorSpaces', 1), ('values', 1), ('getRgbColorSpaces', 1), ('toArray', 1), ('getPackageManager', 1), ('Point', 1)]"	"[('CtsWindowManagerDeviceTestCases', 34), ('CtsGraphicsTestCases', 17), ('CtsMediaTestCases', 2), ('CtsUiRenderingTestCases', 1), ('CtsSystemUiTestCases', 1), ('CtsContentTestCases', 1)]"	""	"android.server.wm.TvMaxWindowSizeTests"	"Point"	"CtsWindowManagerDeviceTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 17), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapColorSpaceTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 9), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/TvMaxWindowSizeTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/LightBarActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_a/src/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/PluralResourcesTest.java', 1)]"	"[('(60,SPL,/android/server/wm/SplashscreenTests.java)', 1), ('(5,SPL,/android/media/cts/AudioManagerTest.java)', 1), ('(3,SPL,/android/uirendering/cts/testclasses/ExactCanvasTests.java)', 1), ('(1,SPL,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(3,SPL,/android/systemui/cts/LightBarActivity.java)', 1), ('(2,SPL,/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java)', 1), ('(1,SPL,/android/content/res/cts/PluralResourcesTest.java)', 1), ('(17,SPL,/android/server/wm/KeyguardLockedTests.java)', 1), ('(172,SPL,/android/server/wm/AppConfigurationTests.java)', 1), ('(27,SPL,/android/graphics/cts/BitmapColorSpaceTest.java)', 1), ('(31,SPL,/android/server/wm/TvMaxWindowSizeTests.java)', 1)]"	"[('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[1]:method_text:[e.Named.DISPLAY_P3), cs);        } catch (IOException e) {            fail();        }    }   ])', 4), ('([10:/android/server/wm/SplashscreenTests.java]:[SPL]:[10]:method_text:[TRA_INTENT, startIntent);        homeActivity.sendCommand(COMMAND_START_ACTIVITY, data);    }   ])', 1), ('([14:/android/server/wm/SplashscreenTests.java]:[SPL]:[14]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([6:/android/server/wm/SplashscreenTests.java]:[SPL]:[6]:method_text:[Equals(Color.BLUE, journal.extras.getInt(ICON_BACKGROUND_COLOR, Color.YELLOW));        }    }   ])', 1), ('([4:/android/server/wm/SplashscreenTests.java]:[SPL]:[4]:method_text:[ConfigNightMode,                journal.extras.getInt(GET_NIGHT_MODE_ACTIVITY_CHANGED));    }   ])', 1), ('([4:/android/server/wm/SplashscreenTests.java]:[SPL]:[4]:method_text:[     testSplashScreenColor(SPLASH_SCREEN_REPLACE_ICON_ACTIVITY, Color.BLUE, Color.WHITE);    }   ])', 1), ('([5:/android/server/wm/SplashscreenTests.java]:[SPL]:[5]:method_text:[NDING_VIEW));        assertTrue(journal.extras.getBoolean(CENTER_VIEW_IS_SURFACE_VIEW));    }   ])', 1), ('([5:/android/server/wm/SplashscreenTests.java]:[SPL]:[5]:method_text:[E_ICON_EXIT);        assertFalse(journal.extras.getBoolean(RECEIVE_SPLASH_SCREEN_EXIT));    }   ])', 1), ('([6:/android/server/wm/SplashscreenTests.java]:[SPL]:[6]:method_text:[      }        mWmState.waitForActivityRemoved(activity);        separateTestJournal();    }   ])', 1), ('([6:/android/server/wm/SplashscreenTests.java]:[SPL]:[6]:method_text:[CTIVITY,                intent -> {});        waitAndAssertOverrideThemeColor(Color.BLUE);    }}])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[SPL]:[4]:method_text:[:"" + microphone.getDirectionality());            Log.i(TAG, ""--------------"");        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[SPL]:[1]:method_text:[ibutes() require privledged permission MODIFY_AUDIO_ROUTING    // and thus cannot be tested here.}])', 1), ('([3:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[SPL]:[3]:method_text:[ect(20, 20, 70, 70, p);                })                .runWithComparer(mExactComparer);    }}])', 1), ('([1:/com/android/cts/verifier/camera/its/ItsTestActivity.java]:[SPL]:[1]:method_text:[era_its_test, R.string.camera_its_test_info, -1);        setPassFailButtonClickListeners();    }}])', 1), ('([3:/android/systemui/cts/LightBarActivity.java]:[SPL]:[3]:method_text:[ranceFlag;        }        controller.setSystemBarsAppearance(appearance, appearanceFlag);    }}])', 1), ('([2:/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java]:[SPL]:[2]:method_text:[(                ""feature_a"", context.getResources().getString(R.string.feature_a_string));    }}])', 1), ('([1:/android/content/res/cts/PluralResourcesTest.java]:[SPL]:[1]:method_text:[Resources(mResources.getAssets(), mResources.getDisplayMetrics(), config);    }    @SmallTest   ])', 1), ('([2:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[2]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([2:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[2]:method_text:[uardControllerState().keyguardShowing);        assertTrue(isDisplayOn(DEFAULT_DISPLAY));    }   ])', 1), ('([3:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[3]:method_text:[expected display.        mWmState.waitAndAssertImeWindowShownOnDisplay(DEFAULT_DISPLAY);    }   ])', 1), ('([5:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[5]:method_text:[xpected display.        mWmState.waitAndAssertImeWindowShownOnDisplay(DEFAULT_DISPLAY);    }   ])', 1), ('([5:/android/server/wm/KeyguardLockedTests.java]:[SPL]:[5]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([8:/android/server/wm/AppConfigurationTests.java]:[SPL]:[8]:method_text:[lues reported in fullscreen should be larger than those reported in     * docked state.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[SPL]:[2]:method_text:[nResizedFromFullscreen()} but resizing     * from docked state to fullscreen (reverse).     */   ])', 1), ('([4:/android/server/wm/AppConfigurationTests.java]:[SPL]:[4]:method_text:[;    }    /**     * Tests whether the Display sizes change when rotating the device.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[SPL]:[2]:method_text:[tatingWhileDocked()} but when the Activity     * is launched to side from docked stack.     */   ])', 1), ('([10:/android/server/wm/AppConfigurationTests.java]:[SPL]:[10]:method_text:[ Activity will be     * relaunched twice and it should have same config as initial one.     */   ])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[SPL]:[3]:method_text:[     * Same as {@link #testSameConfigurationFullSplitFullRelaunch} but without relaunch.     */   ])', 1), ('([11:/android/server/wm/AppConfigurationTests.java]:[SPL]:[11]:method_text:[ivity with the DialogWhenLarge theme can transform properly when in split     * screen.     */   ])', 1), ('([11:/android/server/wm/AppConfigurationTests.java]:[SPL]:[11]:method_text:[ Test that device handles consequent requested orientations and displays the activities.     */   ])', 1), ('([27:/android/server/wm/AppConfigurationTests.java]:[SPL]:[27]:method_text:[),                new Point(globalSizeInfo.metricsWidth, globalSizeInfo.metricsHeight));    }   ])', 1), ('([4:/android/server/wm/AppConfigurationTests.java]:[SPL]:[4]:method_text:[text derived from an application context     * will not change when the device rotates.     */   ])', 1), ('([5:/android/server/wm/AppConfigurationTests.java]:[SPL]:[5]:method_text:[context derived from an activity context     * will not change when the device rotates.     */   ])', 1), ('([33:/android/server/wm/AppConfigurationTests.java]:[SPL]:[33]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([7:/android/server/wm/AppConfigurationTests.java]:[SPL]:[7]:method_text:[**     * Test that device handles moving between two tasks with different orientations.     */   ])', 1), (""([3:/android/server/wm/AppConfigurationTests.java]:[SPL]:[3]:method_text:[Test that device doesn't change device orientation by app request while in multi-window.     */   ])"", 1), ('([30:/android/server/wm/AppConfigurationTests.java]:[SPL]:[30]:method_text:[  /**     * Test launching an activity which requests specific UI mode during creation.     */   ])', 1), ('([4:/android/server/wm/AppConfigurationTests.java]:[SPL]:[4]:method_text:[ dockedActivitySizes);        assertSizesAreSame(dockedActivitySizes, applicationSizes);    }   ])', 1), ('([8:/android/server/wm/AppConfigurationTests.java]:[SPL]:[8]:method_text:[Sizes);        assertSizesAreSane(fullscreenActivitySizes, secondarySplitActivitySizes);    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[1]:method_text:[                    assertSame(linearRgb, cs);                }            }        }    }   ])', 1), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[3]:method_text:[e.Named.DISPLAY_P3), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[1]:method_text:[h (IOException e) {                    fail();                }            }        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[1]:method_text:[255.0f / alpha,                alpha, premulCS, ColorSpace.get(ColorSpace.Named.SRGB)));    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[1]:method_text:[         int pixel = pixels[i];            almostEqual(expected, pixel, 3, i);        }    }   ])', 1), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[3]:method_text:[Stored as RGBA        ColorUtils.verifyColor(expectedColor, dst.asIntBuffer().get(), 1);    }   ])', 1), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[3]:method_text:[red as RGBA            ColorUtils.verifyColor(expectedColor, buffer.get(), 1);        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[1]:method_text:[ace();        assertNotNull(cs);        assertSame(expected, cs);        p.recycle();    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[1]:method_text:[""Unknown"", cs.getName());        } catch (IOException e) {            fail();        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[2]:method_text:[yGetPixel(b, 0x75fb4cff);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[2]:method_text:[e.Named.DISPLAY_P3), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[2]:method_text:[itmap.CompressFormat.values(),                BitmapTest.getRgbColorSpaces().toArray());    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[SPL]:[2]:method_text:[catch (IOException e) {                fail(""Failed with "" + e);            }        }    }   ])', 1), ('([23:/android/server/wm/TvMaxWindowSizeTests.java]:[SPL]:[23]:method_text:[, displaySize.y);        mDisplayShortestWidth = Math.min(displaySize.x, displaySize.y);    }   ])', 1), ('([2:/android/server/wm/TvMaxWindowSizeTests.java]:[SPL]:[2]:method_text:[th, lessThanOrEqualTo(1920));        assertThat(shortestWidth, lessThanOrEqualTo(1080));    }   ])', 1), ('([6:/android/server/wm/TvMaxWindowSizeTests.java]:[SPL]:[6]:method_text:[edSizesForActivity(componentName);        assertNotNull(sizeInfo);        return sizeInfo;    }}])', 1)]"	""	""	"[('SPL', 58)]"	"[('[android.graphics.cts.BitmapColorSpaceTest isMutable CtsGraphicsTestCases]', 2), ('[android.server.wm.SplashscreenTests prepareTestLauncher CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitAnimationCancel CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSetApplicationNightMode CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testSetBackgroundColorActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitIconAnimatingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testCancelHandleExitIconAnimatingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testShortcutChangeTheme CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testOverrideSplashscreenTheme CtsWindowManagerDeviceTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetMicrophones CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetDevices CtsMediaTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testColorLongs CtsUiRenderingTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsTestActivity ItsTestActivity None]', 1), ('[android.systemui.cts.LightBarActivity getSystemUiVisibility CtsSystemUiTestCases]', 1), ('[android.content.res.cts.PluralResourcesTest getDisplayMetrics CtsContentTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardAttrActivity_method_turnScreenOn_withSecureKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedAttrImeActivityAndShowSoftInput CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedImeActivityAndShowSoftInput CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests getDefaultDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromFullscreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromDockedStack CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingWhileDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingToSideFromDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSameConfigurationFullSplitFullRelaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSameConfigurationFullSplitFullNoRelaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testDialogWhenLargeSplitSmall CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testRotatedInfoWithFixedRotationTransform CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testFixedOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenPortraitAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenLandscapeAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesTopActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.graphics.cts.BitmapColorSpaceTest testEncodeP3hardware CtsGraphicsTestCases]', 1), ('[android.server.wm.TvMaxWindowSizeTests test_preSApplication_1080p_windowSizeCap CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.TvMaxWindowSizeTests test_windowSize_notLargerThan_displaySize CtsWindowManagerDeviceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.2.4  . Wi"	"7.4.2.4"	"C-1-3"	"7.4.2.4/C-1-3"	"07040204.670103"	"""C-1-3] MUST support IEEE 802.11u standard, specifically related to Network Discovery and Selection, such as Generic Advertisement Service (GAS) and Access Network Query Protocol (ANQP)."""	""	""	"IEEE GAS ANQP"	""	""	""	""	"[('android.net.wifi.rtt.cts.WifiRttTest', 6), ('com.android.cts.tagging.TaggingSdk30Test', 3), ('android.cts.tagging.sdk30.TaggingTest', 3), ('android.app.cts.CloseSystemDialogsTest', 3), ('android.net.wifi.cts.WifiConfigurationTest', 2), ('android.jvmti.cts.JvmtiRedefineClassesTest', 2), ('android.media.cts.StreamingMediaPlayerTest', 2), ('android.hardware.multiprocess.camera.cts.Camera2Activity', 1), ('android.hardware.cts.Camera_SizeTest', 1), ('android.hardware.camera2.cts.StaticMetadataTest', 1), ('android.webkit.cts.CtsTestServer', 1), ('android.preference.cts.PreferenceGroupTest', 1), ('android.cts.tagging.sdk30.HeapZeroInitMemtagAsyncActivity', 1), ('android.media.cts.AudioTrack_ListenerTest', 1), ('android.server.wm.AssistantStackTests', 1), ('android.view.cts.MotionEventTest', 1), ('android.net.wifi.rtt.cts.TestBase', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.hardware.camera2.cts.Camera2OfflineTestActivity', 1), ('android.media.cts.NativeDecoderTest', 1), ('android.view.cts.input.InputEventTest', 1), ('com.android.server.cts.device.batterystats.BatteryStatsBgVsFgActions', 1), ('android.hardware.multiprocess.camera.cts.Camera1Activity', 1), ('com.android.compatibility.common.util.SettingsUtils', 1), ('android.media.cts.AudioHelper', 1), ('android.hardware.multiprocess.camera.cts.ErrorLoggingService', 1), ('android.hardware.camera2.cts.RobustnessTest', 1), ('android.app.cts.UiModeManagerTest', 1), ('android.media.cts.AudioTrackTest', 1)]"	"[('getChannelCount', 8), ('Builder', 7), ('getAudioFormat', 7), ('start', 6), ('onPause', 6), ('onResume', 6), ('onDestroy', 6), ('build', 5), ('setUp', 4), ('stop', 4), ('join', 3), ('shutdown', 2), ('getPackageManager', 2), ('getContext', 2), ('getSimpleName', 2), ('get', 2), ('makeSomething', 2), ('getStdJitterMs', 2), ('getStartTimeNs', 2), ('duplicate', 2), ('startRecording', 2), ('CtsTrustManager', 1), ('getAssets', 1), ('getResources', 1), ('getSingleton', 1), ('getLocalPort', 1), ('shutDownOnClientThread', 1), ('getLooper', 1), ('getIntent', 1), ('getExtras', 1), ('AvailabilityCallback', 1), ('StateCallback', 1), ('getMediaDirString', 1), ('Point', 1), ('open', 1), ('ErrorCallback', 1), ('if', 1), ('getEncoding', 1), ('getSampleRate', 1), ('getAvg', 1), ('getAvgAbs', 1), ('getMaxAbs', 1), ('notify', 1), ('wait', 1), ('make', 1), ('Thread', 1), ('run', 1), ('prepare', 1), ('myLooper', 1), ('loop', 1), ('quit', 1), ('getJitterCount', 1), ('getMeanJitterMs', 1), ('getMaxAbsJitterMs', 1), ('nanoTime', 1), ('abs', 1), ('getInstrumentation', 1), ('getState', 1), ('play', 1), ('getPlaybackHeadPosition', 1), ('clear', 1), ('getBinder', 1), ('sendMessages', 1), ('size', 1)]"	"[('CtsWifiTestCases', 9), ('CtsCameraTestCases', 8), ('CtsMediaTestCases', 5), ('CtsAppTestCases', 4), ('CtsTaggingHostTestCases', 3), ('CtsViewTestCases', 2), ('CtsPreferenceTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1)]"	""	"android.app.cts.CloseSystemDialogsTest"	"size"	"CtsAppTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/rtt/cts/WifiRttTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/src/com/android/cts/tagging/TaggingSdk30Test.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/sdk_30/src/android/cts/tagging/sdk30/TaggingTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/CloseSystemDialogsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiConfigurationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/redefining/app/src/android/jvmti/cts/JvmtiRedefineClassesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/StreamingMediaPlayerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/Camera2Activity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/Camera_SizeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/testserver/src/android/webkit/cts/CtsTestServer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/preference/src/android/preference/cts/PreferenceGroupTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/sdk_30/src/android/cts/tagging/sdk30/HeapZeroInitMemtagAsyncActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrack_ListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/MotionEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/rtt/cts/TestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/Camera2OfflineTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/NativeDecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/apps/batterystatsapp/src/com/android/server/cts/device/batterystats/BatteryStatsBgVsFgActions.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/Camera1Activity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/SettingsUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/AudioHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/ErrorLoggingService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/UiModeManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1)]"	"[('(10,GAS,/android/hardware/multiprocess/camera/cts/Camera2Activity.java)', 1), ('(4,GAS,/com/android/cts/tagging/TaggingSdk30Test.java)', 1), ('(2,GAS,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(5,GAS,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(4,GAS,/android/webkit/cts/CtsTestServer.java)', 1), ('(3,GAS,/android/preference/cts/PreferenceGroupTest.java)', 1), ('(2,IEEE,/android/net/wifi/cts/WifiConfigurationTest.java)', 1), ('(1,GAS,/android/cts/tagging/sdk30/HeapZeroInitMemtagAsyncActivity.java)', 1), ('(2,GAS,/android/media/cts/AudioTrack_ListenerTest.java)', 1), ('(1,GAS,/android/server/wm/AssistantStackTests.java)', 1), ('(1,GAS,/android/view/cts/MotionEventTest.java)', 1), ('(2,IEEE,/android/net/wifi/rtt/cts/TestBase.java)', 1), ('(2,GAS,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(3,GAS,/android/jvmti/cts/JvmtiRedefineClassesTest.java)', 1), ('(11,GAS,/android/hardware/camera2/cts/Camera2OfflineTestActivity.java)', 1), ('(1,GAS,/android/media/cts/NativeDecoderTest.java)', 1), ('(2,GAS,/android/view/cts/input/InputEventTest.java)', 1), ('(2,GAS,/com/android/server/cts/device/batterystats/BatteryStatsBgVsFgActions.java)', 1), ('(5,GAS,/android/hardware/multiprocess/camera/cts/Camera1Activity.java)', 1), ('(1,GAS,/com/android/compatibility/common/util/SettingsUtils.java)', 1), ('(2,GAS,/android/media/cts/AudioHelper.java)', 1), ('(1,GAS,/android/hardware/multiprocess/camera/cts/ErrorLoggingService.java)', 1), ('(3,GAS,/android/media/cts/StreamingMediaPlayerTest.java)', 1), ('(6,GAS,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(17,IEEE,/android/net/wifi/rtt/cts/WifiRttTest.java)', 1), ('(6,GAS,/android/cts/tagging/sdk30/TaggingTest.java)', 1), ('(1,GAS,/android/app/cts/UiModeManagerTest.java)', 1), ('(1,IEEE,/android/media/cts/AudioTrackTest.java)', 1), ('(3,GAS,/android/app/cts/CloseSystemDialogsTest.java)', 1)]"	"[('([1:/android/net/wifi/cts/WifiConfigurationTest.java]:[IEEE]:[1]:method_text:[ {            // empty        }    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 2), ('([10:/android/hardware/multiprocess/camera/cts/Camera2Activity.java]:[GAS]:[10]:method_text:[       mErrorServiceConnection.stop();            mErrorServiceConnection = null;        }    }}])', 1), ('([1:/com/android/cts/tagging/TaggingSdk30Test.java]:[GAS]:[1]:method_text:[f(NATIVE_MEMTAG_ASYNC_CHANGE_ID),                /*disabledChanges*/ ImmutableSet.of());    }   ])', 1), ('([1:/com/android/cts/tagging/TaggingSdk30Test.java]:[GAS]:[1]:method_text:[abledChanges*/ ImmutableSet.of(),                /*disabledChanges*/ ImmutableSet.of());    }   ])', 1), ('([2:/com/android/cts/tagging/TaggingSdk30Test.java]:[GAS]:[2]:method_text:[*enabledChanges*/ ImmutableSet.of(),                /*disabledChanges*/ ImmutableSet.of());    }}])', 1), ('([2:/android/hardware/cts/Camera_SizeTest.java]:[GAS]:[2]:method_text:[st = new Camera_SizeTest();        test.setName(testName);        testSuite.addTest(test);    }}])', 1), ('([5:/android/hardware/camera2/cts/StaticMetadataTest.java]:[GAS]:[5]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([4:/android/webkit/cts/CtsTestServer.java]:[GAS]:[4]:method_text:[         Log.e(TAG, ""Error handling request:"", e);                }            }        }    }}])', 1), ('([3:/android/preference/cts/PreferenceGroupTest.java]:[GAS]:[3]:method_text:[oup.setOrderingAsAdded(false);        assertFalse(mPreferenceGroup.isOrderingAsAdded());    }   ])', 1), ('([1:/android/cts/tagging/sdk30/HeapZeroInitMemtagAsyncActivity.java]:[GAS]:[1]:method_text:[ else {            setResult(TestActivity.RESULT_TEST_FAILED);        }        finish();    }}])', 1), ('([2:/android/media/cts/AudioTrack_ListenerTest.java]:[GAS]:[2]:method_text:[        private ArrayList<Integer> mOnPeriodicNotificationCalled = new ArrayList<Integer>();    }}])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[GAS]:[1]:method_text:[vityType(                            ACTIVITY_TYPE_ASSISTANT).isFullscreen());        }    }   ])', 1), ('([1:/android/view/cts/MotionEventTest.java]:[GAS]:[1]:method_text:[);            assertEquals(axes[i], MotionEvent.axisFromString(axisToString));        }    }   ])', 1), ('([2:/android/net/wifi/rtt/cts/TestBase.java]:[IEEE]:[2]:method_text:[RE_SCAN_MILLIS);            }            scanCount++;        }        return bestTestAp;    }}])', 1), ('([2:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[GAS]:[2]:method_text:[al distortion        }    }    /**     * Cross-check StreamConfigurationMap output     */   ])', 1), ('([2:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[GAS]:[2]:method_text:[AAAAAAAAAAAcAAAAcAAAAAIA"" +                    ""AAAAAAAAAQAAAAAAAAAAEAAAAQAAAHAAAAA=""),    };   ])', 1), ('([1:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[GAS]:[1]:method_text:[      for (ExpectedMethod m : methods) {            m.ensureHasMethod(target);        }    }   ])', 1), ('([11:/android/hardware/camera2/cts/Camera2OfflineTestActivity.java]:[GAS]:[11]:method_text:[       mErrorServiceConnection.stop();            mErrorServiceConnection = null;        }    }}])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[GAS]:[1]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([2:/android/view/cts/input/InputEventTest.java]:[GAS]:[2]:method_text:[alue());            assertEquals(axis, MotionEvent.axisFromString(axisToString));        }    }}])', 1), ('([2:/com/android/server/cts/device/batterystats/BatteryStatsBgVsFgActions.java]:[GAS]:[2]:method_text:[dException e) {            Log.e(TAG, ""Interrupted exception while sleeping"", e);        }    }}])', 1), ('([5:/android/hardware/multiprocess/camera/cts/Camera1Activity.java]:[GAS]:[5]:method_text:[       mErrorServiceConnection.stop();            mErrorServiceConnection = null;        }    }}])', 1), ('([1:/com/android/compatibility/common/util/SettingsUtils.java]:[GAS]:[1]:method_text:[lue);            } else {                delete(mNamespace, mKey);            }        }    }}])', 1), ('([2:/android/media/cts/AudioHelper.java]:[GAS]:[2]:method_text:[  private final static String TAG = ""AudioRecordAuditNative"";        private int mPosition;    }}])', 1), ('([1:/android/hardware/multiprocess/camera/cts/ErrorLoggingService.java]:[GAS]:[1]:method_text:[d exception while retrieving errors: "" + e);            }            return res;        }    }}])', 1), ('([2:/android/media/cts/StreamingMediaPlayerTest.java]:[GAS]:[2]:method_text:[yback should have failed"");        } finally {            mServer.shutdown();        }    }   ])', 1), ('([1:/android/media/cts/StreamingMediaPlayerTest.java]:[GAS]:[1]:method_text:[InterruptedIOException();                    }                }            };        }    }}])', 1), ('([6:/android/hardware/camera2/cts/RobustnessTest.java]:[GAS]:[6]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([4:/android/net/wifi/rtt/cts/WifiRttTest.java]:[IEEE]:[4]:method_text:[  - Failure ratio < threshold (constant)     *   - Result margin < threshold (constant)     */   ])', 1), ('([3:/android/net/wifi/rtt/cts/WifiRttTest.java]:[IEEE]:[3]:method_text:[st contains more range operations than allowed (by API) that we     * get an exception.     */   ])', 1), ('([3:/android/net/wifi/rtt/cts/WifiRttTest.java]:[IEEE]:[3]:method_text:[oo ""                + ""many peers"");    }    /**     * Verify ResponderLocation API     */   ])', 1), ('([3:/android/net/wifi/rtt/cts/WifiRttTest.java]:[IEEE]:[3]:method_text:[   }    /**     * Verify ranging request with aware peer Mac address and peer handle.     */   ])', 1), ('([1:/android/net/wifi/rtt/cts/WifiRttTest.java]:[IEEE]:[1]:method_text:[  - Failure ratio < threshold (constant)     *   - Result margin < threshold (constant)     */   ])', 1), ('([3:/android/net/wifi/rtt/cts/WifiRttTest.java]:[IEEE]:[3]:method_text:[Number of successful measurements is 0"", 0, numSuccessful[i]);                }         */    }}])', 1), ('([1:/android/cts/tagging/sdk30/TaggingTest.java]:[GAS]:[1]:method_text:[  assertTrue(receiver.await());        assertFalse(Utils.mistaggedKernelUaccessFails());    }   ])', 1), ('([3:/android/cts/tagging/sdk30/TaggingTest.java]:[GAS]:[3]:method_text:[(                    TestActivity.class, false /*initialTouchMode*/, true /*launchActivity*/);   ])', 1), ('([2:/android/cts/tagging/sdk30/TaggingTest.java]:[GAS]:[2]:method_text:[y.callActivity(HeapZeroInitMemtagAsyncActivity.class);      assertFalse(activity.failed());    }}])', 1), ('([1:/android/app/cts/UiModeManagerTest.java]:[GAS]:[1]:method_text:[ngAsUser(UserHandle.USER_SYSTEM, key)                : SettingsUtils.getSecureSetting(key);    }}])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[IEEE]:[1]:method_text:[ // Start threshold levels that we check.    private enum ThresholdLevel { LOW, MEDIUM, HIGH };   ])', 1), ('([1:/android/app/cts/CloseSystemDialogsTest.java]:[GAS]:[1]:method_text:[ntent(Intent.ACTION_CLOSE_SYSTEM_DIALOGS)));        assertCloseSystemDialogsReceived();    }   ])', 1), ('([1:/android/app/cts/CloseSystemDialogsTest.java]:[GAS]:[1]:method_text:[ assertThat(mFakeView.getNextCloseSystemDialogsCallReason(TIMEOUT_MS)).isEqualTo(REASON);    }   ])', 1), ('([1:/android/app/cts/CloseSystemDialogsTest.java]:[GAS]:[1]:method_text:[ogsCallReason(TIMEOUT_MS)).isEqualTo(REASON);        assertCloseSystemDialogsReceived();    }   ])', 1)]"	""	""	"[('GAS', 33), ('IEEE', 10)]"	"[('[android.hardware.multiprocess.camera.cts.Camera2Activity getCameraIdListNoLazy CtsCameraTestCases]', 1), ('[com.android.cts.tagging.TaggingSdk30Test testMemoryTagChecksAsyncCompatFeatureEnabled CtsTaggingHostTestCases]', 1), ('[com.android.cts.tagging.TaggingSdk30Test testMemoryTagChecksAsyncActivity CtsTaggingHostTestCases]', 1), ('[com.android.cts.tagging.TaggingSdk30Test testHeapZeroInitMemtagAsyncActivity CtsTaggingHostTestCases]', 1), ('[android.hardware.cts.Camera_SizeTest testMaxAspectRatios CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testHwSupportedLevel CtsCameraTestCases]', 1), ('[android.webkit.cts.CtsTestServer getAcceptedIssuers None]', 1), ('[android.preference.cts.PreferenceGroupTest testSetOrderingAsAdded CtsPreferenceTestCases]', 1), ('[android.net.wifi.cts.WifiConfigurationTest testGetAuthTypeFailurePsk8021X CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiConfigurationTest testGetAuthTypeFailure8021xEapSae CtsWifiTestCases]', 1), ('[android.cts.tagging.sdk30.HeapZeroInitMemtagAsyncActivity allocatorIsScudo None]', 1), ('[android.media.cts.AudioTrack_ListenerTest testStaticAudioTrackCallbackWithHandler CtsMediaTestCases]', 1), ('[android.server.wm.AssistantStackTests testLaunchingAssistantActivityIntoAssistantStack CtsWindowManagerDeviceTestCases]', 1), ('[android.view.cts.MotionEventTest testAxisFromToString CtsViewTestCases]', 1), ('[android.net.wifi.rtt.cts.TestBase isLocationEnabled CtsWifiTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testDepthOutputCharacteristics CtsCameraTestCases]', 1), ('[android.jvmti.cts.JvmtiRedefineClassesTest testSucessfulRetransform None]', 1), ('[android.jvmti.cts.JvmtiRedefineClassesTest testRetransformFailures None]', 1), ('[android.media.cts.NativeDecoderTest SKIP_testExtractor CtsMediaTestCases]', 1), ('[android.view.cts.input.InputEventTest testAxisFromToString CtsViewTestCases]', 1), ('[com.android.server.cts.device.batterystats.BatteryStatsBgVsFgActions getDefaultDisplay None]', 1), ('[com.android.compatibility.common.util.SettingsUtils assertCalled None]', 1), ('[android.media.cts.AudioHelper currentTimeMillis None]', 1), ('[android.hardware.multiprocess.camera.cts.ErrorLoggingService listIterator CtsCameraTestCases]', 1), ('[android.media.cts.StreamingMediaPlayerTest testPlayMp3Stream1Ssl CtsMediaTestCases]', 1), ('[android.media.cts.StreamingMediaPlayerTest testBlockingReadRelease CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testVerifyReprocessMandatoryOutputCombinationTables CtsCameraTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTest11mcAp CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRequestTooLarge CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTestApWithResponderLocation CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testAwareRttWithPeerHandle CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTestNon11mcAp CtsWifiTestCases]', 1), ('[android.cts.tagging.sdk30.TaggingTest testMemoryTagAsyncChecksEnabled None]', 1), ('[android.cts.tagging.sdk30.TaggingTest testMemoryTagAsyncActivityChecksEnabled None]', 1), ('[android.cts.tagging.sdk30.TaggingTest testHeapZeroInitMemtagAsyncActivity None]', 1), ('[android.app.cts.UiModeManagerTest testReadProjectionState_removeOnProjectionStateChangedListenerDenied CtsAppTestCases]', 1), ('[android.media.cts.AudioTrackTest testSetLogSessionId CtsMediaTestCases]', 1), ('[android.app.cts.CloseSystemDialogsTest testCloseSystemDialogs_whenRunningAsShell_isSent CtsAppTestCases]', 1), ('[android.app.cts.CloseSystemDialogsTest testCloseSystemDialogsViaWindowManager_whenRunningAsShell_isSent CtsAppTestCases]', 1), ('[android.app.cts.CloseSystemDialogsTest testCloseSystemDialogsViaActivityManager_whenRunningAsShell_isSent CtsAppTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.1  . These are in the Android source tree at"	"7.1.4.1"	"C-2-1"	"7.1.4.1/C-2-1"	"07010401.670201"	"""C-2-1] MUST report via the OpenGL ES managed APIs and native APIs any other OpenGL ES extensions they have implemented, and conversely MUST NOT report extension strings that they do not support."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"8.3  . Power"	"8.3"	"C-1-6"	"8.3/C-1-6"	"08030000.670106"	"""C-1-6] MUST provide user affordance to display all apps that are exempted from App Standby and Doze power-saving modes or any battery optimizations and MUST implement the ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS intent to ask the user to allow an app to ignore battery optimizations."""	""	""	"ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS"	""	""	""	""	"[('android.systemintents.cts.TestSystemIntents', 1), ('com.android.cts.verifier.battery.IgnoreBatteryOptimizationsTestActivity', 1)]"	"[('create', 1), ('setUp', 1), ('getInstrumentation', 1), ('getContext', 1), ('getPackageManager', 1)]"	"[('CtsSystemIntentTestCases', 1)]"	""	"com.android.cts.verifier.battery.IgnoreBatteryOptimizationsTestActivity"	"getPackageManager"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/battery/IgnoreBatteryOptimizationsTestActivity.java', 1)]"	"[('(1,ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS,/android/systemintents/cts/TestSystemIntents.java)', 1), ('(2,ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS,/com/android/cts/verifier/battery/IgnoreBatteryOptimizationsTestActivity.java)', 1)]"	"[('([1:/android/systemintents/cts/TestSystemIntents.java]:[ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS]:[1]:method_text:[etInstrumentation().getContext();        mPackageManager = mContext.getPackageManager();    }   ])', 1), ('([2:/com/android/cts/verifier/battery/IgnoreBatteryOptimizationsTestActivity.java]:[ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS]:[2]:method_text:[k() {            openIgnoreBatteryOptimizationsAppList();            succeed();        }    };}])', 1)]"	""	""	"[('ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS', 2)]"	"[('[com.android.cts.verifier.battery.IgnoreBatteryOptimizationsTestActivity getTests None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-4"	"7.5/H-1-4"	"07050000.720104"	"""[7.5/H-1-4] MUST support CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME for both primary cameras.  | [7.5/H-1-4] MUST support CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME for both primary cameras. """	""	""	"SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME CameraMetadata.SENSOR"	""	""	""	""	"[('android.hardware.camera2.cts.RobustnessTest', 3), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2), ('android.hardware.camera2.cts.DngCreatorTest', 1), ('android.hardware.camera2.cts.rs.RawConverter', 1)]"	"[('floatValue', 10), ('getColumnCount', 2), ('getRowCount', 2), ('create', 2), ('SparseIntArray', 1), ('getConfig', 1), ('getWidth', 1), ('getHeight', 1), ('getGainFactorCount', 1)]"	"[('CtsCameraTestCases', 7)]"	""	"android.hardware.camera2.cts.rs.RawConverter"	"floatValue"	"CtsCameraTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/RawConverter.java', 1)]"	"[('(1,SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,CameraMetadata.SENSOR,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,CameraMetadata.SENSOR,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(5,CameraMetadata.SENSOR,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(19,CameraMetadata.SENSOR,/android/hardware/camera2/cts/rs/RawConverter.java)', 1)]"	"[('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[CameraMetadata.SENSOR]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[CameraMetadata.SENSOR]:[1]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[CameraMetadata.SENSOR]:[2]:method_text:[nput/output combinations for each hardware     * level and capability work as expected.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[CameraMetadata.SENSOR]:[1]:method_text:[  if (inputWriter != null) {                inputWriter.close();            }        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[CameraMetadata.SENSOR]:[2]:method_text:[ll expected mandatory stream combinations are present and     * advertised accordingly.     */   ])', 1), ('([19:/android/hardware/camera2/cts/rs/RawConverter.java]:[CameraMetadata.SENSOR]:[19]:method_text:[ D50_XYZ[1], 0, 0, 0, D50_XYZ[2]};        multiply(m2, intermediate, /*out*/forwardMatrix);    }}])', 1)]"	""	""	"[('CameraMetadata.SENSOR', 6), ('SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME', 1)]"	"[('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraPerfClassCharacteristics CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testDngRenderingByBitmapFactor CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionOutputCombinations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionReprocessConfigurations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testOisDataMode CtsCameraTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-2-8"	"7.3.1/C-2-8"	"07030100.670208"	"""C-2-8] MUST have a secure processing pipeline such that an operating system or kernel compromise cannot allow data to be directly injected to falsely authenticate as the user. If device implementations are already launched on an earlier Android version and cannot meet the requirement C-2-8 through a system software update, they MAY be exempted from the requirement."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-7"	"9.8/H-1-7"	"09080000.720107"	"""[9.8/H-1-7] MUST NOT allow more than 5 bits of data to be transmitted out of the hotword detection service on each negative hotword result. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-3-5"	"7.3.1/C-3-5"	"07030100.670305"	"""C-3-5] MUST re-generate Authenticator ID for all Class 3 biometrics supported on device if any of them is re-enrolled."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.8.1  . Multi"	"3.8.1"	"C-3-6"	"3.8.1/C-3-6"	"03080100.670306"	"""C-3-6] MUST allocate the following minimum width and height for the PIP window when an application does not declare any value for AndroidManifestLayout_minWidth and AndroidManifestLayout_minHeight: Devices with the Configuration.uiMode that is set other than UI_MODE_TYPE_TELEVISION MUST allocate a minimum width and height of 108 dp. Devices with the Configuration.uiMode that is set to UI_MODE_TYPE_TELEVISION MUST allocate a minimum width of 240 dp and a minimum height of 135 dp. <h4 id=""3815_display_cutout"" """	""	""	"MODE_TYPE_TELEVISION PIP Configuration.uiMode"	""	""	""	""	"[('android.server.wm.KeyguardLockedTests', 6), ('android.os.cts.ParcelFileDescriptorProcessTest', 5), ('android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests', 3), ('android.opengl2.cts.primitive.GLPrimitiveBenchmark', 3), ('android.renderscript.cts.DebugContext', 3), ('android.app.usage.cts.UsageStatsTest', 3), ('android.app.cts.PipNotSupportedActivityTest', 2), ('android.content.cts.MockContentProvider', 1), ('com.android.cts.verifier.AbstractTestListActivity', 1), ('com.android.cts.documentprovider.MyDocumentsProvider', 1), ('android.os.cts.SeccompTest', 1), ('com.android.cts.verifier.audio.SoundPlayerObject', 1), ('android.signature.cts.tests.ApiPresenceCheckerTest', 1), ('android.server.wm.app.AlwaysFocusablePipActivity', 1), ('com.android.cts.releaseparser.ApkParser', 1), ('android.cts.statsdatom.statsd.UidAtomTests', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('android.signature.cts.tests.ApiComplianceCheckerTest', 1), ('com.android.cts.verifier.audio.HifiUltrasoundTestActivity', 1), ('com.android.cts.apicoverage.ApiCoverage', 1), ('android.hardware.camera2.cts.BurstCaptureTest', 1), ('android.server.wm.app.AssistantActivity', 1), ('android.musicrecognition.cts.MusicRecognitionManagerTest', 1), ('android.adb.cts.AdbHostTest', 1), ('android.signature.cts.AnnotationChecker', 1), ('android.webkit.cts.MockContentProvider', 1), ('com.android.cts.verifier.audio.WavAnalyzer', 1), ('com.android.cts.apicoverage.CtsApiCoverage', 1), ('com.android.cts.verifier.usb.mtp.MtpHostTestActivity', 1), ('android.hardware.camera2.cts.helpers.StaticMetadat', 1), ('android.signature.cts.ApiComplianceChecker', 1)]"	"[('getContext', 11), ('close', 8), ('getPathSegments', 7), ('AtomicInteger', 7), ('start', 7), ('getBytes', 6), ('setUp', 5), ('crashOnLaunchIfNeeded', 5), ('getContentResolver', 5), ('clear', 5), ('Object', 5), ('getIntent', 5), ('onCreate', 4), ('newRow', 4), ('values', 4), ('run', 4), ('getLooper', 4), ('capacity', 4), ('printUsage', 4), ('println', 4), ('getWritableDatabase', 3), ('flush', 3), ('resetRoots', 3), ('toLowerCase', 3), ('FileNotFoundException', 3), ('printStackTrace', 3), ('quitSafely', 3), ('getOutputStream', 3), ('getName', 3), ('myPid', 2), ('getReadableDatabase', 2), ('SQLiteQueryBuilder', 2), ('getFileDescriptor', 2), ('size', 2), ('makeBasic', 2), ('toBundle', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('getInstrumentation', 2), ('checkDeferred', 2), ('getAbsoluteClassName', 2), ('supportsSecureLock', 1), ('MockContentProvider', 1), ('ContentValues', 1), ('moveToNext', 1), ('Doc', 1), ('getAndIncrement', 1), ('createPipe', 1), ('notifyAll', 1), ('wait', 1), ('getIntentSender', 1), ('ByteArrayOutputStream', 1), ('toByteArray', 1), ('SoundPlayerObject', 1), ('getCurrentResId', 1), ('getChannelCount', 1), ('BufferInfo', 1), ('interrupted', 1), ('availableToRead', 1), ('getSampleTime', 1), ('advance', 1), ('rewind', 1), ('GLPrimitiveBenchmark', 1), ('getType', 1), ('setAdditionalInfo', 1), ('getFileEntryBuilder', 1), ('getAppInfo', 1), ('getExternalApiPackage', 1), ('prase', 1), ('getSimpleName', 1), ('BlockingStateCallback', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('build', 1), ('onDestroy', 1), ('quit', 1), ('getWidth', 1), ('getHeight', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('getPackageName', 1), ('WindowManagerStateHelper', 1), ('getPackages', 1), ('resolveSuperClasses', 1), ('entrySet', 1), ('getValue', 1), ('Intent', 1), ('enterPictureInPictureMode', 1), ('getAllClasses', 1), ('toString', 1), ('asShortBuffer', 1), ('doWork', 1), ('FilenameFilter', 1), ('PackageFilter', 1), ('getAeModeName', 1), ('getAfModeName', 1), ('checkQueued', 1), ('getClassType', 1), ('toSignatureString', 1)]"	"[('CtsWindowManagerDeviceTestCases', 9), ('CtsOpenGlPerf2TestCases', 3), ('CtsRenderscriptTestCases', 3), ('CtsUsageStatsTestCases', 3), ('CtsAppTestCases', 2), ('CtsContentTestCases', 1), ('CtsStatsdAtomHostTestCases', 1), ('CtsCameraTestCases', 1), ('CtsMusicRecognitionTestCases', 1), ('CtsAdbHostTestCases', 1), ('CtsWebkitTestCases', 1)]"	""	"android.os.cts.ParcelFileDescriptorProcessTest"	"getAbsoluteClassName"	""	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/ParcelFileDescriptorProcessTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/openglperf2/src/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/DebugContext.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/PipNotSupportedActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/MockContentProvider.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/AbstractTestListActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/DocumentProvider/src/com/android/cts/documentprovider/MyDocumentsProvider.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/SeccompTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/SoundPlayerObject.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/tests/src/android/signature/cts/tests/ApiPresenceCheckerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/AlwaysFocusablePipActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/ApkParser.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/UidAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/tests/src/android/signature/cts/tests/ApiComplianceCheckerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/ApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/AssistantActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/musicrecognition/src/android/musicrecognition/cts/MusicRecognitionManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adb/src/android/adb/cts/AdbHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/lib/common/src/android/signature/cts/AnnotationChecker.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/MockContentProvider.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/WavAnalyzer.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/usb/mtp/MtpHostTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/StaticMetadata.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/lib/common/src/android/signature/cts/ApiComplianceChecker.java', 1)]"	"[('(50,PIP,/android/server/wm/KeyguardLockedTests.java)', 1), ('(5,PIP,/android/content/cts/MockContentProvider.java)', 1), ('(14,PIP,/android/app/cts/PipNotSupportedActivityTest.java)', 1), ('(1,MODE_TYPE_TELEVISION,/com/android/cts/verifier/AbstractTestListActivity.java)', 1), ('(47,PIP,/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java)', 1), ('(7,PIP,/com/android/cts/documentprovider/MyDocumentsProvider.java)', 1), ('(6,PIP,/android/os/cts/SeccompTest.java)', 1), ('(15,PIP,/com/android/cts/verifier/audio/SoundPlayerObject.java)', 1), ('(4,PIP,/android/signature/cts/tests/ApiPresenceCheckerTest.java)', 1), ('(6,PIP,/android/server/wm/app/AlwaysFocusablePipActivity.java)', 1), ('(8,PIP,/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java)', 1), ('(20,PIP,/com/android/cts/releaseparser/ApkParser.java)', 1), ('(4,PIP,/android/renderscript/cts/DebugContext.java)', 1), ('(5,PIP,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(5,PIP,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(28,PIP,/android/app/usage/cts/UsageStatsTest.java)', 1), ('(1,PIP,/android/signature/cts/tests/ApiComplianceCheckerTest.java)', 1), ('(11,PIP,/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java)', 1), ('(6,PIP,/com/android/cts/apicoverage/ApiCoverage.java)', 1), ('(7,PIP,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(3,PIP,/android/server/wm/app/AssistantActivity.java)', 1), ('(5,PIP,/android/musicrecognition/cts/MusicRecognitionManagerTest.java)', 1), ('(1,PIP,/android/adb/cts/AdbHostTest.java)', 1), ('(1,PIP,/android/signature/cts/AnnotationChecker.java)', 1), ('(4,PIP,/android/webkit/cts/MockContentProvider.java)', 1), ('(32,PIP,/com/android/cts/verifier/audio/WavAnalyzer.java)', 1), ('(10,PIP,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(5,PIP,/com/android/cts/verifier/usb/mtp/MtpHostTestActivity.java)', 1), ('(9,PIP,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(1,PIP,/android/signature/cts/ApiComplianceChecker.java)', 1), ('(11,PIP,/android/os/cts/ParcelFileDescriptorProcessTest.java)', 1)]"	"[('([10:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[10]:method_text:[tKeyguardShowingAndNotOccluded();        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 2), ('([7:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[7]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([12:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[12]:method_text:[t contain pinned stack."", WINDOWING_MODE_PINNED,                ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([10:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[10]:method_text:[SHOW_WHEN_LOCKED_ACTIVITY, true);        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[1]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([5:/android/content/cts/MockContentProvider.java]:[PIP]:[5]:method_text:[xt context) {        return context.getFileStreamPath(""MockContentProvider.crashonlaunch"");    }}])', 1), ('([6:/android/app/cts/PipNotSupportedActivityTest.java]:[PIP]:[6]:method_text:[Up();        mInstrumentation = getInstrumentation();        mActivity = getActivity();    }   ])', 1), ('([8:/android/app/cts/PipNotSupportedActivityTest.java]:[PIP]:[8]:method_text:[ctureInPictureMode());            }        });        mInstrumentation.waitForIdleSync();    }}])', 1), ('([1:/com/android/cts/verifier/AbstractTestListActivity.java]:[MODE_TYPE_TELEVISION]:[1]:method_text:[LICKED_COORDINATE;                }                return false;            }        });    }}])', 1), ('([2:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[PIP]:[2]:method_text:[TestBase {    @Before    public void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([27:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[PIP]:[27]:method_text:[Sequence(CallbackTrackingActivity.class, getLifecycleLog(),                ""finishPip"");    }   ])', 1), ('([18:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[PIP]:[18]:method_text:[ackingActivity.class, ON_TOP_POSITION_GAINED)),                ""finishAlwaysFocusablePip"");    }}])', 1), ('([7:/com/android/cts/documentprovider/MyDocumentsProvider.java]:[PIP]:[7]:method_text:[) {            bytes.write(buffer, 0, count);        }        return bytes.toByteArray();    }}])', 1), ('([6:/android/os/cts/SeccompTest.java]:[PIP]:[6]:method_text:[policy specified by installTestFilter().     */    private native static int getClockBootTime();}])', 1), ('([15:/com/android/cts/verifier/audio/SoundPlayerObject.java]:[PIP]:[15]:method_text:[ public void onPeriodicNotification(AudioTrack track) {        periodicNotification(track);    }}])', 1), ('([4:/android/signature/cts/tests/ApiPresenceCheckerTest.java]:[PIP]:[4]:method_text:[        }        void validate() {            Assert.assertTrue(failureSeen);        }    }}])', 1), ('([6:/android/server/wm/app/AlwaysFocusablePipActivity.java]:[PIP]:[6]:method_text:[dowingMode(WINDOWING_MODE_PINNED);        caller.startActivity(intent, options.toBundle());    }}])', 1), ('([1:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[PIP]:[1]:method_text:[ivity.class);    }    /**     * Runs the full OpenGL ES 2.0 pipeline test offscreen.     */   ])', 1), ('([4:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[PIP]:[4]:method_text:[  streamName);    }    /**     * Runs the full OpenGL ES 2.0 pipeline test onscreen.     */   ])', 1), ('([3:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[PIP]:[3]:method_text:[                streamName);    }    /**     * Runs the pixel output test offscreen.     */   ])', 1), ('([20:/com/android/cts/releaseparser/ApkParser.java]:[PIP]:[20]:method_text:[tatic Logger getLogger() {        return Logger.getLogger(ApkParser.class.getSimpleName());    }}])', 1), ('([1:/android/renderscript/cts/DebugContext.java]:[PIP]:[1]:method_text:[    * Test whether we are detect out-of-bounds allocation accesses     * from a kernel.     */   ])', 1), ('([2:/android/renderscript/cts/DebugContext.java]:[PIP]:[2]:method_text:[  * 1D copy - things should work under DebugContext if given     * legitimate arguments     */   ])', 1), (""([1:/android/renderscript/cts/DebugContext.java]:[PIP]:[1]:method_text:[dead at this point so make sure it's not reused        RenderScript.releaseAllContexts();    }}])"", 1), ('([5:/android/cts/statsdatom/statsd/UidAtomTests.java]:[PIP]:[5]:method_text:[(entered).hasSize(1);    }    //Note: this test does not have uid, but must run on the device   ])', 1), ('([5:/com/android/cts/verifier/camera/its/ItsService.java]:[PIP]:[5]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([4:/android/app/usage/cts/UsageStatsTest.java]:[PIP]:[4]:method_text:[ity(clazz);        }    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([7:/android/app/usage/cts/UsageStatsTest.java]:[PIP]:[7]:method_text:[ty stops"", 0, stops);    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([17:/android/app/usage/cts/UsageStatsTest.java]:[PIP]:[17]:method_text:[t(0).getEventType());    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([1:/android/signature/cts/tests/ApiComplianceCheckerTest.java]:[PIP]:[1]:method_text:[     checker.checkDeferred();                },                excludedRuntimeClasses);    }   ])', 1), ('([11:/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java]:[PIP]:[11]:method_text:[ @Override    public void sendMessage(String message) {      publishProgress(message);    }  }}])', 1), ('([6:/com/android/cts/apicoverage/ApiCoverage.java]:[PIP]:[6]:method_text:[ApiPackage pkg = entry.getValue();            pkg.resolveSuperClasses(mPackages);        }    }}])', 1), ('([7:/android/hardware/camera2/cts/BurstCaptureTest.java]:[PIP]:[7]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([3:/android/server/wm/app/AssistantActivity.java]:[PIP]:[3]:method_text:[ngMode(WINDOWING_MODE_FULLSCREEN);        caller.startActivity(intent, options.toBundle());    }}])', 1), ('([5:/android/musicrecognition/cts/MusicRecognitionManagerTest.java]:[PIP]:[5]:method_text:[nly allowed when the caller of the api is also the owner of     * the override service.     */   ])', 1), ('([1:/android/adb/cts/AdbHostTest.java]:[PIP]:[1]:method_text:[e + ""\\n"");        }        assertTrue(""check_ms_os_desc failed:\\n"" + output, result == 0);    }}])', 1), ('([1:/android/signature/cts/AnnotationChecker.java]:[PIP]:[1]:method_text:[      if (annotatedMethods != null) {            annotatedMethods.remove(method);        }    }}])', 1), ('([4:/android/webkit/cts/MockContentProvider.java]:[PIP]:[4]:method_text:[        outputStream.close();            } catch (IOException e) {            }        }    }}])', 1), ('([32:/com/android/cts/verifier/audio/WavAnalyzer.java]:[PIP]:[32]:method_text:[ss of the analyzer.   */  public interface Listener {    void sendMessage(String message);  }}])', 1), ('([10:/com/android/cts/apicoverage/CtsApiCoverage.java]:[PIP]:[10]:method_text:[                 break;            }        } finally {            out.close();        }    }}])', 1), ('([5:/com/android/cts/verifier/usb/mtp/MtpHostTestActivity.java]:[PIP]:[5]:method_text:[ageResource(R.drawable.fs_indeterminate);                    break;            }        }    }}])', 1), ('([9:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[PIP]:[9]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([1:/android/signature/cts/ApiComplianceChecker.java]:[PIP]:[1]:method_text:[ } catch (ClassNotFoundException e) {                // Do nothing.            }        }    }}])', 1), ('([2:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[2]:method_text:[se();        assertEquals(-1, red.read());        assertEquals(null, red.checkError());    }   ])', 1), ('([2:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[2]:method_text:[();        assertEquals(-1, blue.read());        assertEquals(null, blue.checkError());    }   ])', 1), ('([3:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[3]:method_text:[ assertEquals(-1, blue.read());        assertContains(""OMG MUFFINS"", blue.checkError());    }   ])', 1), ('([3:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[3]:method_text:[quals(-1, blue.read());        assertContains(""Remote side is dead"", blue.checkError());    }   ])', 1), ('([1:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[1]:method_text:[    assertContains(""BLUE RAWR"", red.checkError());        assertNull(blue.checkError());    }   ])', 1)]"	""	""	"[('PIP', 48), ('MODE_TYPE_TELEVISION', 1)]"	"[('[android.server.wm.KeyguardLockedTests testEnterPipOverKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedActivityAndPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap CtsWindowManagerDeviceTestCases]', 1), ('[android.content.cts.MockContentProvider exists CtsContentTestCases]', 1), ('[android.app.cts.PipNotSupportedActivityTest PipNotSupportedActivityTest CtsAppTestCases]', 1), ('[android.app.cts.PipNotSupportedActivityTest testLaunchPipNotSupportedActivity CtsAppTestCases]', 1), ('[com.android.cts.verifier.AbstractTestListActivity loadTestResults None]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests testTopPositionNotSwitchedToPip CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests testTopPositionForAlwaysFocusableActivityInPip CtsWindowManagerDeviceTestCases]', 1), ('[android.os.cts.SeccompTest testViolateIsolatedServicePolicy None]', 1), ('[com.android.cts.verifier.audio.SoundPlayerObject isPlaying None]', 1), ('[android.signature.cts.tests.ApiPresenceCheckerTest TestClassesProvider None]', 1), ('[android.opengl2.cts.primitive.GLPrimitiveBenchmark testFullPipelineOffscreen CtsOpenGlPerf2TestCases]', 1), ('[android.opengl2.cts.primitive.GLPrimitiveBenchmark testFullPipelineOnscreen CtsOpenGlPerf2TestCases]', 1), ('[com.android.cts.releaseparser.ApkParser getTestCaseApiPackage None]', 1), ('[android.renderscript.cts.DebugContext testDebugContextI CtsRenderscriptTestCases]', 1), ('[android.renderscript.cts.DebugContext testDebugContextK CtsRenderscriptTestCases]', 1), ('[android.renderscript.cts.DebugContext testDebugContextRsAllocationCopy2D_Short_WrongD CtsRenderscriptTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testPictureInPictureState CtsStatsdAtomHostTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[android.app.usage.cts.UsageStatsTest isAppStandbyEnabled CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testPipActivity CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testPipActivity_StopToPause CtsUsageStatsTestCases]', 1), ('[com.android.cts.verifier.audio.HifiUltrasoundTestActivity dismiss None]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 1), ('[android.server.wm.app.AssistantActivity finish None]', 1), ('[android.musicrecognition.cts.MusicRecognitionManagerTest testRemovesBindersFromBundle CtsMusicRecognitionTestCases]', 1), ('[android.adb.cts.AdbHostTest testHasMsOsDescriptors CtsAdbHostTestCases]', 1), ('[android.signature.cts.AnnotationChecker isEmpty None]', 1), ('[com.android.cts.verifier.audio.WavAnalyzer isClipped None]', 1), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 1), ('[com.android.cts.verifier.usb.mtp.MtpHostTestActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.helpers.StaticMetadat getCharacteristics None]', 1), ('[android.signature.cts.ApiComplianceChecker isAnnotation None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPullPipeNormal None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPushPipeNormal None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPipeWriterError None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPipeWriterCrash None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testSocketErrorAfterClose None]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-1-8"	"7.3.1/C-1-8"	"07030100.670108"	"""C-1-8] MUST challenge the user for the recommended primary authentication (eg: PIN, pattern, password) or Class 3 (STRONG) biometric after one of the following: a 4-hour idle timeout period, OR 3 failed biometric authentication attempts. The idle timeout period and the failed authentication count is reset after any successful confirmation of the device credentials. Upgrading devices from an earlier Android version can be exempted from C-1-8. | C-1-8] for new devices. | C-1-8]. Upgrading devices from an earlier Android version are not exempted from C-2-7."""	""	""	"PIN STRONG"	""	""	""	""	"[('android.server.wm.AppConfigurationTests', 25), ('android.server.wm.KeyguardLockedTests', 6), ('android.media.cts.AudioPlaybackConfigurationTest', 3), ('android.media.cts.AudioManagerTest', 2), ('android.graphics.pdf.cts.Utils', 1), ('android.server.wm.SplashscreenTests', 1), ('android.view.cts.ViewAnimationMatrixTest', 1), ('com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite', 1), ('android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackup2Test', 1), ('main.java.com.android.eventlib.EventLogs', 1), ('android.slice.cts.LocalSliceProvider', 1), ('android.jdwptunnel.cts.JdwpTunnelTest', 1)]"	"[('getWidth', 12), ('getHeight', 10), ('next', 7), ('poll', 7), ('getQuerier', 4), ('recycle', 3), ('getName', 3), ('run', 2), ('getClass', 2), ('now', 2), ('get', 2), ('resetLogs', 2), ('onCreate', 2), ('setUp', 2), ('getCacheDir', 1), ('getResources', 1), ('flush', 1), ('Matrix', 1), ('width', 1), ('height', 1), ('waitForEvent', 1), ('withSettings', 1), ('supportsSecureLock', 1)]"	"[('CtsWindowManagerDeviceTestCases', 32), ('CtsMediaTestCases', 5), ('CtsPdfTestCases', 1), ('CtsViewTestCases', 1), ('CtsSliceTestCases', 1), ('CtsJdwpTunnelHostTestCases', 1)]"	""	"android.server.wm.AppConfigurationTests"	"supportsSecureLock"	"CtsWindowManagerDeviceTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 25), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher2/src/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/eventlib/src/main/java/com/android/eventlib/EventLogs.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/slice/src/android/slice/cts/LocalSliceProvider.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1)]"	"[('(26,PIN,/android/graphics/pdf/cts/Utils.java)', 1), ('(3,PIN,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(3,PIN,/android/server/wm/SplashscreenTests.java)', 1), ('(1,PIN,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(3,PIN,/android/media/cts/AudioManagerTest.java)', 1), ('(1,PIN,/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java)', 1), ('(1,PIN,/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java)', 1), ('(2,PIN,/main/java/com/android/eventlib/EventLogs.java)', 1), ('(9,PIN,/android/slice/cts/LocalSliceProvider.java)', 1), ('(1,PIN,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(12,PIN,/android/server/wm/KeyguardLockedTests.java)', 1), ('(32,PIN,/android/server/wm/AppConfigurationTests.java)', 1)]"	"[('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[PIN]:[1]:method_text:[           if (h != null) {                h.getLooper().quit();            }        }    }   ])', 2), ('([2:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[2]:method_text:[tKeyguardShowingAndNotOccluded();        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 2), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[h has     * rotation sensing optimization. So this is listed in cts-known-failures.xml.     */   ])', 2), ('([26:/android/graphics/pdf/cts/Utils.java]:[PIN]:[26]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[PIN]:[1]:method_text:[t HAL, skipping test "" + testName);            return false;        }        return true;    }}])', 1), ('([3:/android/server/wm/SplashscreenTests.java]:[PIN]:[3]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([1:/android/view/cts/ViewAnimationMatrixTest.java]:[PIN]:[1]:method_text:[ j++) {                assertEquals(color, bitmap.getPixel(i, j));            }        }    }}])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[PIN]:[1]:method_text:[        if (!isMusicPlayingBeforeTest) {            assertMusicActive(false);        }    }   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[PIN]:[2]:method_text:[:"" + microphone.getDirectionality());            Log.i(TAG, ""--------------"");        }    }   ])', 1), ('([1:/com/android/cts/verifier/p2p/testcase/GoNegReqTestSuite.java]:[PIN]:[1]:method_text:[new GoNegReqPbcTestCase(context));        sTestSuite.add(new GoNegReqPinTestCase(context));    }}])', 1), ('([1:/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackup2Test.java]:[PIN]:[1]:method_text:[oOriginalList()                .selectByIds(""s3"", ""ms2"")                .areAllDisabled();   }}])', 1), ('([2:/main/java/com/android/eventlib/EventLogs.java]:[PIN]:[2]:method_text:[ed.     */    public E waitForEvent() {        return waitForEvent(DEFAULT_POLL_TIMEOUT);    }}])', 1), ('([9:/android/slice/cts/LocalSliceProvider.java]:[PIN]:[9]:method_text:[CreatePermissionRequest(sliceUri);        return super.onCreatePermissionRequest(sliceUri);    }}])', 1), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[PIN]:[1]:method_text:[ sent big-endian so first byte has sign bit.        assertTrue((is.read() & 0x80) == 0x80);    }}])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[1]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([4:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[4]:method_text:[t contain pinned stack."", WINDOWING_MODE_PINNED,                ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([2:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[2]:method_text:[SHOW_WHEN_LOCKED_ACTIVITY, true);        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[1]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[nResizedFromFullscreen()} but resizing     * from docked state to fullscreen (reverse).     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[;    }    /**     * Tests whether the Display sizes change when rotating the device.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[datesWhenRotatingWhileFullscreen()} but when the Activity     * is in the docked stack.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[tatingWhileDocked()} but when the Activity     * is launched to side from docked stack.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ Activity will be     * relaunched twice and it should have same config as initial one.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ivity with the DialogWhenLarge theme can transform properly when in split     * screen.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ Test that device handles consequent requested orientations and displays the activities.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[should be in portrait"",                ORIENTATION_PORTRAIT, reportedSizes.orientation);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[uested orientations and will not report a config     * change to an invisible activity.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[y visible activity"",                initialOrientation, finalReportedSizes.orientation);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[),                new Point(globalSizeInfo.metricsWidth, globalSizeInfo.metricsHeight));    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[**     * Test that device handles moving between two tasks with different orientations.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[evice is rotated.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[text derived from an application context     * will not change when the device rotates.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[context derived from an activity context     * will not change when the device rotates.     */   ])', 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[PIN]:[3]:method_text:[**     * Test that device handles moving between two tasks with different orientations.     */   ])', 1), (""([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[Test that device doesn't change device orientation by app request while in multi-window.     */   ])"", 1), (""([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[Test that device doesn't change device orientation by app request while in multi-window.     */   ])"", 1), ('([2:/android/server/wm/AppConfigurationTests.java]:[PIN]:[2]:method_text:[  /**     * Test launching an activity which requests specific UI mode during creation.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[ dockedActivitySizes);        assertSizesAreSame(dockedActivitySizes, applicationSizes);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[Sizes);        assertSizesAreSane(fullscreenActivitySizes, secondarySplitActivitySizes);    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[PIN]:[1]:method_text:[tivitySession activitySession) {        return activitySession.getAppConfigInfo().sizeInfo;    }}])', 1)]"	""	""	"[('PIN', 44)]"	"[('[android.media.cts.AudioPlaybackConfigurationTest testCallbackMediaPlayerHandler CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testCallbackMediaPlayerRelease CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetAudioDeviceInfoMediaPlayerStart CtsMediaTestCases]', 1), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.view.cts.ViewAnimationMatrixTest testAnimationMatrixClearedWithPassingNull CtsViewTestCases]', 1), ('[android.media.cts.AudioManagerTest testVolume CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testGetMicrophones CtsMediaTestCases]', 1), ('[com.android.cts.verifier.p2p.testcase.GoNegReqTestSuite getTestId None]', 1), ('[android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackup2Test testPreBackup None]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest testDdmsWaitsForHandshake CtsJdwpTunnelHostTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testEnterPipOverKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedActivityAndPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromFullscreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenResizedFromDockedStack CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingWhileFullscreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingWhileDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testConfigurationUpdatesWhenRotatingToSideFromDocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSameConfigurationFullSplitFullNoRelaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testDialogWhenLargeSplitSmall CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testFullscreenAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testNonfullscreenAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationRequestConfigChanges CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationRequestConfigClears CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testRotatedInfoWithFixedRotationTransform CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testNonFullscreenActivityPermitted CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testTaskCloseRestoreFixedOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testTaskCloseRestoreFreeOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testFixedOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testTaskMoveToBackOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenPortraitAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenLandscapeAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesTopActivityInMultiWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppConfigurationMatchesActivityInFreeform CtsWindowManagerDeviceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"5.1  . Capture for Unprocessed"	"5.1"	"C-1-4"	"5.1/C-1-4"	"05010000.670104"	"""C-1-4] MUST report support for feature android.software.midi. | C-1-4] MUST exhibit amplitude levels in the high frequency range: specifically from &plusmn;30 dB from 7000 Hz to 22 KHz compared to the mid-frequency range for each and every microphone used to record the unprocessed audio source."""	""	""	"android.software.midi"	""	""	""	""	"[('com.android.cts.verifier.audio.MidiTestActivityBase', 1)]"	""	""	""	"com.android.cts.verifier.audio.MidiTestActivityBase"	""	""	"[('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/MidiTestActivityBase.java', 1)]"	"[('(1,android.software.midi,/com/android/cts/verifier/audio/MidiTestActivityBase.java)', 1)]"	"[('([1:/com/android/cts/verifier/audio/MidiTestActivityBase.java]:[android.software.midi]:[1]:method_text:[      }            };            mTimeoutTimer.schedule(task, TEST_TIMEOUT_MS);        }    }}])', 1)]"	""	""	"[('android.software.midi', 1)]"	"[('[com.android.cts.verifier.audio.MidiTestActivityBase MidiTestActivityBase None]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.1  . These are in the Android source tree at"	"7.1.4.1"	"C-1-1"	"7.1.4.1/C-1-1"	"07010401.670101"	"""C-1-1] MUST support both OpenGL ES 1.1 and 2.0, as embodied and detailed in the Android SDK documentation."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.2.4  . Wi"	"7.4.2.4"	"C-1-5"	"7.4.2.4/C-1-5"	"07040204.670105"	"""C-1-5] MUST follow the AOSP implementation to discover, match and associate to Passpoint networks."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.5"	"7.1.4.5"	"C-2-1"	"7.1.4.5/C-2-1"	"07010405.670201"	"""C-2-1] SHOULD cover 100% or more of sRGB in CIE 1931 xyY space, although the screen color gamut is undefined. <h4 id=""715_legacy_application_compatibility_mode"" """	""	""	"CIE RGB"	""	""	""	""	"[('android.graphics.cts.BitmapColorSpaceTest', 41), ('android.graphics.drawable.cts.IconTest', 6), ('android.view.inputmethod.cts.BaseInputConnectionTest', 2), ('android.graphics.cts.PaintFlagsDrawFilterTest', 2), ('android.widget.cts.util.TestUtils', 2), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 2), ('android.media.cts.DecodeAccuracyTestBase', 2), ('android.graphics.pdf.cts.Utils', 1), ('android.server.wm.SplashscreenTests', 1), ('android.view.cts.ViewAnimationMatrixTest', 1), ('android.graphics.cts.VulkanPreTransformTest', 1), ('android.keystore.cts.DESedeCipherTestBase', 1), ('android.jdwptunnel.cts.JdwpTunnelTest', 1), ('android.graphics.cts.ColorMatrixColorFilterTest', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer', 1), ('android.media.cts.DecodeEditEncodeTest', 1), ('android.content.pm.cts.ComponentInfoTest', 1), ('android.accessibilityservice.cts.utils.DisplayUtils', 1), ('android.app.cts.WallpaperColorsTest', 1), ('android.uirendering.cts.testclasses.GradientTests', 1), ('GLtestView', 1), ('android.media.cts.LocalMediaProjectionService', 1), ('android.keystore.cts.BlockCipherTestBase', 1), ('com.android.cts.managedprofile.CrossProfileWidgetTest', 1), ('android.renderscript.cts.TypeTest', 1), ('android.net.wifi.cts.ConnectedNetworkScorerTest', 1), ('android.graphics.cts.BitmapFactory_OptionsTest', 1), ('com.android.compatibility.common.util.BitmapUtils', 1), ('android.content.pm.cts.InstallSessionParamsUnitTest', 1), ('android.graphics.drawable.cts.ThemedDrawableTest', 1), ('android.security.cts.LaunchSomeWhere', 1), ('android.renderscript.cts.refocus.RefocusFilter', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerHostSideTransferTest', 1), ('android.uirendering.cts.testclasses.SweepTests', 1)]"	"[('getColorSpace', 60), ('getWidth', 42), ('getHeight', 38), ('getAssets', 31), ('fail', 28), ('Options', 21), ('elapsedRealtime', 14), ('decoderRelease', 10), ('getConfig', 9), ('release', 8), ('setUp', 7), ('compareBitmaps', 7), ('reset', 6), ('getResources', 5), ('recycle', 5), ('now', 4), ('getIntent', 4), ('startDecoder', 4), ('queueDecoderInputBuffer', 4), ('dequeueDecoderOutputBuffer', 4), ('extractorRelease', 4), ('getClass', 3), ('getName', 3), ('stream', 3), ('getRgbColorSpaces', 3), ('booleanValue', 3), ('getSimpleName', 3), ('flush', 2), ('Matrix', 2), ('run', 2), ('getDevice', 2), ('moveToHomeScreen', 2), ('name', 2), ('findFirst', 2), ('trim', 2), ('createWithNonRgbColorSpace', 2), ('inColorSpaceNotRGB', 2), ('getByteCount', 2), ('rewind', 2), ('asIntBuffer', 2), ('get', 2), ('getPixels', 2), ('toArray', 2), ('ByteArrayOutputStream', 2), ('toByteArray', 2), ('eglGetError', 2), ('startForeground', 2), ('onDestroy', 2), ('createNotificationIcon', 2), ('getBackground', 2), ('getReceiverComponentName', 2), ('myUserId', 2), ('getActivity', 2), ('getApplicationContext', 2), ('tearDown', 2), ('bringActivityToFront', 2), ('getHelper', 2), ('MediaExtractor', 2), ('failToStart', 2), ('PlayerResult', 2), ('getMediaFormat', 2), ('getInputBuffers', 2), ('getSampleTime', 2), ('advance', 2), ('BufferInfo', 2), ('getOutputBuffers', 2), ('clear', 2), ('getAssetFileDescriptor', 2), ('getFileDescriptor', 2), ('getStartOffset', 2), ('getLength', 2), ('close', 2), ('start', 2), ('stop', 2), ('getCacheDir', 1), ('width', 1), ('height', 1), ('virtualMachineManager', 1), ('attachingConnectors', 1), ('transport', 1), ('defaultArguments', 1), ('eventRequestManager', 1), ('suspend', 1), ('allClasses', 1), ('createClassPrepareRequest', 1), ('enable', 1), ('resume', 1), ('eventQueue', 1), ('remove', 1), ('request', 1), ('referenceType', 1), ('Object', 1), ('setUpExtrinsics', 1), ('getLocation', 1), ('getRingRotation', 1), ('doPreRenderingSetup', 1), ('createWithColorSpace', 1), ('createAlpha8ColorSpace', 1), ('createDefaultColorSpace', 1), ('createWithoutColorSpace', 1), ('createWithNoTransferParameters', 1), ('createFromSourceWithColorSpace', 1), ('sRGB', 1), ('extendedSRGB', 1), ('linearSRGB', 1), ('reconfigure', 1), ('reuse', 1), ('getPixel', 1), ('setPixel', 1), ('setPixels', 1), ('writeColorSpace', 1), ('obtain', 1), ('p3rgb565', 1), ('guessSRGB', 1), ('guess16bitUntagged', 1), ('guessProPhotoRGB', 1), ('guessAdobeRGB', 1), ('guessCMYK', 1), ('inColorSpaceP3ToSRGB', 1), ('inColorSpaceSRGBToP3', 1), ('inColorSpaceWith16BitSrc', 1), ('inColorSpaceWith16BitDst', 1), ('inColorSpaceWith16BitSrcAndDst', 1), ('inColorSpaceWith16BitWithDecreasedGamut', 1), ('inColorSpace565', 1), ('inColorSpaceNoTransferParameters', 1), ('copyF16', 1), ('copyAlpha8', 1), ('copy', 1), ('compressFormatsAndColorSpaces', 1), ('values', 1), ('Rect', 1), ('getWindow', 1), ('getDecorView', 1), ('getSurface', 1), ('eglChooseConfig', 1), ('GLSurfaceView', 1), ('getHolder', 1), ('ContextFactory', 1), ('Renderer', 1), ('chooseConfig', 1), ('step', 1), ('LocalBinder', 1), ('getService', 1), ('build', 1), ('BitmapUtils', 1), ('Random', 1), ('mkdirs', 1), ('printStackTrace', 1), ('AbandonAllPackageSessionsRule', 1), ('getInstrumentation', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getPackageInstaller', 1), ('getParameters', 1), ('getMySessions', 1), ('getSessionId', 1), ('waitForDeviceAvailable', 1), ('getFocusLayer', 1), ('extractResultImage', 1)]"	"[('CtsGraphicsTestCases', 53), ('CtsMediaTestCases', 3), ('CtsKeystoreTestCases', 2), ('CtsContentTestCases', 2), ('CtsUiRenderingTestCases', 2), ('CtsInputMethodTestCases', 2), ('CtsRenderscriptTestCases', 2), ('CtsWidgetTestCases', 2), ('CtsPdfTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsViewTestCases', 1), ('CtsJdwpTunnelHostTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsAppTestCases', 1), ('CtsWifiTestCases', 1), ('CtsSecurityBulletinHostTestCases', 1), ('CtsDevicePolicyManagerTestCases', 1)]"	""	"android.uirendering.cts.testclasses.SweepTests"	"getHeight"	"CtsUiRenderingTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapColorSpaceTest.java', 41), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/IconTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/BaseInputConnectionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintFlagsDrawFilterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/util/TestUtils.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeAccuracyTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanPreTransformTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/DESedeCipherTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ColorMatrixColorFilterTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ComponentInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/utils/DisplayUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/WallpaperColorsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/GradientTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sustainedperf/shadertoy_android/src/GLtestView.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/LocalMediaProjectionService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/BlockCipherTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileWidgetTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/TypeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConnectedNetworkScorerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapFactory_OptionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/BitmapUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/InstallSessionParamsUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/ThemedDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/LaunchSomeWhere.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusFilter.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/SweepTests.java', 1)]"	"[('(6,RGB,/android/graphics/pdf/cts/Utils.java)', 1), ('(2,RGB,/android/server/wm/SplashscreenTests.java)', 1), ('(1,RGB,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(1,RGB,/android/graphics/cts/VulkanPreTransformTest.java)', 1), ('(1,CIE,/android/keystore/cts/DESedeCipherTestBase.java)', 1), ('(1,CIE,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(2,RGB,/android/graphics/cts/ColorMatrixColorFilterTest.java)', 1), ('(1,RGB,/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java)', 1), ('(4,RGB,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(2,CIE,/android/graphics/cts/BitmapColorSpaceTest.java)', 1), ('(180,RGB,/android/graphics/cts/BitmapColorSpaceTest.java)', 1), ('(1,RGB,/android/content/pm/cts/ComponentInfoTest.java)', 1), ('(1,RGB,/android/accessibilityservice/cts/utils/DisplayUtils.java)', 1), ('(1,RGB,/android/app/cts/WallpaperColorsTest.java)', 1), ('(1,RGB,/android/uirendering/cts/testclasses/GradientTests.java)', 1), ('(6,RGB,/android/graphics/drawable/cts/IconTest.java)', 1), ('(5,RGB,/GLtestView.java)', 1), ('(2,CIE,/android/view/inputmethod/cts/BaseInputConnectionTest.java)', 1), ('(1,RGB,/android/media/cts/LocalMediaProjectionService.java)', 1), ('(4,RGB,/android/graphics/cts/PaintFlagsDrawFilterTest.java)', 1), ('(4,CIE,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(1,CIE,/com/android/cts/managedprofile/CrossProfileWidgetTest.java)', 1), ('(3,RGB,/android/renderscript/cts/TypeTest.java)', 1), ('(1,CIE,/android/widget/cts/util/TestUtils.java)', 1), ('(4,RGB,/android/widget/cts/util/TestUtils.java)', 1), ('(1,CIE,/android/net/wifi/cts/ConnectedNetworkScorerTest.java)', 1), ('(8,RGB,/android/graphics/cts/BitmapFactory_OptionsTest.java)', 1), ('(4,RGB,/com/android/compatibility/common/util/BitmapUtils.java)', 1), ('(1,RGB,/android/content/pm/cts/InstallSessionParamsUnitTest.java)', 1), ('(1,RGB,/android/graphics/drawable/cts/ThemedDrawableTest.java)', 1), ('(2,CIE,/android/security/cts/LaunchSomeWhere.java)', 1), ('(2,RGB,/android/renderscript/cts/refocus/RefocusFilter.java)', 1), ('(2,CIE,/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java)', 1), ('(12,CIE,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(1,RGB,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(12,CIE,/android/media/cts/DecodeAccuracyTestBase.java)', 1), ('(39,RGB,/android/media/cts/DecodeAccuracyTestBase.java)', 1), ('(1,RGB,/android/uirendering/cts/testclasses/SweepTests.java)', 1)]"	"[('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[2]:method_text:[e.Named.DISPLAY_P3), cs);        } catch (IOException e) {            fail();        }    }   ])', 3), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[3]:method_text:[ace, opts.outColorSpace);        } catch (IOException e) {            fail();        }    }   ])', 2), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[1]:method_text:[deStream(in, null, opts);        } catch (IOException e) {            fail();        }    }   ])', 2), ('([6:/android/graphics/pdf/cts/Utils.java]:[RGB]:[6]:method_text:[n throw an exception.     */    interface Invokable {        void run() throws Exception;    }}])', 1), ('([2:/android/server/wm/SplashscreenTests.java]:[RGB]:[2]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([1:/android/view/cts/ViewAnimationMatrixTest.java]:[RGB]:[1]:method_text:[ j++) {                assertEquals(color, bitmap.getPixel(i, j));            }        }    }}])', 1), ('([1:/android/graphics/cts/VulkanPreTransformTest.java]:[RGB]:[1]:method_text:[iff(bitmap.getPixel(width - 1, height - 1), 0, 255, 0);        }        return diff < 10;    }}])', 1), ('([1:/android/keystore/cts/DESedeCipherTestBase.java]:[CIE]:[1]:method_text:[            super.testUpdateWithEmptyInputReturnsCorrectValue();        }    }    @Override   ])', 1), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[CIE]:[1]:method_text:[of the activity     * class and put and wait for a breakpoint on the onCreate function.     */   ])', 1), ('([2:/android/graphics/cts/ColorMatrixColorFilterTest.java]:[RGB]:[2]:method_text:[rawPoint(0, 0, paint);        ColorUtils.verifyColor(Color.BLUE, bitmap.getPixel(0, 0));    }   ])', 1), ('([1:/com/android/cts/verifier/sensors/sixdof/Renderer/ComplexMovementRenderer.java]:[RGB]:[1]:method_text:[        yScale * height / 2.0f,                near, far);        return projectionMatrix;    }}])', 1), ('([4:/android/media/cts/DecodeEditEncodeTest.java]:[RGB]:[4]:method_text:[                  throw new RuntimeException(ioe);                }            }        }    }}])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[CIE]:[1]:method_text:[Bitmap.Config.ARGB_8888, true,                ColorSpace.get(ColorSpace.Named.CIE_LAB));    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[CIE]:[1]:method_text:[deStream(in, null, opts);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([26:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[26]:method_text:[                    assertSame(linearRgb, cs);                }            }        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[1]:method_text:[tmap.Config.ALPHA_8, true, cs);            assertNull(bitmap.getColorSpace());        }    }   ])', 1), ('([5:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[5]:method_text:[ap(32, 32, config, true);            assertSame(sRGB, bitmap.getColorSpace());        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[1]:method_text:[tColorSpace() {        Bitmap.createBitmap(32, 32, Bitmap.Config.ARGB_8888, true, null);    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[2]:method_text:[Bitmap.Config.ARGB_8888, true,                ColorSpace.get(ColorSpace.Named.CIE_LAB));    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[2]:method_text:[       x -> Math.pow(x, 1.0f / 2.2f), x -> Math.pow(x, 2.2f),                    0, 1));    }   ])', 1), ('([11:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[11]:method_text:[etColorSpace());                        break;                }            }        }    }   ])', 1), ('([4:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[4]:method_text:[        assertNotNull(cs);        assertSame(ColorSpace.get(ColorSpace.Named.SRGB), cs);    }   ])', 1), ('([5:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[5]:method_text:[amed.EXTENDED_SRGB), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([8:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[8]:method_text:[            this.name = name;            this.colorSpace = ColorSpace.get(e);        }    };   ])', 1), ('([5:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[5]:method_text:[h (IOException e) {                    fail();                }            }        }    }   ])', 1), ('([7:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[7]:method_text:[255.0f / alpha,                alpha, premulCS, ColorSpace.get(ColorSpace.Named.SRGB)));    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[1]:method_text:[         int pixel = pixels[i];            almostEqual(expected, pixel, 3, i);        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[1]:method_text:[Stored as RGBA        ColorUtils.verifyColor(expectedColor, dst.asIntBuffer().get(), 1);    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[1]:method_text:[red as RGBA            ColorUtils.verifyColor(expectedColor, buffer.get(), 1);        }    }   ])', 1), ('([5:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[5]:method_text:[ace();        assertNotNull(cs);        assertSame(expected, cs);        p.recycle();    }   ])', 1), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[3]:method_text:[orSpace.Named.SRGB), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[2]:method_text:[amed.EXTENDED_SRGB), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[2]:method_text:[amed.PRO_PHOTO_RGB), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[3]:method_text:[ce.Named.ADOBE_RGB), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[1]:method_text:[orSpace.Named.SRGB), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[3]:method_text:[fyGetPixel(b, 0x2ff00ff);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[2]:method_text:[yGetPixel(b, 0x75fb4cff);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([3:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[3]:method_text:[amed.EXTENDED_SRGB), cs);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[2]:method_text:[ace, opts.outColorSpace);        } catch (IOException e) {            fail();        }    }   ])', 1), ('([13:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[13]:method_text:[    assertSame(srcCS[i], copy.getColorSpace());                }            }        }    }   ])', 1), ('([6:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[6]:method_text:[   ColorSpace.get(ColorSpace.Named.SRGB), copy2.getColorSpace());            }        }    }   ])', 1), ('([10:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[10]:method_text:[itmap.CompressFormat.values(),                BitmapTest.getRgbColorSpaces().toArray());    }   ])', 1), ('([12:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[12]:method_text:[      }        } catch (IOException e) {            fail(""Failed with "" + e);        }    }   ])', 1), ('([5:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[5]:method_text:[        }        } catch (Exception e) {            fail(""Failed with "" + e);        }    }   ])', 1), ('([6:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[6]:method_text:[ot convert properly"", expected,                    dst.getColor(0, 0), .001f);        }    }   ])', 1), ('([8:/android/graphics/cts/BitmapColorSpaceTest.java]:[RGB]:[8]:method_text:[ = true;                break;            }        }        assertTrue(foundOtherColor);    }}])', 1), ('([1:/android/content/pm/cts/ComponentInfoTest.java]:[RGB]:[1]:method_text:[d.setBounds(0, 0, size, size);        d.draw(new Canvas(bitmap));        return bitmap;    }   ])', 1), ('([1:/android/accessibilityservice/cts/utils/DisplayUtils.java]:[RGB]:[1]:method_text:[ger.unregisterDisplayListener(listener);            }            return display;        }    }}])', 1), ('([1:/android/app/cts/WallpaperColorsTest.java]:[RGB]:[1]:method_text:[NotNull(colors.getPrimaryColor());        Assert.assertNull(colors.getSecondaryColor());    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/GradientTests.java]:[RGB]:[1]:method_text:[ srcCanvas.drawRect(0f, 0f, TEST_WIDTH, TEST_HEIGHT, srcPaint);        return srcBitmap;    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[RGB]:[1]:method_text:[            Icon.createWithBitmap(Bitmap.createBitmap(16, 16, Bitmap.Config.ARGB_8888)));    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[RGB]:[1]:method_text:[thAdaptiveBitmap(                Bitmap.createBitmap(16, 16, Bitmap.Config.ARGB_8888)));    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[RGB]:[1]:method_text:[Thread.sleep(TIMEOUT_MS);        verify(mockListener, times(1)).onDrawableLoaded(any());    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[RGB]:[1]:method_text:[d timeout        Thread.sleep(TIMEOUT_MS);        verify(mockRunnable, times(1)).run();    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[RGB]:[1]:method_text:[6, 16, Bitmap.Config.ARGB_8888));        assertEquals(Icon.TYPE_BITMAP, icon.getType());    }   ])', 1), ('([1:/android/graphics/drawable/cts/IconTest.java]:[RGB]:[1]:method_text:[tmap.Config.ARGB_8888));        assertEquals(Icon.TYPE_ADAPTIVE_BITMAP, icon.getType());    }   ])', 1), ('([5:/GLtestView.java]:[RGB]:[5]:method_text:[blic void onSurfaceCreated(GL10 gl, EGLConfig config) {            // Do nothing.        }    }}])', 1), ('([1:/android/view/inputmethod/cts/BaseInputConnectionTest.java]:[CIE]:[1]:method_text:[    * Tests {@link BaseInputConnection#deleteSurroundingText(int, int)} comprehensively.     */   ])', 1), ('([1:/android/view/inputmethod/cts/BaseInputConnectionTest.java]:[CIE]:[1]:method_text:[BaseInputConnection#deleteSurroundingTextInCodePoints(int, int)}     * comprehensively.     */   ])', 1), ('([1:/android/media/cts/LocalMediaProjectionService.java]:[RGB]:[1]:method_text:[ext(""Context"")                .build();        startForeground(2 /* id */, notification);    }}])', 1), ('([2:/android/graphics/cts/PaintFlagsDrawFilterTest.java]:[RGB]:[2]:method_text:[assertTrue(rect.top >= TEXT_Y);    }    // Tests that FILTER_BITMAP_FLAG is handled properly.   ])', 1), ('([2:/android/graphics/cts/PaintFlagsDrawFilterTest.java]:[RGB]:[2]:method_text:[           assertTrue(color == Color.BLACK || color == Color.WHITE);            }        }    }}])', 1), ('([4:/android/keystore/cts/BlockCipherTestBase.java]:[CIE]:[4]:method_text:[    assertEquals(0, update(ByteBuffer.allocate(1), ByteBuffer.allocate(getBlockSize())));    }   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileWidgetTest.java]:[CIE]:[1]:method_text:[ and verifies that     * if was added successfully and can be found inside the profile.     */   ])', 1), ('([3:/android/renderscript/cts/TypeTest.java]:[RGB]:[3]:method_text:[lderHelper(Element.TYPE(mRS));        // Add some complex and struct types to test here    }   ])', 1), ('([1:/android/widget/cts/util/TestUtils.java]:[CIE]:[1]:method_text:[                    ((BitmapDrawable) compoundDrawablesRelative[3]).getBitmap());        }    }}])', 1), ('([4:/android/widget/cts/util/TestUtils.java]:[RGB]:[4]:method_text:[                    ((BitmapDrawable) compoundDrawablesRelative[3]).getBitmap());        }    }}])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[CIE]:[1]:method_text:[* Tests the {@link android.net.wifi.WifiManager#updateWifiUsabilityScore(int, int, int)}     */   ])', 1), ('([8:/android/graphics/cts/BitmapFactory_OptionsTest.java]:[RGB]:[8]:method_text:[s);        assertNull(b);        assertEquals(Bitmap.Config.ARGB_8888, options.outConfig);    }}])', 1), ('([4:/com/android/compatibility/common/util/BitmapUtils.java]:[RGB]:[4]:method_text:[Color.blue(actual) - Color.blue(expect);            return r * r + g * g + b * b;        }    }}])', 1), ('([1:/android/content/pm/cts/InstallSessionParamsUnitTest.java]:[RGB]:[1]:method_text:[onId) {                return sessionInfo;            }        }        return null;    }   ])', 1), ('([1:/android/graphics/drawable/cts/ThemedDrawableTest.java]:[RGB]:[1]:method_text:[(bitmap);        d.draw(canvas);        assertEquals(0xff0000ff, bitmap.getPixel(32, 32));    }}])', 1), ('([2:/android/security/cts/LaunchSomeWhere.java]:[CIE]:[2]:method_text:[    if (device.waitForDeviceNotAvailable(9_000))            device.waitForDeviceAvailable();    }])', 1), ('([2:/android/renderscript/cts/refocus/RefocusFilter.java]:[RGB]:[2]:method_text:[ filterLayerInFrontOfFocalDepth();  protected abstract void finalizeFuzzyImageUsingSharpImage();}])', 1), ('([2:/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java]:[CIE]:[2]:method_text:[NCOMING_TEST);            installAppAsUser(TRANSFER_OWNER_INCOMING_APK, mUserId);        }    }}])', 1), ('([12:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[CIE]:[12]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[RGB]:[1]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([12:/android/media/cts/DecodeAccuracyTestBase.java]:[CIE]:[12]:method_text:[blic static boolean isVideo(String mimeType) {        return mimeType.startsWith(""video"");    }}])', 1), ('([39:/android/media/cts/DecodeAccuracyTestBase.java]:[RGB]:[39]:method_text:[blic static boolean isVideo(String mimeType) {        return mimeType.startsWith(""video"");    }}])', 1), ('([1:/android/uirendering/cts/testclasses/SweepTests.java]:[RGB]:[1]:method_text:[LT_MSSIM_COMPARER = new BitmapComparer[] {            new MSSIMComparer(HIGH_THRESHOLD)    };   ])', 1)]"	""	""	"[('RGB', 70), ('CIE', 14)]"	"[('[android.graphics.cts.BitmapColorSpaceTest isMutable CtsGraphicsTestCases]', 2), ('[android.widget.cts.util.TestUtils isVisible CtsWidgetTestCases]', 2), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 2), ('[android.media.cts.DecodeAccuracyTestBase isAbrEnabled CtsMediaTestCases]', 2), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[android.view.cts.ViewAnimationMatrixTest testAnimationMatrixClearedWithPassingNull CtsViewTestCases]', 1), ('[android.graphics.cts.VulkanPreTransformTest testVulkanPreTransformNotSetToMatchCurrentTransform CtsGraphicsTestCases]', 1), ('[android.keystore.cts.DESedeCipherTestBase testUpdateDoesNotProduceOutputWhenInsufficientInput CtsKeystoreTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest disable CtsJdwpTunnelHostTestCases]', 1), ('[android.graphics.cts.ColorMatrixColorFilterTest testColorMatrixColorFilter CtsGraphicsTestCases]', 1), ('[com.android.cts.verifier.sensors.sixdof.Renderer.ComplexMovementRenderer doTestSpecificRendering None]', 1), ('[android.media.cts.DecodeEditEncodeTest testVideoEdit720p CtsMediaTestCases]', 1), ('[android.graphics.cts.BitmapColorSpaceTest test16bitHardware CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapColorSpaceTest testProPhoto CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapColorSpaceTest testGrayscaleProfile CtsGraphicsTestCases]', 1), ('[android.content.pm.cts.ComponentInfoTest testConstructor CtsContentTestCases]', 1), ('[android.accessibilityservice.cts.utils.DisplayUtils getDisplay CtsAccessibilityServiceTestCases]', 1), ('[android.app.cts.WallpaperColorsTest fromBitmapTest CtsAppTestCases]', 1), ('[android.uirendering.cts.testclasses.GradientTests testMismatchColorsAndStopsThrows CtsUiRenderingTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testBitmapIcon CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testAdaptiveBitmapIcon CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testLoadDrawableAsync CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testLoadDrawableAsyncWithMessage CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testBitmapIcon_getType CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.IconTest testAdaptiveBitmapIcon_getType CtsGraphicsTestCases]', 1), ('[android.view.inputmethod.cts.BaseInputConnectionTest testReportFullscreenMode CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.BaseInputConnectionTest testDeleteSurroundingText CtsInputMethodTestCases]', 1), ('[android.graphics.cts.PaintFlagsDrawFilterTest testPaintFlagsDrawFilter CtsGraphicsTestCases]', 1), ('[android.graphics.cts.PaintFlagsDrawFilterTest testPaintFlagsDrawFilter2 CtsGraphicsTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testUpdateDoesNotProduceOutputWhenInsufficientInput CtsKeystoreTestCases]', 1), ('[android.renderscript.cts.TypeTest testTypeBuilder CtsRenderscriptTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testWifiUsabilityStatsEntry CtsWifiTestCases]', 1), ('[android.graphics.cts.BitmapFactory_OptionsTest testExtractMetaData CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.ThemedDrawableTest testVectorDrawableWithStateListColorThemeAttrs CtsGraphicsTestCases]', 1), ('[android.renderscript.cts.refocus.RefocusFilter finish CtsRenderscriptTestCases]', 1), ('[android.uirendering.cts.testclasses.SweepTests DisplayModifier CtsUiRenderingTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-2-2"	"9.8/H-2-2"	"09080000.720202"	"""[9.8/H-2-2] MUST NOT preserve raw audio data, or data derived from it, through the hotword detection service. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.5.2  . Application Hibernation"	"3.5.2"	"C-1-1"	"3.5.2/C-1-1"	"03050200.670101"	"""C-1-1] MUST meet all the requirements in section 3.5.1 except for"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.4"	"7.1.4.4"	"C-0-2"	"7.1.4.4/C-0-2"	"07010404.670002"	"""C-0-2] MUST exhibit behavior consistent with the Android SDK documentation on hardware acceleration. Android includes a TextureView object that lets developers directly integrate hardware-accelerated OpenGL ES textures as rendering targets in a UI hierarchy. Device implementations:"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.2  .  These are in the Android source tree at"	"7.1.4.2"	"C-2-2"	"7.1.4.2/C-2-2"	"07010402.670202"	"""C-2-2] MUST NOT enumerate any VkPhysicalDevice for the Vulkan native API vkEnumeratePhysicalDevices(). If device implementations include support for Vulkan 1.1 and declare any of the Vulkan feature flags, they:"""	""	""	"vkEnumeratePhysicalDevices()"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"5.1  . Multimedia Compatibility"	"5.1"	"C-0-1"	"5.1/C-0-1"	"05010000.670001"	"""C-0-1] MUST support the media formats, encoders, decoders, file types, and container formats defined in section 5.1 for each and every codec declared by MediaCodecList."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"5.1  . Multimedia Compatibility"	"5.1"	"C-0-2"	"5.1/C-0-2"	"05010000.670002"	"""C-0-2] MUST declare and report support of the encoders, decoders available to third-party applications via MediaCodecList."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.1  . Telephony"	"7.4.1"	"C-5-1"	"7.4.1/C-5-1"	"07040100.670501"	"""C-5-1] MUST declare the android.hardware.telephony.ims feature flag and provide a complete implementation of the ImsService API for both MMTEL and RCS User Capability Exchange API."""	""	""	"android.hardware.telephony.ims RCS MMTEL"	""	""	""	""	"[('android.telephony.ims.cts.ImsServiceTest', 59), ('android.telephony.ims.cts.TestSipTransport', 1), ('android.telephony.ims.cts.TestImsConfig', 1), ('android.media.cts.MediaMuxerTest', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('android.telephony.ims.cts.TestAcsClient', 1), ('android.mediav2.cts.CodecTestBase', 1), ('android.video.cts.VideoEncoderDecoderTest', 1), ('android.telephony.ims.cts.TestMmTelFeature', 1)]"	"[('close', 11), ('countDown', 5), ('lock', 5), ('getSurface', 4), ('unlock', 4), ('getAction', 4), ('getWidth', 3), ('getHeight', 3), ('signalAll', 3), ('clearQueues', 2), ('clear', 2), ('clearQueue', 2), ('waitForChanged', 2), ('getCapability', 2), ('Object', 1), ('getDelegates', 1), ('stream', 1), ('findFirst', 1), ('getCount', 1), ('release', 1), ('getSimpleName', 1), ('ReentrantLock', 1), ('newCondition', 1), ('CodecAsyncHandler', 1), ('resetContext', 1), ('getMessage', 1), ('toString', 1), ('getInput', 1)]"	"[('CtsTelephonyTestCases', 63), ('CtsMediaTestCases', 1), ('CtsMediaV2TestCases', 1), ('CtsVideoTestCases', 1)]"	""	"android.telephony.ims.cts.ImsServiceTest"	"getCapability"	"CtsTelephonyTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 59), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestSipTransport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestImsConfig.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestAcsClient.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/VideoEncoderDecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestMmTelFeature.java', 1)]"	"[('(1,RCS,/android/telephony/ims/cts/TestSipTransport.java)', 1), ('(8,RCS,/android/telephony/ims/cts/TestImsConfig.java)', 1), ('(18,RCS,/android/media/cts/MediaMuxerTest.java)', 1), ('(3,RCS,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(7,RCS,/android/telephony/ims/cts/TestAcsClient.java)', 1), ('(8,RCS,/android/mediav2/cts/CodecTestBase.java)', 1), ('(5,RCS,/android/video/cts/VideoEncoderDecoderTest.java)', 1), ('(11,MMTEL,/android/telephony/ims/cts/TestMmTelFeature.java)', 1), ('(544,RCS,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(337,MMTEL,/android/telephony/ims/cts/ImsServiceTest.java)', 1)]"	"[('([3:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[3]:method_text:[r.getCarrierService()                .getMmTelFeature().getSmsImplementation().sentPdu);    }   ])', 3), ('([6:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[6]:method_text:[rierService().waitForLatchCountdown(                TestImsService.LATCH_MMTEL_CAP_SET);    }   ])', 2), ('([4:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[4]:method_text:[(SmsReceiverHelper.EXTRA_RESULT_CODE,                        Activity.RESULT_CANCELED));    }   ])', 2), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[           TestImsService.LATCH_UCE_LISTENER_SET));        overrideCarrierConfig(null);    }   ])', 2), ('([1:/android/telephony/ims/cts/TestSipTransport.java]:[RCS]:[1]:method_text:[ex) {        synchronized (mLock) {            sLatches[latchIndex].countDown();        }    }}])', 1), ('([8:/android/telephony/ims/cts/TestImsConfig.java]:[RCS]:[8]:method_text:[riggerAutoConfiguration();        TestAcsClient.getInstance().onTriggerAutoConfiguration();    }}])', 1), ('([18:/android/media/cts/MediaMuxerTest.java]:[RCS]:[18]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([3:/android/hardware/camera2/cts/CameraTestUtils.java]:[RCS]:[3]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([7:/android/telephony/ims/cts/TestAcsClient.java]:[RCS]:[7]:method_text:[fyPreProvisioning(byte[] conf) {        mImsConfigImpl.notifyPreProvisioningReceived(conf);    }}])', 1), ('([8:/android/mediav2/cts/CodecTestBase.java]:[RCS]:[8]:method_text:[b.mCodec.stop();        cdtb.mCodec.release();        return cdtb.mOutputBuff.getBuffer();    }}])', 1), ('([5:/android/video/cts/VideoEncoderDecoderTest.java]:[RCS]:[5]:method_text:[ePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000L / mFrameRate;    }}])', 1), ('([11:/android/telephony/ims/cts/TestMmTelFeature.java]:[MMTEL]:[11]:method_text:[nLatch getOfferedRtpHeaderExtensionLatch() {        return mOfferedRtpHeaderExtensionLatch;    }}])', 1), ('([34:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[34]:method_text:[arrierImsService();            sServiceConnector.disconnectDeviceImsService();        }    }   ])', 1), ('([7:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[7]:method_text:[was not called!"",                sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 1), ('([5:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[5]:method_text:[CH_DISABLE_IMS));        assertFalse(sServiceConnector.getCarrierService().isEnabled());    }   ])', 1), ('([5:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[5]:method_text:[rierService().waitForLatchCountdown(                TestImsService.LATCH_MMTEL_CAP_SET);    }   ])', 1), ('([6:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[6]:method_text:[arrierServiceStillConfigured(),                5000 /*test timeout*/, 5 /*num times*/));    }   ])', 1), ('([8:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[8]:method_text:[              + ""called!"", sServiceConnector.getExternalService().isRcsFeatureCreated());    }   ])', 1), ('([5:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[5]:method_text:[was not called!"",                sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[2]:method_text:[           + ""feature."", sServiceConnector.getExternalService().isMmTelFeatureCreated());    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[9]:method_text:[_REMOVE_RCS));        assertNull(sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 1), ('([35:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[35]:method_text:[           TestImsService.LATCH_UCE_LISTENER_SET));        overrideCarrierConfig(null);    }   ])', 1), ('([24:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[24]:method_text:[           TestImsService.LATCH_UCE_LISTENER_SET));        overrideCarrierConfig(null);    }   ])', 1), ('([18:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[18]:method_text:[eceivedPidfXml.get(0).contains(expectedUriString));        overrideCarrierConfig(null);    }   ])', 1), ('([26:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[26]:method_text:[ceAdapter.PUBLISH_STATE_OTHER_ERROR, publishState);        overrideCarrierConfig(null);    }   ])', 1), ('([24:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[24]:method_text:[REQUEST_PUBLISH, 3000 /* Wait up to 3 seconds */));        overrideCarrierConfig(null);    }   ])', 1), ('([27:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[27]:method_text:[automation.dropShellPermissionIdentity();        }        overrideCarrierConfig(null);    }   ])', 1), ('([41:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[41]:method_text:[remove request disallowed status: "" + e);        }        overrideCarrierConfig(null);    }   ])', 1), ('([11:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[11]:method_text:[    ""android.permission.READ_PRECISE_PHONE_STATE"");        overrideCarrierConfig(null);    }   ])', 1), ('([23:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[23]:method_text:[ -> m.unregisterImsRegistrationCallback(callback));        overrideCarrierConfig(null);    }   ])', 1), ('([48:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[48]:method_text:[        assertTrue(availabilityChanged.isEmpty());        overrideCarrierConfig(null);    }   ])', 1), ('([10:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[10]:method_text:[llback);        } finally {            automan.dropShellPermissionIdentity();        }    }   ])', 1), ('([11:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[11]:method_text:[   automan.dropShellPermissionIdentity();        }        overrideCarrierConfig(null);    }   ])', 1), ('([30:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[30]:method_text:[  res = waitForIntResult(actionQueue, 500);        assertEquals(res, Integer.MAX_VALUE);    }   ])', 1), ('([15:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[15]:method_text:[.equals(                configStr.getBytes(), TestAcsClient.getInstance().getConfig()));    }   ])', 1), ('([14:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[14]:method_text:[).getActionQueue());        assertEquals(res, TestAcsClient.ACTION_TRIGGER_AUTO_CONFIG);    }   ])', 1), ('([11:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[11]:method_text:[_SET_RCS_CLIENT_CONFIG);        assertEquals(rcc, TestAcsClient.getInstance().getRcc());    }   ])', 1), ('([6:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[6]:method_text:[ is     * available on the device and for the current carrier.     * @throws Exception     */   ])', 1), ('([89:/android/telephony/ims/cts/ImsServiceTest.java]:[RCS]:[89]:method_text:[ return (c - \'a\' + 10);        throw new RuntimeException(""Invalid hex char \'"" + c + ""\'"");    }}])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[arrierImsService();            sServiceConnector.disconnectDeviceImsService();        }    }   ])', 1), ('([8:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[8]:method_text:[rierService().waitForLatchCountdown(                TestImsService.LATCH_MMTEL_CAP_SET);    }   ])', 1), ('([7:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[7]:method_text:[rierService().waitForLatchCountdown(                TestImsService.LATCH_MMTEL_CAP_SET);    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[9]:method_text:[was not called!"",                sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 1), ('([15:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[15]:method_text:[           + ""feature."", sServiceConnector.getExternalService().isMmTelFeatureCreated());    }   ])', 1), ('([17:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[17]:method_text:[_REMOVE_RCS));        assertNull(sServiceConnector.getCarrierService().getRcsFeature());    }   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[Utils.TEST_TIMEOUT_MS);        assertEquals(EXPECTED_RECEIVED_MESSAGE, receivedMessage);    }   ])', 1), ('([9:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[9]:method_text:[ption.class);        return state.poll(ImsUtils.TEST_TIMEOUT_MS, TimeUnit.MILLISECONDS);    }   ])', 1), ('([17:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[17]:method_text:[E permission."");        } catch (SecurityException e) {            //expected        }    }   ])', 1), ('([20:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[20]:method_text:[E permission."");        } catch (SecurityException e) {            //expected        }    }   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[eceivedPidfXml.get(0).contains(expectedUriString));        overrideCarrierConfig(null);    }   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[ceAdapter.PUBLISH_STATE_OTHER_ERROR, publishState);        overrideCarrierConfig(null);    }   ])', 1), ('([6:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[6]:method_text:[REQUEST_PUBLISH, 3000 /* Wait up to 3 seconds */));        overrideCarrierConfig(null);    }   ])', 1), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[1]:method_text:[automation.dropShellPermissionIdentity();        }        overrideCarrierConfig(null);    }   ])', 1), ('([1:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[1]:method_text:[remove request disallowed status: "" + e);        }        overrideCarrierConfig(null);    }   ])', 1), ('([7:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[7]:method_text:[turn(mmTelManager,                (m) -> m.unregisterImsRegistrationCallback(callback));    }   ])', 1), ('([46:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[46]:method_text:[E permission."");        } catch (SecurityException e) {            //expected        }    }   ])', 1), ('([45:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[45]:method_text:[ such that IsAvailable returns the correct     * capability status during the callback.     */   ])', 1), ('([28:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[28]:method_text:[ finally {                automan.dropShellPermissionIdentity();            }        }    }   ])', 1), ('([8:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[8]:method_text:[   automan.dropShellPermissionIdentity();        }        overrideCarrierConfig(null);    }   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[2]:method_text:[ceToDeviceCommunicationEnabled(false);            overrideCarrierConfig(null);        }    }   ])', 1), ('([12:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[12]:method_text:[aitForIntResult(stateQueue));        mmTelManager.unregisterImsStateCallback(callback);    }   ])', 1), ('([38:/android/telephony/ims/cts/ImsServiceTest.java]:[MMTEL]:[38]:method_text:[ return (c - \'a\' + 10);        throw new RuntimeException(""Invalid hex char \'"" + c + ""\'"");    }}])', 1)]"	""	""	"[('RCS', 34), ('MMTEL', 33)]"	"[('[android.telephony.ims.cts.ImsServiceTest beforeAllTests CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindRcsChangeToMmtel CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testBindDeviceAndCarrierDifferentFeatures CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testBindDeviceAndCarrierSameFeature CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testBindDeviceAndCarrierUpdateToSameFeature CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsDeviceCapabilitiesPublish CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testPublishImsReg CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testPublishWithImsAssociatedUri CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsCapabilitiesPublishNetworkResponseWithReasonHeader CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishThrottle CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishWithSipOptions CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishWithAuthorizedErrorResponse CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.ImsServiceTest testImsRcsManagerImsStateCallback CtsTelephonyTestCases]', 2), ('[android.telephony.ims.cts.TestImsConfig TestImsConfig CtsTelephonyTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[android.telephony.ims.cts.TestAcsClient TestAcsClient CtsTelephonyTestCases]', 1), ('[android.mediav2.cts.CodecTestBase isEmpty CtsMediaV2TestCases]', 1), ('[android.video.cts.VideoEncoderDecoderTest testVp9Other3Perf3840x2160 CtsVideoTestCases]', 1), ('[android.telephony.ims.cts.TestMmTelFeature TestImsSmsImpl CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindRcsFeature CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindRcsFeatureEnableDisableIms CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindNullRcsFeature CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testDeviceImsServiceBindRcsFeature CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testRcsManagerRegistrationCallback CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testRcsManagerRegistrationState CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testRcsCapabilityStatusCallback CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerConstants CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerRcsProvisioningCaps CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerRcsProvisioningChangedCallback CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerNotifyRcsAutoConfigurationReceived CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerTriggerRcsReconfiguration CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerSetRcsClientConfiguration CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerRcsVolteSingleRegistrationCapable CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindMmTelFeature CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindMmTelNoEmergency CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCarrierImsServiceBindMmTelEmergencyEnabled CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSms CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSmsDeliveryReportQCompat CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSmsDeliveryReportR CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSmsRSuccess CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelSendSmsNetworkError CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelReceiveSms CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testGetFeatureState CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelManagerRegistrationCallbackS CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelManagerRegistrationCallback CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelManagerRegistrationStateR CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCapabilityStatusCallback CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCallComposerCapabilityStatusCallback CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testCapabilityStatusWithIsAvailableDuringCallback CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testProvisioningManagerProvisioningCaps CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testSetRtpHeaderExtensions CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testImsMmTelManagerImsStateCallback CtsTelephonyTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.9.1.1  . The"	"3.9.1.1"	"C-1-5"	"3.9.1.1/C-1-5"	"03090101.670105"	"""C-1-5] MUST enroll the DPC application as the Device Owner app if the device declares Near-Field Communications (NFC) support via the feature flag android.hardware.nfc and receives an NFC message containing a record with MIME type MIME_TYPE_PROVISIONING_NFC."""	""	""	"MIME NFC android.hardware.nfc DPC MIME_TYPE_PROVISIONING_NFC"	""	""	""	""	"[('android.mediav2.cts.CodecUnitTest', 90), ('android.media.cts.DecodeEditEncodeTest', 2), ('android.media.cts.AudioPlaybackConfigurationTest', 1), ('android.security.cts.CVE_2018_9584', 1), ('android.media.cts.MediaCodecPlayerTest', 1)]"	"[('hasSeenError', 2), ('main', 1)]"	"[('CtsMediaV2TestCases', 90), ('CtsMediaTestCases', 4), ('CtsSecurityBulletinHostTestCases', 1)]"	""	"android.mediav2.cts.CodecUnitTest"	"hasSeenError"	"CtsMediaV2TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecUnitTest.java', 90), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2018_9584.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecPlayerTest.java', 1)]"	"[('(5,NFC,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(1,NFC,/android/security/cts/CVE_2018_9584.java)', 1), ('(9,MIME,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(3,MIME,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(271,MIME,/android/mediav2/cts/CodecUnitTest.java)', 1)]"	"[('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[te"");                mCodec.reset();            }            mCodec.release();        }       ])', 15), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[op();                mCodec.reset();            }            mCodec.release();        }       ])', 15), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[ate"");                mCodec.stop();            }            mCodec.release();        }       ])', 6), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[uts();                mCodec.stop();            }            mCodec.release();        }       ])', 5), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 5), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[     }                mCodec.stop();            }            mCodec.release();        }       ])', 3), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[    waitForAllOutputs();            mCodec.stop();            mCodec.release();        }       ])', 3), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[  } finally {                if (mCodec != null) mCodec.release();            }        }       ])', 2), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[1]:method_text:[            testConfigureCodecForIncompleteFormat(format, mandatoryKeys, false);        }       ])', 2), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[1]:method_text:[;            testConfigureCodecForIncompleteFormat(format, mandatoryKeys, true);        }       ])', 2), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[t buffer succeeds in stopped state"");            }            mCodec.release();        }       ])', 2), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[art();                mCodec.stop();            }            mCodec.release();        }       ])', 2), ('([5:/android/media/cts/AudioPlaybackConfigurationTest.java]:[NFC]:[5]:method_text:[     fail(""Exception thrown during reflection on config privileged fields""+ e);        }    }   ])', 1), ('([1:/android/security/cts/CVE_2018_9584.java]:[NFC]:[1]:method_text:[();        AdbUtils.runPocAssertNoCrashesNotVulnerable(""CVE-2018-9584"", null, getDevice());    }}])', 1), ('([2:/android/media/cts/DecodeEditEncodeTest.java]:[MIME]:[2]:method_text:[gest color component delta seen (i.e. actual vs. expected)    private int mLargestColorDelta;   ])', 1), ('([7:/android/media/cts/DecodeEditEncodeTest.java]:[MIME]:[7]:method_text:[                  throw new RuntimeException(ioe);                }            }        }    }}])', 1), ('([3:/android/media/cts/MediaCodecPlayerTest.java]:[MIME]:[3]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([16:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[16]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[1]:method_text:[ull, null, null, MediaCodec.CONFIGURE_FLAG_ENCODE);            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[1]:method_text:[t(), null, null, MediaCodec.CONFIGURE_FLAG_ENCODE);            mCodec.release();        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[(format, false,                    ""codec configure succeeds in release state"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[alidState(                    ""dequeue input buffer succeeds in release state"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[lidState(                    ""dequeue output buffer succeeds in release state"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[le.isInputQueueEmpty());            mCodec.stop();            mCodec.release();        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[e();            tryFlushInInvalidState(""codec flush succeeds in release state"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[     tryGetInputBufferInInvalidState(""getInputBuffer succeeds in release state"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[     tryGetInputFormatInInvalidState(""getInputFormat succeeds in release state"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[   tryGetOutputBufferInInvalidState(""getOutputBuffer succeeds in release state"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[   tryGetOutputFormatInInvalidState(""getOutputFormat succeeds in release state"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[ 1));                mCodec.reset();            }            mCodec.release();        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[alidState(""codec start succeeds in stopped state"");            mCodec.release();        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[eeds in running state"");            mCodec.stop();            mCodec.release();        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[tate            tryStartInInvalidState(""codec start succeeds in release state"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[top();                mCodec.stop();            }            mCodec.release();        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[true);                mCodec.stop();            }            mCodec.release();        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[EOS();                mCodec.stop();            }            mCodec.release();        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[rue);                mCodec.reset();            }            mCodec.release();        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[OS();                mCodec.reset();            }            mCodec.release();        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[       tryGetInputImageInInvalidState(""getInputImage succeeds in release state"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[     tryGetOutputImageInInvalidState(""getOutputImage succeeds in release state"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[ tryQueueInputBufferInInvalidState(""queueInputBuffer succeeds in release state"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[validState(                    ""releaseOutputBuffer succeeds in release state"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[ECONDS);        static {            System.loadLibrary(""ctsmediav2codec_jni"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[);        }        private native boolean nativeTestCreateDecoderByTypeForInvalidMime();       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[MIME]:[3]:method_text:[);        }        private native boolean nativeTestCreateEncoderByTypeForInvalidMime();       ])', 1)]"	""	""	"[('MIME', 93), ('NFC', 2)]"	"[('[android.mediav2.cts.CodecUnitTest testCreateDecoderByTypeForInvalidMime CtsMediaV2TestCases]', 2), ('[android.mediav2.cts.CodecUnitTest testCreateEncoderByTypeForInvalidMime CtsMediaV2TestCases]', 2), ('[android.media.cts.AudioPlaybackConfigurationTest testGetterMediaPlayer CtsMediaTestCases]', 1), ('[android.security.cts.CVE_2018_9584 testPocCVE_2018_9584 CtsSecurityBulletinHostTestCases]', 1), ('[android.media.cts.DecodeEditEncodeTest testVideoEdit720p CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecPlayerTest MediaCodecPlayerTest CtsMediaTestCases]', 1), ('[android.mediav2.cts.CodecUnitTest TestApi CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureForNullFormat CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureForEmptyFormat CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureAudioDecodeForIncompleteFormat CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureAudioEncodeForIncompleteFormat CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureVideoDecodeForIncompleteFormat CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureVideoEncodeForIncompleteFormat CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureAfterStart CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureAfterQueueInputBuffer CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureInEOSState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureInFlushState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueInputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueInputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueInputBufferInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueInputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueOutputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueOutputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueOutputBufferInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueOutputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testFlushInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testFlushInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testFlushInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testFlushInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetMetaDataInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetMetaDataInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetMetaDataInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetMetaDataInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetCallBackInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetCallBackInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetCallBackInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetCallBackInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputBufferInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputFormatInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputFormatInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputFormatInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputFormatInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputBufferInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputFormatInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputFormatInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputFormatInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputFormatInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetParametersInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetParametersInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetParametersInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetParametersInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStartInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStartInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStartInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStopInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStopInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStopInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStopInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testResetInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testResetInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testResetInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testResetInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputImageInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputImageInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputImageInRunningStateVideo CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputImageInRunningStateAudio CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputImageInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputImageInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputImageInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputImageInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputImageInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferWithBadIndex CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferWithBadSize CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferWithBadBuffInfo CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferWithBadOffset CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testReleaseOutputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testReleaseOutputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testReleaseOutputBufferInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testReleaseOutputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testReleaseIdempotent CtsMediaV2TestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-11"	"9.8/H-1-11"	"09080000.720111"	"""[9.8/H-1-11] MUST log the number of bytes included in every transmission from the hotword detection service to allow inspectability for security researchers. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-1-10"	"7.3.1/C-1-10"	"07030100.670110"	"""C-1-10] MUST disable biometrics once primary authentication backoff has first triggered as described in"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-14"	"9.8/H-1-14"	"09080000.720114"	"""[9.8/H-1-14] MUST display the microphone indicator, as required in """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Application Data Migration"	"9.1"	"C-1-2"	"9.1/C-1-2"	"09010000.670102"	"""C-1-2] MUST perform verification on every boot sequence. | C-1-2] MUST have implementations of RSA, AES, ECDSA and HMAC cryptographic algorithms and MD5, SHA1, and SHA-2 family hash functions to properly support the Android Keystore system&#39;s supported algorithms in an area that is securely isolated from the code running on the kernel and above. Secure isolation MUST block all potential mechanisms by which kernel or userspace code might access the internal state of the isolated environment, including DMA. The upstream Android Open Source Project (AOSP) meets this requirement by using the Trusty implementation, but another ARM TrustZone-based solution or a third-party reviewed secure implementation of a proper hypervisor-based isolation are alternative options. | C-1-2] MUST provide the user the capability to uninstall any third-party apps within Safe Mode. SHOULD provide the user an option to enter Safe Boot Mode from the boot menu using a workflow that is different from that of a normal boot. <h3 id=""914_automotive_vehicle_system_isolation""  | C-1-2] MUST securely confirm the primary authentication on the source device and confirm with the user intent to copy the data on the source device before any data is transferred."""	""	""	"ECDSA AES DMA HMAC RSA SHA1 ARM MD5 SHA"	""	""	""	""	"[('android.media.cts.AudioManagerTest', 18), ('android.media.cts.AudioPlaybackConfigurationTest', 3), ('android.server.wm.KeyguardLockedTests', 3), ('android.devicepolicy.cts.AppUriAuthenticationPolicyTest', 3), ('com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest', 2), ('android.view.inputmethod.cts.InputConnectionWrapperTest', 2), ('android.jdwptunnel.cts.JdwpTunnelTest', 2), ('test.java.com.android.bedstead.nene.packages.PackageReferenceTest', 2), ('android.media.cts.DecodeEditEncodeTest', 2), ('android.graphics.cts.BitmapColorSpaceTest', 2), ('android.hardware.camera2.cts.NativeCameraDeviceTest', 2), ('android.media.cts.SystemMediaRouter2Test', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.server.wm.SplashscreenTests', 1), ('android.cts.backup.restoresessionapp.BaseRestoreSessionAppTest', 1), ('com.android.cts.verifier.p2p.RequesterTestActivity', 1), ('android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation', 1), ('android.provider.cts.simphonebook.SimPhonebookRequirementsRule', 1), ('android.systemui.cts.LightBarActivity', 1), ('android.jobscheduler.cts.shareduidtests.ClipDataJobTest', 1), ('com.android.cts.verifier.deskclock.DeskClockTestsActivity', 1), ('android.opengl.cts.OpenGLES20NativeActivityOne', 1)]"	"[('setUp', 9), ('tearDown', 4), ('getTargetContext', 4), ('getInstrumentation', 4), ('getContext', 3), ('getPackageName', 3), ('getWindow', 3), ('Builder', 3), ('onPause', 3), ('onResume', 3), ('release', 2), ('edit', 2), ('commit', 2), ('getResources', 2), ('getSystem', 2), ('getSubscriptionInfoForRemovableSims', 2), ('size', 2), ('getColorSpace', 2), ('getIntent', 2), ('RouteCallback', 1), ('getMediaDirString', 1), ('stop', 1), ('clearSharedPrefs', 1), ('clear', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getPackageManager', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('WcdmaCellInformation', 1), ('super', 1), ('getTag', 1), ('SimPhonebookRequirementsRule', 1), ('before', 1), ('getApplicationContext', 1), ('getSupportedModemCount', 1), ('getRemovableSimSlotCount', 1), ('getAttributes', 1), ('getDecorView', 1), ('supportsSecureLock', 1), ('addAppAndUriMapping_nullUri_throwException', 1), ('addAppAndUriMapping_nullPackageName_throwException', 1), ('addAppAndUriMapping_nullAlias_throwException', 1), ('hashCode', 1), ('getContentResolver', 1), ('close', 1), ('main', 1), ('getName', 1), ('writeColorSpace', 1), ('getAssets', 1), ('fail', 1), ('obtain', 1), ('recycle', 1), ('waitForFrameDrawn', 1), ('getRenderer', 1), ('getAttachShaderError', 1), ('getAttachedShaderCount', 1), ('countDown', 1)]"	"[('CtsMediaTestCases', 24), ('CtsWindowManagerDeviceTestCases', 4), ('CtsDevicePolicyTestCases', 3), ('CtsInputMethodTestCases', 2), ('CtsJdwpTunnelHostTestCases', 2), ('CtsGraphicsTestCases', 2), ('CtsCameraTestCases', 2), ('CtsShortcutManagerTestCases', 1), ('CtsLocationGnssTestCases', 1), ('CtsSimPhonebookProviderTestCases', 1), ('CtsSystemUiTestCases', 1), ('CtsJobSchedulerSharedUidTestCases', 1), ('CtsOpenGLTestCases', 1)]"	""	"android.hardware.camera2.cts.NativeCameraDeviceTest"	"countDown"	"CtsCameraTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 18), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapColorSpaceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SystemMediaRouter2Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/RestoreSessionTest/src/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/p2p/RequesterTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/LightBarActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobSchedulerSharedUid/src/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/deskclock/DeskClockTestsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGLES20NativeActivityOne.java', 1)]"	"[('(1,SHA,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(3,RSA,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(12,SHA,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(3,DMA,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(1,SHA,/android/server/wm/SplashscreenTests.java)', 1), ('(9,SHA,/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java)', 1), ('(1,RSA,/com/android/cts/verifier/p2p/RequesterTestActivity.java)', 1), ('(1,RSA,/android/media/cts/AudioManagerTest.java)', 1), ('(48,ARM,/android/media/cts/AudioManagerTest.java)', 1), ('(3,SHA,/android/media/cts/AudioManagerTest.java)', 1), ('(48,DMA,/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java)', 1), ('(2,DMA,/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java)', 1), ('(1,SHA,/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java)', 1), ('(2,ARM,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(1,SHA,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(2,RSA,/android/systemui/cts/LightBarActivity.java)', 1), ('(10,SHA,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(1,DMA,/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java)', 1), ('(1,SHA,/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java)', 1), ('(13,DMA,/android/server/wm/KeyguardLockedTests.java)', 1), ('(3,SHA,/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java)', 1), ('(1,SHA,/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java)', 1), ('(6,SHA,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(74,ARM,/com/android/cts/verifier/deskclock/DeskClockTestsActivity.java)', 1), ('(5,SHA,/android/graphics/cts/BitmapColorSpaceTest.java)', 1), ('(9,SHA,/android/opengl/cts/OpenGLES20NativeActivityOne.java)', 1), ('(4,SHA,/android/hardware/camera2/cts/NativeCameraDeviceTest.java)', 1)]"	"[('([3:/android/media/cts/AudioManagerTest.java]:[ARM]:[3]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 5), ('([6:/android/media/cts/AudioManagerTest.java]:[ARM]:[6]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 3), ('([1:/android/devicepolicy/cts/AppUriAuthenticationPolicyTest.java]:[SHA]:[1]:method_text:[llPointerException expected) {            // Expected behavior, nothing to do.        }    }   ])', 3), ('([2:/android/media/cts/AudioManagerTest.java]:[ARM]:[2]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 2), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[SHA]:[1]:method_text:[callbacks        clearCallbacks();        mUiAutomation.dropShellPermissionIdentity();    }   ])', 1), ('([3:/android/media/cts/AudioPlaybackConfigurationTest.java]:[RSA]:[3]:method_text:[using SoundPool"",                nbActivePlayersBeforeStart, nbActivePlayersAfterPause);    }   ])', 1), ('([2:/android/media/cts/AudioPlaybackConfigurationTest.java]:[SHA]:[2]:method_text:[   // create an AudioPlaybackConfiguration directly, we first need to play something to get one.   ])', 1), ('([10:/android/media/cts/AudioPlaybackConfigurationTest.java]:[SHA]:[10]:method_text:[             configToMarshall.getAudioAttributes(), restoredConfig.getAudioAttributes());    }   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[DMA]:[3]:method_text:[ents(start3, end3)),                mPackageContext1.getPackageName(), idNonexistance));    }   ])', 1), ('([1:/android/server/wm/SplashscreenTests.java]:[SHA]:[1]:method_text:[ffsetX = result.getWidth() / 2;        result.setPixel(x + debugOffsetX, y, debugPixel);    }   ])', 1), ('([9:/android/cts/backup/restoresessionapp/BaseRestoreSessionAppTest.java]:[SHA]:[9]:method_text:[, int prefValue) {        assertThat(mPreferences.getInt(prefKey, 0)).isEqualTo(prefValue);    }}])', 1), ('([1:/com/android/cts/verifier/p2p/RequesterTestActivity.java]:[RSA]:[1]:method_text:[ }).show();    }    private TestCaseListener getTestCaseListener() {        return this;    }}])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[RSA]:[1]:method_text:[;            assertEquals(RINGER_MODE_VIBRATE, mAudioManager.getRingerMode());        }    }   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[ARM]:[2]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[ARM]:[1]:method_text:[        if (!isMusicPlayingBeforeTest) {            assertMusicActive(false);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[ARM]:[1]:method_text:[e."",                        mAudioManager.isStreamMute(stream));            }        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[ARM]:[1]:method_text:[etStreamMute failed."",                    mAudioManager.isStreamMute(stream));        }    }   ])', 1), ('([5:/android/media/cts/AudioManagerTest.java]:[ARM]:[5]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[ARM]:[1]:method_text:[           STREAM_ALARM, STREAM_NOTIFICATION,            STREAM_DTMF,  STREAM_ACCESSIBILITY };   ])', 1), ('([3:/android/media/cts/AudioManagerTest.java]:[SHA]:[3]:method_text:[    Log.i(TAG, ""isHapticPlaybackSupported: "" + AudioManager.isHapticPlaybackSupported());    }   ])', 1), ('([48:/android/location/cts/gnss/asn1/supl2/ulp_components/WcdmaCellInformation.java]:[DMA]:[48]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java]:[DMA]:[1]:method_text:[ static Context getContext() {        return InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([1:/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java]:[DMA]:[1]:method_text:[clipFromClipboard);            assertWritingClipNotAllowed(clipFromClipboard);        }    }   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookRequirementsRule.java]:[SHA]:[1]:method_text:[.getSubscriptionInfoForRemovableSims().size())                .isAtLeast(mMinimumSimCount);    }}])', 1), ('([2:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[ARM]:[2]:method_text:[ */);        verify(inputConnection, times(1)).commitContent(inputContentInfo, 0, null);    }   ])', 1), ('([1:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[SHA]:[1]:method_text:[     expectThrows(IllegalArgumentException.class,  ()-> wrapper.getTextBeforeCursor(-1, 0));    }}])', 1), ('([2:/android/systemui/cts/LightBarActivity.java]:[RSA]:[2]:method_text:[ranceFlag;        }        controller.setSystemBarsAppearance(appearance, appearanceFlag);    }}])', 1), ('([2:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[SHA]:[2]:method_text:[ould race with the JDWP handshake. This could     * confuse clients. See bug: 178655046     */   ])', 1), ('([8:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[SHA]:[8]:method_text:[ sent big-endian so first byte has sign bit.        assertTrue((is.read() & 0x80) == 0x80);    }}])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java]:[DMA]:[1]:method_text:[ Use annotations to share state instead of doing so manually        sOtherUser.remove();    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java]:[SHA]:[1]:method_text:[ Use annotations to share state instead of doing so manually        sOtherUser.remove();    }   ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[DMA]:[1]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([6:/android/server/wm/KeyguardLockedTests.java]:[DMA]:[6]:method_text:[guardManager.isDeviceLocked());        assertFalse(mKeyguardManager.isKeyguardLocked());    }   ])', 1), ('([6:/android/server/wm/KeyguardLockedTests.java]:[DMA]:[6]:method_text:[uardSecure());        } finally {            keyguardLock.reenableKeyguard();        }    }   ])', 1), ('([1:/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java]:[SHA]:[1]:method_text:[_ID);    }    /**     * Test basic granting of URI permissions associated with jobs.     */   ])', 1), ('([3:/android/media/cts/DecodeEditEncodeTest.java]:[SHA]:[3]:method_text:[gest color component delta seen (i.e. actual vs. expected)    private int mLargestColorDelta;   ])', 1), ('([3:/android/media/cts/DecodeEditEncodeTest.java]:[SHA]:[3]:method_text:[                  throw new RuntimeException(ioe);                }            }        }    }}])', 1), ('([74:/com/android/cts/verifier/deskclock/DeskClockTestsActivity.java]:[ARM]:[74]:method_text:[      throw new IllegalArgumentException(""Unknown test: "" + testId);            }        }    }}])', 1), ('([4:/android/graphics/cts/BitmapColorSpaceTest.java]:[SHA]:[4]:method_text:[ace();        assertNotNull(cs);        assertSame(expected, cs);        p.recycle();    }   ])', 1), ('([1:/android/graphics/cts/BitmapColorSpaceTest.java]:[SHA]:[1]:method_text:[        }        } catch (Exception e) {            fail(""Failed with "" + e);        }    }   ])', 1), ('([9:/android/opengl/cts/OpenGLES20NativeActivityOne.java]:[SHA]:[9]:method_text:[   mLatch.countDown();    }    public void onSurfaceCreated(GL10 gl, EGLConfig config) {    }}])', 1), ('([3:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[SHA]:[3]:method_text:[ceSharedOutputUpdate(mPreviewSurface, outputSurface,                mOverrideCameraId));    }   ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[SHA]:[1]:method_text:[    private static native boolean testCameraDeviceCaptureFailureNative(String overrideCameraId);}])', 1)]"	""	""	"[('SHA', 22), ('ARM', 18), ('DMA', 8), ('RSA', 4)]"	"[('[test.java.com.android.bedstead.nene.packages.PackageReferenceTest TestApis None]', 2), ('[android.media.cts.SystemMediaRouter2Test ArrayList CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testGetterSoundPool CtsMediaTestCases]', 1), ('[android.media.cts.AudioPlaybackConfigurationTest testParcelableWriteToParcel CtsMediaTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest testReportShortcutUsed CtsShortcutManagerTestCases]', 1), ('[android.server.wm.SplashscreenTests testSplashscreenContent CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.p2p.RequesterTestActivity getTestCase None]', 1), ('[android.media.cts.AudioManagerTest testSetRingerModePolicyAccess CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testVolume CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMuteFixedVolume CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMuteDndUnaffectedStreams CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInAlarmsOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInAlarmsOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInPriorityOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInPriorityOnly CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMuteAll CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMediaAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlySystemAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlySystemDisallowedWithRingerMuted CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyAlarmsAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyRingerAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyChannelsCanBypassDnd CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeWithIllegalDirection CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testIsHapticPlaybackSupported CtsMediaTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_components.WcdmaCellInformation isTagImplicit CtsLocationGnssTestCases]', 1), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest testClipboardWithPermission None]', 1), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInputConnectionWrapper CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInvalidGetTextBeforeOrAfterCursorRequest CtsInputMethodTestCases]', 1), ('[android.systemui.cts.LightBarActivity getSystemUiVisibility CtsSystemUiTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest testAttachDebuggerToProfileableApp CtsJdwpTunnelHostTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest testDdmsWaitsForHandshake CtsJdwpTunnelHostTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testLockAndUnlock CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDisableKeyguard_thenSettingCredential_reenablesKeyguard_b119322269 CtsWindowManagerDeviceTestCases]', 1), ('[android.media.cts.DecodeEditEncodeTest testVideoEdit720p CtsMediaTestCases]', 1), ('[com.android.cts.verifier.deskclock.DeskClockTestsActivity setPassFailButtonClickListeners None]', 1), ('[android.graphics.cts.BitmapColorSpaceTest test16bitHardware CtsGraphicsTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceSharedOutputUpdate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceCaptureFailure CtsCameraTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.8.1  . Multi"	"3.8.1"	"C-3-4"	"3.8.1/C-3-4"	"03080100.670304"	"""C-3-4] MUST use KeyEvent.KEYCODE_WINDOW to control the PIP window; if PIP mode is not implemented, the key MUST be available to the foreground activity."""	""	""	"KEYCODE_WINDOW PIP KeyEvent.KEYCODE"	""	""	""	""	"[('android.server.wm.KeyguardLockedTests', 6), ('android.app.usage.cts.UsageStatsTest', 4), ('android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests', 3), ('android.opengl2.cts.primitive.GLPrimitiveBenchmark', 3), ('android.renderscript.cts.DebugContext', 3), ('android.widget.cts.ExpandableListViewBasicTest', 3), ('android.view.cts.KeyEventInjectionTest', 2), ('android.app.cts.PipNotSupportedActivityTest', 2), ('android.widget.cts.AbsListViewTest', 2), ('android.widget.cts.ExpandableListViewWithHeadersTest', 2), ('android.widget.cts.SearchView_CursorTest', 1), ('android.view.inputmethod.cts.InputConnectionWrapperTest', 1), ('android.webkit.cts.WebViewRenderProcessClientTest', 1), ('android.content.cts.MockContentProvider', 1), ('com.android.cts.documentprovider.MyDocumentsProvider', 1), ('android.os.cts.SeccompTest', 1), ('com.android.cts.verifier.audio.SoundPlayerObject', 1), ('android.signature.cts.tests.ApiPresenceCheckerTest', 1), ('android.text.method.cts.DialerKeyListenerTest', 1), ('android.app.cts.LauncherActivityTest', 1), ('android.hardware.input.cts.tests.RazerRaijuMobileBluetoothTest', 1), ('android.server.wm.app.AlwaysFocusablePipActivity', 1), ('com.android.cts.releaseparser.ApkParser', 1), ('android.app.stubs.KeyguardManagerActivity', 1), ('com.android.cts.verifier.audio.USBAudioPeripheralButtonsActivity', 1), ('android.text.method.cts.TextKeyListenerTest', 1), ('android.cts.statsdatom.statsd.UidAtomTests', 1), ('com.android.cts.verifier.camera.its.ItsService', 1)]"	"[('getContext', 11), ('clear', 7), ('getPathSegments', 7), ('close', 7), ('AtomicInteger', 7), ('start', 7), ('setUp', 6), ('getBytes', 6), ('crashOnLaunchIfNeeded', 5), ('getContentResolver', 5), ('Object', 5), ('newRow', 4), ('run', 4), ('getLooper', 4), ('capacity', 4), ('getInstrumentation', 3), ('onCreate', 3), ('getWritableDatabase', 3), ('resetRoots', 3), ('values', 3), ('FileNotFoundException', 3), ('printStackTrace', 3), ('quitSafely', 3), ('getOutputStream', 3), ('myPid', 2), ('getReadableDatabase', 2), ('SQLiteQueryBuilder', 2), ('flush', 2), ('size', 2), ('toLowerCase', 2), ('onResume', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('supportsSecureLock', 1), ('getActivity', 1), ('getUiAutomation', 1), ('MockContentProvider', 1), ('ContentValues', 1), ('moveToNext', 1), ('getFileDescriptor', 1), ('Doc', 1), ('getAndIncrement', 1), ('createPipe', 1), ('notifyAll', 1), ('wait', 1), ('getIntentSender', 1), ('ByteArrayOutputStream', 1), ('toByteArray', 1), ('SoundPlayerObject', 1), ('getCurrentResId', 1), ('getChannelCount', 1), ('BufferInfo', 1), ('interrupted', 1), ('availableToRead', 1), ('getSampleTime', 1), ('advance', 1), ('rewind', 1), ('makeBasic', 1), ('toBundle', 1), ('GLPrimitiveBenchmark', 1), ('getType', 1), ('setAdditionalInfo', 1), ('getFileEntryBuilder', 1), ('getAppInfo', 1), ('getExternalApiPackage', 1), ('prase', 1), ('USBAudioPeripheralButtonsActivity', 1), ('getSimpleName', 1), ('BlockingStateCallback', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('build', 1), ('onDestroy', 1), ('quit', 1), ('getWidth', 1), ('getHeight', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('getPackageName', 1), ('WindowManagerStateHelper', 1)]"	"[('CtsWindowManagerDeviceTestCases', 9), ('CtsWidgetTestCases', 8), ('CtsUsageStatsTestCases', 4), ('CtsAppTestCases', 3), ('CtsOpenGlPerf2TestCases', 3), ('CtsRenderscriptTestCases', 3), ('CtsViewTestCases', 2), ('CtsTextTestCases', 2), ('CtsInputMethodTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsContentTestCases', 1), ('CtsHardwareTestCases', 1), ('CtsStatsdAtomHostTestCases', 1)]"	""	"android.app.usage.cts.UsageStatsTest"	"WindowManagerStateHelper"	"CtsUsageStatsTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/openglperf2/src/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/DebugContext.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ExpandableListViewBasicTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyEventInjectionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/PipNotSupportedActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/AbsListViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ExpandableListViewWithHeadersTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewRenderProcessClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/MockContentProvider.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/DocumentProvider/src/com/android/cts/documentprovider/MyDocumentsProvider.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/SeccompTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/SoundPlayerObject.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/tests/src/android/signature/cts/tests/ApiPresenceCheckerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/DialerKeyListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/LauncherActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/RazerRaijuMobileBluetoothTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/AlwaysFocusablePipActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/ApkParser.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/app/src/android/app/stubs/KeyguardManagerActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBAudioPeripheralButtonsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/TextKeyListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/UidAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1)]"	"[('(4,KeyEvent.KEYCODE,/android/widget/cts/SearchView_CursorTest.java)', 1), ('(2,KeyEvent.KEYCODE,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(50,PIP,/android/server/wm/KeyguardLockedTests.java)', 1), ('(1,KeyEvent.KEYCODE,/android/webkit/cts/WebViewRenderProcessClientTest.java)', 1), ('(3,KeyEvent.KEYCODE,/android/view/cts/KeyEventInjectionTest.java)', 1), ('(5,PIP,/android/content/cts/MockContentProvider.java)', 1), ('(14,PIP,/android/app/cts/PipNotSupportedActivityTest.java)', 1), ('(47,PIP,/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java)', 1), ('(7,PIP,/com/android/cts/documentprovider/MyDocumentsProvider.java)', 1), ('(4,KeyEvent.KEYCODE,/android/widget/cts/AbsListViewTest.java)', 1), ('(6,PIP,/android/os/cts/SeccompTest.java)', 1), ('(15,PIP,/com/android/cts/verifier/audio/SoundPlayerObject.java)', 1), ('(4,PIP,/android/signature/cts/tests/ApiPresenceCheckerTest.java)', 1), ('(3,KeyEvent.KEYCODE,/android/text/method/cts/DialerKeyListenerTest.java)', 1), ('(2,KeyEvent.KEYCODE,/android/widget/cts/ExpandableListViewWithHeadersTest.java)', 1), ('(4,KeyEvent.KEYCODE,/android/app/cts/LauncherActivityTest.java)', 1), ('(1,KeyEvent.KEYCODE,/android/hardware/input/cts/tests/RazerRaijuMobileBluetoothTest.java)', 1), ('(6,PIP,/android/server/wm/app/AlwaysFocusablePipActivity.java)', 1), ('(8,PIP,/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java)', 1), ('(20,PIP,/com/android/cts/releaseparser/ApkParser.java)', 1), ('(1,KeyEvent.KEYCODE,/android/app/stubs/KeyguardManagerActivity.java)', 1), ('(3,KeyEvent.KEYCODE,/com/android/cts/verifier/audio/USBAudioPeripheralButtonsActivity.java)', 1), ('(4,PIP,/android/renderscript/cts/DebugContext.java)', 1), ('(1,KeyEvent.KEYCODE,/android/text/method/cts/TextKeyListenerTest.java)', 1), ('(5,PIP,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(5,PIP,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(3,KeyEvent.KEYCODE,/android/widget/cts/ExpandableListViewBasicTest.java)', 1), ('(28,PIP,/android/app/usage/cts/UsageStatsTest.java)', 1), ('(1,KeyEvent.KEYCODE,/android/app/usage/cts/UsageStatsTest.java)', 1)]"	"[('([10:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[10]:method_text:[tKeyguardShowingAndNotOccluded();        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 2), ('([4:/android/widget/cts/SearchView_CursorTest.java]:[KeyEvent.KEYCODE]:[4]:method_text:[, times(2)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }}])', 1), ('([2:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[KeyEvent.KEYCODE]:[2]:method_text:[ */);        verify(inputConnection, times(1)).commitContent(inputContentInfo, 0, null);    }   ])', 1), ('([7:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[7]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([12:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[12]:method_text:[t contain pinned stack."", WINDOWING_MODE_PINNED,                ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([10:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[10]:method_text:[SHOW_WHEN_LOCKED_ACTIVITY, true);        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[1]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([1:/android/webkit/cts/WebViewRenderProcessClientTest.java]:[KeyEvent.KEYCODE]:[1]:method_text:[       blockRenderProcess(blocker);        WebkitUtils.waitForFuture(rendererUnblocked);    }   ])', 1), ('([1:/android/view/cts/KeyEventInjectionTest.java]:[KeyEvent.KEYCODE]:[1]:method_text:[nts.clear();    }    /**     * Long press event can be injected through UiAutomation     */   ])', 1), ('([2:/android/view/cts/KeyEventInjectionTest.java]:[KeyEvent.KEYCODE]:[2]:method_text:[ent(KeyEvent.ACTION_UP, keyCode, 0 /* repeatCount */);        assertLongPressNotReceived();    }}])', 1), ('([5:/android/content/cts/MockContentProvider.java]:[PIP]:[5]:method_text:[xt context) {        return context.getFileStreamPath(""MockContentProvider.crashonlaunch"");    }}])', 1), ('([6:/android/app/cts/PipNotSupportedActivityTest.java]:[PIP]:[6]:method_text:[Up();        mInstrumentation = getInstrumentation();        mActivity = getActivity();    }   ])', 1), ('([8:/android/app/cts/PipNotSupportedActivityTest.java]:[PIP]:[8]:method_text:[ctureInPictureMode());            }        });        mInstrumentation.waitForIdleSync();    }}])', 1), ('([2:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[PIP]:[2]:method_text:[TestBase {    @Before    public void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([27:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[PIP]:[27]:method_text:[Sequence(CallbackTrackingActivity.class, getLifecycleLog(),                ""finishPip"");    }   ])', 1), ('([18:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[PIP]:[18]:method_text:[ackingActivity.class, ON_TOP_POSITION_GAINED)),                ""finishAlwaysFocusablePip"");    }}])', 1), ('([7:/com/android/cts/documentprovider/MyDocumentsProvider.java]:[PIP]:[7]:method_text:[) {            bytes.write(buffer, 0, count);        }        return bytes.toByteArray();    }}])', 1), ('([2:/android/widget/cts/AbsListViewTest.java]:[KeyEvent.KEYCODE]:[2]:method_text:[mListView.getSelectedItemPosition());        assertTrue(mListView.shouldDrawSelector());    }   ])', 1), ('([2:/android/widget/cts/AbsListViewTest.java]:[KeyEvent.KEYCODE]:[2]:method_text:[oid resetIsOnScrollChangedCalled() {            mIsOnScrollChangedCalled = false;        }    }}])', 1), ('([6:/android/os/cts/SeccompTest.java]:[PIP]:[6]:method_text:[policy specified by installTestFilter().     */    private native static int getClockBootTime();}])', 1), ('([15:/com/android/cts/verifier/audio/SoundPlayerObject.java]:[PIP]:[15]:method_text:[ public void onPeriodicNotification(AudioTrack track) {        periodicNotification(track);    }}])', 1), ('([4:/android/signature/cts/tests/ApiPresenceCheckerTest.java]:[PIP]:[4]:method_text:[        }        void validate() {            Assert.assertTrue(failureSeen);        }    }}])', 1), ('([3:/android/text/method/cts/DialerKeyListenerTest.java]:[KeyEvent.KEYCODE]:[3]:method_text:[  // cannot make any assumptions how the key code gets translated            }        }    }   ])', 1), ('([1:/android/widget/cts/ExpandableListViewWithHeadersTest.java]:[KeyEvent.KEYCODE]:[1]:method_text:[View, null);        assertFalse(mExpandableListView.isGroupExpanded(0));    }    @LargeTest   ])', 1), ('([1:/android/widget/cts/ExpandableListViewWithHeadersTest.java]:[KeyEvent.KEYCODE]:[1]:method_text:[ mExpandableListView, null);        assertTrue(mExpandableListView.isGroupExpanded(0));    }   ])', 1), ('([4:/android/app/cts/LauncherActivityTest.java]:[KeyEvent.KEYCODE]:[4]:method_text:[    sendKeys(KeyEvent.KEYCODE_DPAD_CENTER);        assertTrue(mActivity.isOnListItemClick);    }}])', 1), ('([1:/android/hardware/input/cts/tests/RazerRaijuMobileBluetoothTest.java]:[KeyEvent.KEYCODE]:[1]:method_text:[eHelper.waitForHomeActivityVisible();        wmStateHelper.assertHomeActivityVisible(true);    }}])', 1), ('([6:/android/server/wm/app/AlwaysFocusablePipActivity.java]:[PIP]:[6]:method_text:[dowingMode(WINDOWING_MODE_PINNED);        caller.startActivity(intent, options.toBundle());    }}])', 1), ('([1:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[PIP]:[1]:method_text:[ivity.class);    }    /**     * Runs the full OpenGL ES 2.0 pipeline test offscreen.     */   ])', 1), ('([4:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[PIP]:[4]:method_text:[  streamName);    }    /**     * Runs the full OpenGL ES 2.0 pipeline test onscreen.     */   ])', 1), ('([3:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[PIP]:[3]:method_text:[                streamName);    }    /**     * Runs the pixel output test offscreen.     */   ])', 1), ('([20:/com/android/cts/releaseparser/ApkParser.java]:[PIP]:[20]:method_text:[tatic Logger getLogger() {        return Logger.getLogger(ApkParser.class.getSimpleName());    }}])', 1), ('([1:/android/app/stubs/KeyguardManagerActivity.java]:[KeyEvent.KEYCODE]:[1]:method_text:[          Log.d(TAG, ""onKeyDown"");        }        return super.onKeyDown(keyCode, event);    }}])', 1), ('([3:/com/android/cts/verifier/audio/USBAudioPeripheralButtonsActivity.java]:[KeyEvent.KEYCODE]:[3]:method_text:[asBtnA = mHasBtnB = mHasBtnC = false;        showButtonsState();        calculateMatch();    }}])', 1), ('([1:/android/renderscript/cts/DebugContext.java]:[PIP]:[1]:method_text:[    * Test whether we are detect out-of-bounds allocation accesses     * from a kernel.     */   ])', 1), ('([2:/android/renderscript/cts/DebugContext.java]:[PIP]:[2]:method_text:[  * 1D copy - things should work under DebugContext if given     * legitimate arguments     */   ])', 1), (""([1:/android/renderscript/cts/DebugContext.java]:[PIP]:[1]:method_text:[dead at this point so make sure it's not reused        RenderScript.releaseAllContexts();    }}])"", 1), ('([1:/android/text/method/cts/TextKeyListenerTest.java]:[KeyEvent.KEYCODE]:[1]:method_text:[ else {            assertEquals("""", text);        }        textKeyListener.release();    }   ])', 1), ('([5:/android/cts/statsdatom/statsd/UidAtomTests.java]:[PIP]:[5]:method_text:[(entered).hasSize(1);    }    //Note: this test does not have uid, but must run on the device   ])', 1), ('([5:/com/android/cts/verifier/camera/its/ItsService.java]:[PIP]:[5]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([1:/android/widget/cts/ExpandableListViewBasicTest.java]:[KeyEvent.KEYCODE]:[1]:method_text:[id not expand"", mExpandableListView.isGroupExpanded(groupPos));        return groupPos;    }   ])', 1), ('([1:/android/widget/cts/ExpandableListViewBasicTest.java]:[KeyEvent.KEYCODE]:[1]:method_text:[    assertFalse(""Group did not collapse"", mExpandableListView.isGroupExpanded(groupPos));    }   ])', 1), ('([1:/android/widget/cts/ExpandableListViewBasicTest.java]:[KeyEvent.KEYCODE]:[1]:method_text:[as given to the inserted group"",                mExpandableListView.isGroupExpanded(0));    }   ])', 1), ('([4:/android/app/usage/cts/UsageStatsTest.java]:[PIP]:[4]:method_text:[ity(clazz);        }    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([7:/android/app/usage/cts/UsageStatsTest.java]:[PIP]:[7]:method_text:[ty stops"", 0, stops);    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([17:/android/app/usage/cts/UsageStatsTest.java]:[PIP]:[17]:method_text:[t(0).getEventType());    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([1:/android/app/usage/cts/UsageStatsTest.java]:[KeyEvent.KEYCODE]:[1]:method_text:[        } catch(Exception e) {                return true;            }        }, false);    }}])', 1)]"	""	""	"[('PIP', 29), ('KeyEvent.KEYCODE', 19)]"	"[('[android.widget.cts.SearchView_CursorTest testSuggestionEnterKey CtsWidgetTestCases]', 1), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInputConnectionWrapper CtsInputMethodTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testEnterPipOverKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedActivityAndPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap CtsWindowManagerDeviceTestCases]', 1), ('[android.webkit.cts.WebViewRenderProcessClientTest WebViewRenderProcessClientTest CtsWebkitTestCases]', 1), ('[android.view.cts.KeyEventInjectionTest testKeyEventInjectedViaAdb CtsViewTestCases]', 1), ('[android.content.cts.MockContentProvider exists CtsContentTestCases]', 1), ('[android.app.cts.PipNotSupportedActivityTest PipNotSupportedActivityTest CtsAppTestCases]', 1), ('[android.app.cts.PipNotSupportedActivityTest testLaunchPipNotSupportedActivity CtsAppTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests testTopPositionNotSwitchedToPip CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests testTopPositionForAlwaysFocusableActivityInPip CtsWindowManagerDeviceTestCases]', 1), ('[android.widget.cts.AbsListViewTest testSelectorOnScreen CtsWidgetTestCases]', 1), ('[android.widget.cts.AbsListViewTest testEnterKey CtsWidgetTestCases]', 1), ('[android.os.cts.SeccompTest testViolateIsolatedServicePolicy None]', 1), ('[com.android.cts.verifier.audio.SoundPlayerObject isPlaying None]', 1), ('[android.signature.cts.tests.ApiPresenceCheckerTest TestClassesProvider None]', 1), ('[android.text.method.cts.DialerKeyListenerTest testLookup CtsTextTestCases]', 1), ('[android.widget.cts.ExpandableListViewWithHeadersTest testExpandOnFirstPosition CtsWidgetTestCases]', 1), ('[android.widget.cts.ExpandableListViewWithHeadersTest testExpandOnFirstGroup CtsWidgetTestCases]', 1), ('[android.app.cts.LauncherActivityTest testLaunchActivity CtsAppTestCases]', 1), ('[android.hardware.input.cts.tests.RazerRaijuMobileBluetoothTest testHomeKey CtsHardwareTestCases]', 1), ('[android.opengl2.cts.primitive.GLPrimitiveBenchmark testFullPipelineOffscreen CtsOpenGlPerf2TestCases]', 1), ('[android.opengl2.cts.primitive.GLPrimitiveBenchmark testFullPipelineOnscreen CtsOpenGlPerf2TestCases]', 1), ('[com.android.cts.releaseparser.ApkParser getTestCaseApiPackage None]', 1), ('[android.app.stubs.KeyguardManagerActivity disableKeyguard None]', 1), ('[com.android.cts.verifier.audio.USBAudioPeripheralButtonsActivity showDisableAssistantDialog None]', 1), ('[android.renderscript.cts.DebugContext testDebugContextI CtsRenderscriptTestCases]', 1), ('[android.renderscript.cts.DebugContext testDebugContextK CtsRenderscriptTestCases]', 1), ('[android.renderscript.cts.DebugContext testDebugContextRsAllocationCopy2D_Short_WrongD CtsRenderscriptTestCases]', 1), ('[android.text.method.cts.TextKeyListenerTest testPressKey CtsTextTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testPictureInPictureState CtsStatsdAtomHostTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[android.widget.cts.ExpandableListViewBasicTest testPreconditions CtsWidgetTestCases]', 1), ('[android.widget.cts.ExpandableListViewBasicTest testCollapseGroup CtsWidgetTestCases]', 1), ('[android.widget.cts.ExpandableListViewBasicTest testExpandedGroupMovement CtsWidgetTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest isAppStandbyEnabled CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testPipActivity CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testPipActivity_StopToPause CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testLocusIdEventsVisibility CtsUsageStatsTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.3  . Bluetooth"	"7.4.3"	"C-6-1"	"7.4.3/C-6-1"	"07040300.670601"	"""C-6-1] MUST restrict access to any Bluetooth metadata (such as scan results) which could be used to derive the location of the device, unless the requesting app successfully passes an android.permission.ACCESS_FINE_LOCATION permission check based on its current foreground/background state. If device implementations include support for Bluetooth or Bluetooth Low Energy and the app manifest does not include a declaration from the developer stating that they are not deriving location from Bluetooth, then, they:"""	""	""	"ACCESS_FINE_LOCATION android.permission.ACCESS"	""	""	""	""	"[('android.backup.cts.PermissionTest', 10), ('android.permission.cts.PermissionControllerTest', 8), ('android.permission2.cts.RestrictedPermissionsTest', 6), ('android.permission.cts.BackgroundPermissionsTest', 5), ('android.permission.cts.OneTimePermissionTest', 2), ('com.android.cts.deviceandprofileowner.PermissionsTest', 2), ('android.permission.cts.LocationAccessCheckTest', 2), ('com.android.cts.managedprofile.LauncherAppsTest', 1), ('test.java.com.android.bedstead.nene.packages.PackageTest', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('android.carrierapi.cts.NetworkScanApiTest', 1), ('com.android.cts.verifier.managedprovisioning.ByodHelperActivity', 1), ('android.telephony.cts.TelephonyManagerTest', 1), ('com.android.cts.verifier.camera.intents.CameraIntentsActivity', 1), ('com.android.cts.devicepolicy.PermissionUtils', 1), ('android.telephony.ims.cts.ImsServiceTest', 1), ('android.jobscheduler.cts.JobThrottlingTest', 1), ('android.telephony.ims.cts.EabControllerTest', 1), ('android.jobscheduler.cts.ConnectivityConstraintTest', 1)]"	"[('getContext', 12), ('getInstrumentation', 11), ('getUiAutomation', 7), ('getTargetContext', 5), ('getPackageManager', 5), ('setUp', 5), ('getName', 5), ('getIntent', 4), ('getStageIndex', 4), ('build', 3), ('getAction', 3), ('waitForBroadcast', 3), ('tearDown', 2), ('getSimpleName', 2), ('installApp', 2), ('uninstallApp', 2), ('Object', 2), ('createPublicVersionNotification', 2), ('Intent', 2), ('updateSuccessState', 2), ('getReceiverComponentName', 1), ('myUserId', 1), ('wakeUpScreen', 1), ('prepareDeviceForOneTime', 1), ('restoreDeviceForOneTime', 1), ('getPackageName', 1), ('start', 1), ('setUpOnce', 1), ('CommandBroadcastReceiver', 1), ('IntentFilter', 1), ('tearDownOnce', 1), ('shareUidBetweenRestrictedAndNotRestrictedApp', 1), ('getMainLooper', 1), ('Bundle', 1), ('StringBuilder', 1), ('hashCode', 1), ('toString', 1), ('click', 1), ('resetAppState', 1), ('BackupUtils', 1)]"	"[('CtsPermissionTestCases', 17), ('CtsBackupTestCases', 10), ('CtsPermission2TestCases', 6), ('CtsTelephonyTestCases', 3), ('CtsJobSchedulerTestCases', 2), ('CtsCarrierApiTestCases', 1)]"	""	"android.backup.cts.PermissionTest"	"setUp"	"CtsBackupTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/backup/src/android/backup/cts/PermissionTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/PermissionControllerTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/BackgroundPermissionsTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PermissionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/LocationAccessCheckTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/LauncherAppsTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/packages/PackageTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/NetworkScanApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/common/src/com/android/cts/devicepolicy/PermissionUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/JobThrottlingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/EabControllerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/ConnectivityConstraintTest.java', 1)]"	"[('(1,android.permission.ACCESS,/com/android/cts/managedprofile/LauncherAppsTest.java)', 1), ('(1,android.permission.ACCESS,/test/java/com/android/bedstead/nene/packages/PackageTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(5,ACCESS_FINE_LOCATION,/android/permission/cts/BackgroundPermissionsTest.java)', 1), ('(3,ACCESS_FINE_LOCATION,/android/permission/cts/OneTimePermissionTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/carrierapi/cts/NetworkScanApiTest.java)', 1), ('(6,ACCESS_FINE_LOCATION,/android/permission2/cts/RestrictedPermissionsTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java)', 1), ('(1,ACCESS_FINE_LOCATION,/com/android/cts/devicepolicy/PermissionUtils.java)', 1), ('(3,ACCESS_FINE_LOCATION,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(2,android.permission.ACCESS,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(11,ACCESS_FINE_LOCATION,/android/permission/cts/PermissionControllerTest.java)', 1), ('(2,android.permission.ACCESS,/android/telephony/ims/cts/EabControllerTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/jobscheduler/cts/ConnectivityConstraintTest.java)', 1), ('(20,ACCESS_FINE_LOCATION,/android/backup/cts/PermissionTest.java)', 1)]"	"[('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[       ACCESS_BACKGROUND_LOCATION)));        assertAllRestrictedPermissionWhitelisted();    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ions.singleton(ACCESS_FINE_LOCATION));        assertNoRestrictedPermissionWhitelisted();    }   ])', 2), ('([3:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[3]:method_text:[     });    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 2), ('([1:/com/android/cts/managedprofile/LauncherAppsTest.java]:[android.permission.ACCESS]:[1]:method_text:[ry.getInstrumentation().getUiAutomation()                .dropShellPermissionIdentity();    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackageTest.java]:[android.permission.ACCESS]:[1]:method_text:[ntedContext();    private static final UserReference sUser = sTestApis.users().instrumented();   ])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[mation();    @After    public void uninstallTestApp() {        uninstallApp(APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ Make sure location switch-op is set if fine location with background access is granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[    * Make sure location switch-op is set if fine and coarse location access is granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[n switch-op is set if fine and coarse location with background access is     * granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[).that(                getAppOp(APP_PKG, ACCESS_COARSE_LOCATION)).isEqualTo(MODE_ALLOWED));    }}])', 1), ('([1:/android/permission/cts/OneTimePermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ions_timeout_millis"",                        mOldOneTimePermissionTimeoutValue, false));    }   ])', 1), ('([2:/android/permission/cts/OneTimePermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[               mActivityManager.removeOnUidImportanceListener(this);            }        }    }}])', 1), ('([2:/android/carrierapi/cts/NetworkScanApiTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ radioAccessSpecifier;    }    /** Tests that the device properly requests a network scan. */   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[c static void tearDownOnce() {        getContext().unregisterReceiver(sCommandReceiver);    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 1), ('([2:/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ge = getString(messageId);        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();    }}])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ uiAutomation.grantRuntimePermission(packageName, permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 1), ('([2:/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[sButtonGoesToNextStage() {        findViewById(R.id.pass_button).setOnClickListener(this);    }}])', 1), ('([1:/com/android/cts/devicepolicy/PermissionUtils.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[break;            }        }        assertTrue(""Couldn\'t find any button"", foundButton);    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[er(mReceiver);        mDevice.removeWatcher(CRASH_WATCHER_ID);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ PERMISSION_DENIED,                PERMISSION_APP_PACKAGE_NAME, PERMISSIONS_ACTIVITY_NAME);    }}])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[    @After    public void locationUnbind() throws Throwable {        unbindService();    }   ])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[otification(true)), EXPECTED_TIMEOUT_MILLIS);    }    @SystemUserOnly(reason = ""b/172259935"")   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[android.permission.ACCESS]:[2]:method_text:[remove request disallowed status: "" + e);        }        overrideCarrierConfig(null);    }   ])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[sTrue();    }    private interface Condition {        boolean isTrue() throws Exception;    }}])', 1), ('([3:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[3]:method_text:[ions as permissionInfos        assertThat(numRuntimeGranted).isAtLeast(numInfosGranted);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ring>> result = revokePermissions(request, false);        assertThat(result).isEmpty();    }   ])', 1), ('([2:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[CCESS_FINE_LOCATION,                ACCESS_BACKGROUND_LOCATION, ACCESS_COARSE_LOCATION);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[LER_POLICY_VIOLATION, sContext.getMainExecutor()));        assertThat(result).isEmpty();    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[         singletonList(ACCESS_FINE_LOCATION));        revokePermissions(request, true);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[and after                    assertThat(numApps.get()).isAtLeast(1);                });    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ontroller.countPermissionApps(singletonList(ACCESS_FINE_LOCATION), -1, (n) -> { }, null);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[        sController.countPermissionApps(singletonList(ACCESS_FINE_LOCATION), 0, null, null);    }}])', 1), ('([2:/android/telephony/ims/cts/EabControllerTest.java]:[android.permission.ACCESS]:[2]:method_text:[imes--;        } while (retryTimes > 0 && Instant.now().getEpochSecond() < expirationTime);    }}])', 1), ('([1:/android/jobscheduler/cts/ConnectivityConstraintTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ptyMessageDelayed(MSG_CHECK_ACTIVE_NETWORK, 5000);                }            }        }    }}])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[App(APP22);    }    /**     * Test backup and restore of regular runtime permission.     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[  });    }    /**     * Test backup and restore of pre-M regular runtime permission.     */   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[     });    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[TION)));    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 1), ('([3:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[3]:method_text:[e     * TODO: b/178522459 to fix the test once the foundamental issue has been fixed.     *///   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ON)));//    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[INE_LOCATION));        });    }    /**     * Restore if the permission was reviewed     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ app));        } catch (Exception e) {            throw new RuntimeException(e);        }    }}])', 1)]"	""	""	"[('ACCESS_FINE_LOCATION', 43), ('android.permission.ACCESS', 4)]"	"[('[com.android.cts.managedprofile.LauncherAppsTest dropShellPermissionIdentity None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackageTest TestApis None]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[android.permission.cts.BackgroundPermissionsTest uninstallTestApp CtsPermissionTestCases]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfOnlyFineLocPermIsGranted CtsPermissionTestCases]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfFineAndBgLocPermIsGranted CtsPermissionTestCases]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfFineAndCoarseLocPermIsGranted CtsPermissionTestCases]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfFineCoarseAndBgLocPermIsGranted CtsPermissionTestCases]', 1), ('[android.permission.cts.OneTimePermissionTest testStickyServiceMaintainsPermissionOnRestart CtsPermissionTestCases]', 1), ('[android.carrierapi.cts.NetworkScanApiTest werePreconditionsSatisfied CtsCarrierApiTestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest isTrue CtsPermission2TestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.ByodHelperActivity isProfileOwner None]', 1), ('[android.telephony.cts.TelephonyManagerTest testHasCarrierPrivilegesViaCarrierConfigs CtsTelephonyTestCases]', 1), ('[com.android.cts.verifier.camera.intents.CameraIntentsActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest PermissionBroadcastReceiver None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testStateOfSensorsRelatedPermissionsCannotBeRead None]', 1), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName CtsPermissionTestCases]', 1), ('[android.permission.cts.LocationAccessCheckTest notificationIsShownAgainAfterClear CtsPermissionTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishWithAuthorizedErrorResponse CtsTelephonyTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictingStopReason_Doze CtsJobSchedulerTestCases]', 1), ('[android.permission.cts.PermissionControllerTest OnRevokeRuntimePermissionsCallback CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsDoNotAlreadyRevokedPermission CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsDryRunForegroundPermission CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsPolicyViolationFromWrongPackage CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsWithNullPkg CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest countPermissionAppsGranted CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest countPermissionAppsInvalidFlags CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest countPermissionAppsNullCallback CtsPermissionTestCases]', 1), ('[android.telephony.ims.cts.EabControllerTest testRequestExpiredAvailabilities CtsTelephonyTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest testExpeditedJobDoesNotBypassSimultaneousFirewalls_withDataSaver CtsJobSchedulerTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantDeniedRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantDeniedRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testNoTriStateRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testNoTriStateRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundAndBackgroundRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundAndBackgroundRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testDelayedRestore CtsBackupTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-0-2"	"7.3.1/C-0-2"	"07030100.670002"	"""C-0-2] of section 9.11."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-1"	"9.8/H-1-1"	"09080000.720101"	"""[9.8/H-1-1] MUST make sure the hotword detection service can only transmit data to the System or ContentCaptureService """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.2.4  . Wi"	"7.4.2.4"	"C-1-6"	"7.4.2.4/C-1-6"	"07040204.670106"	"""C-1-6] MUST support at least the following subset of device provisioning protocols as defined in the Wi-Fi Alliance Passpoint R2: EAP-TTLS authentication and SOAP-XML."""	""	""	"SOAP EAP TTLS XML"	""	""	""	""	"[('android.graphics.drawable.cts.AnimatedStateListDrawableTest', 5), ('android.security.SELinuxTargetSdkTest', 4), ('android.widget.cts.RelativeLayout_LayoutParamsTest', 3), ('android.jdwptunnel.cts.JdwpTunnelTest', 3), ('android.server.wm.AppConfigurationTests', 3), ('android.widget.cts.AbsListViewTest', 3), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 2), ('android.media.cts.bitstreams.MediaBitstreamsTest', 2), ('android.atrace.cts.AtraceHostTest', 2), ('android.util.cts.XmlEncodingTest', 2), ('android.security.cts.BitmapFactoryDecodeStreamTest', 2), ('android.media.cts.AudioManagerTest', 1), ('com.android.suspendapps.suspendtestapp.TestService', 1), ('test.java.com.android.bedstead.nene.packages.PackageReferenceTest', 1), ('com.android.cts.verifier.ReportExporter', 1), ('android.server.wm.app.HideOverlayWindowsActivity', 1), ('android.appsecurity.cts.ApkVerityInstallTest', 1), ('com.android.cts.verifier.sensors.OffBodySensorTestActivity', 1), ('android.appwidget.cts.packages.SimpleProvider', 1), ('com.android.tests.atomicinstall.AtomicInstallTest', 1), ('com.android.cts.deviceandprofileowner.WifiTest', 1), ('android.cts.backup.keyvaluerestoreapp.KeyValueBackupRestoreTest', 1), ('android.appsecurity.cts.AppDataIsolationTests', 1), ('android.keystore.cts.KeyProtectionTest', 1), ('android.server.wm.app.TrampolineActivity', 1), ('android.widget.cts.AbsListView_LayoutParamsTest', 1), ('android.view.animation.cts.AnimationUtilsTest', 1), ('android.dynamicmime.testapp.reboot.PostRebootSingleAppTest', 1), ('test.java.com.android.bedstead.nene.packages.PackageTest', 1)]"	"[('getDevice', 9), ('setUp', 6), ('getInstrumentation', 5), ('getResources', 5), ('getTargetContext', 4), ('setup', 4), ('now', 4), ('getPackageName', 3), ('tearDown', 3), ('stream', 3), ('onSensorChanged', 3), ('getContext', 2), ('getSystem', 2), ('getActivity', 2), ('moveToHomeScreen', 2), ('name', 2), ('findFirst', 2), ('trim', 2), ('getAction', 2), ('getArguments', 2), ('getDefaultBitstreamsDir', 2), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getPackageManager', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('getSimpleName', 1), ('Object', 1), ('Stub', 1), ('virtualMachineManager', 1), ('attachingConnectors', 1), ('transport', 1), ('defaultArguments', 1), ('eventRequestManager', 1), ('suspend', 1), ('allClasses', 1), ('createClassPrepareRequest', 1), ('enable', 1), ('resume', 1), ('eventQueue', 1), ('remove', 1), ('request', 1), ('referenceType', 1), ('getName', 1), ('BroadcastReceiver', 1), ('getWindow', 1), ('installSingle', 1), ('installAndUpdate', 1), ('getLaunchApiLevel', 1), ('assumeSecurityModelCompat', 1), ('elapsedRealtimeNanos', 1), ('getType', 1), ('getExternalCacheDir', 1), ('toString', 1), ('getDefaultMediaDir', 1), ('FileFilter', 1), ('getRootWindowInsets', 1), ('getSystemGestureInsets', 1)]"	"[('CtsWidgetTestCases', 7), ('CtsGraphicsTestCases', 5), ('CtsJdwpTunnelHostTestCases', 3), ('CtsWindowManagerDeviceTestCases', 3), ('CtsSelinuxTargetSdk27TestCases', 2), ('CtsAppSecurityHostTestCases', 2), ('CtsSelinuxTargetSdk28TestCases', 2), ('CtsMediaBitstreamsTestCases', 2), ('CtsAtraceHostTestCases', 2), ('CtsUtilTestCases', 2), ('CtsSecurityTestCases', 2), ('CtsMediaTestCases', 1), ('CtsAtomicInstallTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsViewTestCases', 1)]"	""	"android.widget.cts.AbsListViewTest"	"getSystemGestureInsets"	"CtsWidgetTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/AnimatedStateListDrawableTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RelativeLayout_LayoutParamsTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/AbsListViewTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/selinux/selinuxTargetSdk27/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/selinux/selinuxTargetSdk28/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/src/android/media/cts/bitstreams/MediaBitstreamsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/atrace/src/android/atrace/cts/AtraceHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/util/src/android/util/cts/XmlEncodingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/BitmapFactoryDecodeStreamTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/test-apps/SuspendTestApp/src/com/android/suspendapps/suspendtestapp/TestService.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/ReportExporter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/HideOverlayWindowsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/OffBodySensorTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/packages/src/android/appwidget/cts/packages/SimpleProvider.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/atomicinstall/src/com/android/tests/atomicinstall/AtomicInstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/WifiTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/KeyValueApp/src/android/cts/backup/keyvaluerestoreapp/KeyValueBackupRestoreTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyProtectionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/TrampolineActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/AbsListView_LayoutParamsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/animation/cts/AnimationUtilsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/reboot/PostRebootSingleAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/packages/PackageTest.java', 1)]"	"[('(2,EAP,/android/security/SELinuxTargetSdkTest.java)', 2), ('(1,EAP,/android/media/cts/AudioManagerTest.java)', 1), ('(1,EAP,/com/android/suspendapps/suspendtestapp/TestService.java)', 1), ('(9,XML,/android/widget/cts/RelativeLayout_LayoutParamsTest.java)', 1), ('(8,EAP,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(2,XML,/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java)', 1), ('(1,EAP,/android/server/wm/AppConfigurationTests.java)', 1), ('(2,XML,/android/server/wm/AppConfigurationTests.java)', 1), ('(4,XML,/com/android/cts/verifier/ReportExporter.java)', 1), ('(1,EAP,/android/server/wm/app/HideOverlayWindowsActivity.java)', 1), ('(1,EAP,/android/appsecurity/cts/ApkVerityInstallTest.java)', 1), ('(3,EAP,/com/android/cts/verifier/sensors/OffBodySensorTestActivity.java)', 1), ('(1,EAP,/android/appwidget/cts/packages/SimpleProvider.java)', 1), ('(1,EAP,/com/android/tests/atomicinstall/AtomicInstallTest.java)', 1), ('(3,EAP,/com/android/cts/deviceandprofileowner/WifiTest.java)', 1), ('(9,XML,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(18,XML,/android/media/cts/bitstreams/MediaBitstreamsTest.java)', 1), ('(4,EAP,/android/atrace/cts/AtraceHostTest.java)', 1), ('(20,XML,/android/graphics/drawable/cts/AnimatedStateListDrawableTest.java)', 1), ('(3,EAP,/android/cts/backup/keyvaluerestoreapp/KeyValueBackupRestoreTest.java)', 1), ('(2,EAP,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(1,EAP,/android/keystore/cts/KeyProtectionTest.java)', 1), ('(1,XML,/android/server/wm/app/TrampolineActivity.java)', 1), ('(16,XML,/android/util/cts/XmlEncodingTest.java)', 1), ('(6,XML,/android/widget/cts/AbsListView_LayoutParamsTest.java)', 1), ('(3,XML,/android/view/animation/cts/AnimationUtilsTest.java)', 1), ('(5,EAP,/android/dynamicmime/testapp/reboot/PostRebootSingleAppTest.java)', 1), ('(2,EAP,/android/security/cts/BitmapFactoryDecodeStreamTest.java)', 1), ('(1,XML,/test/java/com/android/bedstead/nene/packages/PackageTest.java)', 1), ('(2,EAP,/android/widget/cts/AbsListViewTest.java)', 1), ('(9,XML,/android/widget/cts/AbsListViewTest.java)', 1)]"	"[('([1:/android/server/wm/AppConfigurationTests.java]:[XML]:[1]:method_text:[h has     * rotation sensing optimization. So this is listed in cts-known-failures.xml.     */   ])', 2), ('([1:/android/security/SELinuxTargetSdkTest.java]:[EAP]:[1]:method_text:[erify that selinux context is the expected type based on     * targetSdkVersion = 26-27     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[EAP]:[1]:method_text:[ile:s0:c512,c768\\n"" +            ""Actual value: "";        appDataContext(context, msg);    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[EAP]:[1]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/com/android/suspendapps/suspendtestapp/TestService.java]:[EAP]:[1]:method_text:[{            sRegisteredReporters.clear();        }        return super.onUnbind(intent);    }}])', 1), ('([4:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[XML]:[4]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([4:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[XML]:[4]:method_text:[IGN_TOP]);        assertEquals(R.id.relative_view3, rules[RelativeLayout.ALIGN_BOTTOM]);    }   ])', 1), ('([1:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[XML]:[1]:method_text:[t.ALIGN_BOTTOM]);        layoutParams.resolveLayoutDirection(View.LAYOUT_DIRECTION_LTR);    }   ])', 1), ('([6:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[EAP]:[6]:method_text:[of the activity     * class and put and wait for a breakpoint on the onCreate function.     */   ])', 1), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[EAP]:[1]:method_text:[ttach the debuggable should fail on a user build device at the     * expected API call.     */   ])', 1), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[EAP]:[1]:method_text:[ould race with the JDWP handshake. This could     * confuse clients. See bug: 178655046     */   ])', 1), ('([2:/test/java/com/android/bedstead/nene/packages/PackageReferenceTest.java]:[XML]:[2]:method_text:[ Use annotations to share state instead of doing so manually        sOtherUser.remove();    }   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[EAP]:[1]:method_text:[  /**     * Test launching an activity which requests specific UI mode during creation.     */   ])', 1), ('([4:/com/android/cts/verifier/ReportExporter.java]:[XML]:[4]:method_text:[sult)                .setPositiveButton(android.R.string.ok, null)                .show();    }}])', 1), ('([1:/android/server/wm/app/HideOverlayWindowsActivity.java]:[EAP]:[1]:method_text:[ws(booleanExtra);                sendBroadcast(new Intent(PONG));            }        }    };}])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[EAP]:[1]:method_text:[     getDevice().uninstallPackage(PACKAGE_NAME);    }    @CddTest(requirement = ""9.10/C-0-3"")   ])', 1), ('([3:/com/android/cts/verifier/sensors/OffBodySensorTestActivity.java]:[EAP]:[3]:method_text:[ null) && mDeviceSuspendLock.isHeld()) {            mDeviceSuspendLock.release();        }    }}])', 1), ('([1:/android/appwidget/cts/packages/SimpleProvider.java]:[EAP]:[1]:method_text:[ass),                    request);            setResultCode(Activity.RESULT_OK);        }    }}])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[EAP]:[1]:method_text:[* Verify that selinux context is the expected type based on     * targetSdkVersion = 28     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[EAP]:[1]:method_text:[9,c256,c512,c768\\n"" +            ""Actual value: "";        appDataContext(context, msg);    }   ])', 1), ('([1:/com/android/tests/atomicinstall/AtomicInstallTest.java]:[EAP]:[1]:method_text:[-check false"");        }    }    /**     * Tests a single-session can\'t have child.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/WifiTest.java]:[EAP]:[3]:method_text:[A_EAP);        config.enterpriseConfig = makeWifiEnterpriseConfig();        return config;    }}])', 1), ('([6:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[XML]:[6]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[XML]:[3]:method_text:[tstreams.KEY_BITSTREAMS_FORMATS_XML,                new GenerateBitstreamsFormatsXml());    }   ])', 1), ('([17:/android/media/cts/bitstreams/MediaBitstreamsTest.java]:[XML]:[17]:method_text:[            CLog.e(e);                return false;            }        }    }    @Ignore   ])', 1), ('([1:/android/media/cts/bitstreams/MediaBitstreamsTest.java]:[XML]:[1]:method_text:[         getCurrentMethod(),                MediaBitstreams.KEY_BITSTREAMS_FORMATS_XML);    }   ])', 1), (""([2:/android/atrace/cts/AtraceHostTest.java]:[EAP]:[2]:method_text:[though tracing is active, Trace.isEnabled() is false since the app    // category isn't enabled   ])"", 1), ('([2:/android/atrace/cts/AtraceHostTest.java]:[EAP]:[2]:method_text:[etName())) {                return counter;            }        }        return null;    }   ])', 1), ('([6:/android/graphics/drawable/cts/AnimatedStateListDrawableTest.java]:[XML]:[6]:method_text:[InstrumentationRegistry.getTargetContext();        mResources = mContext.getResources();    }   ])', 1), ('([1:/android/graphics/drawable/cts/AnimatedStateListDrawableTest.java]:[XML]:[1]:method_text:[adDensityTestForDrawable(                R.drawable.animated_state_list_density, false);    }   ])', 1), ('([11:/android/graphics/drawable/cts/AnimatedStateListDrawableTest.java]:[XML]:[11]:method_text:[ XmlPullParser.END_DOCUMENT) {            // Empty loop        }        return parser;    }   ])', 1), ('([1:/android/graphics/drawable/cts/AnimatedStateListDrawableTest.java]:[XML]:[1]:method_text:[Null(asldState.getConstantPadding());        assertEquals(4, asldState.getChildCount());    }   ])', 1), ('([1:/android/graphics/drawable/cts/AnimatedStateListDrawableTest.java]:[XML]:[1]:method_text:[        }        @Override        public void setColorFilter(ColorFilter cf) {        }    }}])', 1), ('([3:/android/cts/backup/keyvaluerestoreapp/KeyValueBackupRestoreTest.java]:[EAP]:[3]:method_text:[  public void tearDown() {        mContext.unregisterReceiver(mSharedPrefencesReceiver);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[EAP]:[2]:method_text:[  getDevice().uninstallPackage(APPA_PKG);        getDevice().uninstallPackage(APPB_PKG);    }   ])', 1), ('([1:/android/keystore/cts/KeyProtectionTest.java]:[EAP]:[1]:method_text:[ForOriginationEnd());        assertEquals(date, spec.getKeyValidityForConsumptionEnd());    }   ])', 1), ('([1:/android/server/wm/app/TrampolineActivity.java]:[XML]:[1]:method_text:[IVITY_CLEAR_TOP | FLAG_ACTIVITY_NEW_TASK);        startActivity(intent);        finish();    }}])', 1), ('([8:/android/util/cts/XmlEncodingTest.java]:[XML]:[8]:method_text:[g STR_START_TAG = ""start:"";    private static final String STR_CHARACTERS_TAG = ""characters:"";   ])', 1), ('([8:/android/util/cts/XmlEncodingTest.java]:[XML]:[8]:method_text:[ {        if (actual.length() != 0) {            assertEquals(expected, actual);        }    }}])', 1), ('([6:/android/widget/cts/AbsListView_LayoutParamsTest.java]:[XML]:[6]:method_text:[Document(parser, ""ViewGroup_Layout"");        mAttributeSet = Xml.asAttributeSet(parser);    }   ])', 1), ('([3:/android/view/animation/cts/AnimationUtilsTest.java]:[XML]:[3]:method_text:[getAnimation().getDuration());        assertEquals(0.1f, controller.getDelay(), 0.001f);    }   ])', 1), ('([5:/android/dynamicmime/testapp/reboot/PostRebootSingleAppTest.java]:[EAP]:[5]:method_text:[rride    public void tearDown() {        setCommands(mCommands);        super.tearDown();    }}])', 1), ('([1:/android/security/cts/BitmapFactoryDecodeStreamTest.java]:[EAP]:[1]:method_text:[ed PNG image with incorrect     * npTc chunk.     */    @AsbSecurityTest(cveBugId = 19151999)   ])', 1), ('([1:/android/security/cts/BitmapFactoryDecodeStreamTest.java]:[EAP]:[1]:method_text:[        BitmapFactory.decodeStream(inStream);    }    @AsbSecurityTest(cveBugId = 36724453)   ])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackageTest.java]:[XML]:[1]:method_text:[ntedContext();    private static final UserReference sUser = sTestApis.users().instrumented();   ])', 1), ('([2:/android/widget/cts/AbsListViewTest.java]:[EAP]:[2]:method_text:[ToScrapHeap(reclaimed);        }        verifyNoMoreInteractions(mockRecyclerListener);    }   ])', 1), ('([8:/android/widget/cts/AbsListViewTest.java]:[XML]:[8]:method_text:[e                & Configuration.UI_MODE_TYPE_MASK) == Configuration.UI_MODE_TYPE_WATCH;    }   ])', 1), ('([1:/android/widget/cts/AbsListViewTest.java]:[XML]:[1]:method_text:[        assertEquals(ViewGroup.LayoutParams.WRAP_CONTENT, res.height);    }    @UiThreadTest   ])', 1)]"	""	""	"[('EAP', 25), ('XML', 24)]"	"[('[android.security.SELinuxTargetSdkTest testAppDomainContext CtsSelinuxTargetSdk27TestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDataContext CtsSelinuxTargetSdk27TestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[com.android.suspendapps.suspendtestapp.TestService isPackageSuspended None]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testStartEnd CtsWidgetTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest disable CtsJdwpTunnelHostTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest testAttachDebuggerToDebuggableApp CtsJdwpTunnelHostTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest testAttachDebuggerToProfileableApp CtsJdwpTunnelHostTestCases]', 1), ('[test.java.com.android.bedstead.nene.packages.PackageReferenceTest TestApis None]', 1), ('[android.server.wm.AppConfigurationTests testSplitscreenLandscapeAppOrientationRequests CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationRequestConfigChanges CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.AppConfigurationTests testTaskCloseRestoreFixedOrientation CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.ReportExporter currentTimeMillis None]', 1), ('[com.android.cts.verifier.sensors.OffBodySensorTestActivity getTestLogger None]', 1), ('[android.security.SELinuxTargetSdkTest testAppDomainContext CtsSelinuxTargetSdk28TestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDataContext CtsSelinuxTargetSdk28TestCases]', 1), ('[com.android.tests.atomicinstall.AtomicInstallTest testInvalidStateScenario_MultiSessionCantBeApex CtsAtomicInstallTestCases]', 1), ('[com.android.cts.deviceandprofileowner.WifiTest testAddNetworkSuggestionWithKeychainKey_notGranted None]', 1), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 1), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest testGetBitstreamsFormats None]', 1), ('[android.media.cts.bitstreams.MediaBitstreamsTest isDirectory CtsMediaBitstreamsTestCases]', 1), ('[android.media.cts.bitstreams.MediaBitstreamsTest testGetBitstreamsFormats CtsMediaBitstreamsTestCases]', 1), ('[android.atrace.cts.AtraceHostTest testTracingIsEnabled CtsAtraceHostTestCases]', 1), ('[android.atrace.cts.AtraceHostTest testTracingIsDisabled CtsAtraceHostTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedStateListDrawableTest testPreloadDensity CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedStateListDrawableTest testPreloadDensityConstantSize CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedStateListDrawableTest testInflate CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedStateListDrawableTest testParsingTransitionDefinedWithAVD CtsGraphicsTestCases]', 1), ('[android.cts.backup.keyvaluerestoreapp.KeyValueBackupRestoreTest testSharedPreferencesRestore None]', 1), ('[android.keystore.cts.KeyProtectionTest testSetKeyValidityEndDateAppliesToBothEndDates CtsKeystoreTestCases]', 1), ('[android.server.wm.app.TrampolineActivity finish None]', 1), ('[android.util.cts.XmlEncodingTest testValueOf CtsUtilTestCases]', 1), ('[android.view.animation.cts.AnimationUtilsTest testLoad CtsViewTestCases]', 1), ('[android.dynamicmime.testapp.reboot.PostRebootSingleAppTest PostRebootSingleAppTest None]', 1), ('[android.security.cts.BitmapFactoryDecodeStreamTest testNinePatchHeapOverflow CtsSecurityTestCases]', 1), ('[test.java.com.android.bedstead.nene.packages.PackageTest TestApis None]', 1), ('[android.widget.cts.AbsListViewTest testSetRecyclerListener CtsWidgetTestCases]', 1), ('[android.widget.cts.AbsListViewTest isWatch CtsWidgetTestCases]', 1), ('[android.widget.cts.AbsListViewTest testGenerateLayoutParams CtsWidgetTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-1-2"	"8.2/H-1-2"	"08020000.720102"	"""[8.2/H-1-2] MUST ensure a random write performance of at least 10 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-3-1"	"9.5/C-3-1"	"09050000.670301"	"""C-3-1] MUST only provide access to storage or data that is either already accessible to the parent user profile or is directly owned by this additional user profile."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.9.2"	"3.9.2"	"C-1-8"	"3.9.2/C-1-8"	"03090200.670108"	"""C-1-8] MUST ensure the preinstalled dialer, contacts and messaging applications can search for and look up caller information from the managed profile (if one exists) alongside those from the primary profile, if the Device Policy Controller permits it."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.2  .  These are in the Android source tree at"	"7.1.4.2"	"C-1-5"	"7.1.4.2/C-1-5"	"07010402.670105"	"""C-1-5] MUST NOT enumerate layers provided by libraries outside of the application package, or provide other ways of tracing or intercepting the Vulkan API, unless the application has the android:debuggable attribute set as true."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.2.5  . Wi"	"7.4.2.5"	"C-1-4"	"7.4.2.5/C-1-4"	"07040205.670104"	"""C-1-4] MUST be accurate to within 2 meters at 80 MHz bandwidth at the 68th percentile (as calculated with the Cumulative Distribution Function). <h5 id=""7426_wi-fi_keepalive_offload"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-7"	"9.9.3/C-1-7"	"09090300.670107"	"""C-1-7] MUST be cryptographically bound to a hardware-backed Keystore. This keystore MUST be bound to Verified Boot and the device&#39;s hardware root of trust."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-4-4"	"9.8.2/H-4-4"	"09080200.720404"	"""[9.8.2/H-4-4] MUST display the list of Recent and Active apps using the microphone as returned from PermissionManager.getIndicatorAppOpUsageData(), along with any attribution messages associated with them. If Handheld device implementations declare android.hardware.camera.any, they: """	""	""	"getIndicatorAppOpUsageData() PermissionManager.getIndicatorAppOpUsageData android.hardware.camera.any"	""	""	""	""	"[('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('com.android.cts.verifier.features.FeatureSummaryActivity', 1)]"	"[('hashCode', 2), ('getDevice', 1), ('getStdout', 1), ('trim', 1)]"	"[('CtsAdbManagerHostTestCases', 1)]"	""	"com.android.cts.verifier.features.FeatureSummaryActivity"	"hashCode"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/features/FeatureSummaryActivity.java', 1)]"	"[('(1,android.hardware.camera.any,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1), ('(1,android.hardware.camera.any,/com/android/cts/verifier/features/FeatureSummaryActivity.java)', 1)]"	"[('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.camera.any]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 1), ('([1:/com/android/cts/verifier/features/FeatureSummaryActivity.java]:[android.hardware.camera.any]:[1]:method_text:[lse {            ((TextView) (findViewById(R.id.fs_warnings))).setText(warnings);        }    }}])', 1)]"	""	""	"[('android.hardware.camera.any', 2)]"	"[('[com.android.cts.verifier.features.FeatureSummaryActivity setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-2-6"	"7.3.1/C-2-6"	"07030100.670206"	"""C-2-6] MUST NOT enable third-party applications to distinguish between individual biometric enrollments."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.5"	"7.1.4.5"	"C-1-1"	"7.1.4.5/C-1-1"	"07010405.670101"	"""C-1-1] MUST have a color-calibrated display."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.4.2.4  . Wi"	"7.4.2.4"	"C-1-7"	"7.4.2.4/C-1-7"	"07040204.670107"	"""C-1-7] MUST process the AAA server certificate as described in Hotspot 2.0 R3 specification."""	""	""	"AAA"	""	""	""	""	"[('android.autofillservice.cts.commontests.DatasetFilteringTest', 7), ('android.text.cts.SelectionTest', 4), ('android.jvmti.cts.JvmtiRedefineClassesTest', 3), ('android.widget.cts.TextViewTest', 3), ('android.content.pm.cts.ChecksumsTest', 3), ('android.webkit.cts.WebSettingsTest', 2), ('dot.junit.opcodes.long_to_int.Test_long_to_int', 2), ('android.autofillservice.cts.inline.InlineFilteringTest', 2), ('android.keystore.cts.MacTest', 1), ('android.autofillservice.cts.dropdown.VirtualContainerActivityTest', 1), ('android.webkit.cts.CtsTestServer', 1), ('android.text.cts.FontCoverageTest', 1), ('android.text.cts.FontResourceTest', 1), ('android.renderscript.cts.generated.TestCopysign', 1), ('android.keystore.cts.SignatureTest', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.renderscript.cts.generated.TestClamp', 1), ('android.graphics.cts.ColorTest', 1), ('android.graphics.fonts.NativeSystemFontTest', 1), ('android.security.cts.RunningAppProcessInfoTest', 1), ('android.text.cts.SpannableStringBuilderTest', 1), ('android.text.cts.StaticLayoutTest', 1), ('android.security.cts.AmbiguousBundlesTest', 1), ('android.security.cts.CVE_2021_0691', 1), ('dot.junit.opcodes.return_void.d.T_return_void_1', 1), ('android.renderscript.cts.generated.TestConvert', 1), ('android.os.cts.WorkSourceTest', 1), ('android.webkit.cts.TestWebServer', 1), ('android.renderscript.cts.generated.TestMax', 1), ('android.appsecurity.cts.v3rotationtests.V3RotationTest', 1), ('android.content.cts.TestPagingContentProvider', 1), ('android.provider.cts.calendar.CalendarTest', 1), ('com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest', 1), ('android.renderscript.cts.generated.TestExp', 1), ('android.hardware.lights.cts.LightsManagerTest', 1)]"	"[('destroy', 1689), ('toString', 1486), ('StringBuilder', 495), ('setUp', 15), ('tearDown', 12), ('ArgumentsFloatFloatFloat', 11), ('ArgumentsHalfHalfHalf', 11), ('ContentValues', 10), ('ArgumentsFloatFloatFloatFloat', 7), ('ArgumentsCharCharCharChar', 7), ('ArgumentsUcharUcharUcharUchar', 7), ('ArgumentsShortShortShortShort', 7), ('ArgumentsUshortUshortUshortUshort', 7), ('ArgumentsIntIntIntInt', 7), ('ArgumentsUintUintUintUint', 7), ('ArgumentsLongLongLongLong', 7), ('ArgumentsUlongUlongUlongUlong', 7), ('ArgumentsHalfHalfHalfHalf', 7), ('ArgumentsFloatFloat', 7), ('ArgumentsHalfHalf', 7), ('shutdown', 5), ('close', 5), ('getBytes', 4), ('ArgumentsCharCharChar', 4), ('ArgumentsUcharUcharUchar', 4), ('ArgumentsShortShortShort', 4), ('ArgumentsUshortUshortUshort', 4), ('ArgumentsIntIntInt', 4), ('ArgumentsUintUintUint', 4), ('ArgumentsLongLongLong', 4), ('ArgumentsUlongUlongUlong', 4), ('getCount', 4), ('UnsupportedOperationException', 4), ('updateTitle', 3), ('getInstrumentation', 3), ('getTargetContext', 3), ('getName', 3), ('ArgumentsCharFloat', 3), ('ArgumentsUcharFloat', 3), ('ArgumentsShortFloat', 3), ('ArgumentsUshortFloat', 3), ('ArgumentsIntFloat', 3), ('ArgumentsUintFloat', 3), ('ArgumentsFloatChar', 3), ('ArgumentsCharChar', 3), ('ArgumentsUcharChar', 3), ('ArgumentsShortChar', 3), ('ArgumentsUshortChar', 3), ('ArgumentsIntChar', 3), ('ArgumentsUintChar', 3), ('ArgumentsFloatUchar', 3), ('ArgumentsCharUchar', 3), ('ArgumentsUcharUchar', 3), ('ArgumentsShortUchar', 3), ('ArgumentsUshortUchar', 3), ('ArgumentsIntUchar', 3), ('ArgumentsUintUchar', 3), ('ArgumentsFloatShort', 3), ('ArgumentsCharShort', 3), ('ArgumentsUcharShort', 3), ('ArgumentsShortShort', 3), ('ArgumentsUshortShort', 3), ('ArgumentsIntShort', 3), ('ArgumentsUintShort', 3), ('ArgumentsFloatUshort', 3), ('ArgumentsCharUshort', 3), ('ArgumentsUcharUshort', 3), ('ArgumentsShortUshort', 3), ('ArgumentsUshortUshort', 3), ('ArgumentsIntUshort', 3), ('ArgumentsUintUshort', 3), ('ArgumentsFloatInt', 3), ('ArgumentsCharInt', 3), ('ArgumentsUcharInt', 3), ('ArgumentsShortInt', 3), ('ArgumentsUshortInt', 3), ('ArgumentsIntInt', 3), ('ArgumentsUintInt', 3), ('ArgumentsFloatUint', 3), ('ArgumentsCharUint', 3), ('ArgumentsUcharUint', 3), ('ArgumentsShortUint', 3), ('ArgumentsUshortUint', 3), ('ArgumentsIntUint', 3), ('ArgumentsUintUint', 3), ('ArgumentsDoubleDouble', 3), ('ArgumentsLongDouble', 3), ('ArgumentsUlongDouble', 3), ('ArgumentsDoubleLong', 3), ('ArgumentsLongLong', 3), ('ArgumentsUlongLong', 3), ('ArgumentsDoubleUlong', 3), ('ArgumentsLongUlong', 3), ('ArgumentsUlongUlong', 3), ('ArgumentsDoubleFloat', 3), ('ArgumentsLongFloat', 3), ('ArgumentsUlongFloat', 3), ('ArgumentsDoubleChar', 3), ('ArgumentsLongChar', 3), ('ArgumentsUlongChar', 3), ('ArgumentsDoubleUchar', 3), ('ArgumentsLongUchar', 3), ('ArgumentsUlongUchar', 3), ('ArgumentsDoubleShort', 3), ('ArgumentsLongShort', 3), ('ArgumentsUlongShort', 3), ('ArgumentsDoubleUshort', 3), ('ArgumentsLongUshort', 3), ('ArgumentsUlongUshort', 3), ('ArgumentsDoubleInt', 3), ('ArgumentsLongInt', 3), ('ArgumentsUlongInt', 3), ('ArgumentsDoubleUint', 3), ('ArgumentsLongUint', 3), ('ArgumentsUlongUint', 3), ('ArgumentsFloatDouble', 3), ('ArgumentsCharDouble', 3), ('ArgumentsUcharDouble', 3), ('ArgumentsShortDouble', 3), ('ArgumentsUshortDouble', 3), ('ArgumentsIntDouble', 3), ('ArgumentsUintDouble', 3), ('ArgumentsFloatLong', 3), ('ArgumentsCharLong', 3), ('ArgumentsUcharLong', 3), ('ArgumentsShortLong', 3), ('ArgumentsUshortLong', 3), ('ArgumentsIntLong', 3), ('ArgumentsUintLong', 3), ('ArgumentsFloatUlong', 3), ('ArgumentsCharUlong', 3), ('ArgumentsUcharUlong', 3), ('ArgumentsShortUlong', 3), ('ArgumentsUshortUlong', 3), ('ArgumentsIntUlong', 3), ('ArgumentsUintUlong', 3), ('ArgumentsHalfFloat', 3), ('ArgumentsHalfDouble', 3), ('ArgumentsHalfChar', 3), ('ArgumentsHalfUchar', 3), ('ArgumentsHalfShort', 3), ('ArgumentsHalfUshort', 3), ('ArgumentsHalfInt', 3), ('ArgumentsHalfUint', 3), ('ArgumentsHalfLong', 3), ('ArgumentsHalfUlong', 3), ('ArgumentsFloatHalf', 3), ('ArgumentsDoubleHalf', 3), ('ArgumentsCharHalf', 3), ('ArgumentsUcharHalf', 3), ('ArgumentsShortHalf', 3), ('ArgumentsUshortHalf', 3), ('ArgumentsIntHalf', 3), ('ArgumentsUintHalf', 3), ('ArgumentsLongHalf', 3), ('ArgumentsUlongHalf', 3), ('createCursor', 3), ('getResources', 2), ('getLocalPort', 2), ('start', 2), ('join', 2), ('build', 2), ('getContext', 2), ('accept', 2), ('getContentResolver', 2), ('newRow', 2), ('moveToFirst', 2), ('getNetworkImageHtml', 1), ('CtsTrustManager', 1), ('getAssets', 1), ('getSingleton', 1), ('shutDownOnClientThread', 1), ('HashMap', 1), ('Builder', 1), ('toLanguageTag', 1), ('checkCopysignFloatFloatFloat', 1), ('checkCopysignFloat2Float2Float2', 1), ('checkCopysignFloat3Float3Float3', 1), ('checkCopysignFloat4Float4Float4', 1), ('checkCopysignHalfHalfHalf', 1), ('checkCopysignHalf2Half2Half2', 1), ('checkCopysignHalf3Half3Half3', 1), ('checkCopysignHalf4Half4Half4', 1), ('getSimpleName', 1), ('getReceiverComponent', 1), ('getPackageManager', 1), ('getProfileOwnerComponent', 1), ('flattenToString', 1), ('checkClampFloatFloatFloatFloat', 1), ('checkClampFloat2Float2Float2Float2', 1), ('checkClampFloat3Float3Float3Float3', 1), ('checkClampFloat4Float4Float4Float4', 1), ('checkClampFloat2FloatFloatFloat2', 1), ('checkClampFloat3FloatFloatFloat3', 1), ('checkClampFloat4FloatFloatFloat4', 1), ('checkClampCharCharCharChar', 1), ('checkClampChar2Char2Char2Char2', 1), ('checkClampChar3Char3Char3Char3', 1), ('checkClampChar4Char4Char4Char4', 1), ('checkClampUcharUcharUcharUchar', 1), ('checkClampUchar2Uchar2Uchar2Uchar2', 1), ('checkClampUchar3Uchar3Uchar3Uchar3', 1), ('checkClampUchar4Uchar4Uchar4Uchar4', 1), ('checkClampShortShortShortShort', 1), ('checkClampShort2Short2Short2Short2', 1), ('checkClampShort3Short3Short3Short3', 1), ('checkClampShort4Short4Short4Short4', 1), ('checkClampUshortUshortUshortUshort', 1), ('checkClampUshort2Ushort2Ushort2Ushort2', 1), ('checkClampUshort3Ushort3Ushort3Ushort3', 1), ('checkClampUshort4Ushort4Ushort4Ushort4', 1), ('checkClampIntIntIntInt', 1), ('checkClampInt2Int2Int2Int2', 1), ('checkClampInt3Int3Int3Int3', 1), ('checkClampInt4Int4Int4Int4', 1), ('checkClampUintUintUintUint', 1), ('checkClampUint2Uint2Uint2Uint2', 1), ('checkClampUint3Uint3Uint3Uint3', 1), ('checkClampUint4Uint4Uint4Uint4', 1), ('checkClampLongLongLongLong', 1), ('checkClampLong2Long2Long2Long2', 1), ('checkClampLong3Long3Long3Long3', 1), ('checkClampLong4Long4Long4Long4', 1), ('checkClampUlongUlongUlongUlong', 1), ('checkClampUlong2Ulong2Ulong2Ulong2', 1), ('checkClampUlong3Ulong3Ulong3Ulong3', 1), ('checkClampUlong4Ulong4Ulong4Ulong4', 1), ('checkClampChar2CharCharChar2', 1), ('checkClampChar3CharCharChar3', 1), ('checkClampChar4CharCharChar4', 1), ('checkClampUchar2UcharUcharUchar2', 1), ('checkClampUchar3UcharUcharUchar3', 1), ('checkClampUchar4UcharUcharUchar4', 1), ('checkClampShort2ShortShortShort2', 1), ('checkClampShort3ShortShortShort3', 1), ('checkClampShort4ShortShortShort4', 1), ('checkClampUshort2UshortUshortUshort2', 1), ('checkClampUshort3UshortUshortUshort3', 1), ('checkClampUshort4UshortUshortUshort4', 1), ('checkClampInt2IntIntInt2', 1), ('checkClampInt3IntIntInt3', 1), ('checkClampInt4IntIntInt4', 1), ('checkClampUint2UintUintUint2', 1), ('checkClampUint3UintUintUint3', 1), ('checkClampUint4UintUintUint4', 1), ('checkClampLong2LongLongLong2', 1), ('checkClampLong3LongLongLong3', 1), ('checkClampLong4LongLongLong4', 1), ('checkClampUlong2UlongUlongUlong2', 1), ('checkClampUlong3UlongUlongUlong3', 1), ('checkClampUlong4UlongUlongUlong4', 1), ('checkClampHalfHalfHalfHalf', 1), ('checkClampHalf2Half2Half2Half2', 1), ('checkClampHalf3Half3Half3Half3', 1), ('checkClampHalf4Half4Half4Half4', 1), ('checkClampHalf2HalfHalfHalf2', 1), ('checkClampHalf3HalfHalfHalf3', 1), ('checkClampHalf4HalfHalfHalf4', 1), ('resourceColor', 1), ('TypedValue', 1), ('getDeclaredFields', 1), ('getDeclaredAnnotations', 1), ('clearTransformations', 1), ('getDecoder', 1), ('Start', 1), ('run', 1), ('checkConvertFloat2Float2', 1), ('checkConvertFloat3Float3', 1), ('checkConvertFloat4Float4', 1), ('checkConvertChar2Float2', 1), ('checkConvertChar3Float3', 1), ('checkConvertChar4Float4', 1), ('checkConvertUchar2Float2', 1), ('checkConvertUchar3Float3', 1), ('checkConvertUchar4Float4', 1), ('checkConvertShort2Float2', 1), ('checkConvertShort3Float3', 1), ('checkConvertShort4Float4', 1), ('checkConvertUshort2Float2', 1), ('checkConvertUshort3Float3', 1), ('checkConvertUshort4Float4', 1), ('checkConvertInt2Float2', 1), ('checkConvertInt3Float3', 1), ('checkConvertInt4Float4', 1), ('checkConvertUint2Float2', 1), ('checkConvertUint3Float3', 1), ('checkConvertUint4Float4', 1), ('checkConvertFloat2Char2', 1), ('checkConvertFloat3Char3', 1), ('checkConvertFloat4Char4', 1), ('checkConvertChar2Char2', 1), ('checkConvertChar3Char3', 1), ('checkConvertChar4Char4', 1), ('checkConvertUchar2Char2', 1), ('checkConvertUchar3Char3', 1), ('checkConvertUchar4Char4', 1), ('checkConvertShort2Char2', 1), ('checkConvertShort3Char3', 1), ('checkConvertShort4Char4', 1), ('checkConvertUshort2Char2', 1), ('checkConvertUshort3Char3', 1), ('checkConvertUshort4Char4', 1), ('checkConvertInt2Char2', 1), ('checkConvertInt3Char3', 1), ('checkConvertInt4Char4', 1), ('checkConvertUint2Char2', 1), ('checkConvertUint3Char3', 1), ('checkConvertUint4Char4', 1), ('checkConvertFloat2Uchar2', 1), ('checkConvertFloat3Uchar3', 1), ('checkConvertFloat4Uchar4', 1), ('checkConvertChar2Uchar2', 1), ('checkConvertChar3Uchar3', 1), ('checkConvertChar4Uchar4', 1), ('checkConvertUchar2Uchar2', 1), ('checkConvertUchar3Uchar3', 1), ('checkConvertUchar4Uchar4', 1), ('checkConvertShort2Uchar2', 1), ('checkConvertShort3Uchar3', 1), ('checkConvertShort4Uchar4', 1), ('checkConvertUshort2Uchar2', 1), ('checkConvertUshort3Uchar3', 1), ('checkConvertUshort4Uchar4', 1), ('checkConvertInt2Uchar2', 1), ('checkConvertInt3Uchar3', 1), ('checkConvertInt4Uchar4', 1), ('checkConvertUint2Uchar2', 1), ('checkConvertUint3Uchar3', 1), ('checkConvertUint4Uchar4', 1), ('checkConvertFloat2Short2', 1), ('checkConvertFloat3Short3', 1), ('checkConvertFloat4Short4', 1), ('checkConvertChar2Short2', 1), ('checkConvertChar3Short3', 1), ('checkConvertChar4Short4', 1), ('checkConvertUchar2Short2', 1), ('checkConvertUchar3Short3', 1), ('checkConvertUchar4Short4', 1), ('checkConvertShort2Short2', 1), ('checkConvertShort3Short3', 1), ('checkConvertShort4Short4', 1), ('checkConvertUshort2Short2', 1), ('checkConvertUshort3Short3', 1), ('checkConvertUshort4Short4', 1), ('checkConvertInt2Short2', 1), ('checkConvertInt3Short3', 1), ('checkConvertInt4Short4', 1), ('checkConvertUint2Short2', 1), ('checkConvertUint3Short3', 1), ('checkConvertUint4Short4', 1), ('checkConvertFloat2Ushort2', 1), ('checkConvertFloat3Ushort3', 1), ('checkConvertFloat4Ushort4', 1), ('checkConvertChar2Ushort2', 1), ('checkConvertChar3Ushort3', 1), ('checkConvertChar4Ushort4', 1), ('checkConvertUchar2Ushort2', 1), ('checkConvertUchar3Ushort3', 1), ('checkConvertUchar4Ushort4', 1), ('checkConvertShort2Ushort2', 1), ('checkConvertShort3Ushort3', 1), ('checkConvertShort4Ushort4', 1), ('checkConvertUshort2Ushort2', 1), ('checkConvertUshort3Ushort3', 1), ('checkConvertUshort4Ushort4', 1), ('checkConvertInt2Ushort2', 1), ('checkConvertInt3Ushort3', 1), ('checkConvertInt4Ushort4', 1), ('checkConvertUint2Ushort2', 1), ('checkConvertUint3Ushort3', 1), ('checkConvertUint4Ushort4', 1), ('checkConvertFloat2Int2', 1), ('checkConvertFloat3Int3', 1), ('checkConvertFloat4Int4', 1), ('checkConvertChar2Int2', 1), ('checkConvertChar3Int3', 1), ('checkConvertChar4Int4', 1), ('checkConvertUchar2Int2', 1), ('checkConvertUchar3Int3', 1), ('checkConvertUchar4Int4', 1), ('checkConvertShort2Int2', 1), ('checkConvertShort3Int3', 1), ('checkConvertShort4Int4', 1), ('checkConvertUshort2Int2', 1), ('checkConvertUshort3Int3', 1), ('checkConvertUshort4Int4', 1), ('checkConvertInt2Int2', 1), ('checkConvertInt3Int3', 1), ('checkConvertInt4Int4', 1), ('checkConvertUint2Int2', 1), ('checkConvertUint3Int3', 1), ('checkConvertUint4Int4', 1), ('checkConvertFloat2Uint2', 1), ('checkConvertFloat3Uint3', 1), ('checkConvertFloat4Uint4', 1), ('checkConvertChar2Uint2', 1), ('checkConvertChar3Uint3', 1), ('checkConvertChar4Uint4', 1), ('checkConvertUchar2Uint2', 1), ('checkConvertUchar3Uint3', 1), ('checkConvertUchar4Uint4', 1), ('checkConvertShort2Uint2', 1), ('checkConvertShort3Uint3', 1), ('checkConvertShort4Uint4', 1), ('checkConvertUshort2Uint2', 1), ('checkConvertUshort3Uint3', 1), ('checkConvertUshort4Uint4', 1), ('checkConvertInt2Uint2', 1), ('checkConvertInt3Uint3', 1), ('checkConvertInt4Uint4', 1), ('checkConvertUint2Uint2', 1), ('checkConvertUint3Uint3', 1), ('checkConvertUint4Uint4', 1), ('checkConvertDouble2Double2', 1), ('checkConvertDouble3Double3', 1), ('checkConvertDouble4Double4', 1), ('checkConvertLong2Double2', 1), ('checkConvertLong3Double3', 1), ('checkConvertLong4Double4', 1), ('checkConvertUlong2Double2', 1), ('checkConvertUlong3Double3', 1), ('checkConvertUlong4Double4', 1), ('checkConvertDouble2Long2', 1), ('checkConvertDouble3Long3', 1), ('checkConvertDouble4Long4', 1), ('checkConvertLong2Long2', 1), ('checkConvertLong3Long3', 1), ('checkConvertLong4Long4', 1), ('checkConvertUlong2Long2', 1), ('checkConvertUlong3Long3', 1), ('checkConvertUlong4Long4', 1), ('checkConvertDouble2Ulong2', 1), ('checkConvertDouble3Ulong3', 1), ('checkConvertDouble4Ulong4', 1), ('checkConvertLong2Ulong2', 1), ('checkConvertLong3Ulong3', 1), ('checkConvertLong4Ulong4', 1), ('checkConvertUlong2Ulong2', 1), ('checkConvertUlong3Ulong3', 1), ('checkConvertUlong4Ulong4', 1), ('checkConvertDouble2Float2', 1), ('checkConvertDouble3Float3', 1), ('checkConvertDouble4Float4', 1), ('checkConvertLong2Float2', 1), ('checkConvertLong3Float3', 1), ('checkConvertLong4Float4', 1), ('checkConvertUlong2Float2', 1), ('checkConvertUlong3Float3', 1), ('checkConvertUlong4Float4', 1), ('checkConvertDouble2Char2', 1), ('checkConvertDouble3Char3', 1), ('checkConvertDouble4Char4', 1), ('checkConvertLong2Char2', 1), ('checkConvertLong3Char3', 1), ('checkConvertLong4Char4', 1), ('checkConvertUlong2Char2', 1), ('checkConvertUlong3Char3', 1), ('checkConvertUlong4Char4', 1), ('checkConvertDouble2Uchar2', 1), ('checkConvertDouble3Uchar3', 1), ('checkConvertDouble4Uchar4', 1), ('checkConvertLong2Uchar2', 1), ('checkConvertLong3Uchar3', 1), ('checkConvertLong4Uchar4', 1), ('checkConvertUlong2Uchar2', 1), ('checkConvertUlong3Uchar3', 1), ('checkConvertUlong4Uchar4', 1), ('checkConvertDouble2Short2', 1), ('checkConvertDouble3Short3', 1), ('checkConvertDouble4Short4', 1), ('checkConvertLong2Short2', 1), ('checkConvertLong3Short3', 1), ('checkConvertLong4Short4', 1), ('checkConvertUlong2Short2', 1), ('checkConvertUlong3Short3', 1), ('checkConvertUlong4Short4', 1), ('checkConvertDouble2Ushort2', 1), ('checkConvertDouble3Ushort3', 1), ('checkConvertDouble4Ushort4', 1), ('checkConvertLong2Ushort2', 1), ('checkConvertLong3Ushort3', 1), ('checkConvertLong4Ushort4', 1), ('checkConvertUlong2Ushort2', 1), ('checkConvertUlong3Ushort3', 1), ('checkConvertUlong4Ushort4', 1), ('checkConvertDouble2Int2', 1), ('checkConvertDouble3Int3', 1), ('checkConvertDouble4Int4', 1), ('checkConvertLong2Int2', 1), ('checkConvertLong3Int3', 1), ('checkConvertLong4Int4', 1), ('checkConvertUlong2Int2', 1), ('checkConvertUlong3Int3', 1), ('checkConvertUlong4Int4', 1), ('checkConvertDouble2Uint2', 1), ('checkConvertDouble3Uint3', 1), ('checkConvertDouble4Uint4', 1), ('checkConvertLong2Uint2', 1), ('checkConvertLong3Uint3', 1), ('checkConvertLong4Uint4', 1), ('checkConvertUlong2Uint2', 1), ('checkConvertUlong3Uint3', 1), ('checkConvertUlong4Uint4', 1), ('checkConvertFloat2Double2', 1), ('checkConvertFloat3Double3', 1), ('checkConvertFloat4Double4', 1), ('checkConvertChar2Double2', 1), ('checkConvertChar3Double3', 1), ('checkConvertChar4Double4', 1), ('checkConvertUchar2Double2', 1), ('checkConvertUchar3Double3', 1), ('checkConvertUchar4Double4', 1), ('checkConvertShort2Double2', 1), ('checkConvertShort3Double3', 1), ('checkConvertShort4Double4', 1), ('checkConvertUshort2Double2', 1), ('checkConvertUshort3Double3', 1), ('checkConvertUshort4Double4', 1), ('checkConvertInt2Double2', 1), ('checkConvertInt3Double3', 1), ('checkConvertInt4Double4', 1), ('checkConvertUint2Double2', 1), ('checkConvertUint3Double3', 1), ('checkConvertUint4Double4', 1), ('checkConvertFloat2Long2', 1), ('checkConvertFloat3Long3', 1), ('checkConvertFloat4Long4', 1), ('checkConvertChar2Long2', 1), ('checkConvertChar3Long3', 1), ('checkConvertChar4Long4', 1), ('checkConvertUchar2Long2', 1), ('checkConvertUchar3Long3', 1), ('checkConvertUchar4Long4', 1), ('checkConvertShort2Long2', 1), ('checkConvertShort3Long3', 1), ('checkConvertShort4Long4', 1), ('checkConvertUshort2Long2', 1), ('checkConvertUshort3Long3', 1), ('checkConvertUshort4Long4', 1), ('checkConvertInt2Long2', 1), ('checkConvertInt3Long3', 1), ('checkConvertInt4Long4', 1), ('checkConvertUint2Long2', 1), ('checkConvertUint3Long3', 1), ('checkConvertUint4Long4', 1), ('checkConvertFloat2Ulong2', 1), ('checkConvertFloat3Ulong3', 1), ('checkConvertFloat4Ulong4', 1), ('checkConvertChar2Ulong2', 1), ('checkConvertChar3Ulong3', 1), ('checkConvertChar4Ulong4', 1), ('checkConvertUchar2Ulong2', 1), ('checkConvertUchar3Ulong3', 1), ('checkConvertUchar4Ulong4', 1), ('checkConvertShort2Ulong2', 1), ('checkConvertShort3Ulong3', 1), ('checkConvertShort4Ulong4', 1), ('checkConvertUshort2Ulong2', 1), ('checkConvertUshort3Ulong3', 1), ('checkConvertUshort4Ulong4', 1), ('checkConvertInt2Ulong2', 1), ('checkConvertInt3Ulong3', 1), ('checkConvertInt4Ulong4', 1), ('checkConvertUint2Ulong2', 1), ('checkConvertUint3Ulong3', 1), ('checkConvertUint4Ulong4', 1), ('checkConvertHalf2Half2', 1), ('checkConvertHalf3Half3', 1), ('checkConvertHalf4Half4', 1), ('checkConvertHalf2Float2', 1), ('checkConvertHalf3Float3', 1), ('checkConvertHalf4Float4', 1), ('checkConvertHalf2Double2', 1), ('checkConvertHalf3Double3', 1), ('checkConvertHalf4Double4', 1), ('checkConvertHalf2Char2', 1), ('checkConvertHalf3Char3', 1), ('checkConvertHalf4Char4', 1), ('checkConvertHalf2Uchar2', 1), ('checkConvertHalf3Uchar3', 1), ('checkConvertHalf4Uchar4', 1), ('checkConvertHalf2Short2', 1), ('checkConvertHalf3Short3', 1), ('checkConvertHalf4Short4', 1), ('checkConvertHalf2Ushort2', 1), ('checkConvertHalf3Ushort3', 1), ('checkConvertHalf4Ushort4', 1), ('checkConvertHalf2Int2', 1), ('checkConvertHalf3Int3', 1), ('checkConvertHalf4Int4', 1), ('checkConvertHalf2Uint2', 1), ('checkConvertHalf3Uint3', 1), ('checkConvertHalf4Uint4', 1), ('checkConvertHalf2Long2', 1), ('checkConvertHalf3Long3', 1), ('checkConvertHalf4Long4', 1), ('checkConvertHalf2Ulong2', 1), ('checkConvertHalf3Ulong3', 1), ('checkConvertHalf4Ulong4', 1), ('checkConvertFloat2Half2', 1), ('checkConvertFloat3Half3', 1), ('checkConvertFloat4Half4', 1), ('checkConvertDouble2Half2', 1), ('checkConvertDouble3Half3', 1), ('checkConvertDouble4Half4', 1), ('checkConvertChar2Half2', 1), ('checkConvertChar3Half3', 1), ('checkConvertChar4Half4', 1), ('checkConvertUchar2Half2', 1), ('checkConvertUchar3Half3', 1), ('checkConvertUchar4Half4', 1), ('checkConvertShort2Half2', 1), ('checkConvertShort3Half3', 1), ('checkConvertShort4Half4', 1), ('checkConvertUshort2Half2', 1), ('checkConvertUshort3Half3', 1), ('checkConvertUshort4Half4', 1), ('checkConvertInt2Half2', 1), ('checkConvertInt3Half3', 1), ('checkConvertInt4Half4', 1), ('checkConvertUint2Half2', 1), ('checkConvertUint3Half3', 1), ('checkConvertUint4Half4', 1), ('checkConvertLong2Half2', 1), ('checkConvertLong3Half3', 1), ('checkConvertLong4Half4', 1), ('checkConvertUlong2Half2', 1), ('checkConvertUlong3Half3', 1), ('checkConvertUlong4Half4', 1), ('Object', 1), ('connect', 1), ('getInputStream', 1), ('intValue', 1), ('getBaseUrl', 1), ('openConnection', 1), ('checkMaxFloatFloatFloat', 1), ('checkMaxFloat2Float2Float2', 1), ('checkMaxFloat3Float3Float3', 1), ('checkMaxFloat4Float4Float4', 1), ('checkMaxHalfHalfHalf', 1), ('checkMaxHalf2Half2Half2', 1), ('checkMaxHalf3Half3Half3', 1), ('checkMaxHalf4Half4Half4', 1), ('checkMaxFloat2FloatFloat2', 1), ('checkMaxFloat3FloatFloat3', 1), ('checkMaxFloat4FloatFloat4', 1), ('checkMaxHalf2HalfHalf2', 1), ('checkMaxHalf3HalfHalf3', 1), ('checkMaxHalf4HalfHalf4', 1), ('checkMaxCharCharChar', 1), ('checkMaxChar2Char2Char2', 1), ('checkMaxChar3Char3Char3', 1), ('checkMaxChar4Char4Char4', 1), ('checkMaxUcharUcharUchar', 1), ('checkMaxUchar2Uchar2Uchar2', 1), ('checkMaxUchar3Uchar3Uchar3', 1), ('checkMaxUchar4Uchar4Uchar4', 1), ('checkMaxShortShortShort', 1), ('checkMaxShort2Short2Short2', 1), ('checkMaxShort3Short3Short3', 1), ('checkMaxShort4Short4Short4', 1), ('checkMaxUshortUshortUshort', 1), ('checkMaxUshort2Ushort2Ushort2', 1), ('checkMaxUshort3Ushort3Ushort3', 1), ('checkMaxUshort4Ushort4Ushort4', 1), ('checkMaxIntIntInt', 1), ('checkMaxInt2Int2Int2', 1), ('checkMaxInt3Int3Int3', 1), ('checkMaxInt4Int4Int4', 1), ('checkMaxUintUintUint', 1), ('checkMaxUint2Uint2Uint2', 1), ('checkMaxUint3Uint3Uint3', 1), ('checkMaxUint4Uint4Uint4', 1), ('checkMaxLongLongLong', 1), ('checkMaxLong2Long2Long2', 1), ('checkMaxLong3Long3Long3', 1), ('checkMaxLong4Long4Long4', 1), ('checkMaxUlongUlongUlong', 1), ('checkMaxUlong2Ulong2Ulong2', 1), ('checkMaxUlong3Ulong3Ulong3', 1), ('checkMaxUlong4Ulong4Ulong4', 1), ('onCreate', 1), ('getExtras', 1), ('Bundle', 1), ('CalendarHelper', 1), ('SyncStateHelper', 1), ('EventHelper', 1), ('AttendeeHelper', 1), ('ColorHelper', 1), ('ReminderHelper', 1), ('ExtendedPropertiesHelper', 1), ('buildUpon', 1), ('getPackage', 1), ('checkExpFloatFloat', 1), ('checkExpFloat2Float2', 1), ('checkExpFloat3Float3', 1), ('checkExpFloat4Float4', 1), ('checkExpHalfHalf', 1), ('checkExpHalf2Half2', 1), ('checkExpHalf3Half3', 1), ('checkExpHalf4Half4', 1)]"	"[('CtsAutoFillServiceTestCases', 10), ('CtsTextTestCases', 8), ('CtsRenderscriptTestCases', 5), ('CtsContentTestCases', 4), ('CtsWidgetTestCases', 3), ('CtsKeystoreTestCases', 2), ('CtsWebkitTestCases', 2), ('CtsGraphicsTestCases', 2), ('CtsSecurityTestCases', 2), ('CtsAdminTestCases', 1), ('CtsSecurityBulletinHostTestCases', 1), ('CtsCalendarProviderTestCases', 1), ('CtsHardwareTestCases', 1)]"	""	"android.hardware.lights.cts.LightsManagerTest"	"toString"	"CtsHardwareTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/DatasetFilteringTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/SelectionTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/redefining/app/src/android/jvmti/cts/JvmtiRedefineClassesTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TextViewTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/long_to_int/Test_long_to_int.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineFilteringTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/MacTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/testserver/src/android/webkit/cts/CtsTestServer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/FontResourceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestCopysign.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/SignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestClamp.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ColorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/fonts/NativeSystemFontTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/RunningAppProcessInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/SpannableStringBuilderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/StaticLayoutTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/AmbiguousBundlesTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2021_0691.java', 1), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/return_void/d/T_return_void_1.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestConvert.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/WorkSourceTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/testserver/src/android/webkit/cts/TestWebServer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestMax.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/V3SigningSchemeRotation/src/android/appsecurity/cts/v3rotationtests/V3RotationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/TestPagingContentProvider.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/calendarprovider/src/android/provider/cts/calendar/CalendarTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestExp.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/lights/cts/LightsManagerTest.java', 1)]"	"[('(1,AAA,/android/keystore/cts/MacTest.java)', 1), ('(2,AAA,/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java)', 1), ('(15,AAA,/android/webkit/cts/WebSettingsTest.java)', 1), ('(2,AAA,/dot/junit/opcodes/long_to_int/Test_long_to_int.java)', 1), ('(8,AAA,/android/webkit/cts/CtsTestServer.java)', 1), ('(3,AAA,/android/text/cts/FontCoverageTest.java)', 1), ('(1,AAA,/android/text/cts/FontResourceTest.java)', 1), ('(1,AAA,/android/renderscript/cts/generated/TestCopysign.java)', 1), ('(1,AAA,/android/keystore/cts/SignatureTest.java)', 1), ('(1,AAA,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,AAA,/android/renderscript/cts/generated/TestClamp.java)', 1), ('(2,AAA,/android/graphics/cts/ColorTest.java)', 1), ('(1,AAA,/android/graphics/fonts/NativeSystemFontTest.java)', 1), ('(1,AAA,/android/security/cts/RunningAppProcessInfoTest.java)', 1), ('(1,AAA,/android/text/cts/SpannableStringBuilderTest.java)', 1), ('(1833,AAA,/android/jvmti/cts/JvmtiRedefineClassesTest.java)', 1), ('(4,AAA,/android/text/cts/StaticLayoutTest.java)', 1), ('(1,AAA,/android/security/cts/AmbiguousBundlesTest.java)', 1), ('(10,AAA,/android/widget/cts/TextViewTest.java)', 1), ('(2,AAA,/android/security/cts/CVE_2021_0691.java)', 1), ('(1,AAA,/dot/junit/opcodes/return_void/d/T_return_void_1.java)', 1), ('(1,AAA,/android/renderscript/cts/generated/TestConvert.java)', 1), ('(1,AAA,/android/os/cts/WorkSourceTest.java)', 1), ('(2,AAA,/android/autofillservice/cts/inline/InlineFilteringTest.java)', 1), ('(8,AAA,/android/webkit/cts/TestWebServer.java)', 1), ('(12,AAA,/android/autofillservice/cts/commontests/DatasetFilteringTest.java)', 1), ('(1,AAA,/android/renderscript/cts/generated/TestMax.java)', 1), ('(3,AAA,/android/content/pm/cts/ChecksumsTest.java)', 1), ('(1,AAA,/android/appsecurity/cts/v3rotationtests/V3RotationTest.java)', 1), ('(1,AAA,/android/content/cts/TestPagingContentProvider.java)', 1), ('(4,AAA,/android/provider/cts/calendar/CalendarTest.java)', 1), ('(6,AAA,/android/text/cts/SelectionTest.java)', 1), ('(1,AAA,/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java)', 1), ('(2,AAA,/android/renderscript/cts/generated/TestExp.java)', 1), ('(2,AAA,/android/hardware/lights/cts/LightsManagerTest.java)', 1)]"	"[('([2:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[AAA]:[2]:method_text:[callback.assertUiHiddenEvent(mActivity.getUsername());        mUiBot.assertNoDatasets();    }   ])', 3), ('([1:/android/keystore/cts/MacTest.java]:[AAA]:[1]:method_text:[25738990e6d0""));    }    private static final long DAY_IN_MILLIS = TestUtils.DAY_IN_MILLIS;   ])', 1), ('([2:/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java]:[AAA]:[2]:method_text:[nCompatMode() {        assumeTrue(""test not applicable when on compat mode"", !mCompatMode);    }}])', 1), ('([9:/android/webkit/cts/WebSettingsTest.java]:[AAA]:[9]:method_text:[>.<minor>     * Chrome/<major>.<minor>.<branch>.<build>[ Mobile] Safari/<major>.<minor>     */   ])', 1), ('([6:/android/webkit/cts/WebSettingsTest.java]:[AAA]:[6]:method_text:[   * should be reflected in that test as necessary. See http://go/modifying-webview-cts.     */   ])', 1), ('([1:/dot/junit/opcodes/long_to_int/Test_long_to_int.java]:[AAA]:[1]:method_text:[s Test_long_to_int extends DxTestCase {    /**     * @title Argument = 0xAAAAFFEEDDCCl     */   ])', 1), ('([1:/dot/junit/opcodes/long_to_int/Test_long_to_int.java]:[AAA]:[1]:method_text:[(0xFFEEDDCC, t.run(0xAAAAFFEEDDCCl));    }    /**     * @title Argument = -123456789     */   ])', 1), ('([8:/android/webkit/cts/CtsTestServer.java]:[AAA]:[8]:method_text:[         Log.e(TAG, ""Error handling request:"", e);                }            }        }    }}])', 1), ('([3:/android/text/cts/FontCoverageTest.java]:[AAA]:[3]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([1:/android/text/cts/FontResourceTest.java]:[AAA]:[1]:method_text:[ext(inflateWithRemoteViews(context)))                .isNotEqualTo(REMOTE_FONT_TEXT_WIDTH);    }}])', 1), ('([1:/android/renderscript/cts/generated/TestCopysign.java]:[AAA]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/keystore/cts/SignatureTest.java]:[AAA]:[1]:method_text:[ntext() {        return InstrumentationRegistry.getInstrumentation().getTargetContext();    }   ])', 1), ('([1:/android/admin/cts/DevicePolicyManagerTest.java]:[AAA]:[1]:method_text:[                     + DeviceAdminInfoTest.getProfileOwnerComponent().flattenToString());    }   ])', 1), ('([1:/android/renderscript/cts/generated/TestClamp.java]:[AAA]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/android/graphics/cts/ColorTest.java]:[AAA]:[2]:method_text:[droid.R.color"",                colors.length + systemColors.length, numPublicApiColors);    }   ])', 1), ('([1:/android/graphics/fonts/NativeSystemFontTest.java]:[AAA]:[1]:method_text:[ }                        }                    }                }            }        }    }}])', 1), ('([1:/android/security/cts/RunningAppProcessInfoTest.java]:[AAA]:[1]:method_text:[se/+"" +                ""/aaa0fee0d7a8da347a0c47cef5249c70efee209e"", (appList.size() == 1));    }}])', 1), ('([1:/android/text/cts/SpannableStringBuilderTest.java]:[AAA]:[1]:method_text:[Watcher replaces each character with \'a\'.        assertEquals(""aaaaa"", builder.toString());    }}])', 1), ('([365:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[AAA]:[365]:method_text:[             ""TRANSFORMED - post Finish private method call"",                }, output);    }   ])', 1), ('([1252:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[AAA]:[1252]:method_text:[AAAAAAAAAAAcAAAAcAAAAAIA"" +                    ""AAAAAAAAAQAAAAAAAAAAEAAAAQAAAHAAAAA=""),    };   ])', 1), ('([216:/android/jvmti/cts/JvmtiRedefineClassesTest.java]:[AAA]:[216]:method_text:[      for (ExpectedMethod m : methods) {            m.ensureHasMethod(target);        }    }   ])', 1), ('([4:/android/text/cts/StaticLayoutTest.java]:[AAA]:[4]:method_text:[draw eventualy calls TextLine.draw which was the problematic method.        layout.draw(c);    }}])', 1), ('([1:/android/security/cts/AmbiguousBundlesTest.java]:[AAA]:[1]:method_text:[r(ambiguator);    }    /*     * b/71714464     */    @AsbSecurityTest(cveBugId = 71714464)   ])', 1), ('([8:/android/widget/cts/TextViewTest.java]:[AAA]:[8]:method_text:[w.setFontVariationSettings("""");        assertNull(mTextView.getFontVariationSettings());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[AAA]:[1]:method_text:[ horizontalPosFix;        assertEquals(midOffset, mTextView.getOffsetForPosition(x, y));    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[AAA]:[1]:method_text:[ertEquals(line.length() + (line.length() - 1) / 2, mTextView.getOffsetForPosition(x, y));    }   ])', 1), ('([2:/android/security/cts/CVE_2021_0691.java]:[AAA]:[2]:method_text:[e void installPackage() throws Exception {        installPackage(TEST_APP, new String[0]);    }}])', 1), ('([1:/dot/junit/opcodes/return_void/d/T_return_void_1.java]:[AAA]:[1]:method_text:[() {        int a = 0xaaaa;        int b = 0xbbbb;        int c = 0xcccc;        return;    }}])', 1), ('([1:/android/renderscript/cts/generated/TestConvert.java]:[AAA]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/os/cts/WorkSourceTest.java]:[AAA]:[1]:method_text:[        assertFalse(ws.isEmpty());        ws.clear();        assertTrue(ws.isEmpty());    }   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineFilteringTest.java]:[AAA]:[1]:method_text:[.setText(""""));        mUiBot.waitForIdleSync();        mUiBot.assertDatasets(""sergey"");    }   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineFilteringTest.java]:[AAA]:[1]:method_text:[rIdleSync();        mUiBot.assertDatasets(""pinned"");        sReplier.getNextFillRequest();    }}])', 1), ('([8:/android/webkit/cts/TestWebServer.java]:[AAA]:[8]:method_text:[     String path = uri.getPath();            return path.equals(SHUTDOWN_PREFIX);        }    }}])', 1), ('([2:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[AAA]:[2]:method_text:[gain        changeUsername("""");        mUiBot.assertDatasets(aa, ab, b);    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[AAA]:[1]:method_text:[UiHiddenEvent(mActivity.getUsername());        mUiBot.assertNoDatasets();    }    @Presubmit   ])', 1), ('([2:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[AAA]:[2]:method_text:[ null value always shown        changeUsername(""aaa"");        mUiBot.assertDatasets(b);    }   ])', 1), ('([1:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[AAA]:[1]:method_text:[show the datasets now to protect privacy.            mUiBot.assertDatasets(c);        }    }   ])', 1), ('([1:/android/renderscript/cts/generated/TestMax.java]:[AAA]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[AAA]:[1]:method_text:[    + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[AAA]:[1]:method_text:[                   + ""e2c8b6baa16ef54014ad6c5b90c37b26b0f5c8aeb01b63a1db2eca133091c8d1"");    }   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[AAA]:[1]:method_text:[                   + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }   ])', 1), ('([1:/android/appsecurity/cts/v3rotationtests/V3RotationTest.java]:[AAA]:[1]:method_text:[2100d260fb1d1f176cf9b7fa60098bfd24319f4905a3e5fda1""                    + ""00a6fe1a2ab19ff09e"";   ])', 1), ('([1:/android/content/cts/TestPagingContentProvider.java]:[AAA]:[1]:method_text:[ring selection, String[] selectionArgs) {        throw new UnsupportedOperationException();    }}])', 1), ('([4:/android/provider/cts/calendar/CalendarTest.java]:[AAA]:[4]:method_text:[tResolver = getInstrumentation().getTargetContext().getContentResolver();    }    @MediumTest   ])', 1), ('([1:/android/text/cts/SelectionTest.java]:[AAA]:[1]:method_text:[getSelectionStart(builder));        assertEquals(3, Selection.getSelectionEnd(builder));    }   ])', 1), ('([1:/android/text/cts/SelectionTest.java]:[AAA]:[1]:method_text:[getSelectionStart(builder));        assertEquals(8, Selection.getSelectionEnd(builder));    }   ])', 1), ('([2:/android/text/cts/SelectionTest.java]:[AAA]:[2]:method_text:[getSelectionStart(builder));        assertEquals(5, Selection.getSelectionEnd(builder));    }   ])', 1), ('([2:/android/text/cts/SelectionTest.java]:[AAA]:[2]:method_text:[etSelectionStart(builder));        assertEquals(12, Selection.getSelectionEnd(builder));    }   ])', 1), ('([1:/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java]:[AAA]:[1]:method_text:[    };    /**     * Tests that all safety-aware operations are properly implemented.     */   ])', 1), ('([2:/android/renderscript/cts/generated/TestExp.java]:[AAA]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/android/hardware/lights/cts/LightsManagerTest.java]:[AAA]:[2]:method_text:[getColor()).isEqualTo(                        initialColors[i]);            }        }    }   ])', 1)]"	""	""	"[('AAA', 53)]"	"[('[android.autofillservice.cts.commontests.DatasetFilteringTest testFilter CtsAutoFillServiceTestCases]', 5), ('[android.keystore.cts.MacTest isStrongbox CtsKeystoreTestCases]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testDatasetFiltering CtsAutoFillServiceTestCases]', 1), ('[android.webkit.cts.WebSettingsTest WebSettingsTest CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAllowMixedMode CtsWebkitTestCases]', 1), ('[dot.junit.opcodes.long_to_int.Test_long_to_int testN1 None]', 1), ('[android.webkit.cts.CtsTestServer getAcceptedIssuers None]', 1), ('[android.text.cts.FontResourceTest testRemoteResource CtsTextTestCases]', 1), ('[android.graphics.fonts.NativeSystemFontTest testMatchFamilyStyleCharacter_notCrash CtsGraphicsTestCases]', 1), ('[android.security.cts.RunningAppProcessInfoTest testRunningAppProcessInfo CtsSecurityTestCases]', 1), ('[android.text.cts.SpannableStringBuilderTest testGetTextWatcherDepth CtsTextTestCases]', 1), ('[android.jvmti.cts.JvmtiRedefineClassesTest Finish None]', 1), ('[android.jvmti.cts.JvmtiRedefineClassesTest testSucessfulRetransform None]', 1), ('[android.jvmti.cts.JvmtiRedefineClassesTest testRetransformFailures None]', 1), ('[android.text.cts.StaticLayoutTest testBidiVisibleEnd CtsTextTestCases]', 1), ('[android.security.cts.AmbiguousBundlesTest test_android_CVE_2017_13311 CtsSecurityTestCases]', 1), ('[android.widget.cts.TextViewTest testSetGetFontVariationSettings CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetOffsetForPositionSingleLineLtr CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testGetOffsetForPositionMultiLineLtr CtsWidgetTestCases]', 1), ('[android.security.cts.CVE_2021_0691 testRunDeviceTest CtsSecurityBulletinHostTestCases]', 1), ('[dot.junit.opcodes.return_void.d.T_return_void_1 test None]', 1), ('[android.os.cts.WorkSourceTest testIsEmptyOnClear None]', 1), ('[android.autofillservice.cts.inline.InlineFilteringTest testFiltering_privacy_textReplacement CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.inline.InlineFilteringTest testFiltering_pinnedAreNotFiltered CtsAutoFillServiceTestCases]', 1), ('[android.webkit.cts.TestWebServer TestHostnameVerifier None]', 1), ('[android.autofillservice.cts.commontests.DatasetFilteringTest testFilter_injectingEvents CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.DatasetFilteringTest testFilter_usingKeyboard CtsAutoFillServiceTestCases]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllChecksums CtsContentTestCases]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedV1AllChecksums CtsContentTestCases]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllIncrementalChecksums CtsContentTestCases]', 1), ('[android.text.cts.SelectionTest testMoveUpAfterTyping CtsTextTestCases]', 1), ('[android.text.cts.SelectionTest testMoveDownAfterTyping CtsTextTestCases]', 1), ('[android.text.cts.SelectionTest testMultilineLengthMoveDownAfterSelection CtsTextTestCases]', 1), ('[android.text.cts.SelectionTest testMultilineLengthMoveUpAfterSelection CtsTextTestCases]', 1), ('[com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest DevicePolicySafetyCheckerIntegrationTester None]', 1), ('[android.hardware.lights.cts.LightsManagerTest testControlMultipleLights CtsHardwareTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Device Integrity"	"9.1"	"C-3-2"	"9.1/C-3-2"	"09010000.670302"	"""C-3-2] MUST ensure that code running in the Android OS including its kernel, malicious or otherwise, cannot generate a positive response without user interaction."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"5.1  . Multimedia Compatibility"	"5.1"	"C-0-3"	"5.1/C-0-3"	"05010000.670003"	"""C-0-3] MUST be able to properly decode and make available to third-party apps all the formats it can encode. This includes all bitstreams that its encoders generate and the profiles reported in its CamcorderProfile. Device implementations: SHOULD aim for minimum codec latency, in others words, they SHOULD NOT consume and store input buffers and return input buffers only once processed. SHOULD NOT hold onto decoded buffers for longer than as specified by the standard (e.g. SPS). SHOULD NOT hold onto encoded buffers longer than required by the GOP structure. All of the codecs listed in the section below are provided as software implementations in the preferred Android implementation from the Android Open Source Project. Please note that neither Google nor the Open Handset Alliance make any representation that these codecs are free from third-party patents. Those intending to use this source code in hardware or software products are advised that implementations of this code, including in open source software or shareware, may require patent licenses from the relevant patent holders. <h3 id=""51_media_codecs"" """	""	""	"SPS GOP"	""	""	""	""	"[('android.server.wm.WindowUntrustedTouchTest', 12), ('android.uwb.cts.RangingSessionTest', 7), ('android.provider.cts.contacts.ContactsContract_PinnedPositionsTest', 3), ('android.security.cts.SELinuxHostTest', 3), ('android.server.wm.WindowInputTests', 2), ('android.content.cts.ContentResolverTest', 2), ('android.mediav2.cts.MuxerTest', 2), ('android.net.wifi.passpoint.cts.PasspointConfigurationTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('com.android.cts.verifier.streamquality.StreamingVideoActivity', 1), ('android.location.cts.gnss.GnssPseudorangeVerificationTest', 1), ('android.hardware.camera2.cts.CameraDeviceTest', 1), ('com.android.cts.verifier.camera.bokeh.CameraBokehActivity', 1), ('android.telephony.cts.TelephonyManagerTest', 1), ('android.database.sqlite.cts.SQLiteDatabaseTest', 1), ('android.media.cts.MediaBrowserServiceTest', 1), ('android.hardware.camera2.cts.helpers.CameraMetadataGetter', 1), ('android.print.cts.PrintJobTest', 1), ('android.media.cts.MediaFormatTest', 1), ('android.telephony.cts.SubscriptionManagerTest', 1), ('android.location.cts.gnss.pseudorange.UserPositionVelocityWeightedLeastSquare', 1), ('android.hardware.cts.SensorIntegrationTests', 1), ('android.content.cts.IntentFilterTest', 1)]"	"[('close', 15), ('getContext', 9), ('start', 8), ('AtomicInteger', 7), ('Object', 5), ('getLooper', 5), ('transpose', 5), ('getWidth', 4), ('getHeight', 4), ('capacity', 4), ('clear', 4), ('getSurface', 4), ('hashCode', 4), ('getName', 4), ('getSolver', 4), ('getData', 4), ('quitSafely', 3), ('run', 3), ('getOutputStream', 3), ('toString', 3), ('setUp', 3), ('tearDown', 3), ('getInverse', 3), ('getPackage', 3), ('getSimpleName', 2), ('BlockingStateCallback', 2), ('size', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('getInstrumentation', 2), ('saveAllowedNetworkTypesForAllReasons', 2), ('recoverAllowedNetworkType', 2), ('hasCellular', 2), ('onCreate', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('build', 1), ('onDestroy', 1), ('quit', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('release', 1), ('SizeComparator', 1), ('CaptureCallback', 1), ('getAction', 1), ('countDown', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('getPackageManager', 1), ('getPackageName', 1), ('getDefaultSubscriptionId', 1), ('getRadioHalVersion', 1), ('getUiAutomation', 1), ('StringBuilder', 1), ('keySet', 1), ('toByteArray', 1), ('getPhoneCount', 1), ('getCameraInfo', 1), ('advancedOption', 1), ('UserPositionVelocityWeightedLeastSquare', 1), ('getDeterminant', 1), ('getRowDimension', 1), ('setAlpha', 1), ('ftoh', 1), ('WindowManagerStateHelper', 1)]"	"[('CtsWindowManagerDeviceTestCases', 14), ('CtsUwbTestCases', 7), ('CtsContactsProviderTestCases', 3), ('CtsContentTestCases', 3), ('CtsSecurityHostTestCases', 3), ('CtsLocationGnssTestCases', 2), ('CtsTelephonyTestCases', 2), ('CtsMediaTestCases', 2), ('CtsMediaV2TestCases', 2), ('CtsWifiTestCases', 1), ('CtsMediaParserTestCases', 1), ('CtsCameraTestCases', 1), ('CtsDatabaseTestCases', 1), ('CtsPrintTestCases', 1), ('CtsSensorTestCases', 1)]"	""	"android.server.wm.WindowUntrustedTouchTest"	"WindowManagerStateHelper"	"CtsWindowManagerDeviceTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowUntrustedTouchTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/uwb/src/android/uwb/cts/RangingSessionTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_PinnedPositionsTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInputTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentResolverTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/MuxerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/streamquality/StreamingVideoActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssPseudorangeVerificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/sqlite/cts/SQLiteDatabaseTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaBrowserServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/CameraMetadataGetter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrintJobTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaFormatTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SubscriptionManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/pseudorange/UserPositionVelocityWeightedLeastSquare.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorIntegrationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/IntentFilterTest.java', 1)]"	"[('(1,SPS,/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java)', 1), ('(2,GOP,/android/server/wm/WindowInputTests.java)', 1), ('(1,GOP,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(2,GOP,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(5,GOP,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(4,SPS,/com/android/cts/verifier/streamquality/StreamingVideoActivity.java)', 1), ('(2,SPS,/android/location/cts/gnss/GnssPseudorangeVerificationTest.java)', 1), ('(1,GOP,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(2,GOP,/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java)', 1), ('(1,GOP,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(1,GOP,/android/database/sqlite/cts/SQLiteDatabaseTest.java)', 1), ('(8,GOP,/android/media/cts/MediaBrowserServiceTest.java)', 1), ('(13,GOP,/android/provider/cts/contacts/ContactsContract_PinnedPositionsTest.java)', 1), ('(3,GOP,/android/hardware/camera2/cts/helpers/CameraMetadataGetter.java)', 1), ('(12,GOP,/android/print/cts/PrintJobTest.java)', 1), ('(1,SPS,/android/media/cts/MediaFormatTest.java)', 1), ('(1,GOP,/android/telephony/cts/SubscriptionManagerTest.java)', 1), ('(2,GOP,/android/content/cts/ContentResolverTest.java)', 1), ('(3,GOP,/android/mediav2/cts/MuxerTest.java)', 1), ('(19,SPS,/android/location/cts/gnss/pseudorange/UserPositionVelocityWeightedLeastSquare.java)', 1), ('(8,SPS,/android/security/cts/SELinuxHostTest.java)', 1), ('(3,GOP,/android/hardware/cts/SensorIntegrationTests.java)', 1), ('(10,GOP,/android/uwb/cts/RangingSessionTest.java)', 1), ('(4,SPS,/android/content/cts/IntentFilterTest.java)', 1), ('(20,GOP,/android/server/wm/WindowUntrustedTouchTest.java)', 1)]"	"[('([1:/android/content/cts/ContentResolverTest.java]:[GOP]:[1]:method_text:[, null, null);        } catch (RemoteException e) {        }        uClient.release();    }   ])', 2), ('([1:/android/net/wifi/passpoint/cts/PasspointConfigurationTest.java]:[SPS]:[1]:method_text:[rated is different for two instances with the same     * HomeSp node but different FQDN     */   ])', 1), ('([1:/android/server/wm/WindowInputTests.java]:[GOP]:[1]:method_text:[0, mClickCount);        } finally {            mActivity.stopService(intent);        }    }   ])', 1), ('([1:/android/server/wm/WindowInputTests.java]:[GOP]:[1]:method_text:[1, mClickCount);        } finally {            mActivity.stopService(intent);        }    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[GOP]:[1]:method_text:[tch (MediaParser.UnrecognizedInputFormatException e) {            // Expected.        }    }   ])', 1), ('([2:/com/android/cts/verifier/camera/its/ItsService.java]:[GOP]:[2]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([5:/android/hardware/camera2/cts/CameraTestUtils.java]:[GOP]:[5]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([4:/com/android/cts/verifier/streamquality/StreamingVideoActivity.java]:[SPS]:[4]:method_text:[ {                    urlConnection.disconnect();                }            }        }    }}])', 1), ('([2:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[SPS]:[2]:method_text:[d.   * This tests uses actual data retrieved from Gnss HAL.   */  @CddTest(requirement=""7.3.3"") ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[GOP]:[1]:method_text:[_CLOSED, CAMERA_CLOSE_TIMEOUT_MS);                cam1Cb = null;            }        }    }   ])', 1), ('([2:/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java]:[GOP]:[2]:method_text:[ton = (ImageButton) findViewById(R.id.pass_button);        pass_button.setEnabled(enabled);    }}])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[GOP]:[1]:method_text:[ckageManager.FEATURE_TELEPHONY)                && mTelephonyManager.getPhoneCount() > 0;    }   ])', 1), ('([1:/android/database/sqlite/cts/SQLiteDatabaseTest.java]:[GOP]:[1]:method_text:[.disableWriteAheadLogging();        assertFalse(mDatabase.isWriteAheadLoggingEnabled());    }   ])', 1), ('([8:/android/media/cts/MediaBrowserServiceTest.java]:[GOP]:[8]:method_text:[IME_FOR_NO_RESPONSE_MS);            assertFalse(mOnChildrenLoadedWithOptions);        }    }   ])', 1), ('([4:/android/provider/cts/contacts/ContactsContract_PinnedPositionsTest.java]:[GOP]:[4]:method_text:[ correctly handled after the ContactsProvider aggregates     * and splits raw contacts.     */   ])', 1), ('([6:/android/provider/cts/contacts/ContactsContract_PinnedPositionsTest.java]:[GOP]:[6]:method_text:[TE_METHOD} with an illegal argument correctly     * throws an IllegalArgumentException.     */   ])', 1), ('([3:/android/provider/cts/contacts/ContactsContract_PinnedPositionsTest.java]:[GOP]:[3]:method_text:[ {            Log.wtf(TAG, ""Remote exception when performing batch operation."");        }    }}])', 1), ('([3:/android/hardware/camera2/cts/helpers/CameraMetadataGetter.java]:[GOP]:[3]:method_text:[ e);                    }                }            }        }        return jsonObj;    }}])', 1), ('([12:/android/print/cts/PrintJobTest.java]:[GOP]:[12]:method_text:[     if (!testSuccess[0]) {            throw new Exception(""Did not succeed"");        }    }   ])', 1), ('([1:/android/media/cts/MediaFormatTest.java]:[SPS]:[1]:method_text:[is test uses introspection to find the mime type fields.     *     * @throws Exception     */   ])', 1), ('([1:/android/telephony/cts/SubscriptionManagerTest.java]:[GOP]:[1]:method_text:[riptionInfo info = mSm.getActiveSubscriptionInfo(mSubId);        info.isOpportunistic();    }   ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[GOP]:[1]:method_text:[g outPath);        private native boolean nativeTestAppendGetTrackFormat(String srcPath);       ])', 1), ('([2:/android/mediav2/cts/MuxerTest.java]:[GOP]:[2]:method_text:[       assertTrue(nativeTestIgnoreLastGOPAppend(mOutFormat, mInpPath, mOutPath));        }       ])', 1), ('([19:/android/location/cts/gnss/pseudorange/UserPositionVelocityWeightedLeastSquare.java]:[SPS]:[19]:method_text:[ngeMeters, sigmaMeters));      }    }    return usefulSatellitesToPseudorangeMeasurements;  }}])', 1), ('([2:/android/security/cts/SELinuxHostTest.java]:[SPS]:[2]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([3:/android/security/cts/SELinuxHostTest.java]:[SPS]:[3]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([3:/android/security/cts/SELinuxHostTest.java]:[SPS]:[3]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([3:/android/hardware/cts/SensorIntegrationTests.java]:[GOP]:[3]:method_text:[to identify how the interaction     * of several clients can lead to the failing state.     */   ])', 1), ('([2:/android/uwb/cts/RangingSessionTest.java]:[GOP]:[2]:method_text:[(1)).onOpened(eq(session));        verify(callback, times(0)).onClosed(anyInt(), any());    }   ])', 1), ('([3:/android/uwb/cts/RangingSessionTest.java]:[GOP]:[3]:method_text:[(1)).onOpened(eq(session));        verify(callback, times(1)).onClosed(anyInt(), any());    }   ])', 1), ('([1:/android/uwb/cts/RangingSessionTest.java]:[GOP]:[1]:method_text:[lState(() -> session.start(PARAMS));        verify(callback, times(1)).onStarted(any());    }   ])', 1), ('([1:/android/uwb/cts/RangingSessionTest.java]:[GOP]:[1]:method_text:[legalState(session::stop);        verify(callback, times(1)).onStopped(anyInt(), any());    }   ])', 1), ('([1:/android/uwb/cts/RangingSessionTest.java]:[GOP]:[1]:method_text:[erify(callback, times(3)).onReconfigured(any());        verifyOpenState(session, false);    }   ])', 1), ('([1:/android/uwb/cts/RangingSessionTest.java]:[GOP]:[1]:method_text:[ging(handle);            verify(callback, times(i)).onClosed(anyInt(), any());        }    }   ])', 1), ('([1:/android/uwb/cts/RangingSessionTest.java]:[GOP]:[1]:method_text:[;        session.close();        verify(callback, times(1)).onClosed(anyInt(), any());    }   ])', 1), ('([4:/android/content/cts/IntentFilterTest.java]:[SPS]:[4]:method_text:[lt));                throw new RuntimeException(msg.toString());            }        }    }   ])', 1), ('([2:/android/server/wm/WindowUntrustedTouchTest.java]:[GOP]:[2]:method_text:[);        AppOpsUtils.setOpMode(APP_SELF, OPSTR_SYSTEM_ALERT_WINDOW, mPreviousSawAppOp);    }   ])', 1), ('([3:/android/server/wm/WindowUntrustedTouchTest.java]:[GOP]:[3]:method_text:[pacity);        assertEquals(0.8f, mInputManager.getMaximumObscuringOpacityForTouch());    }   ])', 1), ('([2:/android/server/wm/WindowUntrustedTouchTest.java]:[GOP]:[2]:method_text:[d);        assertEquals(threshold, mInputManager.getMaximumObscuringOpacityForTouch());    }   ])', 1), ('([1:/android/server/wm/WindowUntrustedTouchTest.java]:[GOP]:[1]:method_text:[ldLessThan0_throws() throws Throwable {        setMaximumObscuringOpacityForTouch(-.5f);    }   ])', 1), ('([1:/android/server/wm/WindowUntrustedTouchTest.java]:[GOP]:[1]:method_text:[ForTouch(1.5f);    }    /** This is testing what happens if setting is overridden manually */   ])', 1), ('([2:/android/server/wm/WindowUntrustedTouchTest.java]:[GOP]:[2]:method_text:[hNotReceived();    }    /** This is testing what happens if setting is overridden manually */   ])', 1), (""([2:/android/server/wm/WindowUntrustedTouchTest.java]:[GOP]:[2]:method_text:[because it's using previous maximum of .8        assertTouchReceived();    }    /** SAWs */   ])"", 1), ('([1:/android/server/wm/WindowUntrustedTouchTest.java]:[GOP]:[1]:method_text:[1, 0);        mTouchHelper.tapOnViewCenter(mContainer);        assertTouchReceived();    }   ])', 1), ('([1:/android/server/wm/WindowUntrustedTouchTest.java]:[GOP]:[1]:method_text:[f);        mTouchHelper.tapOnViewCenter(mContainer);        assertTouchNotReceived();    }   ])', 1), ('([1:/android/server/wm/WindowUntrustedTouchTest.java]:[GOP]:[1]:method_text:[1, 1);        mTouchHelper.tapOnViewCenter(mContainer);        assertTouchReceived();    }   ])', 1), ('([1:/android/server/wm/WindowUntrustedTouchTest.java]:[GOP]:[1]:method_text:[tapOnViewCenter(mContainer);        assertTouchReceived();    }    /** Activity windows */   ])', 1), ('([3:/android/server/wm/WindowUntrustedTouchTest.java]:[GOP]:[3]:method_text:[        view.setBackgroundColor(ACTIVITY_COLOR);            setContentView(view);        }    }}])', 1)]"	""	""	"[('GOP', 40), ('SPS', 9)]"	"[('[android.net.wifi.passpoint.cts.PasspointConfigurationTest testUniqueIdSameHomeSpSameFqdn CtsWifiTestCases]', 1), ('[android.server.wm.WindowInputTests testFilterTouchesWhenObscuredByWindowFromDifferentUid CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testFlagTouchesWhenObscuredByWindowFromDifferentUid CtsWindowManagerDeviceTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testOggOpusHeaderSniff CtsMediaParserTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[com.android.cts.verifier.streamquality.StreamingVideoActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testAudioRestrictionSingleDevice CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.bokeh.CameraBokehActivity setPassFailButtonClickListeners None]', 1), ('[android.database.sqlite.cts.SQLiteDatabaseTest testEnableThenDisableWriteAheadLoggingUsingOpenFlag CtsDatabaseTestCases]', 1), ('[android.media.cts.MediaBrowserServiceTest testNotifyChildrenChangedWithPagination CtsMediaTestCases]', 1), ('[android.provider.cts.contacts.ContactsContract_PinnedPositionsTest testPinnedPositionsUpdate CtsContactsProviderTestCases]', 1), ('[android.provider.cts.contacts.ContactsContract_PinnedPositionsTest testPinnedPositionsAfterJoinAndSplit CtsContactsProviderTestCases]', 1), ('[android.provider.cts.contacts.ContactsContract_PinnedPositionsTest testPinnedPositionsAfterDemoteAndUndemote CtsContactsProviderTestCases]', 1), ('[android.hardware.camera2.cts.helpers.CameraMetadataGetter getCameraIdListNoLazy None]', 1), ('[android.print.cts.PrintJobTest createFirstMockPrinterDiscoverySessionCallbacks CtsPrintTestCases]', 1), ('[android.media.cts.MediaFormatTest testKeyConsistency CtsMediaTestCases]', 1), ('[android.telephony.cts.SubscriptionManagerTest testSettingOpportunisticSubscription CtsTelephonyTestCases]', 1), ('[android.content.cts.ContentResolverTest testCrashingOpenAssetFileDescriptor CtsContentTestCases]', 1), ('[android.content.cts.ContentResolverTest testCrashingOpenTypedAssetFileDescriptor CtsContentTestCases]', 1), ('[android.mediav2.cts.MuxerTest testOffsetPresentationTimeNative CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.MuxerTest testIgnoreLastGOPAppend CtsMediaV2TestCases]', 1), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo CtsSecurityHostTestCases]', 1), ('[android.security.cts.SELinuxHostTest testAospSeappContexts CtsSecurityHostTestCases]', 1), ('[android.security.cts.SELinuxHostTest testAospServiceContexts CtsSecurityHostTestCases]', 1), ('[android.hardware.cts.SensorIntegrationTests testSensorsWithSeveralClients CtsSensorTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testOnRangingOpened_OnOpenSuccessCalled CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testOnRangingOpened_CannotOpenClosedSession CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testStart_CannotStartIfAlreadyStarted CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testStop_CannotStopIfAlreadyStopped CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testReconfigure_OnlyWhenOpened CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testClose_NoCallbackUntilInvoked CtsUwbTestCases]', 1), ('[android.uwb.cts.RangingSessionTest testClose_OnClosedCalled CtsUwbTestCases]', 1), ('[android.content.cts.IntentFilterTest testAddDataType CtsContentTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest TestName CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testMaximumObscuringOpacity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testAfterSettingThreshold_returnsThresholdSet CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testAfterSettingThresholdLessThan0_throws CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testAfterSettingThresholdGreaterThan1_throws CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testAfterSettingThresholdGreaterThan1ViaSettings_previousThresholdIsUsed CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testAfterSettingThresholdLessThan0ViaSettings_previousThresholdIsUsed CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenThresholdIs0AndSawWindowAtThreshold_allowsTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenThresholdIs0AndSawWindowAboveThreshold_blocksTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenThresholdIs1AndSawWindowAtThreshold_allowsTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenThresholdIs1AndSawWindowBelowThreshold_allowsTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowUntrustedTouchTest testWhenOneSelfCustomToastWindowOneSelfActivityWindowAndOneSawBelowThreshold_allowsTouch CtsWindowManagerDeviceTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.2  .  These are in the Android source tree at"	"7.1.4.2"	"C-1-4"	"7.1.4.2/C-1-4"	"07010402.670104"	"""C-1-4] MUST enumerate layers, contained in native libraries named as libVkLayer*.so in the application package’s native library directory, through the Vulkan native APIs vkEnumerateInstanceLayerProperties() and vkEnumerateDeviceLayerProperties() ."""	""	""	"vkEnumerateInstanceLayerProperties() vkEnumerateDeviceLayerProperties()"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"5.1  . Professional Audio"	"5.1"	"C-3-1"	"5.1/C-3-1"	"05010000.670301"	"""C-3-1] MUST implement the USB audio class."""	""	""	"USB"	""	""	""	""	"[('android.app.notification.legacy29.cts.NotificationAssistantServiceTest', 16), ('android.server.wm.WindowInsetsAnimationTests', 5), ('android.hardware.input.cts.tests.SonyDualshock4UsbTest', 5), ('com.android.cts.usb.TestUsbTest', 3), ('android.server.wm.WindowInputTests', 2), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 2), ('android.os.cts.UsbDebuggingTest', 2), ('android.app.notification.legacy28.cts.NotificationManager28Test', 2), ('android.permission.cts.ServicesInstantAppsCannotAccessTests', 2), ('com.android.cts.verifier.camera.its.ItsTestActivity', 1), ('android.systemui.cts.LightBarActivity', 1), ('com.android.cts.verifier.audio.USBRestrictRecordAActivity', 1), ('android.accessibilityservice.cts.utils.DisplayUtils', 1), ('com.android.cts.usb.serialtest.UsbSerialTest', 1), ('android.server.wm.BarTestUtils', 1), ('com.android.cts.verifier.battery.BatterySaverTestActivity', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('android.app.stubs.TestNotificationListener', 1), ('com.android.cts.verifier.sensors.SensorPowerTestActivity', 1), ('com.android.cts.isolatedsplitapp.SplitAppTest', 1), ('com.android.cts.verifier.audio.USBAudioPeripheralButtonsActivity', 1), ('android.carrierapi.cts.BugreportManagerTest', 1), ('android.webkit.cts.CtsTestServer', 1), ('com.android.cts.verifier.usb.device.UsbDeviceTestActivity', 1), ('com.android.cts.verifier.audio.ProAudioActivity', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('android.media.cts.AudioDeviceInfoTest', 1), ('android.voicesettings.cts.BatterySaverModeTest', 1), ('android.app.cts.SystemFeaturesTest', 1), ('android.server.wm.ForceRelayoutTestBase', 1), ('android.app.cts.TileServiceTest', 1), ('android.app.cts.InstrumentationTest', 1), ('android.adb.cts.AdbHostTest', 1)]"	"[('getWindow', 9), ('setUp', 6), ('getInstrumentation', 5), ('hashCode', 3), ('getDecorView', 3), ('systemBars', 3), ('tearDown', 3), ('getAttributes', 2), ('getIntent', 2), ('getContext', 2), ('getId', 2), ('BugreportCallbackImpl', 2), ('start', 2), ('shutdown', 2), ('getSimpleName', 2), ('close', 2), ('getName', 2), ('ResultReceiver', 1), ('Rect', 1), ('getSurface', 1), ('setup', 1), ('WindowManagerStateHelper', 1), ('pressWakeupButton', 1), ('pressUnlockButton', 1), ('launchHomeActivityNoWait', 1), ('waitForIdleSync', 1), ('getReceiverComponentName', 1), ('myUserId', 1), ('getPackageManager', 1), ('USBAudioPeripheralButtonsActivity', 1), ('cannotGetUsbManager', 1), ('getTargetContext', 1), ('simultaneousBugreportsNotAllowed', 1), ('getMethodName', 1), ('CtsTrustManager', 1), ('getAssets', 1), ('getResources', 1), ('getSingleton', 1), ('getLocalPort', 1), ('shutDownOnClientThread', 1), ('join', 1), ('now', 1), ('nanoTime', 1), ('getMaxPacketSize', 1), ('getPassButton', 1), ('IntentFilter', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getApplicationContext', 1), ('getApplicationInfo', 1), ('getSerialNumber', 1), ('Thread', 1), ('run', 1), ('getProductName', 1), ('getDevice', 1), ('ProAudioActivity', 1), ('super', 1), ('printStackTrace', 1), ('getActivity', 1), ('statusBars', 1), ('navigationBars', 1), ('getInsetsController', 1), ('flush', 1), ('deleteOnExit', 1)]"	"[('CtsLegacyNotification29TestCases', 16), ('CtsWindowManagerDeviceTestCases', 8), ('CtsHardwareTestCases', 5), ('CtsAppTestCases', 3), ('CtsLegacyNotification20TestCases', 2), ('CtsLegacyNotification28TestCases', 2), ('CtsPermissionTestCases', 2), ('CtsSystemUiTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsCarrierApiTestCases', 1), ('CtsMediaTestCases', 1), ('CtsVoiceSettingsTestCases', 1), ('CtsAdbHostTestCases', 1)]"	""	"android.app.notification.legacy29.cts.NotificationAssistantServiceTest"	"deleteOnExit"	"CtsLegacyNotification29TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy29/src/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/usb/src/com/android/cts/usb/TestUsbTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInputTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy20/src/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/UsbDebuggingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy28/src/android/app/notification/legacy28/cts/NotificationManager28Test.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ServicesInstantAppsCannotAccessTests.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/LightBarActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/utils/DisplayUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/usb/SerialTestApp/src/com/android/cts/usb/serialtest/UsbSerialTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/BarTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/battery/BatterySaverTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/app/src/android/app/stubs/TestNotificationListener.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/SensorPowerTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/src/com/android/cts/isolatedsplitapp/SplitAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBAudioPeripheralButtonsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/BugreportManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/testserver/src/android/webkit/cts/CtsTestServer.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/ProAudioActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioDeviceInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/voicesettings/src/android/voicesettings/cts/BatterySaverModeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ForceRelayoutTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/TileServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/InstrumentationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adb/src/android/adb/cts/AdbHostTest.java', 1)]"	"[('(1,USB,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(6,USB,/android/systemui/cts/LightBarActivity.java)', 1), ('(38,USB,/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java)', 1), ('(1,USB,/android/accessibilityservice/cts/utils/DisplayUtils.java)', 1), ('(18,USB,/android/server/wm/WindowInsetsAnimationTests.java)', 1), ('(3,USB,/com/android/cts/usb/serialtest/UsbSerialTest.java)', 1), ('(10,USB,/android/server/wm/BarTestUtils.java)', 1), ('(1,USB,/com/android/cts/verifier/battery/BatterySaverTestActivity.java)', 1), ('(3,USB,/android/server/wm/WindowInputTests.java)', 1), ('(13,USB,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(4,USB,/android/app/stubs/TestNotificationListener.java)', 1), ('(1,USB,/com/android/cts/verifier/sensors/SensorPowerTestActivity.java)', 1), ('(8,USB,/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java)', 1), ('(2,USB,/com/android/cts/isolatedsplitapp/SplitAppTest.java)', 1), ('(8,USB,/com/android/cts/verifier/audio/USBAudioPeripheralButtonsActivity.java)', 1), ('(3,USB,/android/os/cts/UsbDebuggingTest.java)', 1), ('(6,USB,/android/app/notification/legacy28/cts/NotificationManager28Test.java)', 1), ('(3,USB,/android/permission/cts/ServicesInstantAppsCannotAccessTests.java)', 1), ('(1,USB,/android/carrierapi/cts/BugreportManagerTest.java)', 1), ('(1,USB,/android/webkit/cts/CtsTestServer.java)', 1), ('(405,USB,/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java)', 1), ('(22,USB,/com/android/cts/usb/TestUsbTest.java)', 1), ('(26,USB,/com/android/cts/verifier/audio/ProAudioActivity.java)', 1), ('(17,USB,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(6,USB,/android/media/cts/AudioDeviceInfoTest.java)', 1), ('(1,USB,/android/voicesettings/cts/BatterySaverModeTest.java)', 1), ('(4,USB,/android/app/cts/SystemFeaturesTest.java)', 1), ('(2,USB,/android/server/wm/ForceRelayoutTestBase.java)', 1), ('(1,USB,/android/app/cts/TileServiceTest.java)', 1), ('(2,USB,/android/app/cts/InstrumentationTest.java)', 1), ('(7,USB,/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java)', 1), ('(3,USB,/android/adb/cts/AdbHostTest.java)', 1), ('(36,USB,/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java)', 1)]"	"[('([1:/com/android/cts/verifier/camera/its/ItsTestActivity.java]:[USB]:[1]:method_text:[era_its_test, R.string.camera_its_test_info, -1);        setPassFailButtonClickListeners();    }}])', 1), ('([6:/android/systemui/cts/LightBarActivity.java]:[USB]:[6]:method_text:[ranceFlag;        }        controller.setSystemBarsAppearance(appearance, appearanceFlag);    }}])', 1), ('([38:/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java]:[USB]:[38]:method_text:[ filter);            mUsbManager.requestPermission(theDevice, permissionIntent);        }    }}])', 1), ('([1:/android/accessibilityservice/cts/utils/DisplayUtils.java]:[USB]:[1]:method_text:[ger.unregisterDisplayListener(listener);            }            return display;        }    }}])', 1), ('([1:/android/server/wm/WindowInsetsAnimationTests.java]:[USB]:[1]:method_text:[getWindow().getDecorView();        assumeTrue(hasWindowInsets(mRootView, systemBars()));    }   ])', 1), ('([12:/android/server/wm/WindowInsetsAnimationTests.java]:[USB]:[12]:method_text:[ack.statusAnimSteps.size() - 1).insets                        .getInsets(statusBars()));    }   ])', 1), ('([2:/android/server/wm/WindowInsetsAnimationTests.java]:[USB]:[2]:method_text:[te().isWindowVisible(""StatusBar""));        verifyZeroInteractions(mActivity.mCallback);    }   ])', 1), ('([2:/android/server/wm/WindowInsetsAnimationTests.java]:[USB]:[2]:method_text:[            insets -> NONE.equals(insets.getInsets(navigationBars()))), any());        }    }   ])', 1), ('([1:/android/server/wm/WindowInsetsAnimationTests.java]:[USB]:[1]:method_text:[, atLeastOnce()).onProgress(any(), any());        verify(mActivity.mCallback).onEnd(any());    }}])', 1), ('([3:/com/android/cts/usb/serialtest/UsbSerialTest.java]:[USB]:[3]:method_text:[4.class)public class UsbSerialTest {    private static final String TAG = ""CtsUsbSerialTest"";   ])', 1), ('([10:/android/server/wm/BarTestUtils.java]:[USB]:[10]:method_text:[         Log.i(""BarTestUtils"", ""Assumption violated"", e);            return true;        }    }}])', 1), ('([1:/com/android/cts/verifier/battery/BatterySaverTestActivity.java]:[USB]:[1]:method_text:[ } else {                error(R.string.battery_saver_test_bs_on);            }        }    };}])', 1), ('([1:/android/server/wm/WindowInputTests.java]:[USB]:[1]:method_text:[InputManager.class);        mInstrumentation.waitForIdleSync();        mClickCount = 0;    }   ])', 1), ('([2:/android/server/wm/WindowInputTests.java]:[USB]:[2]:method_text:[   // Should not be allowed to inject event to the window from another process.        }    }   ])', 1), ('([13:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[USB]:[13]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([4:/android/app/stubs/TestNotificationListener.java]:[USB]:[4]:method_text:[ void onNotificationRankingUpdate(RankingMap rankingMap) {        mRankingMap = rankingMap;    }}])', 1), ('([1:/com/android/cts/verifier/sensors/SensorPowerTestActivity.java]:[USB]:[1]:method_text:[} else {            throw new IllegalStateException(""Attempt to run test twice"");        }    }}])', 1), ('([1:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[USB]:[1]:method_text:[r listener to disconnect        assertTrue(mListener == null || !mListener.isConnected);    }   ])', 1), ('([7:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[USB]:[7]:method_text:[InterruptedException ex) {                // pass            }        }        return n;    }}])', 1), ('([2:/com/android/cts/isolatedsplitapp/SplitAppTest.java]:[USB]:[2]:method_text:[  };        }        public Context getContext() {            return mContext;        }    }}])', 1), ('([8:/com/android/cts/verifier/audio/USBAudioPeripheralButtonsActivity.java]:[USB]:[8]:method_text:[asBtnA = mHasBtnB = mHasBtnC = false;        showButtonsState();        calculateMatch();    }}])', 1), ('([1:/android/os/cts/UsbDebuggingTest.java]:[USB]:[1]:method_text:[java.io.File;public class UsbDebuggingTest extends AndroidTestCase {    @RestrictedBuildTest   ])', 1), ('([2:/android/os/cts/UsbDebuggingTest.java]:[USB]:[2]:method_text:[       File keys = new File(""/adb_keys"");            assertFalse(keys.exists());        }    }}])', 1), ('([1:/android/app/notification/legacy28/cts/NotificationManager28Test.java]:[USB]:[1]:method_text:[               NOTIFICATION_CHANNEL_ID, ""name"", NotificationManager.IMPORTANCE_DEFAULT));    }   ])', 1), ('([5:/android/app/notification/legacy28/cts/NotificationManager28Test.java]:[USB]:[5]:method_text:[  mContext, 0, new Intent(mContext, this.getClass()), PendingIntent.FLAG_MUTABLE_UNAUDITED);    }}])', 1), ('([1:/android/permission/cts/ServicesInstantAppsCannotAccessTests.java]:[USB]:[1]:method_text:[AppModeInstant@RunWith(AndroidJUnit4.class)public class ServicesInstantAppsCannotAccessTests {   ])', 1), ('([2:/android/permission/cts/ServicesInstantAppsCannotAccessTests.java]:[USB]:[2]:method_text:[strumentationRegistry.getTargetContext().getSystemService(                USB_SERVICE));    }   ])', 1), ('([1:/android/carrierapi/cts/BugreportManagerTest.java]:[USB]:[1]:method_text:[ssertThat(bugreportFile2.length()).isEqualTo(0L);        assertFdIsClosed(bugreportFd2);    }   ])', 1), ('([1:/android/webkit/cts/CtsTestServer.java]:[USB]:[1]:method_text:[         Log.e(TAG, ""Error handling request:"", e);                }            }        }    }}])', 1), ('([405:/com/android/cts/verifier/usb/device/UsbDeviceTestActivity.java]:[USB]:[405]:method_text:[     unregisterReceiver(mUsbDevicePermissionReceiver);        }        super.onDestroy();    }}])', 1), ('([7:/com/android/cts/usb/TestUsbTest.java]:[USB]:[7]:method_text:[A-Z0-9]{6,20}     */    @AppModeInstant(reason = ""only instant apps fail when reading serial"")   ])', 1), ('([1:/com/android/cts/usb/TestUsbTest.java]:[USB]:[1]:method_text:[nt [a-zA-Z0-9]{6,20}     */    @AppModeFull(reason = ""serial can not be read by instant apps"")   ])', 1), ('([14:/com/android/cts/usb/TestUsbTest.java]:[USB]:[14]:method_text:[at() throws DeviceNotAvailableException {        mDevice.executeAdbCommand(""logcat"", ""-c"");    }}])', 1), ('([26:/com/android/cts/verifier/audio/ProAudioActivity.java]:[USB]:[26]:method_text:[audio_proaudio_NA));            }            calculatePass();            break;        }    }}])', 1), ('([17:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[USB]:[17]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([6:/android/media/cts/AudioDeviceInfoTest.java]:[USB]:[6]:method_text:[  * Ensure no regression on accepted input device types.     *     * @throws Exception     */   ])', 1), ('([1:/android/voicesettings/cts/BatterySaverModeTest.java]:[USB]:[1]:method_text:[text.getSystemService(Context.POWER_SERVICE);        return powerManager.isPowerSaveMode();    }}])', 1), ('([4:/android/app/cts/SystemFeaturesTest.java]:[USB]:[4]:method_text:[e negatives.            assertAvailable(PackageManager.FEATURE_USB_ACCESSORY);        }    }   ])', 1), ('([2:/android/server/wm/ForceRelayoutTestBase.java]:[USB]:[2]:method_text:[   return WindowInsets.CONSUMED;            });            setContentView(view);        }    }}])', 1), ('([1:/android/app/cts/TileServiceTest.java]:[USB]:[1]:method_text:[= false;        @Override        public void run() {            hasRan = true;        }    }}])', 1), ('([2:/android/app/cts/InstrumentationTest.java]:[USB]:[2]:method_text:[d onCreate() {            super.onCreate();            mIsOnCreateCalled = true;        }    }}])', 1), ('([3:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[USB]:[3]:method_text:[)    public SonyDualshock4UsbTest() {        super(R.raw.sony_dualshock4_usb_register);    }   ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[USB]:[1]:method_text:[ic void testAllKeys() {        testInputEvents(R.raw.sony_dualshock4_usb_keyeventtests);    }   ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[USB]:[1]:method_text:[d testAllMotions() {        testInputEvents(R.raw.sony_dualshock4_usb_motioneventtests);    }   ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[USB]:[1]:method_text:[tBattery() {        testInputBatteryEvents(R.raw.sony_dualshock4_usb_batteryeventtests);    }   ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[USB]:[1]:method_text:[aterThan(""4.19""));        testInputVibratorEvents(R.raw.sony_dualshock4_usb_vibratortests);    }}])', 1), ('([3:/android/adb/cts/AdbHostTest.java]:[USB]:[3]:method_text:[c7c6d5edcbe04454eb9a40f947ac0a3045f64eb    // for the patch that enabled this on Pixel devices.   ])', 1), ('([6:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[6]:method_text:[(false);        toggleAssistantAccess(false);        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[ListenerService.Ranking.USER_SENTIMENT_POSITIVE,                out.getUserSentiment());    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[ListenerService.Ranking.USER_SENTIMENT_NEGATIVE,                out.getUserSentiment());    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[getRanking(sbn.getKey(), out);        assertEquals(newImportance, out.getImportance());    }   ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[2]:method_text:[t(Adjustment.KEY_RANKING_SCORE);            mUi.dropShellPermissionIdentity();        }    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[und || action.actionIntent.equals(sendIntent);        }        assertTrue(actionFound);    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[Found = replyFound || reply.equals(smartReply);        }        assertTrue(replyFound);    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[nking(sbn.getKey(), out);        assertEquals(currentImportance, out.getImportance());    }   ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[2]:method_text:[ank1 > newRank2);        } else {            assertTrue(newRank1 < newRank2);        }    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[;        assertEquals(snoozeContext, mNotificationAssistantService.snoozedUntilContext);    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[1]:method_text:[             + ""> was not restored when unsnoozed from listener"",                found);    }   ])', 1), ('([3:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[3]:method_text:[icationAssistantService.notificationVisible);        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([3:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[3]:method_text:[;        mStatusBarManager.collapsePanels();        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([3:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[3]:method_text:[e(mNotificationAssistantService.isPanelOpen);        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([5:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[5]:method_text:[        mStatusBarManager.collapsePanels();        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([4:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[USB]:[4]:method_text:[ new IOException(""Could not read stdout of command:\xa0"" + command, e);            }        }    }}])', 1)]"	""	""	"[('USB', 63)]"	"[('[com.android.cts.verifier.camera.its.ItsTestActivity ItsTestActivity None]', 1), ('[android.systemui.cts.LightBarActivity getSystemUiVisibility CtsSystemUiTestCases]', 1), ('[com.android.cts.verifier.audio.USBRestrictRecordAActivity LocalClickListener None]', 1), ('[android.accessibilityservice.cts.utils.DisplayUtils getDisplay CtsAccessibilityServiceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_overlapping CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_consumedByDecor CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_childInsetting CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_withLegacyFlags CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.BarTestUtils BarTestUtils None]', 1), ('[com.android.cts.verifier.battery.BatterySaverTestActivity getTests None]', 1), ('[android.server.wm.WindowInputTests testInjectToStatusBar CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[android.app.stubs.TestNotificationListener onListenerConnected None]', 1), ('[com.android.cts.verifier.sensors.SensorPowerTestActivity SensorPowerTestActivity None]', 1), ('[android.app.notification.legacy20.cts.LegacyNotificationManager20Test testNotificationListener_cancelNotifications CtsLegacyNotification20TestCases]', 1), ('[com.android.cts.isolatedsplitapp.SplitAppTest testNative_cannotLoadSharedLibrary None]', 1), ('[com.android.cts.verifier.audio.USBAudioPeripheralButtonsActivity showDisableAssistantDialog None]', 1), ('[android.os.cts.UsbDebuggingTest testUsbDebugging None]', 1), ('[android.app.notification.legacy28.cts.NotificationManager28Test testPostFullScreenIntent_noPermission CtsLegacyNotification28TestCases]', 1), ('[android.carrierapi.cts.BugreportManagerTest hasEarlyReportFinished CtsCarrierApiTestCases]', 1), ('[android.webkit.cts.CtsTestServer getAcceptedIssuers None]', 1), ('[com.android.cts.verifier.usb.device.UsbDeviceTestActivity getAccessoryList None]', 1), ('[com.android.cts.usb.TestUsbTest CollectingTestListener None]', 1), ('[com.android.cts.usb.TestUsbTest testInstantAppsCannotReadSerial None]', 1), ('[com.android.cts.usb.TestUsbTest testUsbSerialReadOnDeviceMatches None]', 1), ('[com.android.cts.verifier.audio.ProAudioActivity isHDMIValid None]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[android.voicesettings.cts.BatterySaverModeTest testAll CtsVoiceSettingsTestCases]', 1), ('[android.app.cts.SystemFeaturesTest testUsbAccessory CtsAppTestCases]', 1), ('[android.app.cts.TileServiceTest testTileInDumpAndHasState CtsAppTestCases]', 1), ('[android.app.cts.InstrumentationTest testSendKeySync CtsAppTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest SonyDualshock4UsbTest CtsHardwareTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest testAllKeys CtsHardwareTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest testAllMotions CtsHardwareTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest testBattery CtsHardwareTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest testVibrator CtsHardwareTestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest isWatch CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationEnqueued CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_userSentimentKey CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_importanceKey CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotifications_rankingScoreKey CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_smartActionKey CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_smartReplyKey CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_importanceKey_notAllowed CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testAdjustNotification_rankingScoreKey_notAllowed CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationSnoozedUntilContext CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testUnsnoozeFromNAS CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationVisibilityChanged CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationsSeen CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnPanelRevealedAndHidden CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationClicked CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationFeedbackReceived CtsLegacyNotification29TestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-4-2"	"7.3.1/C-4-2"	"07030100.670402"	"""C-4-2] MUST recognize and honor each parameter name defined as a constant in the Authenticators class and any combinations thereof. Conversely, MUST NOT honor or recognize integer constants passed to the canAuthenticate(int) and setAllowedAuthenticators(int) methods other than those documented as public constants in Authenticators and any combinations thereof."""	""	""	"canAuthenticate(int) setAllowedAuthenticators(int)"	""	""	""	""	"[('com.android.cts.verifier.biometrics.BiometricStrongTests', 1), ('android.server.biometrics.BiometricSimpleTests', 1), ('com.android.cts.verifier.biometrics.BiometricWeakTests', 1)]"	"[('getTag', 1)]"	"[('CtsBiometricsTestCases', 1)]"	""	"com.android.cts.verifier.biometrics.BiometricWeakTests"	"getTag"	""	"[('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/BiometricStrongTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSimpleTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/BiometricWeakTests.java', 1)]"	"[('(1,canAuthenticate(int),/com/android/cts/verifier/biometrics/BiometricStrongTests.java)', 1), ('(1,canAuthenticate(int),/android/server/biometrics/BiometricSimpleTests.java)', 1), ('(1,canAuthenticate(int),/com/android/cts/verifier/biometrics/BiometricWeakTests.java)', 1)]"	"[('([1:/com/android/cts/verifier/biometrics/BiometricStrongTests.java]:[canAuthenticate(int)]:[1]:method_text:[ll tests passed"");                getPassButton().setEnabled(true);            }        }    }}])', 1), ('([1:/android/server/biometrics/BiometricSimpleTests.java]:[canAuthenticate(int)]:[1]:method_text:[EVICE_CREDENTIAL)     * 3) @deprecated BiometricPrompt#setDeviceCredentialAllowed(true)     */   ])', 1), ('([1:/com/android/cts/verifier/biometrics/BiometricWeakTests.java]:[canAuthenticate(int)]:[1]:method_text:[        showToastAndLog(""Unexpected result after enrollment: "" + biometricStatus);        }    }}])', 1)]"	""	""	"[('canAuthenticate(int)', 3)]"	"[('[com.android.cts.verifier.biometrics.BiometricStrongTests isOnPauseAllowed None]', 1), ('[android.server.biometrics.BiometricSimpleTests testInvalidInputs CtsBiometricsTestCases]', 1), ('[com.android.cts.verifier.biometrics.BiometricWeakTests setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.1  . These are in the Android source tree at"	"7.1.4.1"	"C-6-1"	"7.1.4.1/C-6-1"	"07010401.670601"	"""C-6-1] MUST also support the EGL_ANDROID_front_buffer_auto_refresh extension. <h5 id=""7142_vulkan"" """	""	""	"EGL_ANDROID_"	""	""	""	""	"[('android.opengl.cts.OpenGlEsVersionTest', 2)]"	""	"[('CtsOpenGLTestCases', 2)]"	""	"android.opengl.cts.OpenGlEsVersionTest"	""	"CtsOpenGLTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 2)]"	"[('(7,EGL_ANDROID_,/android/opengl/cts/OpenGlEsVersionTest.java)', 1)]"	"[('([2:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_ANDROID_]:[2]:method_text:[ns, requiredExtension));            }        }    }    @CddTest(requirement=""7.1.4.1/C-6-1"")   ])', 1), ('([5:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_ANDROID_]:[5]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/H-1-1"")   ])', 1)]"	""	""	"[('EGL_ANDROID_', 2)]"	"[('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensionsForVrHighPerformance CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensions CtsOpenGLTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.1.4.5"	"7.1.4.5"	"C-1-5"	"7.1.4.5/C-1-5"	"07010405.670105"	"""C-1-5] MUST advertise support for the EGL_KHR_no_config_context, EGL_EXT_pixel_format_float, EGL_KHR_gl_colorspace, EGL_EXT_gl_colorspace_scrgb, EGL_EXT_gl_colorspace_scrgb_linear, EGL_EXT_gl_colorspace_display_p3, EGL_EXT_gl_colorspace_display_p3_linear, and EGL_EXT_gl_colorspace_display_p3_passthrough extensions."""	""	""	"EGL_KHR_ EGL_EXT_"	""	""	""	""	"[('android.opengl.cts.OpenGlEsVersionTest', 6), ('android.view.cts.TextureViewCtsActivity', 2), ('android.view.cts.TextureViewTest', 1), ('android.graphics.cts.EGL14Test', 1), ('android.graphics.cts.ASurfaceTextureTest', 1), ('android.graphics.cts.ANativeWindowTest', 1), ('android.graphics.cts.EGL15Test', 1)]"	"[('eglGetError', 15), ('TimeoutException', 8), ('getWindow', 8), ('countDown', 6), ('onDestroy', 4), ('onEnterAnimationComplete', 4), ('waitForEnterAnimationComplete', 4), ('getDecorView', 4), ('getTextureView', 4), ('run', 4), ('waitForSurface', 4), ('initGl', 4), ('getSimpleName', 4), ('setup', 4), ('Object', 2), ('start', 2), ('getLooper', 2), ('setWideColorGamut', 2), ('getColorMode', 2), ('getWidth', 2), ('getHeight', 2), ('initGLExtensionUnsupported', 2), ('await', 2), ('teardown', 2)]"	"[('CtsOpenGLTestCases', 6), ('CtsGraphicsTestCases', 4), ('CtsViewTestCases', 3)]"	""	"android.opengl.cts.OpenGlEsVersionTest"	"teardown"	"CtsOpenGLTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TextureViewCtsActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TextureViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL14Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ASurfaceTextureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ANativeWindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL15Test.java', 1)]"	"[('(2,EGL_KHR_,/android/view/cts/TextureViewCtsActivity.java)', 1), ('(5,EGL_EXT_,/android/view/cts/TextureViewCtsActivity.java)', 1), ('(1,EGL_EXT_,/android/view/cts/TextureViewTest.java)', 1), ('(2,EGL_KHR_,/android/graphics/cts/EGL14Test.java)', 1), ('(2,EGL_KHR_,/android/graphics/cts/ASurfaceTextureTest.java)', 1), ('(2,EGL_KHR_,/android/graphics/cts/ANativeWindowTest.java)', 1), ('(2,EGL_KHR_,/android/graphics/cts/EGL15Test.java)', 1), ('(14,EGL_KHR_,/android/opengl/cts/OpenGlEsVersionTest.java)', 1), ('(11,EGL_EXT_,/android/opengl/cts/OpenGlEsVersionTest.java)', 1)]"	"[('([2:/android/view/cts/TextureViewCtsActivity.java]:[EGL_KHR_]:[2]:method_text:[FACE_TYPE, EGL10.EGL_WINDOW_BIT,                    EGL10.EGL_NONE            };        }    }}])', 1), ('([5:/android/view/cts/TextureViewCtsActivity.java]:[EGL_EXT_]:[5]:method_text:[FACE_TYPE, EGL10.EGL_WINDOW_BIT,                    EGL10.EGL_NONE            };        }    }}])', 1), ('([1:/android/view/cts/TextureViewTest.java]:[EGL_EXT_]:[1]:method_text:[NDED_SRGB), true,                true, new FP16Compare(ColorSpace.Named.EXTENDED_SRGB));    }   ])', 1), ('([2:/android/graphics/cts/EGL14Test.java]:[EGL_KHR_]:[2]:method_text:[Exception(""eglDestroyContext failed"");        }        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([2:/android/graphics/cts/ASurfaceTextureTest.java]:[EGL_KHR_]:[2]:method_text:[mEglPbuffer, mEglContext)) {      throw new RuntimeException(""eglMakeCurrent failed"");    }  } ])', 1), ('([2:/android/graphics/cts/ANativeWindowTest.java]:[EGL_KHR_]:[2]:method_text:[EglContext)) {            throw new RuntimeException(""eglMakeCurrent failed"");        }    }   ])', 1), ('([2:/android/graphics/cts/EGL15Test.java]:[EGL_KHR_]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_KHR_]:[3]:method_text:[ns, requiredExtension));            }        }    }    @CddTest(requirement=""7.1.4.1/C-6-1"")   ])', 1), ('([7:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_KHR_]:[7]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/H-1-1"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_KHR_]:[4]:method_text:[ager();        return pm.hasSystemFeature(PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE);    }}])', 1), ('([2:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_EXT_]:[2]:method_text:[ns, requiredExtension));            }        }    }    @CddTest(requirement=""7.1.4.1/C-6-1"")   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_EXT_]:[3]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/C-1-4"")   ])', 1), ('([6:/android/opengl/cts/OpenGlEsVersionTest.java]:[EGL_EXT_]:[6]:method_text:[ager();        return pm.hasSystemFeature(PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE);    }}])', 1)]"	""	""	"[('EGL_KHR_', 8), ('EGL_EXT_', 5)]"	"[('[android.view.cts.TextureViewCtsActivity glFinish CtsViewTestCases]', 2), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensionsForVrHighPerformance CtsOpenGLTestCases]', 2), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForWideColorDisplay CtsOpenGLTestCases]', 2), ('[android.view.cts.TextureViewTest testGetBitmap_FP16_ExtendedSRGB CtsViewTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForHdrCapableDisplay CtsOpenGLTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-16"	"9.9.3/C-1-16"	"09090300.670116"	"""C-1-16] MUST ensure that all non-deleted encrypted filenames on persistent storage in distinct directories were encrypted using distinct combinations of encryption key and initialization vector (IV)."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.2  .  These are in the Android source tree at"	"7.1.4.2"	"C-2-1"	"7.1.4.2/C-2-1"	"07010402.670201"	"""C-2-1] MUST NOT declare any of the Vulkan feature flags (e.g. android.hardware.vulkan.level, android.hardware.vulkan.version)."""	""	""	"android.hardware.vulkan.version android.hardware.vulkan.level"	""	""	""	""	"[('com.android.cts.releaseparser.FileParserTest', 1)]"	""	""	""	"com.android.cts.releaseparser.FileParserTest"	""	""	"[('/home/gpoor/cts-12-source/cts/tools/release-parser/tests/src/com/android/cts/releaseparser/FileParserTest.java', 1)]"	"[('(2,android.hardware.vulkan.version,/com/android/cts/releaseparser/FileParserTest.java)', 1)]"	"[('([2:/com/android/cts/releaseparser/FileParserTest.java]:[android.hardware.vulkan.version]:[2]:method_text:[    /**     * Test {@link VdexParser} with an Vdex file     *     * @throws Exception     */   ])', 1)]"	""	""	"[('android.hardware.vulkan.version', 1)]"	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-13"	"9.8/H-1-13"	"09080000.720113"	"""[9.8/H-1-13] MUST restart the process hosting the hotword detection service at least once every hour or every 30 hardware-trigger events, whichever comes first. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-6"	"5.1/H-1-6"	"05010000.720106"	"""[5.1/H-1-6] MUST support 6 instances of hardware video decoder and hardware video encoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p@30 fps resolution.  | [5.1/H-1-6] MUST support 6 instances of hardware video decoder and hardware video encoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p@30fps resolution. *Only 2 instances are required if VP9 codec is present. """	""	""	"HEVC VP9 AVC"	""	""	""	""	"[('android.media.cts.MediaCodecListTest', 10), ('android.media.cts.MediaCodecTest', 5), ('android.media.cts.MediaMuxerTest', 5), ('android.mediav2.cts.CodecDecoderSurfaceTest', 3), ('android.media.cts.VideoDecoderRotationTest', 3), ('android.mediav2.cts.AdaptivePlaybackTest', 3), ('android.media.cts.DecodeEditEncodeTest', 2), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 2), ('android.media.cts.CamcorderProfileTest', 2), ('android.media.cts.DecodeAccuracyTestBase', 2), ('android.media.mediaparser.cts.MediaParserTest', 2), ('android.media.cts.MediaCodecPlayerTest', 1), ('android.mediastress.cts.HEVCR1080pAacLongPlayerTest', 1), ('android.mediav2.cts.CodecUnitTest', 1), ('android.mediastress.cts.NativeMediaTest', 1), ('android.location.cts.gnss.asn1.supl2.rrlp_components.CNAVclockModel', 1), ('android.mediadrm.cts.MediaDrmCodecTest', 1), ('android.media.cts.EncodeVirtualDisplayWithCompositionTest', 1), ('android.autofillservice.cts.activities.OptionalSaveActivity', 1), ('android.media.metrics.cts.MediaMetricsAtomHostSideTests', 1), ('android.location.cts.gnss.asn1.supl2.rrlp_components.NavModel_NAVKeplerianSet', 1), ('android.mediav2.cts.CodecListTest', 1), ('android.location.cts.gnss.suplClient.SuplRrlpController', 1)]"	"[('getMediaType', 28), ('release', 14), ('elapsedRealtime', 14), ('decoderRelease', 10), ('getCodec', 8), ('BufferInfo', 8), ('getProfile', 6), ('reset', 6), ('input', 6), ('getSimpleName', 5), ('getSampleTime', 5), ('advance', 5), ('clear', 5), ('start', 5), ('stop', 5), ('getArguments', 4), ('setUp', 4), ('getBitrate', 4), ('getWidth', 4), ('getHeight', 4), ('startDecoder', 4), ('queueDecoderInputBuffer', 4), ('dequeueDecoderOutputBuffer', 4), ('extractorRelease', 4), ('OutputManager', 3), ('queueEOS', 3), ('waitForAllOutputs', 3), ('limit', 3), ('getSampleFlags', 3), ('hasSeenError', 2), ('getContext', 2), ('getExternalCacheDir', 2), ('super', 2), ('getTag', 2), ('getDefaultDurationSeconds', 2), ('getRecommendedFileFormat', 2), ('getVideoProfiles', 2), ('getFrameRate', 2), ('getAudioProfiles', 2), ('getSampleRate', 2), ('getChannels', 2), ('hasProfile', 2), ('getActivity', 2), ('getApplicationContext', 2), ('getResources', 2), ('tearDown', 2), ('bringActivityToFront', 2), ('getHelper', 2), ('MediaExtractor', 2), ('failToStart', 2), ('PlayerResult', 2), ('getMediaFormat', 2), ('getInputBuffers', 2), ('getOutputBuffers', 2), ('getAssetFileDescriptor', 2), ('getFileDescriptor', 2), ('getStartOffset', 2), ('getLength', 2), ('close', 2), ('main', 1), ('getMediaDirString', 1), ('CNAVclockModel', 1), ('createMediaFormat', 1), ('getCodecInfos', 1), ('NavModel_NAVKeplerianSet', 1), ('getSuplResponse', 1), ('GpsNavMessageProto', 1), ('getMessage', 1)]"	"[('CtsMediaTestCases', 31), ('CtsMediaV2TestCases', 8), ('CtsLocationGnssTestCases', 3), ('CtsMediaStressTestCases', 2), ('CtsMediaParserTestCases', 2), ('CtsMediaDrmTestCases', 1), ('CtsAutoFillServiceTestCases', 1)]"	""	"android.media.cts.MediaCodecListTest"	"getMessage"	"CtsMediaTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderSurfaceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoDecoderRotationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/AdaptivePlaybackTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeAccuracyTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/NativeMediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/CNAVclockModel.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmCodecTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeVirtualDisplayWithCompositionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/activities/OptionalSaveActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/app/MediaMetricsTest/src/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/NavModel_NAVKeplerianSet.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/suplClient/SuplRrlpController.java', 1)]"	"[('(4,AVC,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(3,AVC,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java)', 1), ('(1,AVC,/android/mediav2/cts/CodecUnitTest.java)', 1), ('(19,AVC,/android/media/cts/MediaCodecTest.java)', 1), ('(3,HEVC,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(3,VP9,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(1,AVC,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(120,AVC,/android/location/cts/gnss/asn1/supl2/rrlp_components/CNAVclockModel.java)', 1), ('(2,HEVC,/android/media/cts/CamcorderProfileTest.java)', 1), ('(1,AVC,/android/media/cts/CamcorderProfileTest.java)', 1), ('(6,VP9,/android/media/cts/DecodeAccuracyTestBase.java)', 1), ('(1,AVC,/android/media/cts/DecodeAccuracyTestBase.java)', 1), ('(1,AVC,/android/mediadrm/cts/MediaDrmCodecTest.java)', 1), ('(4,AVC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,HEVC,/android/media/cts/MediaMuxerTest.java)', 1), ('(2,VP9,/android/media/cts/MediaMuxerTest.java)', 1), ('(7,AVC,/android/media/cts/MediaMuxerTest.java)', 1), ('(3,HEVC,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(6,VP9,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(12,AVC,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(1,AVC,/android/media/cts/EncodeVirtualDisplayWithCompositionTest.java)', 1), ('(1,HEVC,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(1,VP9,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(1,AVC,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(7,AVC,/android/autofillservice/cts/activities/OptionalSaveActivity.java)', 1), ('(10,HEVC,/android/mediav2/cts/AdaptivePlaybackTest.java)', 1), ('(4,VP9,/android/mediav2/cts/AdaptivePlaybackTest.java)', 1), ('(10,AVC,/android/mediav2/cts/AdaptivePlaybackTest.java)', 1), ('(1,AVC,/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java)', 1), ('(210,AVC,/android/location/cts/gnss/asn1/supl2/rrlp_components/NavModel_NAVKeplerianSet.java)', 1), ('(2,AVC,/android/mediav2/cts/CodecListTest.java)', 1), ('(1,AVC,/android/location/cts/gnss/suplClient/SuplRrlpController.java)', 1), ('(7,HEVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(6,VP9,/android/media/cts/MediaCodecListTest.java)', 1), ('(10,AVC,/android/media/cts/MediaCodecListTest.java)', 1)]"	"[('([1:/android/media/cts/DecodeEditEncodeTest.java]:[AVC]:[1]:method_text:[gest color component delta seen (i.e. actual vs. expected)    private int mLargestColorDelta;   ])', 1), ('([3:/android/media/cts/DecodeEditEncodeTest.java]:[AVC]:[3]:method_text:[                  throw new RuntimeException(ioe);                }            }        }    }}])', 1), ('([3:/android/media/cts/MediaCodecPlayerTest.java]:[AVC]:[3]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([1:/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java]:[HEVC]:[1]:method_text:[bbb_full.ffmpeg.1920x1080.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[AVC]:[1]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[AVC]:[1]:method_text:[s are thrown from MediaCodec     * methods when called in incorrect operational states.     */   ])', 1), ('([2:/android/media/cts/MediaCodecTest.java]:[AVC]:[2]:method_text:[ createInputSurface() with a non-Surface color format is not required to throw exception     */   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[AVC]:[1]:method_text:[ts:     * <br> dequeueInputBuffer() fails when encoder configured with an input Surface     */   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[AVC]:[1]:method_text:[nt mMaxW;        public int mMaxH;        public int mFps;        public int mBitRate;    }   ])', 1), ('([14:/android/media/cts/MediaCodecTest.java]:[AVC]:[14]:method_text:[077efecc0b24d02L, 0xace33c1e52e2fb4bL);    /**     * Tests MediaCodec.CryptoException     */   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[HEVC]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[VP9]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([1:/android/mediastress/cts/NativeMediaTest.java]:[AVC]:[1]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([120:/android/location/cts/gnss/asn1/supl2/rrlp_components/CNAVclockModel.java]:[AVC]:[120]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([2:/android/media/cts/CamcorderProfileTest.java]:[HEVC]:[2]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([1:/android/media/cts/CamcorderProfileTest.java]:[AVC]:[1]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([6:/android/media/cts/DecodeAccuracyTestBase.java]:[VP9]:[6]:method_text:[blic static boolean isVideo(String mimeType) {        return mimeType.startsWith(""video"");    }}])', 1), ('([1:/android/media/cts/DecodeAccuracyTestBase.java]:[AVC]:[1]:method_text:[blic static boolean isVideo(String mimeType) {        return mimeType.startsWith(""video"");    }}])', 1), ('([1:/android/mediadrm/cts/MediaDrmCodecTest.java]:[AVC]:[1]:method_text:[ception     * <br> getInputBuffer() after the failed queueSecureInputBuffer() succeeds.     */   ])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[AVC]:[2]:method_text:[UNITS);        assertSupportFor(MediaParser.PARAMETER_TS_ENABLE_HDMV_DTS_AUDIO_STREAMS);    }   ])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[AVC]:[2]:method_text:[,                /* value= */ ""multi_pmt"",                /* valueIsIllegal= */ false);    }   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[HEVC]:[1]:method_text:[ well when video with B Frames are muxed using MPEG4Writer     * and a few frames drop.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[VP9]:[1]:method_text:[e frame     * drops as in b/63590381 and b/64949961 while B Frames encoding is enabled.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[VP9]:[1]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([6:/android/media/cts/MediaMuxerTest.java]:[AVC]:[6]:method_text:[e frame     * drops as in b/63590381 and b/64949961 while B Frames encoding is enabled.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[AVC]:[1]:method_text:[ well when video with B Frames are muxed using MPEG4Writer     * and a few frames drop.     */   ])', 1), (""([3:/android/mediav2/cts/CodecDecoderSurfaceTest.java]:[HEVC]:[3]:method_text:[face.     * In these scenarios, Timestamp and it's ordering is verified.     */    @LargeTest   ])"", 1), (""([6:/android/mediav2/cts/CodecDecoderSurfaceTest.java]:[VP9]:[6]:method_text:[face.     * In these scenarios, Timestamp and it's ordering is verified.     */    @LargeTest   ])"", 1), (""([12:/android/mediav2/cts/CodecDecoderSurfaceTest.java]:[AVC]:[12]:method_text:[face.     * In these scenarios, Timestamp and it's ordering is verified.     */    @LargeTest   ])"", 1), ('([1:/android/media/cts/EncodeVirtualDisplayWithCompositionTest.java]:[AVC]:[1]:method_text:[yWithCompositionTestImpl mImpl =            new EncodeVirtualDisplayWithCompositionTestImpl();   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[HEVC]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[VP9]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[AVC]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([7:/android/autofillservice/cts/activities/OptionalSaveActivity.java]:[AVC]:[7]:method_text:[                   : new OneTimeTextWatcher(""favColor"", mFavoriteColor, favColor);        }    }}])', 1), ('([10:/android/mediav2/cts/AdaptivePlaybackTest.java]:[HEVC]:[10]:method_text:[   buffer.clear();        buffer.position(offset);        return format;    }    @LargeTest   ])', 1), ('([4:/android/mediav2/cts/AdaptivePlaybackTest.java]:[VP9]:[4]:method_text:[   buffer.clear();        buffer.position(offset);        return format;    }    @LargeTest   ])', 1), ('([10:/android/mediav2/cts/AdaptivePlaybackTest.java]:[AVC]:[10]:method_text:[   buffer.clear();        buffer.position(offset);        return format;    }    @LargeTest   ])', 1), ('([1:/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java]:[AVC]:[1]:method_text:[                .build();        s.reportTrackChangeEvent(e);        resetProperties();    }   ])', 1), ('([210:/android/location/cts/gnss/asn1/supl2/rrlp_components/NavModel_NAVKeplerianSet.java]:[AVC]:[210]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([2:/android/mediav2/cts/CodecListTest.java]:[AVC]:[2]:method_text:[                       CodecTestBase.hasEncoder(MediaFormat.MIMETYPE_VIDEO_VP8));        }    }}])', 1), ('([1:/android/location/cts/gnss/suplClient/SuplRrlpController.java]:[AVC]:[1]:method_text:[Proto.cis = ephemeris.getEphemCis().getInteger().shortValue() * NAVIGATION_CIS_SCALE_FACTOR;  }}])', 1), ('([3:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[3]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[AVC]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[                  pp2 != pp && pp2.covers(pp));                }            }        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1)]"	""	""	"[('AVC', 31), ('HEVC', 10), ('VP9', 10)]"	"[('[android.media.cts.VideoDecoderRotationTest EncodeVirtualDisplayWithCompositionTestImpl CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 3), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 2), ('[android.media.cts.DecodeAccuracyTestBase isAbrEnabled CtsMediaTestCases]', 2), ('[android.media.cts.MediaMuxerTest testSimulateAudioBVideoFramesDropIssues CtsMediaTestCases]', 2), ('[android.media.cts.MediaMuxerTest testWebmOutput CtsMediaTestCases]', 2), ('[android.media.cts.DecodeEditEncodeTest testVideoEdit720p CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecPlayerTest MediaCodecPlayerTest CtsMediaTestCases]', 1), ('[android.mediav2.cts.CodecUnitTest TestApi CtsMediaV2TestCases]', 1), ('[android.media.cts.MediaCodecTest testException CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testAsyncStopAndReset CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testConcurrentAudioVideoEncodings CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testCryptoInfoPattern CtsMediaTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.CNAVclockModel isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.mediadrm.cts.MediaDrmCodecTest isEncoder CtsMediaDrmTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testSupportsParameter CtsMediaParserTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testSetKnownParameters CtsMediaParserTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[android.media.cts.EncodeVirtualDisplayWithCompositionTest EncodeVirtualDisplayWithCompositionTestImpl CtsMediaTestCases]', 1), ('[android.autofillservice.cts.activities.OptionalSaveActivity OnClickListener CtsAutoFillServiceTestCases]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests testTrackChangeEvent_audio None]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.NavModel_NAVKeplerianSet isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.mediav2.cts.CodecListTest testCddRequiredCodecsAvailability CtsMediaV2TestCases]', 1), ('[android.location.cts.gnss.suplClient.SuplRrlpController isMsSUPLRESPONSE CtsLocationGnssTestCases]', 1), ('[android.media.cts.MediaCodecListTest testVideoPerformancePointsSanity CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-12"	"9.8/H-1-12"	"09080000.720112"	"""[9.8/H-1-12] MUST support a debug mode that logs raw contents of every transmission from the hotword detection service to allow inspectability for security researchers. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-2"	"9.8/H-1-2"	"09080000.720102"	"""[9.8/H-1-2] MUST make sure the hotword detection service can only transmit mic audio data or data derived from it to the system server through HotwordDetectionService API, or to ContentCaptureService through ContentCaptureManager API. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-2-3"	"7.3.1/C-2-3"	"07030100.670203"	"""C-2-3] MUST perform the biometric matching in an isolated execution environment outside Android user or kernel space, such as the Trusted Execution Environment (TEE), or on a chip with a secure channel to the isolated execution environment."""	""	""	"TEE"	""	""	""	""	"[('android.mediav2.cts.CodecUnitTest', 82), ('android.hardware.camera2.cts.NativeCameraDeviceTest', 6), ('com.android.suspendapps.suspendtestapp.TestService', 1), ('android.widget.cts.SimpleCursorAdapterTest', 1), ('com.android.cts.deviceandprofileowner.ContentSuggestionsActivity', 1), ('android.media.cts.DecodeEditEncodeTest', 1)]"	"[('hasSeenError', 2), ('getSimpleName', 1), ('Object', 1), ('Stub', 1), ('Intent', 1), ('countDown', 1)]"	"[('CtsMediaV2TestCases', 82), ('CtsCameraTestCases', 6), ('CtsWidgetTestCases', 1), ('CtsMediaTestCases', 1)]"	""	"android.mediav2.cts.CodecUnitTest"	"hasSeenError"	"CtsMediaV2TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecUnitTest.java', 82), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraDeviceTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/test-apps/SuspendTestApp/src/com/android/suspendapps/suspendtestapp/TestService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SimpleCursorAdapterTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ContentSuggestionsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 1)]"	"[('(9,TEE,/com/android/suspendapps/suspendtestapp/TestService.java)', 1), ('(3,TEE,/android/widget/cts/SimpleCursorAdapterTest.java)', 1), ('(1,TEE,/com/android/cts/deviceandprofileowner/ContentSuggestionsActivity.java)', 1), ('(3,TEE,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(6,TEE,/android/hardware/camera2/cts/NativeCameraDeviceTest.java)', 1), ('(120,TEE,/android/mediav2/cts/CodecUnitTest.java)', 1)]"	"[('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[op();                mCodec.reset();            }            mCodec.release();        }       ])', 14), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[te"");                mCodec.reset();            }            mCodec.release();        }       ])', 13), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[ate"");                mCodec.stop();            }            mCodec.release();        }       ])', 6), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[uts();                mCodec.stop();            }            mCodec.release();        }       ])', 5), ('([2:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[2]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 4), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[     }                mCodec.stop();            }            mCodec.release();        }       ])', 3), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[3]:method_text:[  } finally {                if (mCodec != null) mCodec.release();            }        }       ])', 2), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[t buffer succeeds in stopped state"");            }            mCodec.release();        }       ])', 2), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[    waitForAllOutputs();            mCodec.stop();            mCodec.release();        }       ])', 2), ('([9:/com/android/suspendapps/suspendtestapp/TestService.java]:[TEE]:[9]:method_text:[{            sRegisteredReporters.clear();        }        return super.onUnbind(intent);    }}])', 1), ('([3:/android/widget/cts/SimpleCursorAdapterTest.java]:[TEE]:[3]:method_text:[  } catch (IllegalStateException e) {            // expected        }    }    @UiThreadTest   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ContentSuggestionsActivity.java]:[TEE]:[1]:method_text:[      + "" didn\'t finish in 2 seconds"");        }        finish();        return mEnabled;    }}])', 1), ('([3:/android/media/cts/DecodeEditEncodeTest.java]:[TEE]:[3]:method_text:[                  throw new RuntimeException(ioe);                }            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[TEE]:[1]:method_text:[          testCameraDeviceSessionOpenAndCloseNative(mPreviewSurface, mOverrideCameraId));    }   ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[TEE]:[1]:method_text:[                testCameraDeviceSimplePreviewNative(mPreviewSurface, mOverrideCameraId));    }   ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[TEE]:[1]:method_text:[ePreviewWithSessionParametersNative(mPreviewSurface,                mOverrideCameraId));    }   ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[TEE]:[1]:method_text:[ceSharedOutputUpdate(mPreviewSurface, outputSurface,                mOverrideCameraId));    }   ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[TEE]:[1]:method_text:[     testCameraDeviceLogicalPhysicalStreamingNative(mPreviewSurface, mOverrideCameraId));    }   ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[TEE]:[1]:method_text:[      testCameraDeviceLogicalPhysicalSettingsNative(mPreviewSurface, mOverrideCameraId));    }   ])', 1), ('([20:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[20]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[ull, null, null, MediaCodec.CONFIGURE_FLAG_ENCODE);            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[t(), null, null, MediaCodec.CONFIGURE_FLAG_ENCODE);            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[(format, false,                    ""codec configure succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[alidState(                    ""dequeue input buffer succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[lidState(                    ""dequeue output buffer succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[le.isInputQueueEmpty());            mCodec.stop();            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[e();            tryFlushInInvalidState(""codec flush succeeds in release state"");        }       ])', 1), ('([5:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[5]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[3]:method_text:[    waitForAllOutputs();            mCodec.stop();            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[     tryGetInputBufferInInvalidState(""getInputBuffer succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[art();                mCodec.stop();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[     tryGetInputFormatInInvalidState(""getInputFormat succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[   tryGetOutputBufferInInvalidState(""getOutputBuffer succeeds in release state"");        }       ])', 1), ('([2:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[2]:method_text:[art();                mCodec.stop();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[   tryGetOutputFormatInInvalidState(""getOutputFormat succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[ 1));                mCodec.reset();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[alidState(""codec start succeeds in stopped state"");            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[eeds in running state"");            mCodec.stop();            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[tate            tryStartInInvalidState(""codec start succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[top();                mCodec.stop();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[true);                mCodec.stop();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[EOS();                mCodec.stop();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[rue);                mCodec.reset();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[OS();                mCodec.reset();            }            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[       tryGetInputImageInInvalidState(""getInputImage succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[ tryQueueInputBufferInInvalidState(""queueInputBuffer succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[validState(                    ""releaseOutputBuffer succeeds in release state"");        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[1]:method_text:[ECONDS);        static {            System.loadLibrary(""ctsmediav2codec_jni"");        }       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[3]:method_text:[rNull());        }        private native boolean nativeTestCreateEncoderByTypeForNull();       ])', 1), ('([3:/android/mediav2/cts/CodecUnitTest.java]:[TEE]:[3]:method_text:[);        }        private native boolean nativeTestCreateEncoderByTypeForInvalidMime();       ])', 1)]"	""	""	"[('TEE', 92)]"	"[('[android.mediav2.cts.CodecUnitTest testCreateEncoderByTypeForNull CtsMediaV2TestCases]', 2), ('[android.mediav2.cts.CodecUnitTest testCreateEncoderByTypeForInvalidMime CtsMediaV2TestCases]', 2), ('[com.android.suspendapps.suspendtestapp.TestService isPackageSuspended None]', 1), ('[android.widget.cts.SimpleCursorAdapterTest testBindView CtsWidgetTestCases]', 1), ('[com.android.cts.deviceandprofileowner.ContentSuggestionsActivity isContentSuggestionsEnabled None]', 1), ('[android.media.cts.DecodeEditEncodeTest testVideoEdit720p CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceSessionOpenAndClose CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceSimplePreview CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDevicePreviewWithSessionParameters CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceSharedOutputUpdate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceLogicalPhysicalStreaming CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceLogicalPhysicalSettings CtsCameraTestCases]', 1), ('[android.mediav2.cts.CodecUnitTest TestApi CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureForNullFormat CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureForEmptyFormat CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureAfterStart CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureAfterQueueInputBuffer CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureInEOSState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureInFlushState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueInputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueInputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueInputBufferInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueInputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueOutputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueOutputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueOutputBufferInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testDequeueOutputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testFlushInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testFlushInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testFlushInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testFlushInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetMetaDataInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetMetaDataInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetMetaDataInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetMetaDataInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetCallBackInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetCallBackInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetCallBackInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetCallBackInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputBufferInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputFormatInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputFormatInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputFormatInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputFormatInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputBufferInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputFormatInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputFormatInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputFormatInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetOutputFormatInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetParametersInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetParametersInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetParametersInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testSetParametersInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStartInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStartInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStartInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStopInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStopInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStopInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testStopInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testResetInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testResetInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testResetInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testResetInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputImageInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputImageInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputImageInRunningStateVideo CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputImageInRunningStateAudio CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testGetInputImageInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferWithBadIndex CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferWithBadSize CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferWithBadBuffInfo CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferWithBadOffset CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testQueueInputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testReleaseOutputBufferInUnInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testReleaseOutputBufferInInitState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testReleaseOutputBufferInRunningState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testReleaseOutputBufferInReleaseState CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testReleaseIdempotent CtsMediaV2TestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.5.3  . Software"	"3.9.3"	"A-1-1"	"3.9.3/A-1-1"	"03090300.650101"	"""[3.9.3/A-1-1] MUST implement all of the User lifecycle properties INITIAL_USER_INFO, SWITCH_USER, CREATE_USER, REMOVE_USER. Automotive device implementations: """	""	""	"INITIAL_USER_INFO SWITCH_USER CREATE_USER REMOVE_USER"	""	""	""	""	"[('android.devicepolicy.cts.StartProfilesTest', 13), ('com.android.cts.deviceowner.CreateAndManageUserTest', 3), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 3), ('test.java.com.android.bedstead.nene.users.UserReferenceTest', 2), ('com.android.cts.verifier.managedprovisioning.DeviceOwnerPositiveTestActivity', 2), ('com.android.cts.comp.provisioning.UserRestrictionTest', 2), ('com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest', 2), ('com.android.cts.managedprofile.UserManagerTest', 1), ('android.multiuser.cts.UserManagerTest', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest', 1), ('android.server.wm.BackgroundActivityLaunchTest', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest', 1), ('android.appsecurity.cts.AppSecurityPreparer', 1), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 1), ('android.media.cts.MediaCasTest', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest', 1), ('com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester', 1), ('com.android.cts.devicepolicy.UserRestrictionsTest', 1), ('android.car.cts.CarHostJUnit4TestCase', 1), ('android.app.cts.ActivityManagerAppExitInfoTest', 1), ('com.android.cts.verifier.managedprovisioning.ManagedUserPositiveTestActivity', 1), ('com.android.cts.devicepolicy.DeviceOwnerTest', 1), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 1), ('android.media.cts.MediaCodecClearKeyPlayer', 1), ('com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest', 1)]"	"[('getDevice', 21), ('getName', 8), ('tearDown', 7), ('getIntent', 7), ('userHandle', 4), ('setUp', 4), ('getSession', 4), ('getInstrumentation', 3), ('getUiAutomation', 3), ('workProfile', 3), ('getAction', 3), ('getPackageName', 3), ('getTrackCount', 3), ('getAllowedRestrictions', 2), ('secondaryUser', 2), ('getWho', 2), ('nanoTime', 2), ('getReceiverComponentName', 2), ('myUserId', 2), ('getCurrentUserId', 2), ('restoreUsersState', 2), ('getPackage', 2), ('getDrmInitData', 2), ('getSystemId', 2), ('getApplicationContext', 1), ('startProfile_returnsTrue', 1), ('stop', 1), ('stopProfile_returnsTrue', 1), ('startProfile_startingFullUser_throwsException', 1), ('stopProfile_stoppingFullUser_throwsException', 1), ('myUserHandle', 1), ('getMaxNumberOfUsersSupported', 1), ('getLogcatDump', 1), ('getDeviceDescriptor', 1), ('getCurrentUser', 1), ('saveUserState', 1), ('getSimpleName', 1), ('length', 1), ('getResources', 1), ('Runnable', 1), ('run', 1), ('doSomeWork', 1), ('processAudioTrack', 1), ('cycleSurfaces', 1), ('stopAudioTrack', 1), ('getMediaFormatHeight', 1), ('getMediaFormatWidth', 1), ('prepareAudio', 1), ('prepareVideo', 1), ('getPrivateData', 1)]"	"[('CtsDevicePolicyTestCases', 13), ('CtsDevicePolicyManagerTestCases', 7), ('CtsMultiUserTestCases', 1), ('CtsActivityManagerBackgroundActivityTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsMediaTestCases', 1), ('CtsCarHostTestCases', 1), ('CtsAppExitTestCases', 1)]"	""	"com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest"	"getUiAutomation"	"CtsDevicePolicyManagerTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/StartProfilesTest.java', 13), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/CreateAndManageUserTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/users/UserReferenceTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/UserRestrictionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/UserManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/multiuser/src/android/multiuser/cts/UserManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/backgroundactivity/src/android/server/wm/BackgroundActivityLaunchTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppSecurityPreparer.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCasTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/common/src/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/CarHostJUnit4TestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/AppExitTest/src/android/app/cts/ActivityManagerAppExitInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ManagedUserPositiveTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/MediaCodecClearKeyPlayer.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 1)]"	"[('(1,CREATE_USER,/com/android/cts/managedprofile/UserManagerTest.java)', 1), ('(2,CREATE_USER,/android/multiuser/cts/UserManagerTest.java)', 1), ('(1,REMOVE_USER,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(13,CREATE_USER,/android/devicepolicy/cts/StartProfilesTest.java)', 1), ('(3,CREATE_USER,/android/server/wm/BackgroundActivityLaunchTest.java)', 1), ('(4,REMOVE_USER,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(1,REMOVE_USER,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(1,CREATE_USER,/android/appsecurity/cts/AppSecurityPreparer.java)', 1), ('(1,CREATE_USER,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(2,REMOVE_USER,/test/java/com/android/bedstead/nene/users/UserReferenceTest.java)', 1), ('(1,CREATE_USER,/android/media/cts/MediaCasTest.java)', 1), ('(1,REMOVE_USER,/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java)', 1), ('(2,CREATE_USER,/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java)', 1), ('(9,REMOVE_USER,/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java)', 1), ('(1,REMOVE_USER,/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java)', 1), ('(2,REMOVE_USER,/com/android/cts/comp/provisioning/UserRestrictionTest.java)', 1), ('(1,REMOVE_USER,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(2,CREATE_USER,/android/car/cts/CarHostJUnit4TestCase.java)', 1), ('(1,CREATE_USER,/android/app/cts/ActivityManagerAppExitInfoTest.java)', 1), ('(7,REMOVE_USER,/com/android/cts/verifier/managedprovisioning/ManagedUserPositiveTestActivity.java)', 1), ('(1,REMOVE_USER,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(8,REMOVE_USER,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(1,REMOVE_USER,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(3,SWITCH_USER,/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java)', 1), ('(3,REMOVE_USER,/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java)', 1), ('(1,CREATE_USER,/android/media/cts/MediaCodecClearKeyPlayer.java)', 1), ('(2,REMOVE_USER,/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java)', 1)]"	"[('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[assertThat(sUserManager.isUserRunning(sDeviceState.workProfile().userHandle())).isTrue();    }   ])', 2), ('([1:/com/android/cts/managedprofile/UserManagerTest.java]:[CREATE_USER]:[1]:method_text:[be run as the managed profile     *  by com.android.cts.devicepolicy.ManagedProfileTest     */   ])', 1), ('([2:/android/multiuser/cts/UserManagerTest.java]:[CREATE_USER]:[2]:method_text:[e();            mInstrumentation.getUiAutomation().dropShellPermissionIdentity();        }    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java]:[REMOVE_USER]:[1]:method_text:[e that {@link UserManager} understands that it is applied but not as a base restriction.     */   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[eturn (intent) -> user.userHandle().equals(intent.getParcelableExtra(Intent.EXTRA_USER));    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[ertThat(sActivityManager.startProfile(sDeviceState.workProfile().userHandle())).isTrue();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[sertThat(sActivityManager.stopProfile(sDeviceState.workProfile().userHandle())).isTrue();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[          sUserManager.isUserRunning(sDeviceState.workProfile().userHandle())).isFalse();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[           sUserManager.isUserRunning(sDeviceState.workProfile().userHandle())).isTrue();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[           () -> sActivityManager.startProfile(sDeviceState.workProfile().userHandle()));    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[            () -> sActivityManager.stopProfile(sDeviceState.workProfile().userHandle()));    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[         () -> sActivityManager.startProfile(sDeviceState.secondaryUser().userHandle()));    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[          () -> sActivityManager.stopProfile(sDeviceState.secondaryUser().userHandle()));    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[  assertThat(sUserManager.isUserRunning(sDeviceState.tvProfile().userHandle())).isTrue();    }   ])', 1), ('([1:/android/devicepolicy/cts/StartProfilesTest.java]:[CREATE_USER]:[1]:method_text:[     assertThat(sUserManager.isUserRunning(sDeviceState.tvProfile().userHandle())).isFalse();    }])', 1), ('([3:/android/server/wm/BackgroundActivityLaunchTest.java]:[CREATE_USER]:[3]:method_text:[er(int userId) {        executeShellCommand(String.format(""pm remove-user %d"", userId));    }   ])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[REMOVE_USER]:[1]:method_text:[earUserRestriction(getWho(), UserManager.DISALLOW_REMOVE_USER);        super.tearDown();    }   ])', 1), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[REMOVE_USER]:[2]:method_text:[omponentName),                UserManager.USER_OPERATION_SUCCESS, ""cannot logout user"");    }   ])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[REMOVE_USER]:[1]:method_text:[ertWithMessage(""user on broadcasts"").that(usersOnBroadcasts).containsExactly(userHandle);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[REMOVE_USER]:[1]:method_text:[abledRestrictions();    /**     * Test restrictions that should be enabled by default     */   ])', 1), ('([1:/android/appsecurity/cts/AppSecurityPreparer.java]:[CREATE_USER]:[1]:method_text:[erride    public void setTestLogger(ITestLogger testLogger) {        mLogger = testLogger;    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[CREATE_USER]:[1]:method_text:[ISALLOW_CONFIG_DATE_TIME,                    UserManager.DISALLOW_AIRPLANE_MODE            );   ])', 1), ('([1:/test/java/com/android/bedstead/nene/users/UserReferenceTest.java]:[REMOVE_USER]:[1]:method_text:[       assertThrows(NeneException.class, () -> sTestApis.users().find(USER_ID).remove());    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/users/UserReferenceTest.java]:[REMOVE_USER]:[1]:method_text:[        user.remove();        assertThat(sTestApis.users().all()).doesNotContain(user);    }   ])', 1), ('([1:/android/media/cts/MediaCasTest.java]:[CREATE_USER]:[1]:method_text:[th the enumeration results, and all enumerated CA system ids can     * be instantiated.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java]:[REMOVE_USER]:[1]:method_text:[etting all DO restrictions. Global restrictions should be     * visible on other users.     */   ])', 1), ('([2:/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java]:[CREATE_USER]:[2]:method_text:[vicePolicyManager.class);        return dpm != null && dpm.canUsbDataSignalingBeDisabled();    }}])', 1), ('([9:/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java]:[REMOVE_USER]:[9]:method_text:[vicePolicyManager.class);        return dpm != null && dpm.canUsbDataSignalingBeDisabled();    }}])', 1), ('([1:/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java]:[REMOVE_USER]:[1]:method_text:[ssionsNoReturn(dpm,                (obj) -> obj.setNextOperationSafety(operation, reason));    }}])', 1), ('([1:/com/android/cts/comp/provisioning/UserRestrictionTest.java]:[REMOVE_USER]:[1]:method_text:[veUserRestriction() {        setUserRestriction(UserManager.DISALLOW_REMOVE_USER, true);    }   ])', 1), ('([1:/com/android/cts/comp/provisioning/UserRestrictionTest.java]:[REMOVE_USER]:[1]:method_text:[ction);        } else {            dpm.clearUserRestriction(admin, restriction);        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[REMOVE_USER]:[1]:method_text:[          throws DeviceNotAvailableException {        runTests(className, null, userId);    }   ])', 1), ('([2:/android/car/cts/CarHostJUnit4TestCase.java]:[CREATE_USER]:[2]:method_text:[flags + "", name="" + name                    + "", otherState="" + otherState + ""]"";        }    }}])', 1), ('([1:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[CREATE_USER]:[1]:method_text:[info.getProcessStateSummary(), cookie,                cookie == null ? 0 : cookie.length));    }}])', 1), ('([7:/com/android/cts/verifier/managedprovisioning/ManagedUserPositiveTestActivity.java]:[REMOVE_USER]:[7]:method_text:[support.        return !getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[REMOVE_USER]:[1]:method_text:[. The user should be removed     * automatically even when DISALLOW_REMOVE_USER is set.     */   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[REMOVE_USER]:[2]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[REMOVE_USER]:[3]:method_text:[_USER, false, mUserId);            assertTrue(getDevice().removeUser(userId));        }    }   ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[REMOVE_USER]:[3]:method_text:[trings(DISALLOW_AUTOFILL, NOT_CALLED_FROM_PARENT)                    .build()        );    }   ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[REMOVE_USER]:[1]:method_text:[tStrings(DISALLOW_CONFIG_LOCATION, CALLED_FROM_PARENT)                        .build());    }   ])', 1), ('([3:/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java]:[SWITCH_USER]:[3]:method_text:[    };    /**     * Tests that all safety-aware operations are properly implemented.     */   ])', 1), ('([3:/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java]:[REMOVE_USER]:[3]:method_text:[    };    /**     * Tests that all safety-aware operations are properly implemented.     */   ])', 1), ('([1:/android/media/cts/MediaCodecClearKeyPlayer.java]:[CREATE_USER]:[1]:method_text:[= trackPositionUs;            }        }        return (int)((positionUs + 500) / 1000);    }}])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[REMOVE_USER]:[2]:method_text:[              ""testOtherProfilesEqualsBindTargetUsers"",                otherProfileUserId);    }}])', 1)]"	""	""	"[('CREATE_USER', 23), ('REMOVE_USER', 21), ('SWITCH_USER', 1)]"	"[('[android.devicepolicy.cts.StartProfilesTest isTrue CtsDevicePolicyTestCases]', 2), ('[com.android.cts.verifier.managedprovisioning.DeviceOwnerPositiveTestActivity finish None]', 2), ('[com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest DevicePolicySafetyCheckerIntegrationTester None]', 2), ('[com.android.cts.managedprofile.UserManagerTest testCreateProfile_managedProfile None]', 1), ('[android.multiuser.cts.UserManagerTest testCloneUser CtsMultiUserTestCases]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[android.devicepolicy.cts.StartProfilesTest TestApis CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest startProfile_broadcastIsReceived_profileIsStarted CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest stopProfile_profileIsStopped CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest startUser_immediatelyAfterStopped_profileIsStarted CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest startUser_userIsStopping_profileIsStarted CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest startProfile_withoutPermission_throwsException CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest stopProfile_withoutPermission_throwsException CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest startProfile_tvProfile_profileIsStarted CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.StartProfilesTest stopProfile_tvProfile_profileIsStopped CtsDevicePolicyTestCases]', 1), ('[android.server.wm.BackgroundActivityLaunchTest testPendingIntentBroadcast_appBIsBackground CtsActivityManagerBackgroundActivityTestCases]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_StopEphemeralUser_DisallowRemoveUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_RemoveRestrictionSet None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest assertClearDefaultRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerProfileUserRestriction_onParent None]', 1), ('[test.java.com.android.bedstead.nene.users.UserReferenceTest remove_userDoesNotExist_throwsException None]', 1), ('[test.java.com.android.bedstead.nene.users.UserReferenceTest remove_userExists_removesUser None]', 1), ('[android.media.cts.MediaCasTest adoptShellPermissionIdentity CtsMediaTestCases]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester testOnOperationSafetyStateChanged None]', 1), ('[com.android.cts.comp.provisioning.UserRestrictionTest testAddDisallowRemoveUserRestriction None]', 1), ('[com.android.cts.comp.provisioning.UserRestrictionTest testClearDisallowRemoveUserRestriction None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest isHeadlessSystemUserMode CtsDevicePolicyManagerTestCases]', 1), ('[android.car.cts.CarHostJUnit4TestCase isEmpty CtsCarHostTestCases]', 1), ('[android.app.cts.ActivityManagerAppExitInfoTest testSecondaryUser CtsAppExitTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.ManagedUserPositiveTestActivity isAffiliatedUser None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StopUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testCannotRemoveUserIfRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetUserRestrictionLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testUserRestrictionSetOnParentLogged CtsDevicePolicyManagerTestCases]', 1), ('[android.media.cts.MediaCodecClearKeyPlayer adoptShellPermissionIdentity None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testRequestBugreportAvailableIfAffiliated CtsDevicePolicyManagerTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.2.4  . Wi"	"7.4.2.4"	"C-1-4"	"7.4.2.4/C-1-4"	"07040204.670104"	"""C-1-4] MUST declare android.hardware.wifi.passpoint feature flag."""	""	""	"android.hardware.wifi.passpoint"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.8.1  . Music Recognition"	"9.8.1"	"C-2-1"	"9.8.1/C-2-1"	"09080100.670201"	"""C-2-1] MUST NOT store any raw audio or audio fingerprints on disk at all, or in memory for longer than 14 days."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Device Integrity"	"9.1"	"C-1-10"	"9.1/C-1-10"	"09010000.670110"	"""C-1-10] MUST implement rollback protection for partitions used by Android (e.g. boot, system partitions) and use tamper-evident storage for storing the metadata used for determining the minimum allowable OS version."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.9.1.2"	"3.9.1.2"	"C-1-2"	"3.9.1.2/C-1-2"	"03090102.670102"	"""C-1-2] The managed profile provisioning process (the flow initiated by the DPC using the android.app.action.PROVISION_MANAGED_PROFILE) or by the platform), consent screen and user experience MUST align with the AOSP implementation."""	""	""	"DPC android.app.action.PROVISION PROVISION_MANAGED_PROFILE"	""	""	""	""	"[('library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest', 61), ('com.android.cts.deviceandprofileowner.SuspendPackageTest', 2), ('android.devicepolicy.cts.PreferentialNetworkServiceTest', 2), ('com.android.cts.comp.provisioning.ManagedProfileProvisioningTest', 2), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerHostSideTransferTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('com.android.cts.verifier.managedprovisioning.Utils', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('processor.main.java.com.android.bedstead.remotedpc.processor.Processor', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('com.android.cts.deviceowner.PreDeviceOwnerTest', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi30', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1)]"	"[('users', 36), ('devicePolicy', 34), ('createUser', 18), ('createAndStart', 18), ('userHandle', 16), ('remove', 13), ('getDeviceOwner', 12), ('getDevice', 9), ('devicePolicyController', 8), ('any', 5), ('tearDown', 4), ('setUp', 3), ('show', 3), ('deviceOwner', 3), ('profileOwner', 3), ('devicePolicyManager', 3), ('getPackageManager', 2), ('getBuild', 2), ('BigTextStyle', 1), ('TvExtender', 1), ('build', 1), ('getSupportedSourceVersion', 1), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1), ('getName', 1), ('DeviceState', 1), ('deviceOwner_noDeviceOwner_returnsNull', 1), ('deviceOwner_nonRemoteDpcDeviceOwner_returnsNull', 1), ('deviceOwner_remoteDpcDeviceOwner_returnsInstance', 1), ('profileOwner_noProfileOwner_returnsNull', 1), ('profileOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userHandle_null_throwsException', 1), ('profileOwner_userHandle_noProfileOwner_returnsNull', 1), ('profileOwner_userHandle_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userHandle_remoteDpcProfileOwner_returnsInstance', 1), ('profileOwner_userReference_null_throwsException', 1), ('profileOwner_userReference_noProfileOwner_returnsNull', 1), ('profileOwner_userReference_nonRemoteDpcProfileOwner_returnsNull', 1), ('profileOwner_userReference_remoteDpcProfileOwner_returnsInstance', 1), ('any_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userHandle_null_throwsException', 1), ('any_userHandle_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userHandle_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userHandle_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userHandle_remoteDpcProfileOwner_returnsProfileOwner', 1), ('any_userReference_null_throwsException', 1), ('any_userReference_noDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_noDeviceOwner_nonRemoteDpcProfileOwner_returnsNull', 1), ('any_userReference_nonRemoteDpcDeviceOwner_noProfileOwner_returnsNull', 1), ('any_userReference_remoteDpcDeviceOwner_returnsDeviceOwner', 1), ('any_userReference_remoteDpcProfileOwner_returnsProfileOwner', 1), ('setAsDeviceOwner_userHandle_null_throwsException', 1), ('setAsDeviceOwner_userHandle_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userHandle_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userHandle_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsDeviceOwner_userReference_null_throwsException', 1), ('setAsDeviceOwner_userReference_alreadySet_doesNothing', 1), ('setAsDeviceOwner_userReference_alreadyHasDeviceOwner_replacesDeviceOwner', 1), ('setAsDeviceOwner_userReference_doesNotHaveDeviceOwner_setsDeviceOwner', 1), ('setAsProfileOwner_userHandle_null_throwsException', 1), ('setAsProfileOwner_userHandle_alreadySet_doesNothing', 1), ('setAsProfileOwner_userHandle_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userHandle_doesNotHaveProfileOwner_setsProfileOwner', 1), ('setAsProfileOwner_userReference_null_throwsException', 1), ('setAsProfileOwner_userReference_alreadySet_doesNothing', 1), ('setAsProfileOwner_userReference_alreadyHasProfileOwner_replacesProfileOwner', 1), ('setAsProfileOwner_userReference_doesNotHaveProfileOwner_setsProfileOwner', 1), ('devicePolicyController_returnsDevicePolicyController', 1), ('remove_deviceOwner_removes', 1), ('remove_profileOwner_removes', 1), ('frameworkCall_makesCall', 1), ('getCurrentFailedPasswordAttempts', 1), ('frameworkCall_onProfile_makesCall', 1), ('frameworkCallRequiresProfileOwner_notProfileOwner_throwsSecurityException', 1), ('forDevicePolicyController_nullDevicePolicyController_throwsException', 1), ('forDevicePolicyController_nonRemoteDpcDevicePolicyController_throwsException', 1), ('forDevicePolicyController_remoteDpcDevicePolicyController_returnsRemoteDpc', 1)]"	"[('CtsDevicePolicyManagerTestCases', 4), ('CtsDevicePolicyTestCases', 2), ('CtsMediaParserTestCases', 1), ('CtsTvTestCases', 1)]"	""	"library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest"	"devicePolicyController"	""	"[('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java', 61), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1)]"	"[('(2,DPC,/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java)', 1), ('(4,DPC,/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java)', 1), ('(2,DPC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/verifier/managedprovisioning/Utils.java)', 1), ('(4,DPC,/com/android/cts/deviceandprofileowner/SuspendPackageTest.java)', 1), ('(4,DPC,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(2,DPC,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(19,DPC,/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java)', 1), ('(2,DPC,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(2,DPC,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/deviceowner/PreDeviceOwnerTest.java)', 1), ('(1,DPC,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(4,DPC,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(27,DPC,/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java)', 1), ('(1,DPC,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(2,PROVISION_MANAGED_PROFILE,/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java)', 1), ('(179,DPC,/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java)', 1)]"	"[('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[);        } finally {            remoteDPC.devicePolicyController().remove();        }    }   ])', 4), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 2), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[        } finally {            deviceOwner.devicePolicyController().remove();        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[    } finally {            sTestApis.devicePolicy().getDeviceOwner().remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ if (deviceOwner != null) {                deviceOwner.remove();            }        }    }   ])', 2), ('([2:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[2]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([6:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[6]:method_text:[PC.devicePolicyController());        } finally {            profile.remove();        }    }   ])', 2), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 2), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);    }}])', 1), ('([4:/com/android/cts/devicepolicy/MixedProfileOwnerHostSideTransferTest.java]:[DPC]:[4]:method_text:[NCOMING_TEST);            installAppAsUser(TRANSFER_OWNER_INCOMING_APK, mUserId);        }    }}])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {        testAssetExtraction(""wav/sample_ima_adpcm.wav"");    }   ])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/Utils.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ckageManager().hasSystemFeature(                PackageManager.FEATURE_SECURE_LOCK_SCREEN);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[1]:method_text:[RECEIVER_PKG);    }    /**     * Verify that we cannot suspend launcher and dpc app.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[3]:method_text:[);        assertWithMessage(""package %s suspension"", pkg).that(actual).isEqualTo(expected);    }}])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[provider that provides enterprise slice cannot     * see the enterprise slice requests.     */   ])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[DPC]:[2]:method_text:[()), offerCallback);        offerCallback.assertNoCallback();        return offerCallback;    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases. * */public class ResetPasswordTest extends BaseDeviceAdminTest {   ])', 1), ('([19:/processor/main/java/com/android/bedstead/remotedpc/processor/Processor.java]:[DPC]:[19]:method_text:[getMessager()                .printMessage(Diagnostic.Kind.ERROR, errorText, errorElement);    }}])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[e(ComponentName, String)} */public class CertInstallDelegateTest extends BaseJUnit3TestCase {   ])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[DPC]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[           .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[DPC]:[1]:method_text:[nSupported() {        return Build.VERSION.DEVICE_INITIAL_SDK_INT >= Build.VERSION_CODES.O;    }}])', 1), ('([4:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[DPC]:[4]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 1), ('([27:/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java]:[DPC]:[27]:method_text:[min void addPersistentPreferredActivity(            IntentFilter filter, ComponentName activity);}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java]:[DPC]:[1]:method_text:[ws Exception {        runDeviceTestsAsUser(DEVICE_ADMIN_PKG, className, testName, mUserId);    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[DPC]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[tends AndroidTestCase {    private static final String TAG = ""ManagedProfileProvisioningTest"";   ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ntent) {        return intent != null && intent.getExtras().containsKey(Intent.EXTRA_USER);    }}])', 1), ('([7:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[7]:method_text:[s    public static void teardownClass() {        sNonRemoteDpcTestApp.uninstall(sUser);    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Owner_noDeviceOwner_returnsNull() {        assertThat(RemoteDpc.deviceOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.deviceOwner()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.profileOwner()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[rofileOwner()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.profileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[file.userHandle())).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[e.userHandle())).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[nterException.class,                () -> RemoteDpc.profileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[fileOwner(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[eOwner(profile)).isNotNull();        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[oDeviceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any()).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[moteDpc.any()).isNull();        } finally {            profileOwner.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[emoteDpc.any()).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[        assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[fileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser.userHandle())).isNull();    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[.userHandle())).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[())).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[     assertThrows(NullPointerException.class, () -> RemoteDpc.any((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ceOwner_noProfileOwner_returnsNull() {        assertThat(RemoteDpc.any(sUser)).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[teDpc.any(profile)).isNull();        } finally {            profile.remove();        }    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Dpc.any(sUser)).isNull();        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[le)).isEqualTo(profileOwner);        } finally {            profile.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[terException.class,                () -> RemoteDpc.setAsDeviceOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ption.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[Exception.class,                () -> RemoteDpc.setAsDeviceOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[on.class,                () -> RemoteDpc.setAsDeviceOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[erException.class,                () -> RemoteDpc.setAsProfileOwner((UserHandle) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[tion.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_HANDLE));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[xception.class,                () -> RemoteDpc.setAsProfileOwner((UserReference) null));    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[n.class,                () -> RemoteDpc.setAsProfileOwner(NON_EXISTING_USER_REFERENCE));    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[Policy().getDeviceOwner());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[oteDPC.remove();        assertThat(sTestApis.devicePolicy().getDeviceOwner()).isNull();    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[eed to support the case where there is both a DO and a PO on    //  older versions of Android?   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[ntFailedPasswordAttempts();        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([4:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[4]:method_text:[ succeeds            remoteDPC.devicePolicyManager().isUsingUnifiedPassword();        }    }   ])', 1), ('([5:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[5]:method_text:[.isUsingUnifiedPassword());        } finally {            remoteDPC.remove();        }    }   ])', 1), ('([1:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[1]:method_text:[ssertThrows(NullPointerException.class, () -> RemoteDpc.forDevicePolicyController(null));    }   ])', 1), ('([3:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[3]:method_text:[Controller(deviceOwner));        } finally {            deviceOwner.remove();        }    }   ])', 1), ('([8:/library/test/java/com/android/bedstead/remotedpc/RemoteDpcTest.java]:[DPC]:[8]:method_text:[                 .isNotNull();        } finally {            remoteDPC.remove();        }    }])', 1)]"	""	""	"[('DPC', 77), ('PROVISION_MANAGED_PROFILE', 4)]"	"[('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNull None]', 19), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isNotNull None]', 15), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest isUsingUnifiedPassword None]', 2), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testWavWithImaAdpcm CtsMediaParserTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSetPackagesNotSuspended None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSuspendNotSuspendablePackages None]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_enableService_issueRequest CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest setPreferentialNetworkServiceEnabled_disableService_noIssueRequest CtsDevicePolicyTestCases]', 1), ('[processor.main.java.com.android.bedstead.remotedpc.processor.Processor latest None]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceowner.PreDeviceOwnerTest testIsProvisioningNotAllowedForManagedProfileAction None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testRevokeKeyPairFromApp_keyNotUsable None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtsc3FrontendSettings CtsTvTestCases]', 1), ('[communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager isUsingUnifiedPassword None]', 1), ('[com.android.cts.comp.provisioning.ManagedProfileProvisioningTest testProvisioningCorpOwnedManagedProfile None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest TestApis None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsDeviceOwner_userReference_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userHandle_nonExistingUser_throwsException None]', 1), ('[library.test.java.com.android.bedstead.remotedpc.RemoteDpcTest setAsProfileOwner_userReference_nonExistingUser_throwsException None]', 1)]"	""	""	""	""	""	""	""	""	""
"7.3.1  . Biometric Sensors"	"7.3.1"	"C-6-1"	"7.3.1/C-6-1"	"07030100.670601"	"""C-6-1] MUST meet the requirements for Class 3 as defined in this section below."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.1  . Contacts"	"3.1"	"C-1-2"	"3.1/C-1-2"	"03010000.670102"	"""C-1-2] MUST generate accessibility events and deliver the appropriate AccessibilityEvent to all registered AccessibilityService implementations as documented in the SDK. | C-1-2] MUST support all TIF APIs such that an application which uses these APIs and the third-party TIF-based inputs service can be installed and used on the device. <h3 id=""313_quick_settings""  | C-1-2] MUST NOT automatically add a tile from a third-party app directly to the Quick Settings. | C-1-2] MUST clearly display icons obtained via getIconBitmap() or getIconUri() and titles obtained via getTitle() as described in MediaDescription. May shorten titles to comply with safety regulations (e.g. driver distraction). | C-1-2] MUST ensure the APIs in the android.companion package is fully implemented. | C-1-2] MUST provide a UI affordance to chose the app that won&#39;t participate in the normal state save/restore mechanism once the user launches a second app declared with cantSaveState attribute. | C-1-2] The ACCOUNT_TYPE, of the custom local account MUST be returned by ContactsContract.RawContacts.getLocalAccountType"""	""	""	"getTitle() getIconBitmap() getIconUri() ContactsContract.RawContacts.getLocalAccountType TIF ACCOUNT_TYPE android.companion"	""	""	""	""	"[('android.media.cts.AudioManagerTest', 25), ('android.media.cts.AudioPlaybackConfigurationTest', 2), ('android.database.cts.AbstractCursor_SelfContentObserverTest', 2), ('android.database.cts.ContentObserverTest', 2), ('android.widget.cts.RelativeLayout_LayoutParamsTest', 2), ('android.os.cts.ProcessTest', 2), ('com.android.suspendapps.suspendtestapp.TestService', 1), ('android.renderscriptlegacy.cts.ScriptC_set_target_api_13', 1), ('com.android.cts.verifier.bluetooth.BleEncryptedServerService', 1), ('android.telephony.ims.cts.TestImsConfig', 1), ('android.server.wm.KeyguardLockedTests', 1), ('android.jobscheduler.cts.shareduidtests.ClipDataJobTest', 1), ('com.android.cts.verifier.deskclock.DeskClockTestsActivity', 1), ('android.webkit.cts.WebViewRenderProcessClientTest', 1), ('android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.Ver2_Notification_extension', 1)]"	"[('setUp', 8), ('getContext', 8), ('tearDown', 6), ('getPackageName', 6), ('getInstrumentation', 4), ('getResources', 4), ('getApplicationContext', 3), ('release', 2), ('getTargetContext', 2), ('getSystem', 2), ('Object', 2), ('onCreate', 2), ('getName', 2), ('notify', 2), ('getMediaDirString', 1), ('stop', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getPackageManager', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('getSimpleName', 1), ('Stub', 1), ('BleEncryptedServerService', 1), ('Handler', 1), ('getAdapter', 1), ('hashCode', 1), ('getContentResolver', 1), ('close', 1), ('ServiceConnection', 1), ('wait', 1), ('Ver2_Notification_extension', 1), ('super', 1), ('getTag', 1)]"	"[('CtsMediaTestCases', 27), ('CtsDatabaseTestCases', 4), ('CtsWidgetTestCases', 2), ('CtsRenderscriptLegacyTestCases', 1), ('CtsTelephonyTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsJobSchedulerSharedUidTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsLocationGnssTestCases', 1)]"	""	"android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.Ver2_Notification_extension"	"getTag"	"CtsLocationGnssTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 25), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/AbstractCursor_SelfContentObserverTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/ContentObserverTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RelativeLayout_LayoutParamsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/ProcessTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/test-apps/SuspendTestApp/src/com/android/suspendapps/suspendtestapp/TestService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscriptlegacy/src/android/renderscriptlegacy/cts/ScriptC_set_target_api_13.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleEncryptedServerService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestImsConfig.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobSchedulerSharedUid/src/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/deskclock/DeskClockTestsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewRenderProcessClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/Ver2_Notification_extension.java', 1)]"	"[('(2,TIF,/android/media/cts/AudioPlaybackConfigurationTest.java)', 1), ('(6,TIF,/android/database/cts/AbstractCursor_SelfContentObserverTest.java)', 1), ('(165,TIF,/android/media/cts/AudioManagerTest.java)', 1), ('(1,TIF,/com/android/suspendapps/suspendtestapp/TestService.java)', 1), ('(1,TIF,/android/renderscriptlegacy/cts/ScriptC_set_target_api_13.java)', 1), ('(4,TIF,/android/database/cts/ContentObserverTest.java)', 1), ('(2,TIF,/android/widget/cts/RelativeLayout_LayoutParamsTest.java)', 1), ('(31,TIF,/com/android/cts/verifier/bluetooth/BleEncryptedServerService.java)', 1), ('(3,TIF,/android/telephony/ims/cts/TestImsConfig.java)', 1), ('(1,TIF,/android/server/wm/KeyguardLockedTests.java)', 1), ('(1,TIF,/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java)', 1), ('(1,getTitle(),/com/android/cts/verifier/deskclock/DeskClockTestsActivity.java)', 1), ('(1,TIF,/android/webkit/cts/WebViewRenderProcessClientTest.java)', 1), ('(3,TIF,/android/os/cts/ProcessTest.java)', 1), ('(22,TIF,/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/Ver2_Notification_extension.java)', 1)]"	"[('([6:/android/media/cts/AudioManagerTest.java]:[TIF]:[6]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 5), ('([3:/android/media/cts/AudioManagerTest.java]:[TIF]:[3]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 4), ('([7:/android/media/cts/AudioManagerTest.java]:[TIF]:[7]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 2), ('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[TIF]:[1]:method_text:[   // create an AudioPlaybackConfiguration directly, we first need to play something to get one.   ])', 1), ('([1:/android/media/cts/AudioPlaybackConfigurationTest.java]:[TIF]:[1]:method_text:[using SoundPool"",                nbActivePlayersBeforeStart, nbActivePlayersAfterPause);    }   ])', 1), ('([2:/android/database/cts/AbstractCursor_SelfContentObserverTest.java]:[TIF]:[2]:method_text:[ = mac.getMockSelfContentObserver();        assertFalse(msc.deliverSelfNotifications());    }   ])', 1), ('([4:/android/database/cts/AbstractCursor_SelfContentObserverTest.java]:[TIF]:[4]:method_text:[ificationsValue(boolean isTrue) {                mIsTrue = isTrue;            }        }    }}])', 1), ('([22:/android/media/cts/AudioManagerTest.java]:[TIF]:[22]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[TIF]:[1]:method_text:[terruptedException e) { }                return mIntentReceived;            }        }    }   ])', 1), ('([9:/android/media/cts/AudioManagerTest.java]:[TIF]:[9]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 1), ('([24:/android/media/cts/AudioManagerTest.java]:[TIF]:[24]:method_text:[SETTING_OFF,                mAudioManager.getVibrateSetting(VIBRATE_TYPE_NOTIFICATION));    }   ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[TIF]:[2]:method_text:[BRATE_SETTING_OFF,                mAudioManager.getVibrateSetting(VIBRATE_TYPE_RINGER));    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[TIF]:[1]:method_text:[BRATE : RINGER_MODE_SILENT,                    mAudioManager.getRingerMode());        }    }   ])', 1), ('([10:/android/media/cts/AudioManagerTest.java]:[TIF]:[10]:method_text:[;            assertEquals(RINGER_MODE_VIBRATE, mAudioManager.getRingerMode());        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[TIF]:[1]:method_text:[        if (!isMusicPlayingBeforeTest) {            assertMusicActive(false);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[TIF]:[1]:method_text:[e."",                        mAudioManager.isStreamMute(stream));            }        }    }   ])', 1), ('([11:/android/media/cts/AudioManagerTest.java]:[TIF]:[11]:method_text:[ckageName(), getInstrumentation(), true);            testStreamMuting(stream);        }    }   ])', 1), ('([3:/android/media/cts/AudioManagerTest.java]:[TIF]:[3]:method_text:[etStreamMute failed."",                    mAudioManager.isStreamMute(stream));        }    }   ])', 1), ('([5:/android/media/cts/AudioManagerTest.java]:[TIF]:[5]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 1), ('([18:/android/media/cts/AudioManagerTest.java]:[TIF]:[18]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[TIF]:[1]:method_text:[           STREAM_ALARM, STREAM_NOTIFICATION,            STREAM_DTMF,  STREAM_ACCESSIBILITY };   ])', 1), ('([1:/com/android/suspendapps/suspendtestapp/TestService.java]:[TIF]:[1]:method_text:[{            sRegisteredReporters.clear();        }        return super.onUnbind(intent);    }}])', 1), ('([1:/android/renderscriptlegacy/cts/ScriptC_set_target_api_13.java]:[TIF]:[1]:method_text:[cker(4);        check_fp.addI32(version);        invoke(mExportFuncIdx_check, check_fp);    }}])', 1), ('([2:/android/database/cts/ContentObserverTest.java]:[TIF]:[2]:method_text:[    /**     * Verify that all incoming dispatch methods invoke all outgoing callbacks.     */   ])', 1), ('([2:/android/database/cts/ContentObserverTest.java]:[TIF]:[2]:method_text:[ange = state;        }        protected Uri getUri() {            return mUri;        }    }}])', 1), ('([1:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[TIF]:[1]:method_text:[IGN_TOP]);        assertEquals(R.id.relative_view3, rules[RelativeLayout.ALIGN_BOTTOM]);    }   ])', 1), ('([1:/android/widget/cts/RelativeLayout_LayoutParamsTest.java]:[TIF]:[1]:method_text:[t.ALIGN_BOTTOM]);        layoutParams.resolveLayoutDirection(View.LAYOUT_DIRECTION_LTR);    }   ])', 1), ('([31:/com/android/cts/verifier/bluetooth/BleEncryptedServerService.java]:[TIF]:[31]:method_text:[Advertiser != null) {            mAdvertiser.stopAdvertising(mAdvertiseCallback);        }    }}])', 1), ('([3:/android/telephony/ims/cts/TestImsConfig.java]:[TIF]:[3]:method_text:[riggerAutoConfiguration();        TestAcsClient.getInstance().onTriggerAutoConfiguration();    }}])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[TIF]:[1]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([1:/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java]:[TIF]:[1]:method_text:[_ID);    }    /**     * Test basic granting of URI permissions associated with jobs.     */   ])', 1), ('([1:/com/android/cts/verifier/deskclock/DeskClockTestsActivity.java]:[getTitle()]:[1]:method_text:[      throw new IllegalArgumentException(""Unknown test: "" + testId);            }        }    }}])', 1), ('([1:/android/webkit/cts/WebViewRenderProcessClientTest.java]:[TIF]:[1]:method_text:[       blockRenderProcess(blocker);        WebkitUtils.waitForFuture(rendererUnblocked);    }   ])', 1), ('([2:/android/os/cts/ProcessTest.java]:[TIF]:[2]:method_text:[ection != null) {            getContext().unbindService(mSecondaryConnection);        }    }   ])', 1), ('([1:/android/os/cts/ProcessTest.java]:[TIF]:[1]:method_text:[ndSignal}.     * Test sendSignal(int) point.     * Send a signal to the given process.     */   ])', 1), ('([22:/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/Ver2_Notification_extension.java]:[TIF]:[22]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1)]"	""	""	"[('TIF', 43), ('getTitle()', 1)]"	"[('[android.media.cts.AudioPlaybackConfigurationTest testGetterSoundPool CtsMediaTestCases]', 1), ('[android.database.cts.AbstractCursor_SelfContentObserverTest testDeliverSelfNotifications CtsDatabaseTestCases]', 1), ('[android.database.cts.AbstractCursor_SelfContentObserverTest testOnChange CtsDatabaseTestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSpeakerphoneIntent CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testCheckingZenModeBlockDoesNotRequireNotificationPolicyAccess CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testVibrateNotification CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testVibrateRinger CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAccessRingMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetRingerModePolicyAccess CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testVolume CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMuteFixedVolume CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMuteDndAffectedStreams CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMuteDndUnaffectedStreams CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInTotalSilenceMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInAlarmsOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInTotalSilenceMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInAlarmsOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInPriorityOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInPriorityOnly CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMuteAll CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMediaAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlySystemAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlySystemDisallowedWithRingerMuted CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyAlarmsAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyRingerAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyChannelsCanBypassDnd CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeWithIllegalDirection CtsMediaTestCases]', 1), ('[com.android.suspendapps.suspendtestapp.TestService isPackageSuspended None]', 1), ('[android.database.cts.ContentObserverTest testDeliverSelfNotifications CtsDatabaseTestCases]', 1), ('[android.database.cts.ContentObserverTest testDispatchChange_Completeness CtsDatabaseTestCases]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.RelativeLayout_LayoutParamsTest testStartEnd CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleEncryptedServerService getBluetoothLeAdvertiser None]', 1), ('[android.telephony.ims.cts.TestImsConfig TestImsConfig CtsTelephonyTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.deskclock.DeskClockTestsActivity setPassFailButtonClickListeners None]', 1), ('[android.webkit.cts.WebViewRenderProcessClientTest WebViewRenderProcessClientTest CtsWebkitTestCases]', 1), ('[android.os.cts.ProcessTest testKillProcess None]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.Ver2_Notification_extension isTagImplicit CtsLocationGnssTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-5"	"9.9.3/C-1-5"	"09090300.670105"	"""C-1-5] MUST encrypt file contents and filesystem metadata using AES-256-XTS or Adiantum. AES-256-XTS refers to the Advanced Encryption Standard with a 256-bit cipher key length, operated in XTS mode; the full length of the key is 512 bits. Adiantum refers to Adiantum-XChaCha12-AES, as specified at https://github.com/google/adiantum. Filesystem metadata is data such as file sizes, ownership, modes, and extended attributes (xattrs)."""	""	""	"github.com AES XTS"	""	""	""	""	"[('android.autofillservice.cts.servicebehavior.FieldsClassificationTest', 11), ('android.keystore.cts.CipherTest', 6), ('android.mediadrm.cts.MediaDrmMockTest', 5), ('android.security.SELinuxTargetSdkTest', 4), ('android.keystore.cts.ImportWrappedKeyTest', 3), ('android.uirendering.cts.testclasses.ExactCanvasTests', 2), ('android.view.textclassifier.cts.TextClassifierServiceSwapTest', 2), ('android.keystore.cts.BlockCipherTestBase', 2), ('android.widget.cts.SearchView_CursorTest', 1), ('android.server.wm.AppConfigurationTests', 1), ('com.android.cts.verifier.ReportExporter', 1), ('com.android.cts.verifier.security.FingerprintBoundKeysTest', 1), ('android.text.style.cts.SuggestionSpanTest', 1), ('android.hardware.camera2.cts.rs.ScriptGraph', 1), ('android.graphics.cts.PaintFlagsDrawFilterTest', 1), ('android.autofillservice.cts.dropdown.VirtualContainerActivityTest', 1), ('com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity', 1)]"	"[('enoughToFilter', 3), ('getInstrumentation', 3), ('getContext', 3), ('toLowerCase', 2), ('getTargetContext', 2), ('getChildCount', 1), ('getCursor', 1), ('setup', 1), ('getActivity', 1), ('getName', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('SecureRandom', 1), ('getCache', 1), ('create', 1), ('Builder', 1), ('checkInput', 1), ('supports3DES', 1), ('DeviceLockSession', 1), ('setUp', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1)]"	"[('CtsAutoFillServiceTestCases', 12), ('CtsKeystoreTestCases', 11), ('CtsMediaDrmTestCases', 5), ('CtsSelinuxTargetSdk27TestCases', 2), ('CtsUiRenderingTestCases', 2), ('CtsSelinuxTargetSdk28TestCases', 2), ('CtsTextClassifierTestCases', 2), ('CtsWidgetTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsTextTestCases', 1), ('CtsCameraTestCases', 1), ('CtsGraphicsTestCases', 1)]"	""	"android.keystore.cts.CipherTest"	"getContext"	"CtsKeystoreTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmMockTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/ImportWrappedKeyTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/selinux/selinuxTargetSdk27/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/selinux/selinuxTargetSdk28/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassifierServiceSwapTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/BlockCipherTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/ReportExporter.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/FingerprintBoundKeysTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/style/cts/SuggestionSpanTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/ScriptGraph.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintFlagsDrawFilterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java', 1)]"	"[('(2,XTS,/android/security/SELinuxTargetSdkTest.java)', 2), ('(1,XTS,/android/widget/cts/SearchView_CursorTest.java)', 1), ('(2,XTS,/android/uirendering/cts/testclasses/ExactCanvasTests.java)', 1), ('(3,XTS,/android/server/wm/AppConfigurationTests.java)', 1), ('(2,XTS,/com/android/cts/verifier/ReportExporter.java)', 1), ('(2,AES,/com/android/cts/verifier/security/FingerprintBoundKeysTest.java)', 1), ('(1,XTS,/android/text/style/cts/SuggestionSpanTest.java)', 1), ('(6,XTS,/android/view/textclassifier/cts/TextClassifierServiceSwapTest.java)', 1), ('(16,AES,/android/keystore/cts/ImportWrappedKeyTest.java)', 1), ('(3,XTS,/android/hardware/camera2/cts/rs/ScriptGraph.java)', 1), ('(1,XTS,/android/graphics/cts/PaintFlagsDrawFilterTest.java)', 1), ('(1,AES,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(1,XTS,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(5,AES,/android/mediadrm/cts/MediaDrmMockTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java)', 1), ('(2,XTS,/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java)', 1), ('(26,XTS,/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java)', 1), ('(37,AES,/android/keystore/cts/CipherTest.java)', 1), ('(19,XTS,/android/keystore/cts/CipherTest.java)', 1)]"	"[('([1:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[XTS]:[1]:method_text:[ill fail the test.                    R.drawable.text_on_path, new MSSIMComparer(0.6)));    }   ])', 2), ('([1:/android/mediadrm/cts/MediaDrmMockTest.java]:[AES]:[1]:method_text:[opertyByteArray(""mock-iv"")));        assertTrue(Arrays.equals(output, expected_output));    }   ])', 2), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[                       new String[] { ""otherId"", ""myId""}, new float[] { 0.80F, 0.2F })});    }   ])', 2), ('([1:/android/security/SELinuxTargetSdkTest.java]:[XTS]:[1]:method_text:[erify that selinux context is the expected type based on     * targetSdkVersion = 26-27     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[XTS]:[1]:method_text:[ile:s0:c512,c768\\n"" +            ""Actual value: "";        appDataContext(context, msg);    }   ])', 1), ('([1:/android/widget/cts/SearchView_CursorTest.java]:[XTS]:[1]:method_text:[    mSearchView.setSuggestionsAdapter(mSuggestionsAdapter);        });    }    @UiThreadTest   ])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[XTS]:[3]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([2:/com/android/cts/verifier/ReportExporter.java]:[XTS]:[2]:method_text:[sult)                .setPositiveButton(android.R.string.ok, null)                .show();    }}])', 1), ('([2:/com/android/cts/verifier/security/FingerprintBoundKeysTest.java]:[AES]:[2]:method_text:[etMessage(R.string.sec_fp_dialog_message);            return builder.create();        }    }}])', 1), ('([1:/android/text/style/cts/SuggestionSpanTest.java]:[XTS]:[1]:method_text:[  text, 0, text.length(), tp, largeWidth).build();        return layout.getLineWidth(0);    }   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[XTS]:[1]:method_text:[* Verify that selinux context is the expected type based on     * targetSdkVersion = 28     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[XTS]:[1]:method_text:[9,c256,c512,c768\\n"" +            ""Actual value: "";        appDataContext(context, msg);    }   ])', 1), ('([1:/android/view/textclassifier/cts/TextClassifierServiceSwapTest.java]:[XTS]:[1]:method_text:[(mRequiredServiceRule)            .around(mTestWatcher)            .around(mSafeCleanerRule);   ])', 1), ('([5:/android/view/textclassifier/cts/TextClassifierServiceSwapTest.java]:[XTS]:[5]:method_text:[t(intent).isNotNull();        // unregister receiver        receiver.unregisterQuietly();    }}])', 1), ('([1:/android/keystore/cts/ImportWrappedKeyTest.java]:[AES]:[1]:method_text:[ntext() {        return InstrumentationRegistry.getInstrumentation().getTargetContext();    }   ])', 1), ('([3:/android/keystore/cts/ImportWrappedKeyTest.java]:[AES]:[3]:method_text:[RYPT_MODE, key);        assertEquals(new String(c.doFinal(encrypted)), ""hello, world"");    }   ])', 1), ('([12:/android/keystore/cts/ImportWrappedKeyTest.java]:[AES]:[12]:method_text:[(isStrongBoxBacked)                        .build());        return kpg.generateKeyPair();    }}])', 1), ('([3:/android/hardware/camera2/cts/rs/ScriptGraph.java]:[XTS]:[3]:method_text:[      try {            close();        } finally {            super.finalize();        }    }}])', 1), ('([1:/android/graphics/cts/PaintFlagsDrawFilterTest.java]:[XTS]:[1]:method_text:[assertTrue(rect.top >= TEXT_Y);    }    // Tests that FILTER_BITMAP_FLAG is handled properly.   ])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[AES]:[1]:method_text:[param);            fail();        } catch (InvalidAlgorithmParameterException expected) {}    }}])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[XTS]:[1]:method_text:[xt,                    subarray(decryptedPlaintext, 0, basePlaintext.length));        }    }   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmMockTest.java]:[AES]:[1]:method_text:[toSession(sessionId, ""AES/CBC/NoPadding"", ""HmacSHA256"");        assertFalse(cs == null);    }   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmMockTest.java]:[AES]:[1]:method_text:[rray(""mock-message"")));        assertTrue(Arrays.equals(signature, expected_signature));    }   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmMockTest.java]:[AES]:[1]:method_text:[ata, mExpectedData));            mGotEvent = true;            mLock.notify();        }    }   ])', 1), (""([1:/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java]:[XTS]:[1]:method_text:[gain, but then we wouldn't be effectively testing that the context was committed    @Presubmit   ])"", 1), ('([2:/com/android/cts/verifier/nfc/offhost/UiccTransactionEvent2EmulatorActivity.java]:[XTS]:[2]:method_text:[utton().setEnabled(false);                    }                });            }        }    }}])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[;        assertFillEventForFieldsClassification(events.get(0), fieldId.get(), ""cat"", 1);    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[        assertFillEventForFieldsClassification(events.get(0), fieldId.get(), ""card"", 1);    }   ])', 1), ('([4:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[4]:method_text:[        assertFillEventForFieldsClassification(events.get(0), fieldId.get(), ""myId"", 1);    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[ ""cat1"", ""cat2""},                                new float[] {1, 1})                });    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[2ndId"", ""1stId"" },                            new float[] { 0.66F, 0.5F }) });        }    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[         new FieldClassificationResult(fieldId2.get(), ""myId"", 0.6F),                });    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[t(),                                new String[] { ""otherId"" }, new float[] { 0.2F })});    }   ])', 1), ('([4:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[4]:method_text:[ssertFillEventForFieldsClassification(defaultUserDataEvent, fieldId2.get(), ""cat"", 1.0F);    }   ])', 1), (""([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[ull'     * v multiple fields     * v multiple value     * - combinations of above items     */}])"", 1), ('([16:/android/keystore/cts/CipherTest.java]:[AES]:[16]:method_text:[ close() throws Exception {            mLockCredential.close();        }    }    @Presubmit   ])', 1), ('([6:/android/keystore/cts/CipherTest.java]:[AES]:[6]:method_text:[yptionProvider,                            e);                }            }        }    }   ])', 1), ('([15:/android/keystore/cts/CipherTest.java]:[AES]:[15]:method_text:[s key            return Arrays.copyOf(plaintext, maxSupportedPlaintextSizeBytes);        }    }}])', 1), ('([8:/android/keystore/cts/CipherTest.java]:[XTS]:[8]:method_text:[ otherProvider,                            e);                }            }        }    }   ])', 1), ('([7:/android/keystore/cts/CipherTest.java]:[XTS]:[7]:method_text:[ otherProvider,                            e);                }            }        }    }   ])', 1), ('([4:/android/keystore/cts/CipherTest.java]:[XTS]:[4]:method_text:[s key            return Arrays.copyOf(plaintext, maxSupportedPlaintextSizeBytes);        }    }}])', 1)]"	"https://github.com"	""	"[('XTS', 31), ('AES', 13)]"	"[('[android.keystore.cts.CipherTest testInitEncryptAsymmetricIgnoresThatKeyNoLongerValid CtsKeystoreTestCases]', 2), ('[android.security.SELinuxTargetSdkTest testAppDomainContext CtsSelinuxTargetSdk27TestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDataContext CtsSelinuxTargetSdk27TestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testTextOnPath CtsUiRenderingTestCases]', 1), ('[android.uirendering.cts.testclasses.ExactCanvasTests testTextOnPathUsingPicture CtsUiRenderingTestCases]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.ReportExporter currentTimeMillis None]', 1), ('[com.android.cts.verifier.security.FingerprintBoundKeysTest setPassFailButtonClickListeners None]', 1), ('[android.text.style.cts.SuggestionSpanTest testGetLocaleObject CtsTextTestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDomainContext CtsSelinuxTargetSdk28TestCases]', 1), ('[android.security.SELinuxTargetSdkTest testAppDataContext CtsSelinuxTargetSdk28TestCases]', 1), ('[android.view.textclassifier.cts.TextClassifierServiceSwapTest getTestWatcher CtsTextClassifierTestCases]', 1), ('[android.view.textclassifier.cts.TextClassifierServiceSwapTest testResourceIconsRewrittenToContentUriIcons_suggestSelection CtsTextClassifierTestCases]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey CtsKeystoreTestCases]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey_AES_StrongBox CtsKeystoreTestCases]', 1), ('[android.hardware.camera2.cts.rs.ScriptGraph isInputFromSurface CtsCameraTestCases]', 1), ('[android.graphics.cts.PaintFlagsDrawFilterTest testPaintFlagsDrawFilter CtsGraphicsTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testVeryLargeBlock CtsKeystoreTestCases]', 1), ('[android.keystore.cts.BlockCipherTestBase testGeneratedPadding CtsKeystoreTestCases]', 1), ('[android.mediadrm.cts.MediaDrmMockTest testCryptoSession CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmMockTest testCryptoSessionEncrypt CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmMockTest testCryptoSessionDecrypt CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmMockTest testCryptoSessionSign CtsMediaDrmTestCases]', 1), ('[android.mediadrm.cts.MediaDrmMockTest testCryptoSessionVerify CtsMediaDrmTestCases]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testSave_submitButtonClicked CtsAutoFillServiceTestCases]', 1), ('[com.android.cts.verifier.nfc.offhost.UiccTransactionEvent2EmulatorActivity setPassFailButtonClickListeners None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_exactMatchLast4Algorithm CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_CreditCardAlgorithm CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_useDefaultAlgorithm CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_sameValueForMultipleCategories CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_oneDetectableField_bestMatchIsSecond CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_oneUserData_manyDetectableFields CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_manyDetectableFields CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_manyDetectableFields_differentClassificationAlgo CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserDataPerField_manyDetectableFields CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_usePackageUserData CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_mergeUserData_manyDetectableFields CtsAutoFillServiceTestCases]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testCiphertextGeneratedByHighestPriorityProviderDecryptsByAndroidKeyStore CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testMaxSizedPlaintextSupported CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testLargerThanMaxSizedPlaintextRejected CtsKeystoreTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-4-1"	"9.8.2/H-4-1"	"09080200.720401"	"""[9.8.2/H-4-1] MUST display the microphone indicator when an app is accessing audio data from the microphone, but not when the microphone is only accessed by HotwordDetectionService, SOURCE_HOTWORD, ContentCaptureService or apps holding the roles called out in section 9.1 with CDD identifier [C-4-X]. . """	""	""	"SOURCE_HOTWORD CDD"	""	""	""	""	"[('android.appsecurity.cts.ApkVerityInstallTest', 15), ('android.graphics.cts.VulkanFeaturesTest', 5), ('android.hardware.cts.LowRamDeviceTest', 4), ('android.graphics.cts.PaintTest', 3), ('android.media.cts.AudioManagerTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 2), ('android.appwidget.cts.RequestPinAppWidgetTest', 2), ('android.security.cts.MetadataEncryptionTest', 2), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 2), ('android.car.cts.CarBluetoothTest', 2), ('android.content.cts.AvailableIntentsTest', 2), ('android.media.cts.EncoderTest', 2), ('android.app.cts.SystemFeaturesTest', 2), ('android.location.cts.gnss.GnssPseudorangeVerificationTest', 2), ('android.mediav2.cts.CodecListTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.keystore.cts.CipherTest', 1), ('android.webkit.cts.WebSettingsTest', 1), ('com.android.cts.verifier.companion.CompanionDeviceServiceTestActivity', 1), ('android.hardware.camera2.cts.testcases.Camera2AndroidTestCase', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('com.android.cts.verifier.audio.ProAudioActivity', 1), ('com.android.cts.verifier.security.IdentityCredentialAuthentication', 1), ('android.host.accounts.BaseMultiUserTest', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('android.security.identity.cts.ProvisioningTest', 1), ('android.text.cts.FontCoverageTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1)]"	"[('setUp', 16), ('run', 15), ('close', 15), ('getPackageManager', 9), ('getDevice', 9), ('getInstrumentation', 8), ('start', 8), ('getContext', 7), ('AtomicInteger', 7), ('build', 7), ('getTargetContext', 6), ('tearDown', 6), ('getLooper', 5), ('size', 5), ('getSimpleName', 4), ('Object', 4), ('getWidth', 4), ('getHeight', 4), ('capacity', 4), ('clear', 4), ('getSurface', 4), ('printStackTrace', 4), ('getPackageName', 3), ('runExpectingFailure', 3), ('getSystemAvailableFeatures', 3), ('quitSafely', 3), ('getOutputStream', 3), ('getName', 3), ('getBytes', 3), ('Builder', 3), ('getResources', 2), ('getSystem', 2), ('getLaunchApiLevel', 2), ('BlockingBroadcastReceiver', 2), ('await', 2), ('getExtras', 2), ('BlockingStateCallback', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('getClass', 2), ('getTargetException', 2), ('release', 2), ('lock', 2), ('getExampleDrivingPrivilegesCbor', 2), ('end', 2), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('installSingle', 1), ('installAndUpdate', 1), ('assumeSecurityModelCompat', 1), ('getOverrideConfig', 1), ('setUpLauncher', 1), ('getDefaultLauncher', 1), ('tearDownLauncher', 1), ('Bundle', 1), ('getFirstWidgetComponent', 1), ('supports3DES', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('setup', 1), ('nativeGetVkJSON', 1), ('getBestDevice', 1), ('CameraErrorCollector', 1), ('onCreate', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('onDestroy', 1), ('quit', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('NoSuchFieldError', 1), ('getDeclaredMethods', 1), ('NoSuchMethodError', 1), ('getMessage', 1), ('getContentResolver', 1), ('ProAudioActivity', 1), ('super', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('getAction', 1), ('signal', 1), ('unlock', 1), ('waitForAdapterOn', 1), ('waitForAdapterOff', 1), ('enable', 1), ('getMaxNumberOfUsersSupported', 1), ('getCurrentUser', 1), ('getPrimaryUserId', 1), ('getComponentInfo', 1), ('getMediaDirString', 1), ('ByteArrayOutputStream', 1), ('CborBuilder', 1), ('addArray', 1), ('addMap', 1), ('toByteArray', 1), ('iterator', 1), ('next', 1), ('getPublicKey', 1), ('HashMap', 1), ('toLanguageTag', 1), ('getLayoutInflater', 1)]"	"[('CtsAppSecurityHostTestCases', 15), ('CtsGraphicsTestCases', 8), ('CtsShortcutManagerTestCases', 5), ('CtsMediaTestCases', 4), ('CtsHardwareTestCases', 4), ('CtsAppWidgetTestCases', 2), ('CtsSecurityHostTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsCarTestCases', 2), ('CtsContentTestCases', 2), ('CtsAppTestCases', 2), ('CtsLocationGnssTestCases', 2), ('CtsMediaV2TestCases', 2), ('CtsIncrementalInstallHostTestCases', 2), ('CtsSensorTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsCameraTestCases', 1), ('CtsAccountsHostTestCases', 1), ('CtsIdentityTestCases', 1), ('CtsTextTestCases', 1)]"	""	"android.incrementalinstall.cts.IncrementalFeatureTest"	"getLaunchApiLevel"	"CtsIncrementalInstallHostTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/MetadataEncryptionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarBluetoothTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncoderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssPseudorangeVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecListTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/companion/CompanionDeviceServiceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/ProAudioActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/IdentityCredentialAuthentication.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1)]"	"[('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java)', 1), ('(2,CDD,/android/media/cts/AudioManagerTest.java)', 1), ('(16,CDD,/android/appsecurity/cts/ApkVerityInstallTest.java)', 1), ('(1,CDD,/android/hardware/cts/SensorParameterRangeTest.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java)', 1), ('(3,CDD,/android/appwidget/cts/RequestPinAppWidgetTest.java)', 1), ('(3,CDD,/android/keystore/cts/CipherTest.java)', 1), ('(1,CDD,/android/webkit/cts/WebSettingsTest.java)', 1), ('(7,CDD,/android/hardware/cts/LowRamDeviceTest.java)', 1), ('(6,CDD,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/companion/CompanionDeviceServiceTestActivity.java)', 1), ('(1,CDD,/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java)', 1), ('(3,CDD,/android/security/cts/MetadataEncryptionTest.java)', 1), ('(1,CDD,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(2,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java)', 1), ('(3,CDD,/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java)', 1), ('(2,CDD,/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java)', 1), ('(2,CDD,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(5,CDD,/com/android/cts/verifier/audio/ProAudioActivity.java)', 1), ('(2,CDD,/com/android/cts/verifier/security/IdentityCredentialAuthentication.java)', 1), ('(2,CDD,/android/car/cts/CarBluetoothTest.java)', 1), ('(3,CDD,/android/graphics/cts/PaintTest.java)', 1), ('(1,CDD,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(2,CDD,/android/content/cts/AvailableIntentsTest.java)', 1), ('(2,CDD,/android/media/cts/EncoderTest.java)', 1), ('(2,CDD,/android/app/cts/SystemFeaturesTest.java)', 1), ('(1,CDD,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(2,CDD,/android/text/cts/FontCoverageTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(3,CDD,/android/location/cts/gnss/GnssPseudorangeVerificationTest.java)', 1), ('(6,CDD,/android/mediav2/cts/CodecListTest.java)', 1), ('(3,CDD,/android/incrementalinstall/cts/IncrementalFeatureTest.java)', 1)]"	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[();        install.run(expectingSuccess);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 2), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[CDD]:[2]:method_text:[ortcutId())) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CDD]:[1]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[CDD]:[1]:method_text:[ustSuggestedStreamVolume(ADJUST_RAISE, 66747, 0);    }    @CddTest(requirement=""5.4.1/C-1-4"")   ])', 1), ('([2:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[2]:method_text:[     getDevice().uninstallPackage(PACKAGE_NAME);    }    @CddTest(requirement = ""9.10/C-0-3"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[   verifyFsverityInstall(incremental, BASE_APK);    }    @CddTest(requirement = ""9.10/C-0-3"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[Install(incremental, BASE_APK, SPLIT_APK);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[stall(incremental, BASE_APK, BASE_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[PK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[cremental, BASE_APK, SPLIT_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[l(updateIncremental, SPLIT_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[ll(updateIncremental, BASE_APK);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[erityInstall(updateIncremental, BASE_APK);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[X)                .runExpectingFailure();    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[l(incremental, BASE_APK_DM, SPLIT_APK_DM);    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[stall(incremental, BASE_APK_DM);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[CDD]:[1]:method_text:[tal, BASE_APK_DM, SPLIT_APK_DM);        }    }    @CddTest(requirement = ""9.10/C-0-3,C-0-5"")   ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[CDD]:[1]:method_text:[Frequency),                    actualMinFrequency <=  hifiMinFrequency + 0.1);        }    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[dp_lowram=96,""                + ""icon_format=PNG,""                + ""icon_quality=100"";    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[CDD]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));    }    @CddTest(requirement=""3.8.1/C-1-2"")   ])', 1), ('([2:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[2]:method_text:[he extras        assertEquals(""dummy-2"", resultReceiver.result.getStringExtra(""dummy""));    }   ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[1]:method_text:[                AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());    }   ])', 1), ('([3:/android/keystore/cts/CipherTest.java]:[CDD]:[3]:method_text:[ close() throws Exception {            mLockCredential.close();        }    }    @Presubmit   ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[CDD]:[1]:method_text:[l:\\n%s"", patternString, useragent),                    patternMatcher.find());        }    }   ])', 1), ('([2:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[2]:method_text:[ces reported memory to ensure it meets the minimum values described     * in CDD 7.6.1.     */   ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[44);            } else {                assertMinMemoryMb(592);            }        }    }   ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[1]:method_text:[  mContext.getExternalFilesDir(null),                MIN_SHARED_DATA_PARTITION_SIZE_GB);    }   ])', 1), ('([3:/android/hardware/cts/LowRamDeviceTest.java]:[CDD]:[3]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                size > minSizeBytes);    }}])', 1), ('([2:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[2]:method_text:[;        mBestDevice = getBestDevice();    }    @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[l, mVulkanHardwareCompute.version);        }    }    @CddTest(requirement = ""7.1.4.2/C-3-1"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[atures"", 0x3 /* importable + exportable */));    }    @CddTest(requirement = ""7.1.4.2/C-1-7"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[viceExtension(""VK_KHR_incremental_present"", 1);    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[CDD]:[1]:method_text:[ null && mVulkanHardwareLevel.version >= 0);    }    @CddTest(requirement = ""7.1.4.2/C-1-11"")   ])', 1), ('([2:/com/android/cts/verifier/companion/CompanionDeviceServiceTestActivity.java]:[CDD]:[2]:method_text:[null"");            }        } else super.onActivityResult(requestCode, resultCode, data);    }}])', 1), ('([1:/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java]:[CDD]:[1]:method_text:[ is closed"");        } catch (IllegalStateException e) {            // Expected.        }    }}])', 1), ('([2:/android/security/cts/MetadataEncryptionTest.java]:[CDD]:[2]:method_text:[ryption/metadata     *     * @throws Exception     */    @CddTest(requirement=""9.9.3/C-1-5"")   ])', 1), ('([1:/android/security/cts/MetadataEncryptionTest.java]:[CDD]:[1]:method_text:[    getDevice().hasFeature(""feature:android.hardware.security.model.compatible""));        }    }}])', 1), ('([1:/com/android/cts/verifier/camera/its/ItsService.java]:[CDD]:[1]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java]:[CDD]:[2]:method_text:[    }        }    }    /**     * Make sure the internal AIDL methods are protected.     */   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[CDD]:[3]:method_text:[ic final String SHORTCUT_ID = ""s12345"";    @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[IM_SLOT_0);            SimContacts.removeSimAccounts(mResolver, SIM_SLOT_1);        });    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[ut this should not be done for the local account.     */    @CddTest(requirement=""3.18/C-1-4"")   ])', 1), ('([2:/android/hardware/camera2/cts/CameraTestUtils.java]:[CDD]:[2]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([5:/com/android/cts/verifier/audio/ProAudioActivity.java]:[CDD]:[5]:method_text:[audio_proaudio_NA));            }            calculatePass();            break;        }    }}])', 1), ('([2:/com/android/cts/verifier/security/IdentityCredentialAuthentication.java]:[CDD]:[2]:method_text:[ RuntimeException(""Error encoding CBOR"", e);        }        return baos.toByteArray();    }}])', 1), ('([1:/android/car/cts/CarBluetoothTest.java]:[CDD]:[1]:method_text:[ented), or for the    // configured timeout. If all required profiles connect, the test passes.   ])', 1), ('([1:/android/car/cts/CarBluetoothTest.java]:[CDD]:[1]:method_text:[(mBluetoothAdapter);        waitForProfileConnections();        checkProfileConnections();    }}])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[        Typeface.MONOSPACE,            Typeface.SANS_SERIF,            Typeface.SERIF,    };   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());    }    @CddTest(requirement=""3.8.13/C-1-2"")   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[CDD]:[1]:method_text:[SCULAPIUS                p.hasGlyph(""\\uD83D\\uDC69\\u200D\\u2695\\uFE0F""));  // above + VS16    }   ])', 1), ('([1:/android/host/accounts/BaseMultiUserTest.java]:[CDD]:[1]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([2:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[CDD]:[2]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[CDD]:[1]:method_text:[en url is http://web_address,     * it will open a browser window to the URL specified.     */   ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[CDD]:[1]:method_text:[ntent.ACTION_POWER_USAGE_SUMMARY));        }    }    @CddTest(requirement = ""7.4.2.6/C-1-1"")   ])', 1), ('([1:/android/media/cts/EncoderTest.java]:[CDD]:[1]:method_text:[ltEncoders.put(mime, codec.getName());        codec.release();        return isDefault;    }   ])', 1), ('([1:/android/media/cts/EncoderTest.java]:[CDD]:[1]:method_text:[ithFormats(MediaFormat.MIMETYPE_AUDIO_AMR_WB, formats);    }    @CddTest(requirement=""5.1.3"")   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[properly prefixed with ""android."" that are not defined in     * {@link PackageManager}.     */   ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[CDD]:[1]:method_text:[          if (camera != null) {                camera.release();            }        }    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[CDD]:[1]:method_text:[tStackTrace();            assertTrue(false);        }        return certificateChain;    }   ])', 1), ('([2:/android/text/cts/FontCoverageTest.java]:[CDD]:[2]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([2:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[CDD]:[2]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([2:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[2]:method_text:[d.   * This tests uses actual data retrieved from Gnss HAL.   */  @CddTest(requirement=""7.3.3"") ])', 1), ('([1:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[1]:method_text:[instant mode"")    @RequiresDevice  // emulated devices do not support real measurements so far.   ])', 1), ('([2:/android/mediav2/cts/CodecListTest.java]:[CDD]:[2]:method_text:[   * adheres to additional requirements (support for min profile/level, ...) set by cdd.     */   ])', 1), ('([4:/android/mediav2/cts/CodecListTest.java]:[CDD]:[4]:method_text:[                       CodecTestBase.hasEncoder(MediaFormat.MIMETYPE_VIDEO_VP8));        }    }}])', 1), ('([2:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[2]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);    }    @CddTest(requirement=""4/C-1-1"")   ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[CDD]:[1]:method_text:[ture android.software.incremental_delivery"")));    }    @CddTest(requirement=""4/C-1-1,C-3-1"")   ])', 1)]"	""	""	"[('CDD', 68)]"	"[('[android.appsecurity.cts.ApkVerityInstallTest isIncrementalDeliveryV2Feature CtsAppSecurityHostTestCases]', 2), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustSuggestedStreamVolumeWithIllegalArguments CtsMediaTestCases]', 1), ('[android.hardware.cts.SensorParameterRangeTest testPressureRange CtsSensorTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest testGetShortcutIcon CtsShortcutManagerTestCases]', 1), ('[android.appwidget.cts.RequestPinAppWidgetTest testPinWidget_launcher2 CtsAppWidgetTestCases]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked CtsKeystoreTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testUserAgentStringTest CtsWebkitTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest DisplayMetrics CtsHardwareTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinimumMemory CtsHardwareTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinSharedDataPartitionSize CtsHardwareTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest testMinDataPartitionSize CtsHardwareTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanHardwareFeatures CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkan1_1Requirements CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanRequiredExtensions CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanVersionForVrHighPerformance CtsGraphicsTestCases]', 1), ('[com.android.cts.verifier.companion.CompanionDeviceServiceTestActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.testcases.Camera2AndroidTestCase isInstantApp CtsCameraTestCases]', 1), ('[android.security.cts.MetadataEncryptionTest testMetadataEncryptionIsEnabled CtsSecurityHostTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest getTestContext CtsShortcutManagerTestCases]', 1), ('[android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest testAccountRemovalWithMergedContact_deletesContacts CtsContactsProviderTestCases]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[com.android.cts.verifier.audio.ProAudioActivity isHDMIValid None]', 1), ('[com.android.cts.verifier.security.IdentityCredentialAuthentication setPassFailButtonClickListeners None]', 1), ('[android.car.cts.CarBluetoothTest disable CtsCarTestCases]', 1), ('[android.car.cts.CarBluetoothTest testRequiredBluetoothProfilesExist CtsCarTestCases]', 1), ('[android.graphics.cts.PaintTest testGetTextPathStringCountTooHigh CtsGraphicsTestCases]', 1), ('[android.graphics.cts.PaintTest testHasGlyph CtsGraphicsTestCases]', 1), ('[android.host.accounts.BaseMultiUserTest listUsers CtsAccountsHostTestCases]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[android.content.cts.AvailableIntentsTest testPowerUsageSummarySettings CtsContentTestCases]', 1), ('[android.media.cts.EncoderTest testAMRWBEncoders CtsMediaTestCases]', 1), ('[android.app.cts.SystemFeaturesTest testCameraFeatures CtsAppTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[android.location.cts.gnss.GnssPseudorangeVerificationTest testPseudorangeValue CtsLocationGnssTestCases]', 1), ('[android.mediav2.cts.CodecListTest testCddRequiredCodecsAvailability CtsMediaV2TestCases]', 1), ('[android.incrementalinstall.cts.IncrementalFeatureTest testFeatureAvailable CtsIncrementalInstallHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.3"	"H-1-1"	"5.3/H-1-1"	"05030000.720101"	"""[5.3/H-1-1] MUST NOT drop more than 1 frame in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 30 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback.  | [5.3/H-1-1] MUST NOT drop more than 2 frames in 10 seconds (i.e less than 0.333 percent frame drop) for a 1080p 60 fps video session under load. Load is defined as a concurrent 1080p to 720p video-only transcoding session using hardware video codecs, as well as a 128 kbps AAC audio playback. """	""	""	"AAC"	""	""	""	""	"[('android.media.cts.VideoDecoderPerfTest', 15), ('android.media.cts.MediaCodecTest', 5), ('android.media.cts.MediaCodecListTest', 4), ('android.mediav2.cts.CodecUnitTest', 3), ('android.media.mediaparser.cts.MediaParserTest', 3), ('android.media.cts.MediaMuxerTest', 3), ('android.hardware.camera2.cts.CameraDeviceTest', 3), ('android.mediastress.cts.NativeMediaTest', 2), ('android.hardware.camera2.cts.FlashlightTest', 2), ('android.hardware.multiprocess.camera.cts.Camera2Activity', 1), ('com.android.cts.verifier.audio.USBRestrictRecordAActivity', 1), ('android.media.cts.MediaCodecPlayerTest', 1), ('android.mediastress.cts.HEVCR1080pAacLongPlayerTest', 1), ('android.mediastress.cts.H264R1080pAacLongPlayerTest', 1), ('android.appsecurity.cts.AppDataIsolationTests', 1), ('android.keystore.cts.CipherTest', 1), ('android.webkit.cts.WebSettingsTest', 1), ('android.app.stubs.shared.CloseSystemDialogsTestService', 1), ('android.media.cts.CamcorderProfileTest', 1), ('com.android.cts.isolatedsplitapp.SplitAppTest', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1), ('android.media.cts.EncoderTest', 1), ('com.android.cts.verifier.streamquality.StreamingVideoActivity', 1), ('android.text.cts.FontCoverageTest', 1)]"	"[('close', 15), ('getMediaType', 14), ('start', 9), ('setUp', 7), ('AtomicInteger', 7), ('getDevice', 6), ('tearDown', 5), ('getWidth', 5), ('getHeight', 5), ('size', 5), ('clear', 5), ('getSurface', 5), ('getCodec', 4), ('Object', 4), ('getLooper', 4), ('capacity', 4), ('hashCode', 4), ('getMediaDirString', 3), ('updateTitle', 3), ('onCreate', 3), ('onDestroy', 3), ('getProfile', 3), ('quitSafely', 3), ('run', 3), ('getOutputStream', 3), ('onPause', 2), ('onResume', 2), ('hasSeenError', 2), ('getContext', 2), ('getBitrate', 2), ('BlockingStateCallback', 2), ('build', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('release', 2), ('toString', 2), ('never', 2), ('onFrankenDevice', 2), ('getSampleTime', 2), ('supports3DES', 1), ('getInstrumentation', 1), ('getTargetContext', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('getNetworkImageHtml', 1), ('Binder', 1), ('asBinder', 1), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getAudioProfiles', 1), ('getSampleRate', 1), ('getChannels', 1), ('hasProfile', 1), ('getStatSize', 1), ('Configuration', 1), ('launchActivity', 1), ('getSimpleName', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('quit', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('hasFlash', 1), ('getName', 1), ('HashMap', 1), ('Builder', 1), ('toLanguageTag', 1), ('getCacheDir', 1), ('anyInt', 1), ('getArguments', 1), ('getActivity', 1), ('getSurfaceHolder', 1), ('MediaExtractor', 1), ('getSampleTrackIndex', 1), ('advance', 1), ('getCodecInfo', 1), ('getVideoCapabilities', 1), ('getUpper', 1), ('getInputBuffers', 1), ('getOutputBuffers', 1), ('getInputFormat', 1), ('BufferInfo', 1)]"	"[('CtsMediaTestCases', 30), ('CtsCameraTestCases', 6), ('CtsMediaStressTestCases', 4), ('CtsMediaV2TestCases', 3), ('CtsMediaParserTestCases', 3), ('CtsAppSecurityHostTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsTextTestCases', 1)]"	""	"android.media.cts.VideoDecoderPerfTest"	"BufferInfo"	"CtsMediaTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoDecoderPerfTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecUnitTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/NativeMediaTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/FlashlightTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/Camera2Activity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/H264R1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/shared/src/android/app/stubs/shared/CloseSystemDialogsTestService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/src/com/android/cts/isolatedsplitapp/SplitAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/shared/gen/android/app/stubs/shared/ICloseSystemDialogsTestsService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/streamquality/StreamingVideoActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1)]"	"[('(2,AAC,/android/hardware/multiprocess/camera/cts/Camera2Activity.java)', 1), ('(3,AAC,/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java)', 1), ('(1,AAC,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(3,AAC,/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java)', 1), ('(3,AAC,/android/mediav2/cts/CodecUnitTest.java)', 1), ('(11,AAC,/android/media/cts/MediaCodecTest.java)', 1), ('(3,AAC,/android/mediastress/cts/H264R1080pAacLongPlayerTest.java)', 1), ('(2,AAC,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(5,AAC,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(1,AAC,/android/keystore/cts/CipherTest.java)', 1), ('(1,AAC,/android/webkit/cts/WebSettingsTest.java)', 1), ('(1,AAC,/android/app/stubs/shared/CloseSystemDialogsTestService.java)', 1), ('(8,AAC,/android/media/cts/CamcorderProfileTest.java)', 1), ('(3,AAC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(15,AAC,/android/media/cts/MediaMuxerTest.java)', 1), ('(1,AAC,/com/android/cts/isolatedsplitapp/SplitAppTest.java)', 1), ('(8,AAC,)', 1), ('(12,AAC,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(30,AAC,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(4,AAC,/android/hardware/camera2/cts/FlashlightTest.java)', 1), ('(11,AAC,/android/media/cts/EncoderTest.java)', 1), ('(8,AAC,/com/android/cts/verifier/streamquality/StreamingVideoActivity.java)', 1), ('(1,AAC,/android/text/cts/FontCoverageTest.java)', 1), ('(21,AAC,/android/media/cts/MediaCodecListTest.java)', 1), ('(4,AAC,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(21,AAC,/android/media/cts/VideoDecoderPerfTest.java)', 1)]"	"[('([2:/android/hardware/multiprocess/camera/cts/Camera2Activity.java]:[AAC]:[2]:method_text:[       mErrorServiceConnection.stop();            mErrorServiceConnection = null;        }    }}])', 1), ('([3:/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java]:[AAC]:[3]:method_text:[ filter);            mUsbManager.requestPermission(theDevice, permissionIntent);        }    }}])', 1), ('([1:/android/media/cts/MediaCodecPlayerTest.java]:[AAC]:[1]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([3:/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java]:[AAC]:[3]:method_text:[bbb_full.ffmpeg.1920x1080.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[AAC]:[1]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[AAC]:[1]:method_text:[ull, null, null, MediaCodec.CONFIGURE_FLAG_ENCODE);            mCodec.release();        }       ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[AAC]:[1]:method_text:[t(), null, null, MediaCodec.CONFIGURE_FLAG_ENCODE);            mCodec.release();        }       ])', 1), ('([4:/android/media/cts/MediaCodecTest.java]:[AAC]:[4]:method_text:[s are thrown from MediaCodec     * methods when called in incorrect operational states.     */   ])', 1), ('([2:/android/media/cts/MediaCodecTest.java]:[AAC]:[2]:method_text:[ts:     * <br> dequeueInputBuffer() fails when encoder configured with an input Surface     */   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[AAC]:[1]:method_text:[   /**     * Tests creating two decoders for {@link #MIME_TYPE_AUDIO} at the same time.     */   ])', 1), ('([2:/android/media/cts/MediaCodecTest.java]:[AAC]:[2]:method_text:[(TAG, ""exception stopping/releasing codec"", e);                }            }        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecTest.java]:[AAC]:[2]:method_text:[077efecc0b24d02L, 0xace33c1e52e2fb4bL);    /**     * Tests MediaCodec.CryptoException     */   ])', 1), ('([3:/android/mediastress/cts/H264R1080pAacLongPlayerTest.java]:[AAC]:[3]:method_text:[bb_full.ffmpeg.1920x1080.mp4.libx264_10000kbps_30fps.libfaac_stereo_192kbps_48000Hz.mp4""    };   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[AAC]:[2]:method_text:[  getDevice().uninstallPackage(APPA_PKG);        getDevice().uninstallPackage(APPB_PKG);    }   ])', 1), ('([2:/android/mediastress/cts/NativeMediaTest.java]:[AAC]:[2]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([3:/android/mediastress/cts/NativeMediaTest.java]:[AAC]:[3]:method_text:[us); // null means time-out        Assert.assertEquals(expectAlive, status.booleanValue());    }}])', 1), ('([1:/android/keystore/cts/CipherTest.java]:[AAC]:[1]:method_text:[ close() throws Exception {            mLockCredential.close();        }    }    @Presubmit   ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[AAC]:[1]:method_text:[>.<minor>     * Chrome/<major>.<minor>.<branch>.<build>[ Mobile] Safari/<major>.<minor>     */   ])', 1), ('([1:/android/app/stubs/shared/CloseSystemDialogsTestService.java]:[AAC]:[1]:method_text:[nel(notificationChannel);        mNotificationManager.notify(notificationId, notification);    }}])', 1), ('([8:/android/media/cts/CamcorderProfileTest.java]:[AAC]:[8]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[AAC]:[1]:method_text:[sertParsers(MediaParser.PARSER_NAME_FLAC).supportMimeTypes(""audio/flac"", ""audio/x-flac"");    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[AAC]:[1]:method_text:[UNITS);        assertSupportFor(MediaParser.PARAMETER_TS_ENABLE_HDMV_DTS_AUDIO_STREAMS);    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[AAC]:[1]:method_text:[,                /* value= */ ""multi_pmt"",                /* valueIsIllegal= */ false);    }   ])', 1), ('([9:/android/media/cts/MediaMuxerTest.java]:[AAC]:[9]:method_text:[neAndVerify(source, outputFilePath, 1, 180, MediaMuxer.OutputFormat.MUXER_OUTPUT_MPEG_4);    }   ])', 1), ('([4:/android/media/cts/MediaMuxerTest.java]:[AAC]:[4]:method_text:[e frame     * drops as in b/63590381 and b/64949961 while B Frames encoding is enabled.     */   ])', 1), ('([2:/android/media/cts/MediaMuxerTest.java]:[AAC]:[2]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([1:/com/android/cts/isolatedsplitapp/SplitAppTest.java]:[AAC]:[1]:method_text:[   @Before    public void setUp() {        BaseActivity.setOverrideConfiguration(null);    }   ])', 1), ('([8:]:[AAC]:[8]:method_text:[ide methods. */  public boolean waitUntilReady(long timeoutMs) throws android.os.RemoteException;}])', 1), ('([12:/com/android/cts/verifier/camera/its/ItsService.java]:[AAC]:[12]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([30:/android/hardware/camera2/cts/CameraTestUtils.java]:[AAC]:[30]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([1:/android/hardware/camera2/cts/FlashlightTest.java]:[AAC]:[1]:method_text:[f (info.hasFlash()) {                mFlashCameraIdList.add(id);            }        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/FlashlightTest.java]:[AAC]:[3]:method_text:[ble e) {                    fail(e.getMessage());                }            }        }    }}])', 1), ('([11:/android/media/cts/EncoderTest.java]:[AAC]:[11]:method_text:[            muxer.stop();            muxer.release();            muxer = null;        }    }}])', 1), ('([8:/com/android/cts/verifier/streamquality/StreamingVideoActivity.java]:[AAC]:[8]:method_text:[ {                    urlConnection.disconnect();                }            }        }    }}])', 1), ('([1:/android/text/cts/FontCoverageTest.java]:[AAC]:[1]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[AAC]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([8:/android/media/cts/MediaCodecListTest.java]:[AAC]:[8]:method_text:[        assertNotNull(""Profile "" + profile + "" must be supported."", codecName);        }    }   ])', 1), ('([7:/android/media/cts/MediaCodecListTest.java]:[AAC]:[7]:method_text:[        assertNotNull(""Profile "" + profile + "" must be supported."", codecName);        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AAC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[1]:method_text:[ure the stable frame rate is guaranteed for the given     * settings.</li>     * </ul>     */   ])', 1), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[2]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[AAC]:[1]:method_text:[_CLOSED, CAMERA_CLOSE_TIMEOUT_MS);                cam1Cb = null;            }        }    }   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[ = {        ""bbb_s1_320x240_mp4_h264_mp2_800kbps_30fps_aac_lc_5ch_240kbps_44100hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[80 = {        ""bbb_s1_720x480_mp4_h264_mp3_2mbps_30fps_aac_lc_5ch_320kbps_48000hz.mp4"",    };   ])', 1), ('([3:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[3]:method_text:[,        ""bbb_s3_1280x720_mp4_h264_mp32_8mbps_60fps_aac_he_v2_6ch_144kbps_44100hz.mp4"",    };   ])', 1), ('([4:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[4]:method_text:[        ""bbb_s2_1920x1080_mp4_h264_mp42_20mbps_60fps_aac_he_v2_5ch_160kbps_48000hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[x0144 = {        ""video_176x144_3gp_h263_300kbps_12fps_aac_stereo_128kbps_22050hz.3gp"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[x0288 = {        ""video_352x288_3gp_h263_300kbps_12fps_aac_stereo_128kbps_22050hz.3gp"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[ {        ""bbb_s1_352x288_mp4_hevc_mp2_600kbps_30fps_aac_he_stereo_96kbps_48000hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[ {        ""bbb_s1_640x360_mp4_hevc_mp21_1600kbps_30fps_aac_he_6ch_288kbps_44100hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[= {        ""bbb_s1_720x480_mp4_hevc_mp3_1600kbps_30fps_aac_he_6ch_240kbps_48000hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[ {        ""bbb_s4_1280x720_mp4_hevc_mp31_4mbps_30fps_aac_he_stereo_80kbps_32000hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[ {        ""bbb_s2_1920x1080_mp4_hevc_mp41_10mbps_60fps_aac_lc_6ch_384kbps_22050hz.mp4"",    };   ])', 1), ('([2:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[2]:method_text:["",        ""bbb_s2_3840x2160_mp4_hevc_mp51_20mbps_60fps_aac_lc_6ch_384kbps_32000hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[0144 = {        ""video_176x144_mp4_mpeg4_300kbps_25fps_aac_stereo_128kbps_44100hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[0360 = {        ""video_480x360_mp4_mpeg4_860kbps_25fps_aac_stereo_128kbps_44100hz.mp4"",    };   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[AAC]:[1]:method_text:[20 = {        ""video_1280x720_mp4_mpeg4_1000kbps_25fps_aac_stereo_128kbps_44100hz.mp4"",    };   ])', 1)]"	""	""	"[('AAC', 57)]"	"[('[android.hardware.multiprocess.camera.cts.Camera2Activity getCameraIdListNoLazy CtsCameraTestCases]', 1), ('[com.android.cts.verifier.audio.USBRestrictRecordAActivity LocalClickListener None]', 1), ('[android.media.cts.MediaCodecPlayerTest MediaCodecPlayerTest CtsMediaTestCases]', 1), ('[android.mediav2.cts.CodecUnitTest TestApi CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureForNullFormat CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.CodecUnitTest testConfigureForEmptyFormat CtsMediaV2TestCases]', 1), ('[android.media.cts.MediaCodecTest testAsyncStopAndReset CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testDecodeShortInput CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testCreateAudioDecoderAndEncoder CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testCryptoInfoPattern CtsMediaTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest testDefaultPlay CtsMediaStressTestCases]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked CtsKeystoreTestCases]', 1), ('[android.webkit.cts.WebSettingsTest WebSettingsTest CtsWebkitTestCases]', 1), ('[android.app.stubs.shared.CloseSystemDialogsTestService isRotationFrozen None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testGetParserNamesByMimeType CtsMediaParserTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testSupportsParameter CtsMediaParserTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testSetKnownParameters CtsMediaParserTestCases]', 1), ('[android.media.cts.MediaMuxerTest SKIP_testVideoAudio CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testWebmOutput CtsMediaTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[com.android.cts.isolatedsplitapp.SplitAppTest AppContextTestRule None]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[android.hardware.camera2.cts.FlashlightTest testTorchModeExceptions CtsCameraTestCases]', 1), ('[android.media.cts.EncoderTest testAACEncoders CtsMediaTestCases]', 1), ('[com.android.cts.verifier.streamquality.StreamingVideoActivity setPassFailButtonClickListeners None]', 1), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testFindDecoderWithAacProfile CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testFindEncoderWithAacProfile CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testAudioRestrictionSingleDevice CtsCameraTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest currentTimeMillis CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testAvcOther3Perf0320x0240 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testAvcOther3Perf0720x0480 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testAvcOther3Perf1280x0720 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testAvcOther3Perf1920x1080 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testH263Other1Perf0176x0144 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testH263Other1Perf0352x0288 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testHevcOther3Perf0352x0288 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testHevcOther3Perf0640x0360 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testHevcOther3Perf0720x0480 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testHevcOther3Perf1280x0720 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testHevcOther3Perf1920x1080 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testHevcOther3Perf3840x2160 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testMpeg4Other3Perf0176x0144 CtsMediaTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest testMpeg4Other3Perf0480x0360 CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-14"	"9.9.3/C-1-14"	"09090300.670114"	"""C-1-14] MUST NOT use the same File Based Encryption (FBE) keys or subkeys for different cryptographic purposes (e.g. for both encryption and key derivation, or for two different encryption algorithms)."""	""	""	"FBE"	""	""	""	""	"[('android.appsecurity.cts.DirectBootHostTest', 5), ('android.appsecurity.cts.AppDataIsolationTests', 3), ('android.cts.statsdatom.bluetooth.BluetoothStatsTests', 2), ('android.keystore.cts.CipherTest', 1), ('android.cts.statsdatom.statsd.DeviceAtomTestCase', 1), ('android.cts.statsdatom.statsd.UidAtomTests', 1), ('android.renderscript.cts.generated.TestCross', 1), ('android.security.cts.Poc17_09', 1), ('android.renderscript.cts.generated.TestNativeExp', 1), ('android.view.inputmethod.cts.InputMethodInfoTest', 1), ('com.android.cts.managedprofile.ResetPasswordWithTokenTest', 1), ('com.android.cts.verifier.streamquality.StreamingVideoActivity', 1), ('android.text.cts.FontCoverageTest', 1), ('com.android.cts.devicepolicy.BaseDevicePolicyTest', 1), ('android.keystore.cts.SignatureTest', 1), ('android.graphics.cts.ColorTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi30', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1), ('android.cts.statsdatom.wifi.WifiStatsTests', 1), ('android.content.cts.ContextTest', 1), ('android.uirendering.cts.testclasses.ColorFilterAlphaTest', 1), ('android.cts.statsdatom.lib.AtomTestUtils', 1), ('android.location.cts.gnss.GnssMeasurementWhenNoLocationTest', 1), ('android.cts.statsdatom.statsd.AtomTestCase', 1), ('android.provider.cts.contacts.hostside.ShadowCallLogTest', 1), ('android.hdmicec.cts.audio.HdmiCecSystemAudioModeTest', 1), ('android.renderscript.cts.generated.TestMad', 1)]"	"[('destroy', 86), ('toString', 62), ('getDevice', 22), ('StringBuilder', 20), ('setUp', 15), ('tearDown', 12), ('hashCode', 5), ('getInstrumentation', 4), ('ArgumentsFloatFloat', 4), ('ArgumentsHalfHalf', 4), ('ArgumentsFloatFloatFloatFloat', 4), ('ArgumentsHalfHalfHalfHalf', 4), ('getContext', 3), ('getTargetContext', 3), ('getBuild', 3), ('ArgumentsFloatNFloatNFloatN', 2), ('ArgumentsHalfNHalfNHalfN', 2), ('getName', 2), ('createMultiRectBitmap', 2), ('Paint', 2), ('wakeUpDevice', 2), ('supports3DES', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('checkCrossFloat3Float3Float3', 1), ('checkCrossFloat4Float4Float4', 1), ('checkCrossHalf3Half3Half3', 1), ('checkCrossHalf4Half4Half4', 1), ('checkNativeExpFloatFloat', 1), ('checkNativeExpFloat2Float2', 1), ('checkNativeExpFloat3Float3', 1), ('checkNativeExpFloat4Float4', 1), ('checkNativeExpHalfHalf', 1), ('checkNativeExpHalf2Half2', 1), ('checkNativeExpHalf3Half3', 1), ('checkNativeExpHalf4Half4', 1), ('getBytes', 1), ('HashMap', 1), ('Builder', 1), ('build', 1), ('toLanguageTag', 1), ('getMaxNumberOfUsersSupported', 1), ('getInstalledPackageNames', 1), ('resourceColor', 1), ('getResources', 1), ('TypedValue', 1), ('getDeclaredFields', 1), ('getDeclaredAnnotations', 1), ('configs', 1), ('getActivity', 1), ('getWindow', 1), ('CanvasClient', 1), ('getAbi', 1), ('ordinal', 1), ('cect_11_2_15_6_SystemAudioModeOffBeforeStandby', 1), ('sendSystemAudioModeInitiation', 1), ('sendDeviceToSleep', 1), ('checkMadFloatFloatFloatFloat', 1), ('checkMadFloat2Float2Float2Float2', 1), ('checkMadFloat3Float3Float3Float3', 1), ('checkMadFloat4Float4Float4Float4', 1), ('checkMadHalfHalfHalfHalf', 1), ('checkMadHalf2Half2Half2Half2', 1), ('checkMadHalf3Half3Half3Half3', 1), ('checkMadHalf4Half4Half4Half4', 1)]"	"[('CtsAppSecurityHostTestCases', 8), ('CtsStatsdAtomHostTestCases', 7), ('CtsRenderscriptTestCases', 3), ('CtsDevicePolicyManagerTestCases', 3), ('CtsKeystoreTestCases', 2), ('CtsSecurityBulletinHostTestCases', 1), ('CtsInputMethodTestCases', 1), ('CtsTextTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsContentTestCases', 1), ('CtsUiRenderingTestCases', 1), ('CtsLocationGnssTestCases', 1), ('CtsCallLogTestCases', 1), ('CtsHdmiCecHostTestCases', 1)]"	""	"android.renderscript.cts.generated.TestMad"	"toString"	"CtsRenderscriptTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/DeviceAtomTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/UidAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestCross.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_09.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeExp.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/streamquality/StreamingVideoActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/SignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ColorTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/wifi/WifiStatsTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContextTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/lib/AtomTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/AtomTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/calllog/src/android/provider/cts/contacts/hostside/ShadowCallLogTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestMad.java', 1)]"	"[('(12,FBE,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(2,FBE,/android/keystore/cts/CipherTest.java)', 1), ('(1,FBE,/android/cts/statsdatom/statsd/DeviceAtomTestCase.java)', 1), ('(1,FBE,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(1,FBE,/android/renderscript/cts/generated/TestCross.java)', 1), ('(8,FBE,/android/security/cts/Poc17_09.java)', 1), ('(1,FBE,/android/renderscript/cts/generated/TestNativeExp.java)', 1), ('(5,FBE,/android/view/inputmethod/cts/InputMethodInfoTest.java)', 1), ('(1,FBE,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(1,FBE,/com/android/cts/verifier/streamquality/StreamingVideoActivity.java)', 1), ('(2,FBE,/android/text/cts/FontCoverageTest.java)', 1), ('(2,FBE,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(1,FBE,/android/keystore/cts/SignatureTest.java)', 1), ('(3,FBE,/android/graphics/cts/ColorTest.java)', 1), ('(1,FBE,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java)', 1), ('(1,FBE,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(1,FBE,/android/cts/statsdatom/wifi/WifiStatsTests.java)', 1), ('(2,FBE,/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java)', 1), ('(2,FBE,/android/content/cts/ContextTest.java)', 1), ('(1,FBE,/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java)', 1), ('(17,FBE,/android/appsecurity/cts/DirectBootHostTest.java)', 1), ('(2,FBE,/android/cts/statsdatom/lib/AtomTestUtils.java)', 1), ('(3,FBE,/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java)', 1), ('(2,FBE,/android/cts/statsdatom/statsd/AtomTestCase.java)', 1), ('(8,FBE,/android/provider/cts/contacts/hostside/ShadowCallLogTest.java)', 1), ('(1,FBE,/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java)', 1), ('(2,FBE,/android/renderscript/cts/generated/TestMad.java)', 1)]"	"[('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[2]:method_text:[  getDevice().uninstallPackage(APPA_PKG);        getDevice().uninstallPackage(APPB_PKG);    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[          }                getDevice().waitForDeviceAvailable();            }        }    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[    return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }}])', 1), ('([2:/android/keystore/cts/CipherTest.java]:[FBE]:[2]:method_text:[ close() throws Exception {            mLockCredential.close();        }    }    @Presubmit   ])', 1), ('([1:/android/cts/statsdatom/statsd/DeviceAtomTestCase.java]:[FBE]:[1]:method_text:[tings put global netstats_combine_subtype_enabled ""                + (enable ? ""1"" : ""0""));    }}])', 1), ('([1:/android/cts/statsdatom/statsd/UidAtomTests.java]:[FBE]:[1]:method_text:[e_package_whitelist %s"",                        origWhitelist));            }        }    }   ])', 1), ('([1:/android/renderscript/cts/generated/TestCross.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/security/cts/Poc17_09.java]:[FBE]:[8]:method_text:[                             )==139);    }    /**     * b/38195738     * b/36590192     */   ])', 1), ('([1:/android/renderscript/cts/generated/TestNativeExp.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[FBE]:[5]:method_text:[() : """";            }        } catch (IOException e) {            return """";        }    }   ])', 1), ('([1:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[FBE]:[1]:method_text:[ordBeforeUnlock} and will be called by the hostside logic     * before it is exercised.     */   ])', 1), ('([1:/com/android/cts/verifier/streamquality/StreamingVideoActivity.java]:[FBE]:[1]:method_text:[ {                    urlConnection.disconnect();                }            }        }    }}])', 1), ('([2:/android/text/cts/FontCoverageTest.java]:[FBE]:[2]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([2:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[FBE]:[2]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([1:/android/keystore/cts/SignatureTest.java]:[FBE]:[1]:method_text:[ntext() {        return InstrumentationRegistry.getInstrumentation().getTargetContext();    }   ])', 1), ('([3:/android/graphics/cts/ColorTest.java]:[FBE]:[3]:method_text:[droid.R.color"",                colors.length + systemColors.length, numPublicApiColors);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi30.java]:[FBE]:[1]:method_text:[ws Exception {        runDeviceTestsAsUser(DEVICE_ADMIN_PKG, className, testName, mUserId);    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[FBE]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([1:/android/cts/statsdatom/wifi/WifiStatsTests.java]:[FBE]:[1]:method_text:[er()).isEqualTo(stateOn);        assertThat(a1.getState().getNumber()).isEqualTo(stateOff);    }}])', 1), ('([1:/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java]:[FBE]:[1]:method_text:[t(a1.getIsFirstMatch()).isFalse();        assertThat(a1.getIsOpportunistic()).isFalse();    }   ])', 1), ('([1:/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java]:[FBE]:[1]:method_text:[at(a1.getIsFirstMatch()).isFalse();        assertThat(a1.getIsOpportunistic()).isTrue();    }   ])', 1), ('([2:/android/content/cts/ContextTest.java]:[FBE]:[2]:method_text:[ that apps can go through a     * backup/restore cycle between FBE and non-FBE devices.     */   ])', 1), ('([1:/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java]:[FBE]:[1]:method_text:[R_COLOR, mConfig.mode));            canvas.drawBitmap(mBitmap, 0, 0, mPaint);        }    };   ])', 1), ('([1:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[1]:method_text:[allPackage(OTHER_PKG);    }    /**     * Automotive devices MUST support native FBE.     */   ])', 1), ('([4:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[4]:method_text:[equals(getFbeMode()));    }    /**     * If device has native FBE, verify lifecycle.     */   ])', 1), (""([3:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[3]:method_text:[    /**     * If device doesn't have native FBE, enable emulation and verify lifecycle.     */   ])"", 1), (""([3:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[3]:method_text:[ATED);    }    /**     * If device doesn't have native FBE, verify normal lifecycle.     */   ])"", 1), ('([6:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[6]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 1), ('([2:/android/cts/statsdatom/lib/AtomTestUtils.java]:[FBE]:[2]:method_text:[        data.subList(lastStateIdx + 1, data.size()).clear();    }    private AtomTestUtils() {}}])', 1), ('([3:/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java]:[FBE]:[3]:method_text:[ {                TestUtils.setAirplaneModeOn(getContext(), false);            }        }    }}])', 1), ('([2:/android/cts/statsdatom/statsd/AtomTestCase.java]:[FBE]:[2]:method_text:[estamp is not truncated"")                .that(timestampNs % fiveMinutesInNs).isEqualTo(0);    }}])', 1), ('([8:/android/provider/cts/contacts/hostside/ShadowCallLogTest.java]:[FBE]:[8]:method_text:[ != null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([1:/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java]:[FBE]:[1]:method_text:[ly to a <Give System Audio Mode Status>    * message when the System Audio Mode is ""Off"".    */  ])', 1), ('([2:/android/renderscript/cts/generated/TestMad.java]:[FBE]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1)]"	""	""	"[('FBE', 34)]"	"[('[android.appsecurity.cts.AppDataIsolationTests testDirectBootModeWorks CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDirApi29 CtsAppSecurityHostTestCases]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked CtsKeystoreTestCases]', 1), ('[android.cts.statsdatom.statsd.DeviceAtomTestCase installTestApp CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testGpsScan CtsStatsdAtomHostTestCases]', 1), ('[android.security.cts.Poc17_09 testPocCve_2017_6983 CtsSecurityBulletinHostTestCases]', 1), ('[android.view.inputmethod.cts.InputMethodInfoTest testAtLeastOneEncryptionAwareInputMethodIsAvailable CtsInputMethodTestCases]', 1), ('[com.android.cts.verifier.streamquality.StreamingVideoActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isEmpty CtsDevicePolicyManagerTestCases]', 1), ('[android.cts.statsdatom.wifi.WifiStatsTests testWifiScanLogsStateChangedAtoms CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.bluetooth.BluetoothStatsTests testBleUnoptimizedScan CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.bluetooth.BluetoothStatsTests testBleOpportunisticScan CtsStatsdAtomHostTestCases]', 1), ('[android.content.cts.ContextTest testContextParams_Inherit CtsContentTestCases]', 1), ('[android.appsecurity.cts.DirectBootHostTest testAutomotiveNativeFbe CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNative CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootEmulated CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNone CtsAppSecurityHostTestCases]', 1), ('[android.cts.statsdatom.lib.AtomTestUtils getReportMetricListData CtsStatsdAtomHostTestCases]', 1), ('[android.location.cts.gnss.GnssMeasurementWhenNoLocationTest testGnssMeasurementWhenNoLocation CtsLocationGnssTestCases]', 1), ('[android.cts.statsdatom.statsd.AtomTestCase getReportList CtsStatsdAtomHostTestCases]', 1), ('[android.provider.cts.contacts.hostside.ShadowCallLogTest testDirectBootCallLog CtsCallLogTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.3  . Bluetooth"	"7.4.3"	"C-6-2"	"7.4.3/C-6-2"	"07040300.670602"	"""C-6-2] MUST gate Bluetooth access behind the android.permission.ACCESS_FINE_LOCATION. <h4 id=""744_near-field_communications"" """	""	""	"ACCESS_FINE_LOCATION android.permission.ACCESS"	""	""	""	""	"[('android.backup.cts.PermissionTest', 10), ('android.permission.cts.PermissionControllerTest', 8), ('android.permission2.cts.RestrictedPermissionsTest', 6), ('android.permission.cts.BackgroundPermissionsTest', 5), ('android.permission.cts.OneTimePermissionTest', 2), ('com.android.cts.deviceandprofileowner.PermissionsTest', 2), ('android.permission.cts.LocationAccessCheckTest', 2), ('com.android.cts.managedprofile.LauncherAppsTest', 1), ('test.java.com.android.bedstead.nene.packages.PackageTest', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('android.carrierapi.cts.NetworkScanApiTest', 1), ('com.android.cts.verifier.managedprovisioning.ByodHelperActivity', 1), ('android.telephony.cts.TelephonyManagerTest', 1), ('com.android.cts.verifier.camera.intents.CameraIntentsActivity', 1), ('com.android.cts.devicepolicy.PermissionUtils', 1), ('android.telephony.ims.cts.ImsServiceTest', 1), ('android.jobscheduler.cts.JobThrottlingTest', 1), ('android.telephony.ims.cts.EabControllerTest', 1), ('android.jobscheduler.cts.ConnectivityConstraintTest', 1)]"	"[('getContext', 12), ('getInstrumentation', 11), ('getUiAutomation', 7), ('getTargetContext', 5), ('getPackageManager', 5), ('setUp', 5), ('getName', 5), ('getIntent', 4), ('getStageIndex', 4), ('build', 3), ('getAction', 3), ('waitForBroadcast', 3), ('tearDown', 2), ('getSimpleName', 2), ('installApp', 2), ('uninstallApp', 2), ('Object', 2), ('createPublicVersionNotification', 2), ('Intent', 2), ('updateSuccessState', 2), ('getReceiverComponentName', 1), ('myUserId', 1), ('wakeUpScreen', 1), ('prepareDeviceForOneTime', 1), ('restoreDeviceForOneTime', 1), ('getPackageName', 1), ('start', 1), ('setUpOnce', 1), ('CommandBroadcastReceiver', 1), ('IntentFilter', 1), ('tearDownOnce', 1), ('shareUidBetweenRestrictedAndNotRestrictedApp', 1), ('getMainLooper', 1), ('Bundle', 1), ('StringBuilder', 1), ('hashCode', 1), ('toString', 1), ('click', 1), ('resetAppState', 1), ('BackupUtils', 1)]"	"[('CtsPermissionTestCases', 17), ('CtsBackupTestCases', 10), ('CtsPermission2TestCases', 6), ('CtsTelephonyTestCases', 3), ('CtsJobSchedulerTestCases', 2), ('CtsCarrierApiTestCases', 1)]"	""	"android.backup.cts.PermissionTest"	"setUp"	"CtsBackupTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/backup/src/android/backup/cts/PermissionTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/PermissionControllerTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/BackgroundPermissionsTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PermissionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/LocationAccessCheckTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/LauncherAppsTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/packages/PackageTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/NetworkScanApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/common/src/com/android/cts/devicepolicy/PermissionUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/JobThrottlingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/EabControllerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/ConnectivityConstraintTest.java', 1)]"	"[('(1,android.permission.ACCESS,/com/android/cts/managedprofile/LauncherAppsTest.java)', 1), ('(1,android.permission.ACCESS,/test/java/com/android/bedstead/nene/packages/PackageTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(5,ACCESS_FINE_LOCATION,/android/permission/cts/BackgroundPermissionsTest.java)', 1), ('(3,ACCESS_FINE_LOCATION,/android/permission/cts/OneTimePermissionTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/carrierapi/cts/NetworkScanApiTest.java)', 1), ('(6,ACCESS_FINE_LOCATION,/android/permission2/cts/RestrictedPermissionsTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java)', 1), ('(1,ACCESS_FINE_LOCATION,/com/android/cts/devicepolicy/PermissionUtils.java)', 1), ('(3,ACCESS_FINE_LOCATION,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(2,android.permission.ACCESS,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(11,ACCESS_FINE_LOCATION,/android/permission/cts/PermissionControllerTest.java)', 1), ('(2,android.permission.ACCESS,/android/telephony/ims/cts/EabControllerTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/jobscheduler/cts/ConnectivityConstraintTest.java)', 1), ('(20,ACCESS_FINE_LOCATION,/android/backup/cts/PermissionTest.java)', 1)]"	"[('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[       ACCESS_BACKGROUND_LOCATION)));        assertAllRestrictedPermissionWhitelisted();    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ions.singleton(ACCESS_FINE_LOCATION));        assertNoRestrictedPermissionWhitelisted();    }   ])', 2), ('([3:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[3]:method_text:[     });    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 2), ('([1:/com/android/cts/managedprofile/LauncherAppsTest.java]:[android.permission.ACCESS]:[1]:method_text:[ry.getInstrumentation().getUiAutomation()                .dropShellPermissionIdentity();    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/packages/PackageTest.java]:[android.permission.ACCESS]:[1]:method_text:[ntedContext();    private static final UserReference sUser = sTestApis.users().instrumented();   ])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[mation();    @After    public void uninstallTestApp() {        uninstallApp(APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ Make sure location switch-op is set if fine location with background access is granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[    * Make sure location switch-op is set if fine and coarse location access is granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[n switch-op is set if fine and coarse location with background access is     * granted.     */   ])', 1), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[).that(                getAppOp(APP_PKG, ACCESS_COARSE_LOCATION)).isEqualTo(MODE_ALLOWED));    }}])', 1), ('([1:/android/permission/cts/OneTimePermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ions_timeout_millis"",                        mOldOneTimePermissionTimeoutValue, false));    }   ])', 1), ('([2:/android/permission/cts/OneTimePermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[               mActivityManager.removeOnUidImportanceListener(this);            }        }    }}])', 1), ('([2:/android/carrierapi/cts/NetworkScanApiTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ radioAccessSpecifier;    }    /** Tests that the device properly requests a network scan. */   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[c static void tearDownOnce() {        getContext().unregisterReceiver(sCommandReceiver);    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 1), ('([2:/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ge = getString(messageId);        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();    }}])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ uiAutomation.grantRuntimePermission(packageName, permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 1), ('([2:/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[sButtonGoesToNextStage() {        findViewById(R.id.pass_button).setOnClickListener(this);    }}])', 1), ('([1:/com/android/cts/devicepolicy/PermissionUtils.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[break;            }        }        assertTrue(""Couldn\'t find any button"", foundButton);    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[er(mReceiver);        mDevice.removeWatcher(CRASH_WATCHER_ID);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ PERMISSION_DENIED,                PERMISSION_APP_PACKAGE_NAME, PERMISSIONS_ACTIVITY_NAME);    }}])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[    @After    public void locationUnbind() throws Throwable {        unbindService();    }   ])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[otification(true)), EXPECTED_TIMEOUT_MILLIS);    }    @SystemUserOnly(reason = ""b/172259935"")   ])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[android.permission.ACCESS]:[2]:method_text:[remove request disallowed status: "" + e);        }        overrideCarrierConfig(null);    }   ])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[sTrue();    }    private interface Condition {        boolean isTrue() throws Exception;    }}])', 1), ('([3:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[3]:method_text:[ions as permissionInfos        assertThat(numRuntimeGranted).isAtLeast(numInfosGranted);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ring>> result = revokePermissions(request, false);        assertThat(result).isEmpty();    }   ])', 1), ('([2:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[CCESS_FINE_LOCATION,                ACCESS_BACKGROUND_LOCATION, ACCESS_COARSE_LOCATION);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[LER_POLICY_VIOLATION, sContext.getMainExecutor()));        assertThat(result).isEmpty();    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[         singletonList(ACCESS_FINE_LOCATION));        revokePermissions(request, true);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[and after                    assertThat(numApps.get()).isAtLeast(1);                });    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ontroller.countPermissionApps(singletonList(ACCESS_FINE_LOCATION), -1, (n) -> { }, null);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[        sController.countPermissionApps(singletonList(ACCESS_FINE_LOCATION), 0, null, null);    }}])', 1), ('([2:/android/telephony/ims/cts/EabControllerTest.java]:[android.permission.ACCESS]:[2]:method_text:[imes--;        } while (retryTimes > 0 && Instant.now().getEpochSecond() < expirationTime);    }}])', 1), ('([1:/android/jobscheduler/cts/ConnectivityConstraintTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ptyMessageDelayed(MSG_CHECK_ACTIVE_NETWORK, 5000);                }            }        }    }}])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[App(APP22);    }    /**     * Test backup and restore of regular runtime permission.     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[  });    }    /**     * Test backup and restore of pre-M regular runtime permission.     */   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[     });    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[TION)));    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 1), ('([3:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[3]:method_text:[e     * TODO: b/178522459 to fix the test once the foundamental issue has been fixed.     *///   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ON)));//    }    /**     * Test backup and restore of foreground runtime permission.     */   ])', 1), ('([1:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[INE_LOCATION));        });    }    /**     * Restore if the permission was reviewed     */   ])', 1), ('([2:/android/backup/cts/PermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[ app));        } catch (Exception e) {            throw new RuntimeException(e);        }    }}])', 1)]"	""	""	"[('ACCESS_FINE_LOCATION', 43), ('android.permission.ACCESS', 4)]"	"[('[com.android.cts.managedprofile.LauncherAppsTest dropShellPermissionIdentity None]', 1), ('[test.java.com.android.bedstead.nene.packages.PackageTest TestApis None]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[android.permission.cts.BackgroundPermissionsTest uninstallTestApp CtsPermissionTestCases]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfOnlyFineLocPermIsGranted CtsPermissionTestCases]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfFineAndBgLocPermIsGranted CtsPermissionTestCases]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfFineAndCoarseLocPermIsGranted CtsPermissionTestCases]', 1), ('[android.permission.cts.BackgroundPermissionsTest appOpIsSetIfFineCoarseAndBgLocPermIsGranted CtsPermissionTestCases]', 1), ('[android.permission.cts.OneTimePermissionTest testStickyServiceMaintainsPermissionOnRestart CtsPermissionTestCases]', 1), ('[android.carrierapi.cts.NetworkScanApiTest werePreconditionsSatisfied CtsCarrierApiTestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest isTrue CtsPermission2TestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.ByodHelperActivity isProfileOwner None]', 1), ('[android.telephony.cts.TelephonyManagerTest testHasCarrierPrivilegesViaCarrierConfigs CtsTelephonyTestCases]', 1), ('[com.android.cts.verifier.camera.intents.CameraIntentsActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest PermissionBroadcastReceiver None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testStateOfSensorsRelatedPermissionsCannotBeRead None]', 1), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName CtsPermissionTestCases]', 1), ('[android.permission.cts.LocationAccessCheckTest notificationIsShownAgainAfterClear CtsPermissionTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testRcsPublishWithAuthorizedErrorResponse CtsTelephonyTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictingStopReason_Doze CtsJobSchedulerTestCases]', 1), ('[android.permission.cts.PermissionControllerTest OnRevokeRuntimePermissionsCallback CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsDoNotAlreadyRevokedPermission CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsDryRunForegroundPermission CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsPolicyViolationFromWrongPackage CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsWithNullPkg CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest countPermissionAppsGranted CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest countPermissionAppsInvalidFlags CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest countPermissionAppsNullCallback CtsPermissionTestCases]', 1), ('[android.telephony.ims.cts.EabControllerTest testRequestExpiredAvailabilities CtsTelephonyTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest testExpeditedJobDoesNotBypassSimultaneousFirewalls_withDataSaver CtsJobSchedulerTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantDeniedRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantDeniedRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testNoTriStateRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testNoTriStateRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundAndBackgroundRuntimePermission CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testGrantForegroundAndBackgroundRuntimePermission22 CtsBackupTestCases]', 1), ('[android.backup.cts.PermissionTest testDelayedRestore CtsBackupTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"3.8.1  . Multi"	"3.8.1"	"C-3-5"	"3.8.1/C-3-5"	"03080100.670305"	"""C-3-5] MUST provide a user affordance to block an app from displaying in PIP mode; the AOSP implementation meets this requirement by having controls in the notification shade."""	""	""	"PIP"	""	""	""	""	"[('android.server.wm.KeyguardLockedTests', 6), ('android.os.cts.ParcelFileDescriptorProcessTest', 5), ('android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests', 3), ('android.opengl2.cts.primitive.GLPrimitiveBenchmark', 3), ('android.renderscript.cts.DebugContext', 3), ('android.app.usage.cts.UsageStatsTest', 3), ('android.app.cts.PipNotSupportedActivityTest', 2), ('android.content.cts.MockContentProvider', 1), ('com.android.cts.documentprovider.MyDocumentsProvider', 1), ('android.os.cts.SeccompTest', 1), ('com.android.cts.verifier.audio.SoundPlayerObject', 1), ('android.signature.cts.tests.ApiPresenceCheckerTest', 1), ('android.server.wm.app.AlwaysFocusablePipActivity', 1), ('com.android.cts.releaseparser.ApkParser', 1), ('android.cts.statsdatom.statsd.UidAtomTests', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('android.signature.cts.tests.ApiComplianceCheckerTest', 1), ('com.android.cts.verifier.audio.HifiUltrasoundTestActivity', 1), ('com.android.cts.apicoverage.ApiCoverage', 1), ('android.hardware.camera2.cts.BurstCaptureTest', 1), ('android.server.wm.app.AssistantActivity', 1), ('android.musicrecognition.cts.MusicRecognitionManagerTest', 1), ('android.adb.cts.AdbHostTest', 1), ('android.signature.cts.AnnotationChecker', 1), ('android.webkit.cts.MockContentProvider', 1), ('com.android.cts.verifier.audio.WavAnalyzer', 1), ('com.android.cts.apicoverage.CtsApiCoverage', 1), ('com.android.cts.verifier.usb.mtp.MtpHostTestActivity', 1), ('android.hardware.camera2.cts.helpers.StaticMetadat', 1), ('android.signature.cts.ApiComplianceChecker', 1)]"	"[('getContext', 11), ('close', 8), ('getPathSegments', 7), ('AtomicInteger', 7), ('start', 7), ('getBytes', 6), ('setUp', 5), ('crashOnLaunchIfNeeded', 5), ('getContentResolver', 5), ('clear', 5), ('Object', 5), ('getIntent', 5), ('onCreate', 4), ('newRow', 4), ('values', 4), ('run', 4), ('getLooper', 4), ('capacity', 4), ('printUsage', 4), ('println', 4), ('getWritableDatabase', 3), ('flush', 3), ('resetRoots', 3), ('toLowerCase', 3), ('FileNotFoundException', 3), ('printStackTrace', 3), ('quitSafely', 3), ('getOutputStream', 3), ('getName', 3), ('myPid', 2), ('getReadableDatabase', 2), ('SQLiteQueryBuilder', 2), ('getFileDescriptor', 2), ('size', 2), ('makeBasic', 2), ('toBundle', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('getInstrumentation', 2), ('checkDeferred', 2), ('getAbsoluteClassName', 2), ('supportsSecureLock', 1), ('MockContentProvider', 1), ('ContentValues', 1), ('moveToNext', 1), ('Doc', 1), ('getAndIncrement', 1), ('createPipe', 1), ('notifyAll', 1), ('wait', 1), ('getIntentSender', 1), ('ByteArrayOutputStream', 1), ('toByteArray', 1), ('SoundPlayerObject', 1), ('getCurrentResId', 1), ('getChannelCount', 1), ('BufferInfo', 1), ('interrupted', 1), ('availableToRead', 1), ('getSampleTime', 1), ('advance', 1), ('rewind', 1), ('GLPrimitiveBenchmark', 1), ('getType', 1), ('setAdditionalInfo', 1), ('getFileEntryBuilder', 1), ('getAppInfo', 1), ('getExternalApiPackage', 1), ('prase', 1), ('getSimpleName', 1), ('BlockingStateCallback', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('build', 1), ('onDestroy', 1), ('quit', 1), ('getWidth', 1), ('getHeight', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('getPackageName', 1), ('WindowManagerStateHelper', 1), ('getPackages', 1), ('resolveSuperClasses', 1), ('entrySet', 1), ('getValue', 1), ('Intent', 1), ('enterPictureInPictureMode', 1), ('getAllClasses', 1), ('toString', 1), ('asShortBuffer', 1), ('doWork', 1), ('FilenameFilter', 1), ('PackageFilter', 1), ('getAeModeName', 1), ('getAfModeName', 1), ('checkQueued', 1), ('getClassType', 1), ('toSignatureString', 1)]"	"[('CtsWindowManagerDeviceTestCases', 9), ('CtsOpenGlPerf2TestCases', 3), ('CtsRenderscriptTestCases', 3), ('CtsUsageStatsTestCases', 3), ('CtsAppTestCases', 2), ('CtsContentTestCases', 1), ('CtsStatsdAtomHostTestCases', 1), ('CtsCameraTestCases', 1), ('CtsMusicRecognitionTestCases', 1), ('CtsAdbHostTestCases', 1), ('CtsWebkitTestCases', 1)]"	""	"android.os.cts.ParcelFileDescriptorProcessTest"	"getAbsoluteClassName"	""	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/ParcelFileDescriptorProcessTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/openglperf2/src/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/DebugContext.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/PipNotSupportedActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/MockContentProvider.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/DocumentProvider/src/com/android/cts/documentprovider/MyDocumentsProvider.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/SeccompTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/SoundPlayerObject.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/tests/src/android/signature/cts/tests/ApiPresenceCheckerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/AlwaysFocusablePipActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/ApkParser.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/UidAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/tests/src/android/signature/cts/tests/ApiComplianceCheckerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/ApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/AssistantActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/musicrecognition/src/android/musicrecognition/cts/MusicRecognitionManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adb/src/android/adb/cts/AdbHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/lib/common/src/android/signature/cts/AnnotationChecker.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/MockContentProvider.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/WavAnalyzer.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/usb/mtp/MtpHostTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/StaticMetadata.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/lib/common/src/android/signature/cts/ApiComplianceChecker.java', 1)]"	"[('(50,PIP,/android/server/wm/KeyguardLockedTests.java)', 1), ('(5,PIP,/android/content/cts/MockContentProvider.java)', 1), ('(14,PIP,/android/app/cts/PipNotSupportedActivityTest.java)', 1), ('(47,PIP,/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java)', 1), ('(7,PIP,/com/android/cts/documentprovider/MyDocumentsProvider.java)', 1), ('(6,PIP,/android/os/cts/SeccompTest.java)', 1), ('(15,PIP,/com/android/cts/verifier/audio/SoundPlayerObject.java)', 1), ('(4,PIP,/android/signature/cts/tests/ApiPresenceCheckerTest.java)', 1), ('(6,PIP,/android/server/wm/app/AlwaysFocusablePipActivity.java)', 1), ('(8,PIP,/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java)', 1), ('(20,PIP,/com/android/cts/releaseparser/ApkParser.java)', 1), ('(4,PIP,/android/renderscript/cts/DebugContext.java)', 1), ('(5,PIP,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(5,PIP,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(28,PIP,/android/app/usage/cts/UsageStatsTest.java)', 1), ('(1,PIP,/android/signature/cts/tests/ApiComplianceCheckerTest.java)', 1), ('(11,PIP,/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java)', 1), ('(6,PIP,/com/android/cts/apicoverage/ApiCoverage.java)', 1), ('(7,PIP,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(3,PIP,/android/server/wm/app/AssistantActivity.java)', 1), ('(5,PIP,/android/musicrecognition/cts/MusicRecognitionManagerTest.java)', 1), ('(1,PIP,/android/adb/cts/AdbHostTest.java)', 1), ('(1,PIP,/android/signature/cts/AnnotationChecker.java)', 1), ('(4,PIP,/android/webkit/cts/MockContentProvider.java)', 1), ('(32,PIP,/com/android/cts/verifier/audio/WavAnalyzer.java)', 1), ('(10,PIP,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(5,PIP,/com/android/cts/verifier/usb/mtp/MtpHostTestActivity.java)', 1), ('(9,PIP,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(1,PIP,/android/signature/cts/ApiComplianceChecker.java)', 1), ('(11,PIP,/android/os/cts/ParcelFileDescriptorProcessTest.java)', 1)]"	"[('([10:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[10]:method_text:[tKeyguardShowingAndNotOccluded();        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 2), ('([7:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[7]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([12:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[12]:method_text:[t contain pinned stack."", WINDOWING_MODE_PINNED,                ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([10:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[10]:method_text:[SHOW_WHEN_LOCKED_ACTIVITY, true);        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIP]:[1]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([5:/android/content/cts/MockContentProvider.java]:[PIP]:[5]:method_text:[xt context) {        return context.getFileStreamPath(""MockContentProvider.crashonlaunch"");    }}])', 1), ('([6:/android/app/cts/PipNotSupportedActivityTest.java]:[PIP]:[6]:method_text:[Up();        mInstrumentation = getInstrumentation();        mActivity = getActivity();    }   ])', 1), ('([8:/android/app/cts/PipNotSupportedActivityTest.java]:[PIP]:[8]:method_text:[ctureInPictureMode());            }        });        mInstrumentation.waitForIdleSync();    }}])', 1), ('([2:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[PIP]:[2]:method_text:[TestBase {    @Before    public void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([27:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[PIP]:[27]:method_text:[Sequence(CallbackTrackingActivity.class, getLifecycleLog(),                ""finishPip"");    }   ])', 1), ('([18:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[PIP]:[18]:method_text:[ackingActivity.class, ON_TOP_POSITION_GAINED)),                ""finishAlwaysFocusablePip"");    }}])', 1), ('([7:/com/android/cts/documentprovider/MyDocumentsProvider.java]:[PIP]:[7]:method_text:[) {            bytes.write(buffer, 0, count);        }        return bytes.toByteArray();    }}])', 1), ('([6:/android/os/cts/SeccompTest.java]:[PIP]:[6]:method_text:[policy specified by installTestFilter().     */    private native static int getClockBootTime();}])', 1), ('([15:/com/android/cts/verifier/audio/SoundPlayerObject.java]:[PIP]:[15]:method_text:[ public void onPeriodicNotification(AudioTrack track) {        periodicNotification(track);    }}])', 1), ('([4:/android/signature/cts/tests/ApiPresenceCheckerTest.java]:[PIP]:[4]:method_text:[        }        void validate() {            Assert.assertTrue(failureSeen);        }    }}])', 1), ('([6:/android/server/wm/app/AlwaysFocusablePipActivity.java]:[PIP]:[6]:method_text:[dowingMode(WINDOWING_MODE_PINNED);        caller.startActivity(intent, options.toBundle());    }}])', 1), ('([1:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[PIP]:[1]:method_text:[ivity.class);    }    /**     * Runs the full OpenGL ES 2.0 pipeline test offscreen.     */   ])', 1), ('([4:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[PIP]:[4]:method_text:[  streamName);    }    /**     * Runs the full OpenGL ES 2.0 pipeline test onscreen.     */   ])', 1), ('([3:/android/opengl2/cts/primitive/GLPrimitiveBenchmark.java]:[PIP]:[3]:method_text:[                streamName);    }    /**     * Runs the pixel output test offscreen.     */   ])', 1), ('([20:/com/android/cts/releaseparser/ApkParser.java]:[PIP]:[20]:method_text:[tatic Logger getLogger() {        return Logger.getLogger(ApkParser.class.getSimpleName());    }}])', 1), ('([1:/android/renderscript/cts/DebugContext.java]:[PIP]:[1]:method_text:[    * Test whether we are detect out-of-bounds allocation accesses     * from a kernel.     */   ])', 1), ('([2:/android/renderscript/cts/DebugContext.java]:[PIP]:[2]:method_text:[  * 1D copy - things should work under DebugContext if given     * legitimate arguments     */   ])', 1), (""([1:/android/renderscript/cts/DebugContext.java]:[PIP]:[1]:method_text:[dead at this point so make sure it's not reused        RenderScript.releaseAllContexts();    }}])"", 1), ('([5:/android/cts/statsdatom/statsd/UidAtomTests.java]:[PIP]:[5]:method_text:[(entered).hasSize(1);    }    //Note: this test does not have uid, but must run on the device   ])', 1), ('([5:/com/android/cts/verifier/camera/its/ItsService.java]:[PIP]:[5]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([4:/android/app/usage/cts/UsageStatsTest.java]:[PIP]:[4]:method_text:[ity(clazz);        }    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([7:/android/app/usage/cts/UsageStatsTest.java]:[PIP]:[7]:method_text:[ty stops"", 0, stops);    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([17:/android/app/usage/cts/UsageStatsTest.java]:[PIP]:[17]:method_text:[t(0).getEventType());    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([1:/android/signature/cts/tests/ApiComplianceCheckerTest.java]:[PIP]:[1]:method_text:[     checker.checkDeferred();                },                excludedRuntimeClasses);    }   ])', 1), ('([11:/com/android/cts/verifier/audio/HifiUltrasoundTestActivity.java]:[PIP]:[11]:method_text:[ @Override    public void sendMessage(String message) {      publishProgress(message);    }  }}])', 1), ('([6:/com/android/cts/apicoverage/ApiCoverage.java]:[PIP]:[6]:method_text:[ApiPackage pkg = entry.getValue();            pkg.resolveSuperClasses(mPackages);        }    }}])', 1), ('([7:/android/hardware/camera2/cts/BurstCaptureTest.java]:[PIP]:[7]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([3:/android/server/wm/app/AssistantActivity.java]:[PIP]:[3]:method_text:[ngMode(WINDOWING_MODE_FULLSCREEN);        caller.startActivity(intent, options.toBundle());    }}])', 1), ('([5:/android/musicrecognition/cts/MusicRecognitionManagerTest.java]:[PIP]:[5]:method_text:[nly allowed when the caller of the api is also the owner of     * the override service.     */   ])', 1), ('([1:/android/adb/cts/AdbHostTest.java]:[PIP]:[1]:method_text:[e + ""\\n"");        }        assertTrue(""check_ms_os_desc failed:\\n"" + output, result == 0);    }}])', 1), ('([1:/android/signature/cts/AnnotationChecker.java]:[PIP]:[1]:method_text:[      if (annotatedMethods != null) {            annotatedMethods.remove(method);        }    }}])', 1), ('([4:/android/webkit/cts/MockContentProvider.java]:[PIP]:[4]:method_text:[        outputStream.close();            } catch (IOException e) {            }        }    }}])', 1), ('([32:/com/android/cts/verifier/audio/WavAnalyzer.java]:[PIP]:[32]:method_text:[ss of the analyzer.   */  public interface Listener {    void sendMessage(String message);  }}])', 1), ('([10:/com/android/cts/apicoverage/CtsApiCoverage.java]:[PIP]:[10]:method_text:[                 break;            }        } finally {            out.close();        }    }}])', 1), ('([5:/com/android/cts/verifier/usb/mtp/MtpHostTestActivity.java]:[PIP]:[5]:method_text:[ageResource(R.drawable.fs_indeterminate);                    break;            }        }    }}])', 1), ('([9:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[PIP]:[9]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([1:/android/signature/cts/ApiComplianceChecker.java]:[PIP]:[1]:method_text:[ } catch (ClassNotFoundException e) {                // Do nothing.            }        }    }}])', 1), ('([2:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[2]:method_text:[se();        assertEquals(-1, red.read());        assertEquals(null, red.checkError());    }   ])', 1), ('([2:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[2]:method_text:[();        assertEquals(-1, blue.read());        assertEquals(null, blue.checkError());    }   ])', 1), ('([3:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[3]:method_text:[ assertEquals(-1, blue.read());        assertContains(""OMG MUFFINS"", blue.checkError());    }   ])', 1), ('([3:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[3]:method_text:[quals(-1, blue.read());        assertContains(""Remote side is dead"", blue.checkError());    }   ])', 1), ('([1:/android/os/cts/ParcelFileDescriptorProcessTest.java]:[PIP]:[1]:method_text:[    assertContains(""BLUE RAWR"", red.checkError());        assertNull(blue.checkError());    }   ])', 1)]"	""	""	"[('PIP', 48)]"	"[('[android.server.wm.KeyguardLockedTests testEnterPipOverKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedActivityAndPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap CtsWindowManagerDeviceTestCases]', 1), ('[android.content.cts.MockContentProvider exists CtsContentTestCases]', 1), ('[android.app.cts.PipNotSupportedActivityTest PipNotSupportedActivityTest CtsAppTestCases]', 1), ('[android.app.cts.PipNotSupportedActivityTest testLaunchPipNotSupportedActivity CtsAppTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests testTopPositionNotSwitchedToPip CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests testTopPositionForAlwaysFocusableActivityInPip CtsWindowManagerDeviceTestCases]', 1), ('[android.os.cts.SeccompTest testViolateIsolatedServicePolicy None]', 1), ('[com.android.cts.verifier.audio.SoundPlayerObject isPlaying None]', 1), ('[android.signature.cts.tests.ApiPresenceCheckerTest TestClassesProvider None]', 1), ('[android.opengl2.cts.primitive.GLPrimitiveBenchmark testFullPipelineOffscreen CtsOpenGlPerf2TestCases]', 1), ('[android.opengl2.cts.primitive.GLPrimitiveBenchmark testFullPipelineOnscreen CtsOpenGlPerf2TestCases]', 1), ('[com.android.cts.releaseparser.ApkParser getTestCaseApiPackage None]', 1), ('[android.renderscript.cts.DebugContext testDebugContextI CtsRenderscriptTestCases]', 1), ('[android.renderscript.cts.DebugContext testDebugContextK CtsRenderscriptTestCases]', 1), ('[android.renderscript.cts.DebugContext testDebugContextRsAllocationCopy2D_Short_WrongD CtsRenderscriptTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testPictureInPictureState CtsStatsdAtomHostTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[android.app.usage.cts.UsageStatsTest isAppStandbyEnabled CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testPipActivity CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testPipActivity_StopToPause CtsUsageStatsTestCases]', 1), ('[com.android.cts.verifier.audio.HifiUltrasoundTestActivity dismiss None]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 1), ('[android.server.wm.app.AssistantActivity finish None]', 1), ('[android.musicrecognition.cts.MusicRecognitionManagerTest testRemovesBindersFromBundle CtsMusicRecognitionTestCases]', 1), ('[android.adb.cts.AdbHostTest testHasMsOsDescriptors CtsAdbHostTestCases]', 1), ('[android.signature.cts.AnnotationChecker isEmpty None]', 1), ('[com.android.cts.verifier.audio.WavAnalyzer isClipped None]', 1), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 1), ('[com.android.cts.verifier.usb.mtp.MtpHostTestActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.helpers.StaticMetadat getCharacteristics None]', 1), ('[android.signature.cts.ApiComplianceChecker isAnnotation None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPullPipeNormal None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPushPipeNormal None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPipeWriterError None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testPipeWriterCrash None]', 1), ('[android.os.cts.ParcelFileDescriptorProcessTest testSocketErrorAfterClose None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.1  . Media"	"5.1"	"H-1-4"	"5.1/H-1-4"	"05010000.720104"	"""[5.1/H-1-4] MUST support 6 instances of hardware video encoder sessions (AVC or HEVC) in any codec combination running concurrently at 720p resolution@30 fps.  | [5.1/H-1-4] MUST support 6 instances of hardware video encoder sessions (AVC, HEVC, VP9* or later) in any codec combination running concurrently at 720p resolution@30fps. *Only 2 instances are required if VP9 codec is present. """	""	""	"HEVC VP9 AVC"	""	""	""	""	"[('android.media.cts.MediaCodecListTest', 10), ('android.media.cts.MediaCodecTest', 5), ('android.media.cts.MediaMuxerTest', 5), ('android.mediav2.cts.CodecDecoderSurfaceTest', 3), ('android.media.cts.VideoDecoderRotationTest', 3), ('android.mediav2.cts.AdaptivePlaybackTest', 3), ('android.media.cts.DecodeEditEncodeTest', 2), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 2), ('android.media.cts.CamcorderProfileTest', 2), ('android.media.cts.DecodeAccuracyTestBase', 2), ('android.media.mediaparser.cts.MediaParserTest', 2), ('android.media.cts.MediaCodecPlayerTest', 1), ('android.mediastress.cts.HEVCR1080pAacLongPlayerTest', 1), ('android.mediav2.cts.CodecUnitTest', 1), ('android.mediastress.cts.NativeMediaTest', 1), ('android.location.cts.gnss.asn1.supl2.rrlp_components.CNAVclockModel', 1), ('android.mediadrm.cts.MediaDrmCodecTest', 1), ('android.media.cts.EncodeVirtualDisplayWithCompositionTest', 1), ('android.autofillservice.cts.activities.OptionalSaveActivity', 1), ('android.media.metrics.cts.MediaMetricsAtomHostSideTests', 1), ('android.location.cts.gnss.asn1.supl2.rrlp_components.NavModel_NAVKeplerianSet', 1), ('android.mediav2.cts.CodecListTest', 1), ('android.location.cts.gnss.suplClient.SuplRrlpController', 1)]"	"[('getMediaType', 28), ('release', 14), ('elapsedRealtime', 14), ('decoderRelease', 10), ('getCodec', 8), ('BufferInfo', 8), ('getProfile', 6), ('reset', 6), ('input', 6), ('getSimpleName', 5), ('getSampleTime', 5), ('advance', 5), ('clear', 5), ('start', 5), ('stop', 5), ('getArguments', 4), ('setUp', 4), ('getBitrate', 4), ('getWidth', 4), ('getHeight', 4), ('startDecoder', 4), ('queueDecoderInputBuffer', 4), ('dequeueDecoderOutputBuffer', 4), ('extractorRelease', 4), ('OutputManager', 3), ('queueEOS', 3), ('waitForAllOutputs', 3), ('limit', 3), ('getSampleFlags', 3), ('hasSeenError', 2), ('getContext', 2), ('getExternalCacheDir', 2), ('super', 2), ('getTag', 2), ('getDefaultDurationSeconds', 2), ('getRecommendedFileFormat', 2), ('getVideoProfiles', 2), ('getFrameRate', 2), ('getAudioProfiles', 2), ('getSampleRate', 2), ('getChannels', 2), ('hasProfile', 2), ('getActivity', 2), ('getApplicationContext', 2), ('getResources', 2), ('tearDown', 2), ('bringActivityToFront', 2), ('getHelper', 2), ('MediaExtractor', 2), ('failToStart', 2), ('PlayerResult', 2), ('getMediaFormat', 2), ('getInputBuffers', 2), ('getOutputBuffers', 2), ('getAssetFileDescriptor', 2), ('getFileDescriptor', 2), ('getStartOffset', 2), ('getLength', 2), ('close', 2), ('main', 1), ('getMediaDirString', 1), ('CNAVclockModel', 1), ('createMediaFormat', 1), ('getCodecInfos', 1), ('NavModel_NAVKeplerianSet', 1), ('getSuplResponse', 1), ('GpsNavMessageProto', 1), ('getMessage', 1)]"	"[('CtsMediaTestCases', 31), ('CtsMediaV2TestCases', 8), ('CtsLocationGnssTestCases', 3), ('CtsMediaStressTestCases', 2), ('CtsMediaParserTestCases', 2), ('CtsMediaDrmTestCases', 1), ('CtsAutoFillServiceTestCases', 1)]"	""	"android.media.cts.MediaCodecListTest"	"getMessage"	"CtsMediaTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderSurfaceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoDecoderRotationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/AdaptivePlaybackTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeEditEncodeTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecodeAccuracyTestBase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/NativeMediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/CNAVclockModel.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmCodecTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeVirtualDisplayWithCompositionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/activities/OptionalSaveActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/app/MediaMetricsTest/src/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/rrlp_components/NavModel_NAVKeplerianSet.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/suplClient/SuplRrlpController.java', 1)]"	"[('(4,AVC,/android/media/cts/DecodeEditEncodeTest.java)', 1), ('(3,AVC,/android/media/cts/MediaCodecPlayerTest.java)', 1), ('(1,HEVC,/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java)', 1), ('(1,AVC,/android/mediav2/cts/CodecUnitTest.java)', 1), ('(19,AVC,/android/media/cts/MediaCodecTest.java)', 1), ('(3,HEVC,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(3,VP9,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(1,AVC,/android/mediastress/cts/NativeMediaTest.java)', 1), ('(120,AVC,/android/location/cts/gnss/asn1/supl2/rrlp_components/CNAVclockModel.java)', 1), ('(2,HEVC,/android/media/cts/CamcorderProfileTest.java)', 1), ('(1,AVC,/android/media/cts/CamcorderProfileTest.java)', 1), ('(6,VP9,/android/media/cts/DecodeAccuracyTestBase.java)', 1), ('(1,AVC,/android/media/cts/DecodeAccuracyTestBase.java)', 1), ('(1,AVC,/android/mediadrm/cts/MediaDrmCodecTest.java)', 1), ('(4,AVC,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,HEVC,/android/media/cts/MediaMuxerTest.java)', 1), ('(2,VP9,/android/media/cts/MediaMuxerTest.java)', 1), ('(7,AVC,/android/media/cts/MediaMuxerTest.java)', 1), ('(3,HEVC,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(6,VP9,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(12,AVC,/android/mediav2/cts/CodecDecoderSurfaceTest.java)', 1), ('(1,AVC,/android/media/cts/EncodeVirtualDisplayWithCompositionTest.java)', 1), ('(1,HEVC,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(1,VP9,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(1,AVC,/android/media/cts/VideoDecoderRotationTest.java)', 1), ('(7,AVC,/android/autofillservice/cts/activities/OptionalSaveActivity.java)', 1), ('(10,HEVC,/android/mediav2/cts/AdaptivePlaybackTest.java)', 1), ('(4,VP9,/android/mediav2/cts/AdaptivePlaybackTest.java)', 1), ('(10,AVC,/android/mediav2/cts/AdaptivePlaybackTest.java)', 1), ('(1,AVC,/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java)', 1), ('(210,AVC,/android/location/cts/gnss/asn1/supl2/rrlp_components/NavModel_NAVKeplerianSet.java)', 1), ('(2,AVC,/android/mediav2/cts/CodecListTest.java)', 1), ('(1,AVC,/android/location/cts/gnss/suplClient/SuplRrlpController.java)', 1), ('(7,HEVC,/android/media/cts/MediaCodecListTest.java)', 1), ('(6,VP9,/android/media/cts/MediaCodecListTest.java)', 1), ('(10,AVC,/android/media/cts/MediaCodecListTest.java)', 1)]"	"[('([1:/android/media/cts/DecodeEditEncodeTest.java]:[AVC]:[1]:method_text:[gest color component delta seen (i.e. actual vs. expected)    private int mLargestColorDelta;   ])', 1), ('([3:/android/media/cts/DecodeEditEncodeTest.java]:[AVC]:[3]:method_text:[                  throw new RuntimeException(ioe);                }            }        }    }}])', 1), ('([3:/android/media/cts/MediaCodecPlayerTest.java]:[AVC]:[3]:method_text:[Path() + CLEAR_VIDEO_PATH),            VIDEO_WIDTH_CLEAR, VIDEO_HEIGHT_CLEAR, surfaces);    }   ])', 1), ('([1:/android/mediastress/cts/HEVCR1080pAacLongPlayerTest.java]:[HEVC]:[1]:method_text:[bbb_full.ffmpeg.1920x1080.mp4.libx265_6500kbps_30fps.libfaac_stereo_128kbps_48000Hz.mp4""    };   ])', 1), ('([1:/android/mediav2/cts/CodecUnitTest.java]:[AVC]:[1]:method_text:[    } catch (IllegalStateException e) {                // expected            }        }       ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[AVC]:[1]:method_text:[s are thrown from MediaCodec     * methods when called in incorrect operational states.     */   ])', 1), ('([2:/android/media/cts/MediaCodecTest.java]:[AVC]:[2]:method_text:[ createInputSurface() with a non-Surface color format is not required to throw exception     */   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[AVC]:[1]:method_text:[ts:     * <br> dequeueInputBuffer() fails when encoder configured with an input Surface     */   ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[AVC]:[1]:method_text:[nt mMaxW;        public int mMaxH;        public int mFps;        public int mBitRate;    }   ])', 1), ('([14:/android/media/cts/MediaCodecTest.java]:[AVC]:[14]:method_text:[077efecc0b24d02L, 0xace33c1e52e2fb4bL);    /**     * Tests MediaCodec.CryptoException     */   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[HEVC]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[VP9]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([1:/android/mediastress/cts/NativeMediaTest.java]:[AVC]:[1]:method_text:[TIME_MS = 4000;    public NativeMediaTest() {        super(NativeMediaActivity.class);    }   ])', 1), ('([120:/android/location/cts/gnss/asn1/supl2/rrlp_components/CNAVclockModel.java]:[AVC]:[120]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([2:/android/media/cts/CamcorderProfileTest.java]:[HEVC]:[2]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([1:/android/media/cts/CamcorderProfileTest.java]:[AVC]:[1]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([6:/android/media/cts/DecodeAccuracyTestBase.java]:[VP9]:[6]:method_text:[blic static boolean isVideo(String mimeType) {        return mimeType.startsWith(""video"");    }}])', 1), ('([1:/android/media/cts/DecodeAccuracyTestBase.java]:[AVC]:[1]:method_text:[blic static boolean isVideo(String mimeType) {        return mimeType.startsWith(""video"");    }}])', 1), ('([1:/android/mediadrm/cts/MediaDrmCodecTest.java]:[AVC]:[1]:method_text:[ception     * <br> getInputBuffer() after the failed queueSecureInputBuffer() succeeds.     */   ])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[AVC]:[2]:method_text:[UNITS);        assertSupportFor(MediaParser.PARAMETER_TS_ENABLE_HDMV_DTS_AUDIO_STREAMS);    }   ])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[AVC]:[2]:method_text:[,                /* value= */ ""multi_pmt"",                /* valueIsIllegal= */ false);    }   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[HEVC]:[1]:method_text:[ well when video with B Frames are muxed using MPEG4Writer     * and a few frames drop.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[VP9]:[1]:method_text:[e frame     * drops as in b/63590381 and b/64949961 while B Frames encoding is enabled.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[VP9]:[1]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([6:/android/media/cts/MediaMuxerTest.java]:[AVC]:[6]:method_text:[e frame     * drops as in b/63590381 and b/64949961 while B Frames encoding is enabled.     */   ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[AVC]:[1]:method_text:[ well when video with B Frames are muxed using MPEG4Writer     * and a few frames drop.     */   ])', 1), (""([3:/android/mediav2/cts/CodecDecoderSurfaceTest.java]:[HEVC]:[3]:method_text:[face.     * In these scenarios, Timestamp and it's ordering is verified.     */    @LargeTest   ])"", 1), (""([6:/android/mediav2/cts/CodecDecoderSurfaceTest.java]:[VP9]:[6]:method_text:[face.     * In these scenarios, Timestamp and it's ordering is verified.     */    @LargeTest   ])"", 1), (""([12:/android/mediav2/cts/CodecDecoderSurfaceTest.java]:[AVC]:[12]:method_text:[face.     * In these scenarios, Timestamp and it's ordering is verified.     */    @LargeTest   ])"", 1), ('([1:/android/media/cts/EncodeVirtualDisplayWithCompositionTest.java]:[AVC]:[1]:method_text:[yWithCompositionTestImpl mImpl =            new EncodeVirtualDisplayWithCompositionTestImpl();   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[HEVC]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[VP9]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([1:/android/media/cts/VideoDecoderRotationTest.java]:[AVC]:[1]:method_text:[Name(), type, Integer.valueOf(360) });            }        }        return testParams;    }   ])', 1), ('([7:/android/autofillservice/cts/activities/OptionalSaveActivity.java]:[AVC]:[7]:method_text:[                   : new OneTimeTextWatcher(""favColor"", mFavoriteColor, favColor);        }    }}])', 1), ('([10:/android/mediav2/cts/AdaptivePlaybackTest.java]:[HEVC]:[10]:method_text:[   buffer.clear();        buffer.position(offset);        return format;    }    @LargeTest   ])', 1), ('([4:/android/mediav2/cts/AdaptivePlaybackTest.java]:[VP9]:[4]:method_text:[   buffer.clear();        buffer.position(offset);        return format;    }    @LargeTest   ])', 1), ('([10:/android/mediav2/cts/AdaptivePlaybackTest.java]:[AVC]:[10]:method_text:[   buffer.clear();        buffer.position(offset);        return format;    }    @LargeTest   ])', 1), ('([1:/android/media/metrics/cts/MediaMetricsAtomHostSideTests.java]:[AVC]:[1]:method_text:[                .build();        s.reportTrackChangeEvent(e);        resetProperties();    }   ])', 1), ('([210:/android/location/cts/gnss/asn1/supl2/rrlp_components/NavModel_NAVKeplerianSet.java]:[AVC]:[210]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([2:/android/mediav2/cts/CodecListTest.java]:[AVC]:[2]:method_text:[                       CodecTestBase.hasEncoder(MediaFormat.MIMETYPE_VIDEO_VP8));        }    }}])', 1), ('([1:/android/location/cts/gnss/suplClient/SuplRrlpController.java]:[AVC]:[1]:method_text:[Proto.cis = ephemeris.getEphemCis().getInteger().shortValue() * NAVIGATION_CIS_SCALE_FACTOR;  }}])', 1), ('([3:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[3]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[HEVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[VP9]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1), ('([4:/android/media/cts/MediaCodecListTest.java]:[AVC]:[4]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder            }        }        return list;    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[                  pp2 != pp && pp2.covers(pp));                }            }        }    }   ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[AVC]:[2]:method_text:[ntial performance point data"",                    describedTypes.contains(type));        }    }}])', 1)]"	""	""	"[('AVC', 31), ('HEVC', 10), ('VP9', 10)]"	"[('[android.media.cts.VideoDecoderRotationTest EncodeVirtualDisplayWithCompositionTestImpl CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testRequiredMediaCodecList CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testInputChannelLimits CtsMediaTestCases]', 3), ('[android.media.cts.MediaCodecListTest testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases]', 3), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 2), ('[android.media.cts.DecodeAccuracyTestBase isAbrEnabled CtsMediaTestCases]', 2), ('[android.media.cts.MediaMuxerTest testSimulateAudioBVideoFramesDropIssues CtsMediaTestCases]', 2), ('[android.media.cts.MediaMuxerTest testWebmOutput CtsMediaTestCases]', 2), ('[android.media.cts.DecodeEditEncodeTest testVideoEdit720p CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecPlayerTest MediaCodecPlayerTest CtsMediaTestCases]', 1), ('[android.mediav2.cts.CodecUnitTest TestApi CtsMediaV2TestCases]', 1), ('[android.media.cts.MediaCodecTest testException CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testAsyncStopAndReset CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testConcurrentAudioVideoEncodings CtsMediaTestCases]', 1), ('[android.media.cts.MediaCodecTest testCryptoInfoPattern CtsMediaTestCases]', 1), ('[android.mediastress.cts.NativeMediaTest NativeMediaTest CtsMediaStressTestCases]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.CNAVclockModel isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.mediadrm.cts.MediaDrmCodecTest isEncoder CtsMediaDrmTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testSupportsParameter CtsMediaParserTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testSetKnownParameters CtsMediaParserTestCases]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo CtsMediaTestCases]', 1), ('[android.media.cts.EncodeVirtualDisplayWithCompositionTest EncodeVirtualDisplayWithCompositionTestImpl CtsMediaTestCases]', 1), ('[android.autofillservice.cts.activities.OptionalSaveActivity OnClickListener CtsAutoFillServiceTestCases]', 1), ('[android.media.metrics.cts.MediaMetricsAtomHostSideTests testTrackChangeEvent_audio None]', 1), ('[android.location.cts.gnss.asn1.supl2.rrlp_components.NavModel_NAVKeplerianSet isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.mediav2.cts.CodecListTest testCddRequiredCodecsAvailability CtsMediaV2TestCases]', 1), ('[android.location.cts.gnss.suplClient.SuplRrlpController isMsSUPLRESPONSE CtsLocationGnssTestCases]', 1), ('[android.media.cts.MediaCodecListTest testVideoPerformancePointsSanity CtsMediaTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.3  . Hardware"	"7.1.1.3"	"H-2-1"	"7.1.1.3/H-2-1"	"07010103.720201"	"""[7.1.1.3/H-2-1] MUST have screen density of at least 400 dpi. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-2-3"	"8.2/H-2-3"	"08020000.720203"	"""[8.2/H-2-3] MUST ensure a sequential read performance of at least 250 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.1.4.2  .  These are in the Android source tree at"	"7.1.4.2"	"C-1-1"	"7.1.4.2/C-1-1"	"07010402.670101"	"""C-1-1] MUST report the correct integer value with the android.hardware.vulkan.level and android.hardware.vulkan.version feature flags."""	""	""	"android.hardware.vulkan.version android.hardware.vulkan.level"	""	""	""	""	"[('com.android.cts.releaseparser.FileParserTest', 1)]"	""	""	""	"com.android.cts.releaseparser.FileParserTest"	""	""	"[('/home/gpoor/cts-12-source/cts/tools/release-parser/tests/src/com/android/cts/releaseparser/FileParserTest.java', 1)]"	"[('(2,android.hardware.vulkan.version,/com/android/cts/releaseparser/FileParserTest.java)', 1)]"	"[('([2:/com/android/cts/releaseparser/FileParserTest.java]:[android.hardware.vulkan.version]:[2]:method_text:[    /**     * Test {@link VdexParser} with an Vdex file     *     * @throws Exception     */   ])', 1)]"	""	""	"[('android.hardware.vulkan.version', 1)]"	""	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-2"	"7.5/H-1-2"	"07050000.720102"	"""[7.5/H-1-2] MUST have a primary front facing camera with a resolution of at least 4 megapixels supporting video capture at 1080p@30fps. The primary front-facing camera is the front-facing camera with the lowest camera ID.  | [7.5/H-1-2] MUST have a primary front facing camera with a resolution of at least 5 megapixels and support video capture at 1080p@30fps. The primary front-facing camera is the front-facing camera with the lowest camera ID. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
