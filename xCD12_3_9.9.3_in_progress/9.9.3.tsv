"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"protected"	"Area"	"Shortened"	"Test Level"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-5"	"9.9.3/C-1-5"	"09090300.670105"	"""C-1-5] MUST encrypt file contents and filesystem metadata using AES-256-XTS or Adiantum. AES-256-XTS refers to the Advanced Encryption Standard with a 256-bit cipher key length, operated in XTS mode; the full length of the key is 512 bits. Adiantum refers to Adiantum-XChaCha12-AES, as specified at https://github.com/google/adiantum. Filesystem metadata is data such as file sizes, ownership, modes, and extended attributes (xattrs)."""	"Annotated"	""	"AES XTS github.com"	""	""	""	""	""	""	""	2	"android.security.cts.MetadataEncryptionTest"	"testMetadataEncryptionIsEnabled()"	"CtsSecurityHostTestCases"	"[('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 26), ('/home/gpoor/cts-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassifierValueObjectsTest.java', 11), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ExternalStorageHostTest.java', 9), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/FillEventHistoryTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/CanvasDrawGlyphsTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TextSwitcherTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/text/cts/MeasuredTextTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/AndroidKeyStoreTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ExternalStorageHostTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/BoringLayoutTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowMetricsWindowContextTests.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/StreamingMediaPlayerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/AesKeyGenPerformanceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CarrierMessagingServiceWrapperTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/AlteredCharSequenceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineAuthenticationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ContextThemeWrapperTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/SwitchTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineFillEventHistoryTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/PathClippingTests.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CarrierConfigManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/EncryptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/AppExitTest/src/android/app/cts/ActivityManagerAppExitInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/MutableAutofillIdTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/LoginActivityCommonTestCase.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/SurfaceViewPreviewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/PathClippingTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CarrierConfigManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAttestationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/EglContextTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineWebViewActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/StaticLayoutGetLineLeftRightTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityNodeInfoTest.java', 1)]"	"[('(1,XTS,/android/uirendering/cts/testclasses/PathClippingTests.java)', 2), ('(1,XTS,/android/telephony/cts/CarrierConfigManagerTest.java)', 2), ('(1,XTS,/android/text/cts/AlteredCharSequenceTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/inline/InlineAuthenticationTest.java)', 1), ('(4,XTS,/android/view/cts/ContextThemeWrapperTest.java)', 1), ('(7,XTS,/android/autofillservice/cts/FillEventHistoryTest.java)', 1), ('(1,XTS,/android/widget/cts/SwitchTest.java)', 1), ('(6,XTS,/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/inline/InlineFillEventHistoryTest.java)', 1), ('(5,AES,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(1,XTS,/android/view/cts/ViewTest.java)', 1), ('(5,AES,/android/security/cts/EncryptionTest.java)', 1), ('(1,AES,/android/graphics/cts/PaintTest.java)', 1), ('(101,XTS,/android/graphics/cts/PaintTest.java)', 1), ('(29,XTS,/android/view/textclassifier/cts/TextClassifierValueObjectsTest.java)', 1), ('(17,XTS,/android/text/cts/BoringLayoutTest.java)', 1), ('(2,XTS,/android/app/cts/ActivityManagerAppExitInfoTest.java)', 1), ('(2,AES,/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java)', 1), ('(6,XTS,/android/autofillservice/cts/MutableAutofillIdTest.java)', 1), ('(48,XTS,/android/widget/cts/TextSwitcherTest.java)', 1), ('(4,XTS,/android/server/wm/WindowMetricsWindowContextTests.java)', 1), ('(11,AES,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/commontests/LoginActivityCommonTestCase.java)', 1), ('(1,AES,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java)', 1), ('(1,XTS,/android/app/cts/NotificationTest.java)', 1), ('(2,AES,/android/media/cts/StreamingMediaPlayerTest.java)', 1), ('(4,XTS,/android/graphics/text/cts/MeasuredTextTest.java)', 1), ('(2,AES,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(1,XTS,/android/opengl/cts/EglContextTest.java)', 1), ('(9,AES,/android/keystore/cts/AesKeyGenPerformanceTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/inline/InlineWebViewActivityTest.java)', 1), ('(9,XTS,/android/telephony/cts/CarrierMessagingServiceWrapperTest.java)', 1), ('(9,XTS,/android/graphics/cts/CanvasDrawGlyphsTest.java)', 1), ('(2,XTS,/android/text/cts/StaticLayoutGetLineLeftRightTest.java)', 1), ('(14,AES,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1), ('(7,XTS,/android/view/accessibility/cts/AccessibilityNodeInfoTest.java)', 1), ('(30,AES,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1)]"	"[('([1:/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java]:[XTS]:[1]:method_text:[veRequest.structure, ID_PASSWORD);        assertTextAndValue(passwordNode, ""malkovich"");    }   ])', 2), ('([1:/android/telephony/cts/CarrierConfigManagerTest.java]:[XTS]:[1]:method_text:[E_BOOL.startsWith(                                CarrierConfigManager.Gps.KEY_PREFIX));    }   ])', 2), ('([2:/android/graphics/cts/PaintTest.java]:[XTS]:[2]:method_text:[t(), fm.ascent, 0.0f);            assertEquals(p.descent(), fm.descent, 0.0f);        }    }   ])', 2), ('([2:/android/graphics/cts/PaintTest.java]:[XTS]:[2]:method_text:[), fmi.ascent);            assertEquals(Math.round(p.descent()), fmi.descent);        }    }   ])', 2), ('([1:/android/graphics/text/cts/MeasuredTextTest.java]:[XTS]:[1]:method_text:[t, false)));        assertTrue(ssbBitmap.sameAs(makeBitmapFromPct(text, paint, false)));    }   ])', 2), ('([1:/android/graphics/cts/CanvasDrawGlyphsTest.java]:[XTS]:[1]:method_text:[p.sameAs(glyphBmp2)).isTrue();        assertThat(glyphBmp.sameAs(expectedBmp)).isTrue();    }   ])', 2), ('([2:/android/appsecurity/cts/ExternalStorageHostTest.java]:[AES]:[2]:method_text:[    public void testMediaEscalation() throws Exception {        doMediaEscalation(MEDIA);    }   ])', 2), ('([2:/android/appsecurity/cts/ExternalStorageHostTest.java]:[AES]:[2]:method_text:[ublic void testMediaEscalation28() throws Exception {        doMediaEscalation(MEDIA_28);    }   ])', 2), ('([10:/android/appsecurity/cts/ExternalStorageHostTest.java]:[AES]:[10]:method_text:[     runDeviceTests(config.pkg, config.clazz, ""testMediaEscalation_RequestDelete"", user);    }   ])', 2), ('([1:/android/text/cts/AlteredCharSequenceTest.java]:[XTS]:[1]:method_text:[   public CharSequence subSequence(int start, int end) {            return null;        }    }}])', 1), ('([1:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[XTS]:[1]:method_text:[.selectByRelativeId(id);        mUiBot.waitForIdle();        mUiBot.assertDatasets(names);    }}])', 1), ('([4:/android/view/cts/ContextThemeWrapperTest.java]:[XTS]:[4]:method_text:[tyle, defValue),                ta.getInt(R.styleable.TextAppearance_textStyle, defValue));    }}])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[e.getFillEvents(1);        assertFillEventForSaveShown(events.get(0), NULL_DATASET_ID);    }   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[Id, ""id2"");            assertThat(event2.getManuallyEnteredField()).isEmpty();        }    }   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[by the user,     * neither the user entered values that were present in these datasets.     */   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[re selected by the user,     * and the user changed the values provided by the service.     */   ])', 1), (""([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[ected by the user,     * and the user didn't change the values provided by the service.     */   ])"", 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[entered values that match what was provided by the service on different     * datasets.     */   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[  assertThat(manuallyEnteredFields.get(passwordId)).containsExactly(""id2"", ""id3"");        }    }}])', 1), ('([1:/android/widget/cts/SwitchTest.java]:[XTS]:[1]:method_text:[           () -> mSwitch.setShowText(false));        assertFalse(mSwitch.getShowText());    }   ])', 1), ('([6:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[XTS]:[6]:method_text:[T_MS);    }    private String getString(int id) {        return mActivity.getString(id);    }}])', 1), ('([1:/android/autofillservice/cts/inline/InlineFillEventHistoryTest.java]:[XTS]:[1]:method_text:[etShown(events.get(0));        assertFillEventForSaveShown(events.get(3), NULL_DATASET_ID);    }}])', 1), ('([1:/android/uirendering/cts/testclasses/PathClippingTests.java]:[XTS]:[1]:method_text:[     helper.loadData(""<body style=\\""background-color:blue\\"">"");        };    }    @LargeTest   ])', 1), ('([5:/android/hardware/camera2/cts/BurstCaptureTest.java]:[AES]:[5]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([1:/android/view/cts/ViewTest.java]:[XTS]:[1]:method_text:[.class,        android.widget.ZoomButton.class,        android.widget.ZoomControls.class,    };}])', 1), ('([5:/android/security/cts/EncryptionTest.java]:[AES]:[5]:method_text:[able    // to instant apps    @AppModeFull    @CddTest(requirement=""9.9.2/C-0-1,C-0-2,C-0-3"")   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[AES]:[1]:method_text:[SCULAPIUS                p.hasGlyph(""\\uD83D\\uDC69\\u200D\\u2695\\uFE0F""));  // above + VS16    }   ])', 1), ('([15:/android/graphics/cts/PaintTest.java]:[XTS]:[15]:method_text:[++) {            assertEquals(""i: "" + i, expectedWidth, measured[i][0], 0.0f);        }    }   ])', 1), ('([2:/android/graphics/cts/PaintTest.java]:[XTS]:[2]:method_text:[ spacing20 = p.getFontSpacing();            assertTrue(spacing20 > spacing10);        }    }   ])', 1), ('([7:/android/graphics/cts/PaintTest.java]:[XTS]:[7]:method_text:[f);        p.setTextScaleX(0.0f);        assertEquals(0.0f, p.getTextScaleX(), 0.0f);    }   ])', 1), ('([2:/android/graphics/cts/PaintTest.java]:[XTS]:[2]:method_text:[      float ascent20 = p.ascent();            assertTrue(ascent20 < ascent10);        }    }   ])', 1), ('([7:/android/graphics/cts/PaintTest.java]:[XTS]:[7]:method_text:[);        p.setTextSkewX(-0.25f);        assertEquals(-0.25f, p.getTextSkewX(), 0.0f);    }   ])', 1), ('([9:/android/graphics/cts/PaintTest.java]:[XTS]:[9]:method_text:[uals to 0        p.setTextSize(0.0f);        assertEquals(0.0f, p.getTextSize(), 0.0f);    }   ])', 1), ('([10:/android/graphics/cts/PaintTest.java]:[XTS]:[10]:method_text:[idths[2][i], 0.0f);            assertEquals(widths[2][i], widths[3][i], 0.0f);        }    }   ])', 1), ('([2:/android/graphics/cts/PaintTest.java]:[XTS]:[2]:method_text:[  float descent20 = p.descent();            assertTrue(descent20 > descent10);        }    }   ])', 1), ('([2:/android/graphics/cts/PaintTest.java]:[XTS]:[2]:method_text:[.right);        assertTrue(bounds2.bottom - bounds2.top > bounds1.bottom - bounds1.top);    }   ])', 1), ('([6:/android/graphics/cts/PaintTest.java]:[XTS]:[6]:method_text:[   verifyMeasureText(text, textChars, textSpan, 4, 7, widths[4] + widths[5] + widths[6]);    }   ])', 1), ('([4:/android/graphics/cts/PaintTest.java]:[XTS]:[4]:method_text:[Equals(widths[2], widths[3], 0.0f);        assertEquals(widths[3], expectedWidth, 0.0f);    }   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[XTS]:[1]:method_text:[     new Paint().getRunAdvance(string, 0, string.length(), 1, string.length(), false, 1);    }   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[XTS]:[1]:method_text:[    new Paint().getRunAdvance(string, 0, string.length(), -1, string.length(), false, 0);    }   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[XTS]:[1]:method_text:[ForAdvance(string, -1, string.length(), 0, string.length(), false,                0.0f);    }   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[XTS]:[1]:method_text:[tForAdvance(string, 0, string.length(), 1, string.length(), false,                0.0f);    }   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[XTS]:[1]:method_text:[m);        p.setElegantTextHeight(false);        assertFalse(p.isElegantTextHeight());    }   ])', 1), ('([5:/android/graphics/cts/PaintTest.java]:[XTS]:[5]:method_text:[   p1.setTextSize(p2.getTextSize());        assertTrue(p1.equalsForTextMeasurement(p2));    }   ])', 1), ('([5:/android/graphics/cts/PaintTest.java]:[XTS]:[5]:method_text:[ p1.setTextSkewX(p2.getTextSkewX());        assertTrue(p1.equalsForTextMeasurement(p2));    }   ])', 1), ('([5:/android/graphics/cts/PaintTest.java]:[XTS]:[5]:method_text:[1.setTextScaleX(p2.getTextScaleX());        assertTrue(p1.equalsForTextMeasurement(p2));    }   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[XTS]:[1]:method_text:[TART_HYPHEN_EDIT_NO_EDIT);        paint.setEndHyphenEdit(Paint.END_HYPHEN_EDIT_NO_EDIT);    }   ])', 1), ('([6:/android/graphics/cts/PaintTest.java]:[XTS]:[6]:method_text:[            contextStart, contextCount, true, offset, cursorOpt));        return result;    }   ])', 1), ('([1:/android/view/textclassifier/cts/TextClassifierValueObjectsTest.java]:[XTS]:[1]:method_text:[d123"";    private static final LocaleList LOCALES = LocaleList.forLanguageTags(""fr,en,de,es"");   ])', 1), ('([3:/android/view/textclassifier/cts/TextClassifierValueObjectsTest.java]:[XTS]:[3]:method_text:[etId());        assertEquals(BUNDLE_VALUE, selection.getExtras().getString(BUNDLE_KEY));    }   ])', 1), ('([3:/android/view/textclassifier/cts/TextClassifierValueObjectsTest.java]:[XTS]:[3]:method_text:[idenceScore(""random_type""), ACCEPTED_DELTA);        assertEquals(id, selection.getId());    }   ])', 1), ('([3:/android/view/textclassifier/cts/TextClassifierValueObjectsTest.java]:[XTS]:[3]:method_text:[      assertNull(selection.getId());        assertTrue(selection.getExtras().isEmpty());    }   ])', 1), ('([3:/android/view/textclassifier/cts/TextClassifierValueObjectsTest.java]:[XTS]:[3]:method_text:[selection.getConfidenceScore(TextClassifier.TYPE_OTHER),                ACCEPTED_DELTA);    }   ])', 1), ('([2:/android/view/textclassifier/cts/TextClassifierValueObjectsTest.java]:[XTS]:[2]:method_text:[rams() {        new TextSelection.Builder(-1 /* start */, END)                .build();    }   ])', 1), ('([2:/android/view/textclassifier/cts/TextClassifierValueObjectsTest.java]:[XTS]:[2]:method_text:[arams() {        new TextSelection.Builder(START, 0 /* end */)                .build();    }   ])', 1), ('([3:/android/view/textclassifier/cts/TextClassifierValueObjectsTest.java]:[XTS]:[3]:method_text:[fBoundsIndex = selection.getEntityCount();        selection.getEntity(outOfBoundsIndex);    }   ])', 1), ('([3:/android/view/textclassifier/cts/TextClassifierValueObjectsTest.java]:[XTS]:[3]:method_text:[ocales());        assertEquals(BUNDLE_VALUE, request.getExtras().getString(BUNDLE_KEY));    }   ])', 1), ('([3:/android/view/textclassifier/cts/TextClassifierValueObjectsTest.java]:[XTS]:[3]:method_text:[(null)                        .build();        assertNull(request.getDefaultLocales());    }   ])', 1), ('([3:/android/view/textclassifier/cts/TextClassifierValueObjectsTest.java]:[XTS]:[3]:method_text:[sertNull(request.getDefaultLocales());        assertTrue(request.getExtras().isEmpty());    }   ])', 1), ('([6:/android/text/cts/BoringLayoutTest.java]:[XTS]:[6]:method_text:[ToBitmap(layoutWithPrecomputed);        assertTrue(msg, resultBMP.sameAs(expectedBMP));    }   ])', 1), ('([11:/android/text/cts/BoringLayoutTest.java]:[XTS]:[11]:method_text:[ALE,                                DEFAULT_METRICS,                                true);    }}])', 1), ('([2:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[XTS]:[2]:method_text:[tSep, start);        assertTrue(end > start);        return dump.substring(start, end);    }   ])', 1), ('([2:/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java]:[AES]:[2]:method_text:[iometricManager mBiometricManager;        private KeyguardManager mKeyguardManager;        private])', 1), ('([6:/android/autofillservice/cts/MutableAutofillIdTest.java]:[XTS]:[6]:method_text:[ext2).isNotNull();        assertThat(node2Context2.getText().toString()).isEqualTo(""NOD2"");    }}])', 1), ('([9:/android/widget/cts/TextSwitcherTest.java]:[XTS]:[9]:method_text:[Activity();        mTextSwitcher = (TextSwitcher) mActivity.findViewById(R.id.switcher);    }   ])', 1), ('([2:/android/widget/cts/TextSwitcherTest.java]:[XTS]:[2]:method_text:[ew TextSwitcher(mActivity);        new TextSwitcher(mActivity, null);    }    @UiThreadTest   ])', 1), ('([11:/android/widget/cts/TextSwitcherTest.java]:[XTS]:[11]:method_text:[.toString()));        assertSame(tv2, mTextSwitcher.getCurrentView());    }    @UiThreadTest   ])', 1), ('([11:/android/widget/cts/TextSwitcherTest.java]:[XTS]:[11]:method_text:[.toString()));        assertSame(tv1, mTextSwitcher.getCurrentView());    }    @UiThreadTest   ])', 1), ('([15:/android/widget/cts/TextSwitcherTest.java]:[XTS]:[15]:method_text:[/ issue 1695243, not clear what is supposed to happen if the LayoutParams is null.        }    }}])', 1), ('([2:/android/server/wm/WindowMetricsWindowContextTests.java]:[XTS]:[2]:method_text:[TestSession());        mWindowContextSession.assertWindowContextMetricsMatchesLayout();    }   ])', 1), ('([2:/android/server/wm/WindowMetricsWindowContextTests.java]:[XTS]:[2]:method_text:[splayCutoutMode = LAYOUT_IN_DISPLAY_CUTOUT_MODE_ALWAYS;            return params;        }    }}])', 1), ('([2:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[2]:method_text:[xpectedSecret.getEncoded()),                Arrays.toString(actualSecret.getEncoded()));    }   ])', 1), ('([5:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[5]:method_text:[.i(TAG, ""Deleted "" + (latestImportedEntryNumber + 1) + "" keys"");        }    }    @LargeTest   ])', 1), ('([4:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[4]:method_text:[ow new RuntimeException(""Failed for key size "" + keySizeBits, e);            }        }    }   ])', 1), ('([2:/android/autofillservice/cts/commontests/LoginActivityCommonTestCase.java]:[XTS]:[2]:method_text:[ndNodeByResourceId(request.structure, ID_PASSWORD).isFocused()).isFalse();    }    @Presubmit   ])', 1), ('([1:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[AES]:[1]:method_text:[rent native internals, and multiple Surfaces pointing to the same actual consumer object     */   ])', 1), (""([1:/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java]:[XTS]:[1]:method_text:[gain, but then we wouldn't be effectively testing that the context was committed    @Presubmit   ])"", 1), ('([1:/android/app/cts/NotificationTest.java]:[XTS]:[1]:method_text:[ode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder().permitAll().build());        }    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/PathClippingTests.java]:[XTS]:[1]:method_text:[er(webview, fence);            helper.loadData(BLUE_RED_HTML);        };    }    @LargeTest   ])', 1), ('([1:/android/media/cts/StreamingMediaPlayerTest.java]:[AES]:[1]:method_text:[   localHlsTest(""audio_only/index.m3u8"", 60 * 1000, -1, true /*isAudioOnly*/);        }    }   ])', 1), ('([1:/android/media/cts/StreamingMediaPlayerTest.java]:[AES]:[1]:method_text:[000, -1, false /*isAudioOnly*/);        }    }    // Streaming audio from local HTTP server   ])', 1), ('([1:/android/graphics/text/cts/MeasuredTextTest.java]:[XTS]:[1]:method_text:[);        sPaint.setTypeface(tf);        sPaint.setTextSize(10.0f);  // Make 1em = 10px    }   ])', 1), ('([1:/android/graphics/text/cts/MeasuredTextTest.java]:[XTS]:[1]:method_text:[ paint, true)));        assertTrue(ssbBitmap.sameAs(makeBitmapFromPct(text, paint, true)));    }}])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[AES]:[2]:method_text:[reAlias));        } finally {            keyStore.deleteEntry(keystoreAlias);        }    }   ])', 1), ('([1:/android/opengl/cts/EglContextTest.java]:[XTS]:[1]:method_text:[blic class EglContextTest {    /**     * Tests creating then releasing an EGL context.     */   ])', 1), ('([2:/android/keystore/cts/AesKeyGenPerformanceTest.java]:[AES]:[2]:method_text:[rmanceTest extends PerformanceTestBase {    final int[] SUPPORTED_AES_KEY_SIZES = {128, 256};   ])', 1), ('([7:/android/keystore/cts/AesKeyGenPerformanceTest.java]:[AES]:[7]:method_text:[               .setKeySize(keySize)                                    .build());        }    }}])', 1), ('([1:/android/autofillservice/cts/inline/InlineWebViewActivityTest.java]:[XTS]:[1]:method_text:[ndValue(usernameNode2, ""dudeu"");        Helper.assertTextAndValue(passwordNode2, ""sweetp"");    }}])', 1), ('([3:/android/telephony/cts/CarrierMessagingServiceWrapperTest.java]:[XTS]:[3]:method_text:[e the all CarrierMessagingServices can send data sms and     * triggers valid callback.     */   ])', 1), ('([6:/android/telephony/cts/CarrierMessagingServiceWrapperTest.java]:[XTS]:[6]:method_text:[e the all CarrierMessagingServices can send data sms and     * triggers valid callback.     */   ])', 1), ('([1:/android/graphics/cts/CanvasDrawGlyphsTest.java]:[XTS]:[1]:method_text:[_ORIGIN_X, DRAW_ORIGIN_Y, paint);        assertThat(glyphBmp.sameAs(textBmp)).isTrue();    }   ])', 1), ('([1:/android/graphics/cts/CanvasDrawGlyphsTest.java]:[XTS]:[1]:method_text:[       paint        );        assertThat(firstThreeBmp.sameAs(firstTwoBmp)).isFalse();    }   ])', 1), ('([1:/android/graphics/cts/CanvasDrawGlyphsTest.java]:[XTS]:[1]:method_text:[   paint        );        assertThat(bmp.sameAs(differentGlyphPositionBmp)).isFalse();    }   ])', 1), ('([4:/android/graphics/cts/CanvasDrawGlyphsTest.java]:[XTS]:[4]:method_text:[            paint        );        assertThat(bmp.sameAs(twiceTextSizeBmp)).isFalse();    }   ])', 1), ('([2:/android/text/cts/StaticLayoutGetLineLeftRightTest.java]:[XTS]:[2]:method_text:[ign == Alignment.ALIGN_CENTER */                mExpectedAlign = ALIGN_CENTER;        }    }   ])', 1), ('([7:/android/view/accessibility/cts/AccessibilityNodeInfoTest.java]:[XTS]:[7]:method_text:[ reset"", info.isTextEntryKey());    }    private static class MockBinder extends Binder {    }}])', 1), ('([2:/android/appsecurity/cts/ExternalStorageHostTest.java]:[AES]:[2]:method_text:[g, MEDIA.clazz, ""testMediaEscalation_RequestWriteFilePathSupport"",                user);    }   ])', 1), ('([4:/android/appsecurity/cts/ExternalStorageHostTest.java]:[AES]:[4]:method_text:[    * the system will show the user confirmation dialog.     *     * @throws Exception     */   ])', 1), ('([1:/android/appsecurity/cts/ExternalStorageHostTest.java]:[AES]:[1]:method_text:[    * the system will show the user confirmation dialog.     *     * @throws Exception     */   ])', 1), ('([3:/android/appsecurity/cts/ExternalStorageHostTest.java]:[AES]:[3]:method_text:[he     * system will show the user confirmation dialog.     *     * @throws Exception     */   ])', 1), ('([3:/android/appsecurity/cts/ExternalStorageHostTest.java]:[AES]:[3]:method_text:[, the system will NOT show the user confirmation dialog.     *     * @throws Exception     */   ])', 1), ('([3:/android/appsecurity/cts/ExternalStorageHostTest.java]:[AES]:[3]:method_text:[re : features) {            Assume.assumeFalse(featureList.contains(feature));        }    }   ])', 1)]"	"https://github.com"	""	"[('XTS', 86), ('AES', 25)]"	"[('[android.graphics.cts.CanvasDrawGlyphsTest isTrue None]', 3), ('[android.graphics.cts.CanvasDrawGlyphsTest isFalse None]', 3), ('[android.uirendering.cts.testclasses.PathClippingTests testTextClip None]', 2), ('[android.appsecurity.cts.ExternalStorageHostTest testMediaEscalation None]', 2), ('[android.appsecurity.cts.ExternalStorageHostTest testMediaEscalation28 None]', 2), ('[android.appsecurity.cts.ExternalStorageHostTest testMediaEscalation29 None]', 2), ('[android.text.cts.AlteredCharSequenceTest testToString None]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAutoFill_neitherServiceCanAutofill_thenManualRequest None]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAutoFill_notImportantForAutofill_thenManualRequest None]', 1), ('[android.autofillservice.cts.inline.InlineAuthenticationTest testDatasetAuthClientStateSetOnIntentOnly None]', 1), ('[android.view.cts.ContextThemeWrapperTest testApplyOverrideConfiguration None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_idlessDatasetSelected_datasetWithIdIgnored None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_idlessDatasetIgnored_datasetWithIdSelected None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_oneDatasetSelected None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_multipleDatasetsSelected None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_noDatasetSelected_butManuallyEntered None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_noDatasetSelected_butManuallyEntered_matchingMultipleDatasets None]', 1), ('[android.widget.cts.SwitchTest testAccessText None]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testSelectionPositionForNonEditableView None]', 1), ('[android.autofillservice.cts.inline.InlineFillEventHistoryTest testOneDatasetAndSave None]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh None]', 1), ('[android.view.cts.ViewTest testIsShowingLayoutBounds None]', 1), ('[android.telephony.cts.CarrierConfigManagerTest isDataCapable None]', 1), ('[android.security.cts.EncryptionTest aesIsFast None]', 1), ('[android.graphics.cts.PaintTest testHasGlyph None]', 1), ('[android.graphics.cts.PaintTest testBreakText None]', 1), ('[android.graphics.cts.PaintTest testGetFontSpacing None]', 1), ('[android.graphics.cts.PaintTest testAccessTextScaleX None]', 1), ('[android.graphics.cts.PaintTest testAscent None]', 1), ('[android.graphics.cts.PaintTest testAccessTextSkewX None]', 1), ('[android.graphics.cts.PaintTest testAccessTextSize None]', 1), ('[android.graphics.cts.PaintTest testGetTextWidths None]', 1), ('[android.graphics.cts.PaintTest testGetFontMetrics1 None]', 1), ('[android.graphics.cts.PaintTest testGetFontMetrics2 None]', 1), ('[android.graphics.cts.PaintTest testDescent None]', 1), ('[android.graphics.cts.PaintTest testGetTextBounds None]', 1), ('[android.graphics.cts.PaintTest testGetFontMetricsInt1 None]', 1), ('[android.graphics.cts.PaintTest testGetFontMetricsInt2 None]', 1), ('[android.graphics.cts.PaintTest testMeasureText None]', 1), ('[android.graphics.cts.PaintTest testMeasureTextWithLongText None]', 1), ('[android.graphics.cts.PaintTest testGetRunAdvanceStartLessThanContextStart None]', 1), ('[android.graphics.cts.PaintTest testGetRunAdvanceContextStartNegative None]', 1), ('[android.graphics.cts.PaintTest testGetOffsetForAdvanceContextStartNegative None]', 1), ('[android.graphics.cts.PaintTest testGetOffsetForAdvanceStartLessThanContextStart None]', 1), ('[android.graphics.cts.PaintTest testElegantText None]', 1), ('[android.graphics.cts.PaintTest testEqualsForTextMeasurment_textSize None]', 1), ('[android.graphics.cts.PaintTest testEqualsForTextMeasurment_textSkew None]', 1), ('[android.graphics.cts.PaintTest testEqualsForTextMeasurment_textScale None]', 1), ('[android.graphics.cts.PaintTest testHyphenEdit None]', 1), ('[android.graphics.cts.PaintTest testGetTextRunAdvances None]', 1), ('[android.view.textclassifier.cts.TextClassifierValueObjectsTest testTextSelection None]', 1), ('[android.view.textclassifier.cts.TextClassifierValueObjectsTest testTextSelection_differentParams None]', 1), ('[android.view.textclassifier.cts.TextClassifierValueObjectsTest testTextSelection_defaultValues None]', 1), ('[android.view.textclassifier.cts.TextClassifierValueObjectsTest testTextSelection_prunedConfidenceScore None]', 1), ('[android.view.textclassifier.cts.TextClassifierValueObjectsTest testTextSelection_invalidStartParams None]', 1), ('[android.view.textclassifier.cts.TextClassifierValueObjectsTest testTextSelection_invalidEndParams None]', 1), ('[android.view.textclassifier.cts.TextClassifierValueObjectsTest testTextSelection_entityIndexOutOfBounds None]', 1), ('[android.view.textclassifier.cts.TextClassifierValueObjectsTest testTextSelectionRequest None]', 1), ('[android.view.textclassifier.cts.TextClassifierValueObjectsTest testTextSelectionRequest_nullValues None]', 1), ('[android.view.textclassifier.cts.TextClassifierValueObjectsTest testTextSelectionRequest_defaultValues None]', 1), ('[android.text.cts.BoringLayoutTest testDraw None]', 1), ('[android.text.cts.BoringLayoutTest testPrecomputedText None]', 1), ('[android.app.cts.ActivityManagerAppExitInfoTest testOther None]', 1), ('[com.android.cts.verifier.security.UnlockedDeviceRequiredTest setPassFailButtonClickListeners None]', 1), ('[android.autofillservice.cts.MutableAutofillIdTest testSave_serviceExpectingOldId None]', 1), ('[android.widget.cts.TextSwitcherTest testConstructor None]', 1), ('[android.widget.cts.TextSwitcherTest testSetText None]', 1), ('[android.widget.cts.TextSwitcherTest testSetCurrentText None]', 1), ('[android.widget.cts.TextSwitcherTest testAddView None]', 1), ('[android.server.wm.WindowMetricsWindowContextTests testMetricsMatchesLayoutOnWindowContext None]', 1), ('[android.server.wm.WindowMetricsWindowContextTests testMetricsMatchesDisplayAreaOnWindowContext None]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_KeyOperations_Wrap_Unencrypted_Success None]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_AES None]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_ImportSupportedSizes_AES None]', 1), ('[android.autofillservice.cts.commontests.LoginActivityCommonTestCase testAutofill_twoDatasets_selectSecondDataset None]', 1), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testPreparePerformance None]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testSave_submitButtonClicked None]', 1), ('[android.app.cts.NotificationTest testBuildStrictMode None]', 1), ('[android.media.cts.StreamingMediaPlayerTest testHlsSampleAes_bbb_audio_only_overridable None]', 1), ('[android.media.cts.StreamingMediaPlayerTest testHlsSampleAes_bbb_unmuxed_1500k None]', 1), ('[android.telephony.cts.CarrierConfigManagerTest isSimCardPresent None]', 1), ('[android.graphics.text.cts.MeasuredTextTest testCanvasDrawTextRun_sameOutputTestForLatinText None]', 1), ('[android.graphics.text.cts.MeasuredTextTest testCanvasDrawTextRun_sameOutputTestForCJKText None]', 1), ('[android.graphics.text.cts.MeasuredTextTest testCanvasDrawTextRun_sameOutputTestForRTLText None]', 1), ('[android.keystore.cts.KeyAttestationTest testAesAttestation None]', 1), ('[android.keystore.cts.AesKeyGenPerformanceTest testAesKeyGen None]', 1), ('[android.autofillservice.cts.inline.InlineWebViewActivityTest testAutofillAndSave None]', 1), ('[android.telephony.cts.CarrierMessagingServiceWrapperTest testSendTextSms None]', 1), ('[android.telephony.cts.CarrierMessagingServiceWrapperTest testSendMultipartTextSms None]', 1), ('[android.view.accessibility.cts.AccessibilityNodeInfoTest testIsHeadingTakesOldApiIntoAccount None]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testMediaEscalation_RequestWriteFilePathSupport None]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testCreateRequest_userDenied None]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testCreateRequest_noRESAndMES_showConfirmDialog None]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testCreateRequest_noMANAGEMEDIA_showConfirmDialog None]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testCreateRequest_withNoAML_showConfirmDialog None]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testCreateRequest_withPermission_notShowConfirmDialog None]', 1)]"
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-6"	"9.9.3/C-1-6"	"09090300.670106"	"""C-1-6] MUST encrypt file names using AES-256-CBC-CTS or Adiantum."""	"Found reference in comments"	""	"AES CBC CTS"	""	""	""	""	""	""	""	2	"android.security.cts.MetadataEncryptionTest"	"testRequestBluetoothPermission30_Default() testRequestBluetoothPermission30_GrantLocation() testRequestBluetoothPermission31_Default() testRequestBluetoothPermission31_GrantNearby() testRequestBluetoothPermission31_GrantLocation() testRequestBluetoothPermission31_GrantNearby_GrantLocation() testRequestBluetoothPermissionNeverForLocation31_Default() testRequestBluetoothPermissionNeverForLocation31_GrantNearby() testRequestBluetoothPermissionNeverForLocation31_GrantLocation() testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation()"	"CtsSecurityHostTestCases"	"[('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java', 13), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 11), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 8), ('/home/gpoor/cts-source/cts/tests/BlobStore/src/com/android/cts/blob/BlobStoreManagerTest.java', 7), ('/home/gpoor/cts-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/WhitelistTest.java', 7), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/alert/AnomalyDetectionTests.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/telephony/src/android/permission/cts/telephony/TelephonyManagerPermissionTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Images_ThumbnailsTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/PointerCaptureTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/TestMedia.java', 3), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/transition/src/android/transition/cts/FadeTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/testharness/src/android/testharness/cts/TestHarnessModeDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appbinding/hostside/src/com/android/cts/appbinding/AppBindingHostTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AccessSerialNumberTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ContentProviderOperationTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/WriteExternalStorageApp/src/com/android/cts/writeexternalstorageapp/ChangeDefaultUris.java', 2), ('/home/gpoor/cts-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssMeasurementRegistrationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/http/cts/ApacheHttpClientTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/RadioGroup_LayoutParamsTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/dumpsys/src/android/dumpsys/cts/StoragedDumpsysTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/style/cts/ClickableSpanTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/VerifyInputEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SoundPoolTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/VibrationAttributesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/TrafficStatsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/VideoCallTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephonyprovider/src/android/telephonyprovider/cts/SmsConversationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ExpandableListViewTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/rscpp/src/android/cts/rscpp/RSScriptTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/StatsdAppSecurityAtomTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/appsearch/src/com/android/cts/appsearch/external/app/AppSearchSchemaMigrationCtsTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/hdmi/cts/HdmiControlManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/blobstore/src/com/android/cts/host/blob/DataCleanupTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/FractionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/install/src/android/cts/install/host/UpgradeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/LoginWithCustomHighlightActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaPlayerDrmTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/proto/src/android/util/proto/cts/ProtoOutputStreamUInt32Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/RsaKeyGenPerformanceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPerfTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/BasicAdapterTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/NetworkLoggingDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/UnsupportedErrorDialogTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/sqlite/cts/SQLiteMisuseExceptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/AlteredCharSequenceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/SelectionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_05.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/InstantCookieHostTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/RestoreAnyVersion/src/RestoreAnyVersionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaDrmMetricsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sample/src/android/sample/cts/SampleHostJUnit4DeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestRootn.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CertInstaller/src/com/android/cts/certinstaller/PreSelectedKeyAccessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/animation/src/android/animation/cts/LayoutAnimationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/assist/src/android/assist/cts/DisableContextTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc18_05.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardInputTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/CommonCriteriaModeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SignalStrengthUpdateRequestTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapRGBAF16Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/ScanFilterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/transition/src/android/transition/cts/SharedElementCallbackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/ECDSASignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/RegexValidatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EscalateToRuntimePermissions/src/com/android/cts/escalatepermission/PermissionEscalationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/View_LayoutPositionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ContextMoreTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/WearableExtenderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/OverrideConfigTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AssistantStackTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/AbsSavedStateTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/RcsUceAdapterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/netlegacy22.permission/src/android/net/cts/legacy/api22/permission/NoNetworkStatePermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/Session2CommandTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/STKFrameworkTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/adb/src/android/adb/cts/AdbHostTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/LocationPolicyTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AliasActivityTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/PasswordComplexityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeCospi.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PermissionInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ToneGeneratorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/GestureDescriptionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/CreateItemsRequestTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ClipDescriptionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/appsearch/src/com/android/cts/appsearch/app/AppSearchManagerCtsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/AffiliationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineAuthenticationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/CustomPrintOptionsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_CommonDataKinds_StructuredPostalTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DeviceIdentifierTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaController2Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/CompilerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/DirectoryTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TransferOwnerIncomingApp/src/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioMetadataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/health/cts/HealthStatsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/net/src/com/android/cts/net/HostsideRestrictBackgroundNetworkTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/rscpp/src/android/cts/rscpp/RSForEachTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/EventConnectionAPI30/src/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/manifest_enabled_sdk_29/src/android/cts/tagging/sdk29/manifest_enabled/TaggingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/ScriptTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/ndef/src/android/ndef/cts/NdefTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/Color_ColorLongTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/inspector/cts/WindowInspectorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/unit/ContentCaptureContextTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/multiuser/src/android/multiuser/cts/SplitSystemUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ConnectivityManagerPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ContextThemeWrapperTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/PrecompiledLayoutTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/networksecurityconfig/networksecurityconfig-downloadmanager/src/android/security/net/config/cts/DownloadManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleLegacySplitScreenTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CertInstaller/src/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/DecodeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/assist/src/android/assist/cts/FocusChangeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ShapeTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ActionModeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/animation/src/android/animation/cts/ValueAnimatorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/ConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/animation/cts/LayoutAnimationController_AnimationParametersTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/sqlite/cts/SQLiteWalTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/signedconfig/hostside/src/com/android/cts/signedconfig/SignedConfigHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/assist/src/android/assist/cts/FlagSecureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/InputDeviceEnabledTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecEncoderSurfaceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/View_DefaultFocusHighlightTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/EcKeyGenPerformanceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/testsdk29/src/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/style/cts/LeadingMarginSpan_StandardTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationImeTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PrivilegedUpdateTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/IntrinsicConvolve5x5.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ClearProfileOwnerNegativeTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsearch/src/android/appsearch/cts/AppSearchMultiUserTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/IntrinsicLut.java', 1), ('/home/gpoor/cts-12-source/cts/tests/appsearch/src/com/android/cts/appsearch/app/BatchResultCallbackCtsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Artists_AlbumsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/BatchUpdatesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestAcos.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/EncodeDecodeAccuracyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/CrossProfileAppsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/RadioAccessSpecifierTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/InstantAppsTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/EmbossMaskFilterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/LteVopsSupportInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/PnoSettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/AttachedContextActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreTrashedTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/VoidPtr.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy20/src/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/settings/Settings_SettingNotFoundExceptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/RatingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/XmlTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2019_2022.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/os/src/android/os/cts/QuiescentBootTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/accounts/src/android/accounts/cts/AccountManagerUnaffiliatedAuthenticatorTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/FragmentViewTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/ActivityManagerIncidentTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/transition/src/android/transition/cts/SceneTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/HardwareBitmapTests.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowContextTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/preconditions/app/src/android/telephony/cts/preconditions/app/TelephonyPreparerAppTest.java', 1), ('/home/gpoor/cts-source/cts/tests/signature/tests/src/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sample/src/android/sample/cts/SampleDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/sqlite/cts/SQLiteExceptionTest.java', 1)]"	"[('(1,CTS,/android/text/style/cts/ClickableSpanTest.java)', 1), ('(1,CTS,/android/view/cts/VerifyInputEventTest.java)', 1), ('(2,CTS,/android/media/cts/SoundPoolTest.java)', 1), ('(1,CTS,/android/os/cts/VibrationAttributesTest.java)', 1), ('(1,CTS,/android/net/cts/TrafficStatsTest.java)', 1), ('(2,CTS,/android/telecom/cts/VideoCallTest.java)', 1), ('(19,CTS,/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java)', 1), ('(2,CTS,/android/telephonyprovider/cts/SmsConversationTest.java)', 1), ('(2,CTS,/android/widget/cts/ExpandableListViewTest.java)', 1), ('(7,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java)', 1), ('(1,CTS,/android/cts/rscpp/RSScriptTest.java)', 1), ('(7,CTS,/android/appsecurity/cts/StatsdAppSecurityAtomTest.java)', 1), ('(2,CTS,/com/android/cts/appsearch/external/app/AppSearchSchemaMigrationCtsTestBase.java)', 1), ('(1,CTS,/android/hardware/hdmi/cts/HdmiControlManagerTest.java)', 1), ('(1,CTS,/com/android/cts/host/blob/DataCleanupTest.java)', 1), ('(2,CTS,/android/content/res/cts/FractionTest.java)', 1), ('(3,CTS,/android/cts/install/host/UpgradeTest.java)', 1), ('(4,CTS,/android/autofillservice/cts/LoginWithCustomHighlightActivityTest.java)', 1), ('(2,CTS,/android/media/cts/MediaPlayerDrmTest.java)', 1), ('(2,CTS,/android/util/proto/cts/ProtoOutputStreamUInt32Test.java)', 1), ('(1,CTS,/android/keystore/cts/RsaKeyGenPerformanceTest.java)', 1), ('(1,CTS,/android/mediapc/cts/MultiEncoderPerfTest.java)', 1), ('(1,CTS,/android/bluetooth/cts/BasicAdapterTest.java)', 1), ('(2,CTS,/com/android/cts/delegate/NetworkLoggingDelegateTest.java)', 1), ('(1,CTS,/android/server/wm/UnsupportedErrorDialogTests.java)', 1), ('(1,CTS,/android/database/sqlite/cts/SQLiteMisuseExceptionTest.java)', 1), ('(1,CTS,/android/text/cts/AlteredCharSequenceTest.java)', 1), ('(1,CTS,/android/text/cts/SelectionTest.java)', 1), ('(3,CTS,/android/transition/cts/FadeTest.java)', 1), ('(1,CTS,/android/security/cts/Poc17_05.java)', 1), ('(3,CTS,/android/appsecurity/cts/InstantCookieHostTest.java)', 1), ('(4,CTS,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(1,CTS,/RestoreAnyVersionTest.java)', 1), ('(1,CTS,/android/media/cts/MediaDrmMetricsTest.java)', 1), ('(6,CTS,/android/sample/cts/SampleHostJUnit4DeviceTest.java)', 1), ('(1,CTS,/android/server/wm/DisplayTests.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestRootn.java)', 1), ('(1,CTS,/com/android/cts/certinstaller/PreSelectedKeyAccessTest.java)', 1), ('(1,CTS,/android/animation/cts/LayoutAnimationTest.java)', 1), ('(1,CTS,/android/assist/cts/DisableContextTest.java)', 1), ('(5,CTS,/android/testharness/cts/TestHarnessModeDeviceTest.java)', 1), ('(1,CTS,/android/security/cts/Poc18_05.java)', 1), ('(7,CTS,/android/cts/statsd/alert/AnomalyDetectionTests.java)', 1), ('(18,CTS,/android/view/cts/PointerCaptureTest.java)', 1), ('(1,CTS,/android/server/wm/KeyguardInputTests.java)', 1), ('(1,CTS,/com/android/cts/deviceandprofileowner/CommonCriteriaModeTest.java)', 1), ('(1,CTS,/android/telephony/cts/SignalStrengthUpdateRequestTest.java)', 1), ('(1,CTS,/android/graphics/cts/BitmapRGBAF16Test.java)', 1), ('(5,CTS,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(1,CTS,/android/bluetooth/cts/ScanFilterTest.java)', 1), ('(1,CTS,/android/transition/cts/SharedElementCallbackTest.java)', 1), ('(2,CTS,/android/keystore/cts/ECDSASignatureTest.java)', 1), ('(14,CTS,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(1,CTS,/android/autofillservice/cts/unittests/RegexValidatorTest.java)', 1), ('(2,CTS,/com/android/cts/escalatepermission/PermissionEscalationTest.java)', 1), ('(3,CTS,/android/view/cts/View_LayoutPositionTest.java)', 1), ('(2,CTS,/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java)', 1), ('(1,CTS,/android/content/cts/ContextMoreTest.java)', 1), ('(1,CTS,/android/app/cts/WearableExtenderTest.java)', 1), ('(1,CTS,/android/server/wm/OverrideConfigTests.java)', 1), ('(2,CTS,/android/graphics/cts/CameraVulkanGpuTest.java)', 1), ('(32,CTS,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(1,CTS,/android/server/wm/AssistantStackTests.java)', 1), ('(1,CTS,/android/view/cts/AbsSavedStateTest.java)', 1), ('(24,CTS,/com/android/cts/appbinding/AppBindingHostTest.java)', 1), ('(6,CTS,/android/appsecurity/cts/AccessSerialNumberTest.java)', 1), ('(2,CTS,/android/telephony/ims/cts/RcsUceAdapterTest.java)', 1), ('(1,CTS,/android/net/cts/legacy/api22/permission/NoNetworkStatePermissionTest.java)', 1), ('(1,CTS,/android/media/cts/Session2CommandTest.java)', 1), ('(14,CTS,/android/provider/cts/media/MediaStore_Images_ThumbnailsTest.java)', 1), ('(1,CTS,/android/security/cts/STKFrameworkTest.java)', 1), ('(2,CTS,/android/adb/cts/AdbHostTest.java)', 1), ('(3,CTS,/android/appsecurity/cts/LocationPolicyTest.java)', 1), ('(1,CTS,/android/app/cts/AliasActivityTest.java)', 1), ('(6,CTS,/com/android/cts/devicepolicy/PasswordComplexityTest.java)', 1), ('(36,CTS,/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestNativeCospi.java)', 1), ('(1,CTS,/android/content/pm/cts/PermissionInfoTest.java)', 1), ('(1,CTS,/android/media/cts/ToneGeneratorTest.java)', 1), ('(2,CTS,/android/accessibilityservice/cts/GestureDescriptionTest.java)', 1), ('(1,CTS,/android/security/identity/cts/CreateItemsRequestTest.java)', 1), ('(3,CTS,/android/content/cts/ContentProviderOperationTest.java)', 1), ('(1,CTS,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(3,CTS,/com/android/cts/writeexternalstorageapp/ChangeDefaultUris.java)', 1), ('(5,CTS,/android/content/cts/ClipDescriptionTest.java)', 1), ('(1,CTS,/com/android/cts/appsearch/app/AppSearchManagerCtsTest.java)', 1), ('(1,CTS,/com/android/cts/deviceowner/AffiliationTest.java)', 1), ('(17,CTS,/android/autofillservice/cts/inline/InlineAuthenticationTest.java)', 1), ('(1,CTS,/android/print/cts/CustomPrintOptionsTest.java)', 1), ('(4,CTS,/android/provider/cts/contacts/ContactsContract_CommonDataKinds_StructuredPostalTest.java)', 1), ('(8,CTS,/android/location/cts/privileged/GnssMeasurementRegistrationTest.java)', 1), ('(3,CTS,/android/appsecurity/cts/DeviceIdentifierTest.java)', 1), ('(1,CTS,/android/media/cts/MediaController2Test.java)', 1), ('(1,CTS,/android/renderscript/cts/CompilerTest.java)', 1), ('(1,CTS,/com/android/server/cts/device/statsdatom/DirectoryTests.java)', 1), ('(1,CTS,/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java)', 1), ('(1,CTS,/android/media/cts/AudioMetadataTest.java)', 1), ('(1,CTS,/android/os/health/cts/HealthStatsTest.java)', 1), ('(1,CTS,/com/android/cts/net/HostsideRestrictBackgroundNetworkTests.java)', 1), ('(1,CTS,/android/cts/rscpp/RSForEachTest.java)', 1), ('(6,CTS,/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java)', 1), ('(2,CTS,/android/cts/tagging/sdk29/manifest_enabled/TaggingTest.java)', 1), ('(2,CTS,/android/renderscript/cts/ScriptTest.java)', 1), ('(1,CTS,/android/ndef/cts/NdefTest.java)', 1), ('(1,CTS,/android/graphics/cts/Color_ColorLongTest.java)', 1), ('(5,CTS,/android/view/inspector/cts/WindowInspectorTest.java)', 1), ('(1,CTS,/android/contentcaptureservice/cts/unit/ContentCaptureContextTest.java)', 1), ('(1,CTS,/android/multiuser/cts/SplitSystemUserTest.java)', 1), ('(1,CTS,/android/permission/cts/ConnectivityManagerPermissionTest.java)', 1), ('(24,CTS,/com/android/cts/blob/BlobStoreManagerTest.java)', 1), ('(164,CTS,/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java)', 1), ('(1,CTS,/android/view/cts/ContextThemeWrapperTest.java)', 1), ('(6,CTS,/android/net/http/cts/ApacheHttpClientTest.java)', 1), ('(2,CTS,/com/android/cts/devicepolicy/MixedProfileOwnerTest.java)', 1), ('(2,CTS,/android/view/cts/PrecompiledLayoutTest.java)', 1), ('(3,CTS,/android/security/net/config/cts/DownloadManagerTest.java)', 1), ('(1,CTS,/android/server/wm/lifecycle/ActivityLifecycleLegacySplitScreenTests.java)', 1), ('(1,CTS,/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java)', 1), ('(2,CTS,/android/security/cts/DecodeTest.java)', 1), ('(1,CTS,/android/assist/cts/FocusChangeTest.java)', 1), ('(5,CTS,/android/uirendering/cts/testclasses/ShapeTests.java)', 1), ('(4,CTS,/android/view/cts/ActionModeTest.java)', 1), ('(2,CTS,/android/animation/cts/ValueAnimatorTest.java)', 1), ('(1,CTS,/android/content/res/cts/ConfigurationTest.java)', 1), ('(1,CTS,/android/view/animation/cts/LayoutAnimationController_AnimationParametersTest.java)', 1), ('(1,CTS,/android/database/sqlite/cts/SQLiteWalTest.java)', 1), ('(19,CTS,/com/android/cts/signedconfig/SignedConfigHostTest.java)', 1), ('(1,CTS,/android/assist/cts/FlagSecureTest.java)', 1), ('(1,CTS,/android/view/cts/InputDeviceEnabledTest.java)', 1), ('(1,CTS,/android/mediav2/cts/CodecEncoderSurfaceTest.java)', 1), ('(3,CTS,/android/view/cts/View_DefaultFocusHighlightTest.java)', 1), ('(1,CTS,/android/keystore/cts/EcKeyGenPerformanceTest.java)', 1), ('(4,CTS,/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java)', 1), ('(1,CTS,/android/text/style/cts/LeadingMarginSpan_StandardTest.java)', 1), ('(1,CTS,/android/server/wm/WindowInsetsAnimationImeTests.java)', 1), ('(9,CTS,/android/appsecurity/cts/PrivilegedUpdateTests.java)', 1), ('(1,CTS,/android/renderscript/cts/IntrinsicConvolve5x5.java)', 1), ('(1,CTS,/com/android/cts/deviceandprofileowner/ClearProfileOwnerNegativeTest.java)', 1), ('(1,CTS,/android/appsearch/cts/AppSearchMultiUserTest.java)', 1), ('(1,CTS,/android/renderscript/cts/IntrinsicLut.java)', 1), ('(1,CTS,/com/android/cts/appsearch/app/BatchResultCallbackCtsTest.java)', 1), ('(7,CTS,/android/provider/cts/media/MediaStore_Audio_Artists_AlbumsTest.java)', 1), ('(1,CTS,/android/autofillservice/cts/unittests/BatchUpdatesTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestAcos.java)', 1), ('(3,CTS,/android/mediav2/cts/EncodeDecodeAccuracyTest.java)', 1), ('(2,CTS,/android/devicepolicy/cts/CrossProfileAppsTest.java)', 1), ('(1,CTS,/android/telephony/cts/RadioAccessSpecifierTest.java)', 1), ('(6,CTS,/android/security/cts/TestMedia.java)', 1), ('(1,CTS,/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java)', 1), ('(1,CTS,/android/alarmmanager/cts/InstantAppsTests.java)', 1), ('(1,CTS,/android/graphics/cts/EmbossMaskFilterTest.java)', 1), ('(1,CTS,/android/telephony/cts/LteVopsSupportInfoTest.java)', 1), ('(3,CTS,/android/net/wifi/nl80211/cts/PnoSettingsTest.java)', 1), ('(2,CTS,/android/widget/cts/RadioGroup_LayoutParamsTest.java)', 1), ('(6,CTS,/android/autofillservice/cts/AttachedContextActivityTest.java)', 1), ('(4,CTS,/android/provider/cts/media/MediaStoreTrashedTest.java)', 1), ('(1,CTS,/android/renderscript/cts/VoidPtr.java)', 1), ('(6,CTS,/android/dumpsys/cts/StoragedDumpsysTest.java)', 1), ('(1,CTS,/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java)', 1), ('(1,CTS,/android/provider/cts/settings/Settings_SettingNotFoundExceptionTest.java)', 1), ('(6,CTS,/android/permission/cts/OneTimePermissionTest.java)', 1), ('(1,CTS,/android/media/cts/RatingTest.java)', 1), ('(1,CTS,/android/util/cts/XmlTest.java)', 1), ('(1,CTS,/android/security/cts/CVE_2019_2022.java)', 1), ('(1,CTS,/android/os/cts/QuiescentBootTests.java)', 1), ('(8,CTS,/android/accounts/cts/AccountManagerUnaffiliatedAuthenticatorTests.java)', 1), ('(1,CTS,/android/fragment/cts/FragmentViewTests.java)', 1), ('(5,CTS,/com/android/server/cts/ActivityManagerIncidentTest.java)', 1), ('(1,CTS,/android/transition/cts/SceneTest.java)', 1), ('(7,CTS,/android/uirendering/cts/testclasses/HardwareBitmapTests.java)', 1), ('(1,CTS,/android/server/wm/WindowContextTests.java)', 1), ('(2,CTS,/android/telephony/cts/preconditions/app/TelephonyPreparerAppTest.java)', 1), ('(3,CTS,/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java)', 1), ('(1,CTS,/android/sample/cts/SampleDeviceTest.java)', 1), ('(1,CTS,/android/database/sqlite/cts/SQLiteExceptionTest.java)', 1), ('(17,CTS,/android/contentcaptureservice/cts/WhitelistTest.java)', 1)]"	"[('([1:/android/permission/cts/telephony/TelephonyManagerPermissionTest.java]:[CTS]:[1]:method_text:[n     * Expects a security exception since the caller does not have carrier privileges.     */   ])', 4), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[CTS]:[1]:method_text:[.     * Expects a security exception since the caller does not have carrier privileges.     */   ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[CTS]:[1]:method_text:[ctSuccess */);            }        } finally {            blobData.delete();        }    }   ])', 2), ('([1:/android/text/style/cts/ClickableSpanTest.java]:[CTS]:[1]:method_text:[junit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class ClickableSpanTest {   ])', 1), ('([1:/android/view/cts/VerifyInputEventTest.java]:[CTS]:[1]:method_text:[y = mActivityRule.getActivity();        PollingCheck.waitFor(mActivity::hasWindowFocus);    }   ])', 1), ('([2:/android/media/cts/SoundPoolTest.java]:[CTS]:[2]:method_text:[       mSoundPool.release();            mSoundPool = null;            return;        }    }   ])', 1), ('([1:/android/os/cts/VibrationAttributesTest.java]:[CTS]:[1]:method_text:[tionEffect TEST_PREBAKED =            VibrationEffect.get(VibrationEffect.EFFECT_CLICK, true);   ])', 1), ('([1:/android/net/cts/TrafficStatsTest.java]:[CTS]:[1]:method_text:[not within range ["" + lower + "", "" + upper + ""]"",                range.contains(value));    }   ])', 1), ('([2:/android/telecom/cts/VideoCallTest.java]:[CTS]:[2]:method_text:[    /**     * Tests ability to start a 2-way video call and retrieve its video state.     */   ])', 1), ('([18:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[CTS]:[18]:method_text:[ new UnlockScreenRule();    private static final long TIMEOUT = TimeUnit.SECONDS.toMillis(5);   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[CTS]:[1]:method_text:[able window hosted by a different process     * temporarily becomes the focused window.     */   ])', 1), ('([2:/android/telephonyprovider/cts/SmsConversationTest.java]:[CTS]:[2]:method_text:[s test is to check most recent insert sms body equals to the Conversation     * Snippet     */   ])', 1), ('([2:/android/widget/cts/ExpandableListViewTest.java]:[CTS]:[2]:method_text:[tivity::hasWindowFocus);        mExpandableListView = mActivity.getExpandableListView();    }   ])', 1), ('([7:/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java]:[CTS]:[7]:method_text:[        runCommandForNoOutput(getInstrumentation(), ""am force-stop "" + TARGET_PACKAGE);    }   ])', 1), ('([1:/android/cts/rscpp/RSScriptTest.java]:[CTS]:[1]:method_text:[c {        System.loadLibrary(""rscpptest_jni"");    }    native boolean testSet(String path);   ])', 1), ('([7:/android/appsecurity/cts/StatsdAppSecurityAtomTest.java]:[CTS]:[7]:method_text:[ortUtils.clearReports(getDevice());        getDevice().uninstallPackage(STATSD_APP_PKG);    }   ])', 1), ('([2:/com/android/cts/appsearch/external/app/AppSearchSchemaMigrationCtsTestBase.java]:[CTS]:[2]:method_text:[      mDb.setSchema(new SetSchemaRequest.Builder().setForceOverride(true).build()).get();    }   ])', 1), ('([1:/android/hardware/hdmi/cts/HdmiControlManagerTest.java]:[CTS]:[1]:method_text:[CEC));        mHdmiControlManager = context.getSystemService(HdmiControlManager.class);    }   ])', 1), ('([1:/com/android/cts/host/blob/DataCleanupTest.java]:[CTS]:[1]:method_text:[obStoreHostTest {    private static final String TEST_CLASS = TARGET_PKG + "".DataCleanupTest"";   ])', 1), ('([2:/android/content/res/cts/FractionTest.java]:[CTS]:[2]:method_text:[  mResources = mContext.getResources();        mValue = new TypedValue();    }    @SmallTest   ])', 1), ('([3:/android/cts/install/host/UpgradeTest.java]:[CTS]:[3]:method_text:[t updating APEX"",                    mShimApexRule.isUpdatingApexSupported());        }    }   ])', 1), ('([4:/android/autofillservice/cts/LoginWithCustomHighlightActivityTest.java]:[CTS]:[4]:method_text:[tatus();    }    @After    public void teardown() {        MyDrawable.clearStatus();    }   ])', 1), ('([2:/android/media/cts/MediaPlayerDrmTest.java]:[CTS]:[2]:method_text:[inal Uri CENC_VIDEO_URL_DOWNLOADED = getUriFromFile(""car_cenc-20120827-88.mp4"");    // Tests   ])', 1), ('([2:/android/util/proto/cts/ProtoOutputStreamUInt32Test.java]:[CTS]:[2]:method_text:[------------------------------------------------------    /**     * Test writeUInt32.     */   ])', 1), ('([1:/android/keystore/cts/RsaKeyGenPerformanceTest.java]:[CTS]:[1]:method_text:[ds PerformanceTestBase {    private final int[] SUPPORTED_RSA_KEY_SIZES = {2048, 3072, 4096};   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPerfTest.java]:[CTS]:[1]:method_text:[sync});                }            }        }        return argsList;    }    @LargeTest   ])', 1), ('([1:/android/bluetooth/cts/BasicAdapterTest.java]:[CTS]:[1]:method_text:[eChanged = mAdapterNameChangedlock.newCondition();        mIsAdapterNameChanged = false;    }   ])', 1), ('([2:/com/android/cts/delegate/NetworkLoggingDelegateTest.java]:[CTS]:[2]:method_text:[tDown = new CountDownLatch(1);        NetworkLogsReceiver.mExceptionFromReceiver = null;    }   ])', 1), ('([1:/android/server/wm/UnsupportedErrorDialogTests.java]:[CTS]:[1]:method_text:[}    /** Make sure the developer options apply correctly leading to the dialog being shown. */   ])', 1), ('([1:/android/database/sqlite/cts/SQLiteMisuseExceptionTest.java]:[CTS]:[1]:method_text:[ android.test.AndroidTestCase;public class SQLiteMisuseExceptionTest extends AndroidTestCase {   ])', 1), ('([1:/android/text/cts/AlteredCharSequenceTest.java]:[CTS]:[1]:method_text:[SOURCE_STR = ""This is a char sequence."";    private AlteredCharSequence mAlteredCharSequence;   ])', 1), ('([1:/android/text/cts/SelectionTest.java]:[CTS]:[1]:method_text:[oncurrent.CountDownLatch;@SmallTest@RunWith(AndroidJUnit4.class)public class SelectionTest {   ])', 1), ('([2:/android/transition/cts/FadeTest.java]:[CTS]:[2]:method_text:[();        mFade.setDuration(200);        mTransition = mFade;        resetListener();    }   ])', 1), ('([1:/android/transition/cts/FadeTest.java]:[CTS]:[1]:method_text:[                * (sigX + sigY + CONSTANT_C2);        ssim /= denom;        return ssim;    }}])', 1), ('([1:/android/security/cts/Poc17_05.java]:[CTS]:[1]:method_text:[nner.class)public class Poc17_05 extends SecurityTestCase {    /**     *  b/34277115     */   ])', 1), ('([3:/android/appsecurity/cts/InstantCookieHostTest.java]:[CTS]:[3]:method_text:[ception {        uninstallPackage(INSTANT_COOKIE_APP_PKG);        clearAppCookieData();    }   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[CTS]:[4]:method_text:[ void tearDown() throws Exception {        mActivity.finish();        super.tearDown();    }   ])', 1), ('([1:/RestoreAnyVersionTest.java]:[CTS]:[1]:method_text:[ublic void setUp() {        Log.i(TAG, ""set up"");        mContext = getTargetContext();    }   ])', 1), ('([1:/android/media/cts/MediaDrmMetricsTest.java]:[CTS]:[1]:method_text:[       } catch (Exception e) {            return ""unavailable"";        }    }    @Presubmit   ])', 1), ('([6:/android/sample/cts/SampleHostJUnit4DeviceTest.java]:[CTS]:[6]:method_text:[  public void setUp() throws Exception {        uninstallPackage(getDevice(), TEST_PKG);    }   ])', 1), (""([1:/android/server/wm/DisplayTests.java]:[CTS]:[1]:method_text:[ that the global configuration is equal to the default display's override configuration.     */   ])"", 1), ('([2:/android/renderscript/cts/generated/TestRootn.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/com/android/cts/certinstaller/PreSelectedKeyAccessTest.java]:[CTS]:[1]:method_text:[Exception {        super.setUp();    }    // Test that this app can access pre-granted alias   ])', 1), ('([1:/android/animation/cts/LayoutAnimationTest.java]:[CTS]:[1]:method_text:[    public void teardown() {        ValueAnimator.setDurationScale(mOldAnimationScale);    }   ])', 1), ('([1:/android/assist/cts/DisableContextTest.java]:[CTS]:[1]:method_text:[StructureEnabled.TRUE, ScreenshotEnabled.TRUE);        logContextAndScreenshotSetting();    }   ])', 1), ('([3:/android/testharness/cts/TestHarnessModeDeviceTest.java]:[CTS]:[3]:method_text:[odeDeviceTest extends BaseHostJUnit4Test {    private static final int ONE_MINUTE = 60 * 1000;   ])', 1), ('([2:/android/testharness/cts/TestHarnessModeDeviceTest.java]:[CTS]:[2]:method_text:[e, but it should have been wiped."", path),                getDevice().doesFileExist(path));    }}])', 1), ('([1:/android/security/cts/Poc18_05.java]:[CTS]:[1]:method_text:[    * Does not require root but must be a hostside test to avoid a race     * condition     */   ])', 1), ('([2:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[CTS]:[2]:method_text:[ for count works.    // Also tests that anomaly detection works when spanning multiple buckets.   ])', 1), ('([1:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[CTS]:[1]:method_text:[tection for duration works.    // Also tests that refractory periods in anomaly detection work.   ])', 1), ('([1:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[CTS]:[1]:method_text:[   }    // Tests that anomaly detection for duration works even when the alarm fires too late.   ])', 1), ('([1:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[CTS]:[1]:method_text:[).getAlertId()).isEqualTo(ALERT_ID);    }    // Tests that anomaly detection for value works.   ])', 1), ('([1:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[CTS]:[1]:method_text:[ireSince(markTime)).isTrue();    }    // Test that anomaly detection for pulled metrics work.   ])', 1), ('([1:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[CTS]:[1]:method_text:[  .setId(ANOMALY_EVENT_ID)                              .setWhat(ANOMALY_DETECT_MATCH_ID));    }}])', 1), ('([15:/android/view/cts/PointerCaptureTest.java]:[CTS]:[15]:method_text:[d(R.id.target2);        PollingCheck.waitFor(TIMEOUT_DELTA, mActivity::hasWindowFocus);    }   ])', 1), ('([1:/android/view/cts/PointerCaptureTest.java]:[CTS]:[1]:method_text:[rtFalse(mTarget.hasPointerCapture());        assertFalse(mActivity.hasPointerCapture());    }   ])', 1), ('([2:/android/view/cts/PointerCaptureTest.java]:[CTS]:[2]:method_text:[ivity.hasWindowFocus());        assertPointerCapture(false);        activity.finish();    }   ])', 1), ('([1:/android/server/wm/KeyguardInputTests.java]:[CTS]:[1]:method_text:[sertNoMoreEvents() {        KeyEvent event = mActivity.popKey();        assertNull(event);    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/CommonCriteriaModeTest.java]:[CTS]:[1]:method_text:[d.cts.deviceandprofileowner;public class CommonCriteriaModeTest extends BaseDeviceAdminTest {   ])', 1), ('([1:/android/telephony/cts/SignalStrengthUpdateRequestTest.java]:[CTS]:[1]:method_text:[getPackageManager()                .hasSystemFeature(PackageManager.FEATURE_TELEPHONY));    }   ])', 1), ('([1:/android/graphics/cts/BitmapRGBAF16Test.java]:[CTS]:[1]:method_text:[nsparentBitmap = BitmapFactory.decodeResource(mResources, R.raw.p3_transparent, options);    }   ])', 1), ('([1:/android/permission/cts/telephony/TelephonyManagerPermissionTest.java]:[CTS]:[1]:method_text:[     * Requires Permission:     * {@link android.Manifest.permission#READ_PHONE_STATE}.     */   ])', 1), ('([1:/android/bluetooth/cts/ScanFilterTest.java]:[CTS]:[1]:method_text:[000000L);            mFilterBuilder = new ScanFilter.Builder();        }    }    @SmallTest   ])', 1), ('([1:/android/transition/cts/SharedElementCallbackTest.java]:[CTS]:[1]:method_text:[ SharedElementCallbackTest {    private static class Callback extends SharedElementCallback {}   ])', 1), ('([2:/android/keystore/cts/ECDSASignatureTest.java]:[CTS]:[2]:method_text:[Arrays;import java.util.Collection;public class ECDSASignatureTest extends AndroidTestCase {   ])', 1), ('([7:/android/telephony/cts/TelephonyManagerTest.java]:[CTS]:[7]:method_text:[ckageManager.FEATURE_TELEPHONY)                && mTelephonyManager.getPhoneCount() > 0;    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[CTS]:[1]:method_text:[caller does not have carrier privileges or is not the     * current default dialer app.     */   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[CTS]:[1]:method_text:[mergencyNumberList.     *     * Also enforce country-specific emergency number in CTS.     */   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[CTS]:[1]:method_text:[.isEmergencyNumber.     *     * Also enforce country-specific emergency number in CTS.     */   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[CTS]:[1]:method_text:[  }    }    /**     * Tests {@link TelephonyManager#getSupportedRadioAccessFamily()}     */   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[CTS]:[1]:method_text:[ minor) {        if (major < 0 || minor < 0) return 0;        return major * 100 + minor;    }}])', 1), ('([1:/android/autofillservice/cts/unittests/RegexValidatorTest.java]:[CTS]:[1]:method_text:[nWith(AndroidJUnit4.class)@AppModeFull(reason = ""Unit test"")public class RegexValidatorTest {   ])', 1), ('([2:/com/android/cts/escalatepermission/PermissionEscalationTest.java]:[CTS]:[2]:method_text:[org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class PermissionEscalationTest {   ])', 1), ('([3:/android/view/cts/View_LayoutPositionTest.java]:[CTS]:[3]:method_text:[ public void setup() {        mActivity = mActivityRule.getActivity();    }    @UiThreadTest   ])', 1), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[CTS]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                FEATURE_WATCH, FEATURE_TELEVISION);    }   ])', 1), ('([1:/android/content/cts/ContextMoreTest.java]:[CTS]:[1]:method_text:[n a while and     * make sure getSystemService() still returns non-null.     */    @LargeTest   ])', 1), ('([1:/android/app/cts/WearableExtenderTest.java]:[CTS]:[1]:method_text:[d void setUp() throws Exception {        super.setUp();        mContext = getContext();    }   ])', 1), ('([1:/android/server/wm/OverrideConfigTests.java]:[CTS]:[1]:method_text:[deConfigTests */@Presubmitpublic class OverrideConfigTests extends ActivityManagerTestBase {   ])', 1), ('([2:/android/graphics/cts/CameraVulkanGpuTest.java]:[CTS]:[2]:method_text:[ class CameraVulkanGpuTest {    static {        System.loadLibrary(""ctsgraphics_jni"");    }   ])', 1), ('([16:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[16]:method_text:[          sInstrumentation, sUiAutomation, mActivityRule);    }    @MediumTest    @Presubmit   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[1]:method_text:[ after update"",                editTextNode.isHeading());    }    @MediumTest    @Presubmit   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[1]:method_text:[g(R.string.button_tooltip),                buttonNode.getTooltipText());    }    @MediumTest   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[1]:method_text:[List())));        assertTrue(hasTooltipShowing(R.id.buttonWithTooltip));    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[2]:method_text:[resh();        assertThat(buttonNode.getTraversalBefore(), nullValue());    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[2]:method_text:[refresh();        assertThat(editNode.getTraversalAfter(), nullValue());    }    @MediumTest   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[1]:method_text:[r one        assertThat(labelForNode.getLabeledBy(), equalTo(editNode));    }    @MediumTest   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[1]:method_text:[argThat(event -> event.getActionMasked() == MotionEvent.ACTION_OUTSIDE));    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[2]:method_text:["",                node.getViewIdResourceName());        node.recycle();    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[2]:method_text:[ {            enableTouchExploration(sInstrumentation, false);        }    }    @MediumTest   ])', 1), ('([3:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[3]:method_text:[tic int getCurrentUser() {        return android.os.Process.myUserHandle().getIdentifier();    }}])', 1), ('([1:/android/server/wm/AssistantStackTests.java]:[CTS]:[1]:method_text:[isplayId;            mDefaultWindowingMode = getDefaultDisplayWindowingMode();        }    }   ])', 1), ('([1:/android/view/cts/AbsSavedStateTest.java]:[CTS]:[1]:method_text:[junit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class AbsSavedStateTest {   ])', 1), ('([23:/com/android/cts/appbinding/AppBindingHostTest.java]:[CTS]:[23]:method_text:[   * Install APK 1 and make it the default SMS app and make sure the service gets bound.     */   ])', 1), ('([1:/com/android/cts/appbinding/AppBindingHostTest.java]:[CTS]:[1]:method_text:[ntUserId));    }    /**     * Make sure the service responds to setComponentEnabled.     */   ])', 1), ('([4:/android/appsecurity/cts/AccessSerialNumberTest.java]:[CTS]:[4]:method_text:[ion {        super.tearDown();        getDevice().uninstallPackage(ACCESS_SERIAL_PKG);    }   ])', 1), ('([2:/android/appsecurity/cts/AccessSerialNumberTest.java]:[CTS]:[2]:method_text:[android.os.cts.AccessSerialModernTest"",                ""testAccessSerialPermissionNeeded"");    }}])', 1), ('([2:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[CTS]:[2]:method_text:[)) {            fail(""This test requires that there is a SIM in the device!"");        }    }   ])', 1), ('([1:/android/net/cts/legacy/api22/permission/NoNetworkStatePermissionTest.java]:[CTS]:[1]:method_text:[ssion:     *   {@link android.Manifest.permission#CHANGE_NETWORK_STATE}.     */    @SmallTest   ])', 1), ('([1:/android/media/cts/Session2CommandTest.java]:[CTS]:[1]:method_text:[le TEST_CUSTOM_EXTRAS = new Bundle();    private final Bundle TEST_RESULT_DATA = new Bundle();   ])', 1), ('([8:/android/provider/cts/media/MediaStore_Images_ThumbnailsTest.java]:[CTS]:[8]:method_text:[ew AssertionFailedError(""Expected roughly "" + expected + "" but was "" + actual);        }    }   ])', 1), ('([2:/android/provider/cts/media/MediaStore_Images_ThumbnailsTest.java]:[CTS]:[2]:method_text:[    mContentResolver.delete(fileuri, null, null);        assertFileNotExists(imagePath);    }   ])', 1), ('([2:/android/provider/cts/media/MediaStore_Images_ThumbnailsTest.java]:[CTS]:[2]:method_text:[fileUri, null /* where */, null /* where args */);        new File(sourcePath).delete();    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Images_ThumbnailsTest.java]:[CTS]:[1]:method_text:[t in sdcard            fail(""There is no sdcard attached! "" + e.getMessage());        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Images_ThumbnailsTest.java]:[CTS]:[1]:method_text:[       if (e.errno != OsConstants.ENOENT) {                throw e;            }        }    }}])', 1), ('([1:/android/security/cts/STKFrameworkTest.java]:[CTS]:[1]:method_text:[ been sent from SIM card to Telephony using     * zero-permission malicious application     */   ])', 1), ('([2:/android/adb/cts/AdbHostTest.java]:[CTS]:[2]:method_text:[c7c6d5edcbe04454eb9a40f947ac0a3045f64eb    // for the patch that enabled this on Pixel devices.   ])', 1), ('([3:/android/appsecurity/cts/LocationPolicyTest.java]:[CTS]:[3]:method_text:[public void tearDown() throws Exception {        getDevice().uninstallPackage(TEST_PKG);    }   ])', 1), ('([1:/android/app/cts/AliasActivityTest.java]:[CTS]:[1]:method_text:[ctivityTest extends InstrumentationTestCase {    private static final long SLEEP_TIME = 1000;   ])', 1), ('([6:/com/android/cts/devicepolicy/PasswordComplexityTest.java]:[CTS]:[6]:method_text:[en) {            getDevice().uninstallPackage(PKG);        }        super.tearDown();    }   ])', 1), ('([32:/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java]:[CTS]:[32]:method_text:[ed() {                mActivity = getActivity();            }        };    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java]:[CTS]:[1]:method_text:[ugmentedHelper.resetAugmentedService();        augmentedService.waitUntilDisconnected();    }   ])', 1), ('([1:/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java]:[CTS]:[1]:method_text:[(componentName, usernameId);        assertThat(requestResult).isFalse();    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java]:[CTS]:[1]:method_text:[is shown.        mAugmentedUiBot.assertUiShown(usernameId, ""Augment Me"");    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java]:[CTS]:[1]:method_text:[requestAutofill(componentName, usernameId);        assertThat(requestResult).isFalse();    }   ])', 1), ('([2:/android/renderscript/cts/generated/TestNativeCospi.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/content/pm/cts/PermissionInfoTest.java]:[CTS]:[1]:method_text:[e internet, so this permission is not required to send data to ""            + ""the internet."";   ])', 1), ('([1:/android/media/cts/ToneGeneratorTest.java]:[CTS]:[1]:method_text:[ ""TODO: evaluate and port to instant"")public class ToneGeneratorTest extends AndroidTestCase {   ])', 1), ('([2:/android/accessibilityservice/cts/GestureDescriptionTest.java]:[CTS]:[2]:method_text:[ath = new Path();        mNominalPath.moveTo(0, 0);        mNominalPath.lineTo(10, 10);    }   ])', 1), ('([1:/android/security/identity/cts/CreateItemsRequestTest.java]:[CTS]:[1]:method_text:[t java.util.Map;import co.nstant.in.cbor.CborException;public class CreateItemsRequestTest {   ])', 1), ('([2:/android/content/cts/ContentProviderOperationTest.java]:[CTS]:[2]:method_text:[   public void setUp() throws Exception {        provider = mock(ContentProvider.class);    }   ])', 1), ('([1:/android/content/cts/ContentProviderOperationTest.java]:[CTS]:[1]:method_text:[ty check            return Objects.equals(bundle.toString(), other.toString());        });    }}])', 1), ('([1:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[CTS]:[1]:method_text:[Check for validity.     * 3. Sleep.     * 4. Do it 10 times and compare with old ones.     */   ])', 1), ('([2:/com/android/cts/writeexternalstorageapp/ChangeDefaultUris.java]:[CTS]:[2]:method_text:[ng RINGER_TITLE = ""CTS ringer title"";    private static final int MAX_NUMBER_OF_ATTEMPTS = 10;   ])', 1), ('([1:/com/android/cts/writeexternalstorageapp/ChangeDefaultUris.java]:[CTS]:[1]:method_text:[ATION, uri);    }    /** Resets and cleans up to a valid state. This method must not fail. */   ])', 1), ('([5:/android/content/cts/ClipDescriptionTest.java]:[CTS]:[5]:method_text:[        mUiDevice.wakeUp();        launchActivity(MockActivity.class);    }    @UiThreadTest   ])', 1), ('([1:/com/android/cts/appsearch/app/AppSearchManagerCtsTest.java]:[CTS]:[1]:method_text:[.app.appsearch.AppSearchManager;import org.junit.Test;public class AppSearchManagerCtsTest {   ])', 1), ('([1:/com/android/cts/deviceowner/AffiliationTest.java]:[CTS]:[1]:method_text:[_POLICY_SERVICE);        mAdminComponent = BasicAdminReceiver.getComponentName(context);    }   ])', 1), ('([17:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[CTS]:[17]:method_text:[pdown when     * authentication done and then back to original Activity.     */    @Presubmit   ])', 1), ('([1:/android/print/cts/CustomPrintOptionsTest.java]:[CTS]:[1]:method_text:[Helper.cancelPrinting();        waitForPrinterDiscoverySessionDestroyCallbackCalled(1);    }   ])', 1), ('([4:/android/provider/cts/contacts/ContactsContract_CommonDataKinds_StructuredPostalTest.java]:[CTS]:[4]:method_text:[) throws Exception {        super.setUp();        mResources = mContext.getResources();    }   ])', 1), ('([7:/android/location/cts/privileged/GnssMeasurementRegistrationTest.java]:[CTS]:[7]:method_text:[();    }    /**     * Test GPS measurements registration with full tracking enabled.     */   ])', 1), ('([1:/android/location/cts/privileged/GnssMeasurementRegistrationTest.java]:[CTS]:[1]:method_text:[ents.  Retry outdoors?"",                !events.isEmpty());        softAssert.assertAll();    }}])', 1), ('([3:/android/appsecurity/cts/DeviceIdentifierTest.java]:[CTS]:[3]:method_text:[ {        super.tearDown();        getDevice().uninstallPackage(DEVICE_IDENTIFIER_PKG);    }   ])', 1), ('([1:/android/media/cts/MediaController2Test.java]:[CTS]:[1]:method_text:[(mSession != null) {            mSession.close();            mSession = null;        }    }   ])', 1), (""([1:/android/renderscript/cts/CompilerTest.java]:[CTS]:[1]:method_text:[ins symbols that can't be resolved at runtime,     * which should trigger an exception.     */   ])"", 1), ('([1:/com/android/server/cts/device/statsdatom/DirectoryTests.java]:[CTS]:[1]:method_text:[t.Assert.assertFalse;import static org.junit.Assert.assertTrue;public class DirectoryTests {   ])', 1), ('([1:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java]:[CTS]:[1]:method_text:[geManager().hasSystemFeature(                PackageManager.FEATURE_SECURE_LOCK_SCREEN);    }   ])', 1), ('([1:/android/media/cts/AudioMetadataTest.java]:[CTS]:[1]:method_text:[a.BaseMap>        KEY_BASE_MAP = AudioMetadata.createKey(""data"", AudioMetadata.BaseMap.class);   ])', 1), ('([1:/android/os/health/cts/HealthStatsTest.java]:[CTS]:[1]:method_text:["").longValue());    }    /**     * Tests parceling empty HealthStats.     */    @SmallTest   ])', 1), ('([1:/com/android/cts/net/HostsideRestrictBackgroundNetworkTests.java]:[CTS]:[1]:method_text:[   /**************************     * Data Saver Mode tests. *     **************************/   ])', 1), ('([1:/android/cts/rscpp/RSForEachTest.java]:[CTS]:[1]:method_text:[        System.loadLibrary(""rscpptest_jni"");    }    native boolean testForEach(String path);   ])', 1), ('([6:/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java]:[CTS]:[6]:method_text:[ConnectionTestHelper.flipAndAssertMicToggleOff(mUserID, mSensorPrivacyManager);        }    }   ])', 1), ('([2:/android/cts/tagging/sdk29/manifest_enabled/TaggingTest.java]:[CTS]:[2]:method_text:[ org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)@SmallTestpublic class TaggingTest {   ])', 1), ('([2:/android/renderscript/cts/ScriptTest.java]:[CTS]:[2]:method_text:[mport android.renderscript.cts.ScriptC_negate;public class ScriptTest extends RSBaseCompute {   ])', 1), ('([1:/android/ndef/cts/NdefTest.java]:[CTS]:[1]:method_text:[ ASCII = Charset.forName(""US-ASCII"");    static final Charset UTF8 = Charset.forName(""UTF-8"");   ])', 1), ('([1:/android/graphics/cts/Color_ColorLongTest.java]:[CTS]:[1]:method_text:[nit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class Color_ColorLongTest {   ])', 1), ('([5:/android/view/inspector/cts/WindowInspectorTest.java]:[CTS]:[5]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([1:/android/contentcaptureservice/cts/unit/ContentCaptureContextTest.java]:[CTS]:[1]:method_text:[);    @Before    public void setExtras() {        mExtras.putString(""DUDE"", ""SWEET"");    }   ])', 1), ('([1:/android/multiuser/cts/SplitSystemUserTest.java]:[CTS]:[1]:method_text:[st.InstrumentationTestCase;public class SplitSystemUserTest extends InstrumentationTestCase {   ])', 1), ('([1:/android/permission/cts/ConnectivityManagerPermissionTest.java]:[CTS]:[1]:method_text:[ <p>Tests Permission:     *   {@link android.Manifest.permission#ACCESS_NETWORK_STATE}.     */   ])', 1), ('([4:/com/android/cts/blob/BlobStoreManagerTest.java]:[CTS]:[4]:method_text:[CE_SEC = 2;    private static final long TIMEOUT_WAIT_FOR_IDLE_MS = 2_000;    // TODO: Make it a])', 1), ('([3:/com/android/cts/blob/BlobStoreManagerTest.java]:[CTS]:[3]:method_text:[  runShellCmd(""cmd blob_store clear-all-blobs"");        mContext.getFilesDir().delete();    }   ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[CTS]:[2]:method_text:[* expectSuccess */);        }, Pair.create(KEY_MAX_COMMITTED_BLOBS, String.valueOf(1)));    }   ])', 1), ('([5:/com/android/cts/blob/BlobStoreManagerTest.java]:[CTS]:[5]:method_text:[ 1111L, ""tag2"");            assertThat(blobHandle1).isNotEqualTo(blobHandle2);        }    }   ])', 1), ('([8:/com/android/cts/blob/BlobStoreManagerTest.java]:[CTS]:[8]:method_text:[) {            mCommandReceiver = null;            mContext.unbindService(this);        }    }}])', 1), (""([100:/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java]:[CTS]:[100]:method_text:[     * no contacts if there are no starred or frequent contacts in the user's contacts.     */   ])"", 1), (""([7:/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java]:[CTS]:[7]:method_text:[s in the correct order if there are only starred contacts in the user's     * contacts.     */   ])"", 1), ('([3:/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java]:[CTS]:[3]:method_text:[CONTENT_STREQUENT_URI, ids,                false, sContentValues[1], sContentValues[0]);    }   ])', 1), ('([2:/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java]:[CTS]:[2]:method_text:[oredValuesWithContactsFilter(Contacts.CONTENT_STREQUENT_URI, ids,                false);    }   ])', 1), ('([6:/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java]:[CTS]:[6]:method_text:[NT_FILTER_URI}     * correctly filters the returned contacts with the given user input.     */   ])', 1), ('([3:/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java]:[CTS]:[3]:method_text:[ithContactsFilter(uri, ids, false,                sContentValues[1], sContentValues[0]);    }   ])', 1), ('([2:/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java]:[CTS]:[2]:method_text:[ld(),                STREQUENT_PROJECTION,                new long[]{ids[0]}        );    }   ])', 1), ('([5:/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java]:[CTS]:[5]:method_text:[ntactsFilter(uri, mDataIds, false,                sContentValues[0], sContentValues[2]);    }   ])', 1), ('([4:/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java]:[CTS]:[4]:method_text:[ ranking order.        assertCursorStoredValuesWithContactsFilter(uri, mDataIds, false);    }   ])', 1), ('([2:/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java]:[CTS]:[2]:method_text:[      STREQUENT_PHONE_ONLY_PROJECTION,                new long[]{mDataIds[0]}        );    }   ])', 1), ('([2:/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java]:[CTS]:[2]:method_text:[   assertCursorStoredValuesWithContactsFilter(Contacts.CONTENT_FREQUENT_URI, ids, false);    }   ])', 1), ('([2:/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java]:[CTS]:[2]:method_text:[StoredValuesWithContactsFilter(Contacts.CONTENT_FREQUENT_URI, ids,                true);    }   ])', 1), ('([26:/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java]:[CTS]:[26]:method_text:[).load();        return new long[] {contact.getId(), contact2.getId(), contact3.getId()};    }}])', 1), ('([1:/android/view/cts/ContextThemeWrapperTest.java]:[CTS]:[1]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([5:/android/net/http/cts/ApacheHttpClientTest.java]:[CTS]:[5]:method_text:[id tearDown() throws Exception {        super.tearDown();        mWebServer.shutdown();    }   ])', 1), ('([1:/android/net/http/cts/ApacheHttpClientTest.java]:[CTS]:[1]:method_text:[ytesRead;            }        }        assertEquals(message, expectedNumBytes, numBytes);    }}])', 1), ('([2:/com/android/cts/devicepolicy/MixedProfileOwnerTest.java]:[CTS]:[2]:method_text:[N_RECEIVER_TEST_CLASS, mUserId));        super.tearDown();    }    @Override    @FlakyTest   ])', 1), ('([2:/android/view/cts/PrecompiledLayoutTest.java]:[CTS]:[2]:method_text:[ make sure that we get equivalent layouts when    // inflated with and without precompilation.   ])', 1), ('([3:/android/security/net/config/cts/DownloadManagerTest.java]:[CTS]:[3]:method_text:[ength: 5\\r\\n\\r\\nhello"";    private static final long TIMEOUT = 3 * DateUtils.SECOND_IN_MILLIS;   ])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleLegacySplitScreenTests.java]:[CTS]:[1]:method_text:[ Exception {        super.setUp();        assumeTrue(supportsSplitScreenMultiWindow());    }   ])', 1), ('([1:/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java]:[CTS]:[1]:method_text:[ption {        mDpm.uninstallCaCert(null, TEST_CA.getBytes());        super.tearDown();    }   ])', 1), ('([2:/android/security/cts/DecodeTest.java]:[CTS]:[2]:method_text:[. Instead, it should fail to     * decode.     */    @SecurityTest(minPatchLevel = ""2017-07"")   ])', 1), ('([1:/android/assist/cts/FocusChangeTest.java]:[CTS]:[1]:method_text:[espite the Assistant Firing""                    + Utils.TIMEOUT_MS + ""msec."");        }    }   ])', 1), ('([5:/android/uirendering/cts/testclasses/ShapeTests.java]:[CTS]:[5]:method_text:[h;@MediumTest@RunWith(AndroidJUnit4.class)public class ShapeTests extends ActivityTestBase {   ])', 1), ('([4:/android/view/cts/ActionModeTest.java]:[CTS]:[4]:method_text:[umentationRegistry.getInstrumentation();        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([2:/android/animation/cts/ValueAnimatorTest.java]:[CTS]:[2]:method_text:[tatic void afterClass() {        ValueAnimator.setDurationScale(sPreviousAnimatorScale);    }   ])', 1), ('([1:/android/content/res/cts/ConfigurationTest.java]:[CTS]:[1]:method_text:[ation.NAVIGATION_NONAV;        mConfig.orientation = Configuration.ORIENTATION_PORTRAIT;    }   ])', 1), ('([1:/android/view/animation/cts/LayoutAnimationController_AnimationParametersTest.java]:[CTS]:[1]:method_text:[t@RunWith(AndroidJUnit4.class)public class LayoutAnimationController_AnimationParametersTest {   ])', 1), ('([1:/android/database/sqlite/cts/SQLiteWalTest.java]:[CTS]:[1]:method_text:[AL file size is bigger than the threshold, and make sure     * the file gets truncated.     */   ])', 1), ('([19:/com/android/cts/signedconfig/SignedConfigHostTest.java]:[CTS]:[19]:method_text:[  assertThat(getDevice().installPackage(getTestApk(apkName), false, extraArgs)).isNull();    }   ])', 1), ('([1:/android/assist/cts/FlagSecureTest.java]:[CTS]:[1]:method_text:[rotected void customSetup() throws Exception {        startTestActivity(TEST_CASE_TYPE);    }   ])', 1), ('([1:/android/view/cts/InputDeviceEnabledTest.java]:[CTS]:[1]:method_text:[rgetContext().getSystemService(InputManager.class);        assertNotNull(mInputManager);    }   ])', 1), ('([1:/android/mediav2/cts/CodecEncoderSurfaceTest.java]:[CTS]:[1]:method_text:[face mode.The output has to     * be consistent (not flaky) in all runs.     */    @LargeTest   ])', 1), ('([3:/android/view/cts/View_DefaultFocusHighlightTest.java]:[CTS]:[3]:method_text:[=            new ActivityTestRule<>(DefaultFocusHighlightCtsActivity.class);    @UiThreadTest   ])', 1), ('([1:/android/keystore/cts/EcKeyGenPerformanceTest.java]:[CTS]:[1]:method_text:[nceTest extends PerformanceTestBase {    final int[] SUPPORTED_CURVES = {224, 256, 384, 521};   ])', 1), ('([4:/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java]:[CTS]:[4]:method_text:[FLAG_REQUEST_ACCESSIBILITY_BUTTON)                == FLAG_REQUEST_ACCESSIBILITY_BUTTON);    }   ])', 1), ('([1:/android/text/style/cts/LeadingMarginSpan_StandardTest.java]:[CTS]:[1]:method_text:[RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class LeadingMarginSpan_StandardTest {   ])', 1), ('([1:/android/server/wm/WindowInsetsAnimationImeTests.java]:[CTS]:[1]:method_text:[ss, WINDOWING_MODE_FULLSCREEN);        mRootView = mActivity.getWindow().getDecorView();    }   ])', 1), ('([9:/android/appsecurity/cts/PrivilegedUpdateTests.java]:[CTS]:[9]:method_text:[stallPackage(TEST_PKG);        getDevice().executeShellCommand(""pm enable "" + SHIM_PKG);    }   ])', 1), ('([1:/android/renderscript/cts/IntrinsicConvolve5x5.java]:[CTS]:[1]:method_text:[, si, e, cf3, ""test convolve"", 3, w, h, sc);        si.destroy();        sr.destroy();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ClearProfileOwnerNegativeTest.java]:[CTS]:[1]:method_text:[clear profile owner"", e.getMessage());            }        }        super.tearDown();    }   ])', 1), ('([1:/android/appsearch/cts/AppSearchMultiUserTest.java]:[CTS]:[1]:method_text:[ (mSecondaryUserId > 0) {            getDevice().removeUser(mSecondaryUserId);        }    }   ])', 1), ('([1:/android/renderscript/cts/IntrinsicLut.java]:[CTS]:[1]:method_text:[.set_green(mGreen);        mScript.set_blue(mBlue);        mScript.set_alpha(mAlpha);    }   ])', 1), ('([1:/com/android/cts/appsearch/app/BatchResultCallbackCtsTest.java]:[CTS]:[1]:method_text:[able;import org.junit.Test;import java.util.Set;public class BatchResultCallbackCtsTest {   ])', 1), ('([7:/android/provider/cts/media/MediaStore_Audio_Artists_AlbumsTest.java]:[CTS]:[7]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/android/autofillservice/cts/unittests/BatchUpdatesTest.java]:[CTS]:[1]:method_text:[tchUpdatesTest {    private final BatchUpdates.Builder mBuilder = new BatchUpdates.Builder();   ])', 1), ('([2:/android/renderscript/cts/generated/TestAcos.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([3:/android/mediav2/cts/EncodeDecodeAccuracyTest.java]:[CTS]:[3]:method_text:[he     * decoder is expected to produce the color information accurately     */    @LargeTest   ])', 1), ('([2:/android/devicepolicy/cts/CrossProfileAppsTest.java]:[CTS]:[2]:method_text:[s);    @ClassRule @Rule    public static final DeviceState sDeviceState = new DeviceState();   ])', 1), ('([1:/android/telephony/cts/RadioAccessSpecifierTest.java]:[CTS]:[1]:method_text:[elephony.RadioAccessSpecifier;import org.junit.Test;public class RadioAccessSpecifierTest {   ])', 1), ('([3:/android/security/cts/TestMedia.java]:[CTS]:[3]:method_text:[ * Vulnerability Behaviour: SIGSEGV in self     */    @SecurityTest(minPatchLevel = ""2018-10"")   ])', 1), ('([1:/android/security/cts/TestMedia.java]:[CTS]:[1]:method_text:[* Vulnerability Behaviour: SIGSEGV in self     **/    @SecurityTest(minPatchLevel = ""2017-06"")   ])', 1), ('([2:/android/security/cts/TestMedia.java]:[CTS]:[2]:method_text:[ test methods     ******************************************************************************/}])', 1), ('([1:/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java]:[CTS]:[1]:method_text:[(                        EuiccService.RESULT_RESOLVABLE_ERRORS, null /*subscriptions*/);    }   ])', 1), ('([1:/android/alarmmanager/cts/InstantAppsTests.java]:[CTS]:[1]:method_text:[0L)                .with(""min_window"", 0L)                .commitAndAwaitPropagation();    }   ])', 1), ('([1:/android/graphics/cts/EmbossMaskFilterTest.java]:[CTS]:[1]:method_text:[ static final int CENTER_Y = BITMAP_HEIGHT / 2;    private static final int STROKE_WIDTH = 10;   ])', 1), ('([1:/android/telephony/cts/LteVopsSupportInfoTest.java]:[CTS]:[1]:method_text:[id.telephony.LteVopsSupportInfo;import org.junit.Test;public class LteVopsSupportInfoTest {   ])', 1), ('([3:/android/net/wifi/nl80211/cts/PnoSettingsTest.java]:[CTS]:[3]:method_text:[ tests if Wifi is not supported        assumeTrue(WifiFeature.isWifiSupported(context));    }   ])', 1), ('([1:/android/widget/cts/RadioGroup_LayoutParamsTest.java]:[CTS]:[1]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([1:/android/widget/cts/RadioGroup_LayoutParamsTest.java]:[CTS]:[1]:method_text:[, int heightAttr) {            super.setBaseAttributes(a, widthAttr, heightAttr);        }    }}])', 1), ('([6:/android/autofillservice/cts/AttachedContextActivityTest.java]:[CTS]:[6]:method_text:[rActivityLaunched() {                mActivity = getActivity();            }        };    }   ])', 1), ('([4:/android/provider/cts/media/MediaStoreTrashedTest.java]:[CTS]:[4]:method_text:[meName);    }    /**     * Verify that we can trash and untrash an item that we own.     */   ])', 1), (""([1:/android/renderscript/cts/VoidPtr.java]:[CTS]:[1]:method_text:[    * is only of type 'void*'     *     * This test runs for an allocation of type int     */   ])"", 1), ('([3:/android/dumpsys/cts/StoragedDumpsysTest.java]:[CTS]:[3]:method_text:[s the output of ""dumpsys storaged --force --hours 0.01"".     *     * @throws Exception     */   ])', 1), ('([3:/android/dumpsys/cts/StoragedDumpsysTest.java]:[CTS]:[3]:method_text:[TestIO = true;                }            }            assertTrue(hasTestIO);        }    }}])', 1), ('([1:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[CTS]:[1]:method_text:[r listener to disconnect        assertTrue(mListener == null || !mListener.isConnected);    }   ])', 1), ('([1:/android/provider/cts/settings/Settings_SettingNotFoundExceptionTest.java]:[CTS]:[1]:method_text:[ner.RunWith;@RunWith(AndroidJUnit4.class)public class Settings_SettingNotFoundExceptionTest {   ])', 1), ('([6:/android/permission/cts/OneTimePermissionTest.java]:[CTS]:[6]:method_text:[ions_timeout_millis"",                        mOldOneTimePermissionTimeoutValue, false));    }   ])', 1), ('([1:/android/media/cts/RatingTest.java]:[CTS]:[1]:method_text:[le */@NonMediaMainlineTest@SmallTest@RunWith(AndroidJUnit4.class)public class RatingTest {   ])', 1), ('([1:/android/util/cts/XmlTest.java]:[CTS]:[1]:method_text:[ST + ""><"" + TAG_SON + "" "" + ATT_NAME + ""=\\"""" + STR_ABC            + ""\\""/></"" + TAG_TEST + "">"";   ])', 1), ('([1:/android/security/cts/CVE_2019_2022.java]:[CTS]:[1]:method_text:[tyTestCase {    /**     * b/120506143     * Vulnerability Behaviour: SIGSEGV in self     */   ])', 1), ('([1:/android/os/cts/QuiescentBootTests.java]:[CTS]:[1]:method_text:[RE_LEANBACK_ONLY)) {            mDevice.executeShellCommand(CMD_INPUT_WAKEUP);        }    }   ])', 1), ('([8:/android/accounts/cts/AccountManagerUnaffiliatedAuthenticatorTests.java]:[CTS]:[8]:method_text:[nostic service and set it up.        mAccountManager = AccountManager.get(getContext());    }   ])', 1), ('([1:/android/fragment/cts/FragmentViewTests.java]:[CTS]:[1]:method_text:[ds the Views in the proper order. Popping the back stack    // should remove the correct Views.   ])', 1), ('([5:/com/android/server/cts/ActivityManagerIncidentTest.java]:[CTS]:[5]:method_text:[ic final int SYSTEM_UID = 1000;    /**     * Tests activity manager dumps broadcasts.     */   ])', 1), ('([1:/android/transition/cts/SceneTest.java]:[CTS]:[1]:method_text:[aseTransitionTest {    /**     * Test Scene(ViewGroup) with enterAction and exitAction     */   ])', 1), ('([7:/android/uirendering/cts/testclasses/HardwareBitmapTests.java]:[CTS]:[7]:method_text:[    }    @Before    public void setup() {        mRes = getActivity().getResources();    }   ])', 1), ('([1:/android/server/wm/WindowContextTests.java]:[CTS]:[1]:method_text:[indowContextTests */@Presubmitpublic class WindowContextTests extends WindowContextTestBase {   ])', 1), ('([2:/android/telephony/cts/preconditions/app/TelephonyPreparerAppTest.java]:[CTS]:[2]:method_text:[;    }    /**     * Test if device has a valid phone number     * @throws Exception     */   ])', 1), ('([3:/android/signature/cts/tests/BufferedReaderLineSpliteratorTest.java]:[CTS]:[3]:method_text:[(JUnit4.class)public class BufferedReaderLineSpliteratorTest extends LineSpliteratorTestBase {   ])', 1), ('([1:/android/sample/cts/SampleDeviceTest.java]:[CTS]:[1]:method_text:[preferences and asserts they can no longer be retrieved.     *     * @throws Exception     */   ])', 1), ('([1:/android/database/sqlite/cts/SQLiteExceptionTest.java]:[CTS]:[1]:method_text:[import android.test.AndroidTestCase;public class SQLiteExceptionTest extends AndroidTestCase {   ])', 1), ('([8:/android/contentcaptureservice/cts/WhitelistTest.java]:[CTS]:[8]:method_text:[s AbstractContentCaptureIntegrationActivityLessTest {    @Ignore(""will be whitelisted \'lite\'"")   ])', 1), ('([1:/android/contentcaptureservice/cts/WhitelistTest.java]:[CTS]:[1]:method_text:[VITIES);        assertNotWhitelisted(service);    }    @Ignore(""will be whitelisted \'lite\'"")   ])', 1), ('([1:/android/contentcaptureservice/cts/WhitelistTest.java]:[CTS]:[1]:method_text:[e = enableService(toSet(""not.me""), NO_ACTIVITIES);        assertNotWhitelisted(service);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/WhitelistTest.java]:[CTS]:[1]:method_text:[ntName.createRelative(MY_PACKAGE, "".who.cares"")));        assertNotWhitelisted(service);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/WhitelistTest.java]:[CTS]:[1]:method_text:[ce = enableService(toSet(MY_PACKAGE), NO_ACTIVITIES);        assertWhitelisted(service);    }   ])', 1), ('([1:/android/contentcaptureservice/cts/WhitelistTest.java]:[CTS]:[1]:method_text:[         toSet(OutOfProcessActivity.COMPONENT_NAME));        assertWhitelisted(service);    }   ])', 1), ('([4:/android/contentcaptureservice/cts/WhitelistTest.java]:[CTS]:[4]:method_text:[ssionEvents(true); //            OutOfProcessActivity.killOutOfProcessActivity();        }    }}])', 1)]"	""	""	"[('CTS', 249)]"	"[('[android.media.cts.SoundPoolTest exists None]', 1), ('[android.view.inputmethod.cts.InputMethodStartInputLifecycleTest DisableScreenDozeRule None]', 1), ('[android.view.inputmethod.cts.InputMethodStartInputLifecycleTest testInputConnectionStateWhenScreenStateChanges None]', 1), ('[android.telephonyprovider.cts.SmsConversationTest setupTestEnvironment None]', 1), ('[android.widget.cts.ExpandableListViewTest getExpandableListView None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerThrottlingTest getTestContext None]', 1), ('[com.android.cts.appsearch.external.app.AppSearchSchemaMigrationCtsTestBase isEmpty None]', 1), ('[android.cts.install.host.UpgradeTest isUpdatingApexSupported None]', 1), ('[android.transition.cts.FadeTest resetListener None]', 1), ('[android.transition.cts.FadeTest endVisibilityIsCorrect None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest finish None]', 1), ('[android.testharness.cts.TestHarnessModeDeviceTest testHarnessModeRemovesInstalledAppsAndData None]', 1), ('[android.cts.statsd.alert.AnomalyDetectionTests currentTimeMillis None]', 1), ('[android.cts.statsd.alert.AnomalyDetectionTests testCountAnomalyDetection None]', 1), ('[android.cts.statsd.alert.AnomalyDetectionTests testDurationAnomalyDetection None]', 1), ('[android.cts.statsd.alert.AnomalyDetectionTests testDurationAnomalyDetectionForLateAlarms None]', 1), ('[android.cts.statsd.alert.AnomalyDetectionTests testGaugeAnomalyDetection None]', 1), ('[android.cts.statsd.alert.AnomalyDetectionTests testPulledAnomalyDetection None]', 1), ('[android.view.cts.PointerCaptureTest uptimeMillis None]', 1), ('[android.view.cts.PointerCaptureTest testWindowFocusChangeEndsCapture None]', 1), ('[android.view.cts.PointerCaptureTest testActivityFocusChangeEndsCapture None]', 1), ('[android.server.wm.KeyguardInputTests testReceiveKeysOnTopOfKeyguard None]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testSetMode None]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testIsManualNetworkSelectionAllowedWithoutPermission None]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testGetNetworkType None]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testGetNetworkSelectionModeWithoutPermission None]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetMeidForSlot None]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetNetworkSelectionMode None]', 1), ('[android.telephony.cts.TelephonyManagerTest testSetNetworkSelectionModeAutomatic None]', 1), ('[android.telephony.cts.TelephonyManagerTest testCallQuality None]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetEmergencyNumberList None]', 1), ('[android.telephony.cts.TelephonyManagerTest testIsPotentialEmergencyNumber None]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetSimCardState None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest postTestTearDown None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testViewHeadingReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTooltipTextReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTooltipTextActionsReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTraversalBeforeReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTraversalAfterReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testLabelForReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testA11yActionTriggerMotionEventActionOutside None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTouchDelegateInfoReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTouchDelegateWithEbtBetweenView_ReHoverDelegate_FocusTargetAgain None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTouchDelegateCoverParentWithEbt_HoverChildAndBack_FocusTargetAgain None]', 1), ('[android.server.wm.AssistantStackTests AssistantSession None]', 1), ('[com.android.cts.appbinding.AppBindingHostTest isSmsCapable None]', 1), ('[com.android.cts.appbinding.AppBindingHostTest testUpgrade None]', 1), ('[android.appsecurity.cts.AccessSerialNumberTest testSerialAccessPolicy None]', 1), ('[android.telephony.ims.cts.RcsUceAdapterTest beforeAllTests None]', 1), ('[android.provider.cts.media.MediaStore_Images_ThumbnailsTest getDisplayMetrics None]', 1), ('[android.provider.cts.media.MediaStore_Images_ThumbnailsTest testQueryExternalMiniThumbnails None]', 1), ('[android.provider.cts.media.MediaStore_Images_ThumbnailsTest testThumbnailGenerationAndCleanup None]', 1), ('[android.provider.cts.media.MediaStore_Images_ThumbnailsTest testThumbnailOrderedQuery None]', 1), ('[android.provider.cts.media.MediaStore_Images_ThumbnailsTest testInsertUpdateDelete None]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testServiceLifecycle None]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutoFill_noPreviousRequest_requestAutofill None]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutoFill_hasPreviousRequestViewFocused_requestAutofill None]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutoFill_hasPreviousRequestViewNotFocused_requestAutofill None]', 1), ('[android.content.cts.ContentProviderOperationTest testLayering None]', 1), ('[com.android.cts.writeexternalstorageapp.ChangeDefaultUris testChangeDefaultUris None]', 1), ('[android.autofillservice.cts.inline.InlineAuthenticationTest InlineAuthenticationTest None]', 1), ('[android.print.cts.CustomPrintOptionsTest onPrinterDiscoverySessionDestroyCalled None]', 1), ('[android.location.cts.privileged.GnssMeasurementRegistrationTest dropShellPermissionIdentity None]', 1), ('[android.location.cts.privileged.GnssMeasurementRegistrationTest testGnssMeasurementRegistration_enableFullTracking None]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testSessionCommit_incompleteData None]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testSessionCommit_incorrectData None]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testCommitSession_countLimitExceeded None]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testBlobHandleEquality None]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testBlobHandleCreation None]', 1), ('[android.provider.cts.contacts.ContactsContract_FrequentsStrequentsTest testStrequents_noStarredOrFrequents None]', 1), ('[android.provider.cts.contacts.ContactsContract_FrequentsStrequentsTest testStrequents_starredOnlyInCorrectOrder None]', 1), ('[android.provider.cts.contacts.ContactsContract_FrequentsStrequentsTest testStrequents_frequentsOnlyInCorrectOrder None]', 1), ('[android.provider.cts.contacts.ContactsContract_FrequentsStrequentsTest testStrequents_starredAndFrequentsInCorrectOrder None]', 1), ('[android.provider.cts.contacts.ContactsContract_FrequentsStrequentsTest testStrequents_withFilter None]', 1), ('[android.provider.cts.contacts.ContactsContract_FrequentsStrequentsTest testStrequents_projection None]', 1), ('[android.provider.cts.contacts.ContactsContract_FrequentsStrequentsTest testStrequents_phoneOnly None]', 1), ('[android.provider.cts.contacts.ContactsContract_FrequentsStrequentsTest testStrequents_phoneOnlyFrequentsOrder None]', 1), ('[android.provider.cts.contacts.ContactsContract_FrequentsStrequentsTest testStrequents_phoneOnly_projection None]', 1), ('[android.provider.cts.contacts.ContactsContract_FrequentsStrequentsTest testFrequents_noFrequentsReturnsEmptyCursor None]', 1), ('[android.provider.cts.contacts.ContactsContract_FrequentsStrequentsTest testFrequents_CorrectOrder None]', 1), ('[android.provider.cts.contacts.ContactsContract_FrequentsStrequentsTest testFrequent_projection None]', 1), ('[android.net.http.cts.ApacheHttpClientTest testExecute None]', 1), ('[android.database.sqlite.cts.SQLiteWalTest exists None]', 1), ('[com.android.cts.signedconfig.SignedConfigHostTest uninstallTestApps None]', 1), ('[android.mediav2.cts.CodecEncoderSurfaceTest isCodecNameValid None]', 1), ('[android.accessibilityservice.cts.AccessibilityButtonSdk29Test postTestTearDown None]', 1), ('[android.appsecurity.cts.PrivilegedUpdateTests isDefaultAbi None]', 1), ('[android.renderscript.cts.IntrinsicConvolve5x5 finish None]', 1), ('[android.appsearch.cts.AppSearchMultiUserTest isMultiUserSupported None]', 1), ('[android.renderscript.cts.IntrinsicLut createTest None]', 1), ('[android.mediav2.cts.EncodeDecodeAccuracyTest isValid None]', 1), ('[android.security.cts.TestMedi testPocCVE_2018_9472 None]', 1), ('[android.security.cts.TestMedi testPocCVE_2018_9527 None]', 1), ('[android.alarmmanager.cts.InstantAppsTests isInstantApp None]', 1), ('[android.net.wifi.nl80211.cts.PnoSettingsTest createTestNetworks None]', 1), ('[android.widget.cts.RadioGroup_LayoutParamsTest testSetBaseAttributes None]', 1), ('[android.dumpsys.cts.StoragedDumpsysTest testStoragedOutput None]', 1), ('[android.sample.cts.SampleDeviceTest SampleDeviceTest None]', 1), ('[android.contentcaptureservice.cts.WhitelistTest testNothingWhitelisted None]', 1), ('[android.contentcaptureservice.cts.WhitelistTest testNotWhitelisted_byPackage None]', 1), ('[android.contentcaptureservice.cts.WhitelistTest testNotWhitelisted_byActivity None]', 1), ('[android.contentcaptureservice.cts.WhitelistTest testWhitelisted_byPackage None]', 1), ('[android.contentcaptureservice.cts.WhitelistTest testWhitelisted_byActivity None]', 1), ('[android.contentcaptureservice.cts.WhitelistTest testRinseAndRepeat None]', 1)]"
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-7"	"9.9.3/C-1-7"	"09090300.670107"	"""C-1-7] MUST be cryptographically bound to a hardware-backed Keystore. This keystore MUST be bound to Verified Boot and the device&#39;s hardware root of trust. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-8"	"9.9.3/C-1-8"	"09090300.670108"	"""C-1-8] CE keys MUST be bound to a user&#39;s lock screen credentials."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-9"	"9.9.3/C-1-9"	"09090300.670109"	"""C-1-9] CE keys MUST be bound to a default passcode when the user has not specified lock screen credentials."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-10"	"9.9.3/C-1-10"	"09090300.670110"	"""C-1-10] MUST be unique and distinct, in other words no user&#39;s CE or DE key matches any other user&#39;s CE or DE keys."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-11"	"9.9.3/C-1-11"	"09090300.670111"	"""C-1-11] MUST use the mandatorily supported ciphers, key lengths and modes."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-12"	"9.9.3/C-1-12"	"09090300.670112"	"""C-1-12] If the device has Advanced Encryption Standard (AES) instructions (such as ARMv8 Cryptography Extensions on ARM-based devices, or AES-NI on x86-based devices) then the AES-based options above for file name, file contents, and filesystem metadata encryption MUST be used, not Adiantum. && C-1-12] If the device has Advanced Encryption Standard (AES) instructions (such as ARMv8 Cryptography Extensions on ARM-based devices, or AES-NI on x86-based devices) then the AES-based options above for file name, file contents, and filesystem metadata encryption MUST be used, not Adiantum. | C-1-12] MUST be securely erased during bootloader unlock and lock as described here. SHOULD make preinstalled essential apps (e.g. Alarm, Phone, Messenger) Direct Boot aware. The upstream Android Open Source project provides a preferred implementation of File Based Encryption based on the Linux kernel &quot;fscrypt&quot; encryption feature, and of Metadata Encryption based on the Linux kernel &quot;dm-default-key&quot; feature. <h4 id=""994_resume_on_reboot"" """	"Found reference in comments"	""	"AES ARM"	""	""	""	""	""	""	""	2	"cts/tests/tests/security/native/encryption/FileBasedEncryptionPolicyTest.cpp"	"validateEncryptionModes"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/SplitTests.java', 21), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy29/src/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java', 6), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/StatusBarManagerTest.java', 5), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ZenPolicyTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/ConditionProviderServiceTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/ComplexFilterTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/alert/AnomalyDetectionTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/InstantAppsTests.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/AndroidKeyStoreTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ExternalStorageHostTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/WriteExternalStorageApp/src/com/android/cts/writeexternalstorageapp/ChangeDefaultUris.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/CpuInstructionsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/VisualizerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/AlarmManagerIncidentTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 2), ('/home/gpoor/cts-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssLocationValuesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/StreamingMediaPlayerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/ExtendedInCallServiceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/AesKeyGenPerformanceTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/apps/statsdapp/src/com/android/server/cts/device/statsd/AtomTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/VibrationAttributesTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appbinding/hostside/src/com/android/cts/appbinding/AppBindingHostTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarPropertyValueTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/VelocityTrackerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTestAacDrc.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/harmfulappwarning/testapp/src/android/harmfulappwarning/testapp/HarmfulAppWarningDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/EncryptionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/PixelCopyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarSensorManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarPackageManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/SurfaceViewPreviewTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/settings/Settings_NameValueTableTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_MediaTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAttestationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_MediaTest.java', 1)]"	"[('(4,ARM,/android/media/cts/AudioTrackTest.java)', 2), ('(2,ARM,/android/provider/cts/media/MediaStore_Audio_MediaTest.java)', 2), ('(4,ARM,/android/os/cts/VibrationAttributesTest.java)', 1), ('(12,ARM,/android/cts/statsd/alert/AnomalyDetectionTests.java)', 1), ('(1,ARM,/com/android/cts/appbinding/AppBindingHostTest.java)', 1), ('(1,ARM,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(3,ARM,/com/android/cts/writeexternalstorageapp/ChangeDefaultUris.java)', 1), ('(1,ARM,/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java)', 1), ('(22,ARM,/android/alarmmanager/cts/InstantAppsTests.java)', 1), ('(21,ARM,/android/app/cts/StatusBarManagerTest.java)', 1), ('(13,ARM,/android/app/notification/legacy/cts/ConditionProviderServiceTest.java)', 1), ('(7,ARM,/android/os/cts/CpuInstructionsTest.java)', 1), ('(1,ARM,/android/car/cts/CarPropertyValueTest.java)', 1), ('(8,ARM,/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java)', 1), ('(1,ARM,/android/view/cts/VelocityTrackerTest.java)', 1), ('(6,ARM,/android/media/cts/VisualizerTest.java)', 1), ('(6,ARM,/android/media/cts/DecoderTestAacDrc.java)', 1), ('(9,ARM,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(5,AES,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(7,ARM,/android/harmfulappwarning/testapp/HarmfulAppWarningDeviceTest.java)', 1), ('(91,ARM,/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java)', 1), ('(50,ARM,/com/android/server/cts/AlarmManagerIncidentTest.java)', 1), ('(4,ARM,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(12,ARM,/android/app/cts/ZenPolicyTest.java)', 1), ('(5,AES,/android/security/cts/EncryptionTest.java)', 1), ('(1,AES,/android/graphics/cts/PaintTest.java)', 1), ('(2,ARM,/android/graphics/cts/PaintTest.java)', 1), ('(2,AES,/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java)', 1), ('(1,ARM,/android/view/cts/PixelCopyTest.java)', 1), ('(1,ARM,/android/car/cts/CarSensorManagerTest.java)', 1), ('(11,AES,/android/keystore/cts/AndroidKeyStoreTest.java)', 1), ('(1,ARM,/android/car/cts/CarPackageManagerTest.java)', 1), ('(1,AES,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(1,ARM,/android/app/cts/NotificationTest.java)', 1), ('(1,ARM,/android/provider/cts/settings/Settings_NameValueTableTest.java)', 1), ('(2,ARM,/android/location/cts/privileged/GnssLocationValuesTest.java)', 1), ('(120,ARM,/android/appsecurity/cts/SplitTests.java)', 1), ('(4,ARM,/android/dynamicmime/testapp/ComplexFilterTest.java)', 1), ('(2,AES,/android/media/cts/StreamingMediaPlayerTest.java)', 1), ('(19,ARM,/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java)', 1), ('(1,ARM,/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java)', 1), ('(4,ARM,/android/telecom/cts/ExtendedInCallServiceTest.java)', 1), ('(2,AES,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(9,AES,/android/keystore/cts/AesKeyGenPerformanceTest.java)', 1), ('(14,AES,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1), ('(8,ARM,/com/android/server/cts/device/statsd/AtomTests.java)', 1)]"	"[('([4:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[ARM]:[4]:method_text:[ote        assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());    }   ])', 3), ('([2:/android/media/cts/AudioTrackTest.java]:[ARM]:[2]:method_text:[--    // Test case 1: build AudioTrack with default parameters, test documented default params   ])', 2), ('([1:/android/media/cts/AudioTrackTest.java]:[ARM]:[1]:method_text:[ContentType());    }    // Test case 5: build AudioTrack with attributes and performance mode   ])', 2), ('([1:/android/media/cts/AudioTrackTest.java]:[ARM]:[1]:method_text:[}        track.release();    }    // Test AudioTrack to ensure we can build after a failure.   ])', 2), ('([1:/android/app/cts/ZenPolicyTest.java]:[ARM]:[1]:method_text:[   policy.getPriorityConversationSenders());        assertAllVisualEffectsUnset(policy);    }   ])', 2), ('([2:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[ARM]:[2]:method_text:[ mContentResolver.delete(uri, null, null);            assertEquals(1, result);        }    }   ])', 2), ('([4:/android/os/cts/VibrationAttributesTest.java]:[ARM]:[4]:method_text:[.getFlags(), 0);        assertEquals(attr.getAudioUsage(), AudioAttributes.USAGE_ALARM);    }   ])', 1), ('([4:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[ARM]:[4]:method_text:[   }    // Tests that anomaly detection for duration works even when the alarm fires too late.   ])', 1), ('([7:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[ARM]:[7]:method_text:[).getAlertId()).isEqualTo(ALERT_ID);    }    // Tests that anomaly detection for value works.   ])', 1), ('([1:/android/cts/statsd/alert/AnomalyDetectionTests.java]:[ARM]:[1]:method_text:[  .setId(ANOMALY_EVENT_ID)                              .setWhat(ANOMALY_DETECT_MATCH_ID));    }}])', 1), ('([1:/com/android/cts/appbinding/AppBindingHostTest.java]:[ARM]:[1]:method_text:[   * Install APK 1 and make it the default SMS app and make sure the service gets bound.     */   ])', 1), ('([1:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[ARM]:[1]:method_text:[Check for validity.     * 3. Sleep.     * 4. Do it 10 times and compare with old ones.     */   ])', 1), ('([2:/com/android/cts/writeexternalstorageapp/ChangeDefaultUris.java]:[ARM]:[2]:method_text:[ATION, uri);    }    /** Resets and cleans up to a valid state. This method must not fail. */   ])', 1), ('([1:/com/android/cts/writeexternalstorageapp/ChangeDefaultUris.java]:[ARM]:[1]:method_text:[eUnit.MILLISECONDS.sleep(500);            }        }        throw new TimeoutException();    }}])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_FrequentsStrequentsTest.java]:[ARM]:[1]:method_text:[).load();        return new long[] {contact.getId(), contact2.getId(), contact3.getId()};    }}])', 1), ('([15:/android/alarmmanager/cts/InstantAppsTests.java]:[ARM]:[15]:method_text:[0L)                .with(""min_window"", 0L)                .commitAndAwaitPropagation();    }   ])', 1), ('([3:/android/alarmmanager/cts/InstantAppsTests.java]:[ARM]:[3]:method_text:[not fire as expected"",                latch.await(WAIT_TIMEOUT, TimeUnit.MILLISECONDS));    }   ])', 1), ('([4:/android/alarmmanager/cts/InstantAppsTests.java]:[ARM]:[4]:method_text:[   @After    public void deleteAlarmManagerSettings() {        mConfigHelper.restoreAll();    }}])', 1), ('([10:/android/app/cts/StatusBarManagerTest.java]:[ARM]:[10]:method_text:[    /**     * Test StatusBarManager.setDisabledForSetup(true)     * @throws Exception     */   ])', 1), ('([3:/android/app/cts/StatusBarManagerTest.java]:[ARM]:[3]:method_text:[    /**     * Test StatusBarManager.setDisabledForSetup(false)     * @throws Exception     */   ])', 1), ('([3:/android/app/cts/StatusBarManagerTest.java]:[ARM]:[3]:method_text:[sableInfo();        assertTrue(""Invalid disableFlags"", info.areAllComponentsEnabled());    }   ])', 1), ('([2:/android/app/cts/StatusBarManagerTest.java]:[ARM]:[2]:method_text:[gs        assertTrue(mStatusBarManager.getDisableInfo().isStatusBarExpansionDisabled());    }   ])', 1), ('([3:/android/app/cts/StatusBarManagerTest.java]:[ARM]:[3]:method_text:[etDisableInfo();        assertTrue(""Invalid disableFlags"", info.areAllComponentsEnabled());    }}])', 1), ('([1:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[ARM]:[1]:method_text:[            pollForConnection(SecondaryConditionProviderService.class, false);        }    }   ])', 1), ('([2:/android/os/cts/CpuInstructionsTest.java]:[ARM]:[2]:method_text:[s not allow access to CNTVCT register"",                CpuInstructions.canReadCntvct());    }   ])', 1), ('([5:/android/os/cts/CpuInstructionsTest.java]:[ARM]:[5]:method_text:[not support ARM CP15 barrier emulation"",                CpuInstructions.hasCp15Barriers());    }}])', 1), ('([1:/android/car/cts/CarPropertyValueTest.java]:[ARM]:[1]:method_text:[rtyManager) getCar().getCarManager(Car.PROPERTY_SERVICE);        getCarPropertyValues();    }   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[ARM]:[2]:method_text:[hangedWithChangeTypes(WINDOWS_CHANGE_REMOVED),                TIMEOUT_ASYNC_PROCESSING);    }   ])', 1), ('([6:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[ARM]:[6]:method_text:[ = mActivity.getWindow().getDecorView().getWindowToken();        });        return params;    }}])', 1), ('([1:/android/view/cts/VelocityTrackerTest.java]:[ARM]:[1]:method_text:[0, 10);        assertVelocity(TOLERANCE_TIGHT, ""Expect tight bound for linear motion."");    }   ])', 1), ('([3:/android/media/cts/VisualizerTest.java]:[ARM]:[3]:method_text:[seVisualizer();        }    }    //Test case 4.2: test measurement of peak / RMS in Long MP3   ])', 1), ('([3:/android/media/cts/VisualizerTest.java]:[ARM]:[3]:method_text:[ catch(InterruptedException e) {            }            mListenerThread = null;        }    }}])', 1), ('([6:/android/media/cts/DecoderTestAacDrc.java]:[ARM]:[6]:method_text:[tamps,                drcParams, decoderName, runtimeChange, -2);        return decoded;    }}])', 1), ('([9:/android/hardware/camera2/cts/ImageReaderTest.java]:[ARM]:[9]:method_text:[    }    /**     * Test that images captured after discarding free buffers are valid.     */   ])', 1), ('([5:/android/hardware/camera2/cts/BurstCaptureTest.java]:[AES]:[5]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([7:/android/harmfulappwarning/testapp/HarmfulAppWarningDeviceTest.java]:[ARM]:[7]:method_text:[    public void tearDown() {        mSampleActivityStartedReceiver.unregisterQuietly();    }   ])', 1), ('([59:/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java]:[ARM]:[59]:method_text:[            return 0;        }        return 1 + (int)((now - start - 1000)/interval);    }   ])', 1), ('([8:/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java]:[ARM]:[8]:method_text:[        + "" times when restrictions were lifted"", waitForAlarms(minCount, DEFAULT_WAIT));    }   ])', 1), ('([24:/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java]:[ARM]:[24]:method_text:[arms && SystemClock.uptimeMillis() < deadLine);        return alarmCount >= expectedAlarms;    }}])', 1), ('([5:/com/android/server/cts/AlarmManagerIncidentTest.java]:[ARM]:[5]:method_text:[ly outputs its dump state. */public class AlarmManagerIncidentTest extends ProtoDumpTestCase {   ])', 1), ('([45:/com/android/server/cts/AlarmManagerIncidentTest.java]:[ARM]:[45]:method_text:[);        // Nesting should be non-negative.        assertTrue(0 <= filter.getNesting());    }}])', 1), ('([4:/android/hardware/camera2/cts/CaptureRequestTest.java]:[ARM]:[4]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/app/cts/ZenPolicyTest.java]:[ARM]:[1]:method_text:[nPolicy.CREATOR.createFromParcel(parcel);        assertEquals(policy, policyFromParcel);    }   ])', 1), ('([7:/android/app/cts/ZenPolicyTest.java]:[ARM]:[7]:method_text:[ionManager.Policy.PRIORITY_CATEGORY_ALARMS);        assertAllVisualEffectsUnset(policy);    }   ])', 1), ('([2:/android/app/cts/ZenPolicyTest.java]:[ARM]:[2]:method_text:[isualEffectsUnset(ZenPolicy policy) {        assertAllVisualEffectsUnsetExcept(policy, -1);    }}])', 1), ('([5:/android/security/cts/EncryptionTest.java]:[AES]:[5]:method_text:[able    // to instant apps    @AppModeFull    @CddTest(requirement=""9.9.2/C-0-1,C-0-2,C-0-3"")   ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[AES]:[1]:method_text:[SCULAPIUS                p.hasGlyph(""\\uD83D\\uDC69\\u200D\\u2695\\uFE0F""));  // above + VS16    }   ])', 1), ('([2:/android/graphics/cts/PaintTest.java]:[ARM]:[2]:method_text:[TART_HYPHEN_EDIT_NO_EDIT);        paint.setEndHyphenEdit(Paint.END_HYPHEN_EDIT_NO_EDIT);    }   ])', 1), ('([2:/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java]:[AES]:[2]:method_text:[iometricManager mBiometricManager;        private KeyguardManager mKeyguardManager;        private])', 1), ('([1:/android/view/cts/PixelCopyTest.java]:[ARM]:[1]:method_text:[ail(String.format(""FDs leaked. Expected=%d, current=%d"", fdCount, curFdCount));        }    }   ])', 1), ('([1:/android/car/cts/CarSensorManagerTest.java]:[ARM]:[1]:method_text:[tedSensors();        assertNotNull(mSupportedSensors);    }    @CddTest(requirement=""2.5.1"")   ])', 1), ('([2:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[2]:method_text:[xpectedSecret.getEncoded()),                Arrays.toString(actualSecret.getEncoded()));    }   ])', 1), ('([5:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[5]:method_text:[.i(TAG, ""Deleted "" + (latestImportedEntryNumber + 1) + "" keys"");        }    }    @LargeTest   ])', 1), ('([4:/android/keystore/cts/AndroidKeyStoreTest.java]:[AES]:[4]:method_text:[ow new RuntimeException(""Failed for key size "" + keySizeBits, e);            }        }    }   ])', 1), ('([1:/android/car/cts/CarPackageManagerTest.java]:[ARM]:[1]:method_text:[etUp();        mCarPm = (CarPackageManager) getCar().getCarManager(Car.PACKAGE_SERVICE);    }   ])', 1), ('([1:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[AES]:[1]:method_text:[rent native internals, and multiple Surfaces pointing to the same actual consumer object     */   ])', 1), ('([1:/android/app/cts/NotificationTest.java]:[ARM]:[1]:method_text:[ll(Notification.CATEGORY_SYSTEM);        assertNotNull(Notification.CATEGORY_TRANSPORT);    }   ])', 1), ('([1:/android/provider/cts/settings/Settings_NameValueTableTest.java]:[ARM]:[1]:method_text:[inally {            // TODO should clean up more better            c.close();        }    }   ])', 1), (""([1:/android/location/cts/privileged/GnssLocationValuesTest.java]:[ARM]:[1]:method_text:[* 2. Get low-power GNSS locations.     * 3. Check whether all fields' value make sense.     */   ])"", 1), ('([1:/android/location/cts/privileged/GnssLocationValuesTest.java]:[ARM]:[1]:method_text:[ m/s"",                    location.getSpeed() >= 0 && location.getSpeed() <= 5);        }    }}])', 1), ('([28:/android/appsecurity/cts/SplitTests.java]:[ARM]:[28]:method_text:[ getDevice().uninstallPackage(PKG);        getDevice().uninstallPackage(PKG_NO_RESTART);    }   ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[ARM]:[2]:method_text:[lic void testFeatureWarmBase_full() throws Exception {        testFeatureWarmBase(false);    }   ])', 1), ('([5:/android/appsecurity/cts/SplitTests.java]:[ARM]:[5]:method_text:[dFile(APK_FEATURE_WARM).run();        runDeviceTests(PKG, CLASS, ""testFeatureWarmBase"");    }   ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[ARM]:[2]:method_text:[ublic void testFeatureWarmApi_full() throws Exception {        testFeatureWarmApi(false);    }   ])', 1), ('([6:/android/appsecurity/cts/SplitTests.java]:[ARM]:[6]:method_text:[ile(APK_FEATURE_WARM_v7).run();        runDeviceTests(PKG, CLASS, ""testFeatureWarmApi"");    }   ])', 1), ('([1:/android/appsecurity/cts/SplitTests.java]:[ARM]:[1]:method_text:[n();        runDeviceTests(PKG, CLASS, ""testInheritUpdatedBase_withRevisionA"", instant);    }   ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[ARM]:[2]:method_text:[();        runDeviceTests(PKG, CLASS, ""testInheritUpdatedSplit_withRevisionA"", instant);    }   ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[ARM]:[2]:method_text:[eatureWarm_full() throws Exception {        testRequiredSplitInstalledFeatureWarm(false);    }   ])', 1), ('([4:/android/appsecurity/cts/SplitTests.java]:[ARM]:[4]:method_text:[addFile(APK_NEED_SPLIT_BASE)                .addFile(APK_NEED_SPLIT_FEATURE_WARM).run();    }   ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[ARM]:[2]:method_text:[T"");    }    /**     * Verify that installing a new version of app wipes code cache.     */   ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[ARM]:[2]:method_text:[);        runDeviceTests(PKG, CLASS, ""testComponentWithSplitName_featureWarmInstalled"");    }   ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[ARM]:[2]:method_text:[_installFeatureWarm_full() throws Exception {        testTheme_installFeatureWarm(false);    }   ])', 1), ('([10:/android/appsecurity/cts/SplitTests.java]:[ARM]:[10]:method_text:[ed"");        runDeviceTests(PKG, CLASS, ""launchWarmActivity_withThemeWarm_warmApplied"");    }   ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[ARM]:[2]:method_text:[llFeatureWarmV23_full() throws Exception {        testTheme_installFeatureWarmV23(false);    }   ])', 1), ('([11:/android/appsecurity/cts/SplitTests.java]:[ARM]:[11]:method_text:[;        runDeviceTests(PKG, CLASS, ""launchWarmActivity_withThemeWarmLt_warmLtApplied"");    }   ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[ARM]:[2]:method_text:[oveV23_full() throws Exception {        testTheme_installFeatureWarmV23_removeV23(false);    }   ])', 1), ('([12:/android/appsecurity/cts/SplitTests.java]:[ARM]:[12]:method_text:[ed"");        runDeviceTests(PKG, CLASS, ""launchWarmActivity_withThemeWarm_warmApplied"");    }   ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[ARM]:[2]:method_text:[eWarmAndRose_full() throws Exception {        testTheme_installFeatureWarmAndRose(false);    }   ])', 1), ('([10:/android/appsecurity/cts/SplitTests.java]:[ARM]:[10]:method_text:[ed"");        runDeviceTests(PKG, CLASS, ""launchRoseActivity_withThemeRose_roseApplied"");    }   ])', 1), ('([2:/android/appsecurity/cts/SplitTests.java]:[ARM]:[2]:method_text:[ndRoseV23_full() throws Exception {        testTheme_installFeatureWarmAndRoseV23(false);    }   ])', 1), ('([11:/android/appsecurity/cts/SplitTests.java]:[ARM]:[11]:method_text:[d"");        runDeviceTests(PKG, CLASS, ""launchRoseActivity_withThemeRoseLt_roseLtApplied"");    }}])', 1), ('([1:/android/dynamicmime/testapp/ComplexFilterTest.java]:[ARM]:[1]:method_text:[AGE_PNG);        clearMimeGroup(GROUP_FIRST);        assertBothGroups(MIME_IMAGE_PNG);    }   ])', 1), ('([1:/android/dynamicmime/testapp/ComplexFilterTest.java]:[ARM]:[1]:method_text:[   clearMimeGroup(GROUP_FIRST);        assertBothGroups(MIME_IMAGE_PNG, MIME_TEXT_ANY);    }   ])', 1), ('([1:/android/dynamicmime/testapp/ComplexFilterTest.java]:[ARM]:[1]:method_text:[AIN);        clearMimeGroup(GROUP_FIRST);        assertGroupsAndType(MIME_TEXT_PLAIN);    }   ])', 1), ('([1:/android/dynamicmime/testapp/ComplexFilterTest.java]:[ARM]:[1]:method_text:[Groups(String... expectedTypes) {        assertMimeGroup(ALIAS_BOTH_GROUPS, expectedTypes);    }}])', 1), ('([1:/android/media/cts/StreamingMediaPlayerTest.java]:[AES]:[1]:method_text:[   localHlsTest(""audio_only/index.m3u8"", 60 * 1000, -1, true /*isAudioOnly*/);        }    }   ])', 1), ('([1:/android/media/cts/StreamingMediaPlayerTest.java]:[AES]:[1]:method_text:[000, -1, false /*isAudioOnly*/);        }    }    // Streaming audio from local HTTP server   ])', 1), ('([5:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[ARM]:[5]:method_text:[(false);        toggleAssistantAccess(false);        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([3:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[ARM]:[3]:method_text:[icationAssistantService.notificationVisible);        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([3:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[ARM]:[3]:method_text:[;        mStatusBarManager.collapsePanels();        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([3:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[ARM]:[3]:method_text:[e(mNotificationAssistantService.isPanelOpen);        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([4:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[ARM]:[4]:method_text:[        mStatusBarManager.collapsePanels();        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[ARM]:[1]:method_text:[ new IOException(""Could not read stdout of command:\xa0"" + command, e);            }        }    }}])', 1), ('([1:/android/dynamicmime/testapp/preferred/PreferredActivitiesTest.java]:[ARM]:[1]:method_text:[ng preferredActivity() {                return ACTIVITY_FIRST;            }        });    }   ])', 1), ('([1:/android/telecom/cts/ExtendedInCallServiceTest.java]:[ARM]:[1]:method_text:[ll comes in,     * answering the call immediately answers second call while in carMode.     */   ])', 1), ('([3:/android/telecom/cts/ExtendedInCallServiceTest.java]:[ARM]:[3]:method_text:[            // Set device back to normal            manager.disableCarMode(0);        }    }   ])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[AES]:[2]:method_text:[reAlias));        } finally {            keyStore.deleteEntry(keystoreAlias);        }    }   ])', 1), ('([2:/android/keystore/cts/AesKeyGenPerformanceTest.java]:[AES]:[2]:method_text:[rmanceTest extends PerformanceTestBase {    final int[] SUPPORTED_AES_KEY_SIZES = {128, 256};   ])', 1), ('([7:/android/keystore/cts/AesKeyGenPerformanceTest.java]:[AES]:[7]:method_text:[               .setKeySize(keySize)                                    .build());        }    }}])', 1), ('([2:/android/appsecurity/cts/ExternalStorageHostTest.java]:[AES]:[2]:method_text:[    public void testMediaEscalation() throws Exception {        doMediaEscalation(MEDIA);    }   ])', 1), ('([2:/android/appsecurity/cts/ExternalStorageHostTest.java]:[AES]:[2]:method_text:[ublic void testMediaEscalation28() throws Exception {        doMediaEscalation(MEDIA_28);    }   ])', 1), ('([10:/android/appsecurity/cts/ExternalStorageHostTest.java]:[AES]:[10]:method_text:[     runDeviceTests(config.pkg, config.clazz, ""testMediaEscalation_RequestDelete"", user);    }   ])', 1), ('([2:/com/android/server/cts/device/statsd/AtomTests.java]:[ARM]:[2]:method_text:[NSTALLER, 98);        APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_NO_ISOLATED_STORAGE, 99);    }   ])', 1), ('([6:/com/android/server/cts/device/statsd/AtomTests.java]:[ARM]:[6]:method_text:[() + 2_000, pintent);        waitForReceiver(context, 10_000, onReceiveLatch, receiver);    }   ])', 1)]"	""	""	"[('ARM', 95), ('AES', 16)]"	"[('[android.media.cts.AudioTrackTest testConstructorStreamType None]', 2), ('[android.media.cts.AudioTrackTest testBuilderAttributesStream None]', 2), ('[android.media.cts.AudioTrackTest testVariableSpeedPlayback None]', 2), ('[android.provider.cts.media.MediaStore_Audio_MediaTest testStoreAudioMedia None]', 2), ('[android.os.cts.VibrationAttributesTest testCreate None]', 1), ('[android.cts.statsd.alert.AnomalyDetectionTests testDurationAnomalyDetection None]', 1), ('[android.cts.statsd.alert.AnomalyDetectionTests testDurationAnomalyDetectionForLateAlarms None]', 1), ('[android.cts.statsd.alert.AnomalyDetectionTests testPulledAnomalyDetection None]', 1), ('[com.android.cts.appbinding.AppBindingHostTest isSmsCapable None]', 1), ('[com.android.cts.writeexternalstorageapp.ChangeDefaultUris testChangeDefaultUris None]', 1), ('[com.android.cts.writeexternalstorageapp.ChangeDefaultUris testResetDefaultUris None]', 1), ('[android.provider.cts.contacts.ContactsContract_FrequentsStrequentsTest testFrequent_projection None]', 1), ('[android.alarmmanager.cts.InstantAppsTests isInstantApp None]', 1), ('[android.alarmmanager.cts.InstantAppsTests currentTimeMillis None]', 1), ('[android.app.cts.StatusBarManagerTest isWatch None]', 1), ('[android.app.cts.StatusBarManagerTest testDisableForSetup_setDisabledTrue None]', 1), ('[android.app.cts.StatusBarManagerTest testDisableForSetup_setDisabledFalse None]', 1), ('[android.app.cts.StatusBarManagerTest testDisableForSimLock_setDisabledTrue None]', 1), ('[android.app.cts.StatusBarManagerTest testDisableForSimLock_setDisabledFalse None]', 1), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testUnboundCPSMaintainsCondition_addsNewRule None]', 1), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testUnboundCPSMaintainsCondition_otherConditionChanges None]', 1), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testUnboundCPSMaintainsCondition_otherProviderRuleChanges None]', 1), ('[android.os.cts.CpuInstructionsTest testArmVirtualCounter None]', 1), ('[android.os.cts.CpuInstructionsTest testEmulatedArmCpuFeatures None]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowReportingTest testWindowAddedMovedAndRemoved_generatesEventsForAllThree None]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowReportingTest testGetAnchorForDropDownForAutoCompleteTextView_returnsTextViewNode None]', 1), ('[android.view.cts.VelocityTrackerTest testLinearMovement None]', 1), ('[android.media.cts.VisualizerTest test4_1MeasurePeakRms None]', 1), ('[android.media.cts.VisualizerTest test4_2MeasurePeakRmsLongMP3 None]', 1), ('[android.media.cts.DecoderTestAacDrc testDecodeAacDrcOutputLoudnessM4a None]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testAllOutputYUVResolutions None]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh None]', 1), ('[android.harmfulappwarning.testapp.HarmfulAppWarningDeviceTest register None]', 1), ('[android.alarmmanager.cts.BackgroundRestrictedAlarmsTest testRepeatingAlarmBlocked None]', 1), ('[android.alarmmanager.cts.BackgroundRestrictedAlarmsTest testAlarmClockNotBlocked None]', 1), ('[com.android.server.cts.AlarmManagerIncidentTest testAlarmManagerServiceDump None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[android.app.cts.ZenPolicyTest testWriteToParcel None]', 1), ('[android.app.cts.ZenPolicyTest testAlarms None]', 1), ('[android.app.cts.ZenPolicyTest testDisallowAllSounds None]', 1), ('[android.app.cts.ZenPolicyTest testAllowAllSounds None]', 1), ('[android.app.cts.ZenPolicyTest testDisallowAllVisualEffects None]', 1), ('[android.security.cts.EncryptionTest aesIsFast None]', 1), ('[android.graphics.cts.PaintTest testHasGlyph None]', 1), ('[android.graphics.cts.PaintTest testHyphenEdit None]', 1), ('[com.android.cts.verifier.security.UnlockedDeviceRequiredTest setPassFailButtonClickListeners None]', 1), ('[android.view.cts.PixelCopyTest testDialogProducerCopyToRGBA16F None]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_KeyOperations_Wrap_Unencrypted_Success None]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_LargeNumberOfKeysSupported_AES None]', 1), ('[android.keystore.cts.AndroidKeyStoreTest testKeyStore_ImportSupportedSizes_AES None]', 1), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testPreparePerformance None]', 1), ('[android.app.cts.NotificationTest testCategories None]', 1), ('[android.provider.cts.settings.Settings_NameValueTableTest testPutString None]', 1), ('[android.location.cts.privileged.GnssLocationValuesTest dropShellPermissionIdentity None]', 1), ('[android.location.cts.privileged.GnssLocationValuesTest testLowPowerModeGnssLocation None]', 1), ('[android.appsecurity.cts.SplitTests testFeatureWarmBase_full None]', 1), ('[android.appsecurity.cts.SplitTests testFeatureWarmBase_instant None]', 1), ('[android.appsecurity.cts.SplitTests testFeatureWarmApi_full None]', 1), ('[android.appsecurity.cts.SplitTests testFeatureWarmApi_instant None]', 1), ('[android.appsecurity.cts.SplitTests testInheritUpdatedBase_instant None]', 1), ('[android.appsecurity.cts.SplitTests testInheritUpdatedSplit_instant None]', 1), ('[android.appsecurity.cts.SplitTests testRequiredSplitInstalledFeatureWarm_full None]', 1), ('[android.appsecurity.cts.SplitTests testRequiredSplitInstalledFeatureWarm_instant None]', 1), ('[android.appsecurity.cts.SplitTests testRequiredSplitRemoved_instant None]', 1), ('[android.appsecurity.cts.SplitTests testComponentWithSplitName_instant None]', 1), ('[android.appsecurity.cts.SplitTests testTheme_installFeatureWarm_full None]', 1), ('[android.appsecurity.cts.SplitTests testTheme_installFeatureWarm_instant None]', 1), ('[android.appsecurity.cts.SplitTests testTheme_installFeatureWarmV23_full None]', 1), ('[android.appsecurity.cts.SplitTests testTheme_installFeatureWarmV23_instant None]', 1), ('[android.appsecurity.cts.SplitTests testTheme_installFeatureWarmV23_removeV23_full None]', 1), ('[android.appsecurity.cts.SplitTests testTheme_installFeatureWarmV23_removeV23_instant None]', 1), ('[android.appsecurity.cts.SplitTests testTheme_installFeatureWarmAndRose_full None]', 1), ('[android.appsecurity.cts.SplitTests testTheme_installFeatureWarmAndRose_instant None]', 1), ('[android.appsecurity.cts.SplitTests testTheme_installFeatureWarmAndRoseV23_full None]', 1), ('[android.appsecurity.cts.SplitTests testTheme_installFeatureWarmAndRoseV23_instant None]', 1), ('[android.dynamicmime.testapp.ComplexFilterTest testClearGroupWithoutIntersection None]', 1), ('[android.dynamicmime.testapp.ComplexFilterTest testClearGroupWithIntersection None]', 1), ('[android.dynamicmime.testapp.ComplexFilterTest testClearGroupContainsStaticType None]', 1), ('[android.dynamicmime.testapp.ComplexFilterTest testClearGroupNotContainStaticType None]', 1), ('[android.media.cts.StreamingMediaPlayerTest testHlsSampleAes_bbb_audio_only_overridable None]', 1), ('[android.media.cts.StreamingMediaPlayerTest testHlsSampleAes_bbb_unmuxed_1500k None]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest isWatch None]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationVisibilityChanged None]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationsSeen None]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnPanelRevealedAndHidden None]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationClicked None]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationFeedbackReceived None]', 1), ('[android.dynamicmime.testapp.preferred.PreferredActivitiesTest testClearGroup None]', 1), ('[android.telecom.cts.ExtendedInCallServiceTest testAcceptRingingCallTwoCalls None]', 1), ('[android.telecom.cts.ExtendedInCallServiceTest testAcceptRingingCallTwoCallsCarMode None]', 1), ('[android.keystore.cts.KeyAttestationTest testAesAttestation None]', 1), ('[android.keystore.cts.AesKeyGenPerformanceTest testAesKeyGen None]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testMediaEscalation None]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testMediaEscalation28 None]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testMediaEscalation29 None]', 1), ('[com.android.server.cts.device.statsd.AtomTests testWakeupAlarm None]', 1)]"
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-14"	"9.9.3/C-1-14"	"09090300.670114"	"""C-1-14] MUST NOT use the same File Based Encryption (FBE) keys or subkeys for different cryptographic purposes (e.g. for both encryption and key derivation, or for two different encryption algorithms)."""	"Found reference in comments"	""	"FBE"	""	""	""	""	""	""	""	2	"cts/tests/tests/security/native/encryption/FileBasedEncryptionPolicyTest.cpp"	"FileBasedEncryptionPolicyTest_allowedPolicy"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeExp.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/Ikev2VpnTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestCross.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/userspacereboot/src/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/userspacereboot/src/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestMad.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/SignatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/ColorTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_09.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ContextTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/calllog/src/android/provider/cts/contacts/hostside/ShadowCallLogTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionMschapV2Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_09.java', 1)]"	"[('(5,FBE,/android/view/inputmethod/cts/InputMethodInfoTest.java)', 2), ('(1,FBE,/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java)', 2), ('(12,FBE,/android/appsecurity/cts/AppDataIsolationTests.java)', 2), ('(1,FBE,/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java)', 2), ('(1,FBE,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 2), ('(8,FBE,/android/security/cts/Poc17_09.java)', 2), ('(17,FBE,/android/appsecurity/cts/DirectBootHostTest.java)', 2), ('(2,FBE,/android/text/cts/FontCoverageTest.java)', 1), ('(1,FBE,/android/renderscript/cts/generated/TestNativeExp.java)', 1), ('(1,FBE,/android/net/cts/Ikev2VpnTest.java)', 1), ('(1,FBE,/android/renderscript/cts/generated/TestCross.java)', 1), ('(1,FBE,/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java)', 1), ('(1,FBE,/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java)', 1), ('(2,FBE,/android/renderscript/cts/generated/TestMad.java)', 1), ('(1,FBE,/android/keystore/cts/SignatureTest.java)', 1), ('(4,FBE,/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java)', 1), ('(2,FBE,/android/keystore/cts/CipherTest.java)', 1), ('(3,FBE,/android/graphics/cts/ColorTest.java)', 1), ('(5,FBE,/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java)', 1), ('(2,FBE,/android/content/cts/ContextTest.java)', 1), ('(1,FBE,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(1,FBE,/android/net/ipsec/ike/cts/IkeSessionPskTest.java)', 1), ('(8,FBE,/android/provider/cts/contacts/hostside/ShadowCallLogTest.java)', 1), ('(1,FBE,/android/net/ipsec/ike/cts/IkeSessionMschapV2Test.java)', 1)]"	"[('([1:/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java]:[FBE]:[1]:method_text:[reboot {@code     * PowerManager.isRebootingUserspaceSupported()} returns {@code true}.     */   ])', 2), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[          }                getDevice().waitForDeviceAvailable();            }        }    }   ])', 2), ('([1:/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java]:[FBE]:[1]:method_text:[R_COLOR, mConfig.mode));            canvas.drawBitmap(mBitmap, 0, 0, mPaint);        }    };   ])', 2), ('([8:/android/security/cts/Poc17_09.java]:[FBE]:[8]:method_text:[                             )==139);    }    /**     * b/38195738     * b/36590192     */   ])', 2), ('([1:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[1]:method_text:[allPackage(OTHER_PKG);    }    /**     * Automotive devices MUST support native FBE.     */   ])', 2), ('([4:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[4]:method_text:[equals(getFbeMode()));    }    /**     * If device has native FBE, verify lifecycle.     */   ])', 2), (""([3:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[3]:method_text:[    /**     * If device doesn't have native FBE, enable emulation and verify lifecycle.     */   ])"", 2), (""([3:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[3]:method_text:[ATED);    }    /**     * If device doesn't have native FBE, verify normal lifecycle.     */   ])"", 2), ('([6:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[6]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 2), ('([2:/android/text/cts/FontCoverageTest.java]:[FBE]:[2]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([1:/android/renderscript/cts/generated/TestNativeExp.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[FBE]:[5]:method_text:[() : """";            }        } catch (IOException e) {            return """";        }    }   ])', 1), ('([1:/android/net/cts/Ikev2VpnTest.java]:[FBE]:[1]:method_text:[EST_MTU, profile.getMaxMtu());        assertFalse(profile.isRestrictedToTestNetworks());    }   ])', 1), ('([1:/android/renderscript/cts/generated/TestCross.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[2]:method_text:[  getDevice().uninstallPackage(APPA_PKG);        getDevice().uninstallPackage(APPB_PKG);    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[    return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }}])', 1), ('([1:/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java]:[FBE]:[1]:method_text:[ly to a <Give System Audio Mode Status>    * message when the System Audio Mode is ""Off"".    */  ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java]:[FBE]:[1]:method_text:[ecutor,                mIkeSessionCallback,                mFirstChildSessionCallback);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[FBE]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([2:/android/renderscript/cts/generated/TestMad.java]:[FBE]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/keystore/cts/SignatureTest.java]:[FBE]:[1]:method_text:[e7a42b1ddff0c""));    }    private static final long DAY_IN_MILLIS = TestUtils.DAY_IN_MILLIS;   ])', 1), ('([4:/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java]:[FBE]:[4]:method_text:[ {                TestUtils.setAirplaneModeOn(getContext(), false);            }        }    }}])', 1), ('([5:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[FBE]:[5]:method_text:[rim() : """";            }        } catch (IOException e) {            return """";        }    }}])', 1), ('([2:/android/keystore/cts/CipherTest.java]:[FBE]:[2]:method_text:[ortsLockAndUnlock() {            return supportsInsecureLock();        }    }    @Presubmit   ])', 1), ('([3:/android/graphics/cts/ColorTest.java]:[FBE]:[3]:method_text:[sync with colors in android.R.color"",                colors.length, numPublicApiColors);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[        changeUserCredential(TEST_PASSWORD, null, mProfileUserId);        lockProfile();    }   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[erifyUserCredential(RESET_PASSWORD_TEST_DEFAULT_PASSWORD, mProfileUserId);    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[nified work challenge and the primary user clears     * the device lock.     */    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[    executeShellCommand(""input keyevent KEYCODE_WAKEUP"");        }    }    @LockSettingsTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[_PASSWORD, mPrimaryUserId);        }    }    @FlakyTest    @LargeTest    @LockSettingsTest   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[2]:method_text:[rows Exception {        getDevice().reboot();        waitForBootCompleted(getDevice());    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[ return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }   ])', 1), ('([2:/android/content/cts/ContextTest.java]:[FBE]:[2]:method_text:[ that apps can go through a     * backup/restore cycle between FBE and non-FBE devices.     */   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[FBE]:[1]:method_text:[ getDevice().executeShellCommand(""input keyevent 3"");        }        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[FBE]:[1]:method_text:[ordBeforeUnlock} and will be called by the hostside logic     * before it is exercised.     */   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[FBE]:[1]:method_text:[on.getErrorData());        ikeSession.kill();        mIkeSessionCallback.awaitOnClosed();    }}])', 1), ('([8:/android/provider/cts/contacts/hostside/ShadowCallLogTest.java]:[FBE]:[8]:method_text:[ != null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionMschapV2Test.java]:[FBE]:[1]:method_text:[ecutor,                mIkeSessionCallback,                mFirstChildSessionCallback);    }   ])', 1)]"	""	""	"[('FBE', 47)]"	"[('[android.view.inputmethod.cts.InputMethodInfoTest testAtLeastOneEncryptionAwareInputMethodIsAvailable None]', 2), ('[com.android.cts.userspacereboot.host.UserspaceRebootHostTest testOnlyFbeDevicesSupportUserspaceReboot None]', 2), ('[android.appsecurity.cts.AppDataIsolationTests testDirectBootModeWorks None]', 2), ('[android.security.cts.Poc17_09 testPocCve_2017_6983 None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testAutomotiveNativeFbe None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNative None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootEmulated None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNone None]', 2), ('[android.net.cts.Ikev2VpnTest Ikev2VpnTest None]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDirApi29 None]', 1), ('[android.location.cts.gnss.GnssMeasurementWhenNoLocationTest testGnssMeasurementWhenNoLocation None]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testLockNowWithKeyEviction None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testResetPasswordWithTokenBeforeUnlock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testClearPasswordWithTokenBeforeUnlock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testResetPasswordTokenUsableAfterClearingLock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testUnlockWorkProfile_deviceWidePassword None]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppAbleToAccessItsDataAfterReboot None]', 1), ('[android.content.cts.ContextTest testGetText None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest testIkeAuthHandlesFirstChildCreationFail None]', 1), ('[android.provider.cts.contacts.hostside.ShadowCallLogTest testDirectBootCallLog None]', 1)]"
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-15"	"9.9.3/C-1-15"	"09090300.670115"	"""C-1-15] MUST ensure that all non-deleted blocks of encrypted file contents on persistent storage were encrypted using combinations of encryption key and initialization vector (IV) that depend on both the file and the offset within the file. In addition, all such combinations MUST be distinct, except where the encryption is done using inline encryption hardware that only supports an IV length of 32 bits. """	Found reference in comments, incomplete test technical reasons	""	""	""	""	""	""	""	""	""	1	cts/tests/tests/security/native/encryption/FileBasedEncryptionPolicyTest.cpp	validateEncryptionFlags	""	""	""	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-16"	"9.9.3/C-1-16"	"09090300.670116"	"""C-1-16] MUST ensure that all non-deleted encrypted filenames on persistent storage in distinct directories were encrypted using distinct combinations of encryption key and initialization vector (IV). """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-17"	"9.9.3/C-1-17"	"09090300.670117"	"""C-1-17] MUST ensure that all encrypted filesystem metadata blocks on persistent storage were encrypted using distinct combinations of encryption key and initialization vector (IV). Have keys protecting CE and DE storage areas which: """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
