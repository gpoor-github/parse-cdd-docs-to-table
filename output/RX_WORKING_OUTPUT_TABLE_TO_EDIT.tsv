"Section"	"section_id"	"req_id"	"Test Availability"	"class_def"	"method"	"module"	"method_text"	"full_key"	"requirement"	"key_as_number"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"matched_terms"	"search_roots"	"qualified_method"	"max_matches"	"file_name"	"matched_files"	"methods_string"	"urls"	"protected"	"Area"	"Shortened"	"Test Level"
"45:237196) 3  . Software"	"3"	"A-1-1"	""	""	""	""	""	"3/A-1-1"	""">3/A-1-1] MUST NOT attach special privileges to system application&#39;s use of these properties, or prevent third-party applications from using these properties. [<a href=""#3_0_intro"""""	"03000000.650101"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"45:237196) 3  . Software"	"3"	"A-1-2"	""	""	""	""	""	"3/A-1-2"	""">3/A-1-2] MUST NOT replicate a vehicle property that already exists in the SDK. Automotive device implementations: [<a href=""#3_2_soft_api_compatibility"""""	"03000000.650102"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"47:241668) 3.1.1  . Android Extensions"	"3.1.1"	"C-0-3"	""	""	""	""	""	"3.1.1/C-0-3"	"""C-0-3] MUST support all the APIs defined by the extension versions returned by android.os.ext.SdkExtensions.getExtensionVersion(int apiLevel) in the same manner as other managed APIs are supported, following the requirements in section 3.1. <h4 id=""312_android_library"" """	"03010100.670003"	"android.os.ext.SdkExtensions.getExtensionVersion"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"47:241668) 3.1.1  . Android Extensions"	"3.1.1"	"C-0-2"	""	""	""	""	""	"3.1.1/C-0-2"	"""C-0-2] MUST only return valid extension version number that have been defined by the AOSP. """	"03010100.670002"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"53:256677) 3.2.3.1  . Common Application Intents"	"3.2.3.1"	"A-0-1"	""	""	""	""	""	"3.2.3.1/A-0-1"	""">3.2.3.1/A-0-1] MUST preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here. [<a href=""#3_4_web_compatibility"""""	"03020301.650001"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"53:256677) 3.2.3.1  . Common Application Intents"	"3.2.3.1"	"Tab-0-1"	""	""	""	""	""	"3.2.3.1/Tab-0-1"	""">3.2.3.1/Tab-0-1] MUST preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here. <h2 id=""3_software"" """	"03020301.980001"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"57:278237) 3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-6-1"	""	"[('android.app.cts.NotificationManagerTest', 10), ('android.app.notification.legacy.cts.ConditionProviderServiceTest', 10), ('android.media.cts.AudioManagerTest', 9), ('android.telecom.cts.CarModeInCallServiceTest', 6), ('com.android.cts.verifier.audio.RingerModeActivity', 3), ('android.app.cts.NotificationChannelTest', 2), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 2), ('android.systemintents.cts.TestSystemIntents', 2), ('android.hardware.camera2.cts.CameraManagerTest', 2), ('android.server.wm.CrossAppDragAndDropTests', 2), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 2), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('android.media.cts.MediaActivityTest', 1), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.profileowner.AdminActionBookkeepingTest', 1), ('com.android.cts.deviceandprofileowner.SecurityLoggingTest', 1), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest', 1), ('com.android.cts.deviceowner.AdminActionBookkeepingTest', 1), ('android.ndef.cts.NdefTest', 1), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsNoSimTest', 1), ('android.app.cts.UiModeManagerTest', 1), ('android.app.notification.legacy29.cts.NotificationManager29Test', 1), ('com.android.cts.certinstaller.DirectDelegatedCertInstallerTest', 1)]"	"[('setUp', 19), ('getInstrumentation', 16), ('tearDown', 13), ('getContext', 9), ('of', 8), ('getPackageManager', 7), ('getPackageName', 7), ('getId', 7), ('build', 6), ('toString', 5), ('getActiveNotifications', 5), ('getWho', 4), ('getBytes', 4), ('getContentResolver', 4), ('getMessage', 4), ('create', 2), ('getResources', 2), ('getSystem', 2), ('getRingerMode', 2), ('getUiAutomation', 2), ('reset', 2), ('cancelAll', 2), ('printStackTrace', 2), ('getKey', 2), ('getGroupKey', 2), ('supportsSplitScreenMultiWindow', 2), ('supportsFreeform', 2), ('setUpClass', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('getCurrentModeType', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('release', 1), ('IntentFilter', 1), ('getSimpleName', 1), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('getCount', 1), ('moveToFirst', 1), ('close', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getOverrideGroupKey', 1), ('getUserId', 1)]"	""	""	"3.2.3.5/C-6-1"	"""C-6-1] MUST implement an activity that would respond to the intent ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS, which for implementations with UI_MODE_TYPE_NORMAL it MUST be an activity where the user can grant or deny the app access to DND policy configurations. If device implementations allow users to use third-party input methods on the device, they: """	"03020305.670601"	"ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS DND MODE_TYPE_NORMAL"	""	""	""	"[('DND', 54), ('MODE_TYPE_NORMAL', 7), ('ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS', 2)]"	""	"[('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTypeNotificationStateChangedAccessibilityEvent None]', 2), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerWithDnD None]', 2), ('[android.server.wm.CrossAppDragAndDropTests uptimeMillis None]', 2), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testUnboundCPSMaintainsCondition_addsNewRule None]', 2), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testUnboundCPSMaintainsCondition_otherConditionChanges None]', 2), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testUnboundCPSMaintainsCondition_otherProviderRuleChanges None]', 2), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testRequestRebindWhenLostAccess None]', 2), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testMethodsExistAndDoNotThrow None]', 2), ('[android.app.cts.NotificationChannelTest testConstructor None]', 1), ('[android.app.cts.NotificationChannelTest testWriteToParcel None]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled None]', 1), ('[android.media.cts.MediaActivityTest ArrayList None]', 1), ('[android.app.notification.legacy20.cts.LegacyNotificationManager20Test testNotificationListener_cancelNotifications None]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute None]', 1), ('[android.media.cts.AudioManagerTest testMuteDndAffectedStreams None]', 1), ('[android.media.cts.AudioManagerTest testMuteDndUnaffectedStreams None]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInPriorityOnlyMode None]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInPriorityOnly None]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMuteAll None]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMediaAllowed None]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyAlarmsAllowed None]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyChannelsCanBypassDnd None]', 1), ('[android.telecom.cts.CarModeInCallServiceTest dropShellPermissionIdentity None]', 1), ('[android.telecom.cts.CarModeInCallServiceTest testSetCarMode None]', 1), ('[android.telecom.cts.CarModeInCallServiceTest testStartCallInCarMode None]', 1), ('[android.telecom.cts.CarModeInCallServiceTest testSwitchToCarMode None]', 1), ('[android.telecom.cts.CarModeInCallServiceTest testSwitchToCarModeAndBack None]', 1), ('[android.telecom.cts.CarModeInCallServiceTest testSwitchToCarModeMultiple None]', 1), ('[android.app.cts.NotificationManagerTest isGroup None]', 1), ('[android.app.cts.NotificationManagerTest testConsolidatedNotificationPolicy None]', 1), ('[android.app.cts.NotificationManagerTest testConsolidatedNotificationPolicyMultiRules None]', 1), ('[android.app.cts.NotificationManagerTest testCreateChannel None]', 1), ('[android.app.cts.NotificationManagerTest testTotalSilenceOnlyMuteStreams None]', 1), ('[android.app.cts.NotificationManagerTest testAlarmsOnlyMuteStreams None]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState None]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState_turnOff None]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState_deletedRule None]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState_multipleRules None]', 1), ('[android.ndef.cts.NdefTest testInvalidParsing None]', 1), ('[android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsNoSimTest insert_nonAdnDirUris_throwsUnsupportedOperationException None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testChannelDeletion_cancelReason None]', 1), ('[android.app.cts.UiModeManagerTest testEnterCarModePrioritized None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testSetNotificationPolicy_preP_setOldNewFields None]', 1), ('[android.app.notification.legacy29.cts.NotificationManager29Test isNotificationPolicyAccessGranted None]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity isLowRamDevice None]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity TestVolumeDndAffectedStreamDndOn None]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity TestVolumeDndAffectedStream None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 10), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 9), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CarModeInCallServiceTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/ConditionProviderServiceTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/ConditionProviderServiceTest.java', 5), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/RingerModeActivity.java', 3), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationChannelTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy20/src/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/AdminActionBookkeepingTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CrossAppDragAndDropTests.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CrossAppDragAndDropTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/ndef/src/android/ndef/cts/NdefTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsNoSimTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/UiModeManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy29/src/android/app/notification/legacy29/cts/NotificationManager29Test.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CertInstaller/src/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java', 1)]"	"[('(1,DND,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 2), ('(1,ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS,/android/systemintents/cts/TestSystemIntents.java)', 2), ('(6,DND,/android/hardware/camera2/cts/CameraManagerTest.java)', 2), ('(3,DND,/android/server/wm/CrossAppDragAndDropTests.java)', 2), ('(2,DND,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 2), ('(10,DND,/android/app/notification/legacy/cts/ConditionProviderServiceTest.java)', 2), ('(2,DND,/android/app/cts/NotificationChannelTest.java)', 1), ('(1,DND,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(1,DND,/android/media/cts/MediaActivityTest.java)', 1), ('(2,DND,/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java)', 1), ('(31,DND,/android/media/cts/AudioManagerTest.java)', 1), ('(1,DND,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(1,DND,/com/android/cts/profileowner/AdminActionBookkeepingTest.java)', 1), ('(7,MODE_TYPE_NORMAL,/android/telecom/cts/CarModeInCallServiceTest.java)', 1), ('(1,DND,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(1,DND,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java)', 1), ('(40,DND,/android/app/cts/NotificationManagerTest.java)', 1), ('(1,DND,/com/android/cts/deviceowner/AdminActionBookkeepingTest.java)', 1), ('(2,DND,/android/ndef/cts/NdefTest.java)', 1), ('(1,DND,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsNoSimTest.java)', 1), ('(1,MODE_TYPE_NORMAL,/android/app/cts/UiModeManagerTest.java)', 1), ('(2,DND,/android/app/notification/legacy29/cts/NotificationManager29Test.java)', 1), ('(22,DND,/com/android/cts/verifier/audio/RingerModeActivity.java)', 1), ('(1,DND,/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java)', 1)]"	"[('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ote        assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());    }   ])', 4), ('([1:/android/app/cts/NotificationManagerTest.java]:[DND]:[1]:method_text:[nalFilter);            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 3), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[DND]:[1]:method_text:[notificationManager.deleteNotificationChannel(channel.getId());        }    }    @MediumTest   ])', 2), ('([1:/android/systemintents/cts/TestSystemIntents.java]:[ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS]:[1]:method_text:[etInstrumentation().getContext();        mPackageManager = mContext.getPackageManager();    }   ])', 2), ('([2:/android/media/cts/AudioManagerTest.java]:[DND]:[2]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 2), ('([3:/android/media/cts/AudioManagerTest.java]:[DND]:[3]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 2), ('([6:/android/hardware/camera2/cts/CameraManagerTest.java]:[DND]:[6]:method_text:[        throw new IOException(""Could not read stdout of command:\xa0"" + command, e);        }    }}])', 2), ('([3:/android/server/wm/CrossAppDragAndDropTests.java]:[DND]:[3]:method_text:[result mismatch,"", expectedResult,                    results.get(resultKey));        }    }   ])', 2), ('([2:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[DND]:[2]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 2), ('([3:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[3]:method_text:[ote        assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());    }   ])', 2), ('([1:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[1]:method_text:[nd after permission lost"");        } catch (Exception e) {            // pass        }    }   ])', 2), ('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ } else {            Log.d(TAG, service.getName() + "" has a correct bind state"");        }    }}])', 2), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[ll(channel.getParentChannelId());        assertFalse(channel.isImportantConversation());    }   ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[icationChannel.CREATOR.createFromParcel(parcel);        assertEquals(channel, channel1);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[DND]:[1]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), (""([1:/android/media/cts/MediaActivityTest.java]:[DND]:[1]:method_text:[    }    /**     * Tests whether volume key changes volume with the session's stream.     */   ])"", 1), ('([2:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[DND]:[2]:method_text:[InterruptedException ex) {                // pass            }        }        return n;    }}])', 1), ('([8:/android/media/cts/AudioManagerTest.java]:[DND]:[8]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[ckageName(), getInstrumentation(), true);            testStreamMuting(stream);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[etStreamMute failed."",                    mAudioManager.isStreamMute(stream));        }    }   ])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[DND]:[4]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 1), ('([7:/android/media/cts/AudioManagerTest.java]:[DND]:[7]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 1), ('([1:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DND]:[1]:method_text:[ation().getContext();        mDpm = context.getSystemService(DevicePolicyManager.class);    }   ])', 1), ('([1:/com/android/cts/profileowner/AdminActionBookkeepingTest.java]:[DND]:[1]:method_text:[ * Test: It should be recored whether the Profile Owner or the user set the current IME.     */   ])', 1), ('([2:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[2]:method_text:[  * Verifies that a car mode InCallService can enter and exit car mode using a priority.     */   ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[mode InCallService when a call is started when the device is     * already in car mode.     */   ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ies that the lower priority app is bound     * and receives information about the call.     */   ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[milar to {@link #testSwitchToCarMode}, except exits car mode before the call terminates.     */   ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ters car mode after the call starts.  Also     * uses multiple car mode InCallServices.     */   ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ -- bind error"");        }        return queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);    }}])', 1), (""([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[DND]:[1]:method_text:[ there's one user on the device or all     * secondary users / profiles are affiliated.     */   ])"", 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[DND]:[1]:method_text:[  mDpm.setCertInstallerPackage(ADMIN_RECEIVER_COMPONENT, null);        super.tearDown();    }   ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[anupSendBubbleActivity() {        mContext.unregisterReceiver(mBubbleBroadcastReceiver);    }   ])', 1), ('([5:/android/app/cts/NotificationManagerTest.java]:[DND]:[5]:method_text:[nalFilter);            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 1), ('([3:/android/app/cts/NotificationManagerTest.java]:[DND]:[3]:method_text:[) != Notification.VISIBILITY_SECRET);        assertFalse(createdChannel.canBypassDnd());    }   ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[te(id, condition);        assertExpectedDndState(ruleToCreate.getInterruptionFilter());    }   ])', 1), ('([8:/android/app/cts/NotificationManagerTest.java]:[DND]:[8]:method_text:[        // make sure DND is off        assertExpectedDndState(INTERRUPTION_FILTER_ALL);    }   ])', 1), ('([6:/android/app/cts/NotificationManagerTest.java]:[DND]:[6]:method_text:[        // make sure DND is off        assertExpectedDndState(INTERRUPTION_FILTER_ALL);    }   ])', 1), ('([7:/android/app/cts/NotificationManagerTest.java]:[DND]:[7]:method_text:[cZenRule(secondId);        assertExpectedDndState(ruleToCreate.getInterruptionFilter());    }   ])', 1), ('([1:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[DND]:[1]:method_text:[    /**     * Test: Retrieving security logs should update the corresponding timestamp.     */   ])', 1), ('([2:/android/ndef/cts/NdefTest.java]:[DND]:[2]:method_text:[on for input "" + bytesToString(b));            } catch (FormatException e) { }        }    }   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsNoSimTest.java]:[DND]:[1]:method_text:[entaryFiles.EF_SDN,                                1),                        values));    }   ])', 1), ('([1:/android/app/cts/UiModeManagerTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ar mode API when the caller does not hold the correct     * permission to use that API.     */   ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationManager29Test.java]:[DND]:[2]:method_text:[ent.getActivity(                mContext, 0, new Intent(mContext, this.getClass()), 0);    }   ])', 1), ('([4:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[4]:method_text:[eRingerDndOn());        tests.add(new TestSetRingerModePolicyAccessDndOn());        // TODO: Add a])', 1), ('([2:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[2]:method_text:[TestVibrateRinger());        tests.add(new TestSetRingerModePolicyAccess());        // TODO: Add a])', 1), ('([16:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[16]:method_text:[dioManager.getStreamVolume(AudioManager.STREAM_MUSIC));            status = PASS;        }    }])', 1), ('([1:/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java]:[DND]:[1]:method_text:[ption {        mDpm.uninstallCaCert(null, TEST_CA.getBytes());        super.tearDown();    }   ])', 1)]"	""	""	""	""	""
"57:278237) 3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-5-2"	""	"[('android.app.cts.NotificationManagerTest', 10), ('android.app.notification.legacy.cts.ConditionProviderServiceTest', 10), ('android.media.cts.AudioManagerTest', 9), ('com.android.cts.verifier.audio.RingerModeActivity', 3), ('android.app.cts.NotificationChannelTest', 2), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 2), ('android.hardware.camera2.cts.CameraManagerTest', 2), ('android.server.wm.CrossAppDragAndDropTests', 2), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 2), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('android.media.cts.MediaActivityTest', 1), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.profileowner.AdminActionBookkeepingTest', 1), ('com.android.cts.deviceandprofileowner.SecurityLoggingTest', 1), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest', 1), ('com.android.cts.deviceowner.AdminActionBookkeepingTest', 1), ('android.ndef.cts.NdefTest', 1), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsNoSimTest', 1), ('android.app.notification.legacy29.cts.NotificationManager29Test', 1), ('com.android.cts.certinstaller.DirectDelegatedCertInstallerTest', 1)]"	"[('setUp', 15), ('getInstrumentation', 12), ('tearDown', 11), ('of', 8), ('getContext', 7), ('getPackageName', 7), ('getId', 7), ('build', 6), ('toString', 5), ('getActiveNotifications', 5), ('getWho', 4), ('getBytes', 4), ('getContentResolver', 4), ('getMessage', 4), ('getPackageManager', 3), ('getResources', 2), ('getSystem', 2), ('getRingerMode', 2), ('cancelAll', 2), ('printStackTrace', 2), ('getKey', 2), ('getGroupKey', 2), ('supportsSplitScreenMultiWindow', 2), ('supportsFreeform', 2), ('setUpClass', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('release', 1), ('IntentFilter', 1), ('getSimpleName', 1), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('getCount', 1), ('moveToFirst', 1), ('close', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getOverrideGroupKey', 1), ('getUserId', 1)]"	""	""	"3.2.3.5/C-5-2"	"""C-5-2] MUST honor the ‘android.bluetooth.adapter.action.REQUEST_DISCOVERABLE’ intent and show a system activity that requests discoverable mode. If device implementations support the DND feature, they: """	"03020305.670502"	"android.bluetooth.adapter.action.REQUEST DND REQUEST_DISCOVERABLE"	""	""	""	"[('DND', 54)]"	""	"[('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTypeNotificationStateChangedAccessibilityEvent None]', 2), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerWithDnD None]', 2), ('[android.server.wm.CrossAppDragAndDropTests uptimeMillis None]', 2), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testUnboundCPSMaintainsCondition_addsNewRule None]', 2), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testUnboundCPSMaintainsCondition_otherConditionChanges None]', 2), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testUnboundCPSMaintainsCondition_otherProviderRuleChanges None]', 2), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testRequestRebindWhenLostAccess None]', 2), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testMethodsExistAndDoNotThrow None]', 2), ('[android.app.cts.NotificationChannelTest testConstructor None]', 1), ('[android.app.cts.NotificationChannelTest testWriteToParcel None]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled None]', 1), ('[android.media.cts.MediaActivityTest ArrayList None]', 1), ('[android.app.notification.legacy20.cts.LegacyNotificationManager20Test testNotificationListener_cancelNotifications None]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute None]', 1), ('[android.media.cts.AudioManagerTest testMuteDndAffectedStreams None]', 1), ('[android.media.cts.AudioManagerTest testMuteDndUnaffectedStreams None]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInPriorityOnlyMode None]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInPriorityOnly None]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMuteAll None]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMediaAllowed None]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyAlarmsAllowed None]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyChannelsCanBypassDnd None]', 1), ('[android.app.cts.NotificationManagerTest isGroup None]', 1), ('[android.app.cts.NotificationManagerTest testConsolidatedNotificationPolicy None]', 1), ('[android.app.cts.NotificationManagerTest testConsolidatedNotificationPolicyMultiRules None]', 1), ('[android.app.cts.NotificationManagerTest testCreateChannel None]', 1), ('[android.app.cts.NotificationManagerTest testTotalSilenceOnlyMuteStreams None]', 1), ('[android.app.cts.NotificationManagerTest testAlarmsOnlyMuteStreams None]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState None]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState_turnOff None]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState_deletedRule None]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState_multipleRules None]', 1), ('[android.ndef.cts.NdefTest testInvalidParsing None]', 1), ('[android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsNoSimTest insert_nonAdnDirUris_throwsUnsupportedOperationException None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testChannelDeletion_cancelReason None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testSetNotificationPolicy_preP_setOldNewFields None]', 1), ('[android.app.notification.legacy29.cts.NotificationManager29Test isNotificationPolicyAccessGranted None]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity isLowRamDevice None]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity TestVolumeDndAffectedStreamDndOn None]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity TestVolumeDndAffectedStream None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 10), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/ConditionProviderServiceTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/ConditionProviderServiceTest.java', 5), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/RingerModeActivity.java', 3), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationChannelTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy20/src/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/AdminActionBookkeepingTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CrossAppDragAndDropTests.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CrossAppDragAndDropTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/ndef/src/android/ndef/cts/NdefTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsNoSimTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy29/src/android/app/notification/legacy29/cts/NotificationManager29Test.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CertInstaller/src/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java', 1)]"	"[('(1,DND,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 2), ('(6,DND,/android/hardware/camera2/cts/CameraManagerTest.java)', 2), ('(3,DND,/android/server/wm/CrossAppDragAndDropTests.java)', 2), ('(2,DND,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 2), ('(10,DND,/android/app/notification/legacy/cts/ConditionProviderServiceTest.java)', 2), ('(2,DND,/android/app/cts/NotificationChannelTest.java)', 1), ('(1,DND,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(1,DND,/android/media/cts/MediaActivityTest.java)', 1), ('(2,DND,/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java)', 1), ('(31,DND,/android/media/cts/AudioManagerTest.java)', 1), ('(1,DND,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(1,DND,/com/android/cts/profileowner/AdminActionBookkeepingTest.java)', 1), ('(1,DND,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(1,DND,/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java)', 1), ('(40,DND,/android/app/cts/NotificationManagerTest.java)', 1), ('(1,DND,/com/android/cts/deviceowner/AdminActionBookkeepingTest.java)', 1), ('(2,DND,/android/ndef/cts/NdefTest.java)', 1), ('(1,DND,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsNoSimTest.java)', 1), ('(2,DND,/android/app/notification/legacy29/cts/NotificationManager29Test.java)', 1), ('(22,DND,/com/android/cts/verifier/audio/RingerModeActivity.java)', 1), ('(1,DND,/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java)', 1)]"	"[('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ote        assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());    }   ])', 4), ('([1:/android/app/cts/NotificationManagerTest.java]:[DND]:[1]:method_text:[nalFilter);            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 3), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[DND]:[1]:method_text:[notificationManager.deleteNotificationChannel(channel.getId());        }    }    @MediumTest   ])', 2), ('([2:/android/media/cts/AudioManagerTest.java]:[DND]:[2]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 2), ('([3:/android/media/cts/AudioManagerTest.java]:[DND]:[3]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 2), ('([6:/android/hardware/camera2/cts/CameraManagerTest.java]:[DND]:[6]:method_text:[        throw new IOException(""Could not read stdout of command:\xa0"" + command, e);        }    }}])', 2), ('([3:/android/server/wm/CrossAppDragAndDropTests.java]:[DND]:[3]:method_text:[result mismatch,"", expectedResult,                    results.get(resultKey));        }    }   ])', 2), ('([2:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[DND]:[2]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 2), ('([3:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[3]:method_text:[ote        assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());    }   ])', 2), ('([1:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[1]:method_text:[nd after permission lost"");        } catch (Exception e) {            // pass        }    }   ])', 2), ('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ } else {            Log.d(TAG, service.getName() + "" has a correct bind state"");        }    }}])', 2), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[ll(channel.getParentChannelId());        assertFalse(channel.isImportantConversation());    }   ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[icationChannel.CREATOR.createFromParcel(parcel);        assertEquals(channel, channel1);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[DND]:[1]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), (""([1:/android/media/cts/MediaActivityTest.java]:[DND]:[1]:method_text:[    }    /**     * Tests whether volume key changes volume with the session's stream.     */   ])"", 1), ('([2:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[DND]:[2]:method_text:[InterruptedException ex) {                // pass            }        }        return n;    }}])', 1), ('([8:/android/media/cts/AudioManagerTest.java]:[DND]:[8]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[ckageName(), getInstrumentation(), true);            testStreamMuting(stream);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[etStreamMute failed."",                    mAudioManager.isStreamMute(stream));        }    }   ])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[DND]:[4]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 1), ('([7:/android/media/cts/AudioManagerTest.java]:[DND]:[7]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 1), ('([1:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DND]:[1]:method_text:[ation().getContext();        mDpm = context.getSystemService(DevicePolicyManager.class);    }   ])', 1), ('([1:/com/android/cts/profileowner/AdminActionBookkeepingTest.java]:[DND]:[1]:method_text:[ * Test: It should be recored whether the Profile Owner or the user set the current IME.     */   ])', 1), (""([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[DND]:[1]:method_text:[ there's one user on the device or all     * secondary users / profiles are affiliated.     */   ])"", 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[DND]:[1]:method_text:[  mDpm.setCertInstallerPackage(ADMIN_RECEIVER_COMPONENT, null);        super.tearDown();    }   ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[anupSendBubbleActivity() {        mContext.unregisterReceiver(mBubbleBroadcastReceiver);    }   ])', 1), ('([5:/android/app/cts/NotificationManagerTest.java]:[DND]:[5]:method_text:[nalFilter);            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 1), ('([3:/android/app/cts/NotificationManagerTest.java]:[DND]:[3]:method_text:[) != Notification.VISIBILITY_SECRET);        assertFalse(createdChannel.canBypassDnd());    }   ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[te(id, condition);        assertExpectedDndState(ruleToCreate.getInterruptionFilter());    }   ])', 1), ('([8:/android/app/cts/NotificationManagerTest.java]:[DND]:[8]:method_text:[        // make sure DND is off        assertExpectedDndState(INTERRUPTION_FILTER_ALL);    }   ])', 1), ('([6:/android/app/cts/NotificationManagerTest.java]:[DND]:[6]:method_text:[        // make sure DND is off        assertExpectedDndState(INTERRUPTION_FILTER_ALL);    }   ])', 1), ('([7:/android/app/cts/NotificationManagerTest.java]:[DND]:[7]:method_text:[cZenRule(secondId);        assertExpectedDndState(ruleToCreate.getInterruptionFilter());    }   ])', 1), ('([1:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[DND]:[1]:method_text:[    /**     * Test: Retrieving security logs should update the corresponding timestamp.     */   ])', 1), ('([2:/android/ndef/cts/NdefTest.java]:[DND]:[2]:method_text:[on for input "" + bytesToString(b));            } catch (FormatException e) { }        }    }   ])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsNoSimTest.java]:[DND]:[1]:method_text:[entaryFiles.EF_SDN,                                1),                        values));    }   ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationManager29Test.java]:[DND]:[2]:method_text:[ent.getActivity(                mContext, 0, new Intent(mContext, this.getClass()), 0);    }   ])', 1), ('([4:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[4]:method_text:[eRingerDndOn());        tests.add(new TestSetRingerModePolicyAccessDndOn());        // TODO: Add a])', 1), ('([2:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[2]:method_text:[TestVibrateRinger());        tests.add(new TestSetRingerModePolicyAccess());        // TODO: Add a])', 1), ('([16:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[16]:method_text:[dioManager.getStreamVolume(AudioManager.STREAM_MUSIC));            status = PASS;        }    }])', 1), ('([1:/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java]:[DND]:[1]:method_text:[ption {        mDpm.uninstallCaCert(null, TEST_CA.getBytes());        super.tearDown();    }   ])', 1)]"	""	""	""	""	""
"57:278237) 3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-2-6"	""	"[('android.webkit.cts.WebViewTest', 79), ('android.hardware.camera2.cts.CaptureRequestTest', 13), ('android.fragment.cts.FragmentTransitionTest', 13), ('android.view.cts.ViewConfigurationTest', 8), ('android.view.inputmethod.cts.SearchViewTest', 4), ('android.view.cts.FrameMetricsListenerTest', 4), ('android.app.cts.AlertDialogTest', 2), ('android.graphics.cts.VulkanPreTransformTest', 2), ('com.android.cts.verifier.sensors.MotionIndicatorView', 2), ('android.quickaccesswallet.cts.QuickAccessWalletClientTest', 2), ('android.view.cts.ContextThemeWrapperTest', 1), ('android.contentcaptureservice.cts.unit.ContentCaptureConditionTest', 1), ('android.security.cts.PerfEventParanoidTest', 1)]"	"[('waitForTransition', 37), ('findBlue', 30), ('size', 24), ('findGreen', 23), ('getValue', 20), ('beginTransaction', 15), ('commit', 14), ('TransitionFragment', 13), ('capture', 12), ('setupInitialFragment', 11), ('findRed', 6), ('getActivity', 5), ('SharedElementCallback', 4), ('popBackStack', 4), ('TrackingTransition', 4), ('setUp', 3), ('tearDown', 3), ('setup', 3), ('requestFocus', 2), ('get', 2), ('getInstrumentation', 2), ('getTargetContext', 2), ('getDialog', 2), ('Runnable', 2), ('run', 2), ('ComplexTransitionFragment', 2), ('getView', 2), ('getCapturedEpicenter', 2), ('toString', 2), ('TransitionSet', 2), ('UnlockScreenRule', 1), ('close', 1), ('getWindow', 1), ('getDecorView', 1), ('waitForIdleSync', 1), ('data', 1), ('getFragmentManager', 1), ('enterExitTransitions', 1), ('removeAdded', 1), ('crossContainer', 1), ('callStartEndWithSharedElements', 1), ('onMapSharedElementOut', 1), ('onMapSharedElementIn', 1), ('complexSharedElementTransition', 1), ('showHideTransition', 1), ('attachDetachTransition', 1), ('sharedDuplicateTargetNames', 1), ('noSharedElementTransition', 1), ('getTrackedTargets', 1), ('stream', 1), ('clearTargets', 1), ('getWidth', 1), ('getHeight', 1)]"	""	""	"3.2.3.5/C-2-6"	"""C-2-6] MUST honor the android.intent.action.SENDTO and android.intent.action.VIEW intents and provide an activity to send/display SMS messages. """	"03020305.670206"	"SENDTO SMS VIEW android.intent.action.VIEW android.intent.action.SENDTO"	""	""	""	"[('VIEW', 131), ('SENDTO', 1)]"	""	"[('[android.webkit.cts.WebViewTest testJavascriptInterfaceForClientPopup None]', 2), ('[android.view.inputmethod.cts.SearchViewTest testTapThenSetQuery None]', 1), ('[android.view.inputmethod.cts.SearchViewTest testShowImeWithSearchViewFocus None]', 1), ('[android.view.inputmethod.cts.SearchViewTest testShowImeWhenSearchViewFocusInListView None]', 1), ('[android.app.cts.AlertDialogTest testCustomAlertDialogView None]', 1), ('[android.view.cts.ViewConfigurationTest testStaticValues None]', 1), ('[android.view.cts.ViewConfigurationTest testConstructor None]', 1), ('[android.view.cts.ViewConfigurationTest testInstanceValues None]', 1), ('[android.view.cts.ViewConfigurationTest testExceptionsThrown None]', 1), ('[android.view.cts.ViewConfigurationTest testGetAmbiguousGestureMultiplier None]', 1), ('[android.view.cts.ViewConfigurationTest testGetScaledAmbiguousGestureMultiplier None]', 1), ('[android.view.cts.ViewConfigurationTest testGetMaximumDrawingCacheSize None]', 1), ('[android.graphics.cts.VulkanPreTransformTest testVulkanPreTransformSetToMatchCurrentTransform None]', 1), ('[android.graphics.cts.VulkanPreTransformTest testVulkanPreTransformNotSetToMatchCurrentTransform None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testSettingsBinderParcel None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testBlackLevelLock None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testLensShadingMap None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAntiBandingModes None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAeModeAndLock None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashTurnOff None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testCameraStabilizations None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testDigitalZoom None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testZoomRatio None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testDigitalZoomPreviewCombinations None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 1), ('[android.view.cts.FrameMetricsListenerTest testReceiveData None]', 1), ('[android.view.cts.FrameMetricsListenerTest testMultipleListeners None]', 1), ('[android.view.cts.FrameMetricsListenerTest testDropCount None]', 1), ('[android.security.cts.PerfEventParanoidTest testPerfEventRestricted None]', 1), ('[android.quickaccesswallet.cts.QuickAccessWalletClientTest testCreateWalletIntent_parsesXmlAndUsesCorrectIntentAction None]', 1), ('[android.quickaccesswallet.cts.QuickAccessWalletClientTest testCreateWalletSettingsIntent_usesSettingsActionToFindAppropriateActivity None]', 1), ('[android.fragment.cts.FragmentTransitionTest OnBackStackChangedListener None]', 1), ('[android.fragment.cts.FragmentTransitionTest getVisibility None]', 1), ('[android.fragment.cts.FragmentTransitionTest sharedElementMismatch None]', 1), ('[android.webkit.cts.WebViewTest WebViewTest None]', 1), ('[android.webkit.cts.WebViewTest testConstructor None]', 1), ('[android.webkit.cts.WebViewTest testCreatingWebViewWithDeviceEncrpytionFails None]', 1), ('[android.webkit.cts.WebViewTest testCreatingWebViewWithMultipleEncryptionContext None]', 1), ('[android.webkit.cts.WebViewTest testCreatingWebViewCreatesCookieSyncManager None]', 1), ('[android.webkit.cts.WebViewTest testFindAddress None]', 1), ('[android.webkit.cts.WebViewTest testScrollBarOverlay None]', 1), ('[android.webkit.cts.WebViewTest testLoadUrl None]', 1), ('[android.webkit.cts.WebViewTest testPostUrlWithNonNetworkUrl None]', 1), ('[android.webkit.cts.WebViewTest testPostUrlWithNetworkUrl None]', 1), ('[android.webkit.cts.WebViewTest testLoadUrlDoesNotStripParamsWhenLoadingContentUrls None]', 1), ('[android.webkit.cts.WebViewTest testAppInjectedXRequestedWithHeaderIsNotOverwritten None]', 1), ('[android.webkit.cts.WebViewTest testAppCanInjectHeadersViaImmutableMap None]', 1), ('[android.webkit.cts.WebViewTest testCanInjectHeaders None]', 1), ('[android.webkit.cts.WebViewTest testGetVisibleTitleHeight None]', 1), ('[android.webkit.cts.WebViewTest testGetOriginalUrl None]', 1), ('[android.webkit.cts.WebViewTest testStopLoading None]', 1), ('[android.webkit.cts.WebViewTest testGoBackAndForward None]', 1), ('[android.webkit.cts.WebViewTest testAddJavascriptInterface None]', 1), ('[android.webkit.cts.WebViewTest testAddJavascriptInterfaceNullObject None]', 1), ('[android.webkit.cts.WebViewTest testRemoveJavascriptInterface None]', 1), ('[android.webkit.cts.WebViewTest testUseRemovedJavascriptInterface None]', 1), ('[android.webkit.cts.WebViewTest testAddJavascriptInterfaceExceptions None]', 1), ('[android.webkit.cts.WebViewTest testJavascriptInterfaceCustomPropertiesClearedOnReload None]', 1), ('[android.webkit.cts.WebViewTest testCapturePicture None]', 1), ('[android.webkit.cts.WebViewTest testSetPictureListener None]', 1), ('[android.webkit.cts.WebViewTest testAccessHttpAuthUsernamePassword None]', 1), ('[android.webkit.cts.WebViewTest testWebViewDatabaseAccessHttpAuthUsernamePassword None]', 1), ('[android.webkit.cts.WebViewTest testLoadData None]', 1), ('[android.webkit.cts.WebViewTest testLoadDataWithBaseUrl_resolvesRelativeToBaseUrl None]', 1), ('[android.webkit.cts.WebViewTest testLoadDataWithBaseUrl_historyUrl None]', 1), ('[android.webkit.cts.WebViewTest testLoadDataWithBaseUrl_nullHistoryUrlShowsAsAboutBlank None]', 1), ('[android.webkit.cts.WebViewTest testLoadDataWithBaseUrl_javascriptCanAccessOrigin None]', 1), ('[android.webkit.cts.WebViewTest testLoadDataWithBaseUrl_dataBaseUrlIgnoresHistoryUrl None]', 1), ('[android.webkit.cts.WebViewTest testLoadDataWithBaseUrl_unencodedContentHttpBaseUrl None]', 1), ('[android.webkit.cts.WebViewTest testLoadDataWithBaseUrl_urlEncodedContentDataBaseUrl None]', 1), ('[android.webkit.cts.WebViewTest testLoadDataWithBaseUrl_nullSafe None]', 1), ('[android.webkit.cts.WebViewTest testSaveWebArchive None]', 1), ('[android.webkit.cts.WebViewTest testFindAll None]', 1), ('[android.webkit.cts.WebViewTest testFindNext None]', 1), ('[android.webkit.cts.WebViewTest testDocumentHasImages None]', 1), ('[android.webkit.cts.WebViewTest testPageScroll None]', 1), ('[android.webkit.cts.WebViewTest testGetContentHeight None]', 1), ('[android.webkit.cts.WebViewTest testPlatformNotifications None]', 1), ('[android.webkit.cts.WebViewTest testAccessPluginList None]', 1), ('[android.webkit.cts.WebViewTest testDestroy None]', 1), ('[android.webkit.cts.WebViewTest testFlingScroll None]', 1), ('[android.webkit.cts.WebViewTest testRequestFocusNodeHref None]', 1), ('[android.webkit.cts.WebViewTest testRequestImageRef None]', 1), ('[android.webkit.cts.WebViewTest testDebugDump None]', 1), ('[android.webkit.cts.WebViewTest testGetHitTestResult None]', 1), ('[android.webkit.cts.WebViewTest testSetInitialScale None]', 1), ('[android.webkit.cts.WebViewTest testClearHistory None]', 1), ('[android.webkit.cts.WebViewTest testSaveAndRestoreState None]', 1), ('[android.webkit.cts.WebViewTest testRequestChildRectangleOnScreen None]', 1), ('[android.webkit.cts.WebViewTest testSetDownloadListener None]', 1), ('[android.webkit.cts.WebViewTest testSetLayoutParams None]', 1), ('[android.webkit.cts.WebViewTest testSetMapTrackballToArrowKeys None]', 1), ('[android.webkit.cts.WebViewTest testSetNetworkAvailable None]', 1), ('[android.webkit.cts.WebViewTest testSetWebChromeClient None]', 1), ('[android.webkit.cts.WebViewTest testPauseResumeTimers None]', 1), ('[android.webkit.cts.WebViewTest testAndroidAssetQueryParam None]', 1), ('[android.webkit.cts.WebViewTest testAndroidAssetAnchor None]', 1), ('[android.webkit.cts.WebViewTest testEvaluateJavascript None]', 1), ('[android.webkit.cts.WebViewTest testPrinting None]', 1), ('[android.webkit.cts.WebViewTest testPrintingPagesCount None]', 1), ('[android.webkit.cts.WebViewTest testVisualStateCallbackCalled None]', 1), ('[android.webkit.cts.WebViewTest testSetSafeBrowsingWhitelistWithMalformedList None]', 1), ('[android.webkit.cts.WebViewTest testSetSafeBrowsingWhitelistWithValidList None]', 1), ('[android.webkit.cts.WebViewTest testGetWebViewClient None]', 1), ('[android.webkit.cts.WebViewTest testGetWebChromeClient None]', 1), ('[android.webkit.cts.WebViewTest testSetCustomTextClassifier None]', 1), ('[android.webkit.cts.WebViewTest testStartSafeBrowsingUseApplicationContext None]', 1), ('[android.webkit.cts.WebViewTest testStartSafeBrowsingWithNullCallbackDoesntCrash None]', 1), ('[android.webkit.cts.WebViewTest testStartSafeBrowsingInvokesCallback None]', 1), ('[android.webkit.cts.WebViewTest testGetSafeBrowsingPrivacyPolicyUrl None]', 1), ('[android.webkit.cts.WebViewTest testWebViewClassLoaderReturnsNonNull None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewTest.java', 79), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/FragmentTransitionTest.java', 13), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 8), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/SearchViewTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FrameMetricsListenerTest.java', 4), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlertDialogTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanPreTransformTest.java', 2), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MotionIndicatorView.java', 2), ('/home/gpoor/cts-12-source/cts/tests/quickaccesswallet/src/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ContextThemeWrapperTest.java', 1), ('/home/gpoor/cts-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/unit/ContentCaptureConditionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/PerfEventParanoidTest.java', 1)]"	"[('(90,VIEW,/android/view/inputmethod/cts/SearchViewTest.java)', 1), ('(4,VIEW,/android/app/cts/AlertDialogTest.java)', 1), ('(2,VIEW,/android/view/cts/ContextThemeWrapperTest.java)', 1), ('(41,VIEW,/android/view/cts/ViewConfigurationTest.java)', 1), ('(8,VIEW,/android/graphics/cts/VulkanPreTransformTest.java)', 1), ('(204,VIEW,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(2,VIEW,/android/contentcaptureservice/cts/unit/ContentCaptureConditionTest.java)', 1), ('(13,VIEW,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(27,VIEW,/android/view/cts/FrameMetricsListenerTest.java)', 1), ('(3,VIEW,/android/security/cts/PerfEventParanoidTest.java)', 1), ('(2,VIEW,/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java)', 1), ('(167,VIEW,/android/fragment/cts/FragmentTransitionTest.java)', 1), ('(1,SENDTO,/android/webkit/cts/WebViewTest.java)', 1), ('(442,VIEW,/android/webkit/cts/WebViewTest.java)', 1)]"	"[('([5:/android/webkit/cts/WebViewTest.java]:[VIEW]:[5]:method_text:[ould be reflected in that test as necessary. See     * http://go/modifying-webview-cts.     */   ])', 2), ('([9:/android/webkit/cts/WebViewTest.java]:[VIEW]:[9]:method_text:[test should be reflected in that test as necessary. See http://go/modifying-webview-cts.     */   ])', 2), ('([56:/android/view/inputmethod/cts/SearchViewTest.java]:[VIEW]:[56]:method_text:[            }            return layout;        });        return searchViewRef.get();    }   ])', 1), ('([6:/android/view/inputmethod/cts/SearchViewTest.java]:[VIEW]:[6]:method_text:[uals(event.getEventName()), TIMEOUT);            expectImeInvisible(TIMEOUT);        }    }   ])', 1), ('([6:/android/view/inputmethod/cts/SearchViewTest.java]:[VIEW]:[6]:method_text:[       CHECK_EXIT_EVENT_ONLY, TIMEOUT);            expectImeVisible(TIMEOUT);        }    }   ])', 1), ('([22:/android/view/inputmethod/cts/SearchViewTest.java]:[VIEW]:[22]:method_text:[w getView(int i, View view, ViewGroup viewGroup) {            return mSearchView;        }    }}])', 1), ('([2:/android/app/cts/AlertDialogTest.java]:[VIEW]:[2]:method_text:[  PollingCheck.waitFor(mActivity.getDialog().getWindow().getDecorView()::hasWindowFocus);    }   ])', 1), ('([2:/android/app/cts/AlertDialogTest.java]:[VIEW]:[2]:method_text:[ity.TEST_CUSTOM_ALERTDIALOG_VIEW);        assertTrue(mActivity.getDialog().isShowing());    }   ])', 1), ('([2:/android/view/cts/ContextThemeWrapperTest.java]:[VIEW]:[2]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([7:/android/view/cts/ViewConfigurationTest.java]:[VIEW]:[7]:method_text:[onfiguration}. */@SmallTest@RunWith(AndroidJUnit4.class)public class ViewConfigurationTest {   ])', 1), ('([21:/android/view/cts/ViewConfigurationTest.java]:[VIEW]:[21]:method_text:[ration.getKeyRepeatDelay();        ViewConfiguration.getDefaultActionModeHideDuration();    }   ])', 1), ('([1:/android/view/cts/ViewConfigurationTest.java]:[VIEW]:[1]:method_text:[    public void testConstructor() {        new ViewConfiguration();    }    ])', 1), ('([2:/android/view/cts/ViewConfigurationTest.java]:[VIEW]:[2]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 1), ('([3:/android/view/cts/ViewConfigurationTest.java]:[VIEW]:[3]:method_text:[e the classification. Therefore, this multiplier should be always greater or equal to 1.     */   ])', 1), ('([3:/android/view/cts/ViewConfigurationTest.java]:[VIEW]:[3]:method_text:[iplier = vc.getAmbiguousGestureMultiplier();        assertTrue(instanceMultiplier >= 1);    }   ])', 1), ('([2:/android/view/cts/ViewConfigurationTest.java]:[VIEW]:[2]:method_text:[ = vc.getScaledAmbiguousGestureMultiplier();        assertTrue(instanceMultiplier >= 1);    }   ])', 1), ('([2:/android/view/cts/ViewConfigurationTest.java]:[VIEW]:[2]:method_text:[cally hardcoded to be.        assertEquals(480 * 800 * 4, vc.getMaximumDrawingCacheSize());    }}])', 1), ('([3:/android/graphics/cts/VulkanPreTransformTest.java]:[VIEW]:[3]:method_text:[        SystemClock.sleep(2000);        mContext = InstrumentationRegistry.getContext();    }   ])', 1), ('([5:/android/graphics/cts/VulkanPreTransformTest.java]:[VIEW]:[5]:method_text:[iff(bitmap.getPixel(width - 1, height - 1), 0, 255, 0);        }        return diff < 10;    }}])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[VIEW]:[3]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([4:/android/hardware/camera2/cts/CaptureRequestTest.java]:[VIEW]:[4]:method_text:[ain locked after exposure     * value changes (when requests have lock ON).     * </p>     */   ])', 1), ('([10:/android/hardware/camera2/cts/CaptureRequestTest.java]:[VIEW]:[10]:method_text:[ack level should be     *   close enough to the optical black level values.     * </p>     */   ])', 1), ('([12:/android/hardware/camera2/cts/CaptureRequestTest.java]:[VIEW]:[12]:method_text:[anti-banding modes, check if the exposure time adjustment is     * correct.     * </p>     */   ])', 1), ('([5:/android/hardware/camera2/cts/CaptureRequestTest.java]:[VIEW]:[5]:method_text:[ should satisfy the per frame controls defined in     * API specifications.     * </p>     */   ])', 1), ('([6:/android/hardware/camera2/cts/CaptureRequestTest.java]:[VIEW]:[6]:method_text:[ test the flash control     * and {@link CaptureResult#FLASH_STATE} result.     * </p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/CaptureRequestTest.java]:[VIEW]:[7]:method_text:[f given various initial and final     * AE_CONTROL modes for repeating CaptureRequests.     */   ])', 1), ('([7:/android/hardware/camera2/cts/CaptureRequestTest.java]:[VIEW]:[7]:method_text:[);            }        }    }    /**     * Test face detection modes and results.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[VIEW]:[1]:method_text:[validate the returned crop regions.     * The max preview size is used for each camera.     */   ])', 1), ('([4:/android/hardware/camera2/cts/CaptureRequestTest.java]:[VIEW]:[4]:method_text:[turned crop regions and zoom ratio.     * The max preview size is used for each camera.     */   ])', 1), ('([5:/android/hardware/camera2/cts/CaptureRequestTest.java]:[VIEW]:[5]:method_text:[ombinations.     * TODO: this and above test should all be moved to preview test class.     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[VIEW]:[2]:method_text:[  closeDevice();            }        }    }    /**     * Test scene mode controls.     */   ])', 1), ('([138:/android/hardware/camera2/cts/CaptureRequestTest.java]:[VIEW]:[138]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([2:/android/contentcaptureservice/cts/unit/ContentCaptureConditionTest.java]:[VIEW]:[2]:method_text:[nal int NO_FLAGS = 0;    private final LocusId mLocusId = new LocusId(""http://com.example/"");   ])', 1), ('([5:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[VIEW]:[5]:method_text:[hat draws the user prompt * * The following piece of code should show how to use this view. * * ])', 1), ('([8:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[VIEW]:[8]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([5:/android/view/cts/FrameMetricsListenerTest.java]:[VIEW]:[5]:method_text:[ad(() -> mActivity.setContentView(layoutId));        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([8:/android/view/cts/FrameMetricsListenerTest.java]:[VIEW]:[8]:method_text:[rawSync(mActivityRule, scrollView, null);        }        assertEquals(0, data.size());    }   ])', 1), ('([7:/android/view/cts/FrameMetricsListenerTest.java]:[VIEW]:[7]:method_text:[ity.getWindow().removeOnFrameMetricsAvailableListener(frameMetricsListener2);        });    }   ])', 1), ('([7:/android/view/cts/FrameMetricsListenerTest.java]:[VIEW]:[7]:method_text:[rawFrameMetric,                (firstDrawFrameMetric == 0) || (firstDrawFrameMetric == 1));    }}])', 1), ('([3:/android/security/cts/PerfEventParanoidTest.java]:[VIEW]:[3]:method_text:[    getDevice().hasFeature(""feature:android.hardware.security.model.compatible""));        }    }}])', 1), ('([1:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[VIEW]:[1]:method_text:[getName());        assertThat(walletIntent.getComponent()).isEqualTo(expectedComponent);    }   ])', 1), ('([1:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[VIEW]:[1]:method_text:[TimeUnit unit) throws InterruptedException {            mLatch.await(time, unit);        }    }}])', 1), ('([4:/android/fragment/cts/FragmentTransitionTest.java]:[VIEW]:[4]:method_text:[t that normal view transitions (enter, exit, reenter, return) run with    // a single fragment.   ])', 1), ('([4:/android/fragment/cts/FragmentTransitionTest.java]:[VIEW]:[4]:method_text:[/ Test that shared elements transition from one fragment to the next    // and back during pop.   ])', 1), (""([6:/android/fragment/cts/FragmentTransitionTest.java]:[VIEW]:[6]:method_text:[    }    // Make sure that shared elements on two different fragment containers don't interact   ])"", 1), ('([9:/android/fragment/cts/FragmentTransitionTest.java]:[VIEW]:[9]:method_text:[ fragment2);    }    // Make sure that onSharedElementStart and onSharedElementEnd are called   ])', 1), ('([16:/android/fragment/cts/FragmentTransitionTest.java]:[VIEW]:[16]:method_text:[));    }    // Make sure that onMapSharedElement works to change the shared element going out   ])', 1), ('([10:/android/fragment/cts/FragmentTransitionTest.java]:[VIEW]:[10]:method_text:[reen);    }    // Make sure that onMapSharedElement works to change the shared element target   ])', 1), ('([11:/android/fragment/cts/FragmentTransitionTest.java]:[VIEW]:[11]:method_text:[    }    // Ensure that shared element transitions that have targets properly target the views   ])', 1), (""([6:/android/fragment/cts/FragmentTransitionTest.java]:[VIEW]:[6]:method_text:[itions have executed that they don't have any targets or other    // unfortunate modifications.   ])"", 1), ('([14:/android/fragment/cts/FragmentTransitionTest.java]:[VIEW]:[14]:method_text:[gment2);    }    // Ensure that transitions are done when a fragment is attached and detached   ])', 1), (""([8:/android/fragment/cts/FragmentTransitionTest.java]:[VIEW]:[8]:method_text:[t2);    }    // Ensure that shared element without matching transition name doesn't error out   ])"", 1), ('([4:/android/fragment/cts/FragmentTransitionTest.java]:[VIEW]:[4]:method_text:[   }    // Ensure that using the same source or target shared element results in an exception.   ])', 1), (""([3:/android/fragment/cts/FragmentTransitionTest.java]:[VIEW]:[3]:method_text:[cted        }    }    // Test that invisible fragment views don't participate in transitions   ])"", 1), ('([72:/android/fragment/cts/FragmentTransitionTest.java]:[VIEW]:[72]:method_text:[bility(View.INVISIBLE);            super.onViewCreated(view, savedInstanceState);        }    }}])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[SENDTO]:[1]:method_text:[lCount;                }            }.run();        }        return pictureRef.get();    }   ])', 1), ('([31:/android/webkit/cts/WebViewTest.java]:[VIEW]:[31]:method_text:[      mWebServer = null;        StrictMode.setThreadPolicy(oldPolicy);    }    @UiThreadTest   ])', 1), ('([5:/android/webkit/cts/WebViewTest.java]:[VIEW]:[5]:method_text:[View(getActivity(), null);        new WebView(getActivity(), null, 0);    }    @UiThreadTest   ])', 1), ('([5:/android/webkit/cts/WebViewTest.java]:[VIEW]:[5]:method_text:[reating with a device "" +                ""protected storage context"");    }    @UiThreadTest   ])', 1), ('([6:/android/webkit/cts/WebViewTest.java]:[VIEW]:[6]:method_text:[reating with a device "" +                ""protected storage context"");    }    @UiThreadTest   ])', 1), ('([4:/android/webkit/cts/WebViewTest.java]:[VIEW]:[4]:method_text:[yncManager.getInstance());    }    // Static methods should be safe to call on non-UI threads   ])', 1), ('([6:/android/webkit/cts/WebViewTest.java]:[VIEW]:[6]:method_text:[0\\uD835\\uDFEF \\uD835\\uDFEF\\uD835\\uDFEFth Avenue Sunnyvale, CA 94089""));    }    @UiThreadTest   ])', 1), ('([6:/android/webkit/cts/WebViewTest.java]:[VIEW]:[6]:method_text:[       assertFalse(mWebView.overlayVerticalScrollbar());    }    @Presubmit    @UiThreadTest   ])', 1), ('([10:/android/webkit/cts/WebViewTest.java]:[VIEW]:[10]:method_text:[View.getContext().getApplicationInfo().packageName, header.getValue());    }    @UiThreadTest   ])', 1), ('([3:/android/webkit/cts/WebViewTest.java]:[VIEW]:[3]:method_text:[tHtmlConstants.HELLO_WORLD_TITLE,                mWebView.getTitle());    }    @UiThreadTest   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[s.toString(entity);        assertEquals(entityString, postDataString);    }    @UiThreadTest   ])', 1), ('([3:/android/webkit/cts/WebViewTest.java]:[VIEW]:[3]:method_text:[tTitle());        assertEquals(""bar"", uri.getQueryParameter(""param""));    }    @UiThreadTest   ])', 1), ('([3:/android/webkit/cts/WebViewTest.java]:[VIEW]:[3]:method_text:[matchingHeaders[0];        assertEquals(requester, header.getValue());    }    @UiThreadTest   ])', 1), ('([3:/android/webkit/cts/WebViewTest.java]:[VIEW]:[3]:method_text:[  Header header = matchingHeaders[0];        assertEquals(requester, header.getValue());    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[gHeaders[0].getValue());        }    }    @SuppressWarnings(""deprecation"")    @UiThreadTest   ])', 1), ('([3:/android/webkit/cts/WebViewTest.java]:[VIEW]:[3]:method_text:[letion(url);        assertEquals(0, mWebView.getVisibleTitleHeight());    }    @UiThreadTest   ])', 1), ('([12:/android/webkit/cts/WebViewTest.java]:[VIEW]:[12]:method_text:[nalUrl, mWebView.getUrl());        assertEquals(redirectUrl, mWebView.getOriginalUrl());    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[ait(3000);        }        assertFalse(jsInterface.getPageLoaded());    }    @UiThreadTest   ])', 1), ('([6:/android/webkit/cts/WebViewTest.java]:[VIEW]:[6]:method_text:[  assertGoBackOrForwardBySteps(true, -2);        assertGoBackOrForwardBySteps(false, 1);    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[defined\\"""",                mOnUiThread.evaluateJavascriptSync(""typeof dummy.getClass""));    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[              ""text/html"", null);        assertEquals(""object"", mOnUiThread.getTitle());    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[           ""text/html"", null);        assertEquals(""undefined"", mOnUiThread.getTitle());    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[     ""text/html"", null);        assertEquals(""removedObject"", resultObject.getResult());    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[l\'; } catch (exception) { \'pass\'; } ""));        assertTrue(mJsInterfaceWasCalled.get());    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[ assertEquals(""false"", mOnUiThread.evaluateJavascriptSync(""\'custom_property\' in dummy""));    }   ])', 1), ('([25:/android/webkit/cts/WebViewTest.java]:[VIEW]:[25]:method_text:[lCount;                }            }.run();        }        return pictureRef.get();    }   ])', 1), ('([3:/android/webkit/cts/WebViewTest.java]:[VIEW]:[3]:method_text:[pdate automatically"",                isPictureFilledWithColor(oldPicture, Color.WHITE));    }   ])', 1), ('([10:/android/webkit/cts/WebViewTest.java]:[VIEW]:[10]:method_text:[eturn listener.callCount > oldCallCount;            }        }.run();    }    @UiThreadTest   ])', 1), ('([19:/android/webkit/cts/WebViewTest.java]:[VIEW]:[19]:method_text:[e.getInstance(getActivity()).clearHttpAuthUsernamePassword();        }    }    @UiThreadTest   ])', 1), ('([23:/android/webkit/cts/WebViewTest.java]:[VIEW]:[23]:method_text:[1]);        } finally {            webViewDb.clearHttpAuthUsernamePassword();        }    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[      + ""cross-site frame\'s href."",                secondTitle, mOnUiThread.getTitle());    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[ should make it to the server"",                mWebServer.wasResourceRequested(imgUrl));    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[text/html"", ""UTF-8"", historyUrl);        assertEquals(historyUrl, mOnUiThread.getUrl());    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[  ""text/html"", ""UTF-8"", null);        assertEquals(""about:blank"", mOnUiThread.getUrl());    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[text/html"", ""UTF-8"", null);        assertEquals(crossOriginUrl, mOnUiThread.getTitle());    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[we loaded"",                mOnUiThread.getUrl().indexOf(""simple html""), greaterThan(0));    }   ])', 1), ('([3:/android/webkit/cts/WebViewTest.java]:[VIEW]:[3]:method_text:[xt/html"", ""UTF-8"", null);        assertEquals(""Hello World%21"", mOnUiThread.getTitle());    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[text/html"", ""UTF-8"", null);        assertEquals(""Hello World!"", mOnUiThread.getTitle());    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[e, callback);        assertTrue(saving.tryAcquire(TEST_TIMEOUT, TimeUnit.MILLISECONDS));    }   ])', 1), ('([9:/android/webkit/cts/WebViewTest.java]:[VIEW]:[9]:method_text:[                  mFuture.set(numberOfMatches);                }            }        }    }   ])', 1), ('([3:/android/webkit/cts/WebViewTest.java]:[VIEW]:[3]:method_text:[ead.findAll(""find"");        assertEquals(2, (int)WebkitUtils.waitForFuture(l.future()));    }   ])', 1), ('([7:/android/webkit/cts/WebViewTest.java]:[VIEW]:[7]:method_text:[mplete(previousScrollY);        assertTrue(mOnUiThread.getScrollY() == previousScrollY);    }   ])', 1), ('([17:/android/webkit/cts/WebViewTest.java]:[VIEW]:[17]:method_text:[urn flingDone;            }        }        new ScrollDiffPollingCheck(webview).run();    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[            return topScrollY == mOnUiThread.getScrollY();            }        }.run();    }   ])', 1), ('([5:/android/webkit/cts/WebViewTest.java]:[VIEW]:[5]:method_text:[))                        <= tolerance;            }        }.run();    }    @UiThreadTest   ])', 1), ('([4:/android/webkit/cts/WebViewTest.java]:[VIEW]:[4]:method_text:[latformNotifications();        WebView.disablePlatformNotifications();    }    @UiThreadTest   ])', 1), ('([4:/android/webkit/cts/WebViewTest.java]:[VIEW]:[4]:method_text:[t find a way to install plugins        mWebView.refreshPlugins(false);    }    @UiThreadTest   ])', 1), ('([8:/android/webkit/cts/WebViewTest.java]:[VIEW]:[8]:method_text:[       WebView localWebView = new WebView(getActivity());        localWebView.destroy();    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[               mOnUiThread.getScrollY() > previousScrollY;            }        }.run();    }   ])', 1), ('([3:/android/webkit/cts/WebViewTest.java]:[VIEW]:[3]:method_text:[ertEquals(url2, handler.getResultUrl());        mOnUiThread.requestFocusNodeHref(null);    }   ])', 1), ('([5:/android/webkit/cts/WebViewTest.java]:[VIEW]:[5]:method_text:[   }        }.run();        assertEquals(imgUrl, handler.mResultUrl);    }    @UiThreadTest   ])', 1), ('([3:/android/webkit/cts/WebViewTest.java]:[VIEW]:[3]:method_text:[Utils.isWebViewAvailable()) {            return;        }        mWebView.debugDump();    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[TYPE, hitTestResult.getType());        assertEquals(location, hitTestResult.getExtra());    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[tScale - mOnUiThread.getScale()) < .01f;            }        }.run();    }    @UiThreadTest   ])', 1), ('([3:/android/webkit/cts/WebViewTest.java]:[VIEW]:[3]:method_text:[left after clearing        pollingCheckWebBackForwardList(url3, 0, 1);    }    @UiThreadTest   ])', 1), ('([11:/android/webkit/cts/WebViewTest.java]:[VIEW]:[11]:method_text:[).getUrl());        assertEquals(url3, copyListAfterRestore.getItemAtIndex(2).getUrl());    }   ])', 1), ('([3:/android/webkit/cts/WebViewTest.java]:[VIEW]:[3]:method_text:[), greaterThan(origX));        assertThat(mOnUiThread.getScrollY(), greaterThan(origY));    }   ])', 1), ('([6:/android/webkit/cts/WebViewTest.java]:[VIEW]:[6]:method_text:[ener.contentLength);        assertEquals(mimeType, listener.mimeType);    }    @UiThreadTest   ])', 1), ('([4:/android/webkit/cts/WebViewTest.java]:[VIEW]:[4]:method_text:[Params(params);        assertSame(params, mWebView.getLayoutParams());    }    @UiThreadTest   ])', 1), ('([3:/android/webkit/cts/WebViewTest.java]:[VIEW]:[3]:method_text:[ble()) {            return;        }        mWebView.setMapTrackballToArrowKeys(true);    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[           return mOnUiThread.getTitle().equals(""ONLINE"");            }        }.run();    }   ])', 1), ('([5:/android/webkit/cts/WebViewTest.java]:[VIEW]:[5]:method_text:[      getInstrumentation().waitForIdleSync();        WebkitUtils.waitForFuture(future);    }   ])', 1), ('([5:/android/webkit/cts/WebViewTest.java]:[VIEW]:[5]:method_text:[rUpdate());    }    // verify query parameters can be passed correctly to android asset files   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[S"", mOnUiThread.getTitle());    }    // verify anchors work correctly for android asset files   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[UrlAndWaitForCompletion(fileUrl);        assertEquals(""anchor"", mOnUiThread.getTitle());    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[VIEW]:[2]:method_text:[      }.run();    }    // Verify Print feature can create a PDF file with a correct preamble.   ])', 1), ('([3:/android/webkit/cts/WebViewTest.java]:[VIEW]:[3]:method_text:[        }    }    // Verify Print feature can create a PDF file with correct number of pages.   ])', 1), ('([5:/android/webkit/cts/WebViewTest.java]:[VIEW]:[5]:method_text:[   * should be reflected in that test as necessary. See http://go/modifying-webview-cts.     */   ])', 1), ('([4:/android/webkit/cts/WebViewTest.java]:[VIEW]:[4]:method_text:[ould be reflected in that test as necessary. See     * http://go/modifying-webview-cts.     */   ])', 1), ('([12:/android/webkit/cts/WebViewTest.java]:[VIEW]:[12]:method_text:[lected in that test as necessary. See http://go/modifying-webview-cts.     */    @UiThreadTest   ])', 1), ('([21:/android/webkit/cts/WebViewTest.java]:[VIEW]:[21]:method_text:[lected in that test as necessary. See http://go/modifying-webview-cts.     */    @UiThreadTest   ])', 1), ('([8:/android/webkit/cts/WebViewTest.java]:[VIEW]:[8]:method_text:[nt(client2);        assertSame(client2, webView.getWebChromeClient());    }    @UiThreadTest   ])', 1), ('([5:/android/webkit/cts/WebViewTest.java]:[VIEW]:[5]:method_text:[test should be reflected in that test as necessary. See http://go/modifying-webview-cts.     */   ])', 1), ('([4:/android/webkit/cts/WebViewTest.java]:[VIEW]:[4]:method_text:[on e) {            fail(""The privacy policy URL should be a well-formed URL"");        }    }   ])', 1), ('([5:/android/webkit/cts/WebViewTest.java]:[VIEW]:[5]:method_text:[()) {            return;        }        assertNotNull(WebView.getWebViewClassLoader());    }}])', 1)]"	""	""	""	""	""
"57:278237) 3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-14-1"	""	"[('android.autofillservice.cts.SettingsIntentTest', 1), ('android.content.cts.AvailableIntentsTest', 1), ('android.autofillservice.cts.servicebehavior.SettingsIntentTest', 1)]"	""	""	""	"3.2.3.5/C-14-1"	"""C-14-1] MUST fully implement the AutofillService and AutofillManager APIs and honor the android.settings.REQUEST_SET_AUTOFILL_SERVICE intent to show a default app settings menu to enable and disable autofill and change the default autofill service for the user. If device implementations include a pre-installed app or wish to allow third-party apps to access the usage statistics, they: """	"03020305.671401"	"REQUEST_SET_AUTOFILL_SERVICE android.settings.REQUEST"	""	""	""	"[('REQUEST_SET_AUTOFILL_SERVICE', 3)]"	""	"[('[android.autofillservice.cts.SettingsIntentTest testWarningShown_userRejectsByTappingBack None]', 1), ('[android.content.cts.AvailableIntentsTest testRequestSetAutofillServiceIntent None]', 1), ('[android.autofillservice.cts.servicebehavior.SettingsIntentTest testWarningShown_userRejectsByTappingBack None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/SettingsIntentTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java', 1)]"	"[('(1,REQUEST_SET_AUTOFILL_SERVICE,/android/autofillservice/cts/SettingsIntentTest.java)', 1), ('(1,REQUEST_SET_AUTOFILL_SERVICE,/android/content/cts/AvailableIntentsTest.java)', 1), ('(1,REQUEST_SET_AUTOFILL_SERVICE,/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java)', 1)]"	"[('([1:/android/autofillservice/cts/SettingsIntentTest.java]:[REQUEST_SET_AUTOFILL_SERVICE]:[1]:method_text:[FLAG_ACTIVITY_NEW_TASK)                .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));    }}])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[REQUEST_SET_AUTOFILL_SERVICE]:[1]:method_text:[  .setData(Uri.parse(""package:android.content.cts""));        assertCanBeHandled(intent);    }   ])', 1), ('([1:/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java]:[REQUEST_SET_AUTOFILL_SERVICE]:[1]:method_text:[FLAG_ACTIVITY_NEW_TASK)                .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));    }}])', 1)]"	""	""	""	""	""
"57:278237) 3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-11-1"	""	"[('android.webkit.cts.WebViewTest', 18), ('android.media.tv.tuner.cts.TunerFrontendTest', 11), ('android.angle.cts.CtsAngleDeveloperOptionHostTest', 11), ('android.app.usage.cts.UsageStatsTest', 7), ('com.google.android.cts.deviceowner.DeviceOwnerTest', 6), ('android.webkit.cts.WebViewClientTest', 6), ('android.hardware.camera2.cts.CaptureRequestTest', 5), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTest', 5), ('android.view.inputmethod.cts.SearchViewTest', 4), ('com.android.cts.userspacereboot.host.UserspaceRebootHostTest', 4), ('android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest', 3), ('android.quickaccesswallet.cts.QuickAccessWalletClientTest', 3), ('android.accessibilityservice.cts.AccessibilitySettingsTest', 3), ('com.android.cts.intent.sender.SuspendPackageTest', 3), ('android.provider.cts.settings.Settings_SystemTest', 2), ('android.app.cts.NotificationChannelTest', 2), ('android.hdmicec.cts.playback.HdmiCecDeviceOsdNameTest', 2), ('android.hardware.camera2.cts.StillCaptureTest', 2), ('android.provider.cts.settings.Settings_NameValueTableTest', 2), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1), ('android.service.settings.suggestions.SuggestionTest', 1), ('android.media.cts.PresetReverbTest', 1), ('com.android.cts.verifier.sensors.MotionIndicatorView', 1), ('android.angle.cts.CtsAngleRulesFileTest', 1), ('android.webkit.cts.ServiceWorkerClientTest', 1), ('android.host.accounts.AccountManagerHostSideTest', 1), ('com.android.cts.signedconfig.SignedConfigHostTest', 1), ('android.media.cts.EnvReverbTest', 1), ('android.appsecurity.cts.PackageVisibilityTest', 1), ('android.permission.cts.telephony.TelephonyManagerPermissionTest', 1), ('android.webkit.cts.PostMessageTest', 1), ('android.media.cts.MediaControllerTest', 1), ('android.server.wm.DreamManagerServiceTests', 1), ('android.accessibilityservice.cts.TouchExplorerTest', 1), ('com.android.cts.devicepolicy.MixedDeviceOwnerTest', 1), ('android.content.pm.cts.PackageManagerShellCommandTest', 1)]"	"[('getDevice', 38), ('setUp', 20), ('getInstrumentation', 14), ('tearDown', 13), ('getContext', 8), ('getUiAutomation', 8), ('getName', 7), ('getPackageManager', 7), ('getTargetContext', 5), ('getPackageName', 5), ('getDeviceOwner', 4), ('wakeupDeviceAndPressHome', 4), ('pressHome', 4), ('getContentResolver', 4), ('WindowManagerStateHelper', 3), ('requestFocus', 2), ('get', 2), ('getWho', 2), ('getPackage', 2), ('setOrientationNatural', 2), ('wakeUp', 2), ('pressMenu', 2), ('pressBack', 2), ('launchPrivacyAndCheckWorkPolicyInfo', 2), ('getComponentInfo', 2), ('getComponentName', 2), ('getClass', 2), ('getSimpleName', 2), ('resetStaticFields', 2), ('stopDream', 2), ('getPackageInstaller', 2), ('checkIncrementalDeliveryFeature', 2), ('UnlockScreenRule', 1), ('Intent', 1), ('flattenToString', 1), ('getCurrentUser', 1), ('waitForBroadcastIdle', 1), ('deleteConfig', 1), ('setUpPackage', 1), ('AccessibilityDumpOnFailureRule', 1), ('setup', 1), ('supportsDream', 1), ('reset', 1), ('AbandonAllPackageSessionsRule', 1), ('initParameters', 1), ('length', 1), ('ByteArrayOutputStream', 1), ('onBefore', 1), ('onAfter', 1)]"	""	""	"3.2.3.5/C-11-1"	"""C-11-1] MUST have an activity that handles the Settings.ACTION_IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS intent but MAY implement it as a no-op. If device implementations declare the support for camera via android.hardware.camera.any they: """	"03020305.671101"	"ACTION_IGNORE_BACKGROUND_DATA_RESTRICTIONS_SET TINGS Settings.ACTION android.hardware.camera.any"	""	""	""	"[('TINGS', 112), ('Settings.ACTION', 4)]"	""	"[('[com.google.android.cts.deviceowner.DeviceOwnerTest disableWorkPolicyInfoActivity None]', 2), ('[android.accessibilityservice.cts.AccessibilitySettingsTest testAccessibilitySettingsIntentHandled None]', 2), ('[com.android.cts.intent.sender.SuspendPackageTest testPackageSuspendedWithPackageManager None]', 2), ('[android.app.usage.cts.UsageStatsTest testNoAccessSilentlyFails None]', 2), ('[android.view.inputmethod.cts.SearchViewTest testTapThenSetQuery None]', 1), ('[android.view.inputmethod.cts.SearchViewTest testShowImeWithSearchViewFocus None]', 1), ('[android.view.inputmethod.cts.SearchViewTest testShowImeWhenSearchViewFocusInListView None]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testSwitchImeInstant None]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testUninstallCurrentImeInstant None]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testImeVisibilityAfterImeSwitchingInstant None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testSettingsBinderParcel None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testBlackLevelLock None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testLensShadingMap None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest adoptShellPermissionIdentity None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAnalogFrontendSettings None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtsc3FrontendSettings None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtscFrontendSettings None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testDvbcFrontendSettings None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testDvbsFrontendSettings None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testDvbtFrontendSettings None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testIsdbs3FrontendSettings None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testIsdbsFrontendSettings None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testIsdbtFrontendSettings None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testFrontendInfo None]', 1), ('[android.media.cts.PresetReverbTest test1_1Properties None]', 1), ('[android.provider.cts.settings.Settings_SystemTest testSystemSettings None]', 1), ('[com.google.android.cts.deviceowner.DeviceOwnerTest testDeviceOwnerWithInfo None]', 1), ('[com.google.android.cts.deviceowner.DeviceOwnerTest testDeviceOwnerWithoutInfo None]', 1), ('[com.google.android.cts.deviceowner.DeviceOwnerTest testNonDeviceOwnerWithInfo None]', 1), ('[com.google.android.cts.deviceowner.DeviceOwnerTest testNonDeviceOwnerWithoutInfo None]', 1), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 1), ('[android.quickaccesswallet.cts.QuickAccessWalletClientTest testIsWalletFeatureAvailableWhenDeviceLocked_checksSecureSettings None]', 1), ('[android.quickaccesswallet.cts.QuickAccessWalletClientTest testCreateWalletSettingsIntent_usesSettingsActionToFindAppropriateActivity None]', 1), ('[android.webkit.cts.WebViewTest WebViewTest None]', 1), ('[android.webkit.cts.WebViewTest testStopLoading None]', 1), ('[android.webkit.cts.WebViewTest testAddJavascriptInterface None]', 1), ('[android.webkit.cts.WebViewTest testAddJavascriptInterfaceNullObject None]', 1), ('[android.webkit.cts.WebViewTest testRemoveJavascriptInterface None]', 1), ('[android.webkit.cts.WebViewTest testUseRemovedJavascriptInterface None]', 1), ('[android.webkit.cts.WebViewTest testAddJavascriptInterfaceExceptions None]', 1), ('[android.webkit.cts.WebViewTest testJavascriptInterfaceCustomPropertiesClearedOnReload None]', 1), ('[android.webkit.cts.WebViewTest testJavascriptInterfaceForClientPopup None]', 1), ('[android.webkit.cts.WebViewTest testLoadData None]', 1), ('[android.webkit.cts.WebViewTest testLoadDataWithBaseUrl_javascriptCanAccessOrigin None]', 1), ('[android.webkit.cts.WebViewTest testRequestImageRef None]', 1), ('[android.webkit.cts.WebViewTest testSetDownloadListener None]', 1), ('[android.webkit.cts.WebViewTest testSetNetworkAvailable None]', 1), ('[android.webkit.cts.WebViewTest testPauseResumeTimers None]', 1), ('[android.webkit.cts.WebViewTest testAndroidAssetQueryParam None]', 1), ('[android.webkit.cts.WebViewTest testAndroidAssetAnchor None]', 1), ('[android.webkit.cts.WebViewTest testEvaluateJavascript None]', 1), ('[android.webkit.cts.ServiceWorkerClientTest registrationSuccess None]', 1), ('[com.android.cts.signedconfig.SignedConfigHostTest uninstallTestApps None]', 1), ('[android.media.cts.EnvReverbTest test1_5Properties None]', 1), ('[android.app.cts.NotificationChannelTest testConstructor None]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testVoiceMailNumber None]', 1), ('[android.hdmicec.cts.playback.HdmiCecDeviceOsdNameTest cect_11_2_11_1a_GiveOsdNameTest None]', 1), ('[android.hdmicec.cts.playback.HdmiCecDeviceOsdNameTest cect_11_2_11_1b_UpdateAndGiveOsdNameTest None]', 1), ('[android.angle.cts.CtsAngleDeveloperOptionHostTest testEnableAngleForAll None]', 1), ('[android.angle.cts.CtsAngleDeveloperOptionHostTest testSettingsLengthMismatch None]', 1), ('[android.angle.cts.CtsAngleDeveloperOptionHostTest testUpdateDriverValues None]', 1), ('[android.angle.cts.CtsAngleDeveloperOptionHostTest testMultipleUpdateDriverValues None]', 1), ('[android.angle.cts.CtsAngleDeveloperOptionHostTest testDefaultNotInSettings None]', 1), ('[android.angle.cts.CtsAngleDeveloperOptionHostTest testUninstalledPkgsNotInSettings None]', 1), ('[android.angle.cts.CtsAngleDeveloperOptionHostTest testMultipleDevOptionsAngleDefault None]', 1), ('[android.angle.cts.CtsAngleDeveloperOptionHostTest testMultipleDevOptionsAngleNativeUninstall None]', 1), ('[android.angle.cts.CtsAngleDeveloperOptionHostTest testAngleInUseDialogBoxWithAngle None]', 1), ('[android.angle.cts.CtsAngleDeveloperOptionHostTest testAngleInUseDialogBoxWithNative None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testStillPreviewCombination None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths None]', 1), ('[com.android.cts.intent.sender.SuspendPackageTest finish None]', 1), ('[android.webkit.cts.PostMessageTest PostMessageTest None]', 1), ('[android.media.cts.MediaControllerTest testTransportControlsAndMediaSessionCallback None]', 1), ('[android.app.usage.cts.UsageStatsTest isAppStandbyEnabled None]', 1), ('[android.app.usage.cts.UsageStatsTest testUserForceIntoRestricted None]', 1), ('[android.app.usage.cts.UsageStatsTest testUserForceIntoRestricted_BucketDisabled None]', 1), ('[android.app.usage.cts.UsageStatsTest testUserLaunchRemovesFromRestricted None]', 1), ('[android.app.usage.cts.UsageStatsTest testObserveUsagePermissionForRegisterObserver None]', 1), ('[android.server.wm.DreamManagerServiceTests getIsDreaming None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testAlwaysOnVpnUnsupportedPackageReplaced None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testSetSystemSetting None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testLockTaskAfterReboot_tryOpeningSettings None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testProfileOwnerCanGetDeviceIdentifiers None]', 1), ('[android.accessibilityservice.cts.TouchExplorerTest EventCapturingClickListener None]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testDelegatedCertInstallerDeviceIdAttestation None]', 1), ('[android.provider.cts.settings.Settings_NameValueTableTest AdoptShellPermissionsRule None]', 1), ('[android.provider.cts.settings.Settings_NameValueTableTest testPutString None]', 1), ('[android.webkit.cts.WebViewClientTest WebViewClientTest None]', 1), ('[android.webkit.cts.WebViewClientTest testShouldOverrideUrlLoading None]', 1), ('[android.webkit.cts.WebViewClientTest testShouldOverrideUrlLoadingOnCreateWindow None]', 1), ('[android.webkit.cts.WebViewClientTest testOnFormResubmission None]', 1), ('[android.webkit.cts.WebViewClientTest testShouldInterceptRequestResponse None]', 1), ('[android.webkit.cts.WebViewClientTest testOnSafeBrowsingHitBackToSafety None]', 1), ('[com.android.cts.userspacereboot.host.UserspaceRebootHostTest testUserspaceRebootWithCheckpoint None]', 1), ('[com.android.cts.userspacereboot.host.UserspaceRebootHostTest testUserspaceReboot_verifyCeStorageIsUnlocked None]', 1), ('[com.android.cts.userspacereboot.host.UserspaceRebootHostTest testUserspaceRebootWithCheckpoint_verifyCeStorageIsUnlocked None]', 1), ('[com.android.cts.userspacereboot.host.UserspaceRebootHostTest testUserspaceRebootWatchdogTriggers None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewTest.java', 18), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 11), ('/home/gpoor/cts-12-source/cts/hostsidetests/angle/src/android/angle/cts/CtsAngleDeveloperOptionHostTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 7), ('/home/gpoor/cts-source/cts/hostsidetests/settings/app/DeviceOwnerApp/src/com/google/android/cts/deviceowner/DeviceOwnerTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewClientTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 5), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/SearchViewTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/userspacereboot/src/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/inputmethodservice/hostside/src/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/quickaccesswallet/src/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilitySettingsTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/SuspendPackageTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/settings/Settings_SystemTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationChannelTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/playback/HdmiCecDeviceOsdNameTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/settings/Settings_NameValueTableTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/suggestions/src/android/service/settings/suggestions/SuggestionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresetReverbTest.java', 1), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MotionIndicatorView.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/angle/src/android/angle/cts/CtsAngleRulesFileTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/ServiceWorkerClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/AccountManagerHostSideTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/signedconfig/hostside/src/com/android/cts/signedconfig/SignedConfigHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/EnvReverbTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PackageVisibilityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/telephony/src/android/permission/cts/telephony/TelephonyManagerPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/PostMessageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaControllerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DreamManagerServiceTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/TouchExplorerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandTest.java', 1)]"	"[('(4,TINGS,/android/view/inputmethod/cts/SearchViewTest.java)', 1), ('(1,TINGS,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(1,TINGS,/android/service/settings/suggestions/SuggestionTest.java)', 1), ('(4,TINGS,/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java)', 1), ('(38,TINGS,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(234,TINGS,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(10,TINGS,/android/media/cts/PresetReverbTest.java)', 1), ('(9,TINGS,/android/provider/cts/settings/Settings_SystemTest.java)', 1), ('(10,TINGS,/com/google/android/cts/deviceowner/DeviceOwnerTest.java)', 1), ('(1,Settings.ACTION,/com/google/android/cts/deviceowner/DeviceOwnerTest.java)', 1), ('(1,TINGS,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(7,TINGS,/android/angle/cts/CtsAngleRulesFileTest.java)', 1), ('(21,TINGS,/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java)', 1), ('(35,TINGS,/android/webkit/cts/WebViewTest.java)', 1), ('(1,TINGS,/android/webkit/cts/ServiceWorkerClientTest.java)', 1), ('(3,TINGS,/android/host/accounts/AccountManagerHostSideTest.java)', 1), ('(1,TINGS,/com/android/cts/signedconfig/SignedConfigHostTest.java)', 1), ('(11,TINGS,/android/media/cts/EnvReverbTest.java)', 1), ('(2,TINGS,/android/app/cts/NotificationChannelTest.java)', 1), ('(3,TINGS,/android/appsecurity/cts/PackageVisibilityTest.java)', 1), ('(1,TINGS,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(4,TINGS,/android/hdmicec/cts/playback/HdmiCecDeviceOsdNameTest.java)', 1), ('(10,TINGS,/android/accessibilityservice/cts/AccessibilitySettingsTest.java)', 1), ('(2,Settings.ACTION,/android/accessibilityservice/cts/AccessibilitySettingsTest.java)', 1), ('(43,TINGS,/android/angle/cts/CtsAngleDeveloperOptionHostTest.java)', 1), ('(9,TINGS,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(14,TINGS,/com/android/cts/intent/sender/SuspendPackageTest.java)', 1), ('(1,Settings.ACTION,/com/android/cts/intent/sender/SuspendPackageTest.java)', 1), ('(1,TINGS,/android/webkit/cts/PostMessageTest.java)', 1), ('(2,TINGS,/android/media/cts/MediaControllerTest.java)', 1), ('(15,TINGS,/android/app/usage/cts/UsageStatsTest.java)', 1), ('(1,Settings.ACTION,/android/app/usage/cts/UsageStatsTest.java)', 1), ('(4,TINGS,/android/server/wm/DreamManagerServiceTests.java)', 1), ('(5,TINGS,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(4,TINGS,/android/accessibilityservice/cts/TouchExplorerTest.java)', 1), ('(1,TINGS,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(6,TINGS,/android/provider/cts/settings/Settings_NameValueTableTest.java)', 1), ('(3,TINGS,/android/content/pm/cts/PackageManagerShellCommandTest.java)', 1), ('(12,TINGS,/android/webkit/cts/WebViewClientTest.java)', 1), ('(7,TINGS,/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java)', 1)]"	"[('([1:/android/app/usage/cts/UsageStatsTest.java]:[TINGS]:[1]:method_text:[t apps    @AppModeFull(reason = ""Test APK Activity not found when installed as an instant app"")   ])', 3), ('([1:/android/view/inputmethod/cts/SearchViewTest.java]:[TINGS]:[1]:method_text:[            }            return layout;        });        return searchViewRef.get();    }   ])', 1), ('([1:/android/view/inputmethod/cts/SearchViewTest.java]:[TINGS]:[1]:method_text:[uals(event.getEventName()), TIMEOUT);            expectImeInvisible(TIMEOUT);        }    }   ])', 1), ('([1:/android/view/inputmethod/cts/SearchViewTest.java]:[TINGS]:[1]:method_text:[       CHECK_EXIT_EVENT_ONLY, TIMEOUT);            expectImeVisible(TIMEOUT);        }    }   ])', 1), ('([1:/android/view/inputmethod/cts/SearchViewTest.java]:[TINGS]:[1]:method_text:[w getView(int i, View view, ViewGroup viewGroup) {            return mSearchView;        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[TINGS]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([1:/android/service/settings/suggestions/SuggestionTest.java]:[TINGS]:[1]:method_text:[   mIcon = Icon.createWithBitmap(Bitmap.createBitmap(100, 100, Bitmap.Config.ARGB_8888));    }   ])', 1), ('([1:/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java]:[TINGS]:[1]:method_text:[st uninstalling the currently selected IME for full (non-instant) apps.     */    @AppModeFull   ])', 1), ('([1:/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java]:[TINGS]:[1]:method_text:[ Test disabling the currently selected IME for full (non-instant) apps.     */    @AppModeFull   ])', 1), ('([2:/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java]:[TINGS]:[2]:method_text:[           imeId + "" should be "" + (shouldBeEnabled ? ""enabled."" : ""available.""));        }    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[TINGS]:[1]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([7:/android/hardware/camera2/cts/CaptureRequestTest.java]:[TINGS]:[7]:method_text:[ain locked after exposure     * value changes (when requests have lock ON).     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[TINGS]:[2]:method_text:[ack level should be     *   close enough to the optical black level values.     * </p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[TINGS]:[3]:method_text:[anti-banding modes, check if the exposure time adjustment is     * correct.     * </p>     */   ])', 1), ('([25:/android/hardware/camera2/cts/CaptureRequestTest.java]:[TINGS]:[25]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([11:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[11]:method_text:[       if (mTuner != null) {          mTuner.close();          mTuner = null;        }    }   ])', 1), ('([13:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[13]:method_text:[));        assertEquals(AnalogFrontendSettings.SIF_BG_NICAM, settings.getSifStandard());    }   ])', 1), ('([38:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[38]:method_text:[tCodeRate());        assertEquals(Atsc3FrontendSettings.FEC_LDPC_16K, plps[1].getFec());    }   ])', 1), ('([10:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[10]:method_text:[        assertEquals(AtscFrontendSettings.MODULATION_MOD_8VSB, settings.getModulation());    }   ])', 1), ('([23:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[23]:method_text:[        DvbcFrontendSettings.SPECTRAL_INVERSION_NORMAL, settings.getSpectralInversion());    }   ])', 1), ('([27:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[27]:method_text:[ls(false, cr.isShortFrameEnabled());        assertEquals(55, cr.getBitsPer1000Symbol());    }   ])', 1), ('([38:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[38]:method_text:[ertEquals(333, settings.getPlpId());        assertEquals(777, settings.getPlpGroupId());    }   ])', 1), ('([21:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[21]:method_text:[ate());        assertEquals(Isdbs3FrontendSettings.ROLLOFF_0_03, settings.getRolloff());    }   ])', 1), ('([21:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[21]:method_text:[Rate());        assertEquals(IsdbsFrontendSettings.ROLLOFF_0_35, settings.getRolloff());    }   ])', 1), ('([23:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[23]:method_text:[1_4, settings.getGuardInterval());        assertEquals(10, settings.getServiceAreaId());    }   ])', 1), ('([9:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[9]:method_text:[{        return mContext.getPackageManager().hasSystemFeature(""android.hardware.tv.tuner"");    }}])', 1), ('([10:/android/media/cts/PresetReverbTest.java]:[TINGS]:[10]:method_text:[------------------------    //Test case 2.0: test setEnabled() and getEnabled() in valid state   ])', 1), ('([7:/android/provider/cts/settings/Settings_SystemTest.java]:[TINGS]:[7]:method_text:[ommand(                ""appops set "" + packageName + "" android:write_settings default"");    }   ])', 1), ('([2:/android/provider/cts/settings/Settings_SystemTest.java]:[TINGS]:[2]:method_text:[fg.fontScale = store;            assertTrue(System.putConfiguration(cr, cfg));        }    }   ])', 1), ('([6:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[TINGS]:[6]:method_text:[evice owner and has work policy info, then we should have a Privacy     * entry for it.     */   ])', 1), (""([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[TINGS]:[1]:method_text:[but doesn't have work policy info, then we shouldn't     * have a Privacy entry for it.     */   ])"", 1), ('([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[TINGS]:[1]:method_text:[ctive device owner, then we should not have a Privacy entry for work     * policy info.     */   ])', 1), ('([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[TINGS]:[1]:method_text:[e work policy info, then we should     * not have a Privacy entry for work policy info.     */   ])', 1), ('([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[TINGS]:[1]:method_text:[ettings entry shouldn\'t be present"",                launchPrivacyAndCheckWorkPolicyInfo());    }}])', 1), ('([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[Settings.ACTION]:[1]:method_text:[evice owner and has work policy info, then we should have a Privacy     * entry for it.     */   ])', 1), ('([1:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[TINGS]:[1]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([7:/android/angle/cts/CtsAngleRulesFileTest.java]:[TINGS]:[7]:method_text:[sFile);    }    /**     * Test ANGLE is not loaded when an empty rules file is used.     */   ])', 1), ('([6:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[TINGS]:[6]:method_text:[MPONENT_ENABLED_STATE_DEFAULT);        TestQuickAccessWalletService.resetStaticFields();    }   ])', 1), ('([6:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[TINGS]:[6]:method_text:[e            SettingsUtils.syncSet(mContext, SETTING_KEY, showCardsAndPasses);        }    }   ])', 1), ('([9:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[TINGS]:[9]:method_text:[TimeUnit unit) throws InterruptedException {            mLatch.await(time, unit);        }    }}])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[TINGS]:[1]:method_text:[      mWebServer = null;        StrictMode.setThreadPolicy(oldPolicy);    }    @UiThreadTest   ])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[TINGS]:[1]:method_text:[ait(3000);        }        assertFalse(jsInterface.getPageLoaded());    }    @UiThreadTest   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[TINGS]:[2]:method_text:[defined\\"""",                mOnUiThread.evaluateJavascriptSync(""typeof dummy.getClass""));    }   ])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[TINGS]:[1]:method_text:[              ""text/html"", null);        assertEquals(""object"", mOnUiThread.getTitle());    }   ])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[TINGS]:[1]:method_text:[           ""text/html"", null);        assertEquals(""undefined"", mOnUiThread.getTitle());    }   ])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[TINGS]:[1]:method_text:[     ""text/html"", null);        assertEquals(""removedObject"", resultObject.getResult());    }   ])', 1), ('([5:/android/webkit/cts/WebViewTest.java]:[TINGS]:[5]:method_text:[l\'; } catch (exception) { \'pass\'; } ""));        assertTrue(mJsInterfaceWasCalled.get());    }   ])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[TINGS]:[1]:method_text:[ assertEquals(""false"", mOnUiThread.evaluateJavascriptSync(""\'custom_property\' in dummy""));    }   ])', 1), ('([4:/android/webkit/cts/WebViewTest.java]:[TINGS]:[4]:method_text:[lCount;                }            }.run();        }        return pictureRef.get();    }   ])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[TINGS]:[1]:method_text:[      + ""cross-site frame\'s href."",                secondTitle, mOnUiThread.getTitle());    }   ])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[TINGS]:[1]:method_text:[text/html"", ""UTF-8"", null);        assertEquals(crossOriginUrl, mOnUiThread.getTitle());    }   ])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[TINGS]:[1]:method_text:[   }        }.run();        assertEquals(imgUrl, handler.mResultUrl);    }    @UiThreadTest   ])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[TINGS]:[1]:method_text:[ener.contentLength);        assertEquals(mimeType, listener.mimeType);    }    @UiThreadTest   ])', 1), ('([4:/android/webkit/cts/WebViewTest.java]:[TINGS]:[4]:method_text:[           return mOnUiThread.getTitle().equals(""ONLINE"");            }        }.run();    }   ])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[TINGS]:[1]:method_text:[rUpdate());    }    // verify query parameters can be passed correctly to android asset files   ])', 1), ('([4:/android/webkit/cts/WebViewTest.java]:[TINGS]:[4]:method_text:[S"", mOnUiThread.getTitle());    }    // verify anchors work correctly for android asset files   ])', 1), ('([4:/android/webkit/cts/WebViewTest.java]:[TINGS]:[4]:method_text:[UrlAndWaitForCompletion(fileUrl);        assertEquals(""anchor"", mOnUiThread.getTitle());    }   ])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[TINGS]:[1]:method_text:[      }.run();    }    // Verify Print feature can create a PDF file with a correct preamble.   ])', 1), ('([1:/android/webkit/cts/ServiceWorkerClientTest.java]:[TINGS]:[1]:method_text:[bview-cts.     */    // Test correct invocation of shouldInterceptRequest for Service Workers.   ])', 1), ('([3:/android/host/accounts/AccountManagerHostSideTest.java]:[TINGS]:[3]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([1:/com/android/cts/signedconfig/SignedConfigHostTest.java]:[TINGS]:[1]:method_text:[  assertThat(getDevice().installPackage(getTestApk(apkName), false, extraArgs)).isNull();    }   ])', 1), ('([11:/android/media/cts/EnvReverbTest.java]:[TINGS]:[11]:method_text:[------------------------    //Test case 2.0: test setEnabled() and getEnabled() in valid state   ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[TINGS]:[1]:method_text:[ase {    @Override    protected void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[TINGS]:[1]:method_text:[ll(channel.getParentChannelId());        assertFalse(channel.isImportantConversation());    }   ])', 1), ('([3:/android/appsecurity/cts/PackageVisibilityTest.java]:[TINGS]:[3]:method_text:[mand(""settings put global package_verifier_enable ""                + mOldVerifierValue);    }   ])', 1), ('([1:/android/permission/cts/telephony/TelephonyManagerPermissionTest.java]:[TINGS]:[1]:method_text:[id.Manifest.permission#MODIFY_PHONE_STATE} for     * {@link AudioManager#MODE_IN_CALL}.     */   ])', 1), ('([1:/android/hdmicec/cts/playback/HdmiCecDeviceOsdNameTest.java]:[TINGS]:[1]:method_text:[GIVE_OSD_NAME> with a <SET_OSD_NAME> that has the updated device name in the parameters.     */   ])', 1), ('([3:/android/hdmicec/cts/playback/HdmiCecDeviceOsdNameTest.java]:[TINGS]:[3]:method_text:[Tests that the device does not respond to a <GIVE_OSD_NAME> from an unregistered device.     */   ])', 1), ('([3:/android/accessibilityservice/cts/AccessibilitySettingsTest.java]:[TINGS]:[3]:method_text:[ailureRule =            new AccessibilityDumpOnFailureRule();    @MediumTest    @AppModeFull   ])', 1), ('([7:/android/accessibilityservice/cts/AccessibilitySettingsTest.java]:[TINGS]:[7]:method_text:[ACTION_ACCESSIBILITY_SETTINGS"";        assertTrue(message, !resolvedActivities.isEmpty());    }}])', 1), ('([2:/android/accessibilityservice/cts/AccessibilitySettingsTest.java]:[Settings.ACTION]:[2]:method_text:[ACTION_ACCESSIBILITY_SETTINGS"";        assertTrue(message, !resolvedActivities.isEmpty());    }}])', 1), (""([9:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[TINGS]:[9]:method_text:[**     * Test ANGLE is loaded when the 'Use ANGLE for all' Developer Option is enabled.     */   ])"", 1), (""([1:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[TINGS]:[1]:method_text:[    /**     * Test ANGLE is not loaded when the Developer Option is set to 'default'.     */   ])"", 1), ('([1:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[TINGS]:[1]:method_text:[D);    }    /**     * Test ANGLE is not loaded when the Developer Option is invalid.     */   ])', 1), ('([1:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[TINGS]:[1]:method_text:[n have different developer option values.     * Primary: ANGLE     * Secondary: Native     */   ])', 1), ('([4:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[TINGS]:[4]:method_text:[keep the value in the settings when the ANGLE     * activity runs and cleans things up.     */   ])', 1), ('([7:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[TINGS]:[7]:method_text:[evOptionValue);    }    /**     * Test uninstalled PKGs have their settings removed.     */   ])', 1), (""([7:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[TINGS]:[7]:method_text:[ary: Default     *     * Verify the PKG set to 'default' is removed from the settings.     */   ])"", 1), ('([6:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[TINGS]:[6]:method_text:[econdary: Default     *     * Verify the uninstalled PKG is removed from the settings.     */   ])', 1), (""([5:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[TINGS]:[5]:method_text:[ attempting to     * show it doesn't cause a crash or prevent ANGLE from being enabled.     */   ])"", 1), (""([1:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[TINGS]:[1]:method_text:[ shows up, just that enabling it and attempting to     * show it doesn't cause a crash.     */   ])"", 1), ('([1:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[TINGS]:[1]:method_text:[(getDevice(), SETTINGS_GLOBAL_ANGLE_IN_USE_DIALOG_BOX, ""1"");        testUseNativeDriver();    }}])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[TINGS]:[2]:method_text:[ed when AE     * compensation settings is changed, even when AE lock is ON.     * </p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/StillCaptureTest.java]:[TINGS]:[7]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([2:/com/android/cts/intent/sender/SuspendPackageTest.java]:[TINGS]:[2]:method_text:[ void tearDown() throws Exception {        mActivity.finish();        super.tearDown();    }   ])', 1), ('([12:/com/android/cts/intent/sender/SuspendPackageTest.java]:[TINGS]:[12]:method_text:[s(settingsPackageName + "":id/admin_support_icon"")                .pkg(settingsPackageName);    }}])', 1), ('([1:/com/android/cts/intent/sender/SuspendPackageTest.java]:[Settings.ACTION]:[1]:method_text:[s(settingsPackageName + "":id/admin_support_icon"")                .pkg(settingsPackageName);    }}])', 1), ('([1:/android/webkit/cts/PostMessageTest.java]:[TINGS]:[1]:method_text:[ng-webview-cts.     */    // Post a string message to main frame and make sure it is received.   ])', 1), ('([2:/android/media/cts/MediaControllerTest.java]:[TINGS]:[2]:method_text:[                mSpeed = speed;                mWaitLock.notify();            }        }    }}])', 1), ('([9:/android/app/usage/cts/UsageStatsTest.java]:[TINGS]:[9]:method_text:[ity(clazz);        }    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([2:/android/app/usage/cts/UsageStatsTest.java]:[TINGS]:[2]:method_text:[   Thread.sleep(500);    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([1:/android/app/usage/cts/UsageStatsTest.java]:[TINGS]:[1]:method_text:[n."");        } catch (SecurityException e) {            // Exception expected        }    }   ])', 1), ('([1:/android/app/usage/cts/UsageStatsTest.java]:[Settings.ACTION]:[1]:method_text:[   Thread.sleep(500);    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([4:/android/server/wm/DreamManagerServiceTests.java]:[TINGS]:[4]:method_text:[ld be the top resumed activity"");        mWmState.assertVisibility(TEST_ACTIVITY, true);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[TINGS]:[1]:method_text:[s in the primary user when the policy     * is set on the profile owner.     */    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[TINGS]:[1]:method_text:[   super.testAlwaysOnVpnUnsupportedPackageReplaced();    }    @Override    @LockSettingsTest   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[TINGS]:[1]:method_text:[ // Managed profile owner cannot set currently whitelisted system settings.    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[TINGS]:[1]:method_text:[ngSettings() {        // Managed profiles are not allowed to use lock task    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[TINGS]:[1]:method_text:[wnerCanGetDeviceIdentifiersWithPermission"", mUserId);    }    @Override    @LockSettingsTest   ])', 1), ('([4:/android/accessibilityservice/cts/TouchExplorerTest.java]:[TINGS]:[4]:method_text:[           .run();    }    /** Test a slow swipe which should initiate touch exploration. */   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[TINGS]:[1]:method_text:[eKeyPairWithDeviceIdAttestationExpectingSuccess"", mUserId));    }    @FlakyTest    @Override   ])', 1), ('([4:/android/provider/cts/settings/Settings_NameValueTableTest.java]:[TINGS]:[4]:method_text:[    @Rule    public AdoptShellPermissionsRule shellPermRule = new AdoptShellPermissionsRule();   ])', 1), ('([2:/android/provider/cts/settings/Settings_NameValueTableTest.java]:[TINGS]:[2]:method_text:[inally {            // TODO should clean up more better            c.close();        }    }   ])', 1), ('([3:/android/content/pm/cts/PackageManagerShellCommandTest.java]:[TINGS]:[3]:method_text:[Manager().hasSystemFeature(                PackageManager.FEATURE_INCREMENTAL_DELIVERY);    }   ])', 1), ('([1:/android/webkit/cts/WebViewClientTest.java]:[TINGS]:[1]:method_text:[difying-webview-cts.     */    // Verify that the shouldoverrideurlloading is false by default   ])', 1), ('([1:/android/webkit/cts/WebViewClientTest.java]:[TINGS]:[1]:method_text:[oading called on webview called via onCreateWindow    // TODO(sgurun) upstream this test to Aw.   ])', 1), ('([4:/android/webkit/cts/WebViewClientTest.java]:[TINGS]:[4]:method_text:["" +                        ""console.log(\'element with id ["" + linkId + ""] clicked\');""));    }   ])', 1), ('([4:/android/webkit/cts/WebViewClientTest.java]:[TINGS]:[4]:method_text:[       return webViewClient.hasOnFormResubmissionCalled();            }        }.run();    }   ])', 1), ('([1:/android/webkit/cts/WebViewClientTest.java]:[TINGS]:[1]:method_text:[ver.shutdown();        }    }    // Verify that OnRenderProcessGone returns false by default   ])', 1), ('([1:/android/webkit/cts/WebViewClientTest.java]:[TINGS]:[1]:method_text:[ould be reflected in that test as necessary. See     * http://go/modifying-webview-cts.     */   ])', 1), ('([1:/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java]:[TINGS]:[1]:method_text:[cceed();    }    /**     * Tests that CE storage is unlocked after userspace reboot.     */   ])', 1), ('([2:/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java]:[TINGS]:[2]:method_text:[*     * Tests that CE storage is unlocked after userspace reboot with fs-checkpointing.     */   ])', 1), ('([3:/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java]:[TINGS]:[3]:method_text:[ hard reboot is triggered when a native process fails to stop in a     * given timeout.     */   ])', 1), ('([1:/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java]:[TINGS]:[1]:method_text:[String ret = getDevice().getProperty(name);        return ret == null ? defaultValue : ret;    }}])', 1)]"	""	""	""	""	""
"57:278237) 3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-7-1"	""	"[('android.systemintents.cts.TestSystemIntents', 2)]"	"[('create', 2), ('setUp', 2), ('getInstrumentation', 2), ('getContext', 2), ('getPackageManager', 2)]"	""	""	"3.2.3.5/C-7-1"	"""C-7-1] MUST provide a user-accessible mechanism to add and configure third-party input methods in response to the android.settings.INPUT_METHOD_SETTINGS intent. If device implementations support third-party accessibility services, they: """	"03020305.670701"	"android.settings.INPUT INPUT_METHOD_SETTINGS"	""	""	""	"[('INPUT_METHOD_SETTINGS', 2)]"	""	""	""	"[('/home/gpoor/cts-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 1)]"	"[('(1,INPUT_METHOD_SETTINGS,/android/systemintents/cts/TestSystemIntents.java)', 2)]"	"[('([1:/android/systemintents/cts/TestSystemIntents.java]:[INPUT_METHOD_SETTINGS]:[1]:method_text:[etInstrumentation().getContext();        mPackageManager = mContext.getPackageManager();    }   ])', 2)]"	""	""	""	""	""
"57:278237) 3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-13-2"	""	"[('com.android.cts.managedprofile.PreManagedProfileTest', 2), ('com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest', 2), ('com.android.cts.devicepolicy.singleadmin.ProvisioningSingleAdminTest', 2), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 2), ('com.android.cts.managedprofile.ProvisioningTest', 2), ('com.android.cts.comp.provisioning.ManagedProfileProvisioningTest', 2), ('android.devicepolicy.cts.DevicePolicyManagerTest', 1), ('com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest', 1), ('com.android.cts.deviceowner.PreDeviceOwnerTest', 1), ('com.android.cts.comp.ManagementTest', 1), ('com.android.cts.profileowner.ManagementTest', 1)]"	"[('setUp', 3), ('getName', 2), ('getPackage', 1), ('getTargetContext', 1), ('getSimpleName', 1)]"	""	""	"3.2.3.5/C-13-2"	"""C-13-2] MUST honor the intents android.app.action.PROVISION_MANAGED_PROFILE, android.app.action.SET_NEW_PARENT_PROFILE_PASSWORD, android.app.action.SET_NEW_PASSWORD &amp; android.app.action.START_ENCRYPTION and have an activity to provide fulfillment for these intents as described in SDK here. If device implementations declare the android.software.autofill feature flag, they: """	"03020305.671302"	"START_ENCRYPTION android.app.action.START android.app.action.SET android.app.action.PROVISION android.software.autofill PROVISION_MANAGED_PROFILE SET_NEW_PASSWORD SET_NEW_PARENT_PROFILE_PASSWORD"	""	""	""	"[('PROVISION_MANAGED_PROFILE', 15), ('android.software.autofill', 2)]"	""	"[('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testCannotAddManagedProfileViaManagedProvisioning None]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDisallowAutofill_allowed None]', 2), ('[com.android.cts.managedprofile.PreManagedProfileTest testIsProvisioningAllowedTrue None]', 1), ('[com.android.cts.managedprofile.PreManagedProfileTest testIsProvisioningAllowedFalse None]', 1), ('[android.devicepolicy.cts.DevicePolicyManagerTest newlyProvisionedManagedProfile_removesNonRequiredAppsFromProfile None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.singleadmin.ProvisioningSingleAdminTest testManagedProfileProvisioning None]', 1), ('[com.android.cts.deviceowner.PreDeviceOwnerTest testIsProvisioningNotAllowedForManagedProfileAction None]', 1), ('[com.android.cts.comp.ManagementTest testProvisionManagedProfileNotAllowed None]', 1), ('[com.android.cts.profileowner.ManagementTest testProvisionManagedProfileNotAllowed None]', 1), ('[com.android.cts.managedprofile.ProvisioningTest PersistableBundle None]', 1), ('[com.android.cts.managedprofile.ProvisioningTest testAccountNotExist None]', 1), ('[com.android.cts.comp.provisioning.ManagedProfileProvisioningTest testProvisioningCorpOwnedManagedProfile None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/PreManagedProfileTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/SingleAdminApp/src/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ProvisioningTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/ManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/ManagementTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 1)]"	"[('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java)', 2), ('(1,android.software.autofill,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 2), ('(2,PROVISION_MANAGED_PROFILE,/com/android/cts/managedprofile/PreManagedProfileTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/android/devicepolicy/cts/DevicePolicyManagerTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java)', 1), ('(2,PROVISION_MANAGED_PROFILE,/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/deviceowner/PreDeviceOwnerTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/comp/ManagementTest.java)', 1), ('(1,PROVISION_MANAGED_PROFILE,/com/android/cts/profileowner/ManagementTest.java)', 1), ('(2,PROVISION_MANAGED_PROFILE,/com/android/cts/managedprofile/ProvisioningTest.java)', 1), ('(2,PROVISION_MANAGED_PROFILE,/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java)', 1)]"	"[(""([1:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[se when called with     * ACTION_PROVISION_MANAGED_PROFILE when there's a device owner.     */   ])"", 2), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[android.software.autofill]:[1]:method_text:[eTestMethod("".AutofillRestrictionsTest"",                ""testDisallowAutofill_allowed"");    }   ])', 2), ('([1:/com/android/cts/managedprofile/PreManagedProfileTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[           .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));    }   ])', 1), ('([1:/com/android/cts/managedprofile/PreManagedProfileTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[             .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));    }}])', 1), ('([1:/android/devicepolicy/cts/DevicePolicyManagerTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[e(PackageManager.FEATURE_DEVICE_ADMIN)    @RequireFeature(PackageManager.FEATURE_MANAGED_USERS)   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[().uninstallPackage(SINGLE_ADMIN_PKG);        }        super.tearDown();    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[    public void setUp() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([1:/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[TestManager(mContext);        assertTrue(provisioningMgr.startProvisioningAndWait(intent));    }}])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[             .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));    }}])', 1), ('([1:/com/android/cts/comp/ManagementTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[visioningAllowed(                DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));    }   ])', 1), ('([1:/com/android/cts/profileowner/ManagementTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ProvisioningAllowed(                DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));    }}])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[.getTargetContext();        mDpm = mContext.getSystemService(DevicePolicyManager.class);    }   ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ext context) {        return context.getSharedPreferences(SHARED_PREFERENCE_FILE_NAME, 0);    }}])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[tends AndroidTestCase {    private static final String TAG = ""ManagedProfileProvisioningTest"";   ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ntent) {        return intent != null && intent.getExtras().containsKey(Intent.EXTRA_USER);    }}])', 1)]"	""	""	""	""	""
"57:278237) 3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-12-1"	""	"[('com.android.cts.managedprofile.DisallowSharingIntoProfileTest', 2), ('android.content.cts.AvailableIntentsTest', 1)]"	"[('setUp', 4), ('getInstrumentation', 2), ('getContext', 2)]"	""	""	"3.2.3.5/C-12-1"	"""C-12-1] MUST honor the android.media.action.STILL_IMAGE_CAMERA and android.media.action.STILL_IMAGE_CAMERA_SECURE intent and launch the camera in still image mode as described in the SDK."""	"03020305.671201"	"android.media.action.STILL STILL_IMAGE_CAMERA STILL_IMAGE_CAMERA_SECURE"	""	""	""	"[('STILL_IMAGE_CAMERA', 2), ('STILL_IMAGE_CAMERA_SECURE', 1)]"	""	"[('[android.content.cts.AvailableIntentsTest testCamera None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1)]"	"[('(2,STILL_IMAGE_CAMERA,/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java)', 1), ('(1,STILL_IMAGE_CAMERA_SECURE,/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java)', 1), ('(1,STILL_IMAGE_CAMERA,/android/content/cts/AvailableIntentsTest.java)', 1)]"	"[('([2:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[STILL_IMAGE_CAMERA]:[2]:method_text:[getSystemService(DevicePolicyManager.class);        assertNotNull(mDevicePolicyManager);    }   ])', 1), ('([1:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[STILL_IMAGE_CAMERA_SECURE]:[1]:method_text:[getSystemService(DevicePolicyManager.class);        assertNotNull(mDevicePolicyManager);    }   ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[STILL_IMAGE_CAMERA]:[1]:method_text:[it can more easily be suppressed while we     * fix targets that are out of compliance.     */   ])', 1)]"	""	""	""	""	""
"57:278237) 3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-15-1"	""	"[('android.content.cts.AvailableIntentsTest', 1)]"	""	""	""	"3.2.3.5/C-15-1"	"""C-15-1] MUST still have an activity that handles the android.settings.ACTION_USAGE_ACCESS_SETTINGS intent pattern but MUST implement it as a no-op, that is to have an equivalent behavior as when the user is declined for access. If device implementations surface links to the activities specified by AutofillService_passwordsActivity in Settings or links to user passwords through a similar mechanism, they: """	"03020305.671501"	"ACTION_USAGE_ACCESS_SETTINGS android.settings.ACTION"	""	""	""	"[('ACTION_USAGE_ACCESS_SETTINGS', 1)]"	""	"[('[android.content.cts.AvailableIntentsTest testUsageAccessSettings None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1)]"	"[('(1,ACTION_USAGE_ACCESS_SETTINGS,/android/content/cts/AvailableIntentsTest.java)', 1)]"	"[('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_USAGE_ACCESS_SETTINGS]:[1]:method_text:[         assertCanBeHandled(new Intent(Settings.ACTION_USAGE_ACCESS_SETTINGS));        }    }   ])', 1)]"	""	""	""	""	""
"57:278237) 3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-3-2"	""	"[('android.content.cts.AvailableIntentsTest', 2)]"	""	""	""	"3.2.3.5/C-3-2"	"""C-3-2] MUST honor android.nfc.cardemulation.action.ACTION_CHANGE_DEFAULT intent to show an activity which opens a dialog to ask the user to change the default card emulation service for a certain category as described in the SDK. If device implementations report android.hardware.nfc, they: """	"03020305.670302"	"ACTION_CHANGE_DEFAULT android.hardware.nfc android.nfc.cardemulation.action.ACTION"	""	""	""	"[('ACTION_CHANGE_DEFAULT', 2)]"	""	"[('[android.content.cts.AvailableIntentsTest testChangeDefaultSmsApplication None]', 1), ('[android.content.cts.AvailableIntentsTest testChangeDefaultDialer None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 2)]"	"[('(2,ACTION_CHANGE_DEFAULT,/android/content/cts/AvailableIntentsTest.java)', 1)]"	"[('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_CHANGE_DEFAULT]:[1]:method_text:[   assertCanBeHandled(new Intent(Telephony.Sms.Intents.ACTION_CHANGE_DEFAULT));        }    }   ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_CHANGE_DEFAULT]:[1]:method_text:[   assertCanBeHandled(new Intent(TelecomManager.ACTION_CHANGE_DEFAULT_DIALER));        }    }   ])', 1)]"	""	""	""	""	""
"57:278237) 3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-5-1"	""	"[('android.content.cts.AvailableIntentsTest', 1)]"	""	""	""	"3.2.3.5/C-5-1"	"""C-5-1] MUST honor the ‘android.bluetooth.adapter.action.REQUEST_ENABLE’ intent and show a system activity to allow the user to turn on Bluetooth. """	"03020305.670501"	"android.bluetooth.adapter.action.REQUEST REQUEST_ENABLE"	""	""	""	"[('REQUEST_ENABLE', 1)]"	""	"[('[android.content.cts.AvailableIntentsTest testRequestEnableContentCaptureIntent None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1)]"	"[('(1,REQUEST_ENABLE,/android/content/cts/AvailableIntentsTest.java)', 1)]"	"[('([1:/android/content/cts/AvailableIntentsTest.java]:[REQUEST_ENABLE]:[1]:method_text:[tent(Settings.ACTION_REQUEST_ENABLE_CONTENT_CAPTURE);        assertCanBeHandled(intent);    }   ])', 1)]"	""	""	""	""	""
"57:278237) 3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-8-1"	""	"[('android.accessibilityservice.cts.AccessibilitySettingsTest', 2), ('android.content.cts.AvailableIntentsTest', 2)]"	""	""	""	"3.2.3.5/C-8-1"	"""C-8-1] MUST honor the android.settings.ACCESSIBILITY_SETTINGS intent to provide a user-accessible mechanism to enable and disable the third-party accessibility services alongside the preloaded accessibility services. If device implementations include support for Wi-Fi Easy Connect and expose the functionality to third-party apps, they: """	"03020305.670801"	"ACCESSIBILITY_SETTINGS android.settings.ACCESSIBILITY"	""	""	""	"[('ACCESSIBILITY_SETTINGS', 4)]"	""	"[('[android.accessibilityservice.cts.AccessibilitySettingsTest testAccessibilitySettingsIntentHandled None]', 2), ('[android.content.cts.AvailableIntentsTest testChangePhoneAccounts None]', 1), ('[android.content.cts.AvailableIntentsTest testShowCallAccessibilitySettings None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilitySettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilitySettingsTest.java', 1)]"	"[('(2,ACCESSIBILITY_SETTINGS,/android/accessibilityservice/cts/AccessibilitySettingsTest.java)', 2), ('(2,ACCESSIBILITY_SETTINGS,/android/content/cts/AvailableIntentsTest.java)', 1)]"	"[('([2:/android/accessibilityservice/cts/AccessibilitySettingsTest.java]:[ACCESSIBILITY_SETTINGS]:[2]:method_text:[ACTION_ACCESSIBILITY_SETTINGS"";        assertTrue(message, !resolvedActivities.isEmpty());    }}])', 2), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ACCESSIBILITY_SETTINGS]:[1]:method_text:[ON_SHOW_CALL_ACCESSIBILITY_SETTINGS, it will display the call accessibility preferences.     */   ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ACCESSIBILITY_SETTINGS]:[1]:method_text:[ }    /**     * Test ACTION_SHOW_CALL_SETTINGS, it will display the call preferences.     */   ])', 1)]"	""	""	""	""	""
"57:278237) 3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-13-1"	""	"[('android.admin.cts.DeviceAdminActivationTest', 2)]"	"[('getSimpleName', 1)]"	""	""	"3.2.3.5/C-13-1"	"""C-13-1] MUST honor the intent android.app.action.ADD_DEVICE_ADMIN to invoke a UI to bring the user through adding the device administrator to the system (or allowing them to reject it). """	"03020305.671301"	"android.app.action.ADD ADD_DEVICE_ADMIN"	""	""	""	"[('ADD_DEVICE_ADMIN', 2)]"	""	"[('[android.admin.cts.DeviceAdminActivationTest DeviceAdminActivationTest None]', 1), ('[android.admin.cts.DeviceAdminActivationTest testActivateBrokenReceiver5Fails None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DeviceAdminActivationTest.java', 2)]"	"[('(2,ADD_DEVICE_ADMIN,/android/admin/cts/DeviceAdminActivationTest.java)', 1)]"	"[('([1:/android/admin/cts/DeviceAdminActivationTest.java]:[ADD_DEVICE_ADMIN]:[1]:method_text:[ctivateDeviceAdminActivity();        } finally {            super.tearDown();        }    }   ])', 1), ('([1:/android/admin/cts/DeviceAdminActivationTest.java]:[ADD_DEVICE_ADMIN]:[1]:method_text:[                new ComponentName(getInstrumentation().getTargetContext(), receiverClass)));    }}])', 1)]"	""	""	""	""	""
"57:278237) 3.2.3.5  . Conditional Application Intents"	"3.2.3.5"	"C-9-1"	""	"[('android.content.cts.AvailableIntentsTest', 1)]"	""	""	""	"3.2.3.5/C-9-1"	"""C-9-1] MUST implement the Settings#ACTION_PROCESS_WIFI_EASY_CONNECT_URI Intent APIs as described in the SDK documentation. If device implementations provide the data saver mode, they: *"""	"03020305.670901"	"ACTION_PROCESS_WIFI_EASY_CONNECT_URI"	""	""	""	"[('ACTION_PROCESS_WIFI_EASY_CONNECT_URI', 1)]"	""	"[('[android.content.cts.AvailableIntentsTest testEasyConnectIntent None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1)]"	"[('(1,ACTION_PROCESS_WIFI_EASY_CONNECT_URI,/android/content/cts/AvailableIntentsTest.java)', 1)]"	"[('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_PROCESS_WIFI_EASY_CONNECT_URI]:[1]:method_text:[     intent.setData(Uri.parse(QRCODE));            assertCanBeHandled(intent);        }    }   ])', 1)]"	""	""	""	""	""
"89:347617) 3.8.16  . Device Controls"	"3.8.16"	"H-1-1"	""	""	""	""	""	"3.8.16/H-1-1"	""">3.8.16/H-1-1] MUST declare the feature flag android.software.controls and set it to true. [<a href=""#3_8_user_interface_compatibility"""""	"03081600.720101"	"android.software.controls"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"89:347617) 3.8.16  . Device Controls"	"3.8.16"	"H-1-2"	""	""	""	""	""	"3.8.16/H-1-2"	""">3.8.16/H-1-2] MUST provide a user affordance with the ability to add, edit, select, and operate the user’s favorite device controls from the controls registered by the third-party applications through the ControlsProviderService and the Control APIs. [<a href=""#3_8_user_interface_compatibility"""""	"03081600.720102"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"89:347617) 3.8.16  . Device Controls"	"3.8.16"	"H-1-3"	""	""	""	""	""	"3.8.16/H-1-3"	""">3.8.16/H-1-3] MUST provide access to this user affordance within three interactions from a default Launcher. [<a href=""#3_8_user_interface_compatibility"""""	"03081600.720103"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"89:347617) 3.8.16  . Device Controls"	"3.8.16"	"H-1-4"	""	""	""	""	""	"3.8.16/H-1-4"	""">3.8.16/H-1-4] MUST accurately render in this user affordance the name and icon of each third-party app that provides controls via the ControlsProviderService API as well as any specified fields provided by the Control APIs. Conversely, If Handheld device implementations do not implement such controls, they: [<a href=""#3_8_user_interface_compatibility"""""	"03081600.720104"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"89:347617) 3.8.16  . Device Controls"	"3.8.16"	"H-2-1"	""	""	""	""	""	"3.8.16/H-2-1"	""">3.8.16/H-2-1] MUST report null for the ControlsProviderService and the Control APIs. [<a href=""#3_8_user_interface_compatibility"""""	"03081600.720201"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"89:347617) 3.8.16  . Device Controls"	"3.8.16"	"H-2-2"	""	""	""	""	""	"3.8.16/H-2-2"	""">3.8.16/H-2-2] MUST declare the feature flag android.software.controls and set it to false. Handheld device implementations: [<a href=""#3_10_accessibility"""""	"03081600.720202"	"android.software.controls"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"152:477544) 6.1  . Developer Tools"	"6.1"	"C-3-2"	""	""	""	""	""	"6.1/C-3-2"	"""C-3-2] MUST provide drivers for Windows 7, 8 and 10, allowing developers to connect to the device using the adb protocol. If device implementations support adb connections to a host machine via Wi-Fi, they: """	"06010000.670302"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"152:477544) 6.1  . Developer Tools"	"6.1"	"C-4-1"	""	"[('android.adbmanager.cts.AdbManagerHostDeviceTest', 2)]"	""	""	""	"6.1/C-4-1"	"""C-4-1] MUST have the AdbManager#isAdbWifiSupported() method return true. If device implementations support adb connections to a host machine via Wi-Fi and includes at least one camera, they: """	"06010000.670401"	"isAdbWifiSupported()"	""	""	""	"[('isAdbWifiSupported()', 2)]"	""	"[('[android.adbmanager.cts.AdbManagerHostDeviceTest test_isadbWifiSupported None]', 2)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1)]"	"[('(1,isAdbWifiSupported(),/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 2)]"	"[('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[isAdbWifiSupported()]:[1]:method_text:[;        Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));    }   ])', 2)]"	""	""	""	""	""
"152:477544) 6.1  . Developer Tools"	"6.1"	"C-0-11"	""	""	""	""	""	"6.1/C-0-11"	"""C-0-11] MUST support the shell command cmd testharness. Upgrading device implementations from an earlier Android version without a persistent data block MAY be exempted from C-0-11."""	"06010000.670011"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"152:477544) 6.1  . Developer Tools"	"6.1"	"C-3-1"	""	""	""	""	""	"6.1/C-3-1"	"""C-3-1] MUST implement adb via local-area network (such as Ethernet or Wi-Fi)."""	"06010000.670301"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"152:477544) 6.1  . Developer Tools"	"6.1"	"C-5-1"	""	"[('android.adbmanager.cts.AdbManagerHostDeviceTest', 2)]"	""	""	""	"6.1/C-5-1"	"""C-5-1] MUST have the AdbManager#isAdbWifiQrSupported() method return true. Dalvik Debug Monitor Service (ddms) """	"06010000.670501"	"isAdbWifiQrSupported()"	""	""	""	"[('isAdbWifiQrSupported()', 2)]"	""	"[('[android.adbmanager.cts.AdbManagerHostDeviceTest test_isadbWifiQrSupported None]', 2)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1)]"	"[('(1,isAdbWifiQrSupported(),/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 2)]"	"[('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[isAdbWifiQrSupported()]:[1]:method_text:[)));        Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));    }}])', 2)]"	""	""	""	""	""
"152:477544) 6.1  . Developer Tools"	"6.1"	"C-0-10"	""	"[('android.cts.statsd.atom.UidAtomTests', 1)]"	""	""	""	"6.1/C-0-10"	"""C-0-10] MUST record, without omission, and make the following events accessible and available to the cmd stats shell command and the StatsManager System API class. ActivityForegroundStateChanged AnomalyDetected AppBreadcrumbReported AppCrashOccurred AppStartOccurred BatteryLevelChanged BatterySaverModeStateChanged BleScanResultReceived BleScanStateChanged ChargingStateChanged DeviceIdleModeStateChanged ForegroundServiceStateChanged GpsScanStateChanged JobStateChanged PluggedStateChanged ScheduledJobStateChanged ScreenStateChanged SyncStateChanged SystemElapsedRealtime UidProcessStateChanged WakelockStateChanged WakeupAlarmOccurred WifiLockStateChanged WifiMulticastLockStateChanged WifiScanStateChanged  && C-0-10] MUST record, without omission, and make the following events accessible and available to the cmd stats shell command and the StatsManager System API class. ActivityForegroundStateChanged AnomalyDetected AppBreadcrumbReported AppCrashOccurred AppStartOccurred BatteryLevelChanged BatterySaverModeStateChanged BleScanResultReceived BleScanStateChanged ChargingStateChanged DeviceIdleModeStateChanged ForegroundServiceStateChanged GpsScanStateChanged JobStateChanged PluggedStateChanged ScheduledJobStateChanged ScreenStateChanged SyncStateChanged SystemElapsedRealtime UidProcessStateChanged WakelockStateChanged WakeupAlarmOccurred WifiLockStateChanged WifiMulticastLockStateChanged WifiScanStateChanged  | C-0-10] MUST write a LMK_KILL_OCCURRED_FIELD_NUMBER Atom to the statsd log when an app is terminated by the Low Memory Killer. Test Harness Mode If device implementations support the shell command cmd testharness and run cmd testharness enable, they: """	"06010000.670010"	"LMK_KILL_OCCURRED_FIELD_NUMBER"	""	""	""	"[('LMK_KILL_OCCURRED_FIELD_NUMBER', 1)]"	""	"[('[android.cts.statsd.atom.UidAtomTests testLmkKillOccurred None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/atom/UidAtomTests.java', 1)]"	"[('(1,LMK_KILL_OCCURRED_FIELD_NUMBER,/android/cts/statsd/atom/UidAtomTests.java)', 1)]"	"[('([1:/android/cts/statsd/atom/UidAtomTests.java]:[LMK_KILL_OCCURRED_FIELD_NUMBER]:[1]:method_text:[ven if running multiple processes, LMK is not worked.        fail(""LMK is not worked."");    }   ])', 1)]"	""	""	""	""	""
"157:486383) 7.1.1.1  . Screen Size and Shape"	"7.1.1.1"	"C-3-1"	""	""	""	""	""	"7.1.1.1/C-3-1"	"""C-3-1] MUST report the position, bounds and state of hinge or fold through extensions or sidecar APIs to the application. For details on correctly implementing the sidecar or extension APIs refer to the public documentation of Window Manager Jetpack. <h5 id=""7112_screen_aspect_ratio"" """	"07010101.670301"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"157:486383) 7.1.1.1  . Screen Size and Shape"	"7.1.1.1"	"C-2-1"	""	""	""	""	""	"7.1.1.1/C-2-1"	"""C-2-1] MUST implement the latest available stable version of the extensions API or the stable version of sidecar API to be used by Window Manager Jetpack library. If device implementations include an Android-compatible display(s) that is foldable, or includes a folding hinge between multiple display panels and if the hinge or fold crosses a fullscreen application window, they: """	"07010101.670201"	"display(s)"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"157:486383) 7.1.1.1  . Screen Size and Shape"	"7.1.1.1"	"H-1-1"	""	""	""	""	""	"7.1.1.1/H-1-1"	""">7.1.1.1/H-1-1]* MUST make the logical screen that is made available for third party applications be at least 2 inches on the short edge(s) and 2.7 inches on the long edge(s). Devices which launched on an API level earlier than that of this document are exempted from this requirement. If Handheld device implementations do not support software screen rotation, they: [<a href=""#7_1_display_and_graphics"""""	"07010101.720101"	"edge(s)"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"157:486383) 7.1.1.1  . Screen Size and Shape"	"7.1.1.1"	"H-2-1"	""	"[('android.content.res.cts.ConfigurationTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1)]"	""	""	""	"7.1.1.1/H-2-1"	""">7.1.1.1/H-2-1]* MUST make the logical screen that is made available for third party applications be at least 2.7 inches on the short edge(s). Devices which launched on an API level earlier than that of this document are exempted from this requirement. If Handheld device implementations claim support for high dynamic range displays through Configuration.isScreenHdr() , they: [<a href=""#7_1_display-and-graphics"""""	"07010101.720201"	"isScreenHdr() Configuration.isScreenHdr edge(s)"	""	""	""	"[('isScreenHdr()', 2)]"	""	"[('[android.content.res.cts.ConfigurationTest testIsScreenHdr None]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForHdrCapableDisplay None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/ConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 1)]"	"[('(3,isScreenHdr(),/android/content/res/cts/ConfigurationTest.java)', 1), ('(1,isScreenHdr(),/android/opengl/cts/OpenGlEsVersionTest.java)', 1)]"	"[('([3:/android/content/res/cts/ConfigurationTest.java]:[isScreenHdr()]:[3]:method_text:[.colorMode |= Configuration.COLOR_MODE_HDR_YES;        assertTrue(config.isScreenHdr());    }   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[isScreenHdr()]:[1]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/C-1-4"")   ])', 1)]"	""	""	""	""	""
""	"7.1.4.6"	"H-0-1"	""	"[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 32), ('android.hardware.camera2.cts.MultiViewTest', 4), ('android.graphics.cts.BitmapTest', 4), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 4), ('android.security.cts.Poc17_01', 4), ('android.appmanifest.cts.UsesNativeLibraryTestCase', 3), ('android.graphics.cts.BasicVulkanGpuTest', 2), ('android.hardware.cts.HardwareBufferTest', 2), ('android.hardware.camera2.cts.RobustnessTest', 2), ('android.view.cts.ASurfaceControlTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 2), ('android.hardware.camera2.cts.ImageReaderTest', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.view.cts.FrameMetricsListenerTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.graphics.cts.SyncTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.app.uiautomation.cts.UiAutomationTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.view.cts.PixelCopyTest', 1), ('android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.CameraExtensionSessionTest', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test', 1)]"	"[('getDevice', 50), ('cleanup', 8), ('run', 4), ('getMessage', 4), ('init', 4), ('getWidth', 3), ('trim', 3), ('setUp', 3), ('data', 2), ('getHeight', 2), ('getTime', 2), ('LogScanResult', 2), ('stream', 2), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('getSimpleName', 1), ('setup', 1), ('teardown', 1), ('getOverrideConfig', 1), ('matches', 1), ('size', 1)]"	""	""	"7.1.4.6/H-0-1"	""">7.1.4.6/H-0-1] MUST report whether the device supports the GPU profiling capability via a system property graphics.gpu.profiler.support. If Handheld device implementations declare support via a system property graphics.gpu.profiler.support, they: [<a href=""#7_1_display_and_graphics"""""	"07010406.720001"	"GPU graphics.gpu.profiler.support"	""	""	""	"[('GPU', 86), ('graphics.gpu.profiler.support', 2)]"	""	"[('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty None]', 4), ('[android.hardware.cts.HardwareBufferTest testIsSupported None]', 2), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables None]', 2), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceSwitch None]', 2), ('[android.hardware.camera2.cts.MultiViewTest testTextureImageWriterReaderOperation None]', 2), ('[android.graphics.cts.BitmapTest testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails None]', 2), ('[android.graphics.cts.BitmapTest testNdkCompressBadParameter None]', 2), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setBufferOpaque_transparent None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest currentTimeMillis None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testInjectLayerLoadVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testReleaseLayerLoadGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testMultipleExternalApps None]', 2), ('[android.security.cts.Poc17_01 testPocCVE_2016_8426 None]', 2), ('[android.security.cts.Poc17_01 testPocCVE_2016_8427 None]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected None]', 2), ('[android.hardware.nativehardware.cts.HardwareBufferVrTest testLayeredBuffersForVr None]', 1), ('[android.view.cts.FrameMetricsListenerTest testDropCount None]', 1), ('[android.renderscript.cts.refocus.RefocusTest testNewRefocus None]', 1), ('[android.media.cts.PresentationSyncTest testThroughput None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest testSpoofingPublisher None]', 1), ('[com.android.cts.deviceowner.HardwarePropertiesManagerTest testHardwarePropertiesManager None]', 1), ('[android.deviceconfig.cts.DeviceConfigApiPermissionTests testDeviceConfigPublicNamespacesWithoutReadPermission None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest testSpoofingPublisher None]', 1), ('[android.hardware.cts.SensorDirectReportTest testCloseWithoutConfigStop None]', 1), ('[android.graphics.cts.CameraGpuTest testCameraImageCaptureAndRendering None]', 1), ('[android.app.uiautomation.cts.UiAutomationTest testCallingPublicAPIsWithDontUseAccessibilityFlag_shouldNotThrowException None]', 1), ('[android.appsecurity.cts.KeySetHostTest testBadUpgradeMissingPubKey None]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testJankyDrawFrame None]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testDaveyDrawFrame None]', 1), ('[android.view.cts.PixelCopyTest testBufferQueueCrop None]', 1), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOffOnOff None]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis None]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testConcurrentSessions None]', 1), ('[com.android.cts.deviceowner.VrTemperatureTest testVrTemperatures None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase getTestInformation None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppDependsOnSomePublicLibraries None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppOptionallyDependsOnSomePublicLibraries None]', 1), ('[android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test testDirectChannel None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-12-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-12-source/cts/hostsidetests/library/src/android/appmanifest/cts/UsesNativeLibraryTestCase.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/GraphicsStatsValidationTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/nativehardware/src/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FrameMetricsListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/MediaVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/SyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uiautomation/src/android/app/uiautomation/cts/UiAutomationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/KeySetHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/PixelCopyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DirectReportAPI30/src/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionSessionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/VrTemperatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DebuggableAPI31/src/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java', 1)]"	"[('(2,GPU,/android/graphics/cts/BasicVulkanGpuTest.java)', 2), ('(3,GPU,/android/hardware/cts/HardwareBufferTest.java)', 2), ('(2,GPU,/android/hardware/camera2/cts/RobustnessTest.java)', 2), ('(2,GPU,/android/hardware/camera2/cts/MultiViewTest.java)', 2), ('(2,GPU,/android/graphics/cts/BitmapTest.java)', 2), ('(1,GPU,/android/view/cts/ASurfaceControlTest.java)', 2), ('(94,GPU,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 2), ('(1,graphics.gpu.profiler.support,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 2), ('(2,GPU,/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java)', 2), ('(3,GPU,/android/security/cts/Poc17_01.java)', 2), ('(2,GPU,/android/hardware/nativehardware/cts/HardwareBufferVrTest.java)', 1), ('(5,GPU,/android/view/cts/FrameMetricsListenerTest.java)', 1), ('(1,GPU,/android/graphics/cts/MediaVulkanGpuTest.java)', 1), ('(2,GPU,/android/graphics/cts/SyncTest.java)', 1), ('(1,GPU,/android/graphics/cts/CameraVulkanGpuTest.java)', 1), ('(1,GPU,/android/renderscript/cts/refocus/RefocusTest.java)', 1), ('(3,GPU,/android/media/cts/PresentationSyncTest.java)', 1), ('(3,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java)', 1), ('(14,GPU,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(1,GPU,/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java)', 1), ('(1,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java)', 1), ('(1,GPU,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(5,GPU,/android/graphics/cts/CameraGpuTest.java)', 1), ('(24,GPU,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,GPU,/android/app/uiautomation/cts/UiAutomationTest.java)', 1), ('(1,GPU,/android/appsecurity/cts/KeySetHostTest.java)', 1), ('(4,GPU,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(7,GPU,/com/android/server/cts/GraphicsStatsValidationTest.java)', 1), ('(23,GPU,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,GPU,/android/view/cts/PixelCopyTest.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(2,GPU,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(2,GPU,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(1,GPU,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(9,GPU,/com/android/cts/deviceowner/VrTemperatureTest.java)', 1), ('(4,GPU,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java)', 1)]"	"[('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;    public BasicVulkanGpuTest(String name, int format) {        mFormat = format;    }   ])', 2), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));    }}])', 2), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 2), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap     * from the first TextureView is identical to the second TextureView.     */   ])', 2), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[    }    /*     * Verify behavior of sharing surfaces within one OutputConfiguration     */   ])', 2), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();        options.inPreferredConfig = Config.HARDWARE;        return options;    }}])', 2), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                    }                });    }   ])', 2), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 2), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 2), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 2), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     * This test ensures we can still use properties if no layer specified via Settings     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[    /**     * This test ensures system properties are ignored if Settings load a layer     */   ])', 2), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**     * This test ensures a debuggable app can load layers from an external package     */   ])', 2), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 2), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**     * This test ensures we can still use properties if no GLES layers are specified     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**     * This test ensures system properties are ignored if Settings load a GLES layer     */   ])', 2), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**     * This test ensures that external GLES layers can be loaded by a debuggable app     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);        Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);    }}])', 2), ('([1:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[graphics.gpu.profiler.support]:[1]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 2), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                FEATURE_WATCH, FEATURE_TELEVISION);    }   ])', 2), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);        }    }    /**     *  b/31799885     */   ])', 2), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);        }    }    /**     *  b/31993456     */   ])', 2), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());            assertEquals(flags, buffer.getUsage());        }    }}])', 1), ('([5:/android/view/cts/FrameMetricsListenerTest.java]:[GPU]:[5]:method_text:[rawFrameMetric,                (firstDrawFrameMetric == 0) || (firstDrawFrameMetric == 1));    }}])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                         bitmap.getHeight());        return framePixels;    }   ])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {    static {        System.loadLibrary(""ctsgraphics_jni"");    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ hwBuffer2.getLayers());        assertEquals(hwBuffer.getUsage(), hwBuffer2.getUsage());    }   ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                context.getResources().getResourceEntryName(resID));        return path;    }}])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                + ""icon_format=PNG,""                + ""icon_quality=100"";    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                () -> runWithCaller(callerContext, () -> r.run())        );    }}])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);            oldFanSpeeds = fanSpeeds;            oldCpuUsages = cpuUsages;        }    }}])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {        violations.append(message).append("": "").append(e).append(""\\n"");    }}])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));        }    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                    });        });    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());        return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned    }}])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =            new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);   ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);        activity.waitToFinishRendering();        activity.finish();    }}])', 1), ('([24:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[24]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([1:/android/app/uiautomation/cts/UiAutomationTest.java]:[GPU]:[1]:method_text:[entation getInstrumentation() {        return InstrumentationRegistry.getInstrumentation();    }}])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.     */   ])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";            orgiRefreshRate[1] = """";        }        return orgiRefreshRate;    }   ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                latest = proto;            }        }        return latest;    }}])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([1:/android/view/cts/PixelCopyTest.java]:[GPU]:[1]:method_text:[se();                    } catch (Throwable t) {}                }            }        }    }}])', 1), ('([1:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[GPU]:[1]:method_text:[                        > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([2:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[2]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[GPU]:[1]:method_text:[epeating with multi frame capture on all supported extensions.    // Verify still frame output.   ])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                skinVrThrottlingThresholds);    }}])', 1), ('([2:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[2]:method_text:[package manager is the same as     * the public.libraries*.txt files in the partitions.     */   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[iredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[quiredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }}])', 1), ('([1:/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java]:[GPU]:[1]:method_text:[ecurityException"");        } catch (SecurityException e) {            // Expected        }    }])', 1)]"	""	""	""	""	""
""	"7.1.4.6"	"H-1-1"	""	"[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 32), ('android.hardware.camera2.cts.MultiViewTest', 4), ('android.graphics.cts.BitmapTest', 4), ('android.security.cts.Poc17_01', 4), ('android.appmanifest.cts.UsesNativeLibraryTestCase', 3), ('android.graphics.cts.BasicVulkanGpuTest', 2), ('android.hardware.cts.HardwareBufferTest', 2), ('android.hardware.camera2.cts.RobustnessTest', 2), ('android.view.cts.ASurfaceControlTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 2), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 2), ('android.hardware.camera2.cts.ImageReaderTest', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.view.cts.FrameMetricsListenerTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.graphics.cts.SyncTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.app.uiautomation.cts.UiAutomationTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.view.cts.PixelCopyTest', 1), ('android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.CameraExtensionSessionTest', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test', 1)]"	"[('getDevice', 34), ('cleanup', 4), ('getWidth', 3), ('trim', 3), ('setUp', 3), ('data', 2), ('getHeight', 2), ('getTime', 2), ('LogScanResult', 2), ('run', 2), ('getMessage', 2), ('init', 2), ('stream', 2), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('getSimpleName', 1), ('setup', 1), ('teardown', 1), ('getOverrideConfig', 1), ('matches', 1), ('size', 1)]"	""	""	"7.1.4.6/H-1-1"	""">7.1.4.6/H-1-1] MUST report as output a protobuf trace that complies with the schema for GPU counters and GPU renderstages defined in the Perfetto documentation. [<a href=""#7_1_display_and_graphics"""""	"07010406.720101"	"GPU"	""	""	""	"[('GPU', 86)]"	""	"[('[android.hardware.cts.HardwareBufferTest testIsSupported None]', 2), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables None]', 2), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceSwitch None]', 2), ('[android.hardware.camera2.cts.MultiViewTest testTextureImageWriterReaderOperation None]', 2), ('[android.graphics.cts.BitmapTest testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails None]', 2), ('[android.graphics.cts.BitmapTest testNdkCompressBadParameter None]', 2), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setBufferOpaque_transparent None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest currentTimeMillis None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testInjectLayerLoadVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testReleaseLayerLoadGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testMultipleExternalApps None]', 2), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty None]', 2), ('[android.security.cts.Poc17_01 testPocCVE_2016_8426 None]', 2), ('[android.security.cts.Poc17_01 testPocCVE_2016_8427 None]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected None]', 2), ('[android.hardware.nativehardware.cts.HardwareBufferVrTest testLayeredBuffersForVr None]', 1), ('[android.view.cts.FrameMetricsListenerTest testDropCount None]', 1), ('[android.renderscript.cts.refocus.RefocusTest testNewRefocus None]', 1), ('[android.media.cts.PresentationSyncTest testThroughput None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest testSpoofingPublisher None]', 1), ('[com.android.cts.deviceowner.HardwarePropertiesManagerTest testHardwarePropertiesManager None]', 1), ('[android.deviceconfig.cts.DeviceConfigApiPermissionTests testDeviceConfigPublicNamespacesWithoutReadPermission None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest testSpoofingPublisher None]', 1), ('[android.hardware.cts.SensorDirectReportTest testCloseWithoutConfigStop None]', 1), ('[android.graphics.cts.CameraGpuTest testCameraImageCaptureAndRendering None]', 1), ('[android.app.uiautomation.cts.UiAutomationTest testCallingPublicAPIsWithDontUseAccessibilityFlag_shouldNotThrowException None]', 1), ('[android.appsecurity.cts.KeySetHostTest testBadUpgradeMissingPubKey None]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testJankyDrawFrame None]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testDaveyDrawFrame None]', 1), ('[android.view.cts.PixelCopyTest testBufferQueueCrop None]', 1), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOffOnOff None]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis None]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testConcurrentSessions None]', 1), ('[com.android.cts.deviceowner.VrTemperatureTest testVrTemperatures None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase getTestInformation None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppDependsOnSomePublicLibraries None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppOptionallyDependsOnSomePublicLibraries None]', 1), ('[android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test testDirectChannel None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-12-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-12-source/cts/hostsidetests/library/src/android/appmanifest/cts/UsesNativeLibraryTestCase.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/GraphicsStatsValidationTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/nativehardware/src/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FrameMetricsListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/MediaVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/SyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uiautomation/src/android/app/uiautomation/cts/UiAutomationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/KeySetHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/PixelCopyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DirectReportAPI30/src/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionSessionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/VrTemperatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DebuggableAPI31/src/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java', 1)]"	"[('(2,GPU,/android/graphics/cts/BasicVulkanGpuTest.java)', 2), ('(3,GPU,/android/hardware/cts/HardwareBufferTest.java)', 2), ('(2,GPU,/android/hardware/camera2/cts/RobustnessTest.java)', 2), ('(2,GPU,/android/hardware/camera2/cts/MultiViewTest.java)', 2), ('(2,GPU,/android/graphics/cts/BitmapTest.java)', 2), ('(1,GPU,/android/view/cts/ASurfaceControlTest.java)', 2), ('(94,GPU,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 2), ('(2,GPU,/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java)', 2), ('(3,GPU,/android/security/cts/Poc17_01.java)', 2), ('(2,GPU,/android/hardware/nativehardware/cts/HardwareBufferVrTest.java)', 1), ('(5,GPU,/android/view/cts/FrameMetricsListenerTest.java)', 1), ('(1,GPU,/android/graphics/cts/MediaVulkanGpuTest.java)', 1), ('(2,GPU,/android/graphics/cts/SyncTest.java)', 1), ('(1,GPU,/android/graphics/cts/CameraVulkanGpuTest.java)', 1), ('(1,GPU,/android/renderscript/cts/refocus/RefocusTest.java)', 1), ('(3,GPU,/android/media/cts/PresentationSyncTest.java)', 1), ('(3,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java)', 1), ('(14,GPU,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(1,GPU,/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java)', 1), ('(1,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java)', 1), ('(1,GPU,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(5,GPU,/android/graphics/cts/CameraGpuTest.java)', 1), ('(24,GPU,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,GPU,/android/app/uiautomation/cts/UiAutomationTest.java)', 1), ('(1,GPU,/android/appsecurity/cts/KeySetHostTest.java)', 1), ('(4,GPU,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(7,GPU,/com/android/server/cts/GraphicsStatsValidationTest.java)', 1), ('(23,GPU,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,GPU,/android/view/cts/PixelCopyTest.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(2,GPU,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(2,GPU,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(1,GPU,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(9,GPU,/com/android/cts/deviceowner/VrTemperatureTest.java)', 1), ('(4,GPU,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java)', 1)]"	"[('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;    public BasicVulkanGpuTest(String name, int format) {        mFormat = format;    }   ])', 2), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));    }}])', 2), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 2), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap     * from the first TextureView is identical to the second TextureView.     */   ])', 2), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[    }    /*     * Verify behavior of sharing surfaces within one OutputConfiguration     */   ])', 2), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();        options.inPreferredConfig = Config.HARDWARE;        return options;    }}])', 2), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                    }                });    }   ])', 2), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 2), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 2), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 2), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     * This test ensures we can still use properties if no layer specified via Settings     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[    /**     * This test ensures system properties are ignored if Settings load a layer     */   ])', 2), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**     * This test ensures a debuggable app can load layers from an external package     */   ])', 2), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 2), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**     * This test ensures we can still use properties if no GLES layers are specified     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**     * This test ensures system properties are ignored if Settings load a GLES layer     */   ])', 2), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**     * This test ensures that external GLES layers can be loaded by a debuggable app     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);        Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);    }}])', 2), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                FEATURE_WATCH, FEATURE_TELEVISION);    }   ])', 2), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);        }    }    /**     *  b/31799885     */   ])', 2), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);        }    }    /**     *  b/31993456     */   ])', 2), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());            assertEquals(flags, buffer.getUsage());        }    }}])', 1), ('([5:/android/view/cts/FrameMetricsListenerTest.java]:[GPU]:[5]:method_text:[rawFrameMetric,                (firstDrawFrameMetric == 0) || (firstDrawFrameMetric == 1));    }}])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                         bitmap.getHeight());        return framePixels;    }   ])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {    static {        System.loadLibrary(""ctsgraphics_jni"");    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ hwBuffer2.getLayers());        assertEquals(hwBuffer.getUsage(), hwBuffer2.getUsage());    }   ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                context.getResources().getResourceEntryName(resID));        return path;    }}])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                + ""icon_format=PNG,""                + ""icon_quality=100"";    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                () -> runWithCaller(callerContext, () -> r.run())        );    }}])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);            oldFanSpeeds = fanSpeeds;            oldCpuUsages = cpuUsages;        }    }}])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {        violations.append(message).append("": "").append(e).append(""\\n"");    }}])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));        }    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                    });        });    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());        return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned    }}])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =            new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);   ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);        activity.waitToFinishRendering();        activity.finish();    }}])', 1), ('([24:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[24]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([1:/android/app/uiautomation/cts/UiAutomationTest.java]:[GPU]:[1]:method_text:[entation getInstrumentation() {        return InstrumentationRegistry.getInstrumentation();    }}])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.     */   ])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";            orgiRefreshRate[1] = """";        }        return orgiRefreshRate;    }   ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                latest = proto;            }        }        return latest;    }}])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([1:/android/view/cts/PixelCopyTest.java]:[GPU]:[1]:method_text:[se();                    } catch (Throwable t) {}                }            }        }    }}])', 1), ('([1:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[GPU]:[1]:method_text:[                        > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([2:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[2]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[GPU]:[1]:method_text:[epeating with multi frame capture on all supported extensions.    // Verify still frame output.   ])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                skinVrThrottlingThresholds);    }}])', 1), ('([2:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[2]:method_text:[package manager is the same as     * the public.libraries*.txt files in the partitions.     */   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[iredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[quiredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }}])', 1), ('([1:/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java]:[GPU]:[1]:method_text:[ecurityException"");        } catch (SecurityException e) {            // Expected        }    }])', 1)]"	""	""	""	""	""
""	"7.1.4.6"	"H-1-2"	""	"[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 32), ('android.hardware.camera2.cts.MultiViewTest', 4), ('android.graphics.cts.BitmapTest', 4), ('android.security.cts.Poc17_01', 4), ('android.appmanifest.cts.UsesNativeLibraryTestCase', 3), ('android.graphics.cts.BasicVulkanGpuTest', 2), ('android.hardware.cts.HardwareBufferTest', 2), ('android.hardware.camera2.cts.RobustnessTest', 2), ('android.view.cts.ASurfaceControlTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 2), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 2), ('android.hardware.camera2.cts.ImageReaderTest', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.view.cts.FrameMetricsListenerTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.graphics.cts.SyncTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.app.uiautomation.cts.UiAutomationTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.view.cts.PixelCopyTest', 1), ('android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.CameraExtensionSessionTest', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test', 1)]"	"[('getDevice', 34), ('cleanup', 4), ('getWidth', 3), ('trim', 3), ('setUp', 3), ('data', 2), ('getHeight', 2), ('getTime', 2), ('LogScanResult', 2), ('run', 2), ('getMessage', 2), ('init', 2), ('stream', 2), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('getSimpleName', 1), ('setup', 1), ('teardown', 1), ('getOverrideConfig', 1), ('matches', 1), ('size', 1)]"	""	""	"7.1.4.6/H-1-2"	""">7.1.4.6/H-1-2] MUST report conformant values for the device’s GPU counters following the gpu counter trace packet proto. [<a href=""#7_1_display_and_graphics"""""	"07010406.720102"	"GPU"	""	""	""	"[('GPU', 86)]"	""	"[('[android.hardware.cts.HardwareBufferTest testIsSupported None]', 2), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables None]', 2), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceSwitch None]', 2), ('[android.hardware.camera2.cts.MultiViewTest testTextureImageWriterReaderOperation None]', 2), ('[android.graphics.cts.BitmapTest testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails None]', 2), ('[android.graphics.cts.BitmapTest testNdkCompressBadParameter None]', 2), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setBufferOpaque_transparent None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest currentTimeMillis None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testInjectLayerLoadVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testReleaseLayerLoadGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testMultipleExternalApps None]', 2), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty None]', 2), ('[android.security.cts.Poc17_01 testPocCVE_2016_8426 None]', 2), ('[android.security.cts.Poc17_01 testPocCVE_2016_8427 None]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected None]', 2), ('[android.hardware.nativehardware.cts.HardwareBufferVrTest testLayeredBuffersForVr None]', 1), ('[android.view.cts.FrameMetricsListenerTest testDropCount None]', 1), ('[android.renderscript.cts.refocus.RefocusTest testNewRefocus None]', 1), ('[android.media.cts.PresentationSyncTest testThroughput None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest testSpoofingPublisher None]', 1), ('[com.android.cts.deviceowner.HardwarePropertiesManagerTest testHardwarePropertiesManager None]', 1), ('[android.deviceconfig.cts.DeviceConfigApiPermissionTests testDeviceConfigPublicNamespacesWithoutReadPermission None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest testSpoofingPublisher None]', 1), ('[android.hardware.cts.SensorDirectReportTest testCloseWithoutConfigStop None]', 1), ('[android.graphics.cts.CameraGpuTest testCameraImageCaptureAndRendering None]', 1), ('[android.app.uiautomation.cts.UiAutomationTest testCallingPublicAPIsWithDontUseAccessibilityFlag_shouldNotThrowException None]', 1), ('[android.appsecurity.cts.KeySetHostTest testBadUpgradeMissingPubKey None]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testJankyDrawFrame None]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testDaveyDrawFrame None]', 1), ('[android.view.cts.PixelCopyTest testBufferQueueCrop None]', 1), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOffOnOff None]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis None]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testConcurrentSessions None]', 1), ('[com.android.cts.deviceowner.VrTemperatureTest testVrTemperatures None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase getTestInformation None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppDependsOnSomePublicLibraries None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppOptionallyDependsOnSomePublicLibraries None]', 1), ('[android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test testDirectChannel None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-12-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-12-source/cts/hostsidetests/library/src/android/appmanifest/cts/UsesNativeLibraryTestCase.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/GraphicsStatsValidationTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/nativehardware/src/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FrameMetricsListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/MediaVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/SyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uiautomation/src/android/app/uiautomation/cts/UiAutomationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/KeySetHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/PixelCopyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DirectReportAPI30/src/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionSessionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/VrTemperatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DebuggableAPI31/src/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java', 1)]"	"[('(2,GPU,/android/graphics/cts/BasicVulkanGpuTest.java)', 2), ('(3,GPU,/android/hardware/cts/HardwareBufferTest.java)', 2), ('(2,GPU,/android/hardware/camera2/cts/RobustnessTest.java)', 2), ('(2,GPU,/android/hardware/camera2/cts/MultiViewTest.java)', 2), ('(2,GPU,/android/graphics/cts/BitmapTest.java)', 2), ('(1,GPU,/android/view/cts/ASurfaceControlTest.java)', 2), ('(94,GPU,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 2), ('(2,GPU,/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java)', 2), ('(3,GPU,/android/security/cts/Poc17_01.java)', 2), ('(2,GPU,/android/hardware/nativehardware/cts/HardwareBufferVrTest.java)', 1), ('(5,GPU,/android/view/cts/FrameMetricsListenerTest.java)', 1), ('(1,GPU,/android/graphics/cts/MediaVulkanGpuTest.java)', 1), ('(2,GPU,/android/graphics/cts/SyncTest.java)', 1), ('(1,GPU,/android/graphics/cts/CameraVulkanGpuTest.java)', 1), ('(1,GPU,/android/renderscript/cts/refocus/RefocusTest.java)', 1), ('(3,GPU,/android/media/cts/PresentationSyncTest.java)', 1), ('(3,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java)', 1), ('(14,GPU,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(1,GPU,/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java)', 1), ('(1,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java)', 1), ('(1,GPU,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(5,GPU,/android/graphics/cts/CameraGpuTest.java)', 1), ('(24,GPU,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,GPU,/android/app/uiautomation/cts/UiAutomationTest.java)', 1), ('(1,GPU,/android/appsecurity/cts/KeySetHostTest.java)', 1), ('(4,GPU,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(7,GPU,/com/android/server/cts/GraphicsStatsValidationTest.java)', 1), ('(23,GPU,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,GPU,/android/view/cts/PixelCopyTest.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(2,GPU,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(2,GPU,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(1,GPU,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(9,GPU,/com/android/cts/deviceowner/VrTemperatureTest.java)', 1), ('(4,GPU,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java)', 1)]"	"[('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;    public BasicVulkanGpuTest(String name, int format) {        mFormat = format;    }   ])', 2), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));    }}])', 2), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 2), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap     * from the first TextureView is identical to the second TextureView.     */   ])', 2), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[    }    /*     * Verify behavior of sharing surfaces within one OutputConfiguration     */   ])', 2), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();        options.inPreferredConfig = Config.HARDWARE;        return options;    }}])', 2), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                    }                });    }   ])', 2), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 2), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 2), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 2), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     * This test ensures we can still use properties if no layer specified via Settings     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[    /**     * This test ensures system properties are ignored if Settings load a layer     */   ])', 2), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**     * This test ensures a debuggable app can load layers from an external package     */   ])', 2), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 2), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**     * This test ensures we can still use properties if no GLES layers are specified     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**     * This test ensures system properties are ignored if Settings load a GLES layer     */   ])', 2), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**     * This test ensures that external GLES layers can be loaded by a debuggable app     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);        Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);    }}])', 2), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                FEATURE_WATCH, FEATURE_TELEVISION);    }   ])', 2), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);        }    }    /**     *  b/31799885     */   ])', 2), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);        }    }    /**     *  b/31993456     */   ])', 2), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());            assertEquals(flags, buffer.getUsage());        }    }}])', 1), ('([5:/android/view/cts/FrameMetricsListenerTest.java]:[GPU]:[5]:method_text:[rawFrameMetric,                (firstDrawFrameMetric == 0) || (firstDrawFrameMetric == 1));    }}])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                         bitmap.getHeight());        return framePixels;    }   ])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {    static {        System.loadLibrary(""ctsgraphics_jni"");    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ hwBuffer2.getLayers());        assertEquals(hwBuffer.getUsage(), hwBuffer2.getUsage());    }   ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                context.getResources().getResourceEntryName(resID));        return path;    }}])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                + ""icon_format=PNG,""                + ""icon_quality=100"";    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                () -> runWithCaller(callerContext, () -> r.run())        );    }}])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);            oldFanSpeeds = fanSpeeds;            oldCpuUsages = cpuUsages;        }    }}])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {        violations.append(message).append("": "").append(e).append(""\\n"");    }}])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));        }    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                    });        });    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());        return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned    }}])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =            new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);   ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);        activity.waitToFinishRendering();        activity.finish();    }}])', 1), ('([24:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[24]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([1:/android/app/uiautomation/cts/UiAutomationTest.java]:[GPU]:[1]:method_text:[entation getInstrumentation() {        return InstrumentationRegistry.getInstrumentation();    }}])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.     */   ])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";            orgiRefreshRate[1] = """";        }        return orgiRefreshRate;    }   ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                latest = proto;            }        }        return latest;    }}])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([1:/android/view/cts/PixelCopyTest.java]:[GPU]:[1]:method_text:[se();                    } catch (Throwable t) {}                }            }        }    }}])', 1), ('([1:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[GPU]:[1]:method_text:[                        > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([2:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[2]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[GPU]:[1]:method_text:[epeating with multi frame capture on all supported extensions.    // Verify still frame output.   ])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                skinVrThrottlingThresholds);    }}])', 1), ('([2:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[2]:method_text:[package manager is the same as     * the public.libraries*.txt files in the partitions.     */   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[iredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[quiredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }}])', 1), ('([1:/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java]:[GPU]:[1]:method_text:[ecurityException"");        } catch (SecurityException e) {            // Expected        }    }])', 1)]"	""	""	""	""	""
""	"7.1.4.6"	"H-1-3"	""	"[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 32), ('android.hardware.camera2.cts.MultiViewTest', 4), ('android.graphics.cts.BitmapTest', 4), ('android.security.cts.Poc17_01', 4), ('android.appmanifest.cts.UsesNativeLibraryTestCase', 3), ('android.graphics.cts.BasicVulkanGpuTest', 2), ('android.hardware.cts.HardwareBufferTest', 2), ('android.hardware.camera2.cts.RobustnessTest', 2), ('android.view.cts.ASurfaceControlTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 2), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 2), ('android.hardware.camera2.cts.ImageReaderTest', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.view.cts.FrameMetricsListenerTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.graphics.cts.SyncTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.app.uiautomation.cts.UiAutomationTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.view.cts.PixelCopyTest', 1), ('android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.CameraExtensionSessionTest', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test', 1)]"	"[('getDevice', 34), ('cleanup', 4), ('getWidth', 3), ('trim', 3), ('setUp', 3), ('data', 2), ('getHeight', 2), ('getTime', 2), ('LogScanResult', 2), ('run', 2), ('getMessage', 2), ('init', 2), ('stream', 2), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('getSimpleName', 1), ('setup', 1), ('teardown', 1), ('getOverrideConfig', 1), ('matches', 1), ('size', 1)]"	""	""	"7.1.4.6/H-1-3"	""">7.1.4.6/H-1-3] MUST report conformant values for the device’s GPU RenderStages following the render stage trace packet proto. [<a href=""#7_1_display_and_graphics"""""	"07010406.720103"	"GPU"	""	""	""	"[('GPU', 86)]"	""	"[('[android.hardware.cts.HardwareBufferTest testIsSupported None]', 2), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables None]', 2), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceSwitch None]', 2), ('[android.hardware.camera2.cts.MultiViewTest testTextureImageWriterReaderOperation None]', 2), ('[android.graphics.cts.BitmapTest testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails None]', 2), ('[android.graphics.cts.BitmapTest testNdkCompressBadParameter None]', 2), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setBufferOpaque_transparent None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest currentTimeMillis None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testInjectLayerLoadVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testReleaseLayerLoadGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testMultipleExternalApps None]', 2), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty None]', 2), ('[android.security.cts.Poc17_01 testPocCVE_2016_8426 None]', 2), ('[android.security.cts.Poc17_01 testPocCVE_2016_8427 None]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected None]', 2), ('[android.hardware.nativehardware.cts.HardwareBufferVrTest testLayeredBuffersForVr None]', 1), ('[android.view.cts.FrameMetricsListenerTest testDropCount None]', 1), ('[android.renderscript.cts.refocus.RefocusTest testNewRefocus None]', 1), ('[android.media.cts.PresentationSyncTest testThroughput None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest testSpoofingPublisher None]', 1), ('[com.android.cts.deviceowner.HardwarePropertiesManagerTest testHardwarePropertiesManager None]', 1), ('[android.deviceconfig.cts.DeviceConfigApiPermissionTests testDeviceConfigPublicNamespacesWithoutReadPermission None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest testSpoofingPublisher None]', 1), ('[android.hardware.cts.SensorDirectReportTest testCloseWithoutConfigStop None]', 1), ('[android.graphics.cts.CameraGpuTest testCameraImageCaptureAndRendering None]', 1), ('[android.app.uiautomation.cts.UiAutomationTest testCallingPublicAPIsWithDontUseAccessibilityFlag_shouldNotThrowException None]', 1), ('[android.appsecurity.cts.KeySetHostTest testBadUpgradeMissingPubKey None]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testJankyDrawFrame None]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testDaveyDrawFrame None]', 1), ('[android.view.cts.PixelCopyTest testBufferQueueCrop None]', 1), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOffOnOff None]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis None]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testConcurrentSessions None]', 1), ('[com.android.cts.deviceowner.VrTemperatureTest testVrTemperatures None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase getTestInformation None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppDependsOnSomePublicLibraries None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppOptionallyDependsOnSomePublicLibraries None]', 1), ('[android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test testDirectChannel None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-12-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-12-source/cts/hostsidetests/library/src/android/appmanifest/cts/UsesNativeLibraryTestCase.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/GraphicsStatsValidationTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/nativehardware/src/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FrameMetricsListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/MediaVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/SyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uiautomation/src/android/app/uiautomation/cts/UiAutomationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/KeySetHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/PixelCopyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DirectReportAPI30/src/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionSessionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/VrTemperatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DebuggableAPI31/src/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java', 1)]"	"[('(2,GPU,/android/graphics/cts/BasicVulkanGpuTest.java)', 2), ('(3,GPU,/android/hardware/cts/HardwareBufferTest.java)', 2), ('(2,GPU,/android/hardware/camera2/cts/RobustnessTest.java)', 2), ('(2,GPU,/android/hardware/camera2/cts/MultiViewTest.java)', 2), ('(2,GPU,/android/graphics/cts/BitmapTest.java)', 2), ('(1,GPU,/android/view/cts/ASurfaceControlTest.java)', 2), ('(94,GPU,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 2), ('(2,GPU,/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java)', 2), ('(3,GPU,/android/security/cts/Poc17_01.java)', 2), ('(2,GPU,/android/hardware/nativehardware/cts/HardwareBufferVrTest.java)', 1), ('(5,GPU,/android/view/cts/FrameMetricsListenerTest.java)', 1), ('(1,GPU,/android/graphics/cts/MediaVulkanGpuTest.java)', 1), ('(2,GPU,/android/graphics/cts/SyncTest.java)', 1), ('(1,GPU,/android/graphics/cts/CameraVulkanGpuTest.java)', 1), ('(1,GPU,/android/renderscript/cts/refocus/RefocusTest.java)', 1), ('(3,GPU,/android/media/cts/PresentationSyncTest.java)', 1), ('(3,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java)', 1), ('(14,GPU,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(1,GPU,/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java)', 1), ('(1,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java)', 1), ('(1,GPU,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(5,GPU,/android/graphics/cts/CameraGpuTest.java)', 1), ('(24,GPU,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,GPU,/android/app/uiautomation/cts/UiAutomationTest.java)', 1), ('(1,GPU,/android/appsecurity/cts/KeySetHostTest.java)', 1), ('(4,GPU,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(7,GPU,/com/android/server/cts/GraphicsStatsValidationTest.java)', 1), ('(23,GPU,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,GPU,/android/view/cts/PixelCopyTest.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(2,GPU,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(2,GPU,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(1,GPU,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(9,GPU,/com/android/cts/deviceowner/VrTemperatureTest.java)', 1), ('(4,GPU,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java)', 1)]"	"[('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;    public BasicVulkanGpuTest(String name, int format) {        mFormat = format;    }   ])', 2), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));    }}])', 2), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 2), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap     * from the first TextureView is identical to the second TextureView.     */   ])', 2), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[    }    /*     * Verify behavior of sharing surfaces within one OutputConfiguration     */   ])', 2), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();        options.inPreferredConfig = Config.HARDWARE;        return options;    }}])', 2), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                    }                });    }   ])', 2), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 2), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 2), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 2), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     * This test ensures we can still use properties if no layer specified via Settings     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[    /**     * This test ensures system properties are ignored if Settings load a layer     */   ])', 2), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**     * This test ensures a debuggable app can load layers from an external package     */   ])', 2), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 2), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**     * This test ensures we can still use properties if no GLES layers are specified     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**     * This test ensures system properties are ignored if Settings load a GLES layer     */   ])', 2), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**     * This test ensures that external GLES layers can be loaded by a debuggable app     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);        Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);    }}])', 2), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                FEATURE_WATCH, FEATURE_TELEVISION);    }   ])', 2), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);        }    }    /**     *  b/31799885     */   ])', 2), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);        }    }    /**     *  b/31993456     */   ])', 2), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());            assertEquals(flags, buffer.getUsage());        }    }}])', 1), ('([5:/android/view/cts/FrameMetricsListenerTest.java]:[GPU]:[5]:method_text:[rawFrameMetric,                (firstDrawFrameMetric == 0) || (firstDrawFrameMetric == 1));    }}])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                         bitmap.getHeight());        return framePixels;    }   ])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {    static {        System.loadLibrary(""ctsgraphics_jni"");    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ hwBuffer2.getLayers());        assertEquals(hwBuffer.getUsage(), hwBuffer2.getUsage());    }   ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                context.getResources().getResourceEntryName(resID));        return path;    }}])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                + ""icon_format=PNG,""                + ""icon_quality=100"";    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                () -> runWithCaller(callerContext, () -> r.run())        );    }}])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);            oldFanSpeeds = fanSpeeds;            oldCpuUsages = cpuUsages;        }    }}])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {        violations.append(message).append("": "").append(e).append(""\\n"");    }}])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));        }    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                    });        });    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());        return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned    }}])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =            new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);   ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);        activity.waitToFinishRendering();        activity.finish();    }}])', 1), ('([24:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[24]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([1:/android/app/uiautomation/cts/UiAutomationTest.java]:[GPU]:[1]:method_text:[entation getInstrumentation() {        return InstrumentationRegistry.getInstrumentation();    }}])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.     */   ])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";            orgiRefreshRate[1] = """";        }        return orgiRefreshRate;    }   ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                latest = proto;            }        }        return latest;    }}])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([1:/android/view/cts/PixelCopyTest.java]:[GPU]:[1]:method_text:[se();                    } catch (Throwable t) {}                }            }        }    }}])', 1), ('([1:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[GPU]:[1]:method_text:[                        > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([2:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[2]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[GPU]:[1]:method_text:[epeating with multi frame capture on all supported extensions.    // Verify still frame output.   ])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                skinVrThrottlingThresholds);    }}])', 1), ('([2:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[2]:method_text:[package manager is the same as     * the public.libraries*.txt files in the partitions.     */   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[iredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[quiredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }}])', 1), ('([1:/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java]:[GPU]:[1]:method_text:[ecurityException"");        } catch (SecurityException e) {            // Expected        }    }])', 1)]"	""	""	""	""	""
""	"7.1.4.6"	"H-1-4"	""	"[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 32), ('android.hardware.camera2.cts.MultiViewTest', 4), ('android.graphics.cts.BitmapTest', 4), ('android.security.cts.Poc17_01', 4), ('android.appmanifest.cts.UsesNativeLibraryTestCase', 3), ('android.graphics.cts.BasicVulkanGpuTest', 2), ('android.hardware.cts.HardwareBufferTest', 2), ('android.hardware.camera2.cts.RobustnessTest', 2), ('android.view.cts.ASurfaceControlTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 2), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 2), ('android.hardware.camera2.cts.ImageReaderTest', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.view.cts.FrameMetricsListenerTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.graphics.cts.SyncTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.app.uiautomation.cts.UiAutomationTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.view.cts.PixelCopyTest', 1), ('android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.CameraExtensionSessionTest', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test', 1)]"	"[('getDevice', 34), ('cleanup', 4), ('getWidth', 3), ('trim', 3), ('setUp', 3), ('data', 2), ('getHeight', 2), ('getTime', 2), ('LogScanResult', 2), ('run', 2), ('getMessage', 2), ('init', 2), ('stream', 2), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('getSimpleName', 1), ('setup', 1), ('teardown', 1), ('getOverrideConfig', 1), ('matches', 1), ('size', 1)]"	""	""	"7.1.4.6/H-1-4"	""">7.1.4.6/H-1-4] MUST report a GPU Frequency tracepoint as specified by the format: power/gpu_frequency. Handheld device implementations: [<a href=""#7_1_display_and_graphics"""""	"07010406.720104"	"GPU"	""	""	""	"[('GPU', 86)]"	""	"[('[android.hardware.cts.HardwareBufferTest testIsSupported None]', 2), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables None]', 2), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceSwitch None]', 2), ('[android.hardware.camera2.cts.MultiViewTest testTextureImageWriterReaderOperation None]', 2), ('[android.graphics.cts.BitmapTest testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails None]', 2), ('[android.graphics.cts.BitmapTest testNdkCompressBadParameter None]', 2), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setBufferOpaque_transparent None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest currentTimeMillis None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testInjectLayerLoadVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreVulkan None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testReleaseLayerLoadGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreGLES None]', 2), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testMultipleExternalApps None]', 2), ('[android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest isEmpty None]', 2), ('[android.security.cts.Poc17_01 testPocCVE_2016_8426 None]', 2), ('[android.security.cts.Poc17_01 testPocCVE_2016_8427 None]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected None]', 2), ('[android.hardware.nativehardware.cts.HardwareBufferVrTest testLayeredBuffersForVr None]', 1), ('[android.view.cts.FrameMetricsListenerTest testDropCount None]', 1), ('[android.renderscript.cts.refocus.RefocusTest testNewRefocus None]', 1), ('[android.media.cts.PresentationSyncTest testThroughput None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest testSpoofingPublisher None]', 1), ('[com.android.cts.deviceowner.HardwarePropertiesManagerTest testHardwarePropertiesManager None]', 1), ('[android.deviceconfig.cts.DeviceConfigApiPermissionTests testDeviceConfigPublicNamespacesWithoutReadPermission None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest testSpoofingPublisher None]', 1), ('[android.hardware.cts.SensorDirectReportTest testCloseWithoutConfigStop None]', 1), ('[android.graphics.cts.CameraGpuTest testCameraImageCaptureAndRendering None]', 1), ('[android.app.uiautomation.cts.UiAutomationTest testCallingPublicAPIsWithDontUseAccessibilityFlag_shouldNotThrowException None]', 1), ('[android.appsecurity.cts.KeySetHostTest testBadUpgradeMissingPubKey None]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testJankyDrawFrame None]', 1), ('[com.android.server.cts.GraphicsStatsValidationTest testDaveyDrawFrame None]', 1), ('[android.view.cts.PixelCopyTest testBufferQueueCrop None]', 1), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOffOnOff None]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis None]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testConcurrentSessions None]', 1), ('[com.android.cts.deviceowner.VrTemperatureTest testVrTemperatures None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase getTestInformation None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppDependsOnSomePublicLibraries None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testNewAppOptionallyDependsOnSomePublicLibraries None]', 1), ('[android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test testDirectChannel None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-12-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-12-source/cts/hostsidetests/library/src/android/appmanifest/cts/UsesNativeLibraryTestCase.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/GraphicsStatsValidationTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/nativehardware/src/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FrameMetricsListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/MediaVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/SyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uiautomation/src/android/app/uiautomation/cts/UiAutomationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/KeySetHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/PixelCopyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DirectReportAPI30/src/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionSessionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/VrTemperatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DebuggableAPI31/src/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java', 1)]"	"[('(2,GPU,/android/graphics/cts/BasicVulkanGpuTest.java)', 2), ('(3,GPU,/android/hardware/cts/HardwareBufferTest.java)', 2), ('(2,GPU,/android/hardware/camera2/cts/RobustnessTest.java)', 2), ('(2,GPU,/android/hardware/camera2/cts/MultiViewTest.java)', 2), ('(2,GPU,/android/graphics/cts/BitmapTest.java)', 2), ('(1,GPU,/android/view/cts/ASurfaceControlTest.java)', 2), ('(94,GPU,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 2), ('(2,GPU,/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java)', 2), ('(3,GPU,/android/security/cts/Poc17_01.java)', 2), ('(2,GPU,/android/hardware/nativehardware/cts/HardwareBufferVrTest.java)', 1), ('(5,GPU,/android/view/cts/FrameMetricsListenerTest.java)', 1), ('(1,GPU,/android/graphics/cts/MediaVulkanGpuTest.java)', 1), ('(2,GPU,/android/graphics/cts/SyncTest.java)', 1), ('(1,GPU,/android/graphics/cts/CameraVulkanGpuTest.java)', 1), ('(1,GPU,/android/renderscript/cts/refocus/RefocusTest.java)', 1), ('(3,GPU,/android/media/cts/PresentationSyncTest.java)', 1), ('(3,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java)', 1), ('(14,GPU,/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java)', 1), ('(1,GPU,/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java)', 1), ('(1,GPU,/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java)', 1), ('(1,GPU,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(5,GPU,/android/graphics/cts/CameraGpuTest.java)', 1), ('(24,GPU,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,GPU,/android/app/uiautomation/cts/UiAutomationTest.java)', 1), ('(1,GPU,/android/appsecurity/cts/KeySetHostTest.java)', 1), ('(4,GPU,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(7,GPU,/com/android/server/cts/GraphicsStatsValidationTest.java)', 1), ('(23,GPU,/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java)', 1), ('(1,GPU,/android/view/cts/PixelCopyTest.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(2,GPU,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(2,GPU,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(1,GPU,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(9,GPU,/com/android/cts/deviceowner/VrTemperatureTest.java)', 1), ('(4,GPU,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(1,GPU,/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java)', 1)]"	"[('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;    public BasicVulkanGpuTest(String name, int format) {        mFormat = format;    }   ])', 2), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));    }}])', 2), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 2), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap     * from the first TextureView is identical to the second TextureView.     */   ])', 2), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[    }    /*     * Verify behavior of sharing surfaces within one OutputConfiguration     */   ])', 2), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();        options.inPreferredConfig = Config.HARDWARE;        return options;    }}])', 2), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                    }                });    }   ])', 2), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 2), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 2), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 2), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     * This test ensures we can still use properties if no layer specified via Settings     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[    /**     * This test ensures system properties are ignored if Settings load a layer     */   ])', 2), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**     * This test ensures a debuggable app can load layers from an external package     */   ])', 2), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 2), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**     * This test ensures we can still use properties if no GLES layers are specified     */   ])', 2), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**     * This test ensures system properties are ignored if Settings load a GLES layer     */   ])', 2), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**     * This test ensures that external GLES layers can be loaded by a debuggable app     */   ])', 2), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);        Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);    }}])', 2), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                FEATURE_WATCH, FEATURE_TELEVISION);    }   ])', 2), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);        }    }    /**     *  b/31799885     */   ])', 2), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);        }    }    /**     *  b/31993456     */   ])', 2), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());            assertEquals(flags, buffer.getUsage());        }    }}])', 1), ('([5:/android/view/cts/FrameMetricsListenerTest.java]:[GPU]:[5]:method_text:[rawFrameMetric,                (firstDrawFrameMetric == 0) || (firstDrawFrameMetric == 1));    }}])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                         bitmap.getHeight());        return framePixels;    }   ])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {    static {        System.loadLibrary(""ctsgraphics_jni"");    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ hwBuffer2.getLayers());        assertEquals(hwBuffer.getUsage(), hwBuffer2.getUsage());    }   ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                context.getResources().getResourceEntryName(resID));        return path;    }}])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                + ""icon_format=PNG,""                + ""icon_quality=100"";    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                () -> runWithCaller(callerContext, () -> r.run())        );    }}])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);            oldFanSpeeds = fanSpeeds;            oldCpuUsages = cpuUsages;        }    }}])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {        violations.append(message).append("": "").append(e).append(""\\n"");    }}])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));        }    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                    });        });    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());        return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned    }}])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =            new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);   ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);        activity.waitToFinishRendering();        activity.finish();    }}])', 1), ('([24:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[24]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([1:/android/app/uiautomation/cts/UiAutomationTest.java]:[GPU]:[1]:method_text:[entation getInstrumentation() {        return InstrumentationRegistry.getInstrumentation();    }}])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.     */   ])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";            orgiRefreshRate[1] = """";        }        return orgiRefreshRate;    }   ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                latest = proto;            }        }        return latest;    }}])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.     */   ])', 1), ('([1:/android/view/cts/PixelCopyTest.java]:[GPU]:[1]:method_text:[se();                    } catch (Throwable t) {}                }            }        }    }}])', 1), ('([1:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[GPU]:[1]:method_text:[                        > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([2:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[2]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[GPU]:[1]:method_text:[epeating with multi frame capture on all supported extensions.    // Verify still frame output.   ])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                skinVrThrottlingThresholds);    }}])', 1), ('([2:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[2]:method_text:[package manager is the same as     * the public.libraries*.txt files in the partitions.     */   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[iredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[GPU]:[1]:method_text:[quiredLibs, optionalLibs, availableLibs, unavailableLibs)));        runInstalledTestApp();    }}])', 1), ('([1:/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java]:[GPU]:[1]:method_text:[ecurityException"");        } catch (SecurityException e) {            // Expected        }    }])', 1)]"	""	""	""	""	""
"174:518858) 7.2.3  . Navigation Keys"	"7.2.3"	"C-3-1"	""	""	""	""	""	"7.2.3/C-3-1"	"""C-3-1] MUST make the Menu function available to applications when targetSdkVersion is less than 10, either by a physical button, a software key, or gestures. This Menu function should be accessible unless hidden together with other navigation functions. If device implementations provide the Assist function, they: """	"07020300.670301"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"175:521592) 7.2.4  . Touchscreen Input"	"7.2.4"	"C-3-3"	""	"[('android.content.res.cts.ConfigTest', 16), ('android.content.res.cts.ConfigurationTest', 5), ('android.app.cts.SystemFeaturesTest', 4), ('android.server.wm.ActivityManagerGetConfigTests', 2)]"	"[('Configuration', 6), ('setUp', 6), ('size', 6), ('getInstrumentation', 4), ('toLanguageTag', 4), ('makeConfiguration', 4), ('newTheme', 2), ('recycle', 2), ('TotalConfig', 2), ('getTargetContext', 2), ('getPackageManager', 2), ('getUiAutomation', 2), ('ByteArrayOutputStream', 2), ('close', 2), ('toByteArray', 2), ('getGlExtensionsFromDriver', 2), ('getEGL', 2), ('getConfigs', 2), ('addExtensionsForConfig', 2), ('getLocales', 2), ('getTotalRam', 2), ('setToDefaults', 2), ('getDefault', 2)]"	""	""	"7.2.4/C-3-3"	"""C-3-3] MUST report TOUCHSCREEN_NOTOUCH for the Configuration.touchscreen API field. <h4 id=""725_fake_touch_input"" """	"07020400.670303"	"TOUCHSCREEN_NOTOUCH Configuration.touchscreen"	""	""	""	"[('Configuration.touchscreen', 18), ('TOUCHSCREEN_NOTOUCH', 9)]"	""	"[('[android.content.res.cts.ConfigTest testAllEmptyConfigs None]', 4), ('[android.content.res.cts.ConfigTest testAllClassicConfigs None]', 4), ('[android.content.res.cts.ConfigTest testPrecedence None]', 4), ('[android.content.res.cts.ConfigTest DisplayMetrics None]', 2), ('[android.content.res.cts.ConfigTest testCombinations None]', 2), ('[android.app.cts.SystemFeaturesTest testTouchScreenFeatures None]', 2), ('[android.app.cts.SystemFeaturesTest testFakeTouchFeatures None]', 2), ('[android.server.wm.ActivityManagerGetConfigTests isLowRamDevice None]', 2), ('[android.content.res.cts.ConfigurationTest testSetToDefaults None]', 1), ('[android.content.res.cts.ConfigurationTest testUnset None]', 1), ('[android.content.res.cts.ConfigurationTest testSetLocale_overridesSetLocales None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/ConfigurationTest.java', 5), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityManagerGetConfigTests.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityManagerGetConfigTests.java', 1)]"	"[('(3,TOUCHSCREEN_NOTOUCH,/android/content/res/cts/ConfigTest.java)', 2), ('(9,Configuration.touchscreen,/android/content/res/cts/ConfigTest.java)', 2), ('(1,Configuration.touchscreen,/android/server/wm/ActivityManagerGetConfigTests.java)', 2), ('(3,TOUCHSCREEN_NOTOUCH,/android/app/cts/SystemFeaturesTest.java)', 1), ('(5,Configuration.touchscreen,/android/app/cts/SystemFeaturesTest.java)', 1), ('(1,TOUCHSCREEN_NOTOUCH,/android/content/res/cts/ConfigurationTest.java)', 1), ('(4,Configuration.touchscreen,/android/content/res/cts/ConfigurationTest.java)', 1)]"	"[('([1:/android/content/res/cts/ConfigTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[, R.configVarying.bag,                R.styleable.TestConfig, new String[]{""bag h670""});    }   ])', 2), ('([1:/android/content/res/cts/ConfigTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[configVarying.bag,                R.styleable.TestConfig, new String[]{""bag h670""});    }       ])', 2), ('([1:/android/content/res/cts/ConfigTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[gVarying.bag,                R.styleable.TestConfig, new String[]{""bag mcc111 mnc222""});    }   ])', 2), ('([1:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[1]:method_text:[{            fail(""Should be able to find application info for this package"");        }    }   ])', 2), ('([2:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[2]:method_text:[, R.configVarying.bag,                R.styleable.TestConfig, new String[]{""bag h670""});    }   ])', 2), ('([2:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[2]:method_text:[configVarying.bag,                R.styleable.TestConfig, new String[]{""bag h670""});    }       ])', 2), ('([1:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[1]:method_text:[gVarying.bag,                R.styleable.TestConfig, new String[]{""bag mcc111 mnc222""});    }   ])', 2), ('([3:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[3]:method_text:[nfigVarying.bag,                R.styleable.TestConfig, new String[]{""bag dpad 63x57""});    }   ])', 2), ('([1:/android/server/wm/ActivityManagerGetConfigTests.java]:[Configuration.touchscreen]:[1]:method_text:[""Expected features does not match"",                featureNames, deviceConfig.features);    }   ])', 2), ('([1:/android/content/res/cts/ConfigurationTest.java]:[Configuration.touchscreen]:[1]:method_text:[.densityDpi);        assertEquals(Configuration.COLOR_MODE_UNDEFINED, config.colorMode);    }   ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[RE_TOUCHSCREEN);            assertAvailable(PackageManager.FEATURE_FAKETOUCH);        }    }   ])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[TOUCHSCREEN_NOTOUCH]:[2]:method_text:[UCH_JAZZHAND)) {            assertAvailable(PackageManager.FEATURE_FAKETOUCH);        }    }   ])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[Configuration.touchscreen]:[2]:method_text:[RE_TOUCHSCREEN);            assertAvailable(PackageManager.FEATURE_FAKETOUCH);        }    }   ])', 1), ('([3:/android/app/cts/SystemFeaturesTest.java]:[Configuration.touchscreen]:[3]:method_text:[UCH_JAZZHAND)) {            assertAvailable(PackageManager.FEATURE_FAKETOUCH);        }    }   ])', 1), ('([1:/android/content/res/cts/ConfigurationTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[ation.NAVIGATION_NONAV;        mConfig.orientation = Configuration.ORIENTATION_PORTRAIT;    }   ])', 1), ('([1:/android/content/res/cts/ConfigurationTest.java]:[Configuration.touchscreen]:[1]:method_text:[ation.NAVIGATION_NONAV;        mConfig.orientation = Configuration.ORIENTATION_PORTRAIT;    }   ])', 1), ('([1:/android/content/res/cts/ConfigurationTest.java]:[Configuration.touchscreen]:[1]:method_text:[ assertEquals(config, readConf);        } finally {            parcel.recycle();        }    }}])', 1)]"	""	""	""	""	""
"175:521592) 7.2.4  . Touchscreen Input"	"7.2.4"	"C-3-2"	""	"[('android.app.cts.SystemFeaturesTest', 2)]"	""	""	""	"7.2.4/C-3-2"	"""C-3-2] MUST report only android.hardware.faketouch."""	"07020400.670302"	"android.hardware.faketouch"	""	""	""	"[('android.hardware.faketouch', 2)]"	""	"[('[android.app.cts.SystemFeaturesTest testTouchScreenFeatures None]', 1), ('[android.app.cts.SystemFeaturesTest testFakeTouchFeatures None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 2)]"	"[('(6,android.hardware.faketouch,/android/app/cts/SystemFeaturesTest.java)', 1)]"	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[android.hardware.faketouch]:[1]:method_text:[RE_TOUCHSCREEN);            assertAvailable(PackageManager.FEATURE_FAKETOUCH);        }    }   ])', 1), ('([5:/android/app/cts/SystemFeaturesTest.java]:[android.hardware.faketouch]:[5]:method_text:[UCH_JAZZHAND)) {            assertAvailable(PackageManager.FEATURE_FAKETOUCH);        }    }   ])', 1)]"	""	""	""	""	""
"178:530725) 7.2.6.1  . Button Mappings"	"7.2.6.1"	"C-2-1"	""	"[('android.scopedstorage.cts.device.ScopedStorageDeviceTest', 14), ('android.scopedstorage.cts.ScopedStorageTest', 10), ('android.content.res.cts.ConfigTest', 5), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 5), ('android.text.method.cts.HideReturnsTransformationMethodTest', 5), ('android.view.cts.KeyEventInterceptTest', 4), ('android.server.wm.PinnedStackTests', 4), ('com.android.cts.verifier.sensors.MotionIndicatorView', 3), ('android.app.usage.cts.UsageStatsTest', 3), ('android.transition.cts.ChangeTransformTest', 3), ('android.os.cts.EnvironmentTest', 3), ('android.net.wifi.cts.WifiManagerTest', 3), ('android.view.inputmethod.cts.SearchViewTest', 2), ('android.app.cts.AlertDialogTest', 2), ('android.view.cts.ViewConfigurationTest', 2), ('android.fragment.cts.FragmentTransitionTest', 2), ('com.android.cts.signedconfig.SignedConfigHostTest', 2), ('android.media.mediaparser.cts.MediaParserTest', 2), ('android.view.cts.ActionModeTest', 2), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 2), ('android.autofillservice.cts.dropdown.VirtualContainerActivityTest', 2), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 2), ('android.hardware.input.cts.tests.GameviceGv186Test', 2), ('android.view.cts.ASurfaceControlTest', 2), ('android.app.notification.legacy29.cts.NotificationAssistantServiceTest', 2), ('android.hardware.camera2.cts.CaptureRequestTest', 1), ('android.mediav2.cts.MuxerUnitTest', 1), ('android.hardware.input.cts.tests.NintendoSwitchProTest', 1), ('android.hardware.input.cts.tests.SonyDualshock4UsbTest', 1), ('android.animation.cts.AnimatorSetTest', 1), ('android.hardware.input.cts.tests.MicrosoftDesignerKeyboardTest', 1), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('com.android.cts.documentclient.ScopedDirectoryAccessClientTest', 1), ('android.renderscript.cts.ElementTest', 1), ('android.hardware.input.cts.tests.SonyDualshock4ProBluetoothTest', 1), ('android.os.cts.HwBinderTest', 1), ('com.android.cts.devicepolicy.MixedDeviceOwnerTest', 1), ('android.autofillservice.cts.inline.InlineAugmentedWebViewActivityTest', 1), ('android.app.cts.AlertDialog_BuilderTest', 1), ('android.view.cts.SystemGestureExclusionRectsTest', 1), ('java.android.signature.cts.api.BaseKillswitchTest', 1), ('android.car.cts.CarBluetoothTest', 1), ('com.android.cts.managedprofile.CrossProfileUtils', 1), ('android.widget.cts.AbsListViewTest', 1), ('android.view.cts.input.InputDeviceVibratorTest', 1), ('android.uirendering.cts.testclasses.XfermodeTest', 1)]"	"[('size', 11), ('getInstrumentation', 7), ('getTargets', 6), ('getEpicenterCallback', 6), ('getActivity', 4), ('getDevice', 4), ('getLastReportedRects', 4), ('setup', 3), ('getViewTreeObserver', 3), ('setUp', 3), ('setupInitialFragment', 2), ('TransitionFragment', 2), ('waitForTransition', 2), ('deleteConfig', 2), ('getContext', 2), ('countDown', 2), ('lock', 2), ('getVendorId', 2), ('getProductId', 2), ('getTargetContext', 2), ('stream', 2), ('toArray', 2), ('createSrc', 2), ('createDst', 2), ('transitionsEndUnchanged', 1), ('showHideTransition', 1), ('findBlue', 1), ('findGreen', 1), ('beginTransaction', 1), ('commit', 1), ('getView', 1), ('newTheme', 1), ('recycle', 1), ('TotalConfig', 1), ('Configuration', 1), ('setUpClass', 1), ('getPackageManager', 1), ('getName', 1), ('AccessibilityDumpOnFailureRule', 1), ('oneTimeSetup', 1), ('getUiAutomation', 1), ('ignoreHiddenViewRects', 1), ('init', 1), ('getGlobalExemptions', 1), ('getContentResolver', 1), ('getAction', 1), ('signal', 1), ('unlock', 1), ('waitForAdapterOn', 1), ('waitForAdapterOff', 1), ('enable', 1), ('rule', 1), ('getInputDeviceIds', 1), ('getVibrator', 1), ('hasVibrator', 1), ('tearDown', 1), ('close', 1), ('sum', 1), ('toString', 1), ('name', 1), ('configs', 1), ('getWindow', 1), ('CanvasClient', 1), ('Paint', 1)]"	""	""	"7.2.6.1/C-2-1"	"""C-2-1] MUST declare the feature flag android.hardware.gamepad Button HID Usage2 Android Button A1 0x09 0x0001 KEYCODE_BUTTON_A (96) B1 0x09 0x0002 KEYCODE_BUTTON_B (97) X1 0x09 0x0004 KEYCODE_BUTTON_X (99) Y1 0x09 0x0005 KEYCODE_BUTTON_Y (100) D-pad up1 D-pad down1 0x01 0x00393 AXIS_HAT_Y4 D-pad left1 D-pad right1 0x01 0x00393 AXIS_HAT_X4 Left shoulder button1 0x09 0x0007 KEYCODE_BUTTON_L1 (102) Right shoulder button1 0x09 0x0008 KEYCODE_BUTTON_R1 (103) Left stick click1 0x09 0x000E KEYCODE_BUTTON_THUMBL (106) Right stick click1 0x09 0x000F KEYCODE_BUTTON_THUMBR (107) Home1 0x0c 0x0223 KEYCODE_HOME (3) Back1 0x0c 0x0224 KEYCODE_BACK (4) 1 KeyEvent 2 The above HID usages must be declared within a Game pad CA (0x01 0x0005). 3 This usage must have a Logical Minimum of 0, a Logical Maximum of 7, a Physical Minimum of 0, a Physical Maximum of 315, Units in Degrees, and a Report Size of 4. The logical value is defined to be the clockwise rotation away from the vertical axis; for example, a logical value of 0 represents no rotation and the up button being pressed, while a logical value of 1 represents a rotation of 45 degrees and both the up and left keys being pressed. 4 <a href=""http://developer.android.com/reference/android/view/MotionEvent.html"">MotionEvent Analog Controls1 HID Usage Android Button Left Trigger 0x02 0x00C5 AXIS_LTRIGGER Right Trigger 0x02 0x00C4 AXIS_RTRIGGER Left Joystick 0x01 0x0030 0x01 0x0031 AXIS_X AXIS_Y Right Joystick 0x01 0x0032 0x01 0x0035 AXIS_Z AXIS_RZ 1 <a href=""http://developer.android.com/reference/android/view/MotionEvent.html"">MotionEvent <h4 id=""727_remote_control"" """	"07020601.670201"	"KEYCODE_BUTTON_THUMBR AXIS_RZ AXIS_Z KEYCODE_BUTTON_B KEYCODE_BACK MotionEvent.html KEYCODE_BUTTON_Y KEYCODE_BUTTON_A AXIS_HAT_X4 AXIS_Y KEYCODE_HOME AXIS_HAT_Y4 KEYCODE_BUTTON_X HID AXIS_LTRIGGER KEYCODE_BUTTON_L1 KEYCODE_BUTTON_THUMBL android.hardware.gamepad KEYCODE_BUTTON_R1 AXIS_RTRIGGER AXIS_X"	""	""	""	"[('HID', 98), ('KEYCODE_BACK', 5), ('AXIS_X', 2), ('KEYCODE_HOME', 2), ('AXIS_Z', 1), ('AXIS_Y', 1)]"	""	"[('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 3), ('[android.view.cts.ViewConfigurationTest testStaticValues None]', 2), ('[com.android.cts.signedconfig.SignedConfigHostTest uninstallTestApps None]', 2), ('[android.view.cts.ActionModeTest testHide None]', 2), ('[android.hardware.input.cts.tests.GameviceGv186Test GameviceGv186Test None]', 2), ('[android.view.inputmethod.cts.SearchViewTest testTapThenSetQuery None]', 1), ('[android.view.inputmethod.cts.SearchViewTest testShowImeWhenSearchViewFocusInListView None]', 1), ('[android.app.cts.AlertDialogTest testAlertDialogCancelable None]', 1), ('[android.app.cts.AlertDialogTest testAlertDialogNotCancelable None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[android.mediav2.cts.MuxerUnitTest TestName None]', 1), ('[android.fragment.cts.FragmentTransitionTest getVisibility None]', 1), ('[android.content.res.cts.ConfigTest DisplayMetrics None]', 1), ('[android.content.res.cts.ConfigTest testAllEmptyConfigs None]', 1), ('[android.content.res.cts.ConfigTest testAllClassicConfigs None]', 1), ('[android.content.res.cts.ConfigTest testPrecedence None]', 1), ('[android.content.res.cts.ConfigTest testCombinations None]', 1), ('[android.hardware.input.cts.tests.NintendoSwitchProTest NintendoSwitchProTest None]', 1), ('[android.view.cts.KeyEventInterceptTest testKeyCodeBackShortcutRightMeta None]', 1), ('[android.view.cts.KeyEventInterceptTest testKeyCodeHome None]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4UsbTest SonyDualshock4UsbTest None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testFlacWithId3 None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testMp3WithId3 None]', 1), ('[android.animation.cts.AnimatorSetTest testManipulateChildOutsideOfSet None]', 1), ('[android.hardware.input.cts.tests.MicrosoftDesignerKeyboardTest testAllKeys None]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled None]', 1), ('[com.android.cts.documentclient.ScopedDirectoryAccessClientTest testInvalidPath None]', 1), ('[android.renderscript.cts.ElementTest testDataType None]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4ProBluetoothTest SonyDualshock4ProBluetoothTest None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest postTestTearDown None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTooltipTextActionsReportedToAccessibility None]', 1), ('[android.app.usage.cts.UsageStatsTest testIsAppInactive_Charging None]', 1), ('[android.app.usage.cts.UsageStatsTest testInteractiveEvents None]', 1), ('[android.app.usage.cts.UsageStatsTest testLocusIdEventsVisibility None]', 1), ('[android.transition.cts.ChangeTransformTest testTranslation None]', 1), ('[android.transition.cts.ChangeTransformTest testRotation None]', 1), ('[android.transition.cts.ChangeTransformTest testScale None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSig None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigAndSplit None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigInvalidLength None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteData None]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteDataForSplit None]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testDisallowAutofill_allowed None]', 1), ('[android.autofillservice.cts.inline.InlineAugmentedWebViewActivityTest testAugmentedAutoFill_startTypingHideInline None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testInstantAppsCantAccessExternalStorage None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testCanCreateHiddenFile None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testCanRenameHiddenFile None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testHiddenDirectory None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testHiddenDirectory_nomedia None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testListHiddenFile None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testManageExternalStorageQueryOtherAppsFile None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testQueryOtherAppsFiles None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testSystemGalleryQueryOtherAppsFiles None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testNoIsolatedStorageQueryOtherAppsFile None]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetNeutralButtonWithParamCharSequence None]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testAutofillCallbacks None]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testDatasetFiltering None]', 1), ('[android.os.cts.EnvironmentTest testNoAtime None]', 1), ('[android.os.cts.EnvironmentTest testHidePid2 None]', 1), ('[android.os.cts.EnvironmentTest testHidePid2_direct None]', 1), ('[android.car.cts.CarBluetoothTest disable None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testRenameEmptyDirectory None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCanCreateHiddenFile None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testInodeStatConsistency None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCanRenameHiddenFile None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testHiddenDirectory None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testHiddenDirectory_nomedia None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testListHiddenFile None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testQueryOtherAppsFiles None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testSystemGalleryQueryOtherAppsFiles None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCanWriteToDCIMCameraWithNomedia None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testNoMediaDoesntHideSpecialDirectories None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCantSetAttrOtherAppsFile None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testScanUpdatesMetadataForRenamedHiddenFile None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testDeferredScanHidesPartialDatabaseRows None]', 1), ('[android.telephony.euicc.cts.DownloadableSubscriptionTest testGetConfirmationCode None]', 1), ('[android.telephony.euicc.cts.DownloadableSubscriptionTest testWriteToParcel None]', 1), ('[com.android.cts.managedprofile.CrossProfileUtils testDisableAllBrowsers None]', 1), ('[android.widget.cts.AbsListViewTest testSelectorOnScreen None]', 1), ('[android.server.wm.PinnedStackTests testRemovePipWithHiddenFullscreenOrFreeformStack None]', 1), ('[android.server.wm.PinnedStackTests testMovePipToBackWithHiddenFullscreenOrFreeformStack None]', 1), ('[android.server.wm.PinnedStackTests testEnterPipWithResumeWhilePausingActivityNoStop None]', 1), ('[android.server.wm.PinnedStackTests testPinnedStackWithDockedStack None]', 1), ('[android.net.wifi.cts.WifiManagerTest testMaxNumberOfNetworkSuggestionsPerApp None]', 1), ('[android.net.wifi.cts.WifiManagerTest testSetGetSoftApConfigurationAndSoftApCapabilityCallback None]', 1), ('[android.net.wifi.cts.WifiManagerTest testStartSubscriptionProvisioning None]', 1), ('[android.view.cts.input.InputDeviceVibratorTest isVibrating None]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setVisibility_hide None]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_setColorAndBuffer_hide None]', 1), ('[android.text.method.cts.HideReturnsTransformationMethodTest testConstructor None]', 1), ('[android.text.method.cts.HideReturnsTransformationMethodTest testGetOriginal None]', 1), ('[android.text.method.cts.HideReturnsTransformationMethodTest testGetInstance None]', 1), ('[android.text.method.cts.HideReturnsTransformationMethodTest testGetReplacement None]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationVisibilityChanged None]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnPanelRevealedAndHidden None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/device/src/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java', 14), ('/home/gpoor/cts-source/cts/hostsidetests/scopedstorage/src/android/scopedstorage/cts/ScopedStorageTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/HideReturnsTransformationMethodTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyEventInterceptTest.java', 4), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PinnedStackTests.java', 4), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MotionIndicatorView.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeTransformTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/EnvironmentTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/SearchViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlertDialogTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/FragmentTransitionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/GameviceGv186Test.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy29/src/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/MuxerUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/NintendoSwitchProTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/signedconfig/hostside/src/com/android/cts/signedconfig/SignedConfigHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/animation/src/android/animation/cts/AnimatorSetTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/MicrosoftDesignerKeyboardTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/DocumentClient/src/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ActionModeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/ElementTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualshock4ProBluetoothTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineAugmentedWebViewActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ActionModeTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/signedconfig/hostside/src/com/android/cts/signedconfig/SignedConfigHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/SystemGestureExclusionRectsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/signature/api-check/src/java/android/signature/cts/api/BaseKillswitchTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarBluetoothTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/AbsListViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceVibratorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/XfermodeTest.java', 1)]"	"[('(1,HID,/android/view/cts/ViewConfigurationTest.java)', 2), ('(1,HID,/com/android/cts/signedconfig/SignedConfigHostTest.java)', 2), ('(4,HID,/android/view/cts/ActionModeTest.java)', 2), ('(3,HID,/android/view/inputmethod/cts/SearchViewTest.java)', 1), ('(2,KEYCODE_BACK,/android/app/cts/AlertDialogTest.java)', 1), ('(1,HID,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,HID,/android/mediav2/cts/MuxerUnitTest.java)', 1), ('(2,AXIS_Z,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(2,AXIS_Y,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(2,AXIS_X,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(3,HID,/android/fragment/cts/FragmentTransitionTest.java)', 1), ('(18,HID,/android/content/res/cts/ConfigTest.java)', 1), ('(5,HID,/android/hardware/input/cts/tests/NintendoSwitchProTest.java)', 1), ('(4,KEYCODE_BACK,/android/view/cts/KeyEventInterceptTest.java)', 1), ('(4,KEYCODE_HOME,/android/view/cts/KeyEventInterceptTest.java)', 1), ('(1,HID,/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java)', 1), ('(2,HID,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(7,HID,/android/animation/cts/AnimatorSetTest.java)', 1), ('(1,HID,/android/hardware/input/cts/tests/MicrosoftDesignerKeyboardTest.java)', 1), ('(2,HID,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(1,HID,/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java)', 1), ('(1,HID,/android/renderscript/cts/ElementTest.java)', 1), ('(1,HID,/android/hardware/input/cts/tests/SonyDualshock4ProBluetoothTest.java)', 1), ('(3,HID,/android/os/cts/HwBinderTest.java)', 1), ('(4,HID,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(15,HID,/android/app/usage/cts/UsageStatsTest.java)', 1), ('(3,HID,/android/transition/cts/ChangeTransformTest.java)', 1), ('(5,HID,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(3,HID,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(1,HID,/android/autofillservice/cts/inline/InlineAugmentedWebViewActivityTest.java)', 1), ('(103,HID,/android/scopedstorage/cts/ScopedStorageTest.java)', 1), ('(1,KEYCODE_BACK,/android/app/cts/AlertDialog_BuilderTest.java)', 1), ('(2,HID,/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java)', 1), ('(5,HID,/android/os/cts/EnvironmentTest.java)', 1), ('(6,HID,/android/view/cts/SystemGestureExclusionRectsTest.java)', 1), ('(1,HID,/java/android/signature/cts/api/BaseKillswitchTest.java)', 1), ('(2,HID,/android/car/cts/CarBluetoothTest.java)', 1), ('(110,HID,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(2,HID,/android/telephony/euicc/cts/DownloadableSubscriptionTest.java)', 1), ('(2,HID,/com/android/cts/managedprofile/CrossProfileUtils.java)', 1), ('(2,HID,/android/hardware/input/cts/tests/GameviceGv186Test.java)', 1), ('(1,AXIS_X,/android/hardware/input/cts/tests/GameviceGv186Test.java)', 1), ('(2,HID,/android/widget/cts/AbsListViewTest.java)', 1), ('(8,HID,/android/server/wm/PinnedStackTests.java)', 1), ('(4,HID,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(1,HID,/android/view/cts/input/InputDeviceVibratorTest.java)', 1), ('(2,HID,/android/view/cts/ASurfaceControlTest.java)', 1), ('(14,HID,/android/text/method/cts/HideReturnsTransformationMethodTest.java)', 1), ('(1,HID,/android/uirendering/cts/testclasses/XfermodeTest.java)', 1), ('(4,HID,/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java)', 1)]"	"[('([5:/android/scopedstorage/cts/ScopedStorageTest.java]:[HID]:[5]:method_text:[rAppMusic, otherAppPdf, otherHiddenFile);            uninstallApp(TEST_APP_A);        }    }   ])', 3), ('([1:/android/view/cts/ViewConfigurationTest.java]:[HID]:[1]:method_text:[ration.getKeyRepeatDelay();        ViewConfiguration.getDefaultActionModeHideDuration();    }   ])', 2), ('([1:/com/android/cts/signedconfig/SignedConfigHostTest.java]:[HID]:[1]:method_text:[  assertThat(getDevice().installPackage(getTestApk(apkName), false, extraArgs)).isNull();    }   ])', 2), ('([4:/android/view/cts/ActionModeTest.java]:[HID]:[4]:method_text:[;        actionMode.hide(0);        actionMode.hide(ActionMode.DEFAULT_HIDE_DURATION);    }   ])', 2), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[HID]:[1]:method_text:[                      ""Failure""));        assertFalse(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 2), ('([1:/android/view/cts/ASurfaceControlTest.java]:[HID]:[1]:method_text:[return pixelCount > 9000 && pixelCount < 11000;                    }                });    }   ])', 2), ('([2:/android/view/inputmethod/cts/SearchViewTest.java]:[HID]:[2]:method_text:[uals(event.getEventName()), TIMEOUT);            expectImeInvisible(TIMEOUT);        }    }   ])', 1), ('([1:/android/view/inputmethod/cts/SearchViewTest.java]:[HID]:[1]:method_text:[w getView(int i, View view, ViewGroup viewGroup) {            return mSearchView;        }    }}])', 1), ('([1:/android/app/cts/AlertDialogTest.java]:[KEYCODE_BACK]:[1]:method_text:[ync(KeyEvent.KEYCODE_BACK);        PollingCheck.waitFor(() -> mActivity.onCancelCalled);    }   ])', 1), ('([1:/android/app/cts/AlertDialogTest.java]:[KEYCODE_BACK]:[1]:method_text:[.sendKeyDownUpSync(KeyEvent.KEYCODE_BACK);        assertFalse(mActivity.onCancelCalled);    }   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[HID]:[1]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/mediav2/cts/MuxerUnitTest.java]:[HID]:[1]:method_text:[taInfo.flags = 0;            muxer.writeSampleData(trackID, metaBuff, metaInfo);        }       ])', 1), ('([2:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[AXIS_Z]:[2]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([2:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[AXIS_Y]:[2]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([2:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[AXIS_X]:[2]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[HID]:[1]:method_text:[rCallback());    }    // Ensure that transitions are done when a fragment is shown and hidden   ])', 1), ('([2:/android/fragment/cts/FragmentTransitionTest.java]:[HID]:[2]:method_text:[gment2);    }    // Ensure that transitions are done when a fragment is attached and detached   ])', 1), ('([5:/android/content/res/cts/ConfigTest.java]:[HID]:[5]:method_text:[{            fail(""Should be able to find application info for this package"");        }    }   ])', 1), ('([2:/android/content/res/cts/ConfigTest.java]:[HID]:[2]:method_text:[, R.configVarying.bag,                R.styleable.TestConfig, new String[]{""bag h670""});    }   ])', 1), ('([2:/android/content/res/cts/ConfigTest.java]:[HID]:[2]:method_text:[configVarying.bag,                R.styleable.TestConfig, new String[]{""bag h670""});    }       ])', 1), ('([2:/android/content/res/cts/ConfigTest.java]:[HID]:[2]:method_text:[gVarying.bag,                R.styleable.TestConfig, new String[]{""bag mcc111 mnc222""});    }   ])', 1), ('([7:/android/content/res/cts/ConfigTest.java]:[HID]:[7]:method_text:[nfigVarying.bag,                R.styleable.TestConfig, new String[]{""bag dpad 63x57""});    }   ])', 1), ('([5:/android/hardware/input/cts/tests/NintendoSwitchProTest.java]:[HID]:[5]:method_text:[id-nintendo probe is done, add a delay here.         */        SystemClock.sleep(1000);    }   ])', 1), ('([2:/android/view/cts/KeyEventInterceptTest.java]:[KEYCODE_BACK]:[2]:method_text:[y = mActivityRule.getActivity();        PollingCheck.waitFor(mActivity::hasWindowFocus);    }   ])', 1), ('([2:/android/view/cts/KeyEventInterceptTest.java]:[KEYCODE_BACK]:[2]:method_text:[tEquals(keyCode, keyEvent.getKeyCode());        assertEquals(action, keyEvent.getAction());    }}])', 1), ('([3:/android/view/cts/KeyEventInterceptTest.java]:[KEYCODE_HOME]:[3]:method_text:[y = mActivityRule.getActivity();        PollingCheck.waitFor(mActivity::hasWindowFocus);    }   ])', 1), ('([1:/android/view/cts/KeyEventInterceptTest.java]:[KEYCODE_HOME]:[1]:method_text:[    public void testKeyCodeHome() {        testKey(KeyEvent.KEYCODE_HOME);    }    ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4UsbTest.java]:[HID]:[1]:method_text:[getKernelVersion();        return compareMajorMinorVersion(kVersionString, ""3.18"") >= 0;    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[HID]:[1]:method_text:[lacWithId3() throws IOException {        testAssetExtraction(""flac/bear_with_id3.flac"");    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[HID]:[1]:method_text:[hId3() throws IOException {        testAssetExtraction(""mp3/bear-id3.mp3"");    }    // WAV.   ])', 1), (""([7:/android/animation/cts/AnimatorSetTest.java]:[HID]:[7]:method_text:[     *     * This test verifies that custom ValueAnimators will be start()'ed in a set.     */   ])"", 1), ('([1:/android/hardware/input/cts/tests/MicrosoftDesignerKeyboardTest.java]:[HID]:[1]:method_text:[{        assertEquals(testCase + "" (source)"", expectedSource & actualSource, actualSource);    }}])', 1), ('([2:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[HID]:[2]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([1:/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java]:[HID]:[1]:method_text:[;        }        openExternalDirectoryInvalidPath(getPrimaryVolume(), DIRECTORY_ROOT);    }   ])', 1), ('([1:/android/renderscript/cts/ElementTest.java]:[HID]:[1]:method_text:[ption e) {                }                break;            }            }        }    }   ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4ProBluetoothTest.java]:[HID]:[1]:method_text:[ualshock4ProBluetoothTest() {        super(R.raw.sony_dualshock4pro_bluetooth_register);    }   ])', 1), ('([3:/android/os/cts/HwBinderTest.java]:[HID]:[3]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[HID]:[1]:method_text:[          sInstrumentation, sUiAutomation, mActivityRule);    }    @MediumTest    @Presubmit   ])', 1), ('([3:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[HID]:[3]:method_text:[List())));        assertTrue(hasTooltipShowing(R.id.buttonWithTooltip));    }    @MediumTest   ])', 1), ('([11:/android/app/usage/cts/UsageStatsTest.java]:[HID]:[11]:method_text:[ interval);        }    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([3:/android/app/usage/cts/UsageStatsTest.java]:[HID]:[3]:method_text:[        mUiDevice.wakeUp();            executeShellCmd(""wm dismiss-keyguard"");        }    }   ])', 1), ('([1:/android/app/usage/cts/UsageStatsTest.java]:[HID]:[1]:method_text:[        } catch(Exception e) {                return true;            }        }, false);    }}])', 1), ('([1:/android/transition/cts/ChangeTransformTest.java]:[HID]:[1]:method_text:[.getTranslationX(), 0.0f);        assertEquals(600f, redSquare.getTranslationY(), 0.0f);    }   ])', 1), ('([1:/android/transition/cts/ChangeTransformTest.java]:[HID]:[1]:method_text:[ecute.        waitForEnd(800);        assertEquals(45f, redSquare.getRotation(), 0.0f);    }   ])', 1), ('([1:/android/transition/cts/ChangeTransformTest.java]:[HID]:[1]:method_text:[(2f, redSquare.getScaleX(), 0.0f);        assertEquals(3f, redSquare.getScaleY(), 0.0f);    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[HID]:[1]:method_text:[{        installPackage(TEST_APK);        assertTrue(isAppInstalled(TEST_APP_PACKAGE));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[HID]:[1]:method_text:[ST_APP_PACKAGE));        assertEquals(""base, config.hdpi"", getSplits(TEST_APP_PACKAGE));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[HID]:[1]:method_text:[_APP_PACKAGE));    }    static class TestDataLoaderService extends DataLoaderService {    }   ])', 1), ('([3:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[HID]:[3]:method_text:[ser(                DEVICE_ADMIN_PKG, "".AffiliationTest"", ""testSetAffiliationId1"", userId);    }}])', 1), ('([1:/android/autofillservice/cts/inline/InlineAugmentedWebViewActivityTest.java]:[HID]:[1]:method_text:[Request.structure, tag);        return AutofillId.withoutSession(viewNode.getAutofillId());    }}])', 1), ('([1:/android/scopedstorage/cts/ScopedStorageTest.java]:[HID]:[1]:method_text:[ts()).isFalse();    }    /**     * Test that apps can create and delete hidden file.     */   ])', 1), ('([15:/android/scopedstorage/cts/ScopedStorageTest.java]:[HID]:[15]:method_text:[eFile.delete();        }    }    /**     * Test that apps can rename a hidden file.     */   ])', 1), ('([21:/android/scopedstorage/cts/ScopedStorageTest.java]:[HID]:[21]:method_text:[   }    /**     * Test that files in hidden directory have MEDIA_TYPE=MEDIA_TYPE_NONE     */   ])', 1), ('([24:/android/scopedstorage/cts/ScopedStorageTest.java]:[HID]:[24]:method_text:[    /**     * Test that files in directory with nomedia have MEDIA_TYPE=MEDIA_TYPE_NONE     */   ])', 1), ('([6:/android/scopedstorage/cts/ScopedStorageTest.java]:[HID]:[6]:method_text:[/**     * Test that only file manager and app that created the hidden file can list it.     */   ])', 1), ('([15:/android/scopedstorage/cts/ScopedStorageTest.java]:[HID]:[15]:method_text:[         hiddenImageFile.delete();            uninstallAppNoThrow(TEST_APP_A);        }    }   ])', 1), (""([6:/android/scopedstorage/cts/ScopedStorageTest.java]:[HID]:[6]:method_text:[hey contain other apps' contents that     * System Gallery doesn't have read access to.     */   ])"", 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[KEYCODE_BACK]:[1]:method_text:[wing                    return showing;                }            }        }.run();    }   ])', 1), ('([1:/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java]:[HID]:[1]:method_text:[        callback.assertUiShownEvent(mActivity.mCustomView, mActivity.mPassword.text.id);    }   ])', 1), ('([1:/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java]:[HID]:[1]:method_text:[nCompatMode() {        assumeTrue(""test not applicable when on compat mode"", !mCompatMode);    }}])', 1), ('([1:/android/os/cts/EnvironmentTest.java]:[HID]:[1]:method_text:[               }            }        }    }    /**     * verify hidepid=2 on /proc     */   ])', 1), ('([3:/android/os/cts/EnvironmentTest.java]:[HID]:[3]:method_text:[l(""proc filesystem mounted without hidepid=2"");                }            }        }    }   ])', 1), ('([1:/android/os/cts/EnvironmentTest.java]:[HID]:[1]:method_text:[itable block filesystems are mounted with ""resgid"" to     * mitigate disk-full trouble.     */   ])', 1), ('([6:/android/view/cts/SystemGestureExclusionRectsTest.java]:[HID]:[6]:method_text:[  public void onAnimationEnd(Animator animation) {            mLatch.countDown();        }    }}])', 1), ('([1:/java/android/signature/cts/api/BaseKillswitchTest.java]:[HID]:[1]:method_text:[c Predicate<DexMember> FIELD_FILTER =            dexMember -> (dexMember instanceof DexField);   ])', 1), ('([2:/android/car/cts/CarBluetoothTest.java]:[HID]:[2]:method_text:[ented), or for the    // configured timeout. If all required profiles connect, the test passes.   ])', 1), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[HID]:[1]:method_text:[ete();        }    }    /**     * Test that apps can create and delete hidden file.     */   ])', 1), ('([14:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[HID]:[14]:method_text:[  * Test that FUSE upper-fs is consistent with lower-fs after the lower-fs fd is closed.     */   ])', 1), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[HID]:[1]:method_text:[ file.delete();        }    }    /**     * Test that apps can rename a hidden file.     */   ])', 1), ('([21:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[HID]:[21]:method_text:[   }    /**     * Test that files in hidden directory have MEDIA_TYPE=MEDIA_TYPE_NONE     */   ])', 1), ('([24:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[HID]:[24]:method_text:[    /**     * Test that files in directory with nomedia have MEDIA_TYPE=MEDIA_TYPE_NONE     */   ])', 1), ('([6:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[HID]:[6]:method_text:[/**     * Test that only file manager and app that created the hidden file can list it.     */   ])', 1), ('([14:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[HID]:[14]:method_text:[PPOPS);            }        } finally {            hiddenImageFile.delete();        }    }   ])', 1), ('([5:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[HID]:[5]:method_text:[esAs(APP_B_NO_PERMS, otherAppImg, otherAppMusic, otherAppPdf, otherHiddenFile);        }    }   ])', 1), (""([6:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[HID]:[6]:method_text:[hey contain other apps' contents that     * System Gallery doesn't have read access to.     */   ])"", 1), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[HID]:[1]:method_text:[ b/182479650: Test that Screenshots directory is not hidden because of .nomedia presence     */   ])', 1), ('([4:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[HID]:[4]:method_text:[}    /**     * Test that readdir lists unsupported file types in default directories.     */   ])', 1), (""([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[HID]:[1]:method_text:[}    /**     * b/171768780: Test that scan doesn't skip scanning renamed hidden file.     */   ])"", 1), ('([11:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[HID]:[11]:method_text:[     } finally {            hiddenFile.delete();            jpgFile.delete();        }    }   ])', 1), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[HID]:[1]:method_text:[ified that "" + imageFilePath + "" was excluded in default query"");            }        }    }   ])', 1), ('([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[HID]:[1]:method_text:[adableSubscription);        assertNull(mDownloadableSubscription.getConfirmationCode());    }   ])', 1), (""([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[HID]:[1]:method_text:[r        // DownloadableSubscription#accessRules on Android P so we can't verify them here.    }}])"", 1), ('([2:/com/android/cts/managedprofile/CrossProfileUtils.java]:[HID]:[2]:method_text:[ApplicationHidden(ADMIN_RECEIVER_COMPONENT, ri.activityInfo.packageName, true);        }    }   ])', 1), ('([2:/android/hardware/input/cts/tests/GameviceGv186Test.java]:[HID]:[2]:method_text:[  expectedEvent.getAxisValue(axis), actualEvent.getAxisValue(axis), TOLERANCE);        }    }   ])', 1), ('([1:/android/hardware/input/cts/tests/GameviceGv186Test.java]:[AXIS_X]:[1]:method_text:[  expectedEvent.getAxisValue(axis), actualEvent.getAxisValue(axis), TOLERANCE);        }    }   ])', 1), ('([2:/android/widget/cts/AbsListViewTest.java]:[HID]:[2]:method_text:[mListView.getSelectedItemPosition());        assertTrue(mListView.shouldDrawSelector());    }   ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[HID]:[3]:method_text:[P_ACTIVITY,                WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_HOME, windowingMode);    }   ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[HID]:[3]:method_text:[              PIP_ACTIVITY, WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_HOME, windowingMode);    }   ])', 1), ('([1:/android/server/wm/PinnedStackTests.java]:[HID]:[1]:method_text:[        launchActivity(RESUME_WHILE_PAUSING_ACTIVITY);        assertPinnedStackExists();    }   ])', 1), ('([1:/android/server/wm/PinnedStackTests.java]:[HID]:[1]:method_text:[G_ACTIVITY, true);            mWmState.assertVisibility(TEST_ACTIVITY, false);        }    }   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[HID]:[2]:method_text:[tap capability callback to test different     * configuration.     * @throws Exception     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[HID]:[1]:method_text:[ Verify that startTetheredHotspot with specific channel config.     * @throws Exception     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[HID]:[1]:method_text:[**     * Tests {@link WifiManager#setTdlsEnabled(InetAddress, boolean)} does not crash.     */   ])', 1), ('([1:/android/view/cts/input/InputDeviceVibratorTest.java]:[HID]:[1]:method_text:[r state listener        verify(mListener, never()).onVibratorStateChanged(anyBoolean());    }   ])', 1), ('([3:/android/text/method/cts/HideReturnsTransformationMethodTest.java]:[HID]:[3]:method_text:[ */@SmallTest@RunWith(AndroidJUnit4.class)public class HideReturnsTransformationMethodTest {   ])', 1), ('([1:/android/text/method/cts/HideReturnsTransformationMethodTest.java]:[HID]:[1]:method_text:[    public void testConstructor() {        new HideReturnsTransformationMethod();    }    ])', 1), (""([2:/android/text/method/cts/HideReturnsTransformationMethodTest.java]:[HID]:[2]:method_text:[nformationMethod();        assertArrayEquals(new char[] { '\\r' }, method.getOriginal());    }   ])"", 1), ('([4:/android/text/method/cts/HideReturnsTransformationMethodTest.java]:[HID]:[4]:method_text:[d1 = HideReturnsTransformationMethod.getInstance();        assertSame(method0, method1);    }   ])', 1), ('([4:/android/text/method/cts/HideReturnsTransformationMethodTest.java]:[HID]:[4]:method_text:[    protected char[] getReplacement() {            return super.getReplacement();        }    }}])', 1), ('([1:/android/uirendering/cts/testclasses/XfermodeTest.java]:[HID]:[1]:method_text:[;            dstCanvas.drawOval(mDstRect, dstPaint);            return dstB;        }    };   ])', 1), ('([3:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[HID]:[3]:method_text:[ssistantService.notificationHiddenCount > 0);        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[HID]:[1]:method_text:[e(mNotificationAssistantService.isPanelOpen);        mUi.dropShellPermissionIdentity();    }   ])', 1)]"	"http://developer.android.com"	""	""	""	""
"180:536916) 7.3  . Sensors"	"7.3"	"C-1-6"	""	"[('android.view.inputmethod.cts.InputMethodServiceTest', 6), ('android.view.inputmethod.cts.InputMethodStartInputLifecycleTest', 4), ('android.media.cts.AudioRecordTest', 4), ('android.telephony.cts.SmsManagerTest', 4), ('android.server.wm.KeyguardLockedTests', 2), ('android.view.inputmethod.cts.ImeInsetsVisibilityTest', 2), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 2), ('android.view.inputmethod.cts.PackageVisibilityTest', 2), ('android.inputmethodservice.cts.devicetest.MultiUserDeviceTest', 2), ('android.view.inputmethod.cts.KeyboardVisibilityControlTest', 2), ('android.hardware.camera2.cts.CaptureResultTest', 2), ('android.view.inputmethod.cts.FocusHandlingTest', 2), ('android.view.inputmethod.cts.InputConnectionBlockingMethodTest', 2), ('android.hardware.camera2.cts.DngCreatorTest', 2), ('android.server.wm.WindowInsetsControllerTests', 2), ('android.hardware.cts.SensorTest', 2), ('android.server.wm.MultiDisplaySystemDecorationTests', 2), ('android.uwb.cts.RangingMeasurementTest', 1), ('android.server.wm.ActivityViewTest', 1), ('android.print.cts.InterfaceForAppsTest', 1), ('android.print.cts.PrinterCapabilitiesTest', 1), ('android.print.cts.PrintAttributesTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.location.cts.coarse.LocationManagerCoarseTest', 1), ('android.net.cts.DnsTest', 1), ('android.view.cts.input.InputDeviceSensorManagerTest', 1), ('android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test', 1), ('android.webkit.cts.GeolocationTest', 1), ('android.print.cts.PrintJobTest', 1), ('android.hardware.consumerir.cts.ConsumerIrTest', 1)]"	"[('UnlockScreenRule', 6), ('size', 4), ('getDefaults', 4), ('hasWindowFocus', 4), ('getId', 4), ('build', 3), ('getMock', 2), ('getSession', 2), ('toString', 2), ('getMediaSizes', 2), ('getResolutions', 2), ('requestFocus', 2), ('get', 2), ('getViewTreeObserver', 2), ('countDown', 2), ('initiate_getCurrentPosition', 2), ('getValidTimestamp', 1), ('elapsedRealtimeNanos', 1), ('getInvalidTimestamp', 1), ('changedPrintJobInfo', 1), ('sanePrinterCapabilityInfos', 1), ('getService', 1), ('getCapabilities', 1), ('getMediaSize', 1), ('getResolution', 1), ('getColorModes', 1), ('getColorMode', 1), ('getDuplexModes', 1), ('getDuplexMode', 1), ('getMinMargins', 1), ('getSimpleName', 1), ('Builder', 1), ('getPrinters', 1), ('Object', 1), ('waitForConnection', 1), ('currentThread', 1), ('interrupt', 1), ('gotLocation', 1), ('errorDenied', 1), ('errorUnavailable', 1), ('errorTimeout', 1), ('advancedOption', 1)]"	""	""	"7.3/C-1-6"	"""C-1-6] MUST report the event time in nanoseconds as defined in the Android SDK documentation, representing the time the event happened and synchronized with the SystemClock.elapsedRealtimeNano() clock. && C-1-6] MUST report the event time in nanoseconds as defined in the Android SDK documentation, representing the time the event happened and synchronized with the SystemClock.elapsedRealtimeNano() clock. | C-1-6] MUST set a non-zero resolution for all sensors, and report the value via the Sensor.getResolution() API method. Some sensor types are composite, meaning they can be derived from data provided by one or more other sensors. (Examples include the orientation sensor and the linear acceleration sensor.) Device implementations: SHOULD implement these sensor types, when they include the prerequisite physical sensors as described in sensor types. If device implementations include a composite sensor, they: """	"07030000.670106"	"getResolution() elapsedRealtimeNano() SystemClock.elapsedRealtimeNano Sensor.getResolution"	""	""	""	"[('SystemClock.elapsedRealtimeNano', 51), ('getResolution()', 5), ('Sensor.getResolution', 1)]"	""	"[('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap None]', 2), ('[android.view.inputmethod.cts.InputMethodServiceTest testSendDownUpKeyEvents None]', 2), ('[android.view.inputmethod.cts.InputMethodServiceTest testOnUpdateCursorAnchorInfo None]', 2), ('[android.view.inputmethod.cts.ImeInsetsVisibilityTest getTestMarker None]', 2), ('[android.view.inputmethod.cts.PackageVisibilityTest getTestMarker None]', 2), ('[android.inputmethodservice.cts.devicetest.MultiUserDeviceTest testConnectingToTheSameUserIme None]', 2), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest getTestMarker None]', 2), ('[android.view.inputmethod.cts.InputMethodStartInputLifecycleTest testInputConnectionStateWhenScreenStateChanges None]', 2), ('[android.view.inputmethod.cts.InputMethodStartInputLifecycleTest testNoStartNewInputWhileOtherProcessHasWindowFocus None]', 2), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps None]', 2), ('[android.view.inputmethod.cts.FocusHandlingTest getTestMarker None]', 2), ('[android.media.cts.AudioRecordTest testTimestamp None]', 2), ('[android.media.cts.AudioRecordTest testGetActiveRecordingConfiguration None]', 2), ('[android.view.inputmethod.cts.InputConnectionBlockingMethodTest getTestMarker None]', 2), ('[android.telephony.cts.SmsManagerTest testSmsRetriever None]', 2), ('[android.telephony.cts.SmsManagerTest testSmsBlocking None]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageThumbnail None]', 2), ('[android.hardware.cts.SensorTest testBatchAndFlushWithMultipleSensors None]', 2), ('[android.server.wm.MultiDisplaySystemDecorationTests testImeWindowCanShownWhenActivityMovedToDisplay None]', 2), ('[android.uwb.cts.RangingMeasurementTest testBuilder None]', 1), ('[android.server.wm.ActivityViewTest testInputMethod None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest uptimeMillis None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest testVerify_no_events_fail None]', 1), ('[android.print.cts.InterfaceForAppsTest currentTimeMillis None]', 1), ('[android.print.cts.PrinterCapabilitiesTest onPrinterDiscoverySessionCreateCalled None]', 1), ('[android.print.cts.PrintAttributesTest isEmpty None]', 1), ('[android.hardware.cts.SensorDirectReportTest testCloseWithoutConfigStop None]', 1), ('[android.location.cts.coarse.LocationManagerCoarseTest testGnssProvidedClock None]', 1), ('[android.view.inputmethod.cts.InputMethodServiceTest testCursorAfterLaunchAnotherActivity None]', 1), ('[android.view.inputmethod.cts.InputMethodServiceTest testImeVisibleAfterRotation None]', 1), ('[android.net.cts.DnsTest testDnsWorks None]', 1), ('[android.server.wm.WindowInsetsControllerTests testDispatchApplyWindowInsetsCount_ime None]', 1), ('[android.view.cts.input.InputDeviceSensorManagerTest assertNoDisconnection None]', 1), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOffOnOff None]', 1), ('[android.server.wm.WindowInsetsControllerTests testWindowInsetsController_availableAfterAddView None]', 1), ('[android.webkit.cts.GeolocationTest GeolocationTest None]', 1), ('[android.print.cts.PrintJobTest createFirstMockPrinterDiscoverySessionCallbacks None]', 1), ('[android.hardware.consumerir.cts.ConsumerIrTest test_timing None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodServiceTest.java', 4), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodServiceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioRecordTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SmsManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SmsManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioRecordTest.java', 2), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/uwb/src/android/uwb/cts/RangingMeasurementTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityViewTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/PackageVisibilityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/InterfaceForAppsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/MultiUserDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrinterCapabilitiesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/PackageVisibilityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/FocusHandlingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrintAttributesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_coarse/src/android/location/cts/coarse/LocationManagerCoarseTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/DnsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/FocusHandlingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsControllerTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/MultiUserDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceSensorManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DirectReportAPI30/src/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsControllerTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/GeolocationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySystemDecorationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrintJobTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/consumerir/cts/ConsumerIrTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySystemDecorationTests.java', 1)]"	"[('(1,SystemClock.elapsedRealtimeNano,/android/server/wm/KeyguardLockedTests.java)', 2), ('(1,SystemClock.elapsedRealtimeNano,/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java)', 2), ('(1,SystemClock.elapsedRealtimeNano,/android/view/inputmethod/cts/PackageVisibilityTest.java)', 2), ('(1,SystemClock.elapsedRealtimeNano,/android/inputmethodservice/cts/devicetest/MultiUserDeviceTest.java)', 2), ('(1,SystemClock.elapsedRealtimeNano,/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java)', 2), ('(2,SystemClock.elapsedRealtimeNano,/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java)', 2), ('(2,SystemClock.elapsedRealtimeNano,/android/hardware/camera2/cts/CaptureResultTest.java)', 2), ('(1,SystemClock.elapsedRealtimeNano,/android/view/inputmethod/cts/FocusHandlingTest.java)', 2), ('(2,SystemClock.elapsedRealtimeNano,/android/media/cts/AudioRecordTest.java)', 2), ('(1,SystemClock.elapsedRealtimeNano,/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java)', 2), ('(3,SystemClock.elapsedRealtimeNano,/android/telephony/cts/SmsManagerTest.java)', 2), ('(2,SystemClock.elapsedRealtimeNano,/android/hardware/camera2/cts/DngCreatorTest.java)', 2), ('(1,SystemClock.elapsedRealtimeNano,/android/server/wm/WindowInsetsControllerTests.java)', 2), ('(3,SystemClock.elapsedRealtimeNano,/android/server/wm/MultiDisplaySystemDecorationTests.java)', 2), ('(1,SystemClock.elapsedRealtimeNano,/android/uwb/cts/RangingMeasurementTest.java)', 1), ('(2,SystemClock.elapsedRealtimeNano,/android/view/inputmethod/cts/InputMethodServiceTest.java)', 1), ('(1,SystemClock.elapsedRealtimeNano,/android/server/wm/ActivityViewTest.java)', 1), ('(4,SystemClock.elapsedRealtimeNano,/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java)', 1), ('(1,getResolution(),/android/print/cts/InterfaceForAppsTest.java)', 1), ('(1,getResolution(),/android/print/cts/PrinterCapabilitiesTest.java)', 1), ('(2,getResolution(),/android/print/cts/PrintAttributesTest.java)', 1), ('(5,SystemClock.elapsedRealtimeNano,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(2,SystemClock.elapsedRealtimeNano,/android/location/cts/coarse/LocationManagerCoarseTest.java)', 1), ('(4,SystemClock.elapsedRealtimeNano,/android/view/inputmethod/cts/InputMethodServiceTest.java)', 1), ('(4,SystemClock.elapsedRealtimeNano,/android/net/cts/DnsTest.java)', 1), ('(1,SystemClock.elapsedRealtimeNano,/android/view/cts/input/InputDeviceSensorManagerTest.java)', 1), ('(3,SystemClock.elapsedRealtimeNano,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(8,getResolution(),/android/hardware/cts/SensorTest.java)', 1), ('(8,Sensor.getResolution,/android/hardware/cts/SensorTest.java)', 1), ('(1,SystemClock.elapsedRealtimeNano,/android/webkit/cts/GeolocationTest.java)', 1), ('(1,getResolution(),/android/print/cts/PrintJobTest.java)', 1), ('(4,SystemClock.elapsedRealtimeNano,/android/hardware/consumerir/cts/ConsumerIrTest.java)', 1)]"	"[('([1:/android/server/wm/KeyguardLockedTests.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 2), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[putMethodService#onUpdateCursorAnchorInfo(CursorAnchorInfo)}     * will be called back.     */   ])', 2), ('([1:/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[    }    @Rule    public final UnlockScreenRule mUnlockScreenRule = new UnlockScreenRule();   ])', 2), ('([1:/android/inputmethodservice/cts/devicetest/MultiUserDeviceTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[EOUT_MILLISEC, TimeUnit.MILLISECONDS);        assertEquals(Process.myUserHandle(), result);    }}])', 2), ('([1:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[onNull String marker) {        return launchTestActivity(marker, getTestMarker()).first;    }   ])', 2), ('([1:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[able window hosted by a different process     * temporarily becomes the focused window.     */   ])', 2), ('([1:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[Matcher() {        return event -> TextUtils.equals(""onFinishInput"", event.getEventName());    }}])', 2), ('([2:/android/hardware/camera2/cts/CaptureResultTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 2), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[KER_PREFIX + ""/""  + SystemClock.elapsedRealtimeNanos();    }    @FlakyTest(bugId = 149246840)   ])', 2), ('([1:/android/media/cts/AudioRecordTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[                record.release();                record = null;            }        }    }   ])', 2), ('([1:/android/media/cts/AudioRecordTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[nstrumentation().getTargetContext();    }    /*     * Microphone Direction API tests     */   ])', 2), ('([1:/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[ /**     * Test {@link InputConnection#getTextAfterCursor(int, int)} works as expected.     */   ])', 2), (""([2:/android/telephony/cts/SmsManagerTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[network doesn't support Data(binary) SMS message.            // Skip the test.        }    }   ])"", 2), (""([1:/android/telephony/cts/SmsManagerTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[SM network doesn't support Multipart SMS message.            // Skip the test.        }    }   ])"", 2), ('([2:/android/hardware/camera2/cts/DngCreatorTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 2), ('([3:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[SystemClock.elapsedRealtimeNano]:[3]:method_text:[e);        assertEquals(""Display bounds not the same"", displayBounds, displayBoundsForIme);    }}])', 2), ('([1:/android/uwb/cts/RangingMeasurementTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[urement.Builder.build() to succeed"");            }        }        return measurement;    }   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[fo);            assertEquals(receivedCursorAnchorInfo, originalCursorAnchorInfo);        }    }}])', 1), ('([1:/android/server/wm/ActivityViewTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[     }        ActivityView getActivityView() {            return mActivityView;        }    }}])', 1), ('([2:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[ }    /**     * Test that the verification passes when there are not missing events.     */   ])', 1), ('([2:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[tion(expectedUs);        verification.addSensorEvents(events);        return verification;    }}])', 1), ('([1:/android/view/inputmethod/cts/PackageVisibilityTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[return () -> TestUtils.forceStopPackage(TEST_ACTIVITY.getPackageName());    }    @AppModeFull   ])', 1), ('([1:/android/print/cts/InterfaceForAppsTest.java]:[getResolution()]:[1]:method_text:[etCreationTime());        assertTrue(job.getInfo().getCreationTime() <= afterStart + 5000);    }}])', 1), ('([1:/android/print/cts/PrinterCapabilitiesTest.java]:[getResolution()]:[1]:method_text:[     * of historical reasons.     *     * @throws Exception If anything is unexpected     */   ])', 1), ('([1:/android/view/inputmethod/cts/PackageVisibilityTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[il.hasObject(By.pkg(TEST_ACTIVITY.getPackageName()).depth(0)), timeout);    }    @AppModeFull   ])', 1), ('([2:/android/print/cts/PrintAttributesTest.java]:[getResolution()]:[2]:method_text:[ibutes to the first selection.     *     * @throws Exception If anything is unexpected     */   ])', 1), ('([5:/android/hardware/cts/SensorDirectReportTest.java]:[SystemClock.elapsedRealtimeNano]:[5]:method_text:[der.nativeOrder());        return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned    }}])', 1), ('([2:/android/location/cts/coarse/LocationManagerCoarseTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[  return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_LOCATION_GPS);    }}])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[  /** Test that no exception is thrown when {@link InputMethodService#getDisplay()} is called */   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[    assertEquals(newSelectionEnd, newCursorPosition + firstCommitMsg.length());        }    }   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[            this.mIsTestingTextView = isTestingTextView;            return this;        }    }}])', 1), ('([4:/android/net/cts/DnsTest.java]:[SystemClock.elapsedRealtimeNano]:[4]:method_text:[ECONDS));        } finally {            mCm.unregisterNetworkCallback(callback);        }    }}])', 1), ('([1:/android/server/wm/WindowInsetsControllerTests.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[    dialog.getWindow().addFlags(FLAG_ALT_FOCUSABLE_IM);            dialog.show();        }    }}])', 1), ('([1:/android/view/cts/input/InputDeviceSensorManagerTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[tLooper());    }    @After    public void tearDown() {        mUinputDevice.close();    }   ])', 1), ('([3:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[SystemClock.elapsedRealtimeNano]:[3]:method_text:[                        > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([1:/android/server/wm/WindowInsetsControllerTests.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[ck(ANIMATION_CALLBACK);            getWindow().getInsetsController().show(ime());        }    }}])', 1), ('([8:/android/hardware/cts/SensorTest.java]:[getResolution()]:[8]:method_text:[ sensor.getFifoReservedEventCount() == 0);        }    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([8:/android/hardware/cts/SensorTest.java]:[Sensor.getResolution]:[8]:method_text:[ sensor.getFifoReservedEventCount() == 0);        }    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([1:/android/webkit/cts/GeolocationTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[ept, mRetain);        }    }    // Test loading a page and accepting the domain for one load   ])', 1), ('([1:/android/print/cts/PrintJobTest.java]:[getResolution()]:[1]:method_text:[     if (!testSuccess[0]) {            throw new Exception(""Did not succeed"");        }    }   ])', 1), ('([4:/android/hardware/consumerir/cts/ConsumerIrTest.java]:[SystemClock.elapsedRealtimeNano]:[4]:method_text:[ assertTrue(msg, newTime - currentTime <= totalXmitTimeNanos * (1.0 + margin));        }    }   ])', 1)]"	""	""	""	""	""
"190:576119) 7.3.10  . Biometric Sensors"	"7.3.10"	"C-3-4"	""	"[('android.hardware.camera2.cts.CaptureRequestTest', 21), ('test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest', 20), ('android.fragment.cts.FragmentTransitionTest', 14), ('android.hardware.camera2.cts.StillCaptureTest', 12), ('android.widget.cts.MagnifierTest', 6), ('android.server.wm.KeyguardLockedTests', 6), ('android.view.inspector.cts.IntFlagMappingTest', 5), ('android.uirendering.cts.testclasses.RenderNodeTests', 3), ('android.content.pm.cts.PackageItemInfoIconTest', 3), ('android.media.cts.MediaDrmMetricsTest', 3), ('com.android.cts.dexmetadata.InstallDexMetadataTest', 2), ('android.hardware.input.cts.tests.NintendoSwitchProTest', 2), ('android.media.cts.MediaDrmTest', 2), ('android.util.cts.TimingLoggerTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerStartShortcutTest', 2), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 2), ('android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest', 1), ('android.mediav2.cts.MuxerUnitTest', 1), ('android.security.cts.PerfEventParanoidTest', 1), ('android.content.res.cts.ConfigTest', 1), ('android.webkit.cts.WebViewTest', 1), ('android.autofillservice.cts.servicebehavior.DisableAutofillTest', 1), ('android.autofillservice.cts.DisableAutofillTest', 1), ('android.provider.cts.SmsBackupRestoreTest', 1), ('android.animation.cts.AnimatorSetTest', 1), ('android.server.wm.DragDropTest', 1), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('android.telephony.sdk28.cts.CellInfoTest', 1), ('android.os.lib.consumer1.UseSharedLibraryTest', 1), ('android.media.cts.MediaMuxerTest', 1), ('android.transition.cts.ChangeClipBoundsTest', 1), ('android.security.cts.ARTBootASLRTest', 1)]"	"[('waitForTransition', 35), ('findBlue', 30), ('size', 30), ('findGreen', 23), ('getValue', 20), ('TransitionFragment', 15), ('setupInitialFragment', 14), ('beginTransaction', 14), ('commit', 13), ('capture', 12), ('any', 8), ('getTargets', 6), ('getEpicenterCallback', 6), ('findRed', 6), ('setUp', 5), ('SharedElementCallback', 4), ('popBackStack', 4), ('TrackingTransition', 4), ('getActivity', 3), ('tearDown', 2), ('activities', 2), ('packages', 2), ('packageName', 2), ('resolve', 2), ('installedOnUsers', 2), ('Runnable', 2), ('run', 2), ('ComplexTransitionFragment', 2), ('getView', 2), ('getCapturedEpicenter', 2), ('toString', 2), ('TransitionSet', 2), ('DeviceState', 1), ('user_returnsUserReference', 1), ('user', 1), ('activities_any_returnsActivity', 1), ('uninstall_uninstalls', 1), ('uninstall', 1), ('autoclose_uninstalls', 1), ('keepAlive_notInstalled_throwsException', 1), ('stop_previouslyCalledKeepAlive_processDoesNotRestart', 1), ('start', 1), ('keepAlive', 1), ('stop', 1), ('reference', 1), ('runningProcesses', 1), ('enterExitTransitions', 1), ('sharedElement', 1), ('intermediateFragment', 1), ('removeAdded', 1), ('callStartEndWithSharedElements', 1), ('onMapSharedElementOut', 1), ('onMapSharedElementIn', 1), ('complexSharedElementTransition', 1), ('transitionsEndUnchanged', 1), ('showHideTransition', 1), ('attachDetachTransition', 1), ('sharedDuplicateTargetNames', 1), ('noSharedElementTransition', 1), ('getTrackedTargets', 1), ('stream', 1), ('clearTargets', 1), ('getWidth', 1), ('getHeight', 1), ('newTheme', 1), ('recycle', 1), ('TotalConfig', 1), ('Configuration', 1), ('supportsSecureLock', 1), ('setUpClass', 1), ('getInstrumentation', 1), ('getContext', 1), ('getPackageManager', 1)]"	""	""	"7.3.10/C-3-4"	"""C-3-4] MUST challenge the user for the recommended primary authentication (e.g. PIN, pattern, password) once every 72 hours or less."""	"07031000.670304"	"PIN"	""	""	""	"[('PIN', 121)]"	""	"[('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testInputUnbindsOnAppStopInstant None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testLensShadingMap None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAeModeAndLock None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashTurnOff None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFaceDetection None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testToneMapControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testColorCorrectionControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testEdgeModeControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testEdgeModeControlFastFps None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFocusDistanceControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testNoiseReductionModeControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testNoiseReductionModeControlFastFps None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAwbModeAndLock None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAfModes None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testCameraStabilizations None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testDigitalZoom None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testZoomRatio None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testDigitalZoomPreviewCombinations None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testEffectModes None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIdempotentRelease None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest TestApis None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest testApp_returnsTestApp None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest isNotNull None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest killProcess_keepAlive_processIsRunningAgain None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest stop_processIsNotRunning None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest isEmpty None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest process_isNotRunning_returnsNull None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest process_isRunning_isNotNull None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_receivesBroadcast None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_multipleIntentFilters_receivesAllMatchingBroadcasts None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_processIsRunning None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest stop_registeredReceiver_doesNotReceiveBroadcast None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest unregisterReceiver_registeredReceiver_doesNotReceiveBroadcast None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest unregisterReceiver_doesNotUnregisterOtherReceivers None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest keepAlive_processIsRunning None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_appIsKilled_stillReceivesBroadcast None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataTest testNoDm None]', 1), ('[android.security.cts.PerfEventParanoidTest testPerfEventRestricted None]', 1), ('[android.fragment.cts.FragmentTransitionTest getVisibility None]', 1), ('[android.fragment.cts.FragmentTransitionTest sharedElementMismatch None]', 1), ('[android.content.res.cts.ConfigTest DisplayMetrics None]', 1), ('[android.webkit.cts.WebViewTest testAppInjectedXRequestedWithHeaderIsNotOverwritten None]', 1), ('[android.hardware.input.cts.tests.NintendoSwitchProTest testAllKeys None]', 1), ('[android.hardware.input.cts.tests.NintendoSwitchProTest testAllMotions None]', 1), ('[android.autofillservice.cts.servicebehavior.DisableAutofillTest testDisableActivity None]', 1), ('[android.widget.cts.MagnifierTest testBuilder_setsPropertiesCorrectly_whenTheyAreValid None]', 1), ('[android.widget.cts.MagnifierTest testMagnifierDefaultParameters_withDeprecatedConstructor None]', 1), ('[android.widget.cts.MagnifierTest testMagnifierDefaultParameters_withBuilder None]', 1), ('[android.widget.cts.MagnifierTest testWindowPosition_isNotClamped_whenClampingFlagIsOff_topLeft None]', 1), ('[android.widget.cts.MagnifierTest testWindowPosition_isNotClamped_whenClampingFlagIsOff_bottomRight None]', 1), ('[android.widget.cts.MagnifierTest testSourcePosition_respectsMaxInSurfaceBounds_forSurfaceView None]', 1), ('[android.autofillservice.cts.DisableAutofillTest testDisableActivity None]', 1), ('[android.provider.cts.SmsBackupRestoreTest testSmsBackupRestore None]', 1), ('[android.uirendering.cts.testclasses.RenderNodeTests testDefaults None]', 1), ('[android.uirendering.cts.testclasses.RenderNodeTests testAlphaOverlappingRendering None]', 1), ('[android.uirendering.cts.testclasses.RenderNodeTests testAlphaNonOverlappingRendering None]', 1), ('[android.animation.cts.AnimatorSetTest testGetCurrentPlayTime None]', 1), ('[android.media.cts.MediaDrmTest testPlaybackComponent None]', 1), ('[android.media.cts.MediaDrmTest testRequiresSecureDecoder None]', 1), ('[android.server.wm.DragDropTest testAcceptingGroupInTheMiddle None]', 1), ('[android.content.pm.cts.PackageItemInfoIconTest testFromAppInfo None]', 1), ('[android.content.pm.cts.PackageItemInfoIconTest testFromActivity None]', 1), ('[android.content.pm.cts.PackageItemInfoIconTest testDelegatedFromAppInfo None]', 1), ('[android.util.cts.TimingLoggerTest testTimingLogger None]', 1), ('[android.view.inspector.cts.IntFlagMappingTest testNonExclusiveFlags None]', 1), ('[android.view.inspector.cts.IntFlagMappingTest testMutuallyExclusiveFlags None]', 1), ('[android.view.inspector.cts.IntFlagMappingTest testMixedFlags None]', 1), ('[android.view.inspector.cts.IntFlagMappingTest testNullName None]', 1), ('[android.server.wm.KeyguardLockedTests testEnterPipOverKeyguard None]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedActivityAndPipActivity None]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedPipActivity None]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardPipActivity None]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap None]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled None]', 1), ('[android.media.cts.MediaDrmMetricsTest testGetMetricsEmpty None]', 1), ('[android.media.cts.MediaDrmMetricsTest testGetMetricsSession None]', 1), ('[android.media.cts.MediaDrmMetricsTest testGetMetricsGetKeyRequest None]', 1), ('[android.telephony.sdk28.cts.CellInfoTest testCellInfoSdk28 None]', 1), ('[android.os.lib.consumer1.UseSharedLibraryTest testAppCanSeeOnlyLibrariesItDependOn None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerStartShortcutTest testPinnedShortcut_sameLauncher None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerStartShortcutTest testPinnedShortcut_differentLauncher None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testJpegExif None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testHeicExif None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testDynamicDepthCapture None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testTakePicture None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testTakePictureZsl None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testTouchForFocus None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testStillPreviewCombination None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testAeCompensation None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testPreviewPersistence None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testAePrecaptureTriggerCancelJpegCapture None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testAllocateBitmap None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths None]', 1), ('[android.media.cts.MediaMuxerTest testTimestampsStartOffsetNegativeAudioVideo None]', 1), ('[android.transition.cts.ChangeClipBoundsTest testChangeClipBounds None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTypeNotificationStateChangedAccessibilityEvent None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTouchDelegateInfoReportedToAccessibility None]', 1), ('[android.security.cts.ARTBootASLRTest testARTASLR None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 21), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/testapp/src/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java', 20), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/FragmentTransitionTest.java', 14), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 12), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/MagnifierTest.java', 6), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/inspector/cts/IntFlagMappingTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/RenderNodeTests.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageItemInfoIconTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaDrmMetricsTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/dexmetadata/app/src/com/android/cts/dexmetadata/InstallDexMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/NintendoSwitchProTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaDrmTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/TimingLoggerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerStartShortcutTest.java', 2), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/inputmethodservice/hostside/src/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/MuxerUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/PerfEventParanoidTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/DisableAutofillTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/DisableAutofillTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/SmsBackupRestoreTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/animation/src/android/animation/cts/AnimatorSetTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DragDropTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/sdk28/src/android/telephony/sdk28/cts/CellInfoTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/os/test-apps/StaticSharedLibConsumerApp1/src/android/os/lib/consumer1/UseSharedLibraryTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/transition/src/android/transition/cts/ChangeClipBoundsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/ARTBootASLRTest.java', 1)]"	"[('(1,PIN,/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java)', 1), ('(40,PIN,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,PIN,/android/mediav2/cts/MuxerUnitTest.java)', 1), ('(67,PIN,/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java)', 1), ('(2,PIN,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 1), ('(1,PIN,/android/security/cts/PerfEventParanoidTest.java)', 1), ('(19,PIN,/android/fragment/cts/FragmentTransitionTest.java)', 1), ('(2,PIN,/android/content/res/cts/ConfigTest.java)', 1), ('(1,PIN,/android/webkit/cts/WebViewTest.java)', 1), ('(2,PIN,/android/hardware/input/cts/tests/NintendoSwitchProTest.java)', 1), ('(1,PIN,/android/autofillservice/cts/servicebehavior/DisableAutofillTest.java)', 1), ('(16,PIN,/android/widget/cts/MagnifierTest.java)', 1), ('(1,PIN,/android/autofillservice/cts/DisableAutofillTest.java)', 1), ('(1,PIN,/android/provider/cts/SmsBackupRestoreTest.java)', 1), ('(7,PIN,/android/uirendering/cts/testclasses/RenderNodeTests.java)', 1), ('(1,PIN,/android/animation/cts/AnimatorSetTest.java)', 1), ('(2,PIN,/android/media/cts/MediaDrmTest.java)', 1), ('(1,PIN,/android/server/wm/DragDropTest.java)', 1), ('(8,PIN,/android/content/pm/cts/PackageItemInfoIconTest.java)', 1), ('(2,PIN,/android/util/cts/TimingLoggerTest.java)', 1), ('(38,PIN,/android/view/inspector/cts/IntFlagMappingTest.java)', 1), ('(12,PIN,/android/server/wm/KeyguardLockedTests.java)', 1), ('(2,PIN,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(3,PIN,/android/media/cts/MediaDrmMetricsTest.java)', 1), ('(1,PIN,/android/telephony/sdk28/cts/CellInfoTest.java)', 1), ('(2,PIN,/android/os/lib/consumer1/UseSharedLibraryTest.java)', 1), ('(8,PIN,/android/content/pm/cts/shortcutmanager/ShortcutManagerStartShortcutTest.java)', 1), ('(18,PIN,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(2,PIN,/android/media/cts/MediaMuxerTest.java)', 1), ('(3,PIN,/android/transition/cts/ChangeClipBoundsTest.java)', 1), ('(9,PIN,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(1,PIN,/android/security/cts/ARTBootASLRTest.java)', 1)]"	"[('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[            assertThat(testApp.reference().runningProcess(sUser)).isNotNull();        }    }   ])', 2), ('([4:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[4]:method_text:[action().isEqualTo(INTENT_ACTION);            assertThat(logs.get()).isNull();        }    }   ])', 2), ('([3:/android/widget/cts/MagnifierTest.java]:[PIN]:[3]:method_text:[        assertEquals(overlayColor, ((ColorDrawable) magnifier.getOverlay()).getColor());    }   ])', 2), ('([2:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[2]:method_text:[tKeyguardShowingAndNotOccluded();        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 2), ('([1:/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java]:[PIN]:[1]:method_text:[-instant) apps.     *     * <p>Regression test for Bug 152876819.</p>     */    @AppModeFull   ])', 1), ('([4:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[4]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[anti-banding modes, check if the exposure time adjustment is     * correct.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[ test the flash control     * and {@link CaptureResult#FLASH_STATE} result.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[f given various initial and final     * AE_CONTROL modes for repeating CaptureRequests.     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[2]:method_text:[);            }        }    }    /**     * Test face detection modes and results.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[evice();            }        }    }    /**     * Test tone map modes and controls.     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[2]:method_text:[            }        }    }    /**     * Test color correction modes and controls.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[      }        }    }    /**     * Test edge mode control for Fps not exceeding 30.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[       }        }    }    /**     * Test edge mode control for Fps greater than 30.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[oseDevice();            }        }    }    /**     * Test focus distance control.     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[2]:method_text:[       }    }    /**     * Test noise reduction mode for fps ranges not exceeding 30     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[        }    }    /**     * Test noise reduction mode for fps ranges greater than 30     */   ])', 1), (""([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[ <p>The color correction gain and transform shouldn't be changed when AWB is locked.</p>     */   ])"", 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[   closeDevice();            }        }    }    /**     * Test different AF modes.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[();            }        }    }    /**     * Test video and optical stabilizations.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[validate the returned crop regions.     * The max preview size is used for each camera.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[turned crop regions and zoom ratio.     * The max preview size is used for each camera.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[ombinations.     * TODO: this and above test should all be moved to preview test class.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[  closeDevice();            }        }    }    /**     * Test scene mode controls.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[vice();            }        }    }    /**     * Test extended scene mode controls.     */   ])', 1), ('([14:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[14]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/mediav2/cts/MuxerUnitTest.java]:[PIN]:[1]:method_text:[       private native boolean nativeTestIfWriteSampleDataSucceedsAfterStop(String outPath);       ])', 1), ('([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[1]:method_text:[    @Before    public void setup() {        mTestAppProvider = new TestAppProvider();    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[ = testApp.instance(sUser);        assertThat(testAppInstance.user()).isEqualTo(sUser);    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[stApp.instance(sUser);        assertThat(testAppInstance.testApp()).isEqualTo(testApp);    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[ser)) {            assertThat(testAppInstance.activities().any()).isNotNull();        }    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[= null) {            assertThat(pkg.installedOnUsers()).doesNotContain(sUser);        }    }   ])', 1), ('([2:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[2]:method_text:[= null) {            assertThat(pkg.installedOnUsers()).doesNotContain(sUser);        }    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[e(sUser);        assertThrows(IllegalStateException.class, testAppInstance::keepAlive);    }   ])', 1), (""([4:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[4]:method_text:[fter stopKeepAlive it does not restart, as we'd have to wait an    // unbounded amount of time   ])"", 1), ('([4:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[4]:method_text:[p();            assertThat(testApp.reference().runningProcesses()).isEmpty();        }    }   ])', 1), ('([5:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[5]:method_text:[p();            assertThat(testApp.reference().runningProcesses()).isEmpty();        }    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[p.install(sUser)) {            assertThat(testAppInstance.process()).isNull();        }    }   ])', 1), ('([4:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[4]:method_text:[.any().start();            assertThat(testAppInstance.process()).isNotNull();        }    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[on().isEqualTo(INTENT_ACTION);            assertThat(logs.poll()).isNotNull();        }    }   ])', 1), ('([4:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[4]:method_text:[hat(logs.poll()).isNotNull();            assertThat(logs2.poll()).isNotNull();        }    }   ])', 1), ('([5:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[5]:method_text:[ertThat(logs.get()).isNull();            assertThat(logs2.poll()).isNotNull();        }    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[ction().isEqualTo(INTENT_ACTION);            assertThat(logs.poll()).isNotNull();        }    }}])', 1), ('([1:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[PIN]:[1]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 1), ('([1:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[PIN]:[1]:method_text:[     result.put(codePath, dexMetadataPath);            }        }        return result;    }}])', 1), ('([1:/android/security/cts/PerfEventParanoidTest.java]:[PIN]:[1]:method_text:[    getDevice().hasFeature(""feature:android.hardware.security.model.compatible""));        }    }}])', 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[/ Test that shared elements transition from one fragment to the next    // and back during pop.   ])', 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[es);    }    // Test that shared element transitions through multiple fragments work together   ])', 1), (""([2:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[2]:method_text:[ent2);    }    // Adding/removing the same fragment multiple times shouldn't mess anything up   ])"", 1), (""([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[    }    // Make sure that shared elements on two different fragment containers don't interact   ])"", 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[));    }    // Make sure that onMapSharedElement works to change the shared element going out   ])', 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[reen);    }    // Make sure that onMapSharedElement works to change the shared element target   ])', 1), ('([3:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[3]:method_text:[    }    // Ensure that shared element transitions that have targets properly target the views   ])', 1), (""([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[itions have executed that they don't have any targets or other    // unfortunate modifications.   ])"", 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[rCallback());    }    // Ensure that transitions are done when a fragment is shown and hidden   ])', 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[gment2);    }    // Ensure that transitions are done when a fragment is attached and detached   ])', 1), (""([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[t2);    }    // Ensure that shared element without matching transition name doesn't error out   ])"", 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[   }    // Ensure that using the same source or target shared element results in an exception.   ])', 1), (""([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[cted        }    }    // Test that invisible fragment views don't participate in transitions   ])"", 1), ('([3:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[3]:method_text:[bility(View.INVISIBLE);            super.onViewCreated(view, savedInstanceState);        }    }}])', 1), ('([2:/android/content/res/cts/ConfigTest.java]:[PIN]:[2]:method_text:[{            fail(""Should be able to find application info for this package"");        }    }   ])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[PIN]:[1]:method_text:[matchingHeaders[0];        assertEquals(requester, header.getValue());    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/input/cts/tests/NintendoSwitchProTest.java]:[PIN]:[1]:method_text:[ar devices"", isWatch());        testInputEvents(R.raw.nintendo_switchpro_keyeventtests);    }   ])', 1), ('([1:/android/hardware/input/cts/tests/NintendoSwitchProTest.java]:[PIN]:[1]:method_text:[ext().getPackageManager();        return pm.hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([1:/android/autofillservice/cts/servicebehavior/DisableAutofillTest.java]:[PIN]:[1]:method_text:[+ ""ms, passedTime=""                + passedTime + "")"");        SystemClock.sleep(napTime);    }}])', 1), ('([5:/android/widget/cts/MagnifierTest.java]:[PIN]:[5]:method_text:[g, magnifier.isClippingEnabled());        assertEquals(overlay, magnifier.getOverlay());    }   ])', 1), ('([2:/android/widget/cts/MagnifierTest.java]:[PIN]:[2]:method_text:[* mMagnifier.getHeight() / 2, magnifierCoords.y,                PIXEL_COMPARISON_DELTA);    }   ])', 1), ('([2:/android/widget/cts/MagnifierTest.java]:[PIN]:[2]:method_text:[                + mMagnifier.getHeight() / 2, magnifierCoords.y, PIXEL_COMPARISON_DELTA);    }   ])', 1), ('([1:/android/widget/cts/MagnifierTest.java]:[PIN]:[1]:method_text:[gnifier.getSourceHeight() / 2, sourcePosition.y,                PIXEL_COMPARISON_DELTA);    }   ])', 1), ('([1:/android/autofillservice/cts/DisableAutofillTest.java]:[PIN]:[1]:method_text:[+ ""ms, passedTime=""                + passedTime + "")"");        SystemClock.sleep(napTime);    }}])', 1), ('([1:/android/provider/cts/SmsBackupRestoreTest.java]:[PIN]:[1]:method_text:[peBackup(LOCAL_BACKUP_COMPONENT, TELEPHONY_PROVIDER_PACKAGE,                mUiAutomation);    }}])', 1), ('([1:/android/uirendering/cts/testclasses/RenderNodeTests.java]:[PIN]:[1]:method_text:[tFalse(renderNode.hasShadow());        assertFalse(renderNode.getUseCompositingLayer());    }   ])', 1), ('([3:/android/uirendering/cts/testclasses/RenderNodeTests.java]:[PIN]:[3]:method_text:[}, true)              .runWithVerifier(new RectVerifier(Color.WHITE, 0xFF8080FF, rect));    }   ])', 1), ('([3:/android/uirendering/cts/testclasses/RenderNodeTests.java]:[PIN]:[3]:method_text:[ true)                .runWithVerifier(new RectVerifier(Color.WHITE, 0xFF8040BF, rect));    }   ])', 1), ('([1:/android/animation/cts/AnimatorSetTest.java]:[PIN]:[1]:method_text:[nother 100ms to end.        verify(setListener, within(200)).onAnimationEnd(set, false);    }   ])', 1), ('([1:/android/media/cts/MediaDrmTest.java]:[PIN]:[1]:method_text:[ported1, supported2, ""secure decoder requirements inconsistent"");            }        }    }   ])', 1), ('([1:/android/media/cts/MediaDrmTest.java]:[PIN]:[1]:method_text:["" + scheme, e);            } finally {                drm.close();            }        }    }}])', 1), ('([1:/android/server/wm/DragDropTest.java]:[PIN]:[1]:method_text:[   /**     * Tests that state_drag_hovered and state_drag_can_accept are set correctly.     */   ])', 1), ('([3:/android/content/pm/cts/PackageItemInfoIconTest.java]:[PIN]:[3]:method_text:[edItemIcon(itemInfo, appInfo);        assertTrue(comparePixelData(expectedIcon, icon));    }   ])', 1), ('([2:/android/content/pm/cts/PackageItemInfoIconTest.java]:[PIN]:[2]:method_text:[edItemIcon(itemInfo, appInfo);        assertTrue(comparePixelData(expectedIcon, icon));    }   ])', 1), ('([3:/android/content/pm/cts/PackageItemInfoIconTest.java]:[PIN]:[3]:method_text:[UnbadgedIcon(mPackageManager);        assertTrue(comparePixelData(expectedIcon, icon));    }   ])', 1), ('([1:/android/util/cts/TimingLoggerTest.java]:[PIN]:[1]:method_text:[ic final String LOG_TAG = ""TimingLoggerTest"";    private static final int SLEEPING_MSEC = 100;   ])', 1), ('([1:/android/util/cts/TimingLoggerTest.java]:[PIN]:[1]:method_text:[          Thread.sleep(SLEEPING_MSEC);        } catch (InterruptedException e) {        }    }}])', 1), ('([3:/android/view/inspector/cts/IntFlagMappingTest.java]:[PIN]:[3]:method_text:[agMapping}. */@SmallTest@RunWith(AndroidJUnit4.class)public final class IntFlagMappingTest {   ])', 1), ('([10:/android/view/inspector/cts/IntFlagMappingTest.java]:[PIN]:[10]:method_text:[  assertEquals(setOf(""ONE"", ""TWO""), mapping.get(3));        assertEmpty(mapping.get(4));    }   ])', 1), ('([10:/android/view/inspector/cts/IntFlagMappingTest.java]:[PIN]:[10]:method_text:[apping.get(2));        assertEmpty(mapping.get(3));        assertEmpty(mapping.get(4));    }   ])', 1), ('([14:/android/view/inspector/cts/IntFlagMappingTest.java]:[PIN]:[14]:method_text:[tOf(""TWO"", ""FOUR""), mapping.get(6));        assertEquals(setOf(""FOUR""), mapping.get(7));    }   ])', 1), ('([1:/android/view/inspector/cts/IntFlagMappingTest.java]:[PIN]:[1]:method_text:[e static void assertEmpty(Collection collection) {        assertTrue(collection.isEmpty());    }}])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[1]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([4:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[4]:method_text:[t contain pinned stack."", WINDOWING_MODE_PINNED,                ACTIVITY_TYPE_STANDARD);    }   ])', 1), ('([2:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[2]:method_text:[SHOW_WHEN_LOCKED_ACTIVITY, true);        mWmState.assertVisibility(PIP_ACTIVITY, false);    }   ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[1]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([2:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[PIN]:[2]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([1:/android/media/cts/MediaDrmMetricsTest.java]:[PIN]:[1]:method_text:[etrics.keySet().contains(GOOGLE_CLEARKEY_VENDOR_ID));        drm.close();    }    @Presubmit   ])', 1), ('([1:/android/media/cts/MediaDrmMetricsTest.java]:[PIN]:[1]:method_text:[   BaseEncoding.base16().encode(sid2).toLowerCase()));       drm.close();    }    @Presubmit   ])', 1), ('([1:/android/media/cts/MediaDrmMetricsTest.java]:[PIN]:[1]:method_text:[ng(hexSid),            lessThanOrEqualTo(endTimesMs.getLong(hexSid)));        drm.close();    }}])', 1), ('([1:/android/telephony/sdk28/cts/CellInfoTest.java]:[PIN]:[1]:method_text:[        }        fail(""CellInfo failed to update after "" + MAX_WAIT_SECONDS + "" seconds."");    }}])', 1), ('([2:/android/os/lib/consumer1/UseSharedLibraryTest.java]:[PIN]:[2]:method_text:[LongVersionCode();            }        }        assertEquals(1L, usedLibraryVersionCode);    }}])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerStartShortcutTest.java]:[PIN]:[3]:method_text:[assertShortcutStarts(mLauncherContext1, mPackageContext1, ""s1"", EXPECTED_ACTIONS_SINGLE);    }   ])', 1), ('([5:/android/content/pm/cts/shortcutmanager/ShortcutManagerStartShortcutTest.java]:[PIN]:[5]:method_text:[assertShortcutStarts(mLauncherContext1, mPackageContext1, ""s1"", EXPECTED_ACTIONS_SINGLE);    }   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[PIN]:[1]:method_text:[        }        }    }    /**     * Test HEIC capture exif fields for each camera.     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[PIN]:[2]:method_text:[  }    }    /**     * Test dynamic depth capture along with preview for each camera.     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[PIN]:[2]:method_text:[peg. The AWB and AE are in auto modes. AF mode     * is CONTINUOUS_PICTURE.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[PIN]:[1]:method_text:[   * is CONTINUOUS_PICTURE. Same as testTakePicture, but with enableZSL set.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[PIN]:[1]:method_text:[ Test basic Raw capture. Raw buffer avaiablility is checked, but raw buffer data is not.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[PIN]:[1]:method_text:[     * result validation is covered by {@link #stillExifTestByCamera} test.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[PIN]:[1]:method_text:[ed when AE     * compensation settings is changed, even when AE lock is ON.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[PIN]:[2]:method_text:[eader();            }        }    }    /**     * Test Ae region for still capture.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[PIN]:[1]:method_text:[               closeDevice();                closeImageReader();            }        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[PIN]:[2]:method_text:[ages produced by the largest resolution camera sensor on     * the devices.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[PIN]:[1]:method_text:[mageReader();            }        }    }    /**     * Test focal length controls.     */   ])', 1), ('([3:/android/hardware/camera2/cts/StillCaptureTest.java]:[PIN]:[3]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([2:/android/media/cts/MediaMuxerTest.java]:[PIN]:[2]:method_text:[dvance) {            fail(""either audio track has not reached its last sample"");        }    }}])', 1), ('([3:/android/transition/cts/ChangeClipBoundsTest.java]:[PIN]:[3]:method_text:[   && midClip.bottom < redSquare.getBottom() && midClip.bottom > newClip.bottom;        };    }}])', 1), ('([3:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[PIN]:[3]:method_text:[notificationManager.deleteNotificationChannel(channel.getId());        }    }    @MediumTest   ])', 1), ('([6:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[PIN]:[6]:method_text:["",                node.getViewIdResourceName());        node.recycle();    }    @MediumTest   ])', 1), ('([1:/android/security/cts/ARTBootASLRTest.java]:[PIN]:[1]:method_text:[oot.art"");        }        bufReader.close();        reader.close();        ins.close();    }}])', 1)]"	""	""	""	""	""
"190:576119) 7.3.10  . Biometric Sensors"	"7.3.10"	"C-6-2"	""	"[('android.server.biometrics.BiometricSecurityTests', 8), ('android.hardware.biometrics.cts.BiometricPromptTest', 2), ('android.keystore.cts.KeyGenParameterSpecTest', 2), ('android.keystore.cts.KeyProtectionTest', 2), ('android.server.biometrics.BiometricSimpleTests', 1), ('com.android.cts.verifier.security.UnlockedDeviceRequiredTest', 1), ('android.server.biometrics.BiometricCryptoTests', 1), ('android.server.biometrics.BiometricServiceTests', 1)]"	"[('revertSensorStrengths', 2), ('createKey', 1), ('ensureReset', 1), ('teardown', 1)]"	""	""	"7.3.10/C-6-2"	"""C-6-2] MUST present only Class 3 biometrics when the authentication requires BIOMETRIC_STRONG, or the authentication is invoked with a CryptoObject. If device implementations wish to treat a biometric sensor as Class 1 (formerly Convenience), they: """	"07031000.670602"	"BIOMETRIC_STRONG"	""	""	""	"[('BIOMETRIC_STRONG', 18)]"	""	"[('[android.server.biometrics.BiometricSimpleTests testCanAuthenticate_whenNoSensors None]', 1), ('[com.android.cts.verifier.security.UnlockedDeviceRequiredTest verifyTestRequirements None]', 1), ('[android.hardware.biometrics.cts.BiometricPromptTest test_setAllowedAuthenticators_withoutDeviceCredential None]', 1), ('[android.hardware.biometrics.cts.BiometricPromptTest test_setAllowedAuthenticators_withDeviceCredential None]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_StrongSensor None]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_WeakSensor None]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrength_ConvenienceSensor None]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthDowngraded_StrongSensor None]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthDowngraded_WeakSensor None]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_WeakSensor None]', 1), ('[android.server.biometrics.BiometricSecurityTests testBiometricStrengthUpgraded_ConvenienceSensor None]', 1), ('[android.server.biometrics.BiometricCryptoTests testGenerateKeyWhenCredentialAndBiometricEnrolled None]', 1), ('[android.keystore.cts.KeyGenParameterSpecTest testDefaults None]', 1), ('[android.keystore.cts.KeyGenParameterSpecTest testSettersReflectedInGetters None]', 1), ('[android.keystore.cts.KeyProtectionTest testDefaults None]', 1), ('[android.keystore.cts.KeyProtectionTest testSettersReflectedInGetters None]', 1), ('[android.server.biometrics.BiometricServiceTests testLockoutResetNotRequestedAfterBiometricUnlock_whenNotStrong None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSecurityTests.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/biometrics/cts/BiometricPromptTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyGenParameterSpecTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyProtectionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSimpleTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricCryptoTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricServiceTests.java', 1)]"	"[('(1,BIOMETRIC_STRONG,/android/server/biometrics/BiometricSimpleTests.java)', 1), ('(1,BIOMETRIC_STRONG,/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java)', 1), ('(2,BIOMETRIC_STRONG,/android/hardware/biometrics/cts/BiometricPromptTest.java)', 1), ('(34,BIOMETRIC_STRONG,/android/server/biometrics/BiometricSecurityTests.java)', 1), ('(3,BIOMETRIC_STRONG,/android/server/biometrics/BiometricCryptoTests.java)', 1), ('(3,BIOMETRIC_STRONG,/android/keystore/cts/KeyGenParameterSpecTest.java)', 1), ('(3,BIOMETRIC_STRONG,/android/keystore/cts/KeyProtectionTest.java)', 1), ('(1,BIOMETRIC_STRONG,/android/server/biometrics/BiometricServiceTests.java)', 1)]"	"[('([1:/android/server/biometrics/BiometricSimpleTests.java]:[BIOMETRIC_STRONG]:[1]:method_text:[           mBiometricManager.canAuthenticate(Authenticators.BIOMETRIC_STRONG));        }    }   ])', 1), ('([1:/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[ntext()).setMessage(                    mController.getDialogMessage()).create();        }    }}])', 1), ('([1:/android/hardware/biometrics/cts/BiometricPromptTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[assertEquals(authenticators, prompt.getAllowedAuthenticators());        }    }    @Presubmit   ])', 1), ('([1:/android/hardware/biometrics/cts/BiometricPromptTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[ld();            assertEquals(authenticators, prompt.getAllowedAuthenticators());        }    }}])', 1), ('([3:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[3]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([4:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[4]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([2:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[2]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([7:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[7]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([6:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[6]:method_text:[t     * have a way to test cases where the requested strength is BIOMETRIC_CONVENIENCE.     */   ])', 1), ('([2:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[2]:method_text:[| Error  |     * +-------------------+------------------+--------------------+--------+     */   ])', 1), ('([5:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[5]:method_text:[ror  |     * +-----------------------+------------------+--------------------+--------+     */   ])', 1), ('([5:/android/server/biometrics/BiometricSecurityTests.java]:[BIOMETRIC_STRONG]:[5]:method_text:[urrent: "" + currentStrength);            Thread.sleep(300);        }        return false;    }}])', 1), ('([3:/android/server/biometrics/BiometricCryptoTests.java]:[BIOMETRIC_STRONG]:[3]:method_text:[);                        }                    }                }            }        }    }}])', 1), ('([1:/android/keystore/cts/KeyGenParameterSpecTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[ spec.getUserAuthenticationType());        assertFalse(spec.isUnlockedDeviceRequired());    }   ])', 1), ('([2:/android/keystore/cts/KeyGenParameterSpecTest.java]:[BIOMETRIC_STRONG]:[2]:method_text:[  spec.getUserAuthenticationType());        assertTrue(spec.isUnlockedDeviceRequired());    }   ])', 1), ('([1:/android/keystore/cts/KeyProtectionTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[.getBoundToSpecificSecureUserId());        assertFalse(spec.isUnlockedDeviceRequired());    }   ])', 1), ('([2:/android/keystore/cts/KeyProtectionTest.java]:[BIOMETRIC_STRONG]:[2]:method_text:[c.getBoundToSpecificSecureUserId());        assertTrue(spec.isUnlockedDeviceRequired());    }   ])', 1), ('([1:/android/server/biometrics/BiometricServiceTests.java]:[BIOMETRIC_STRONG]:[1]:method_text:[.getSensorId(),                            BiometricsProto.CM_RESET_LOCKOUT));        }    }   ])', 1)]"	""	""	""	""	""
"190:576119) 7.3.10  . Biometric Sensors"	"7.3.10"	"C-4-2"	""	"[('android.server.biometrics.BiometricSimpleTests', 1)]"	""	""	""	"7.3.10/C-4-2"	"""C-4-2] MUST recognize and honor each parameter name defined as a constant in the Authenticators class and any combinations thereof. Conversely, MUST NOT honor or recognize integer constants passed to the canAuthenticate(int) and setAllowedAuthenticators(int) methods other than those documented as public constants in Authenticators and any combinations thereof."""	"07031000.670402"	"canAuthenticate(int) setAllowedAuthenticators(int)"	""	""	""	"[('canAuthenticate(int)', 1)]"	""	"[('[android.server.biometrics.BiometricSimpleTests testInvalidInputs None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSimpleTests.java', 1)]"	"[('(1,canAuthenticate(int),/android/server/biometrics/BiometricSimpleTests.java)', 1)]"	"[('([1:/android/server/biometrics/BiometricSimpleTests.java]:[canAuthenticate(int)]:[1]:method_text:[EVICE_CREDENTIAL)     * 3) @deprecated BiometricPrompt#setDeviceCredentialAllowed(true)     */   ])', 1)]"	""	""	""	""	""
"190:576119) 7.3.10  . Biometric Sensors"	"7.3.10"	"C-4-3"	""	""	""	""	""	"7.3.10/C-4-3"	"""C-4-3] MUST implement the ACTION_BIOMETRIC_ENROLL action on devices that have either Class 3 or Class 2 biometrics. This action MUST only present the enrollment entry points for Class 3 or Class 2 biometrics. If device implementations support passive biometrics, they: """	"07031000.670403"	"ACTION_BIOMETRIC_ENROLL"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"190:576119) 7.3.10  . Biometric Sensors"	"7.3.10"	"C-5-1"	""	""	""	""	""	"7.3.10/C-5-1"	"""C-5-1] MUST by default require an additional confirmation step (e.g. a button press)."""	"07031000.670501"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"190:576119) 7.3.10  . Biometric Sensors"	"7.3.10"	"C-5-2"	""	""	""	""	""	"7.3.10/C-5-2"	"""C-5-2] MUST additionally implement an implicit authentication flow (without confirmation step) corresponding to setConfirmationRequired(boolean), which applications can set to utilize for sign-in flows. If device implementations have multiple biometric sensors, they: """	"07031000.670502"	"setConfirmationRequired(boolean)"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"190:576119) 7.3.10  . Biometric Sensors"	"7.3.10"	"C-4-1"	""	""	""	""	""	"7.3.10/C-4-1"	"""C-4-1] MUST meet the requirements for Class 3 or Class 2 biometric as defined in this document."""	"07031000.670401"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"190:576119) 7.3.10  . Biometric Sensors"	"7.3.10"	"C-6-1"	""	""	""	""	""	"7.3.10/C-6-1"	"""C-6-1] MUST meet the requirements for Class 3 as defined in this section below."""	"07031000.670601"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"192:577540) 7.3.13  . Hinge Angle Sensor"	"7.3.13"	"C-1-2"	""	""	""	""	""	"7.3.13/C-1-2"	"""C-1-2] MUST support at least two readings between 0 and 360 degrees (inclusive i.e including 0 and 360 degrees)."""	"07031300.670102"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"192:577540) 7.3.13  . Hinge Angle Sensor"	"7.3.13"	"C-1-1"	""	""	""	""	""	"7.3.13/C-1-1"	"""C-1-1] MUST implement and report TYPE_HINGLE_ANGLE."""	"07031300.670101"	"TYPE_HINGLE_ANGLE"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"192:577540) 7.3.13  . Hinge Angle Sensor"	"7.3.13"	"C-1-3"	""	""	""	""	""	"7.3.13/C-1-3"	"""C-1-3] MUST return a wakeup sensor for getDefaultSensor(SENSOR_TYPE_HINGE_ANGLE). <h3 id=""74_data_connectivity"" """	"07031300.670103"	"SENSOR_TYPE_HINGE_ANGLE getDefaultSensor(SENSOR_TYPE_HINGE_ANGLE)"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"186:550975) 7.3.6  . Thermometer"	"7.3.6"	"C-2-1"	""	""	""	""	""	"7.3.6/C-2-1"	"""C-2-1] MUST NOT define SENSOR_TYPE_AMBIENT_TEMPERATURE for the temperature sensor. If device implementations include a sensor for monitoring skin temperature, then they: """	"07030600.670201"	"SENSOR_TYPE_AMBIENT_TEMPERATURE"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"210:615660) 7.4.5.2  . IPv6"	"7.4.5.2"	"C-4-1"	""	""	""	""	""	"7.4.5.2/C-4-1"	"""C-4-1] MUST simultaneously meet the above requirements on each network when the device is simultaneously connected to more than one network type. <h5 id=""7453_captive_portals"" """	"07040502.670401"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"211:618251) 7.4.5.3  . Captive Portals"	"7.4.5.3"	"C-1-2"	""	""	""	""	""	"7.4.5.3/C-1-2"	"""C-1-2] MUST perform detection of captive portals and support login through the captive portal application when the device is connected to any network type, including cellular/mobile network, WiFi, Ethernet or Bluetooth."""	"07040503.670102"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"211:618251) 7.4.5.3  . Captive Portals"	"7.4.5.3"	"C-1-1"	""	"[('android.net.wifi.cts.WifiManagerTest', 1)]"	""	""	""	"7.4.5.3/C-1-1"	"""C-1-1] MUST provide a captive portal application to handle the intent ACTION_CAPTIVE_PORTAL_SIGN_IN and display the captive portal login page, by sending that intent, on call to the System API ConnectivityManager#startCaptivePortalApp(Network, Bundle)."""	"07040503.670101"	"ACTION_CAPTIVE_PORTAL_SIGN_IN"	""	""	""	"[('ACTION_CAPTIVE_PORTAL_SIGN_IN', 1)]"	""	"[('[android.net.wifi.cts.WifiManagerTest testNetworkSettingsPermission None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 1)]"	"[('(1,ACTION_CAPTIVE_PORTAL_SIGN_IN,/android/net/wifi/cts/WifiManagerTest.java)', 1)]"	"[('([1:/android/net/wifi/cts/WifiManagerTest.java]:[ACTION_CAPTIVE_PORTAL_SIGN_IN]:[1]:method_text:[unctionality.  The permission is intended to be granted to only the device setup wizard.     */   ])', 1)]"	""	""	""	""	""
"211:618251) 7.4.5.3  . Captive Portals"	"7.4.5.3"	"C-1-3"	""	"[('android.telephony.cts.DataCallResponseTest', 10), ('android.security.SELinuxTargetSdkTest', 10), ('android.net.cts.DnsResolverTest', 9), ('com.android.cts.deviceowner.PrivateDnsPolicyTest', 7), ('android.net.wifi.cts.WifiBackupRestoreTest', 4), ('android.net.cts.MultinetworkApiTest', 3), ('android.devicepolicy.cts.NetworkResetTest', 3), ('android.hardware.camera2.cts.CaptureRequestTest', 2), ('android.net.ipsec.ike.cts.ChildSessionParamsTest', 2), ('com.android.cts.deviceandprofileowner.NetworkLoggingTest', 2), ('android.net.cts.ConnectivityDiagnosticsManagerTest', 2), ('android.net.cts.IpSecManagerTest', 2), ('com.android.cts.devicepolicy.DeviceOwnerTest', 2), ('com.android.cts.delegate.WorkProfileNetworkLoggingDelegateTest', 2), ('android.net.cts.DnsTest', 2), ('com.android.cts.deviceowner.NetworkLoggingTest', 2), ('com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest', 1), ('android.permission.cts.NoNetworkStatePermissionTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.appsecurity.cts.ListeningPortsTest', 1), ('android.hardware.cts.helpers.sensorverification.JitterVerificationTest', 1), ('android.provider.cts.simphonebook.SimPhonebookContract_ElementaryFilesTest', 1), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 1), ('android.net.cts.legacy.api22.ConnectivityManagerLegacyTest', 1), ('android.net.wifi.cts.NsdManagerTest', 1), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 1), ('android.net.cts.IpConfigurationTest', 1), ('com.android.cts.net.hostside.VpnTest', 1), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 1), ('android.security.identity.cts.ProvisioningTest', 1)]"	"[('setUp', 17), ('getContext', 13), ('tearDown', 9), ('getInstrumentation', 7), ('getWho', 4), ('Builder', 4), ('build', 4), ('getContentResolver', 3), ('getPackageName', 3), ('getSoftLifetimeSeconds', 3), ('getSaProposals', 2), ('getHardLifetimeSeconds', 2), ('getInboundTrafficSelectors', 2), ('getOutboundTrafficSelectors', 2), ('run', 2), ('getPackageManager', 2), ('dpc', 2), ('devicePolicyManager', 2), ('Object', 2), ('storePrivateDnsSetting', 2), ('restorePrivateDnsSetting', 2), ('buildChildSaProposalWithCombinedModeCipher', 1), ('query_includesRowForEachElementaryFileOnEachSim', 1), ('NetworkLogsReceiver', 1), ('Binder', 1), ('getSimpleName', 1), ('DeviceState', 1), ('factoryReset_noPolicyRestrictions_resetsToDefault', 1), ('factoryReset', 1), ('getPrivateDnsMode', 1), ('getAirplaneMode', 1), ('supportedHardware', 1), ('getTargetContext', 1), ('bind', 1), ('waitForIdle', 1), ('unbind', 1), ('stopVpn', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getCount', 1), ('countDown', 1), ('getInstance', 1), ('getMainLooper', 1)]"	""	""	"7.4.5.3/C-1-3"	"""C-1-3] MUST support logging in to captive portals using cleartext DNS when the device is configured to use private DNS strict mode."""	"07040503.670103"	"DNS"	""	""	""	"[('DNS', 78)]"	""	"[('[android.security.SELinuxTargetSdkTest testNoDns None]', 5), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 2), ('[android.telephony.cts.DataCallResponseTest testConstructorAndGetters None]', 2), ('[android.telephony.cts.DataCallResponseTest testEquals None]', 2), ('[android.telephony.cts.DataCallResponseTest testNotEquals None]', 2), ('[android.telephony.cts.DataCallResponseTest testParcel None]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testPrivateDnsPolicy None]', 2), ('[android.net.wifi.cts.WifiBackupRestoreTest isNotNull None]', 2), ('[android.net.wifi.cts.WifiBackupRestoreTest testCanRestoreSoftApBackupData None]', 2), ('[android.permission.cts.NoNetworkStatePermissionTest testSecurityExceptionFromDns None]', 1), ('[android.media.cts.PresentationSyncTest testThroughput None]', 1), ('[android.appsecurity.cts.ListeningPortsTest testNoListeningLoopbackUdp6Ports None]', 1), ('[android.net.ipsec.ike.cts.ChildSessionParamsTest testBuildChildSessionParamsWithConfigReq None]', 1), ('[android.hardware.cts.helpers.sensorverification.JitterVerificationTest testCalculateDelta None]', 1), ('[android.provider.cts.simphonebook.SimPhonebookContract_ElementaryFilesTest getActiveSubscriptionInfoList None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest testVerify_no_events_fail None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testDisallowPrivateDnsConfigurationRestriction None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testClearDisallowPrivateDnsConfigurationRestriction None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testSetOpportunisticMode None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testSetSpecificHostMode None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testSetModeWithIncorrectHost None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testCanSetModeDespiteUserRestriction None]', 1), ('[android.net.cts.legacy.api22.ConnectivityManagerLegacyTest testStartUsingNetworkFeature_enableHipri None]', 1), ('[com.android.cts.deviceandprofileowner.NetworkLoggingTest testRetrieveNetworkLogs_forceNetworkLogs_receiveNetworkLogs None]', 1), ('[android.net.wifi.cts.NsdManagerTest testNDSManager None]', 1), ('[android.net.cts.ConnectivityDiagnosticsManagerTest TestNetworkCallback None]', 1), ('[android.net.cts.ConnectivityDiagnosticsManagerTest testOnDataStallSuspected_DnsEvents None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest testIkeSessionSetupAndChildSessionSetupWithTunnelModeV6 None]', 1), ('[android.net.cts.MultinetworkApiTest getTestableNetworks None]', 1), ('[android.net.cts.MultinetworkApiTest testResNApi None]', 1), ('[android.net.cts.MultinetworkApiTest testResNApiNXDomainPrivateDns None]', 1), ('[android.net.cts.IpSecManagerTest testAllocSpi None]', 1), ('[com.android.cts.delegate.WorkProfileNetworkLoggingDelegateTest testRetrieveNetworkLogs_forceNetworkLogs_receiveNetworkLogs None]', 1), ('[android.net.cts.DnsTest testNativeDns None]', 1), ('[android.net.cts.DnsTest testDnsWorks None]', 1), ('[android.security.SELinuxTargetSdkTest testCanExecuteFromHomeDir None]', 1), ('[android.devicepolicy.cts.NetworkResetTest TestApis None]', 1), ('[android.devicepolicy.cts.NetworkResetTest factoryReset_disallowedByConfigPrivateDnsPolicy_doesPartialFactoryReset None]', 1), ('[android.devicepolicy.cts.NetworkResetTest isFalse None]', 1), ('[com.android.cts.net.hostside.VpnTest finish None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerProfileUserRestriction_onParent None]', 1), ('[com.android.cts.deviceowner.NetworkLoggingTest testNetworkLoggingAndRetrieval None]', 1), ('[android.net.cts.DnsResolverTest getTestableNetworks None]', 1), ('[android.net.cts.DnsResolverTest testRawQueryNXDomainWithPrivateDns None]', 1), ('[android.net.cts.DnsResolverTest testRawQueryNXDomainInlineWithPrivateDns None]', 1), ('[android.net.cts.DnsResolverTest testRawQueryCancel None]', 1), ('[android.net.cts.DnsResolverTest testRawQueryBlobCancel None]', 1), ('[android.net.cts.DnsResolverTest testCancelBeforeQuery None]', 1), ('[android.net.cts.DnsResolverTest testContinuousQueriesInline None]', 1), ('[android.net.cts.DnsResolverTest testQueryCancelForInetAddress None]', 1), ('[android.net.cts.DnsResolverTest testPrivateDnsBypass None]', 1), ('[android.security.identity.cts.ProvisioningTest testUpdateCredential None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/DnsResolverTest.java', 9), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PrivateDnsPolicyTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/DataCallResponseTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/DataCallResponseTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/MultinetworkApiTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/NetworkResetTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/ChildSessionParamsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/NetworkLoggingTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk27/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpSecManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk29/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/WorkProfileNetworkLoggingDelegateTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/DnsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiBackupRestoreTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk25/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdkCurrent/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiBackupRestoreTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk28/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/NetworkLoggingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/NoNetworkStatePermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ListeningPortsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_ElementaryFilesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/netlegacy22.api/src/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/NsdManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/net/app/src/com/android/cts/net/hostside/VpnTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1)]"	"[('(3,DNS,/android/security/SELinuxTargetSdkTest.java)', 5), ('(2,DNS,/android/hardware/camera2/cts/CaptureRequestTest.java)', 2), ('(15,DNS,/android/telephony/cts/DataCallResponseTest.java)', 2), ('(2,DNS,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 2), ('(3,DNS,/android/net/wifi/cts/WifiBackupRestoreTest.java)', 2), ('(1,DNS,/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java)', 1), ('(1,DNS,/android/permission/cts/NoNetworkStatePermissionTest.java)', 1), ('(8,DNS,/android/media/cts/PresentationSyncTest.java)', 1), ('(2,DNS,/android/appsecurity/cts/ListeningPortsTest.java)', 1), ('(6,DNS,/android/net/ipsec/ike/cts/ChildSessionParamsTest.java)', 1), ('(4,DNS,/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java)', 1), ('(8,DNS,/android/provider/cts/simphonebook/SimPhonebookContract_ElementaryFilesTest.java)', 1), ('(2,DNS,/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java)', 1), ('(53,DNS,/com/android/cts/deviceowner/PrivateDnsPolicyTest.java)', 1), ('(2,DNS,/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java)', 1), ('(7,DNS,/com/android/cts/deviceandprofileowner/NetworkLoggingTest.java)', 1), ('(3,DNS,/android/net/wifi/cts/NsdManagerTest.java)', 1), ('(7,DNS,/android/net/cts/ConnectivityDiagnosticsManagerTest.java)', 1), ('(2,DNS,/android/net/ipsec/ike/cts/IkeSessionPskTest.java)', 1), ('(16,DNS,/android/net/cts/MultinetworkApiTest.java)', 1), ('(6,DNS,/android/net/cts/IpSecManagerTest.java)', 1), ('(7,DNS,/com/android/cts/delegate/WorkProfileNetworkLoggingDelegateTest.java)', 1), ('(9,DNS,/android/net/cts/IpConfigurationTest.java)', 1), ('(18,DNS,/android/net/cts/DnsTest.java)', 1), ('(31,DNS,/android/devicepolicy/cts/NetworkResetTest.java)', 1), ('(57,DNS,/com/android/cts/net/hostside/VpnTest.java)', 1), ('(1,DNS,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(29,DNS,/com/android/cts/deviceowner/NetworkLoggingTest.java)', 1), ('(108,DNS,/android/net/cts/DnsResolverTest.java)', 1), ('(8,DNS,/android/security/identity/cts/ProvisioningTest.java)', 1)]"	"[('([1:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[1]:method_text:[SELinuxTargetSdkTestBase{    /**     * Verify that net.dns properties may not be read     */   ])', 4), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[DNS]:[2]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 2), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[t(response).isNotEqualTo(null);        assertThat(response).isNotEqualTo(new String[1]);    }   ])', 2), ('([2:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[2]:method_text:[EATOR.createFromParcel(stateParcel);        assertThat(response).isEqualTo(parcelResponse);    }}])', 2), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[public void testNoDns() throws IOException {        noDns();    }    ])', 2), (""([1:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[DNS]:[1]:method_text:[     * a no-op, will only ensure that the device does not crash when invoking the API's.     */   ])"", 2), ('([2:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[DNS]:[2]:method_text:[ is deserialized correctly from AOSP     * legacy supplicant/ipconf backup data format.     */   ])', 2), ('([2:/android/net/cts/DnsResolverTest.java]:[DNS]:[2]:method_text:[  latch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));            } while (retry);        }    }   ])', 2), ('([1:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[DNS]:[1]:method_text:[not used in test.                    // UserManager.DISALLOW_DEBUGGING_FEATURES            );   ])', 1), ('([1:/android/permission/cts/NoNetworkStatePermissionTest.java]:[DNS]:[1]:method_text:[w.google.com"");            fail();        } catch (SecurityException expected) {        }    }}])', 1), ('([8:/android/media/cts/PresentationSyncTest.java]:[DNS]:[8]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([2:/android/appsecurity/cts/ListeningPortsTest.java]:[DNS]:[2]:method_text:[);            }        }        contents.append(""\'"");        return contents.toString();    }}])', 1), ('([1:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[1]:method_text:[.55""));    private static final int MTU_V4 = 1440;    private static final int MTU_V6 = 1400;   ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[getMtuV4()).isEqualTo(MTU_V4);        assertThat(response.getMtuV6()).isEqualTo(MTU_V6);    }   ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[TU_V6)                .build();        assertThat(response).isEqualTo(equalsResponse);    }   ])', 1), ('([2:/android/net/ipsec/ike/cts/ChildSessionParamsTest.java]:[DNS]:[2]:method_text:[BOUND_V4_TS, OUTBOUND_V6_TS),                childParams.getOutboundTrafficSelectors());    }   ])', 1), ('([4:/android/net/ipsec/ike/cts/ChildSessionParamsTest.java]:[DNS]:[4]:method_text:[any expected address is not found in result        assertTrue(expectedAddresses.isEmpty());    }}])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java]:[DNS]:[4]:method_text:[Double) stats.getValue(SensorStats.JITTER_95_PERCENTILE_PERCENT_KEY),                0.01);    }}])', 1), ('([8:/android/provider/cts/simphonebook/SimPhonebookContract_ElementaryFilesTest.java]:[DNS]:[8]:method_text:[   .isAtLeast(PHONE_NUMBER_MAX_LENGTH_MINIMUM);                }            }        }    }   ])', 1), ('([2:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[DNS]:[2]:method_text:[tion(expectedUs);        verification.addSensorEvents(events);        return verification;    }}])', 1), ('([9:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[9]:method_text:[DNS, false);        mDevicePolicyManager.setGlobalPrivateDnsModeOpportunistic(getWho());    }   ])', 1), ('([3:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[3]:method_text:[r.hasUserRestriction(                UserManager.DISALLOW_CONFIG_PRIVATE_DNS)).isTrue();    }   ])', 1), ('([14:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[14]:method_text:[privateDnsHost, expectedResult, resultCode),                expectedResult, resultCode);    }   ])', 1), ('([5:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[5]:method_text:[IC);        assertThat(mDevicePolicyManager.getGlobalPrivateDnsHost(getWho())).isNull();    }   ])', 1), ('([7:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[7]:method_text:[er.getGlobalPrivateDnsHost(getWho())).isEqualTo(                VALID_PRIVATE_DNS_HOST);    }   ])', 1), ('([4:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[4]:method_text:[TE_DNS_HOST,                DevicePolicyManager.PRIVATE_DNS_SET_ERROR_HOST_NOT_SERVING);    }   ])', 1), ('([11:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[11]:method_text:[ISTIC);        assertThat(mDevicePolicyManager.getGlobalPrivateDnsHost(getWho())).isNull();    }}])', 1), ('([1:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[1]:method_text:[riptor> TRAFFIC_DESCRIPTORS =            Arrays.asList(new TrafficDescriptor(DNN, OS_APP_ID));   ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[FO);        assertThat(response.getTrafficDescriptors()).isEqualTo(TRAFFIC_DESCRIPTORS);    }   ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[PTORS)                .build();        assertThat(response).isEqualTo(equalsResponse);    }   ])', 1), ('([2:/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java]:[DNS]:[2]:method_text:[led && isWifiConnected()) {                disconnectFromWifi();            }        }    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/NetworkLoggingTest.java]:[DNS]:[1]:method_text:[s);        mDevice = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());    }   ])', 1), ('([6:/com/android/cts/deviceandprofileowner/NetworkLoggingTest.java]:[DNS]:[6]:method_text:[ddr) {        return ((addr instanceof Inet4Address) || (addr instanceof Inet6Address));    }   ])', 1), ('([3:/android/net/wifi/cts/NsdManagerTest.java]:[DNS]:[3]:method_text:[l);        }        catch (InterruptedException ex) {            return false;        }    }}])', 1), ('([3:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[DNS]:[3]:method_text:[redCallbacks) {            mCdm.unregisterConnectivityDiagnosticsCallback(cb);        }    }   ])', 1), ('([4:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[DNS]:[4]:method_text:[TS);        verifyOnDataStallSuspected(DETECTION_METHOD_DNS_EVENTS, TIMESTAMP, extras);    }   ])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[ify that selinux context is the expected domain based on     * targetSdkVersion = 26-27     */   ])', 1), ('([2:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[DNS]:[2]:method_text:[p);        verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);    }   ])', 1), ('([3:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[3]:method_text:[  testableNetworks.size() >= 1);        return testableNetworks.toArray(new Network[0]);    }   ])', 1), ('([2:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[2]:method_text:[    @AppModeFull(reason = ""WRITE_SECURE_SETTINGS permission can\'t be granted to instant apps"")   ])', 1), ('([11:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[11]:method_text:[        }        } finally {            mCtsNetUtils.restorePrivateDnsSetting();        }    }}])', 1), ('([5:/android/net/cts/IpSecManagerTest.java]:[DNS]:[5]:method_text:[loc the same SPI that was specifically created (expect SpiUnavailable)     * Close SPIs     */   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[DNS]:[1]:method_text:[     * send data on socket     * release transform     * send data (expect exception)     */   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DNS]:[2]:method_text:[ateDnsPolicy() throws Exception {        executeDeviceOwnerTest(""PrivateDnsPolicyTest"");    }   ])', 1), ('([1:/com/android/cts/delegate/WorkProfileNetworkLoggingDelegateTest.java]:[DNS]:[1]:method_text:[        DelegateTestUtils.DelegatedLogsReceiver.sBatchCountDown = new CountDownLatch(1);    }   ])', 1), ('([6:/com/android/cts/delegate/WorkProfileNetworkLoggingDelegateTest.java]:[DNS]:[6]:method_text:[ddr) {        return ((addr instanceof Inet4Address) || (addr instanceof Inet6Address));    }   ])', 1), ('([9:/android/net/cts/IpConfigurationTest.java]:[DNS]:[9]:method_text:[NS)                .build();        mProxy = ProxyInfo.buildDirectProxy(""test"", 8888);    }   ])', 1), ('([7:/android/net/cts/DnsTest.java]:[DNS]:[7]:method_text:[     */    @SkipPresubmit(reason = ""IPv6 support may be missing on presubmit virtual hardware"")   ])', 1), ('([11:/android/net/cts/DnsTest.java]:[DNS]:[11]:method_text:[ECONDS));        } finally {            mCm.unregisterNetworkCallback(callback);        }    }}])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DNS]:[2]:method_text:[) {            return;        }        executeDeviceOwnerTest(""PrivateDnsPolicyTest"");    }   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[1]:method_text:[cuteFromHomeDir());    }    /**     * Verify that net.dns properties may not be read     */   ])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[Verify that selinux context is the expected domain based on     * targetSdkVersion = 25     */   ])', 1), ('([6:/android/devicepolicy/cts/NetworkResetTest.java]:[DNS]:[6]:method_text:[  restoreSettings(mOriginalAirplaneMode, mOriginalPrivateDnsMode, mOriginalAvoidBadWifi);    }   ])', 1), ('([11:/android/devicepolicy/cts/NetworkResetTest.java]:[DNS]:[11]:method_text:[  restoreUserRestriction(originalUserRestriction, DISALLOW_CONFIG_PRIVATE_DNS);        }    }   ])', 1), ('([14:/android/devicepolicy/cts/NetworkResetTest.java]:[DNS]:[14]:method_text:[            sDeviceState.dpc().devicePolicyManager().clearUserRestriction(policy);        }    }}])', 1), ('([57:/com/android/cts/net/hostside/VpnTest.java]:[DNS]:[57]:method_text:[      super.onReceive(context, intent);            }            received = true;        }    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[DNS]:[1]:method_text:[ISALLOW_CONFIG_DATE_TIME,                    UserManager.DISALLOW_AIRPLANE_MODE            );   ])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[Verify that selinux context is the expected domain based on     * targetSdkVersion = 28     */   ])', 1), (""([1:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[DNS]:[1]:method_text:[ there's one user on the device or all     * secondary users / profiles are affiliated.     */   ])"", 1), ('([28:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[DNS]:[28]:method_text:[s addr) {        return ((addr instanceof Inet4Address) || (addr instanceof Inet6Address));    }}])', 1), ('([43:/android/net/cts/DnsResolverTest.java]:[DNS]:[43]:method_text:[    assertGreaterThan(mMsg + "" No question found"", mDnsAnswer.getQDCount(), 0);        }    }   ])', 1), ('([2:/android/net/cts/DnsResolverTest.java]:[DNS]:[2]:method_text:[hPrivateDns() throws Exception {        doTestRawQueryNXDomainWithPrivateDns(mExecutor);    }   ])', 1), ('([22:/android/net/cts/DnsResolverTest.java]:[DNS]:[22]:method_text:[              callback.waitForAnswer());            callback.assertNXDomain();        }    }   ])', 1), ('([4:/android/net/cts/DnsResolverTest.java]:[DNS]:[4]:method_text:[solver.DnsException error) {            mErrorMsg = mMsg + error.getMessage();        }    }   ])', 1), ('([1:/android/net/cts/DnsResolverTest.java]:[DNS]:[1]:method_text:[            assertTrue(msg + "" returned 0 results"", !callback.isAnswerEmpty());        }    }   ])', 1), ('([4:/android/net/cts/DnsResolverTest.java]:[DNS]:[4]:method_text:[         assertTrue(msg + "" returned Ipv4 results"", !callback.hasIpv4Answer());        }    }   ])', 1), ('([28:/android/net/cts/DnsResolverTest.java]:[DNS]:[28]:method_text:[   queryV6 ? !callback.hasIpv4Answer() : !callback.hasIpv6Answer());            }        }    }}])', 1), ('([8:/android/security/identity/cts/ProvisioningTest.java]:[DNS]:[8]:method_text:[til.getStringEntry(rd, updNs, ""last_name""));        store.deleteCredentialByName(""test"");    }}])', 1)]"	""	""	""	""	""
"211:618251) 7.4.5.3  . Captive Portals"	"7.4.5.3"	"C-1-4"	""	"[('android.telephony.cts.DataCallResponseTest', 10), ('android.security.SELinuxTargetSdkTest', 10), ('android.net.cts.DnsResolverTest', 9), ('com.android.cts.deviceowner.PrivateDnsPolicyTest', 7), ('android.net.wifi.cts.WifiBackupRestoreTest', 4), ('android.net.cts.MultinetworkApiTest', 3), ('android.devicepolicy.cts.NetworkResetTest', 3), ('android.hardware.camera2.cts.CaptureRequestTest', 2), ('android.net.ipsec.ike.cts.ChildSessionParamsTest', 2), ('com.android.cts.deviceandprofileowner.NetworkLoggingTest', 2), ('android.net.cts.ConnectivityDiagnosticsManagerTest', 2), ('android.net.cts.IpSecManagerTest', 2), ('com.android.cts.devicepolicy.DeviceOwnerTest', 2), ('com.android.cts.delegate.WorkProfileNetworkLoggingDelegateTest', 2), ('android.net.cts.DnsTest', 2), ('com.android.cts.deviceowner.NetworkLoggingTest', 2), ('com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest', 1), ('android.permission.cts.NoNetworkStatePermissionTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.appsecurity.cts.ListeningPortsTest', 1), ('android.hardware.cts.helpers.sensorverification.JitterVerificationTest', 1), ('android.provider.cts.simphonebook.SimPhonebookContract_ElementaryFilesTest', 1), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 1), ('android.net.cts.legacy.api22.ConnectivityManagerLegacyTest', 1), ('android.net.wifi.cts.NsdManagerTest', 1), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 1), ('android.net.cts.IpConfigurationTest', 1), ('com.android.cts.net.hostside.VpnTest', 1), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 1), ('android.security.identity.cts.ProvisioningTest', 1)]"	"[('setUp', 17), ('getContext', 13), ('tearDown', 9), ('getInstrumentation', 7), ('getWho', 4), ('Builder', 4), ('build', 4), ('getContentResolver', 3), ('getPackageName', 3), ('getSoftLifetimeSeconds', 3), ('getSaProposals', 2), ('getHardLifetimeSeconds', 2), ('getInboundTrafficSelectors', 2), ('getOutboundTrafficSelectors', 2), ('run', 2), ('getPackageManager', 2), ('dpc', 2), ('devicePolicyManager', 2), ('Object', 2), ('storePrivateDnsSetting', 2), ('restorePrivateDnsSetting', 2), ('buildChildSaProposalWithCombinedModeCipher', 1), ('query_includesRowForEachElementaryFileOnEachSim', 1), ('NetworkLogsReceiver', 1), ('Binder', 1), ('getSimpleName', 1), ('DeviceState', 1), ('factoryReset_noPolicyRestrictions_resetsToDefault', 1), ('factoryReset', 1), ('getPrivateDnsMode', 1), ('getAirplaneMode', 1), ('supportedHardware', 1), ('getTargetContext', 1), ('bind', 1), ('waitForIdle', 1), ('unbind', 1), ('stopVpn', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getCount', 1), ('countDown', 1), ('getInstance', 1), ('getMainLooper', 1)]"	""	""	"7.4.5.3/C-1-4"	"""C-1-4] MUST use encrypted DNS as per the SDK documentation for android.net.LinkProperties.getPrivateDnsServerName and android.net.LinkProperties.isPrivateDnsActive for all network traffic that is not explicitly communicating with the captive portal."""	"07040503.670104"	"DNS android.net.LinkProperties.getPrivateDnsServerName android.net.LinkProperties.isPrivateDnsActive"	""	""	""	"[('DNS', 78)]"	""	"[('[android.security.SELinuxTargetSdkTest testNoDns None]', 5), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 2), ('[android.telephony.cts.DataCallResponseTest testConstructorAndGetters None]', 2), ('[android.telephony.cts.DataCallResponseTest testEquals None]', 2), ('[android.telephony.cts.DataCallResponseTest testNotEquals None]', 2), ('[android.telephony.cts.DataCallResponseTest testParcel None]', 2), ('[com.android.cts.devicepolicy.DeviceOwnerTest testPrivateDnsPolicy None]', 2), ('[android.net.wifi.cts.WifiBackupRestoreTest isNotNull None]', 2), ('[android.net.wifi.cts.WifiBackupRestoreTest testCanRestoreSoftApBackupData None]', 2), ('[android.permission.cts.NoNetworkStatePermissionTest testSecurityExceptionFromDns None]', 1), ('[android.media.cts.PresentationSyncTest testThroughput None]', 1), ('[android.appsecurity.cts.ListeningPortsTest testNoListeningLoopbackUdp6Ports None]', 1), ('[android.net.ipsec.ike.cts.ChildSessionParamsTest testBuildChildSessionParamsWithConfigReq None]', 1), ('[android.hardware.cts.helpers.sensorverification.JitterVerificationTest testCalculateDelta None]', 1), ('[android.provider.cts.simphonebook.SimPhonebookContract_ElementaryFilesTest getActiveSubscriptionInfoList None]', 1), ('[android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest testVerify_no_events_fail None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testDisallowPrivateDnsConfigurationRestriction None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testClearDisallowPrivateDnsConfigurationRestriction None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testSetOpportunisticMode None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testSetSpecificHostMode None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testSetModeWithIncorrectHost None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testCanSetModeDespiteUserRestriction None]', 1), ('[android.net.cts.legacy.api22.ConnectivityManagerLegacyTest testStartUsingNetworkFeature_enableHipri None]', 1), ('[com.android.cts.deviceandprofileowner.NetworkLoggingTest testRetrieveNetworkLogs_forceNetworkLogs_receiveNetworkLogs None]', 1), ('[android.net.wifi.cts.NsdManagerTest testNDSManager None]', 1), ('[android.net.cts.ConnectivityDiagnosticsManagerTest TestNetworkCallback None]', 1), ('[android.net.cts.ConnectivityDiagnosticsManagerTest testOnDataStallSuspected_DnsEvents None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest testIkeSessionSetupAndChildSessionSetupWithTunnelModeV6 None]', 1), ('[android.net.cts.MultinetworkApiTest getTestableNetworks None]', 1), ('[android.net.cts.MultinetworkApiTest testResNApi None]', 1), ('[android.net.cts.MultinetworkApiTest testResNApiNXDomainPrivateDns None]', 1), ('[android.net.cts.IpSecManagerTest testAllocSpi None]', 1), ('[com.android.cts.delegate.WorkProfileNetworkLoggingDelegateTest testRetrieveNetworkLogs_forceNetworkLogs_receiveNetworkLogs None]', 1), ('[android.net.cts.DnsTest testNativeDns None]', 1), ('[android.net.cts.DnsTest testDnsWorks None]', 1), ('[android.security.SELinuxTargetSdkTest testCanExecuteFromHomeDir None]', 1), ('[android.devicepolicy.cts.NetworkResetTest TestApis None]', 1), ('[android.devicepolicy.cts.NetworkResetTest factoryReset_disallowedByConfigPrivateDnsPolicy_doesPartialFactoryReset None]', 1), ('[android.devicepolicy.cts.NetworkResetTest isFalse None]', 1), ('[com.android.cts.net.hostside.VpnTest finish None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerProfileUserRestriction_onParent None]', 1), ('[com.android.cts.deviceowner.NetworkLoggingTest testNetworkLoggingAndRetrieval None]', 1), ('[android.net.cts.DnsResolverTest getTestableNetworks None]', 1), ('[android.net.cts.DnsResolverTest testRawQueryNXDomainWithPrivateDns None]', 1), ('[android.net.cts.DnsResolverTest testRawQueryNXDomainInlineWithPrivateDns None]', 1), ('[android.net.cts.DnsResolverTest testRawQueryCancel None]', 1), ('[android.net.cts.DnsResolverTest testRawQueryBlobCancel None]', 1), ('[android.net.cts.DnsResolverTest testCancelBeforeQuery None]', 1), ('[android.net.cts.DnsResolverTest testContinuousQueriesInline None]', 1), ('[android.net.cts.DnsResolverTest testQueryCancelForInetAddress None]', 1), ('[android.net.cts.DnsResolverTest testPrivateDnsBypass None]', 1), ('[android.security.identity.cts.ProvisioningTest testUpdateCredential None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/DnsResolverTest.java', 9), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PrivateDnsPolicyTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/DataCallResponseTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/DataCallResponseTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/MultinetworkApiTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/NetworkResetTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/ChildSessionParamsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/NetworkLoggingTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk27/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpSecManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk29/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/WorkProfileNetworkLoggingDelegateTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/DnsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiBackupRestoreTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk25/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdkCurrent/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiBackupRestoreTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk28/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/NetworkLoggingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/NoNetworkStatePermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ListeningPortsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_ElementaryFilesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/netlegacy22.api/src/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/NsdManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/net/app/src/com/android/cts/net/hostside/VpnTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 1)]"	"[('(3,DNS,/android/security/SELinuxTargetSdkTest.java)', 5), ('(2,DNS,/android/hardware/camera2/cts/CaptureRequestTest.java)', 2), ('(15,DNS,/android/telephony/cts/DataCallResponseTest.java)', 2), ('(2,DNS,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 2), ('(3,DNS,/android/net/wifi/cts/WifiBackupRestoreTest.java)', 2), ('(1,DNS,/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java)', 1), ('(1,DNS,/android/permission/cts/NoNetworkStatePermissionTest.java)', 1), ('(8,DNS,/android/media/cts/PresentationSyncTest.java)', 1), ('(2,DNS,/android/appsecurity/cts/ListeningPortsTest.java)', 1), ('(6,DNS,/android/net/ipsec/ike/cts/ChildSessionParamsTest.java)', 1), ('(4,DNS,/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java)', 1), ('(8,DNS,/android/provider/cts/simphonebook/SimPhonebookContract_ElementaryFilesTest.java)', 1), ('(2,DNS,/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java)', 1), ('(53,DNS,/com/android/cts/deviceowner/PrivateDnsPolicyTest.java)', 1), ('(2,DNS,/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java)', 1), ('(7,DNS,/com/android/cts/deviceandprofileowner/NetworkLoggingTest.java)', 1), ('(3,DNS,/android/net/wifi/cts/NsdManagerTest.java)', 1), ('(7,DNS,/android/net/cts/ConnectivityDiagnosticsManagerTest.java)', 1), ('(2,DNS,/android/net/ipsec/ike/cts/IkeSessionPskTest.java)', 1), ('(16,DNS,/android/net/cts/MultinetworkApiTest.java)', 1), ('(6,DNS,/android/net/cts/IpSecManagerTest.java)', 1), ('(7,DNS,/com/android/cts/delegate/WorkProfileNetworkLoggingDelegateTest.java)', 1), ('(9,DNS,/android/net/cts/IpConfigurationTest.java)', 1), ('(18,DNS,/android/net/cts/DnsTest.java)', 1), ('(31,DNS,/android/devicepolicy/cts/NetworkResetTest.java)', 1), ('(57,DNS,/com/android/cts/net/hostside/VpnTest.java)', 1), ('(1,DNS,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(29,DNS,/com/android/cts/deviceowner/NetworkLoggingTest.java)', 1), ('(108,DNS,/android/net/cts/DnsResolverTest.java)', 1), ('(8,DNS,/android/security/identity/cts/ProvisioningTest.java)', 1)]"	"[('([1:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[1]:method_text:[SELinuxTargetSdkTestBase{    /**     * Verify that net.dns properties may not be read     */   ])', 4), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[DNS]:[2]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 2), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[t(response).isNotEqualTo(null);        assertThat(response).isNotEqualTo(new String[1]);    }   ])', 2), ('([2:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[2]:method_text:[EATOR.createFromParcel(stateParcel);        assertThat(response).isEqualTo(parcelResponse);    }}])', 2), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[public void testNoDns() throws IOException {        noDns();    }    ])', 2), (""([1:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[DNS]:[1]:method_text:[     * a no-op, will only ensure that the device does not crash when invoking the API's.     */   ])"", 2), ('([2:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[DNS]:[2]:method_text:[ is deserialized correctly from AOSP     * legacy supplicant/ipconf backup data format.     */   ])', 2), ('([2:/android/net/cts/DnsResolverTest.java]:[DNS]:[2]:method_text:[  latch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));            } while (retry);        }    }   ])', 2), ('([1:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[DNS]:[1]:method_text:[not used in test.                    // UserManager.DISALLOW_DEBUGGING_FEATURES            );   ])', 1), ('([1:/android/permission/cts/NoNetworkStatePermissionTest.java]:[DNS]:[1]:method_text:[w.google.com"");            fail();        } catch (SecurityException expected) {        }    }}])', 1), ('([8:/android/media/cts/PresentationSyncTest.java]:[DNS]:[8]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([2:/android/appsecurity/cts/ListeningPortsTest.java]:[DNS]:[2]:method_text:[);            }        }        contents.append(""\'"");        return contents.toString();    }}])', 1), ('([1:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[1]:method_text:[.55""));    private static final int MTU_V4 = 1440;    private static final int MTU_V6 = 1400;   ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[getMtuV4()).isEqualTo(MTU_V4);        assertThat(response.getMtuV6()).isEqualTo(MTU_V6);    }   ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[TU_V6)                .build();        assertThat(response).isEqualTo(equalsResponse);    }   ])', 1), ('([2:/android/net/ipsec/ike/cts/ChildSessionParamsTest.java]:[DNS]:[2]:method_text:[BOUND_V4_TS, OUTBOUND_V6_TS),                childParams.getOutboundTrafficSelectors());    }   ])', 1), ('([4:/android/net/ipsec/ike/cts/ChildSessionParamsTest.java]:[DNS]:[4]:method_text:[any expected address is not found in result        assertTrue(expectedAddresses.isEmpty());    }}])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java]:[DNS]:[4]:method_text:[Double) stats.getValue(SensorStats.JITTER_95_PERCENTILE_PERCENT_KEY),                0.01);    }}])', 1), ('([8:/android/provider/cts/simphonebook/SimPhonebookContract_ElementaryFilesTest.java]:[DNS]:[8]:method_text:[   .isAtLeast(PHONE_NUMBER_MAX_LENGTH_MINIMUM);                }            }        }    }   ])', 1), ('([2:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[DNS]:[2]:method_text:[tion(expectedUs);        verification.addSensorEvents(events);        return verification;    }}])', 1), ('([9:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[9]:method_text:[DNS, false);        mDevicePolicyManager.setGlobalPrivateDnsModeOpportunistic(getWho());    }   ])', 1), ('([3:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[3]:method_text:[r.hasUserRestriction(                UserManager.DISALLOW_CONFIG_PRIVATE_DNS)).isTrue();    }   ])', 1), ('([14:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[14]:method_text:[privateDnsHost, expectedResult, resultCode),                expectedResult, resultCode);    }   ])', 1), ('([5:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[5]:method_text:[IC);        assertThat(mDevicePolicyManager.getGlobalPrivateDnsHost(getWho())).isNull();    }   ])', 1), ('([7:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[7]:method_text:[er.getGlobalPrivateDnsHost(getWho())).isEqualTo(                VALID_PRIVATE_DNS_HOST);    }   ])', 1), ('([4:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[4]:method_text:[TE_DNS_HOST,                DevicePolicyManager.PRIVATE_DNS_SET_ERROR_HOST_NOT_SERVING);    }   ])', 1), ('([11:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[11]:method_text:[ISTIC);        assertThat(mDevicePolicyManager.getGlobalPrivateDnsHost(getWho())).isNull();    }}])', 1), ('([1:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[1]:method_text:[riptor> TRAFFIC_DESCRIPTORS =            Arrays.asList(new TrafficDescriptor(DNN, OS_APP_ID));   ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[FO);        assertThat(response.getTrafficDescriptors()).isEqualTo(TRAFFIC_DESCRIPTORS);    }   ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[PTORS)                .build();        assertThat(response).isEqualTo(equalsResponse);    }   ])', 1), ('([2:/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java]:[DNS]:[2]:method_text:[led && isWifiConnected()) {                disconnectFromWifi();            }        }    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/NetworkLoggingTest.java]:[DNS]:[1]:method_text:[s);        mDevice = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());    }   ])', 1), ('([6:/com/android/cts/deviceandprofileowner/NetworkLoggingTest.java]:[DNS]:[6]:method_text:[ddr) {        return ((addr instanceof Inet4Address) || (addr instanceof Inet6Address));    }   ])', 1), ('([3:/android/net/wifi/cts/NsdManagerTest.java]:[DNS]:[3]:method_text:[l);        }        catch (InterruptedException ex) {            return false;        }    }}])', 1), ('([3:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[DNS]:[3]:method_text:[redCallbacks) {            mCdm.unregisterConnectivityDiagnosticsCallback(cb);        }    }   ])', 1), ('([4:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[DNS]:[4]:method_text:[TS);        verifyOnDataStallSuspected(DETECTION_METHOD_DNS_EVENTS, TIMESTAMP, extras);    }   ])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[ify that selinux context is the expected domain based on     * targetSdkVersion = 26-27     */   ])', 1), ('([2:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[DNS]:[2]:method_text:[p);        verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);    }   ])', 1), ('([3:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[3]:method_text:[  testableNetworks.size() >= 1);        return testableNetworks.toArray(new Network[0]);    }   ])', 1), ('([2:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[2]:method_text:[    @AppModeFull(reason = ""WRITE_SECURE_SETTINGS permission can\'t be granted to instant apps"")   ])', 1), ('([11:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[11]:method_text:[        }        } finally {            mCtsNetUtils.restorePrivateDnsSetting();        }    }}])', 1), ('([5:/android/net/cts/IpSecManagerTest.java]:[DNS]:[5]:method_text:[loc the same SPI that was specifically created (expect SpiUnavailable)     * Close SPIs     */   ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[DNS]:[1]:method_text:[     * send data on socket     * release transform     * send data (expect exception)     */   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DNS]:[2]:method_text:[ateDnsPolicy() throws Exception {        executeDeviceOwnerTest(""PrivateDnsPolicyTest"");    }   ])', 1), ('([1:/com/android/cts/delegate/WorkProfileNetworkLoggingDelegateTest.java]:[DNS]:[1]:method_text:[        DelegateTestUtils.DelegatedLogsReceiver.sBatchCountDown = new CountDownLatch(1);    }   ])', 1), ('([6:/com/android/cts/delegate/WorkProfileNetworkLoggingDelegateTest.java]:[DNS]:[6]:method_text:[ddr) {        return ((addr instanceof Inet4Address) || (addr instanceof Inet6Address));    }   ])', 1), ('([9:/android/net/cts/IpConfigurationTest.java]:[DNS]:[9]:method_text:[NS)                .build();        mProxy = ProxyInfo.buildDirectProxy(""test"", 8888);    }   ])', 1), ('([7:/android/net/cts/DnsTest.java]:[DNS]:[7]:method_text:[     */    @SkipPresubmit(reason = ""IPv6 support may be missing on presubmit virtual hardware"")   ])', 1), ('([11:/android/net/cts/DnsTest.java]:[DNS]:[11]:method_text:[ECONDS));        } finally {            mCm.unregisterNetworkCallback(callback);        }    }}])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DNS]:[2]:method_text:[) {            return;        }        executeDeviceOwnerTest(""PrivateDnsPolicyTest"");    }   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[1]:method_text:[cuteFromHomeDir());    }    /**     * Verify that net.dns properties may not be read     */   ])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[Verify that selinux context is the expected domain based on     * targetSdkVersion = 25     */   ])', 1), ('([6:/android/devicepolicy/cts/NetworkResetTest.java]:[DNS]:[6]:method_text:[  restoreSettings(mOriginalAirplaneMode, mOriginalPrivateDnsMode, mOriginalAvoidBadWifi);    }   ])', 1), ('([11:/android/devicepolicy/cts/NetworkResetTest.java]:[DNS]:[11]:method_text:[  restoreUserRestriction(originalUserRestriction, DISALLOW_CONFIG_PRIVATE_DNS);        }    }   ])', 1), ('([14:/android/devicepolicy/cts/NetworkResetTest.java]:[DNS]:[14]:method_text:[            sDeviceState.dpc().devicePolicyManager().clearUserRestriction(policy);        }    }}])', 1), ('([57:/com/android/cts/net/hostside/VpnTest.java]:[DNS]:[57]:method_text:[      super.onReceive(context, intent);            }            received = true;        }    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[DNS]:[1]:method_text:[ISALLOW_CONFIG_DATE_TIME,                    UserManager.DISALLOW_AIRPLANE_MODE            );   ])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[Verify that selinux context is the expected domain based on     * targetSdkVersion = 28     */   ])', 1), (""([1:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[DNS]:[1]:method_text:[ there's one user on the device or all     * secondary users / profiles are affiliated.     */   ])"", 1), ('([28:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[DNS]:[28]:method_text:[s addr) {        return ((addr instanceof Inet4Address) || (addr instanceof Inet6Address));    }}])', 1), ('([43:/android/net/cts/DnsResolverTest.java]:[DNS]:[43]:method_text:[    assertGreaterThan(mMsg + "" No question found"", mDnsAnswer.getQDCount(), 0);        }    }   ])', 1), ('([2:/android/net/cts/DnsResolverTest.java]:[DNS]:[2]:method_text:[hPrivateDns() throws Exception {        doTestRawQueryNXDomainWithPrivateDns(mExecutor);    }   ])', 1), ('([22:/android/net/cts/DnsResolverTest.java]:[DNS]:[22]:method_text:[              callback.waitForAnswer());            callback.assertNXDomain();        }    }   ])', 1), ('([4:/android/net/cts/DnsResolverTest.java]:[DNS]:[4]:method_text:[solver.DnsException error) {            mErrorMsg = mMsg + error.getMessage();        }    }   ])', 1), ('([1:/android/net/cts/DnsResolverTest.java]:[DNS]:[1]:method_text:[            assertTrue(msg + "" returned 0 results"", !callback.isAnswerEmpty());        }    }   ])', 1), ('([4:/android/net/cts/DnsResolverTest.java]:[DNS]:[4]:method_text:[         assertTrue(msg + "" returned Ipv4 results"", !callback.hasIpv4Answer());        }    }   ])', 1), ('([28:/android/net/cts/DnsResolverTest.java]:[DNS]:[28]:method_text:[   queryV6 ? !callback.hasIpv4Answer() : !callback.hasIpv6Answer());            }        }    }}])', 1), ('([8:/android/security/identity/cts/ProvisioningTest.java]:[DNS]:[8]:method_text:[til.getStringEntry(rd, updNs, ""last_name""));        store.deleteCredentialByName(""test"");    }}])', 1)]"	""	""	""	""	""
"211:618251) 7.4.5.3  . Captive Portals"	"7.4.5.3"	"C-1-5"	""	"[('android.telephony.ims.cts.SipDelegateManagerTest', 17), ('android.net.wifi.cts.WifiManagerTest', 6), ('android.app.cts.ActivityManagerProcessStateTest', 5), ('android.bluetooth.cts.HearingAidProfileTest', 5), ('android.quickaccesswallet.cts.QuickAccessWalletClientTest', 4), ('android.car.cts.CarTest', 4), ('android.telecom.cts.BackgroundCallAudioTest', 3), ('android.permission.cts.NoWifiStatePermissionTest', 3), ('android.os.cts.ParcelFileDescriptorTest', 2), ('android.net.cts.ConnectivityManagerTest', 2), ('android.car.cts.CarAppFocusManagerTest', 2), ('android.suspendapps.cts.DialogTests', 2), ('android.media.cts.MediaSession2ServiceTest', 2), ('android.telecom.cts.HandoverTest', 2), ('android.security.cts.StagefrightTest', 2), ('android.net.cts.network.permission.InternetPermissionTest', 2), ('android.telephony.cts.CarrierMessagingServiceWrapperTest', 2), ('android.net.cts.network.permission.UpdateStatsPermissionTest', 2), ('android.net.wifi.cts.ConnectedNetworkScorerTest', 2), ('android.net.wifi.cts.WifiLocationInfoTest', 2), ('com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity', 2), ('android.net.cts.IpSecBaseTest', 2), ('android.suspendapps.cts.DualSuspendTests', 2), ('android.media.cts.MediaScannerConnectionTest', 2), ('com.android.server.cts.device.statsdatom.AtomTests', 2), ('android.net.cts.VpnServiceTest', 1), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('android.telecom.cts.OutgoingCallTest', 1), ('com.android.cts.deviceandprofileowner.AlwaysOnVpnTest', 1), ('android.telecom.cts.CallDetailsTest', 1), ('android.net.cts.TrafficStatsTest', 1), ('android.permission.cts.NoNetworkStatePermissionTest', 1), ('android.telecom.cts.PhoneAccountSuggestionServiceTest', 1), ('android.media.cts.MediaBrowserServiceTest', 1), ('android.suspendapps.cts.SuspendPackagesTest', 1), ('android.security.net.config.cts.DownloadManagerTest', 1), ('android.telecom.cts.VideoCallTest', 1), ('android.keystore.cts.KeyPairGeneratorTest', 1), ('android.media.cts.MediaSession2Test', 1), ('com.android.cts.deviceandprofileowner.NetworkLoggingTest', 1), ('android.telecom.cts.BasicInCallServiceTest', 1), ('android.media.cts.NativeDecoderTest', 1), ('android.net.wifi.cts.ScanResultTest', 1), ('android.jdwptunnel.cts.JdwpTunnelTest', 1), ('android.media.cts.StreamingMediaPlayerTest', 1), ('android.jvmti.cts.JvmtiAttachingHostTest', 1), ('com.android.server.cts.device.statsd.AtomTests', 1), ('android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest', 1), ('android.telecom.cts.ExtendedInCallServiceTest', 1), ('android.media.cts.MediaPlayerFlakyNetworkTest', 1), ('android.telecom.cts.RemoteConferenceTest', 1), ('com.android.cts.delegate.WorkProfileNetworkLoggingDelegateTest', 1), ('android.media.cts.ConnectionStatus', 1), ('com.android.cts.delegate.NetworkLoggingDelegateTest', 1), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('android.cts.statsd.subscriber.ShellSubscriberTest', 1), ('android.net.cts.SSLCertificateSocketFactoryTest', 1), ('android.net.wifi.cts.MultiStaConcurrencyWifiNetworkSpecifierTest', 1)]"	"[('setUp', 21), ('getContext', 16), ('getInstrumentation', 15), ('tearDown', 10), ('getSimpleName', 4), ('getTargetContext', 4), ('notify', 4), ('size', 4), ('getPort', 4), ('receive', 4), ('now', 4), ('getResources', 3), ('stream', 3), ('getPackageManager', 2), ('getPackageName', 2), ('getService', 2), ('getLastCall', 2), ('connect', 2), ('getBytes', 2), ('close', 2), ('getDevice', 2), ('moveToHomeScreen', 2), ('name', 2), ('findFirst', 2), ('trim', 2), ('getDefaultHostnameVerifier', 2), ('VpnService', 1), ('setUpClass', 1), ('getUiAutomation', 1), ('cellConnectAttempted', 1), ('getUserSelectedOutgoingPhoneAccount', 1), ('Object', 1), ('ConnectionCallback', 1), ('onConnected', 1), ('SubscriptionCallback', 1), ('ItemCallback', 1), ('Runnable', 1), ('run', 1), ('Bundle', 1), ('myPid', 1), ('myUid', 1), ('getDefaultSubscriptionId', 1), ('getAction', 1), ('countDown', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('getSipDelegateManager', 1), ('setDefaultSmsApp', 1), ('virtualMachineManager', 1), ('attachingConnectors', 1), ('transport', 1), ('defaultArguments', 1), ('eventRequestManager', 1), ('suspend', 1), ('allClasses', 1), ('createClassPrepareRequest', 1), ('enable', 1), ('resume', 1), ('eventQueue', 1), ('remove', 1), ('request', 1), ('referenceType', 1), ('getArguments', 1), ('getCurrentUser', 1), ('releaseMediaPlayer', 1), ('releaseHttpServer', 1), ('getNotConnectedReason', 1), ('getActiveNetworkInfo', 1), ('getReason', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1)]"	""	""	"7.4.5.3/C-1-5"	"""C-1-5] MUST ensure that, while the user is logging in to a captive portal, the default network used by applications (as returned by ConnectivityManager.getActiveNetwork, ConnectivityManager.registerDefaultNetworkCallback, and used by default by Java networking APIs such as java.net.Socket, and native APIs such as connect()) is any other available network that provides internet access, if available. <h4 id=""746_sync_settings"" """	"07040503.670105"	"connect() ConnectivityManager.getActiveNetwork java.net.Socket ConnectivityManager.registerDefaultNetworkCallback"	""	""	""	"[('connect()', 90), ('java.net.Socket', 21), ('ConnectivityManager.getActiveNetwork', 3)]"	""	"[('[android.quickaccesswallet.cts.QuickAccessWalletClientTest testDisconnect_shouldClearListenersAndDisconnect None]', 2), ('[android.quickaccesswallet.cts.QuickAccessWalletClientTest testConnect_disconnect_reconnect_shouldWork None]', 2), ('[android.car.cts.CarTest isConnected None]', 2), ('[android.car.cts.CarTest testConnection None]', 2), ('[android.media.cts.MediaSession2ServiceTest testOnGetSession_returnsSession None]', 2), ('[android.security.cts.StagefrightTest TestName None]', 2), ('[android.net.wifi.cts.WifiLocationInfoTest isNotNull None]', 2), ('[com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity startTest None]', 2), ('[android.net.cts.IpSecBaseTest currentTimeMillis None]', 2), ('[android.suspendapps.cts.DualSuspendTests testCannotSuspendUnderDisallowUninstallApps None]', 2), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled None]', 1), ('[android.telecom.cts.OutgoingCallTest testExtraPhoneAccountHandleAvailable None]', 1), ('[android.telecom.cts.CallDetailsTest testLogFeatures None]', 1), ('[android.net.cts.ConnectivityManagerTest testOpenConnection None]', 1), ('[android.net.cts.ConnectivityManagerTest disconnectFromCell None]', 1), ('[android.car.cts.CarAppFocusManagerTest testFocusChange None]', 1), ('[android.car.cts.CarAppFocusManagerTest testFilter None]', 1), ('[android.suspendapps.cts.DialogTests testInterceptorActivity_moreDetails None]', 1), ('[android.telecom.cts.HandoverTest testHandoverSourceFailed None]', 1), ('[android.telecom.cts.HandoverTest testHandoverDestinationFailed None]', 1), ('[android.permission.cts.NoNetworkStatePermissionTest testGetActiveNetworkInfo None]', 1), ('[android.net.wifi.cts.WifiManagerTest testDeprecatedApis None]', 1), ('[android.net.wifi.cts.WifiManagerTest testIsStaApConcurrencySupported None]', 1), ('[android.net.wifi.cts.WifiManagerTest testGetCurrentNetwork None]', 1), ('[android.net.wifi.cts.WifiManagerTest testDisableEphemeralNetwork None]', 1), ('[android.net.wifi.cts.WifiManagerTest testAllowAutojoin None]', 1), ('[android.net.wifi.cts.WifiManagerTest testAllowAutojoinGlobal None]', 1), ('[android.telecom.cts.PhoneAccountSuggestionServiceTest disconnect None]', 1), ('[android.media.cts.MediaBrowserServiceTest disconnect None]', 1), ('[android.suspendapps.cts.SuspendPackagesTest testOpCameraOnSuspend None]', 1), ('[android.telephony.cts.CarrierMessagingServiceWrapperTest disconnect None]', 1), ('[android.telephony.cts.CarrierMessagingServiceWrapperTest testCloseWrapper None]', 1), ('[android.telecom.cts.VideoCallTest testSetZoom None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest connectTestImsServiceWithSipTransportAndConfig None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCloseActiveDialog None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testReceivedActiveDialogClose None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testActiveDialogPendingNewInvite None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCloseSessionByePendingCleanup None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCloseSessionPendingBye None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCloseMultipleSessionsPendingBye None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCloseSessionBye None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testSwitchAppPendingBye None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testSwitchAppActiveSession None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testActiveSessionDeregistering None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testActiveSessionDeregisteringNoResponse None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testMultipleActiveSessionDeregisteringNoResponse None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testActiveSessionDeregisteringNewInviteDenied None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testInviteDeniedTag None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testInviteAcceptContactNotAssociated None]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testIncomingInviteDeregistering None]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testBackgroundCheckService None]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testBackgroundCheckStopsService None]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testBackgroundCheckBroadcastService None]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testBackgroundCheckActivityService None]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testForegroundServiceAppOp None]', 1), ('[android.telecom.cts.BackgroundCallAudioTest testAudioProcessingFromCallScreeningDisallow None]', 1), ('[android.telecom.cts.BackgroundCallAudioTest testManualAudioCallScreenReject None]', 1), ('[android.telecom.cts.BackgroundCallAudioTest testLowerApiLevelCompatibility2 None]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest isNotNull None]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testConnectedNetworkScorerWithSessionId None]', 1), ('[android.suspendapps.cts.DialogTests testInterceptorActivity_strings None]', 1), ('[android.keystore.cts.KeyPairGeneratorTest currentTimeMillis None]', 1), ('[android.media.cts.MediaSession2Test testCallback_onConnect_onDisconnect None]', 1), ('[android.bluetooth.cts.HearingAidProfileTest test_getProxyServiceConnect None]', 1), ('[android.bluetooth.cts.HearingAidProfileTest test_getConnectionState None]', 1), ('[android.bluetooth.cts.HearingAidProfileTest test_getConnectedDevices None]', 1), ('[android.bluetooth.cts.HearingAidProfileTest test_getDevicesMatchingConnectionStates None]', 1), ('[android.bluetooth.cts.HearingAidProfileTest test_getConnectionStateChangedIntent None]', 1), ('[com.android.cts.deviceandprofileowner.NetworkLoggingTest testSetDelegateScope_noDelegation None]', 1), ('[android.telecom.cts.BasicInCallServiceTest testTelephonyCall_bindsToInCallServiceAndAddsCall None]', 1), ('[android.net.wifi.cts.ScanResultTest testScanResultMatchesWifiInfo None]', 1), ('[android.media.cts.MediaScannerConnectionTest currentTimeMillis None]', 1), ('[android.media.cts.MediaScannerConnectionTest testMediaScannerConnection None]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest disable None]', 1), ('[com.android.server.cts.device.statsd.AtomTests testGenerateMobileTraffic None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest isStaConcurrencyForRestrictedConnectionsSupported None]', 1), ('[android.telecom.cts.ExtendedInCallServiceTest testAddNewOutgoingCallAndThenDisconnect None]', 1), ('[android.telecom.cts.RemoteConferenceTest testRemoteConferenceCallbacks_Disconnect None]', 1), ('[com.android.cts.delegate.WorkProfileNetworkLoggingDelegateTest testSetNetworkLogsEnabled_false None]', 1), ('[android.media.cts.ConnectionStatus isAvailable None]', 1), ('[android.permission.cts.NoWifiStatePermissionTest testGetDhcpInfo None]', 1), ('[android.permission.cts.NoWifiStatePermissionTest testDisconnect None]', 1), ('[android.permission.cts.NoWifiStatePermissionTest testReconnect None]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testWifiReconnect None]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testGenerateMobileTraffic None]', 1), ('[com.android.cts.delegate.NetworkLoggingDelegateTest testNetworkLogging None]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault None]', 1), ('[android.cts.statsd.subscriber.ShellSubscriberTest testShellSubscriptionReconnect None]', 1), ('[android.net.cts.SSLCertificateSocketFactoryTest toList None]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyWifiNetworkSpecifierTest isStaConcurrencyForLocalOnlyConnectionsSupported None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/SipDelegateManagerTest.java', 17), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 6), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/HearingAidProfileTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/BackgroundCallAudioTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/NoWifiStatePermissionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/quickaccesswallet/src/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarAppFocusManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/HandoverTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CarrierMessagingServiceWrapperTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConnectedNetworkScorerTest.java', 2), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpSecBaseTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaScannerConnectionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/quickaccesswallet/src/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/AtomTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/ParcelFileDescriptorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/VpnServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/OutgoingCallTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallDetailsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/TrafficStatsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DialogTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaSession2ServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/StagefrightTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/NoNetworkStatePermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/PhoneAccountSuggestionServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaBrowserServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/SuspendPackagesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/netpermission/internetpermission/src/android/net/cts/network/permission/InternetPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/netpermission/updatestatspermission/src/android/net/cts/network/permission/UpdateStatsPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/networksecurityconfig/networksecurityconfig-downloadmanager/src/android/security/net/config/cts/DownloadManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/VideoCallTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DialogTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLocationInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyPairGeneratorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLocationInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaSession2Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/netpermission/updatestatspermission/src/android/net/cts/network/permission/UpdateStatsPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/NetworkLoggingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/BasicInCallServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/StagefrightTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/NativeDecoderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DualSuspendTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ScanResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/StreamingMediaPlayerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/jvmti/attaching/host/src/android/jvmti/cts/JvmtiAttachingHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaSession2ServiceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/apps/statsdapp/src/com/android/server/cts/device/statsd/AtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/ExtendedInCallServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaPlayerFlakyNetworkTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/RemoteConferenceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/WorkProfileNetworkLoggingDelegateTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ConnectionStatus.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/NetworkLoggingDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/netpermission/internetpermission/src/android/net/cts/network/permission/InternetPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/ParcelFileDescriptorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/subscriber/ShellSubscriberTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/SSLCertificateSocketFactoryTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DualSuspendTests.java', 1)]"	"[('(3,connect(),/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java)', 2), ('(1,java.net.Socket,/android/os/cts/ParcelFileDescriptorTest.java)', 2), ('(3,connect(),/android/car/cts/CarTest.java)', 2), ('(1,connect(),/android/suspendapps/cts/DialogTests.java)', 2), ('(1,connect(),/android/media/cts/MediaSession2ServiceTest.java)', 2), ('(1,java.net.Socket,/android/security/cts/StagefrightTest.java)', 2), ('(1,java.net.Socket,/android/net/cts/network/permission/InternetPermissionTest.java)', 2), ('(1,java.net.Socket,/android/net/cts/network/permission/UpdateStatsPermissionTest.java)', 2), ('(1,connect(),/android/net/wifi/cts/WifiLocationInfoTest.java)', 2), ('(1,connect(),/android/suspendapps/cts/DualSuspendTests.java)', 2), ('(1,java.net.Socket,/android/net/cts/VpnServiceTest.java)', 1), ('(1,connect(),/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(1,connect(),/android/telecom/cts/OutgoingCallTest.java)', 1), ('(1,java.net.Socket,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1), ('(1,connect(),/android/telecom/cts/CallDetailsTest.java)', 1), ('(1,connect(),/android/net/cts/ConnectivityManagerTest.java)', 1), ('(1,java.net.Socket,/android/net/cts/ConnectivityManagerTest.java)', 1), ('(1,java.net.Socket,/android/net/cts/TrafficStatsTest.java)', 1), ('(2,connect(),/android/car/cts/CarAppFocusManagerTest.java)', 1), ('(2,connect(),/android/telecom/cts/HandoverTest.java)', 1), ('(2,ConnectivityManager.getActiveNetwork,/android/permission/cts/NoNetworkStatePermissionTest.java)', 1), ('(7,connect(),/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(1,connect(),/android/telecom/cts/PhoneAccountSuggestionServiceTest.java)', 1), ('(2,connect(),/android/media/cts/MediaBrowserServiceTest.java)', 1), ('(1,connect(),/android/suspendapps/cts/SuspendPackagesTest.java)', 1), ('(2,connect(),/android/telephony/cts/CarrierMessagingServiceWrapperTest.java)', 1), ('(1,java.net.Socket,/android/security/net/config/cts/DownloadManagerTest.java)', 1), ('(1,connect(),/android/telecom/cts/VideoCallTest.java)', 1), ('(18,connect(),/android/telephony/ims/cts/SipDelegateManagerTest.java)', 1), ('(25,connect(),/android/app/cts/ActivityManagerProcessStateTest.java)', 1), ('(4,connect(),/android/telecom/cts/BackgroundCallAudioTest.java)', 1), ('(3,connect(),/android/net/wifi/cts/ConnectedNetworkScorerTest.java)', 1), ('(1,java.net.Socket,/android/keystore/cts/KeyPairGeneratorTest.java)', 1), ('(1,connect(),/android/media/cts/MediaSession2Test.java)', 1), ('(5,connect(),/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java)', 1), ('(1,ConnectivityManager.getActiveNetwork,/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java)', 1), ('(7,connect(),/android/bluetooth/cts/HearingAidProfileTest.java)', 1), ('(1,connect(),/com/android/cts/deviceandprofileowner/NetworkLoggingTest.java)', 1), ('(1,connect(),/android/telecom/cts/BasicInCallServiceTest.java)', 1), ('(1,java.net.Socket,/android/media/cts/NativeDecoderTest.java)', 1), ('(1,connect(),/android/net/cts/IpSecBaseTest.java)', 1), ('(2,java.net.Socket,/android/net/cts/IpSecBaseTest.java)', 1), ('(1,connect(),/android/net/wifi/cts/ScanResultTest.java)', 1), ('(4,connect(),/android/media/cts/MediaScannerConnectionTest.java)', 1), ('(1,java.net.Socket,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(1,java.net.Socket,/android/media/cts/StreamingMediaPlayerTest.java)', 1), ('(1,java.net.Socket,/android/jvmti/cts/JvmtiAttachingHostTest.java)', 1), ('(2,connect(),/com/android/server/cts/device/statsd/AtomTests.java)', 1), ('(1,connect(),/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java)', 1), ('(1,connect(),/android/telecom/cts/ExtendedInCallServiceTest.java)', 1), ('(1,java.net.Socket,/android/media/cts/MediaPlayerFlakyNetworkTest.java)', 1), ('(1,connect(),/android/telecom/cts/RemoteConferenceTest.java)', 1), ('(1,connect(),/com/android/cts/delegate/WorkProfileNetworkLoggingDelegateTest.java)', 1), ('(3,ConnectivityManager.getActiveNetwork,/android/media/cts/ConnectionStatus.java)', 1), ('(6,connect(),/android/permission/cts/NoWifiStatePermissionTest.java)', 1), ('(5,connect(),/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(1,connect(),/com/android/cts/delegate/NetworkLoggingDelegateTest.java)', 1), ('(2,connect(),/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(1,connect(),/android/cts/statsd/subscriber/ShellSubscriberTest.java)', 1), ('(2,java.net.Socket,/android/net/cts/SSLCertificateSocketFactoryTest.java)', 1), ('(1,connect(),/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java)', 1)]"	"[('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[connect()]:[1]:method_text:[ces.transport.getDelegates().size());        verifyUpdateRegistrationCalled(ifaces.reg);    }   ])', 13), ('([2:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[connect()]:[2]:method_text:[t.disconnect();        TestQuickAccessWalletService.awaitUnbinding(3, TimeUnit.SECONDS);    }   ])', 2), ('([1:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[connect()]:[1]:method_text:[hat(callback.mResponse).isNotNull();        assertThat(callback2.mResponse).isNotNull();    }   ])', 2), ('([1:/android/os/cts/ParcelFileDescriptorTest.java]:[java.net.Socket]:[1]:method_text:[    private Context getContext() {        return InstrumentationRegistry.getContext();    }   ])', 2), ('([1:/android/car/cts/CarTest.java]:[connect()]:[1]:method_text:[       if (mCar != null && mCar.isConnected()) {            mCar.disconnect();        }    }   ])', 2), ('([2:/android/car/cts/CarTest.java]:[connect()]:[2]:method_text:[ertThat(mCar.isConnected()).isFalse();        assertThat(mCar.isConnecting()).isFalse();    }   ])', 2), ('([1:/android/media/cts/MediaSession2ServiceTest.java]:[connect()]:[1]:method_text:[Session(ControllerInfo)}     * can return different sessions for different controllers.     */   ])', 2), ('([1:/android/security/cts/StagefrightTest.java]:[java.net.Socket]:[1]:method_text:[ore any existing test methods     ***********************************************************/   ])', 2), ('([1:/android/net/cts/network/permission/InternetPermissionTest.java]:[java.net.Socket]:[1]:method_text:[>Tests Permission:     *   {@link android.Manifest.permission#INTERNET}.     */    @SmallTest   ])', 2), ('([1:/android/net/cts/network/permission/UpdateStatsPermissionTest.java]:[java.net.Socket]:[1]:method_text:[ission:     *   {@link android.Manifest.permission#UPDATE_DEVICE_STATS}.     */    @SmallTest   ])', 2), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[connect()]:[1]:method_text:[       ifaces.delegateConn.verifyAllDenied(SipDelegateManager.DENIED_REASON_NOT_ALLOWED);    }   ])', 2), ('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[connect()]:[1]:method_text:[assertEquals(DisconnectCause.REJECTED, call.getDetails().getDisconnectCause().getCode());    }   ])', 2), ('([1:/android/suspendapps/cts/DualSuspendTests.java]:[connect()]:[1]:method_text:[verHandler);        }        removeDeviceAdmin();        SuspendTestUtils.unsuspendAll();    }}])', 2), ('([1:/android/net/cts/VpnServiceTest.java]:[java.net.Socket]:[1]:method_text:[ @AppModeFull(reason = ""PackageManager#queryIntentActivities cannot access in instant app mode"")   ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[connect()]:[1]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([1:/android/telecom/cts/OutgoingCallTest.java]:[connect()]:[1]:method_text:[ils.TEST_PHONE_ACCOUNT_HANDLE_2, conn.getPhoneAccountHandle());        conn.onDisconnect();    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[java.net.Socket]:[1]:method_text:[MPONENT, VPN_PACKAGE,                /* restrictions */ null);        super.tearDown();    }   ])', 1), ('([1:/android/telecom/cts/CallDetailsTest.java]:[connect()]:[1]:method_text:[OLTE);    }    /**     * Verifies operation of the test telecom call ID system APIs.     */   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[connect()]:[1]:method_text:[in the current API version"");        } catch (UnsupportedOperationException expected) {}    }   ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[java.net.Socket]:[1]:method_text:[he network may not be connected or ready yet        return mCtsNetUtils.connectToWifi();    }   ])', 1), ('([1:/android/net/cts/TrafficStatsTest.java]:[java.net.Socket]:[1]:method_text:[not within range ["" + lower + "", "" + upper + ""]"",                range.contains(value));    }   ])', 1), ('([1:/android/car/cts/CarAppFocusManagerTest.java]:[connect()]:[1]:method_text:[Manager.APP_FOCUS_TYPE_NAVIGATION, true));        mManager.removeFocusListener(change);    }   ])', 1), ('([1:/android/car/cts/CarAppFocusManagerTest.java]:[connect()]:[1]:method_text:[T_WAIT_TIMEOUT_MS,                CarAppFocusManager.APP_FOCUS_TYPE_NAVIGATION, false));    }   ])', 1), ('([1:/android/suspendapps/cts/DialogTests.java]:[connect()]:[1]:method_text:[      if (mTestAppInterface != null) {            mTestAppInterface.disconnect();        }    }}])', 1), ('([1:/android/telecom/cts/HandoverTest.java]:[connect()]:[1]:method_text:[     * does not declare {@link android.telecom.PhoneAccount#EXTRA_SUPPORTS_HANDOVER_TO}.     */   ])', 1), ('([1:/android/telecom/cts/HandoverTest.java]:[connect()]:[1]:method_text:[ support handover that an outgoing handover     * request will be successfully relayed.     */   ])', 1), ('([2:/android/permission/cts/NoNetworkStatePermissionTest.java]:[ConnectivityManager.getActiveNetwork]:[2]:method_text:[ssion:     *   {@link android.Manifest.permission#ACCESS_NETWORK_STATE}.     */    @SmallTest   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[2]:method_text:[spot request at a time.     *     * Note: Location mode must be enabled for this test.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[1]:method_text:[ateCallback(Executor,     * WifiManager.TrafficStateCallback)} by sending some traffic.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[1]:method_text:[));    }    /**     * Tests {@link WifiManager#isWpa3SaeSupported()} does not crash.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[1]:method_text:[;        }    }    /**     * Tests {@link WifiManager#allowAutojoin(int, boolean)}.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[1]:method_text:[    }    /**     * Tests {@link WifiManager#allowAutojoinPasspoint(String, boolean)}.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[1]:method_text:[     }    }    /**     * Tests {@link WifiManager#isWapiSupported()} does not crash.     */   ])', 1), ('([1:/android/telecom/cts/PhoneAccountSuggestionServiceTest.java]:[connect()]:[1]:method_text:[oneAccountSuggestionService.disableService(mContext);        }        super.tearDown();    }   ])', 1), ('([2:/android/media/cts/MediaBrowserServiceTest.java]:[connect()]:[2]:method_text:[ll) {            mMediaBrowser.disconnect();            mMediaBrowser = null;        }    }   ])', 1), ('([1:/android/suspendapps/cts/SuspendPackagesTest.java]:[connect()]:[1]:method_text:[lable(String[] packageNames, UserHandle user,                boolean replacing) {        }    }}])', 1), ('([1:/android/telephony/cts/CarrierMessagingServiceWrapperTest.java]:[connect()]:[1]:method_text:[**     * Tests that the device properly connects to available CarrierMessagingServices.     */   ])', 1), ('([1:/android/telephony/cts/CarrierMessagingServiceWrapperTest.java]:[connect()]:[1]:method_text:[ice the all CarrierMessagingServices can receive sms and     * triggers valid callback.     */   ])', 1), ('([1:/android/security/net/config/cts/DownloadManagerTest.java]:[java.net.Socket]:[1]:method_text:[ength: 5\\r\\n\\r\\nhello"";    private static final long TIMEOUT = 3 * DateUtils.SECOND_IN_MILLIS;   ])', 1), ('([1:/android/telecom/cts/VideoCallTest.java]:[connect()]:[1]:method_text:[(10.0f);        assertZoomChanged(mockVideoProvider, 10.0f);        call.disconnect();    }   ])', 1), ('([2:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[connect()]:[2]:method_text:[nnectCarrierImsService();            sServiceConnector.restoreDefaultSmsApp();        }    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[connect()]:[1]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([4:/android/app/cts/ActivityManagerProcessStateTest.java]:[connect()]:[4]:method_text:[nd: first     * allowing a service to be started, then stopped by the system when idle.     */   ])', 1), ('([5:/android/app/cts/ActivityManagerProcessStateTest.java]:[connect()]:[5]:method_text:[t allow services to be started from broadcasts except when in     * the correct states.     */   ])', 1), ('([4:/android/app/cts/ActivityManagerProcessStateTest.java]:[connect()]:[4]:method_text:[/**     * Test that background check does allow services to be started from activities.     */   ])', 1), ('([4:/android/app/cts/ActivityManagerProcessStateTest.java]:[connect()]:[4]:method_text:[   /**     * Test that the foreground service app op does prevent the foreground state.     */   ])', 1), ('([8:/android/app/cts/ActivityManagerProcessStateTest.java]:[connect()]:[8]:method_text:[ound services demoted to     * ordinary service state when it is no longer the top app.     */   ])', 1), ('([2:/android/telecom/cts/BackgroundCallAudioTest.java]:[connect()]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);        assertTrue(result);    }}])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[connect()]:[1]:method_text:[ilityStatsEntry} retrieved from     * {@link WifiManager.OnWifiUsabilityStatsListener}.     */   ])', 1), ('([2:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[connect()]:[2]:method_text:[r works even after wifi restart.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/suspendapps/cts/DialogTests.java]:[connect()]:[1]:method_text:[erface.disconnect();        }        mUiDevice.pressBack();        mUiDevice.pressHome();    }}])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[connect()]:[1]:method_text:[E_NAME,                WIFI_LOCATION_TEST_APP_RETRIEVE_TRANSPORT_INFO_SERVICE), status);    }   ])', 1), ('([1:/android/keystore/cts/KeyPairGeneratorTest.java]:[java.net.Socket]:[1]:method_text:[ mKeyStore = KeyStore.getInstance(""AndroidKeyStore"");        mKeyStore.load(null, null);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[connect()]:[1]:method_text:[_NAME,                WIFI_LOCATION_TEST_APP_RETRIEVE_CONNECTION_INFO_SERVICE), status);    }   ])', 1), ('([1:/android/media/cts/MediaSession2Test.java]:[connect()]:[1]:method_text:[ession);            assertEquals(controllerInfo, sessionCallback.mController);        }    }   ])', 1), ('([5:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[connect()]:[5]:method_text:[}    }    private interface SetWifiCallback {        void onComplete(boolean isSuccess);    }}])', 1), ('([1:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[ConnectivityManager.getActiveNetwork]:[1]:method_text:[}    }    private interface SetWifiCallback {        void onComplete(boolean isSuccess);    }}])', 1), ('([2:/android/bluetooth/cts/HearingAidProfileTest.java]:[connect()]:[2]:method_text:[ * Basic test case to make sure that a fictional device is disconnected.     */    @MediumTest   ])', 1), ('([1:/android/bluetooth/cts/HearingAidProfileTest.java]:[connect()]:[1]:method_text:[     * Basic test case to get the list of connected Hearing Aid devices.     */    @MediumTest   ])', 1), ('([1:/android/bluetooth/cts/HearingAidProfileTest.java]:[connect()]:[1]:method_text:[matching Hearing Aid devices for each of the 4 connection     * states.     */    @MediumTest   ])', 1), ('([1:/android/bluetooth/cts/HearingAidProfileTest.java]:[connect()]:[1]:method_text:[ changed intent is called, the parameters and     * device are correct.     */    @MediumTest   ])', 1), ('([2:/android/bluetooth/cts/HearingAidProfileTest.java]:[connect()]:[2]:method_text:[ t) {        try {            Thread.sleep(t);        } catch (InterruptedException e) {}    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/NetworkLoggingTest.java]:[connect()]:[1]:method_text:[(""Did not get DeviceAdminReceiver#onNetworkLogsAvailable callback"");            }        }    }}])', 1), ('([1:/android/telecom/cts/BasicInCallServiceTest.java]:[connect()]:[1]:method_text:[onnect();                lock.release();            }        };        return callbacks;    }}])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[java.net.Socket]:[1]:method_text:["", Arrays.toString(a2));                fail(message + "": at index "" + i);            }    }   ])', 1), ('([1:/android/net/cts/IpSecBaseTest.java]:[connect()]:[1]:method_text:[uildIpSecTransform(InstrumentationRegistry.getContext(), spi, null, localAddr);        }    }   ])', 1), ('([2:/android/net/cts/IpSecBaseTest.java]:[java.net.Socket]:[2]:method_text:[uildIpSecTransform(InstrumentationRegistry.getContext(), spi, null, localAddr);        }    }   ])', 1), ('([1:/android/net/wifi/cts/ScanResultTest.java]:[connect()]:[1]:method_text:[sidQuoted);        assertThat(currentNetwork.frequency).isEqualTo(wifiInfo.getFrequency());    }}])', 1), ('([1:/android/media/cts/MediaScannerConnectionTest.java]:[connect()]:[1]:method_text:[ediaScannerConnection.disconnect();            mMediaScannerConnection = null;        }    }   ])', 1), ('([3:/android/media/cts/MediaScannerConnectionTest.java]:[connect()]:[3]:method_text:[th;            if (uri != null) {                mediaUri = uri;            }        }    }}])', 1), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[java.net.Socket]:[1]:method_text:[of the activity     * class and put and wait for a breakpoint on the onCreate function.     */   ])', 1), ('([1:/android/media/cts/StreamingMediaPlayerTest.java]:[java.net.Socket]:[1]:method_text:[ondition.   Disable until better solution is available    // Streaming RTSP video from YouTube   ])', 1), ('([1:/android/jvmti/cts/JvmtiAttachingHostTest.java]:[java.net.Socket]:[1]:method_text:[cted void setUp() throws Exception {        mCurrentUser = getDevice().getCurrentUser();    }   ])', 1), ('([2:/com/android/server/cts/device/statsd/AtomTests.java]:[connect()]:[2]:method_text:[           if (urlc != null) {                urlc.disconnect();            }        }    }   ])', 1), ('([1:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[connect()]:[1]:method_text:[work using restricted suggestion API.     * 3. Verify that both connections are active.     */   ])', 1), ('([1:/android/telecom/cts/ExtendedInCallServiceTest.java]:[connect()]:[1]:method_text:[);        inCallService.disconnectLastCall();        assertNumCalls(inCallService, 0);    }   ])', 1), ('([1:/android/media/cts/MediaPlayerFlakyNetworkTest.java]:[java.net.Socket]:[1]:method_text:[on {        releaseMediaPlayer();        releaseHttpServer();        super.tearDown();    }   ])', 1), ('([1:/android/telecom/cts/RemoteConferenceTest.java]:[connect()]:[1]:method_text:[backInvoker.getArgs(0)[1]);        mRemoteConferenceObject.unregisterCallback(callback);    }   ])', 1), ('([1:/com/android/cts/delegate/WorkProfileNetworkLoggingDelegateTest.java]:[connect()]:[1]:method_text:[urlConnection != null) {                urlConnection.disconnect();            }        }    }}])', 1), ('([3:/android/media/cts/ConnectionStatus.java]:[ConnectivityManager.getActiveNetwork]:[3]:method_text:[       break;            }        }        // ping test timeout        return false;    }   ])', 1), ('([1:/android/permission/cts/NoWifiStatePermissionTest.java]:[connect()]:[1]:method_text:[ <p>Requires Permission:     *   {@link android.Manifest.permission#CHANGE_WIFI_STATE}.     */   ])', 1), ('([3:/android/permission/cts/NoWifiStatePermissionTest.java]:[connect()]:[3]:method_text:[ <p>Requires Permission:     *   {@link android.Manifest.permission#CHANGE_WIFI_STATE}.     */   ])', 1), ('([2:/android/permission/cts/NoWifiStatePermissionTest.java]:[connect()]:[2]:method_text:[ <p>Requires Permission:     *   {@link android.Manifest.permission#CHANGE_WIFI_STATE}.     */   ])', 1), ('([1:/com/android/server/cts/device/statsdatom/AtomTests.java]:[connect()]:[1]:method_text:[connect(context);        sleep(500);        wifiReconnect(context);        sleep(500);    }   ])', 1), ('([4:/com/android/server/cts/device/statsdatom/AtomTests.java]:[connect()]:[4]:method_text:[PORT_WIFI)) {                return true;            }        }        return false;    }   ])', 1), ('([1:/com/android/cts/delegate/NetworkLoggingDelegateTest.java]:[connect()]:[1]:method_text:[tch (IOException e) {            Log.w(TAG, ""Failed to connect to "" + server, e);        }    }}])', 1), ('([2:/android/app/usage/cts/NetworkUsageStatsTest.java]:[connect()]:[2]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([1:/android/cts/statsd/subscriber/ShellSubscriberTest.java]:[connect()]:[1]:method_text:[    value += ((int) arr[j + startIndex] & 0xffL) << (8 * j);        }        return value;    }}])', 1), ('([2:/android/net/cts/SSLCertificateSocketFactoryTest.java]:[java.net.Socket]:[2]:method_text:[nameVerifier() {        HttpsURLConnection.setDefaultHostnameVerifier(mDefaultVerifier);    }   ])', 1), ('([1:/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java]:[connect()]:[1]:method_text:[ to a network using peer to peer API.     * 3. Verify that both connections are active.     */   ])', 1)]"	""	""	""	""	""
"214:621066) 7.4.8  . Secure Elements"	"7.4.8"	"C-1-2"	""	"[('android.telephony.euicc.cts.EuiccProfileInfoTest', 18), ('android.telephony.euicc.cts.EuiccManagerTest', 18), ('android.telephony.cts.TelephonyManagerTest', 16), ('android.telephony.euicc.cts.EuiccServiceTest', 16), ('android.carrierapi.cts.CarrierApiTest', 13), ('android.telephony.euicc.cts.GetDefaultDownloadableSubscriptionListResultTest', 6), ('android.telephony.euicc.cts.GetDownloadableSubscriptionMetadataResultTest', 6), ('android.omapi.cts.OmapiTest', 5), ('android.telephony4.cts.SimRestrictedApisTest', 4), ('android.telephony.euicc.cts.EuiccInfoTest', 4), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 2), ('android.omapi.accesscontrol1.cts.AccessControlTest', 2), ('android.net.eap.cts.EapSessionConfigTest', 2), ('android.omapi.accesscontrol3.cts.AccessControlTest', 2), ('android.telephony.cts.SubscriptionManagerTest', 1), ('android.net.cts.ConnectivityDiagnosticsManagerTest', 1), ('android.omapi.accesscontrol2.cts.AccessControlTest', 1)]"	"[('getContext', 27), ('setUp', 14), ('Object', 8), ('tearDown', 6), ('ServiceConnectionTimerTask', 6), ('hasCellular', 5), ('getPackageManager', 4), ('getPackageName', 4), ('getContentResolver', 4), ('getPhoneCount', 3), ('getAction', 2), ('countDown', 2), ('clearQueue', 2), ('waitForCarrierConfigChanged', 2), ('getDefaultSubscriptionId', 2), ('getRadioHalVersion', 2), ('toByteArray', 2), ('getInstrumentation', 2), ('saveAllowedNetworkTypesForAllReasons', 2), ('recoverAllowedNetworkType', 2), ('start', 2), ('Builder', 2), ('build', 2), ('getUiAutomation', 1), ('StringBuilder', 1), ('toString', 1), ('keySet', 1), ('quit', 1), ('run', 1), ('Binder', 1), ('getBytes', 1)]"	""	""	"7.4.8/C-1-2"	"""C-1-2] MUST declare the correct feature flags via android.hardware.se.omapi.uicc for the device with UICC-based secure elements, android.hardware.se.omapi.ese for the device with eSE-based secure elements and android.hardware.se.omapi.sd for the device with SD-based secure elements. <h3 id=""75_cameras"" """	"07040800.670102"	"android.hardware.se.omapi.uicc android.hardware.se.omapi.ese UICC android.hardware.se.omapi.sd"	""	""	""	"[('UICC', 117)]"	""	"[('[android.telephony.euicc.cts.GetDefaultDownloadableSubscriptionListResultTest testGetResult None]', 2), ('[android.telephony.euicc.cts.GetDefaultDownloadableSubscriptionListResultTest testWriteToParcel None]', 2), ('[android.telephony.cts.TelephonyManagerTest testHasCarrierPrivilegesViaCarrierConfigs None]', 2), ('[android.telephony.cts.TelephonyManagerTest testGetManualNetworkSelectionPlmnPersisted None]', 2), ('[android.telephony.cts.TelephonyManagerTest testGetCardIdForDefaultEuicc None]', 2), ('[android.telephony.cts.TelephonyManagerTest testGetUiccCardsInfoException None]', 2), ('[android.telephony.cts.TelephonyManagerTest testGetUiccCardsInfo None]', 2), ('[android.telephony.cts.TelephonyManagerTest testIsApplicationOnUicc None]', 2), ('[android.telephony4.cts.SimRestrictedApisTest testGetIccAuthentication None]', 2), ('[android.telephony4.cts.SimRestrictedApisTest testGetUiccCardsInfo None]', 2), ('[android.carrierapi.cts.CarrierApiTest testIccTransmitApduLogicalChannel None]', 2), ('[android.carrierapi.cts.CarrierApiTest testIccTransmitApduLogicalChannelWithInvalidInputs None]', 2), ('[android.carrierapi.cts.CarrierApiTest testOpportunistic None]', 2), ('[android.carrierapi.cts.CarrierApiTest testIccExchangeSimIO None]', 2), ('[android.carrierapi.cts.CarrierApiTest testEapAkaAuthentication None]', 2), ('[android.omapi.accesscontrol1.cts.AccessControlTest OnConnectedListener None]', 2), ('[android.telephony.euicc.cts.GetDownloadableSubscriptionMetadataResultTest testGetResult None]', 2), ('[android.telephony.euicc.cts.GetDownloadableSubscriptionMetadataResultTest testWriteToParcel None]', 2), ('[android.telephony.euicc.cts.EuiccProfileInfoTest testWriteToParcel None]', 2), ('[android.telephony.euicc.cts.EuiccProfileInfoTest testWriteToParcelNullCarrierId None]', 2), ('[android.telephony.euicc.cts.EuiccProfileInfoTest testBuilderAndGetters None]', 2), ('[android.telephony.euicc.cts.EuiccProfileInfoTest testBuilder_BasedOnAnotherProfile None]', 2), ('[android.telephony.euicc.cts.EuiccProfileInfoTest testEqualsHashCode None]', 2), ('[android.telephony.euicc.cts.EuiccProfileInfoTest testBuilderBuild_IllegalIccid None]', 2), ('[android.telephony.euicc.cts.EuiccProfileInfoTest testBuilderSetOperatorMccMnc_Illegal None]', 2), ('[android.telephony.euicc.cts.EuiccProfileInfoTest testCreatorNewArray None]', 2), ('[android.omapi.accesscontrol3.cts.AccessControlTest OnConnectedListener None]', 2), ('[android.telephony.cts.TelephonyManagerTest testGetSimCardState None]', 1), ('[android.telephony.cts.SubscriptionManagerTest testSetUiccApplicationsEnabled None]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetAllCellInfo None]', 1), ('[android.carrierapi.cts.CarrierApiTest isSimCardPresent None]', 1), ('[android.telephony.euicc.cts.EuiccInfoTest testGetOsVersion None]', 1), ('[android.telephony.euicc.cts.EuiccInfoTest testDescribeContents None]', 1), ('[android.telephony.euicc.cts.EuiccInfoTest testWriteToParcel None]', 1), ('[android.omapi.cts.OmapiTest OnConnectedListener None]', 1), ('[android.omapi.cts.OmapiTest testGetReaders None]', 1), ('[android.omapi.cts.OmapiTest testATR None]', 1), ('[android.omapi.cts.OmapiTest testOpenBasicChannelNullAid None]', 1), ('[android.omapi.cts.OmapiTest testOpenBasicChannelNonNullAid None]', 1), ('[android.net.cts.ConnectivityDiagnosticsManagerTest TestNetworkCallback None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest ServiceTestRule None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest testOnGetEid None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest testOnGetOtaStatus None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest testOnGetDownloadableSubscriptionMetadata None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest testOnStartOtaIfNecessary None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest testOnGetDefaultDownloadableSubscriptionList None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest testOnDownloadSubscription None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest testOnGetEuiccProfileInfoList None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest testOnGetEuiccInfo None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest testOnDeleteSubscription None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest testOnSwitchToSubscription None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest testOnUpdateSubscriptionNickname None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest testOnEraseSubscriptions None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest testOnRetainSubscriptionsForFactoryReset None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest testDump None]', 1), ('[android.telephony.euicc.cts.EuiccServiceTest testEncodeSmdxSubjectAndReasonCode None]', 1), ('[android.net.eap.cts.EapSessionConfigTest testBuildWithAllEapMethods None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testGetEid None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testCreateForCardId None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testDownloadSubscription None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testGetEuiccInfo None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testDeleteSubscription None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testSwitchToSubscription None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testEraseSubscriptions None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testStartResolutionActivity None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testOperationCode None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testErrorCode None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testSetSupportedCountries None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testSetUnsupportedCountries None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testIsSupportedCountry_returnsTrue_ifCountryIsOnSupportedList None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testIsSupportedCountry_returnsTrue_ifCountryIsNotOnUnsupportedList None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testIsSupportedCountry_returnsFalse_ifCountryIsNotOnSupportedList None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testIsSupportedCountry_returnsFalse_ifCountryIsOnUnsupportedList None]', 1), ('[android.telephony.euicc.cts.EuiccManagerTest testIsSupportedCountry_returnsFalse_ifBothListsAreEmpty None]', 1), ('[android.omapi.accesscontrol2.cts.AccessControlTest OnConnectedListener None]', 1), ('[android.carrierapi.cts.CarrierApiTest werePreconditionsSatisfied None]', 1), ('[android.carrierapi.cts.CarrierApiTest testEapSimAuthentication None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/EuiccManagerTest.java', 18), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/EuiccServiceTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/EuiccProfileInfoTest.java', 9), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/EuiccProfileInfoTest.java', 9), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/CarrierApiTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/CarrierApiTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/omapi/src/android/omapi/cts/OmapiTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/EuiccInfoTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/GetDefaultDownloadableSubscriptionListResultTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/GetDefaultDownloadableSubscriptionListResultTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony4/src/android/telephony4/cts/SimRestrictedApisTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony4/src/android/telephony4/cts/SimRestrictedApisTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/eap/cts/EapSessionConfigTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SubscriptionManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/access_control/AccessControlApp1/src/android/omapi/accesscontrol1/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp1/src/android/omapi/accesscontrol1/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp3/src/android/omapi/accesscontrol3/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/access_control/AccessControlApp3/src/android/omapi/accesscontrol3/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/secure_element/access_control/AccessControlApp2/src/android/omapi/accesscontrol2/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 1)]"	"[('(7,UICC,/android/telephony/euicc/cts/GetDefaultDownloadableSubscriptionListResultTest.java)', 2), ('(2,UICC,/android/telephony/euicc/cts/DownloadableSubscriptionTest.java)', 2), ('(28,UICC,/android/telephony/cts/TelephonyManagerTest.java)', 2), ('(4,UICC,/android/telephony4/cts/SimRestrictedApisTest.java)', 2), ('(2,UICC,/android/omapi/accesscontrol1/cts/AccessControlTest.java)', 2), ('(7,UICC,/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java)', 2), ('(73,UICC,/android/telephony/euicc/cts/EuiccProfileInfoTest.java)', 2), ('(2,UICC,/android/omapi/accesscontrol3/cts/AccessControlTest.java)', 2), ('(5,UICC,/android/telephony/cts/SubscriptionManagerTest.java)', 1), ('(6,UICC,/android/carrierapi/cts/CarrierApiTest.java)', 1), ('(19,UICC,/android/telephony/euicc/cts/EuiccInfoTest.java)', 1), ('(28,UICC,/android/omapi/cts/OmapiTest.java)', 1), ('(1,UICC,/android/net/cts/ConnectivityDiagnosticsManagerTest.java)', 1), ('(102,UICC,/android/telephony/euicc/cts/EuiccServiceTest.java)', 1), ('(6,UICC,/android/net/eap/cts/EapSessionConfigTest.java)', 1), ('(131,UICC,/android/telephony/euicc/cts/EuiccManagerTest.java)', 1), ('(2,UICC,/android/omapi/accesscontrol2/cts/AccessControlTest.java)', 1), ('(17,UICC,/android/carrierapi/cts/CarrierApiTest.java)', 1)]"	"[('([2:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[2]:method_text:[           fail(e.toString());        }        assertTrue(mCallback.isMethodCalled());    }   ])', 9), ('([9:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[9]:method_text:[ EuiccProfileInfo.CREATOR.createFromParcel(parcel);        assertEquals(p, fromParcel);    }   ])', 4), ('([3:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[3]:method_text:[           fail(e.toString());        }        assertTrue(mCallback.isMethodCalled());    }   ])', 3), ('([3:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[3]:method_text:[     EuiccManager.EMBEDDED_SUBSCRIPTION_RESULT_ERROR, mCallbackReceiver.getResultCode());    }   ])', 3), ('([6:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[6]:method_text:[ginal country list        mEuiccManager.setSupportedCountries(originalSupportedCountry);    }   ])', 3), ('([5:/android/telephony/euicc/cts/GetDefaultDownloadableSubscriptionListResultTest.java]:[UICC]:[5]:method_text:[(                        EuiccService.RESULT_RESOLVABLE_ERRORS, null /*subscriptions*/);    }   ])', 2), ('([1:/android/telephony/euicc/cts/GetDefaultDownloadableSubscriptionListResultTest.java]:[UICC]:[1]:method_text:[  assertEquals(EuiccService.RESULT_RESOLVABLE_ERRORS, mDefaultSubListResult.getResult());    }   ])', 2), ('([1:/android/telephony/euicc/cts/GetDefaultDownloadableSubscriptionListResultTest.java]:[UICC]:[1]:method_text:[ORS, fromParcel.getResult());        assertNull(fromParcel.getDownloadableSubscriptions());    }}])', 2), ('([2:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[UICC]:[2]:method_text:[ mDownloadableSubscription = DownloadableSubscription.forActivationCode(ACTIVATION_CODE);    }   ])', 2), ('([3:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[3]:method_text:[ckageManager.FEATURE_TELEPHONY)                && mTelephonyManager.getPhoneCount() > 0;    }   ])', 2), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[1]:method_text:[ uiAutomation.grantRuntimePermission(packageName, permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 2), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[1]:method_text:[ returns a positive value or either     * UNINITIALIZED_CARD_ID or UNSUPPORTED_CARD_ID.     */   ])', 2), ('([4:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[4]:method_text:[/**     * Tests that a SecurityException is thrown when trying to access UiccCardsInfo.     */   ])', 2), (""([4:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[4]:method_text:[ption e) {        }    }    /**     * Tests that UiccCardsInfo methods don't crash.     */   ])"", 2), ('([5:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[5]:method_text:[  /**     * Tests that the device properly reports the contents of NetworkSelectionMode     */   ])', 2), ('([3:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[3]:method_text:[ntation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }   ])', 2), ('([2:/android/telephony4/cts/SimRestrictedApisTest.java]:[UICC]:[2]:method_text:[ts a SecurityException since the test apk is not signed by certficate on the     * SIM.     */   ])', 2), ('([2:/android/telephony4/cts/SimRestrictedApisTest.java]:[UICC]:[2]:method_text:[arrier privileges."");            }        } catch (SecurityException expected) {        }    }}])', 2), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[r a logical channel and makes sure appropriate     * errors are returned from the UICC.     */   ])', 2), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[ss, as it process involves several file-reads. The ICCID is one of the first files read.     */   ])', 2), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[lected via a     * SELECT apdu via the basic channel, then a STATUS AT-command is sent.     */   ])', 2), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[envelope to the UICC via     * {@link TelephonyManager#sendEnvelopeWithStatus(String)}.     */   ])', 2), ('([2:/android/omapi/accesscontrol1/cts/AccessControlTest.java]:[UICC]:[2]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 2), ('([5:/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java]:[UICC]:[5]:method_text:[(                        EuiccService.RESULT_RESOLVABLE_ERRORS, null /*subscriptions*/);    }   ])', 2), ('([1:/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java]:[UICC]:[1]:method_text:[     assertEquals(EuiccService.RESULT_RESOLVABLE_ERRORS, mSubMetadataResult.getResult());    }   ])', 2), ('([1:/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java]:[UICC]:[1]:method_text:[RORS, fromParcel.getResult());        assertNull(fromParcel.getDownloadableSubscription());    }}])', 2), ('([7:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[7]:method_text:[BuilderBuild_IllegalIccid} */@RunWith(AndroidJUnit4.class)public class EuiccProfileInfoTest {   ])', 2), ('([15:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[15]:method_text:[UiccAccessRule(new byte[0], null, 0)},                p.getUiccAccessRules().toArray());    }   ])', 2), ('([9:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[9]:method_text:[        assertEquals(p, copied);        assertEquals(p.hashCode(), copied.hashCode());    }   ])', 2), ('([20:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[20]:method_text:[);        assertFalse(p.equals(t));        assertNotEquals(p.hashCode(), t.hashCode());    }   ])', 2), ('([1:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[1]:method_text:[id testBuilderBuild_IllegalIccid() {        new EuiccProfileInfo.Builder(""abc"").build();    }   ])', 2), ('([1:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[1]:method_text:[       .setCarrierIdentifier(new CarrierIdentifier(new byte[] {1, 2, 3, 4}, null, null));    }   ])', 2), ('([2:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[2]:method_text:[ofiles = EuiccProfileInfo.CREATOR.newArray(123);        assertEquals(123, profiles.length);    }}])', 2), ('([9:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[9]:method_text:[ortedCountry);        mEuiccManager.setUnsupportedCountries(originalUnsupportedCountry);    }   ])', 2), ('([2:/android/omapi/accesscontrol3/cts/AccessControlTest.java]:[UICC]:[2]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 2), ('([7:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[7]:method_text:[ minor) {        if (major < 0 || minor < 0) return 0;        return major * 100 + minor;    }}])', 1), ('([5:/android/telephony/cts/SubscriptionManagerTest.java]:[UICC]:[5]:method_text:[assertTrue(mSm.getActiveSubscriptionInfo(mSubId).areUiccApplicationsEnabled());        }    }   ])', 1), ('([7:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[7]:method_text:[ged = true;                    mLock.notify();                }            }        }    }   ])', 1), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[             ""Visit https://source.android.com/devices/tech/config/uicc.html"");        }    }   ])', 1), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[d"",                hexStringToBytes(EXPECTED_EAP_AKA_RESULT),                akaResponse);    }}])', 1), ('([8:/android/telephony/euicc/cts/EuiccInfoTest.java]:[UICC]:[8]:method_text:[   public void setUp() throws Exception {        mEuiccInfo = new EuiccInfo(OS_VERSION);    }   ])', 1), ('([2:/android/telephony/euicc/cts/EuiccInfoTest.java]:[UICC]:[2]:method_text:[  assertNotNull(mEuiccInfo);        assertEquals(OS_VERSION, mEuiccInfo.getOsVersion());    }   ])', 1), ('([2:/android/telephony/euicc/cts/EuiccInfoTest.java]:[UICC]:[2]:method_text:[ts();        assertTrue(bitmask == 0 || bitmask == Parcelable.CONTENTS_FILE_DESCRIPTOR);    }   ])', 1), ('([7:/android/telephony/euicc/cts/EuiccInfoTest.java]:[UICC]:[7]:method_text:[ateFromParcel(parcel);        assertEquals(OS_VERSION, euiccInfoFromParcel.getOsVersion());    }}])', 1), ('([4:/android/omapi/cts/OmapiTest.java]:[UICC]:[4]:method_text:[        connectionTimer.cancel();            }        }    }    /** Tests getReaders API */   ])', 1), ('([16:/android/omapi/cts/OmapiTest.java]:[UICC]:[16]:method_text:[e) {            fail(""Unexpected Exception "" + e);        }    }    /** Tests getATR API */   ])', 1), ('([4:/android/omapi/cts/OmapiTest.java]:[UICC]:[4]:method_text:[pected Exception "" + e);        }    }    /** Tests OpenBasicChannel API when aid is null */   ])', 1), ('([2:/android/omapi/cts/OmapiTest.java]:[UICC]:[2]:method_text:[ed Exception "" + e);        }    }    /** Tests OpenBasicChannel API when aid is provided */   ])', 1), ('([2:/android/omapi/cts/OmapiTest.java]:[UICC]:[2]:method_text:[e) {            fail(""Unexpected Exception "" + e);        }    }    /** Tests Select API */   ])', 1), ('([1:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[UICC]:[1]:method_text:[redCallbacks) {            mCdm.unregisterConnectivityDiagnosticsCallback(cb);        }    }   ])', 1), ('([56:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[56]:method_text:[    private Context getContext() {        return InstrumentationRegistry.getContext();    }   ])', 1), ('([6:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[6]:method_text:[           fail(e.toString());        }        assertTrue(mCallback.isMethodCalled());    }   ])', 1), ('([9:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[9]:method_text:[           fail(e.toString());        }        assertTrue(mCallback.isMethodCalled());    }   ])', 1), ('([4:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[4]:method_text:[;        assertEquals(mEuiccService.encodeSmdxSubjectAndReasonCode(""8.1"", ""5""), 0xA081005);    }}])', 1), ('([1:/android/net/eap/cts/EapSessionConfigTest.java]:[UICC]:[1]:method_text:[APV2_USERNAME = ""username"";    private static final String EAP_MSCHAPV2_PASSWORD = ""password"";   ])', 1), ('([5:/android/net/eap/cts/EapSessionConfigTest.java]:[UICC]:[5]:method_text:[tEquals(SUB_ID, config.getSubId());        assertEquals(APPTYPE_USIM, config.getAppType());    }}])', 1), ('([14:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[14]:method_text:[iver != null) {            getContext().unregisterReceiver(mCallbackReceiver);        }    }   ])', 1), ('([2:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[2]:method_text:[ eid = mEuiccManager.getEid();        // verify result is null        assertNull(eid);    }   ])', 1), ('([4:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[4]:method_text:[     mEuiccManager = mEuiccManager.createForCardId(TelephonyManager.UNSUPPORTED_CARD_ID);    }   ])', 1), ('([8:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[8]:method_text:[cManager.getEuiccInfo();        // verify result is null        assertNull(euiccInfo);    }   ])', 1), ('([4:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[4]:method_text:[     EuiccManager.EMBEDDED_SUBSCRIPTION_RESULT_ERROR, mCallbackReceiver.getResultCode());    }   ])', 1), ('([7:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[7]:method_text:[tionActivity.RESULT_CODE_TEST_PASSED,                mCallbackReceiver.getResultCode());    }   ])', 1), ('([13:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[13]:method_text:[ION_SMDX_SUBJECT_REASON_CODE, 10);        assertEquals(EuiccManager.OPERATION_HTTP, 11);    }   ])', 1), ('([19:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[19]:method_text:[INVALID_RESPONSE, 10015);        assertEquals(EuiccManager.ERROR_OPERATION_BUSY, 10016);    }   ])', 1), ('([6:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[6]:method_text:[l country list        mEuiccManager.setUnsupportedCountries(originalUnsupportedCountry);    }   ])', 1), ('([9:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[9]:method_text:[tDownLatch.countDown();                    break;                }            }        }    }}])', 1), ('([2:/android/omapi/accesscontrol2/cts/AccessControlTest.java]:[UICC]:[2]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 1), ('([4:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[4]:method_text:[{            Log.w(TAG, ""Failed to clean up voicemail tables in tearDown"", e);        }    }   ])', 1), ('([4:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[4]:method_text:[   .that(response)                .isEqualTo(hexStringToBytes(EXPECTED_EAP_SIM_RESULT));    }   ])', 1), ('([5:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[5]:method_text:[   .that(akaResponse)                .isEqualTo(hexStringToBytes(EXPECTED_EAP_AKA_RESULT));    }}])', 1)]"	""	""	""	""	""
"219:636478) 7.5.4  . Camera API Behavior"	"7.5.4"	"H-1-1"	""	"[('android.autofillservice.cts.SimpleSaveActivityTest', 10), ('android.autofillservice.cts.saveui.SimpleSaveActivityTest', 10), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 8), ('android.location.cts.fine.GnssAntennaInfoTest', 4), ('android.autofillservice.cts.CustomDescriptionTest', 4), ('android.autofillservice.cts.saveui.CustomDescriptionTest', 4), ('com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity', 3), ('android.hardware.camera2.cts.RobustnessTest', 2), ('android.autofillservice.cts.dropdown.CheckoutActivityTest', 2), ('android.autofillservice.cts.CheckoutActivityTest', 2), ('android.accessibilityservice.cts.AccessibilityMagnificationTest', 2), ('android.mediav2.cts.ExtractorTest', 2), ('android.autofillservice.cts.saveui.CustomDescriptionDateTest', 2), ('android.view.inputmethod.cts.InlineSuggestionInfoTest', 2), ('android.autofillservice.cts.CustomDescriptionDateTest', 2), ('android.autofillservice.cts.commontests.FillEventHistoryCommonTestCase', 1), ('android.hardware.cts.Camera_SizeTest', 1), ('android.autofillservice.cts.saveui.OnClickActionTest', 1), ('android.autofillservice.cts.servicebehavior.ValidatorTest', 1), ('android.hardware.cts.SensorAdditionalInfoTest', 1), ('android.autofillservice.cts.ValidatorTest', 1), ('com.android.cts.appcompat.compatchanges.CompatChangesTest', 1), ('android.autofillservice.cts.OnClickActionTest', 1)]"	"[('build', 6), ('setUp', 4), ('size', 2), ('getSimpleName', 2), ('length', 2), ('getSize', 2), ('close', 2), ('enableService', 2), ('Builder', 2), ('onFill', 2), ('getNextFillRequest', 2), ('tapLogin', 2), ('run', 2), ('getNextSaveRequest', 2), ('applyCharSequenceTransformationToImageView', 2), ('removePackageOverrides_doesNothingIfOverrideNotPresent', 1)]"	""	""	"7.5.4/H-1-1"	""">7.5.4/H-1-1] MUST have normal field of view (FOV) by default and it MUST be between 50 and 90 degrees. Handheld device implementations: [<a href=""#7_6_memory_and_storage"""""	"07050400.720101"	"FOV"	""	""	""	"[('FOV', 67)]"	""	"[('[android.autofillservice.cts.SimpleSaveActivityTest testSanitizeOnSaveWhenAppChangeValues None]', 6), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSanitizeOnSaveWhenAppChangeValues None]', 6), ('[android.hardware.camera2.cts.RobustnessTest testVerifyReprocessMandatoryOutputCombinationTables None]', 2), ('[android.accessibilityservice.cts.AccessibilityMagnificationTest testA11yNodeInfoVisibility_whenOutOfMagnifiedArea_shouldVisible None]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testLogicalCameraZoomSwitch None]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testActivePhysicalId None]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testDefaultFov None]', 2), ('[android.mediav2.cts.ExtractorTest isClosed None]', 2), ('[android.view.inputmethod.cts.InlineSuggestionInfoTest testInlineSuggestionInfoValues None]', 2), ('[android.autofillservice.cts.commontests.FillEventHistoryCommonTestCase testContextCommitted_noSaveUi_whileFieldsFailedValidation None]', 1), ('[android.hardware.cts.Camera_SizeTest testConstructor None]', 1), ('[android.autofillservice.cts.saveui.OnClickActionTest testHideAndShow None]', 1), ('[android.autofillservice.cts.servicebehavior.ValidatorTest testDontShowUiWhenValidatorFails None]', 1), ('[android.autofillservice.cts.dropdown.CheckoutActivityTest testCustomizedSaveUiWithContentDescription None]', 1), ('[android.autofillservice.cts.dropdown.CheckoutActivityTest testCustomizedSaveUiWhenListResolutionFails None]', 1), ('[android.hardware.cts.SensorAdditionalInfoTest testSensorAdditionalInfo None]', 1), ('[android.autofillservice.cts.SimpleSaveActivityTest testTapHomeWhileSaveUiIsShowing None]', 1), ('[android.autofillservice.cts.SimpleSaveActivityTest testSelectedDatasetsAreSentOnSaveRequest None]', 1), ('[android.autofillservice.cts.SimpleSaveActivityTest testExplicitlySaveButtonOnly None]', 1), ('[android.autofillservice.cts.SimpleSaveActivityTest testTapUrlSpanOnSuccinctDescription_tapBackWithoutFinish None]', 1), ('[android.autofillservice.cts.CheckoutActivityTest testCustomizedSaveUiWithContentDescription None]', 1), ('[android.autofillservice.cts.CheckoutActivityTest testCustomizedSaveUiWhenListResolutionFails None]', 1), ('[com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity testStarted None]', 1), ('[com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity startTest None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionDateTest testCustomSave None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionDateTest testSaveSameValue_withoutSanitization None]', 1), ('[android.location.cts.fine.GnssAntennaInfoTest testFullAntennaInfoWriteToParcel None]', 1), ('[android.location.cts.fine.GnssAntennaInfoTest testPartialAntennaInfoWriteToParcel None]', 1), ('[android.location.cts.fine.GnssAntennaInfoTest testCreateFullGnssAntennaInfoAndGetValues None]', 1), ('[android.location.cts.fine.GnssAntennaInfoTest testCreatePartialGnssAntennaInfoAndGetValues None]', 1), ('[android.autofillservice.cts.ValidatorTest testDontShowUiWhenValidatorFails None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testTapHomeWhileSaveUiIsShowing None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSelectedDatasetsAreSentOnSaveRequest None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testExplicitlySaveButtonOnly None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testTapUrlSpanOnSuccinctDescription_tapBackWithoutFinish None]', 1), ('[android.autofillservice.cts.CustomDescriptionTest testSanitizationBeforeBatchUpdates None]', 1), ('[android.autofillservice.cts.CustomDescriptionTest testSanitizationBeforeTransformations None]', 1), ('[android.autofillservice.cts.CustomDescriptionTest assertSaveUiWithoutCustomDescriptionIsShown None]', 1), ('[android.autofillservice.cts.OnClickActionTest testHideAndShow None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeBatchUpdates None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeTransformations None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest assertSaveUiWithoutCustomDescriptionIsShown None]', 1), ('[android.autofillservice.cts.CustomDescriptionDateTest testCustomSave None]', 1), ('[android.autofillservice.cts.CustomDescriptionDateTest testSaveSameValue_withoutSanitization None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/SimpleSaveActivityTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 4), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 4), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/GnssAntennaInfoTest.java', 4), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/CustomDescriptionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/CustomDescriptionTest.java', 4), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 3), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/CheckoutActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/CheckoutActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/CustomDescriptionDateTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/CustomDescriptionDateTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/cts/Camera_SizeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/OnClickActionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/ValidatorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorAdditionalInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityMagnificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/ExtractorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/ValidatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InlineSuggestionInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appcompat/compatchanges/app/src/com/android/cts/appcompat/compatchanges/CompatChangesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/OnClickActionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InlineSuggestionInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityMagnificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/media/src/android/mediav2/cts/ExtractorTest.java', 1)]"	"[('(15,FOV,/android/hardware/camera2/cts/RobustnessTest.java)', 2), ('(1,FOV,/android/accessibilityservice/cts/AccessibilityMagnificationTest.java)', 2), ('(46,FOV,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 2), ('(2,FOV,/android/mediav2/cts/ExtractorTest.java)', 2), ('(1,FOV,/android/view/inputmethod/cts/InlineSuggestionInfoTest.java)', 2), ('(1,FOV,/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java)', 1), ('(1,FOV,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(1,FOV,/android/autofillservice/cts/saveui/OnClickActionTest.java)', 1), ('(1,FOV,/android/autofillservice/cts/servicebehavior/ValidatorTest.java)', 1), ('(2,FOV,/android/autofillservice/cts/dropdown/CheckoutActivityTest.java)', 1), ('(4,FOV,/android/hardware/cts/SensorAdditionalInfoTest.java)', 1), ('(12,FOV,/android/autofillservice/cts/SimpleSaveActivityTest.java)', 1), ('(2,FOV,/android/autofillservice/cts/CheckoutActivityTest.java)', 1), ('(8,FOV,/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java)', 1), ('(2,FOV,/android/autofillservice/cts/saveui/CustomDescriptionDateTest.java)', 1), ('(6,FOV,/android/location/cts/fine/GnssAntennaInfoTest.java)', 1), ('(1,FOV,/android/autofillservice/cts/ValidatorTest.java)', 1), ('(12,FOV,/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java)', 1), ('(1,FOV,/com/android/cts/appcompat/compatchanges/CompatChangesTest.java)', 1), ('(4,FOV,/android/autofillservice/cts/CustomDescriptionTest.java)', 1), ('(1,FOV,/android/autofillservice/cts/OnClickActionTest.java)', 1), ('(4,FOV,/android/autofillservice/cts/saveui/CustomDescriptionTest.java)', 1), ('(2,FOV,/android/autofillservice/cts/CustomDescriptionDateTest.java)', 1)]"	"[('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[performClick();        });        mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_GENERIC);    }   ])', 4), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[performClick();        });        mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_GENERIC);    }   ])', 4), ('([15:/android/hardware/camera2/cts/RobustnessTest.java]:[FOV]:[15]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 2), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[       assertTextValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""pass"");    }   ])', 2), ('([1:/android/accessibilityservice/cts/AccessibilityMagnificationTest.java]:[FOV]:[1]:method_text:[ayoutParams));        // Waiting for UI refresh        mInstrumentation.waitForIdleSync();    }}])', 2), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[FOV]:[1]:method_text:[agtion behaves as expected     * for logical multi-camera and non-logical multi-camera.     */   ])', 2), ('([8:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[FOV]:[8]:method_text:[camera, the activePhysicalId is valid, and is the same     * for all capture templates.     */   ])', 2), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[FOV]:[1]:method_text:[d device, the default FOV is     * between 50 and 90 degrees for all capture templates.     */   ])', 2), ('([36:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[FOV]:[36]:method_text:[htPixels/dm.ydpi,2);        return Math.sqrt(widthInInchesSquared + heightInInchesSquared);    }}])', 2), ('([2:/android/mediav2/cts/ExtractorTest.java]:[FOV]:[2]:method_text:[   testExtractor.unselectTrack(trackID);            }            return result;        }       ])', 2), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[       assertTextValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""pass"");    }   ])', 2), ('([1:/android/view/inputmethod/cts/InlineSuggestionInfoTest.java]:[FOV]:[1]:method_text:[()).isEqualTo(InlineSuggestionInfo.TYPE_SUGGESTION);        assertTrue(info.isPinned());    }   ])', 2), ('([1:/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java]:[FOV]:[1]:method_text:[d, the save dialog was not shown because all     * fields matched contents of datasets.     */   ])', 1), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[FOV]:[1]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}     */   ])', 1), ('([1:/android/autofillservice/cts/saveui/OnClickActionTest.java]:[FOV]:[1]:method_text:[esourceId) {        mUiBot.assertGoneByRelativeId(saveUi, resourceId, Timeouts.UI_TIMEOUT);    }}])', 1), ('([1:/android/autofillservice/cts/servicebehavior/ValidatorTest.java]:[FOV]:[1]:method_text:[).findByAutofillId(id);        assertThat(validator.isValid(valueFinder)).isEqualTo(valid);    }}])', 1), ('([1:/android/autofillservice/cts/dropdown/CheckoutActivityTest.java]:[FOV]:[1]:method_text:[nored when the selected spinner element is not     * available in the autofill options.     */   ])', 1), ('([1:/android/autofillservice/cts/dropdown/CheckoutActivityTest.java]:[FOV]:[1]:method_text:[ // ============================================================================================   ])', 1), ('([4:/android/hardware/cts/SensorAdditionalInfoTest.java]:[FOV]:[4]:method_text:[boolean vec3CalibrationDuplicate() {            return mVec3CalibrationDuplicate;        }    }}])', 1), ('([3:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[3]:method_text:[uts.ACTIVITY_RESURRECTION);        mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_GENERIC);    }   ])', 1), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[      assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""42"");    }   ])', 1), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[on, then the new activity     * finishes:     * the Save UI should have been restored.     */   ])', 1), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[     /* start= */ 8,  /* end= */ 15, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);        return ss;    }}])', 1), ('([1:/android/autofillservice/cts/CheckoutActivityTest.java]:[FOV]:[1]:method_text:[nored when the selected spinner element is not     * available in the autofill options.     */   ])', 1), ('([1:/android/autofillservice/cts/CheckoutActivityTest.java]:[FOV]:[1]:method_text:[        assertThat(saveUi.findObject(By.res(packageName, Helper.ID_STATIC_TEXT))).isNull();    }}])', 1), ('([1:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[FOV]:[1]:method_text:[ultinetwork_connectivity_test_running);                }                @Override               ])', 1), ('([1:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[FOV]:[1]:method_text:[iew.setText(progressMessageResourceId);                }                @Override               ])', 1), ('([6:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[FOV]:[6]:method_text:[}    }    private interface SetWifiCallback {        void onComplete(boolean isSuccess);    }}])', 1), ('([1:/android/autofillservice/cts/saveui/CustomDescriptionDateTest.java]:[FOV]:[1]:method_text:[ mUiBot.assertChild(saveUi, ""second"", (o) -> assertThat(o.getText()).isEqualTo(""12-10""));    }   ])', 1), ('([1:/android/autofillservice/cts/saveui/CustomDescriptionDateTest.java]:[FOV]:[1]:method_text:[int resourceId) {        return new RemoteViews(getContext().getPackageName(), resourceId);    }}])', 1), ('([1:/android/location/cts/fine/GnssAntennaInfoTest.java]:[FOV]:[1]:method_text:[ verifyFullGnssAntennaInfoValuesAndGetters(newGnssAntennaInfo);        parcel.recycle();    }   ])', 1), ('([1:/android/location/cts/fine/GnssAntennaInfoTest.java]:[FOV]:[1]:method_text:[rifyPartialGnssAntennaInfoValuesAndGetters(newGnssAntennaInfo);        parcel.recycle();    }   ])', 1), ('([1:/android/location/cts/fine/GnssAntennaInfoTest.java]:[FOV]:[1]:method_text:[estGnssAntennaInfo();        verifyFullGnssAntennaInfoValuesAndGetters(gnssAntennaInfo);    }   ])', 1), ('([3:/android/location/cts/fine/GnssAntennaInfoTest.java]:[FOV]:[3]:method_text:[ION_UNCERTAINTIES,                signalGainCorrections.getCorrectionUncertaintiesArray());    }}])', 1), ('([1:/android/autofillservice/cts/ValidatorTest.java]:[FOV]:[1]:method_text:[).findByAutofillId(id);        assertThat(validator.isValid(valueFinder)).isEqualTo(valid);    }}])', 1), ('([3:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[FOV]:[3]:method_text:[SURRECTION);        mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_GENERIC);    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[tAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""42"");    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[w activity     * finishes:     * the Save UI should have been restored.     */    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[     /* start= */ 8,  /* end= */ 15, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);        return ss;    }}])', 1), ('([1:/com/android/cts/appcompat/compatchanges/CompatChangesTest.java]:[FOV]:[1]:method_text:[es(OVERRIDE_PACKAGE,            Collections.singleton(CTS_SYSTEM_API_OVERRIDABLE_CHANGEID));  } ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[Bot.saveForAutofill(true, SAVE_DATA_TYPE_GENERIC);        sReplier.getNextSaveRequest();    }   ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""batch updated"");    }   ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[);        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""transformed"");    }   ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[xt = matchFirst ? ""polo"" : ""POLO"";        assertSaveUiIsShownWithTwoLines(expectedText);    }   ])', 1), ('([1:/android/autofillservice/cts/OnClickActionTest.java]:[FOV]:[1]:method_text:[esourceId) {        mUiBot.assertGoneByRelativeId(saveUi, resourceId, Timeouts.UI_TIMEOUT);    }}])', 1), ('([1:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[Bot.saveForAutofill(true, SAVE_DATA_TYPE_GENERIC);        sReplier.getNextSaveRequest();    }   ])', 1), ('([1:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""batch updated"");    }   ])', 1), ('([1:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[);        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""transformed"");    }   ])', 1), ('([1:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[xt = matchFirst ? ""polo"" : ""POLO"";        assertSaveUiIsShownWithTwoLines(expectedText);    }   ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[FOV]:[1]:method_text:[ mUiBot.assertChild(saveUi, ""second"", (o) -> assertThat(o.getText()).isEqualTo(""12-10""));    }   ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[FOV]:[1]:method_text:[int resourceId) {        return new RemoteViews(getContext().getPackageName(), resourceId);    }}])', 1)]"	""	""	""	""	""
"219:636478) 7.5.4  . Camera API Behavior"	"7.5.4"	"C-0-12"	""	"[('android.hardware.cts.CameraTest', 24), ('android.hardware.camera2.cts.CameraDeviceTest', 8), ('android.hardware.camera2.cts.FastBasicsTest', 8), ('android.hardware.camera2.cts.CameraExtensionSessionTest', 8), ('android.hardware.camera2.cts.CaptureRequestTest', 4), ('android.hardware.camera2.cts.ConcurrentCameraTest', 4), ('android.hardware.camera2.cts.FlashlightTest', 4), ('android.hardware.camera2.cts.StillCaptureTest', 4), ('android.hardware.camera2.cts.RobustnessTest', 4), ('android.hardware.camera2.cts.StaticMetadataTest', 4), ('android.hardware.camera2.cts.MultiViewTest', 4), ('android.hardware.cts.Camera_SizeTest', 4), ('android.hardware.camera2.cts.NativeCameraDeviceTest', 4), ('android.hardware.camera2.cts.IdleUidTest', 4), ('android.hardware.camera2.cts.AllocationTest', 4), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 4), ('android.hardware.camera2.cts.PerformanceTest', 4), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 4), ('android.hardware.camera2.cts.ImageWriterTest', 4), ('android.hardware.cts.CameraGLTest', 4), ('android.hardware.cts.LegacyCameraPerformanceTest', 4), ('android.hardware.camera2.cts.SurfaceViewPreviewTest', 4), ('android.hardware.camera2.cts.ReprocessCaptureTest', 4), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 4), ('android.hardware.camera2.cts.RecordingTest', 4), ('android.hardware.camera2.cts.CaptureResultTest', 4), ('android.hardware.camera2.cts.BurstCaptureTest', 4), ('android.hardware.camera2.cts.NativeCameraManagerTest', 4), ('android.hardware.camera2.cts.NativeImageReaderTest', 4), ('android.hardware.camera2.cts.CameraManagerTest', 4), ('com.android.cts.ephemeralapp1.ClientTest', 4), ('android.hardware.camera2.cts.BurstCaptureRawTest', 4), ('android.view.cts.TextureViewCameraTest', 4), ('android.hardware.camera2.cts.DngCreatorTest', 4), ('android.hardware.camera2.cts.ImageReaderTest', 4), ('android.hardware.camera2.cts.OfflineSessionTest', 4), ('android.hardware.camera2.cts.HeifWriterTest', 4), ('android.hardware.camera2.cts.NativeStillCaptureTest', 2), ('android.graphics.cts.CameraVulkanGpuTest', 2), ('android.app.cts.SystemFeaturesTest', 2), ('android.hardware.camera2.cts.SimpleObjectsTest', 2), ('android.permission.cts.Camera2PermissionTest', 2), ('android.hardware.cts.Camera_ParametersTest', 2), ('android.content.cts.BroadcastReceiverTest', 2), ('android.hardware.camera2.cts.MultiResolutionImageReaderTest', 2), ('com.android.cts.devicepolicy.ManagedProfileTest', 2), ('android.hardware.camera2.cts.ZoomCaptureTest', 2), ('android.media.cts.CameraProfileTest', 2), ('com.android.server.cts.device.statsd.AtomTests', 2), ('com.android.cts.verifier.camera.performance.CameraPerformanceActivity', 2), ('android.mediastress.cts.MediaRecorderStressTest', 2), ('com.android.server.cts.device.statsdatom.AtomTests', 2), ('android.media.cts.MediaPlayerDrmTest', 2), ('android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest', 2), ('android.media.cts.MediaRecorderTest', 2), ('android.permission.cts.CameraPermissionTest', 2), ('android.hardware.camera2.cts.CameraExtensionCharacteristicsTest', 2), ('android.camera.cts.api25test.EnableZslTest', 2), ('android.media.cts.MediaPlayerTest', 2), ('android.hardware.multiprocess.camera.cts.CameraEvictionTest', 2), ('android.content.pm.cts.FeatureGroupInfoTest', 2), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 2), ('android.media.cts.CamcorderProfileTest', 2), ('android.hardware.camera2.cts.CtsUtilsTest', 2), ('android.security.cts.OutputConfigurationTest', 2), ('com.android.cts.managedprofile.CameraPolicyTest', 2)]"	"[('setUp', 166), ('tearDown', 114), ('getWidth', 20), ('getContext', 14), ('getInstrumentation', 12), ('getHeight', 12), ('getPackageManager', 10), ('getActivity', 10), ('getTargetContext', 8), ('start', 8), ('BlockingStateCallback', 8), ('clearContext', 8), ('close', 8), ('PreviewCallback', 8), ('ConditionVariable', 8), ('never', 8), ('getSimpleName', 8), ('Object', 6), ('toString', 6), ('Monitor', 6), ('hasFlash', 4), ('getSystemAvailableFeatures', 4), ('startHandlerThread', 4), ('stopHandlerThread', 4), ('quit', 4), ('getLooper', 4), ('CameraIterable', 4), ('SizeIterable', 4), ('ResultIterable', 4), ('quitSafely', 4), ('getSourceSize', 4), ('getSize', 4), ('getLaunchOptions', 4), ('LaunchOptions', 4), ('toRectF', 4), ('BlockingSessionCallback', 4), ('CaptureCallback', 4), ('advanceInputWaiting', 4), ('execute', 4), ('stopCapture', 4), ('getStateWaiter', 4), ('getInputData', 4), ('getOutputAllocation', 4), ('getBytesSize', 4), ('getOutputData', 4), ('getDevice', 4), ('getStdout', 4), ('trim', 4), ('SurfaceTextureCallback', 4), ('SurfaceTextureBurstCallback', 4), ('beforeActivityLaunched', 4), ('Renderer', 4), ('getView', 4), ('getCacheDir', 4), ('anyInt', 4), ('getDownloadedFolder', 4), ('getExternalStorageDirectory', 4), ('setup', 4), ('getNumberOfCameras', 4), ('startBackgroundThread', 4), ('StreamCombinationTargets', 2), ('getTopDirString', 2), ('CameraErrorCallback', 2), ('RecorderErrorCallback', 2), ('getPath', 2), ('getVideoEncoders', 2), ('onShutter', 2), ('flush', 2), ('getCameraManager', 2), ('getAbsolutePath', 2), ('initializeAvailabilityCallbacksNative', 2), ('before', 2), ('after', 2), ('release', 2), ('updatePreviewSurfaceTexture', 2), ('getTextureView', 2), ('getContentResolver', 2), ('getUiAutomation', 2), ('hasProfile', 2), ('stopBackgroundThread', 2)]"	""	""	"7.5.4/C-0-12"	"""C-0-12] MUST ensure that the facial appearance is NOT altered, including but not limited to altering facial geometry, facial skin tone, or facial skin smoothening for any android.hardware.camera2 or android.hardware.Camera API."""	"07050400.670012"	"android.hardware.Camera android.hardware.camera"	""	""	""	"[('android.hardware.Camera', 119), ('android.hardware.camera', 119)]"	""	"[('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics None]', 4), ('[android.hardware.cts.CameraGLTest deriveCameraIdsUnderTest None]', 4), ('[android.hardware.cts.LegacyCameraPerformanceTest CameraPerformanceTestHelper None]', 4), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceRepeatingBurst None]', 4), ('[android.hardware.camera2.cts.RecordingTest isColorOutputSupported None]', 4), ('[android.hardware.camera2.cts.FastBasicsTest testCamera1 None]', 4), ('[android.hardware.camera2.cts.CameraManagerTest NoopCameraListener None]', 4), ('[android.hardware.cts.CameraTest TestShutterCallback None]', 4), ('[android.hardware.cts.CameraTest testPreviewCallbackWithBuffer None]', 4), ('[android.hardware.cts.CameraTest testSmoothZoom None]', 4), ('[android.hardware.cts.CameraTest testPreviewPictureSizesCombination None]', 4), ('[android.hardware.cts.CameraTest testPreviewFpsRange None]', 4), ('[android.hardware.cts.CameraTest testMultiCameraRelease None]', 4), ('[android.hardware.camera2.cts.HeifWriterTest isInstantApp None]', 4), ('[android.hardware.cts.Camera_SizeTest testConstructor None]', 2), ('[android.permission.cts.Camera2PermissionTest getCameraIdList None]', 2), ('[android.content.cts.BroadcastReceiverTest BroadcastReceiverTest None]', 2), ('[com.android.cts.verifier.camera.performance.CameraPerformanceActivity CameraTestInstrumentation None]', 2), ('[android.mediastress.cts.MediaRecorderStressTest MediaRecorderStressTest None]', 2), ('[android.media.cts.MediaRecorderTest MediaRecorderTest None]', 2), ('[android.hardware.camera2.cts.CameraExtensionCharacteristicsTest getCameraListener None]', 2), ('[android.camera.cts.api25test.EnableZslTest getCameraIdList None]', 2), ('[android.media.cts.MediaPlayerTest exists None]', 2), ('[android.hardware.multiprocess.camera.cts.CameraEvictionTest CameraEvictionTest None]', 2), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testRepeatingCapture None]', 2), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testRepeatingAndCaptureCombined None]', 2), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testIllegalArguments None]', 2), ('[android.content.pm.cts.FeatureGroupInfoTest testFeatureGroupsAreCorrect None]', 2), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest dropShellPermissionIdentity None]', 2)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraTest.java', 12), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/cts/CameraTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionSessionTest.java', 8), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/cts/Camera_SizeTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 4), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/FastBasicsTest.java', 4), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/FastBasicsTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ConcurrentCameraTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeStillCaptureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/FlashlightTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/SimpleObjectsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/Camera2PermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/IdleUidTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/cts/Camera_ParametersTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/BroadcastReceiverTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageWriterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraGLTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/cts/LegacyCameraPerformanceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/SurfaceViewPreviewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ReprocessCaptureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/IdleUidTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/SurfaceViewPreviewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/CameraProfileTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ReprocessCaptureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ConcurrentCameraTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraManagerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/apps/statsdapp/src/com/android/server/cts/device/statsd/AtomTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeImageReaderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/EphemeralApp1/src/com/android/cts/ephemeralapp1/ClientTest.java', 2), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/MediaRecorderStressTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/AtomTests.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/EphemeralApp1/src/com/android/cts/ephemeralapp1/ClientTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaPlayerDrmTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/cts/CameraGLTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRecorderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/CameraPermissionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/api25test/src/android/camera/cts/api25test/EnableZslTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureRawTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/TextureViewCameraTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageWriterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/LegacyCameraPerformanceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureRawTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaPlayerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeImageReaderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TextureViewCameraTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/FeatureGroupInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/FlashlightTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CtsUtilsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/OutputConfigurationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CameraPolicyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraDeviceTest.java', 2)]"	"[('(15,android.hardware.Camera,/android/hardware/camera2/cts/ConcurrentCameraTest.java)', 2), ('(15,android.hardware.camera,/android/hardware/camera2/cts/ConcurrentCameraTest.java)', 2), ('(7,android.hardware.Camera,/android/hardware/camera2/cts/FlashlightTest.java)', 2), ('(7,android.hardware.camera,/android/hardware/camera2/cts/FlashlightTest.java)', 2), ('(14,android.hardware.Camera,/android/hardware/camera2/cts/StillCaptureTest.java)', 2), ('(14,android.hardware.camera,/android/hardware/camera2/cts/StillCaptureTest.java)', 2), ('(11,android.hardware.Camera,/android/hardware/camera2/cts/StaticMetadataTest.java)', 2), ('(11,android.hardware.camera,/android/hardware/camera2/cts/StaticMetadataTest.java)', 2), ('(13,android.hardware.Camera,/android/hardware/camera2/cts/MultiViewTest.java)', 2), ('(13,android.hardware.camera,/android/hardware/camera2/cts/MultiViewTest.java)', 2), ('(2,android.hardware.Camera,/android/hardware/camera2/cts/NativeCameraDeviceTest.java)', 2), ('(2,android.hardware.camera,/android/hardware/camera2/cts/NativeCameraDeviceTest.java)', 2), ('(6,android.hardware.Camera,/android/hardware/camera2/cts/IdleUidTest.java)', 2), ('(6,android.hardware.camera,/android/hardware/camera2/cts/IdleUidTest.java)', 2), ('(25,android.hardware.Camera,/android/hardware/camera2/cts/AllocationTest.java)', 2), ('(25,android.hardware.camera,/android/hardware/camera2/cts/AllocationTest.java)', 2), ('(1,android.hardware.Camera,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 2), ('(1,android.hardware.camera,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 2), ('(18,android.hardware.Camera,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 2), ('(18,android.hardware.camera,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 2), ('(7,android.hardware.Camera,/android/hardware/camera2/cts/ImageWriterTest.java)', 2), ('(7,android.hardware.camera,/android/hardware/camera2/cts/ImageWriterTest.java)', 2), ('(4,android.hardware.Camera,/android/hardware/cts/CameraGLTest.java)', 2), ('(4,android.hardware.camera,/android/hardware/cts/CameraGLTest.java)', 2), ('(2,android.hardware.Camera,/android/hardware/cts/LegacyCameraPerformanceTest.java)', 2), ('(2,android.hardware.camera,/android/hardware/cts/LegacyCameraPerformanceTest.java)', 2), ('(14,android.hardware.Camera,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 2), ('(14,android.hardware.camera,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 2), ('(22,android.hardware.Camera,/android/hardware/camera2/cts/CameraDeviceTest.java)', 2), ('(22,android.hardware.camera,/android/hardware/camera2/cts/CameraDeviceTest.java)', 2), ('(12,android.hardware.Camera,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 2), ('(12,android.hardware.camera,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 2), ('(18,android.hardware.Camera,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 2), ('(18,android.hardware.camera,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 2), ('(13,android.hardware.Camera,/android/hardware/camera2/cts/RecordingTest.java)', 2), ('(13,android.hardware.camera,/android/hardware/camera2/cts/RecordingTest.java)', 2), ('(14,android.hardware.Camera,/android/hardware/camera2/cts/CaptureResultTest.java)', 2), ('(14,android.hardware.camera,/android/hardware/camera2/cts/CaptureResultTest.java)', 2), ('(12,android.hardware.Camera,/android/hardware/camera2/cts/FastBasicsTest.java)', 2), ('(12,android.hardware.camera,/android/hardware/camera2/cts/FastBasicsTest.java)', 2), ('(11,android.hardware.Camera,/android/hardware/camera2/cts/BurstCaptureTest.java)', 2), ('(11,android.hardware.camera,/android/hardware/camera2/cts/BurstCaptureTest.java)', 2), ('(1,android.hardware.Camera,/android/hardware/camera2/cts/NativeCameraManagerTest.java)', 2), ('(1,android.hardware.camera,/android/hardware/camera2/cts/NativeCameraManagerTest.java)', 2), ('(2,android.hardware.Camera,/android/hardware/camera2/cts/NativeImageReaderTest.java)', 2), ('(2,android.hardware.camera,/android/hardware/camera2/cts/NativeImageReaderTest.java)', 2), ('(10,android.hardware.Camera,/android/hardware/camera2/cts/CameraManagerTest.java)', 2), ('(10,android.hardware.camera,/android/hardware/camera2/cts/CameraManagerTest.java)', 2), ('(2,android.hardware.Camera,/com/android/cts/ephemeralapp1/ClientTest.java)', 2), ('(2,android.hardware.camera,/com/android/cts/ephemeralapp1/ClientTest.java)', 2), ('(12,android.hardware.Camera,/android/hardware/camera2/cts/BurstCaptureRawTest.java)', 2), ('(12,android.hardware.camera,/android/hardware/camera2/cts/BurstCaptureRawTest.java)', 2), ('(1,android.hardware.Camera,/android/view/cts/TextureViewCameraTest.java)', 2), ('(1,android.hardware.camera,/android/view/cts/TextureViewCameraTest.java)', 2), ('(22,android.hardware.Camera,/android/hardware/cts/CameraTest.java)', 2), ('(22,android.hardware.camera,/android/hardware/cts/CameraTest.java)', 2), ('(13,android.hardware.Camera,/android/hardware/camera2/cts/OfflineSessionTest.java)', 2), ('(13,android.hardware.camera,/android/hardware/camera2/cts/OfflineSessionTest.java)', 2), ('(11,android.hardware.Camera,/android/hardware/camera2/cts/HeifWriterTest.java)', 2), ('(11,android.hardware.camera,/android/hardware/camera2/cts/HeifWriterTest.java)', 2), ('(20,android.hardware.Camera,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(20,android.hardware.camera,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(2,android.hardware.Camera,/android/hardware/camera2/cts/NativeStillCaptureTest.java)', 1), ('(2,android.hardware.camera,/android/hardware/camera2/cts/NativeStillCaptureTest.java)', 1), ('(2,android.hardware.Camera,/android/graphics/cts/CameraVulkanGpuTest.java)', 1), ('(2,android.hardware.camera,/android/graphics/cts/CameraVulkanGpuTest.java)', 1), ('(7,android.hardware.Camera,/android/app/cts/SystemFeaturesTest.java)', 1), ('(7,android.hardware.camera,/android/app/cts/SystemFeaturesTest.java)', 1), ('(20,android.hardware.Camera,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(20,android.hardware.camera,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(3,android.hardware.Camera,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(3,android.hardware.camera,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(4,android.hardware.Camera,/android/hardware/camera2/cts/SimpleObjectsTest.java)', 1), ('(4,android.hardware.camera,/android/hardware/camera2/cts/SimpleObjectsTest.java)', 1), ('(4,android.hardware.Camera,/android/permission/cts/Camera2PermissionTest.java)', 1), ('(4,android.hardware.camera,/android/permission/cts/Camera2PermissionTest.java)', 1), ('(1,android.hardware.Camera,/android/hardware/cts/Camera_ParametersTest.java)', 1), ('(1,android.hardware.camera,/android/hardware/cts/Camera_ParametersTest.java)', 1), ('(1,android.hardware.Camera,/android/content/cts/BroadcastReceiverTest.java)', 1), ('(1,android.hardware.camera,/android/content/cts/BroadcastReceiverTest.java)', 1), ('(16,android.hardware.Camera,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(16,android.hardware.camera,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(24,android.hardware.Camera,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1), ('(24,android.hardware.camera,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1), ('(1,android.hardware.Camera,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(1,android.hardware.camera,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(17,android.hardware.Camera,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(17,android.hardware.camera,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(10,android.hardware.Camera,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(10,android.hardware.camera,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(1,android.hardware.Camera,/android/media/cts/CameraProfileTest.java)', 1), ('(1,android.hardware.camera,/android/media/cts/CameraProfileTest.java)', 1), ('(3,android.hardware.Camera,/com/android/server/cts/device/statsd/AtomTests.java)', 1), ('(3,android.hardware.camera,/com/android/server/cts/device/statsd/AtomTests.java)', 1), ('(1,android.hardware.Camera,/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java)', 1), ('(1,android.hardware.camera,/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java)', 1), ('(4,android.hardware.Camera,/android/mediastress/cts/MediaRecorderStressTest.java)', 1), ('(4,android.hardware.camera,/android/mediastress/cts/MediaRecorderStressTest.java)', 1), ('(3,android.hardware.Camera,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(3,android.hardware.camera,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(1,android.hardware.Camera,/android/media/cts/MediaPlayerDrmTest.java)', 1), ('(1,android.hardware.camera,/android/media/cts/MediaPlayerDrmTest.java)', 1), ('(21,android.hardware.Camera,/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java)', 1), ('(21,android.hardware.camera,/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java)', 1), ('(1,android.hardware.Camera,/android/media/cts/MediaRecorderTest.java)', 1), ('(1,android.hardware.camera,/android/media/cts/MediaRecorderTest.java)', 1), ('(1,android.hardware.Camera,/android/permission/cts/CameraPermissionTest.java)', 1), ('(1,android.hardware.camera,/android/permission/cts/CameraPermissionTest.java)', 1), ('(19,android.hardware.Camera,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(19,android.hardware.camera,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(4,android.hardware.Camera,/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java)', 1), ('(4,android.hardware.camera,/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java)', 1), ('(8,android.hardware.Camera,/android/camera/cts/api25test/EnableZslTest.java)', 1), ('(8,android.hardware.camera,/android/camera/cts/api25test/EnableZslTest.java)', 1), ('(21,android.hardware.Camera,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(21,android.hardware.camera,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(14,android.hardware.Camera,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(14,android.hardware.camera,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(16,android.hardware.Camera,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(16,android.hardware.camera,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(1,android.hardware.Camera,/android/media/cts/MediaPlayerTest.java)', 1), ('(1,android.hardware.camera,/android/media/cts/MediaPlayerTest.java)', 1), ('(17,android.hardware.Camera,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(17,android.hardware.camera,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(4,android.hardware.Camera,/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java)', 1), ('(4,android.hardware.camera,/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java)', 1), ('(19,android.hardware.Camera,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(19,android.hardware.camera,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(2,android.hardware.Camera,/android/content/pm/cts/FeatureGroupInfoTest.java)', 1), ('(2,android.hardware.camera,/android/content/pm/cts/FeatureGroupInfoTest.java)', 1), ('(1,android.hardware.Camera,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(1,android.hardware.camera,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(3,android.hardware.Camera,/android/media/cts/CamcorderProfileTest.java)', 1), ('(3,android.hardware.camera,/android/media/cts/CamcorderProfileTest.java)', 1), ('(16,android.hardware.Camera,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(16,android.hardware.camera,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(2,android.hardware.Camera,/android/hardware/camera2/cts/CtsUtilsTest.java)', 1), ('(2,android.hardware.camera,/android/hardware/camera2/cts/CtsUtilsTest.java)', 1), ('(1,android.hardware.Camera,/android/security/cts/OutputConfigurationTest.java)', 1), ('(1,android.hardware.camera,/android/security/cts/OutputConfigurationTest.java)', 1), ('(1,android.hardware.Camera,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(1,android.hardware.camera,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1)]"	"[('([15:/android/hardware/camera2/cts/ConcurrentCameraTest.java]:[android.hardware.Camera]:[15]:method_text:[ this.substituteY8 = substituteY8;            this.combination = combination;        }    };   ])', 2), ('([15:/android/hardware/camera2/cts/ConcurrentCameraTest.java]:[android.hardware.camera]:[15]:method_text:[ this.substituteY8 = substituteY8;            this.combination = combination;        }    };   ])', 2), ('([7:/android/hardware/camera2/cts/FlashlightTest.java]:[android.hardware.Camera]:[7]:method_text:[f (info.hasFlash()) {                mFlashCameraIdList.add(id);            }        }    }   ])', 2), ('([7:/android/hardware/camera2/cts/FlashlightTest.java]:[android.hardware.camera]:[7]:method_text:[f (info.hasFlash()) {                mFlashCameraIdList.add(id);            }        }    }   ])', 2), ('([14:/android/hardware/camera2/cts/StillCaptureTest.java]:[android.hardware.Camera]:[14]:method_text:[  super.tearDown();    }    /**     * Test JPEG capture exif fields for each camera.     */   ])', 2), ('([14:/android/hardware/camera2/cts/StillCaptureTest.java]:[android.hardware.camera]:[14]:method_text:[  super.tearDown();    }    /**     * Test JPEG capture exif fields for each camera.     */   ])', 2), ('([11:/android/hardware/camera2/cts/StaticMetadataTest.java]:[android.hardware.Camera]:[11]:method_text:[  /**     * Test the available capability for different hardware support level devices.     */   ])', 2), ('([11:/android/hardware/camera2/cts/StaticMetadataTest.java]:[android.hardware.camera]:[11]:method_text:[  /**     * Test the available capability for different hardware support level devices.     */   ])', 2), ('([13:/android/hardware/camera2/cts/MultiViewTest.java]:[android.hardware.Camera]:[13]:method_text:[atic int YUV_IMG_READER_COUNT = 3;    private final static double BITMAP_DIFF_THRESHOLD = 0.1;   ])', 2), ('([13:/android/hardware/camera2/cts/MultiViewTest.java]:[android.hardware.camera]:[13]:method_text:[atic int YUV_IMG_READER_COUNT = 3;    private final static double BITMAP_DIFF_THRESHOLD = 0.1;   ])', 2), ('([2:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[android.hardware.Camera]:[2]:method_text:[dLibrary(""ctscamera2_jni"");        Log.i(""NativeCameraDeviceTest"", ""after loadlibrary"");    }   ])', 2), ('([2:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[android.hardware.camera]:[2]:method_text:[dLibrary(""ctscamera2_jni"");        Log.i(""NativeCameraDeviceTest"", ""after loadlibrary"");    }   ])', 2), ('([6:/android/hardware/camera2/cts/IdleUidTest.java]:[android.hardware.Camera]:[6]:method_text:[);    }    /**     * Tests that a UID has access to the camera only in active state.     */   ])', 2), ('([6:/android/hardware/camera2/cts/IdleUidTest.java]:[android.hardware.camera]:[6]:method_text:[);    }    /**     * Tests that a UID has access to the camera only in active state.     */   ])', 2), ('([25:/android/hardware/camera2/cts/AllocationTest.java]:[android.hardware.Camera]:[25]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 2), ('([25:/android/hardware/camera2/cts/AllocationTest.java]:[android.hardware.camera]:[25]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 2), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.Camera]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 2), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.camera]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 2), ('([18:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[android.hardware.Camera]:[18]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 2), ('([18:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[android.hardware.camera]:[18]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 2), ('([7:/android/hardware/camera2/cts/ImageWriterTest.java]:[android.hardware.Camera]:[7]:method_text:[. This validates the ImageWriter explicit buffer copy     * interface.</li>     * </p>     */   ])', 2), ('([7:/android/hardware/camera2/cts/ImageWriterTest.java]:[android.hardware.camera]:[7]:method_text:[. This validates the ImageWriter explicit buffer copy     * interface.</li>     * </p>     */   ])', 2), ('([4:/android/hardware/cts/CameraGLTest.java]:[android.hardware.Camera]:[4]:method_text:[.setPreviewTexture in conjunction with the standard Camera preview callback */    @UiThreadTest   ])', 2), ('([4:/android/hardware/cts/CameraGLTest.java]:[android.hardware.camera]:[4]:method_text:[.setPreviewTexture in conjunction with the standard Camera preview callback */    @UiThreadTest   ])', 2), ('([2:/android/hardware/cts/LegacyCameraPerformanceTest.java]:[android.hardware.Camera]:[2]:method_text:[  if (mHelper.getCamera() != null) {            mHelper.getCamera().release();        }    }   ])', 2), ('([2:/android/hardware/cts/LegacyCameraPerformanceTest.java]:[android.hardware.camera]:[2]:method_text:[  if (mHelper.getCamera() != null) {            mHelper.getCamera().release();        }    }   ])', 2), ('([14:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[android.hardware.Camera]:[14]:method_text:[e capture timestamp     * (monotonically increasing) ordering are verified.     * </p>     */   ])', 2), ('([14:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[android.hardware.camera]:[14]:method_text:[e capture timestamp     * (monotonically increasing) ordering are verified.     * </p>     */   ])', 2), ('([20:/android/hardware/camera2/cts/CameraDeviceTest.java]:[android.hardware.Camera]:[20]:method_text:[ure the stable frame rate is guaranteed for the given     * settings.</li>     * </ul>     */   ])', 2), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[android.hardware.Camera]:[2]:method_text:[progress work. Once the abort is complete, the idle callback will be called.     * </p>     */   ])', 2), ('([20:/android/hardware/camera2/cts/CameraDeviceTest.java]:[android.hardware.camera]:[20]:method_text:[ure the stable frame rate is guaranteed for the given     * settings.</li>     * </ul>     */   ])', 2), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[android.hardware.camera]:[2]:method_text:[progress work. Once the abort is complete, the idle callback will be called.     * </p>     */   ])', 2), ('([12:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[android.hardware.Camera]:[12]:method_text:[KEYS,    }    /**     * Test YUV_420_888 -> YUV_420_888 with maximal supported sizes     */   ])', 2), ('([12:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[android.hardware.camera]:[12]:method_text:[KEYS,    }    /**     * Test YUV_420_888 -> YUV_420_888 with maximal supported sizes     */   ])', 2), ('([18:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[android.hardware.Camera]:[18]:method_text:[agtion behaves as expected     * for logical multi-camera and non-logical multi-camera.     */   ])', 2), ('([18:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[android.hardware.camera]:[18]:method_text:[agtion behaves as expected     * for logical multi-camera and non-logical multi-camera.     */   ])', 2), ('([13:/android/hardware/camera2/cts/RecordingTest.java]:[android.hardware.Camera]:[13]:method_text:[on and validate the     * recorded video. Preview is set to the video size.     * </p>     */   ])', 2), ('([13:/android/hardware/camera2/cts/RecordingTest.java]:[android.hardware.camera]:[13]:method_text:[on and validate the     * recorded video. Preview is set to the video size.     * </p>     */   ])', 2), ('([14:/android/hardware/camera2/cts/CaptureResultTest.java]:[android.hardware.Camera]:[14]:method_text:[y times, and checks if there is any null entries in     * a capture result.     * </p>     */   ])', 2), ('([14:/android/hardware/camera2/cts/CaptureResultTest.java]:[android.hardware.camera]:[14]:method_text:[y times, and checks if there is any null entries in     * a capture result.     * </p>     */   ])', 2), ('([1:/android/hardware/camera2/cts/FastBasicsTest.java]:[android.hardware.Camera]:[1]:method_text:[a != null) {                    camera.release();                }            }        }    }}])', 2), ('([1:/android/hardware/camera2/cts/FastBasicsTest.java]:[android.hardware.camera]:[1]:method_text:[a != null) {                    camera.release();                }            }        }    }}])', 2), ('([11:/android/hardware/camera2/cts/BurstCaptureTest.java]:[android.hardware.Camera]:[11]:method_text:[ol.     * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.     */   ])', 2), ('([11:/android/hardware/camera2/cts/BurstCaptureTest.java]:[android.hardware.camera]:[11]:method_text:[ol.     * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.     */   ])', 2), ('([1:/android/hardware/camera2/cts/NativeCameraManagerTest.java]:[android.hardware.Camera]:[1]:method_text:[Library(""ctscamera2_jni"");        Log.i(""NativeCameraManagerTest"", ""after loadlibrary"");    }   ])', 2), ('([1:/android/hardware/camera2/cts/NativeCameraManagerTest.java]:[android.hardware.camera]:[1]:method_text:[Library(""ctscamera2_jni"");        Log.i(""NativeCameraManagerTest"", ""after loadlibrary"");    }   ])', 2), ('([2:/android/hardware/camera2/cts/NativeImageReaderTest.java]:[android.hardware.Camera]:[2]:method_text:[adLibrary(""ctscamera2_jni"");        Log.i(""NativeImageReaderTest"", ""after loadlibrary"");    }   ])', 2), ('([2:/android/hardware/camera2/cts/NativeImageReaderTest.java]:[android.hardware.camera]:[2]:method_text:[adLibrary(""ctscamera2_jni"");        Log.i(""NativeImageReaderTest"", ""after loadlibrary"");    }   ])', 2), ('([10:/android/hardware/camera2/cts/CameraManagerTest.java]:[android.hardware.Camera]:[10]:method_text:[fail(""Invalid CameraAccessException code: "" + reason);        return -1; // unreachable    }   ])', 2), ('([10:/android/hardware/camera2/cts/CameraManagerTest.java]:[android.hardware.camera]:[10]:method_text:[fail(""Invalid CameraAccessException code: "" + reason);        return -1; // unreachable    }   ])', 2), ('([2:/com/android/cts/ephemeralapp1/ClientTest.java]:[android.hardware.Camera]:[2]:method_text:[s Exception {        InstrumentationRegistry.getContext().unregisterReceiver(mReceiver);    }   ])', 2), ('([2:/com/android/cts/ephemeralapp1/ClientTest.java]:[android.hardware.camera]:[2]:method_text:[s Exception {        InstrumentationRegistry.getContext().unregisterReceiver(mReceiver);    }   ])', 2), ('([12:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[android.hardware.Camera]:[12]:method_text:[own();    }    /**     * Verify raw sensor size information is correctly configured.     */   ])', 2), ('([12:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[android.hardware.camera]:[12]:method_text:[own();    }    /**     * Verify raw sensor size information is correctly configured.     */   ])', 2), ('([1:/android/view/cts/TextureViewCameraTest.java]:[android.hardware.Camera]:[1]:method_text:[ty = mActivityRule.getActivity();        mNumberOfCameras = Camera.getNumberOfCameras();    }   ])', 2), ('([1:/android/view/cts/TextureViewCameraTest.java]:[android.hardware.camera]:[1]:method_text:[ty = mActivityRule.getActivity();        mNumberOfCameras = Camera.getNumberOfCameras();    }   ])', 2), ('([13:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[13]:method_text:[ture and verify all the callback     * functions are called properly.     */    @UiThreadTest   ])', 2), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[1]:method_text:[r3 == 1) {                mPreviewDone.open();            }        }    }    @UiThreadTest   ])', 2), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[1]:method_text:[f (stopped) {                mZoomDone.open();            }        }    }    @UiThreadTest   ])', 2), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[1]:method_text:[= PREVIEW_CALLBACK_RECEIVED;            mPreviewDone.open();        }    }    @UiThreadTest   ])', 2), ('([2:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[2]:method_text:[ "")"",                    Character.isLetter(c) && c != \'x\');        }    }    @UiThreadTest   ])', 2), ('([4:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[4]:method_text:[callback, id "" + mId + ""."");            mPreviewDone.open();        }    }    @UiThreadTest   ])', 2), ('([13:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[13]:method_text:[ture and verify all the callback     * functions are called properly.     */    @UiThreadTest   ])', 2), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[1]:method_text:[r3 == 1) {                mPreviewDone.open();            }        }    }    @UiThreadTest   ])', 2), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[1]:method_text:[f (stopped) {                mZoomDone.open();            }        }    }    @UiThreadTest   ])', 2), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[1]:method_text:[= PREVIEW_CALLBACK_RECEIVED;            mPreviewDone.open();        }    }    @UiThreadTest   ])', 2), ('([2:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[2]:method_text:[ "")"",                    Character.isLetter(c) && c != \'x\');        }    }    @UiThreadTest   ])', 2), ('([4:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[4]:method_text:[callback, id "" + mId + ""."");            mPreviewDone.open();        }    }    @UiThreadTest   ])', 2), ('([13:/android/hardware/camera2/cts/OfflineSessionTest.java]:[android.hardware.Camera]:[13]:method_text:[* surfaces not registered with camera or surfaces used in     * repeating requests.</p>     */   ])', 2), ('([13:/android/hardware/camera2/cts/OfflineSessionTest.java]:[android.hardware.camera]:[13]:method_text:[* surfaces not registered with camera or surfaces used in     * repeating requests.</p>     */   ])', 2), ('([11:/android/hardware/camera2/cts/HeifWriterTest.java]:[android.hardware.Camera]:[11]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 2), ('([11:/android/hardware/camera2/cts/HeifWriterTest.java]:[android.hardware.camera]:[11]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 2), ('([20:/android/hardware/camera2/cts/CaptureRequestTest.java]:[android.hardware.Camera]:[20]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([20:/android/hardware/camera2/cts/CaptureRequestTest.java]:[android.hardware.camera]:[20]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([2:/android/hardware/camera2/cts/NativeStillCaptureTest.java]:[android.hardware.Camera]:[2]:method_text:[dLibrary(""ctscamera2_jni"");        Log.i(""NativeStillCaptureTest"", ""after loadlibrary"");    }   ])', 1), ('([2:/android/hardware/camera2/cts/NativeStillCaptureTest.java]:[android.hardware.camera]:[2]:method_text:[dLibrary(""ctscamera2_jni"");        Log.i(""NativeStillCaptureTest"", ""after loadlibrary"");    }   ])', 1), ('([2:/android/graphics/cts/CameraVulkanGpuTest.java]:[android.hardware.Camera]:[2]:method_text:[ class CameraVulkanGpuTest {    static {        System.loadLibrary(""ctsgraphics_jni"");    }   ])', 1), ('([2:/android/graphics/cts/CameraVulkanGpuTest.java]:[android.hardware.camera]:[2]:method_text:[ class CameraVulkanGpuTest {    static {        System.loadLibrary(""ctsgraphics_jni"");    }   ])', 1), ('([7:/android/app/cts/SystemFeaturesTest.java]:[android.hardware.Camera]:[7]:method_text:[properly prefixed with ""android."" that are not defined in     * {@link PackageManager}.     */   ])', 1), ('([7:/android/app/cts/SystemFeaturesTest.java]:[android.hardware.camera]:[7]:method_text:[properly prefixed with ""android."" that are not defined in     * {@link PackageManager}.     */   ])', 1), ('([20:/android/hardware/camera2/cts/RobustnessTest.java]:[android.hardware.Camera]:[20]:method_text:[uffer size in the     * available stream configurations for a surface with this format.     */   ])', 1), ('([20:/android/hardware/camera2/cts/RobustnessTest.java]:[android.hardware.camera]:[20]:method_text:[uffer size in the     * available stream configurations for a surface with this format.     */   ])', 1), ('([2:/android/hardware/cts/Camera_SizeTest.java]:[android.hardware.Camera]:[2]:method_text:[float ASPECT_RATIO_TOLERANCE = 0.05f;    private static final String TAG = ""Camera_SizeTest"";   ])', 1), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[android.hardware.Camera]:[1]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}     */   ])', 1), ('([2:/android/hardware/cts/Camera_SizeTest.java]:[android.hardware.camera]:[2]:method_text:[float ASPECT_RATIO_TOLERANCE = 0.05f;    private static final String TAG = ""Camera_SizeTest"";   ])', 1), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[android.hardware.camera]:[1]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}     */   ])', 1), ('([4:/android/hardware/camera2/cts/SimpleObjectsTest.java]:[android.hardware.Camera]:[4]:method_text:[droidJUnit4.class)@SuppressWarnings(""EqualsIncompatibleType"")public class SimpleObjectsTest {   ])', 1), ('([4:/android/hardware/camera2/cts/SimpleObjectsTest.java]:[android.hardware.camera]:[4]:method_text:[droidJUnit4.class)@SuppressWarnings(""EqualsIncompatibleType"")public class SimpleObjectsTest {   ])', 1), ('([4:/android/permission/cts/Camera2PermissionTest.java]:[android.hardware.Camera]:[4]:method_text:[ to open camera. Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */   ])', 1), ('([4:/android/permission/cts/Camera2PermissionTest.java]:[android.hardware.camera]:[4]:method_text:[ to open camera. Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */   ])', 1), ('([1:/android/hardware/cts/Camera_ParametersTest.java]:[android.hardware.Camera]:[1]:method_text:[port android.hardware.Camera.Parameters;public class Camera_ParametersTest extends TestCase {   ])', 1), ('([1:/android/hardware/cts/Camera_ParametersTest.java]:[android.hardware.camera]:[1]:method_text:[port android.hardware.Camera.Parameters;public class Camera_ParametersTest extends TestCase {   ])', 1), ('([1:/android/content/cts/BroadcastReceiverTest.java]:[android.hardware.Camera]:[1]:method_text:[    }    @Override    protected void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([1:/android/content/cts/BroadcastReceiverTest.java]:[android.hardware.camera]:[1]:method_text:[    }    @Override    protected void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([16:/android/hardware/camera2/cts/PerformanceTest.java]:[android.hardware.Camera]:[16]:method_text:[   * For depth-only devices, timing is done with the DEPTH16 format instead.     * </p>     */   ])', 1), ('([16:/android/hardware/camera2/cts/PerformanceTest.java]:[android.hardware.camera]:[16]:method_text:[   * For depth-only devices, timing is done with the DEPTH16 format instead.     * </p>     */   ])', 1), ('([24:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[android.hardware.Camera]:[24]:method_text:[er mMultiResolutionImageReader;    private SimpleMultiResolutionImageReaderListener mListener;   ])', 1), ('([24:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[android.hardware.camera]:[24]:method_text:[er mMultiResolutionImageReader;    private SimpleMultiResolutionImageReaderListener mListener;   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[android.hardware.Camera]:[1]:method_text:[ DEVICE_OWNER_ADMIN =            DEVICE_OWNER_PKG + "".BaseDeviceOwnerTest$BasicAdminReceiver"";   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[android.hardware.camera]:[1]:method_text:[ DEVICE_OWNER_ADMIN =            DEVICE_OWNER_PKG + "".BaseDeviceOwnerTest$BasicAdminReceiver"";   ])', 1), ('([17:/android/hardware/camera2/cts/PerformanceTest.java]:[android.hardware.Camera]:[17]:method_text:[   * For depth-only devices, timing is done with the DEPTH16 format instead.     * </p>     */   ])', 1), ('([17:/android/hardware/camera2/cts/PerformanceTest.java]:[android.hardware.camera]:[17]:method_text:[   * For depth-only devices, timing is done with the DEPTH16 format instead.     * </p>     */   ])', 1), ('([10:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[android.hardware.Camera]:[10]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([10:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[android.hardware.camera]:[10]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([11:/android/hardware/camera2/cts/FastBasicsTest.java]:[android.hardware.Camera]:[11]:method_text:[IMEOUT_MS = 5000;    private static final int FRAMES_TO_WAIT_FOR_CAPTURE = 100;    @Presubmit   ])', 1), ('([11:/android/hardware/camera2/cts/FastBasicsTest.java]:[android.hardware.camera]:[11]:method_text:[IMEOUT_MS = 5000;    private static final int FRAMES_TO_WAIT_FOR_CAPTURE = 100;    @Presubmit   ])', 1), ('([1:/android/media/cts/CameraProfileTest.java]:[android.hardware.Camera]:[1]:method_text:[     assertTrue(high >= 0 && high <= 100);        assertTrue(low <= mid && mid <= high);    }   ])', 1), ('([1:/android/media/cts/CameraProfileTest.java]:[android.hardware.camera]:[1]:method_text:[     assertTrue(high >= 0 && high <= 100);        assertTrue(low <= mid && mid <= high);    }   ])', 1), ('([3:/com/android/server/cts/device/statsd/AtomTests.java]:[android.hardware.Camera]:[3]:method_text:[NSTALLER, 98);        APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_NO_ISOLATED_STORAGE, 99);    }   ])', 1), ('([3:/com/android/server/cts/device/statsd/AtomTests.java]:[android.hardware.camera]:[3]:method_text:[NSTALLER, 98);        APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_NO_ISOLATED_STORAGE, 99);    }   ])', 1), ('([1:/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java]:[android.hardware.Camera]:[1]:method_text:[ends RunListener {        private volatile boolean mCurrentTestReported;        @Override       ])', 1), ('([1:/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java]:[android.hardware.camera]:[1]:method_text:[ends RunListener {        private volatile boolean mCurrentTestReported;        @Override       ])', 1), ('([4:/android/mediastress/cts/MediaRecorderStressTest.java]:[android.hardware.Camera]:[4]:method_text:[order error"");        }    }    //Test case for stressing the camera preview.    @LargeTest   ])', 1), ('([4:/android/mediastress/cts/MediaRecorderStressTest.java]:[android.hardware.camera]:[4]:method_text:[order error"");        }    }    //Test case for stressing the camera preview.    @LargeTest   ])', 1), ('([3:/com/android/server/cts/device/statsdatom/AtomTests.java]:[android.hardware.Camera]:[3]:method_text:[114);        APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_RECORD_INCOMING_PHONE_AUDIO, 115);    }   ])', 1), ('([3:/com/android/server/cts/device/statsdatom/AtomTests.java]:[android.hardware.camera]:[3]:method_text:[114);        APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_RECORD_INCOMING_PHONE_AUDIO, 115);    }   ])', 1), ('([1:/android/media/cts/MediaPlayerDrmTest.java]:[android.hardware.Camera]:[1]:method_text:[inal Uri CENC_VIDEO_URL_DOWNLOADED = getUriFromFile(""car_cenc-20120827-88.mp4"");    // Tests   ])', 1), ('([1:/android/media/cts/MediaPlayerDrmTest.java]:[android.hardware.camera]:[1]:method_text:[inal Uri CENC_VIDEO_URL_DOWNLOADED = getUriFromFile(""car_cenc-20120827-88.mp4"");    // Tests   ])', 1), ('([21:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[android.hardware.Camera]:[21]:method_text:[  private ImageWriter mImageWriter;    private SimpleImageWriterListener mImageWriterListener;   ])', 1), ('([21:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[android.hardware.camera]:[21]:method_text:[  private ImageWriter mImageWriter;    private SimpleImageWriterListener mImageWriterListener;   ])', 1), ('([1:/android/media/cts/MediaRecorderTest.java]:[android.hardware.Camera]:[1]:method_text:[   mNextOutputFileStartedCond = null;        mActivity = null;        super.tearDown();    }   ])', 1), ('([1:/android/media/cts/MediaRecorderTest.java]:[android.hardware.camera]:[1]:method_text:[   mNextOutputFileStartedCond = null;        mActivity = null;        super.tearDown();    }   ])', 1), ('([1:/android/permission/cts/CameraPermissionTest.java]:[android.hardware.Camera]:[1]:method_text:[ Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */    @MediumTest   ])', 1), ('([1:/android/permission/cts/CameraPermissionTest.java]:[android.hardware.camera]:[1]:method_text:[ Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */    @MediumTest   ])', 1), ('([19:/android/hardware/camera2/cts/CaptureRequestTest.java]:[android.hardware.Camera]:[19]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([19:/android/hardware/camera2/cts/CaptureRequestTest.java]:[android.hardware.camera]:[19]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([4:/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java]:[android.hardware.Camera]:[4]:method_text:[nsion"");        } catch (IllegalArgumentException e) {            // Expected        }    }   ])', 1), ('([4:/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java]:[android.hardware.camera]:[4]:method_text:[nsion"");        } catch (IllegalArgumentException e) {            // Expected        }    }   ])', 1), ('([8:/android/camera/cts/api25test/EnableZslTest.java]:[android.hardware.Camera]:[8]:method_text:[ <p>Verify CaptureRequest.CONTROL_ENABLE_ZSL is false if available in all templates.</p>     */   ])', 1), ('([8:/android/camera/cts/api25test/EnableZslTest.java]:[android.hardware.camera]:[8]:method_text:[ <p>Verify CaptureRequest.CONTROL_ENABLE_ZSL is false if available in all templates.</p>     */   ])', 1), ('([21:/android/hardware/camera2/cts/RobustnessTest.java]:[android.hardware.Camera]:[21]:method_text:[uffer size in the     * available stream configurations for a surface with this format.     */   ])', 1), ('([21:/android/hardware/camera2/cts/RobustnessTest.java]:[android.hardware.camera]:[21]:method_text:[uffer size in the     * available stream configurations for a surface with this format.     */   ])', 1), ('([14:/android/hardware/camera2/cts/DngCreatorTest.java]:[android.hardware.Camera]:[14]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([14:/android/hardware/camera2/cts/DngCreatorTest.java]:[android.hardware.camera]:[14]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([16:/android/hardware/camera2/cts/ImageReaderTest.java]:[android.hardware.Camera]:[16]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([16:/android/hardware/camera2/cts/ImageReaderTest.java]:[android.hardware.camera]:[16]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([1:/android/media/cts/MediaPlayerTest.java]:[android.hardware.Camera]:[1]:method_text:[e != null && mOutFile.exists()) {            mOutFile.delete();        }    }    @Presubmit   ])', 1), ('([1:/android/media/cts/MediaPlayerTest.java]:[android.hardware.camera]:[1]:method_text:[e != null && mOutFile.exists()) {            mOutFile.delete();        }    }    @Presubmit   ])', 1), ('([17:/android/hardware/camera2/cts/ImageReaderTest.java]:[android.hardware.Camera]:[17]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([17:/android/hardware/camera2/cts/ImageReaderTest.java]:[android.hardware.camera]:[17]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([11:/android/hardware/camera2/cts/FastBasicsTest.java]:[android.hardware.Camera]:[11]:method_text:[IMEOUT_MS = 8000;    private static final int FRAMES_TO_WAIT_FOR_CAPTURE = 100;    @Presubmit   ])', 1), ('([11:/android/hardware/camera2/cts/FastBasicsTest.java]:[android.hardware.camera]:[11]:method_text:[IMEOUT_MS = 8000;    private static final int FRAMES_TO_WAIT_FOR_CAPTURE = 100;    @Presubmit   ])', 1), ('([4:/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java]:[android.hardware.Camera]:[4]:method_text:[per.tearDown();    }    /**     * Test basic eviction scenarios for the Camera1 API.     */   ])', 1), ('([4:/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java]:[android.hardware.camera]:[4]:method_text:[per.tearDown();    }    /**     * Test basic eviction scenarios for the Camera1 API.     */   ])', 1), ('([14:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[android.hardware.Camera]:[14]:method_text:[ure);    }    // Verify that camera extension sessions can be created and closed as expected.   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[android.hardware.Camera]:[1]:method_text:[erage capture latency and if possible    // ensure that the value is within the reported range.   ])', 1), ('([2:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[android.hardware.Camera]:[2]:method_text:[ally increasing timestamps!"");            }            return mLastTimestamp;        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[android.hardware.Camera]:[2]:method_text:[y {                    mTestRule.closeDevice(id);                }            }        }    }}])', 1), ('([14:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[android.hardware.camera]:[14]:method_text:[ure);    }    // Verify that camera extension sessions can be created and closed as expected.   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[android.hardware.camera]:[1]:method_text:[erage capture latency and if possible    // ensure that the value is within the reported range.   ])', 1), ('([2:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[android.hardware.camera]:[2]:method_text:[ally increasing timestamps!"");            }            return mLastTimestamp;        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[android.hardware.camera]:[2]:method_text:[y {                    mTestRule.closeDevice(id);                }            }        }    }}])', 1), ('([2:/android/content/pm/cts/FeatureGroupInfoTest.java]:[android.hardware.Camera]:[2]:method_text:[o2.flags);                    }                    return diff;                }            };}])', 1), ('([2:/android/content/pm/cts/FeatureGroupInfoTest.java]:[android.hardware.camera]:[2]:method_text:[o2.flags);                    }                    return diff;                }            };}])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[android.hardware.Camera]:[1]:method_text:[ad.sleep(1000);        }        throw new AssertionError(""Failed to get UiAutomation"");    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[android.hardware.camera]:[1]:method_text:[ad.sleep(1000);        }        throw new AssertionError(""Failed to get UiAutomation"");    }   ])', 1), ('([3:/android/media/cts/CamcorderProfileTest.java]:[android.hardware.Camera]:[3]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([3:/android/media/cts/CamcorderProfileTest.java]:[android.hardware.camera]:[3]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([16:/android/hardware/camera2/cts/DngCreatorTest.java]:[android.hardware.Camera]:[16]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([16:/android/hardware/camera2/cts/DngCreatorTest.java]:[android.hardware.camera]:[16]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/CtsUtilsTest.java]:[android.hardware.Camera]:[2]:method_text:[de. * </p> */public class CtsUtilsTest {    private static final byte PADBYTE = (byte)0xa5;   ])', 1), ('([2:/android/hardware/camera2/cts/CtsUtilsTest.java]:[android.hardware.camera]:[2]:method_text:[de. * </p> */public class CtsUtilsTest {    private static final byte PADBYTE = (byte)0xa5;   ])', 1), ('([1:/android/security/cts/OutputConfigurationTest.java]:[android.hardware.Camera]:[1]:method_text:[arcel properly. */@SecurityTestpublic class OutputConfigurationTest extends AndroidTestCase {   ])', 1), ('([1:/android/security/cts/OutputConfigurationTest.java]:[android.hardware.camera]:[1]:method_text:[arcel properly. */@SecurityTestpublic class OutputConfigurationTest extends AndroidTestCase {   ])', 1), ('([1:/com/android/cts/managedprofile/CameraPolicyTest.java]:[android.hardware.Camera]:[1]:method_text:[d tearDown() throws Exception {        stopBackgroundThread();        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/managedprofile/CameraPolicyTest.java]:[android.hardware.camera]:[1]:method_text:[d tearDown() throws Exception {        stopBackgroundThread();        super.tearDown();    }   ])', 1)]"	""	""	""	""	""
"246:691929) 9.1  . Permissions"	"9.1"	"C-2-1"	""	"[('android.appsecurity.cts.DirectBootHostTest', 2), ('android.systemintents.cts.TestManageOverlayPermissionIntents', 2), ('com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity', 1), ('com.google.android.cts.settings.PrivacyDeviceOwnerTest', 1), ('android.appsecurity.cts.ResumeOnRebootHostTest', 1)]"	"[('getDevice', 12), ('setUp', 5), ('tearDown', 4), ('getAbi', 3), ('getBuild', 3), ('size', 2), ('getMaxNumberOfUsersSupported', 1)]"	""	""	"9.1/C-2-1"	"""C-2-1] MUST ensure that all activities with intent filters for the ACTION_MANAGE_OVERLAY_PERMISSION intent have the same UI screen, regardless of the initiating app or any information it provides. If device implementations report android.software.device_admin, they: """	"09010000.670201"	"android.software.device ACTION_MANAGE_OVERLAY_PERMISSION"	""	""	""	"[('android.software.device', 4), ('ACTION_MANAGE_OVERLAY_PERMISSION', 3)]"	""	"[('[android.systemintents.cts.TestManageOverlayPermissionIntents testManageOverlayPermissionIntentWithDataResolvesToSameIntentWithoutData None]', 2), ('[com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity startTest None]', 1), ('[android.appsecurity.cts.ResumeOnRebootHostTest removeTestPackages None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 1), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestManageOverlayPermissionIntents.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/settings/src/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ResumeOnRebootHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestManageOverlayPermissionIntents.java', 1)]"	"[('(1,android.software.device,/android/appsecurity/cts/DirectBootHostTest.java)', 2), ('(3,ACTION_MANAGE_OVERLAY_PERMISSION,/android/systemintents/cts/TestManageOverlayPermissionIntents.java)', 2), ('(1,ACTION_MANAGE_OVERLAY_PERMISSION,/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java)', 1), ('(1,android.software.device,/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java)', 1), ('(1,android.software.device,/android/appsecurity/cts/ResumeOnRebootHostTest.java)', 1)]"	"[('([1:/android/appsecurity/cts/DirectBootHostTest.java]:[android.software.device]:[1]:method_text:[allPackage(OTHER_PKG);    }    /**     * Automotive devices MUST support native FBE.     */   ])', 2), ('([3:/android/systemintents/cts/TestManageOverlayPermissionIntents.java]:[ACTION_MANAGE_OVERLAY_PERMISSION]:[3]:method_text:[ty.packageName);        assertEquals(errorMessage, genericActivity.name, appActivity.name);    }}])', 2), ('([1:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[ACTION_MANAGE_OVERLAY_PERMISSION]:[1]:method_text:[}    }    private interface SetWifiCallback {        void onComplete(boolean isSuccess);    }}])', 1), ('([1:/com/google/android/cts/settings/PrivacyDeviceOwnerTest.java]:[android.software.device]:[1]:method_text:[    super.tearDown();    }    /** The case: app is the device owner, has work policy info. */   ])', 1), ('([1:/android/appsecurity/cts/ResumeOnRebootHostTest.java]:[android.software.device]:[1]:method_text:[throws Exception {        removeTestPackages();        deviceRestoreDeviceConfigSync();    }   ])', 1)]"	""	""	""	""	""
"272:752378) 9.10  . Device Integrity"	"9.10"	"C-0-4"	""	""	""	""	""	"9.10/C-0-4"	"""C-0-4] MUST NOT allow the read requests on a protected file to succeed when the read content do not verify against a trusted key."""	"09100000.670004"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"272:752378) 9.10  . Device Integrity"	"9.10"	"C-0-5"	""	""	""	""	""	"9.10/C-0-5"	"""C-0-5] MUST enable the above-described cryptographic file verification protection for all files for the package that is installed with trusted signature files as described here. If device implementations are already launched without the ability to verify file content against a trusted key on an earlier Android version and can not add support for this feature with a system software update, they MAY be exempted from the requirement. The upstream Android Open Source project provides a preferred implementation of this feature based on the Linux kernel fs-verity feature. Device implementations: """	"09100000.670005"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"272:752378) 9.10  . Device Integrity"	"9.10"	"C-1-10"	""	""	""	""	""	"9.10/C-1-10"	"""C-1-10] MUST implement rollback protection for partitions used by Android (e.g. boot, system partitions) and use tamper-evident storage for storing the metadata used for determining the minimum allowable OS version."""	"09100000.670110"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"272:752378) 9.10  . Device Integrity"	"9.10"	"C-1-9"	""	""	""	""	""	"9.10/C-1-9"	"""C-1-9] MUST prompt the user, while using the device, and require physical confirmation before allowing a transition from bootloader locked mode to bootloader unlocked mode."""	"09100000.670109"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"276:775608) 9.11.3  . Identity Credential"	"9.11.3"	"C-0-2"	""	"[('com.android.cts.deviceowner.CreateAndManageUserTest', 19), ('android.telephony.cts.TelephonyManagerTest', 11), ('android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest', 10), ('android.devicepolicy.cts.DevicePolicyManagerTest', 9), ('android.transition.cts.ChangeImageTransformTest', 8), ('android.view.cts.ViewConfigurationTest', 4), ('android.content.pm.cts.PackageItemInfoIconTest', 4), ('android.angle.cts.CtsAngleDeveloperOptionHostTest', 4), ('android.autofillservice.cts.LoginActivityTest', 4), ('android.widget.cts.TextViewTest', 4), ('android.server.wm.KeyguardLockedTests', 3), ('android.app.usage.cts.UsageStatsTest', 3), ('com.android.cts.devicepolicy.LauncherAppsSingleUserTest', 3), ('android.view.inputmethod.cts.SearchViewTest', 2), ('android.content.res.cts.AssetManagerTest', 2), ('android.security.identity.cts.ProvisioningTest', 2), ('android.content.cts.SharedPreferencesTest', 2), ('android.view.animation.cts.RotateAnimationTest', 2), ('android.app.cts.DownloadManagerInstallerTest', 2), ('android.net.wifi.cts.WifiManagerTest', 2), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi25', 1), ('android.widget.cts.MagnifierTest', 1), ('android.content.res.cts.TypedArrayTest', 1), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTest', 1), ('com.android.cts.deviceandprofileowner.AlwaysOnVpnTest', 1), ('android.app.cts.SystemFeaturesTest', 1), ('android.telecom.cts.CallDetailsTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('com.android.cts.managedprofile.CrossProfileUtils', 1)]"	"[('getDevice', 20), ('setUp', 12), ('getContext', 10), ('build', 10), ('getBytes', 6), ('printStackTrace', 6), ('tearDown', 5), ('getInstrumentation', 4), ('getExampleDrivingPrivilegesCbor', 4), ('end', 4), ('Builder', 4), ('toByteArray', 3), ('requestFocus', 2), ('get', 2), ('getSimpleName', 2), ('getPackageManager', 2), ('setup', 2), ('resetTransition', 2), ('getPackageName', 2), ('ByteArrayOutputStream', 2), ('CborBuilder', 2), ('addArray', 2), ('addMap', 2), ('iterator', 2), ('next', 2), ('getPublicKey', 2), ('getWho', 2), ('UnlockScreenRule', 1), ('supportsSecureLock', 1), ('setUpClass', 1), ('ChangeImageTransform', 1), ('WindowManagerStateHelper', 1), ('setUpInputMethodManager', 1), ('getTargetContext', 1), ('tearDownInputMethodManager', 1), ('Object', 1), ('getAction', 1), ('countDown', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('getDefaultSubscriptionId', 1), ('getRadioHalVersion', 1), ('hasCellular', 1), ('getPhoneCount', 1)]"	""	""	"9.11.3/C-0-2"	"""C-0-2] MUST implement the Identity Credential System (e.g. the android.security.identity.* APIs) with code communicating with a trusted application in an area that is securely isolated from the code running on the kernel and above. Secure isolation MUST block all potential mechanisms by which kernel or userspace code might access the internal state of the isolated environment, including DMA. """	"09110300.670002"	"DMA android.security.identity"	""	""	""	"[('DMA', 109), ('android.security.identity', 1)]"	""	"[('[android.view.cts.ViewConfigurationTest testInstanceValues None]', 2), ('[android.view.cts.ViewConfigurationTest testGetMaximumDrawingCacheSize None]', 2), ('[android.angle.cts.CtsAngleDeveloperOptionHostTest testMultipleUpdateDriverValues None]', 2), ('[android.autofillservice.cts.LoginActivityTest testAutoFillOneDatasetAndSave None]', 2), ('[android.view.inputmethod.cts.SearchViewTest testShowImeWithSearchViewFocus None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi25 removeTestUsers None]', 1), ('[android.widget.cts.MagnifierTest testShow_withDecoupledMagnifierPosition None]', 1), ('[android.content.res.cts.TypedArrayTest testNonResourceString None]', 1), ('[android.content.pm.cts.PackageItemInfoIconTest testFromAppInfo None]', 1), ('[android.content.pm.cts.PackageItemInfoIconTest testFromActivity None]', 1), ('[android.content.pm.cts.PackageItemInfoIconTest testDelegatedFromAppInfo None]', 1), ('[android.content.pm.cts.PackageItemInfoIconTest testDelegatedFromActivity None]', 1), ('[android.server.wm.KeyguardLockedTests testLockAndUnlock None]', 1), ('[android.server.wm.KeyguardLockedTests testDisableKeyguard_thenSettingCredential_reenablesKeyguard_b119322269 None]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled None]', 1), ('[android.transition.cts.ChangeImageTransformTest resetListener None]', 1), ('[android.transition.cts.ChangeImageTransformTest testCenterToFitXY None]', 1), ('[android.transition.cts.ChangeImageTransformTest testCenterCropToFitCenter None]', 1), ('[android.transition.cts.ChangeImageTransformTest testCenterInsideToFitEnd None]', 1), ('[android.transition.cts.ChangeImageTransformTest testFitStartToCenter None]', 1), ('[android.transition.cts.ChangeImageTransformTest testNoChange None]', 1), ('[android.transition.cts.ChangeImageTransformTest testNoAnimationForDrawableWithoutSize None]', 1), ('[android.transition.cts.ChangeImageTransformTest testNullAnimatorKeepsImagePadding None]', 1), ('[android.app.usage.cts.UsageStatsTest isAppStandbyEnabled None]', 1), ('[android.app.usage.cts.UsageStatsTest testInteractiveEvents None]', 1), ('[android.app.usage.cts.UsageStatsTest testLocusIdEventsVisibility None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest removeTestUsers None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testSetNonVpnAlwaysOn None]', 1), ('[android.app.cts.SystemFeaturesTest testTelephonyFeatures None]', 1), ('[android.telecom.cts.CallDetailsTest testCallPropertyPropagation None]', 1), ('[android.content.res.cts.AssetManagerTest testAssetOperations None]', 1), ('[android.content.res.cts.AssetManagerTest testClose None]', 1), ('[android.devicepolicy.cts.DevicePolicyManagerTest newlyProvisionedManagedProfile_createsProfile None]', 1), ('[android.devicepolicy.cts.DevicePolicyManagerTest newlyProvisionedManagedProfile_createsManagedProfile None]', 1), ('[android.devicepolicy.cts.DevicePolicyManagerTest newlyProvisionedManagedProfile_setsActiveAdmin None]', 1), ('[android.devicepolicy.cts.DevicePolicyManagerTest newlyProvisionedManagedProfile_setsProfileOwner None]', 1), ('[android.devicepolicy.cts.DevicePolicyManagerTest newlyProvisionedManagedProfile_copiesAccountToProfile None]', 1), ('[android.devicepolicy.cts.DevicePolicyManagerTest newlyProvisionedManagedProfile_removesAccountFromParentByDefault None]', 1), ('[android.devicepolicy.cts.DevicePolicyManagerTest newlyProvisionedManagedProfile_keepsAccountInParentIfRequested None]', 1), ('[android.devicepolicy.cts.DevicePolicyManagerTest newlyProvisionedManagedProfile_removesNonRequiredAppsFromProfile None]', 1), ('[android.devicepolicy.cts.DevicePolicyManagerTest newlyProvisionedManagedProfile_setsCrossProfilePackages None]', 1), ('[android.content.cts.SharedPreferencesTest testTorture None]', 1), ('[android.content.cts.SharedPreferencesTest testTorture2 None]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanVersionForVrHighPerformance None]', 1), ('[android.view.animation.cts.RotateAnimationTest testRotateAgainstOrigin None]', 1), ('[android.view.animation.cts.RotateAnimationTest testRotateAgainstPoint None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_LowStorage None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_MaxUsers None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_SkipSetupWizard None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_GetSecondaryUsers None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_SwitchUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_CannotStopCurrentUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_StartInBackground None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_StartInBackground_MaxRunningUsers None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_StopUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_StopEphemeralUser_DisallowRemoveUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_LogoutUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_Affiliated None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_Ephemeral None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_LeaveAllSystemApps None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_AddRestrictionSet None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_RemoveRestrictionSet None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testUserAddedOrRemovedBroadcasts None]', 1), ('[com.android.cts.managedprofile.CrossProfileUtils testAddManagedCanAccessParentFilters None]', 1), ('[android.app.cts.DownloadManagerInstallerTest testSetDestinationUri_otherAppObbDir None]', 1), ('[android.net.wifi.cts.WifiManagerTest testIsApMacRandomizationSupported None]', 1), ('[android.net.wifi.cts.WifiManagerTest testIsConnectedMacRandomizationSupported None]', 1), ('[android.autofillservice.cts.LoginActivityTest testAutoFillOneDataset None]', 1), ('[android.widget.cts.TextViewTest testEllipsizeAndMaxLinesForSingleLine None]', 1), ('[android.widget.cts.TextViewTest testEllipsizeAndMaxLinesForMultiLine None]', 1), ('[android.widget.cts.TextViewTest testEllipsizeAndMaxLinesForHint None]', 1), ('[android.widget.cts.TextViewTest testAutoSizeUniform_equivalentConfigurations None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest getInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1InInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1NotInInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1InEnabledInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1NotInEnabledInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme2InInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme2NotInInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme2InEnabledInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme2NotInEnabledInputMethodList None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest testIme1ImplicitlyEnabledSubtypeExists None]', 1), ('[android.telephony.cts.TelephonyManagerTest testListen None]', 1), ('[android.telephony.cts.TelephonyManagerTest testTelephonyManager None]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetPhoneCount None]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetDeviceIdForSlot None]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetTac None]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetMc None]', 1), ('[android.telephony.cts.TelephonyManagerTest testNetworkRegistrationInfoRegisteredPlmn None]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetMeid None]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetMeidForSlot None]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetForbiddenPlmns None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageAddedMainUser None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageRemovedMainUser None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsSingleUserTest testLauncherCallbackPackageChangedMainUser None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/CreateAndManageUserTest.java', 19), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 11), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/DevicePolicyManagerTest.java', 9), ('/home/gpoor/cts-source/cts/tests/tests/transition/src/android/transition/cts/ChangeImageTransformTest.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageItemInfoIconTest.java', 4), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/LoginActivityTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TextViewTest.java', 4), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java', 3), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/SearchViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/angle/src/android/angle/cts/CtsAngleDeveloperOptionHostTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/AssetManagerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/angle/src/android/angle/cts/CtsAngleDeveloperOptionHostTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/SharedPreferencesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/animation/cts/RotateAnimationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/DownloadManagerInstallerTest/src/android/app/cts/DownloadManagerInstallerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/MagnifierTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/TypedArrayTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallDetailsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileUtils.java', 1)]"	"[('(3,DMA,/android/view/cts/ViewConfigurationTest.java)', 2), ('(6,DMA,/android/angle/cts/CtsAngleDeveloperOptionHostTest.java)', 2), ('(2,DMA,/android/view/inputmethod/cts/SearchViewTest.java)', 1), ('(1,DMA,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java)', 1), ('(1,DMA,/android/widget/cts/MagnifierTest.java)', 1), ('(2,DMA,/android/content/res/cts/TypedArrayTest.java)', 1), ('(4,DMA,/android/content/pm/cts/PackageItemInfoIconTest.java)', 1), ('(13,DMA,/android/server/wm/KeyguardLockedTests.java)', 1), ('(1,DMA,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(11,DMA,/android/transition/cts/ChangeImageTransformTest.java)', 1), ('(7,DMA,/android/app/usage/cts/UsageStatsTest.java)', 1), ('(1,DMA,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(1,DMA,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1), ('(2,DMA,/android/app/cts/SystemFeaturesTest.java)', 1), ('(2,DMA,/android/telecom/cts/CallDetailsTest.java)', 1), ('(3,DMA,/android/content/res/cts/AssetManagerTest.java)', 1), ('(1,DMA,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(16,android.security.identity,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(9,DMA,/android/devicepolicy/cts/DevicePolicyManagerTest.java)', 1), ('(8,DMA,/android/content/cts/SharedPreferencesTest.java)', 1), ('(2,DMA,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(29,DMA,/android/view/animation/cts/RotateAnimationTest.java)', 1), ('(42,DMA,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(1,DMA,/com/android/cts/managedprofile/CrossProfileUtils.java)', 1), ('(7,DMA,/android/app/cts/DownloadManagerInstallerTest.java)', 1), ('(3,DMA,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(5,DMA,/android/autofillservice/cts/LoginActivityTest.java)', 1), ('(6,DMA,/android/widget/cts/TextViewTest.java)', 1), ('(17,DMA,/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java)', 1), ('(17,DMA,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(3,DMA,/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java)', 1)]"	"[('([1:/android/devicepolicy/cts/DevicePolicyManagerTest.java]:[DMA]:[1]:method_text:[e(PackageManager.FEATURE_DEVICE_ADMIN)    @RequireFeature(PackageManager.FEATURE_MANAGED_USERS)   ])', 8), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[2]:method_text:[ally {            localBroadcastManager.unregisterReceiver(broadcastReceiver);        }    }   ])', 4), ('([2:/android/view/cts/ViewConfigurationTest.java]:[DMA]:[2]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 2), ('([1:/android/view/cts/ViewConfigurationTest.java]:[DMA]:[1]:method_text:[cally hardcoded to be.        assertEquals(480 * 800 * 4, vc.getMaximumDrawingCacheSize());    }}])', 2), ('([1:/android/content/pm/cts/PackageItemInfoIconTest.java]:[DMA]:[1]:method_text:[edItemIcon(itemInfo, appInfo);        assertTrue(comparePixelData(expectedIcon, icon));    }   ])', 2), (""([2:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[DMA]:[2]:method_text:[**     * Test ANGLE is loaded when the 'Use ANGLE for all' Developer Option is enabled.     */   ])"", 2), ('([4:/android/angle/cts/CtsAngleDeveloperOptionHostTest.java]:[DMA]:[4]:method_text:[keep the value in the settings when the ANGLE     * activity runs and cleans things up.     */   ])', 2), ('([1:/android/autofillservice/cts/LoginActivityTest.java]:[DMA]:[1]:method_text:[Structure(""saveOnlyTest() failed"", saveRequest.structure);            throw e;        }    }   ])', 2), ('([1:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[DMA]:[1]:method_text:[mCurrentUserId, Collections.singletonMap(PARAM_TEST_USER, mSerialNumber));    }    @FlakyTest   ])', 2), ('([1:/android/view/inputmethod/cts/SearchViewTest.java]:[DMA]:[1]:method_text:[            }            return layout;        });        return searchViewRef.get();    }   ])', 1), ('([1:/android/view/inputmethod/cts/SearchViewTest.java]:[DMA]:[1]:method_text:[       CHECK_EXIT_EVENT_ONLY, TIMEOUT);            expectImeVisible(TIMEOUT);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java]:[DMA]:[1]:method_text:[moveUser(mUserId);        }        super.tearDown();    }    @Override    @PermissionsTest   ])', 1), ('([1:/android/widget/cts/MagnifierTest.java]:[DMA]:[1]:method_text:[mMagnifier.getHeight() / 2,                magnifierPosition.y, PIXEL_COMPARISON_DELTA);    }   ])', 1), ('([2:/android/content/res/cts/TypedArrayTest.java]:[DMA]:[2]:method_text:[.R.styleable.AndroidManifest_versionName));        ta.recycle();        parser.close();    }   ])', 1), ('([1:/android/content/pm/cts/PackageItemInfoIconTest.java]:[DMA]:[1]:method_text:[UnbadgedIcon(mPackageManager);        assertTrue(comparePixelData(expectedIcon, icon));    }   ])', 1), ('([1:/android/content/pm/cts/PackageItemInfoIconTest.java]:[DMA]:[1]:method_text:[   Canvas canvas = new Canvas(bitmap);        drawable.draw(canvas);        return bitmap;    }}])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[DMA]:[1]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([6:/android/server/wm/KeyguardLockedTests.java]:[DMA]:[6]:method_text:[guardManager.isDeviceLocked());        assertFalse(mKeyguardManager.isKeyguardLocked());    }   ])', 1), ('([6:/android/server/wm/KeyguardLockedTests.java]:[DMA]:[6]:method_text:[uardSecure());        } finally {            keyguardLock.reenableKeyguard();        }    }   ])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[DMA]:[1]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([2:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[2]:method_text:[m.setDuration(500);        mTransition = mChangeImageTransform;        resetListener();    }   ])', 1), ('([1:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[1]:method_text:[es(centerMatrix(), mStartMatrix);        verifyMatrixMatches(fitXYMatrix(), mEndMatrix);    }   ])', 1), ('([1:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[1]:method_text:[rCropMatrix(), mStartMatrix);        verifyMatrixMatches(fitCenterMatrix(), mEndMatrix);    }   ])', 1), ('([2:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[2]:method_text:[s(centerMatrix(), mStartMatrix);        verifyMatrixMatches(fitEndMatrix(), mEndMatrix);    }   ])', 1), ('([1:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[1]:method_text:[fitStartMatrix(), mStartMatrix);        verifyMatrixMatches(centerMatrix(), mEndMatrix);    }   ])', 1), ('([1:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[1]:method_text:[s(centerMatrix(), mStartMatrix);        verifyMatrixMatches(centerMatrix(), mEndMatrix);    }   ])', 1), ('([1:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[1]:method_text:[rtEquals(identityMatrix, mStartMatrix);        assertEquals(identityMatrix, mEndMatrix);    }   ])', 1), ('([2:/android/transition/cts/ChangeImageTransformTest.java]:[DMA]:[2]:method_text:[    }        });        mInstrumentation.waitForIdleSync();        return imageViews[0];    }}])', 1), ('([5:/android/app/usage/cts/UsageStatsTest.java]:[DMA]:[5]:method_text:[ity(clazz);        }    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([1:/android/app/usage/cts/UsageStatsTest.java]:[DMA]:[1]:method_text:[        mUiDevice.wakeUp();            executeShellCmd(""wm dismiss-keyguard"");        }    }   ])', 1), ('([1:/android/app/usage/cts/UsageStatsTest.java]:[DMA]:[1]:method_text:[        } catch(Exception e) {                return true;            }        }, false);    }}])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[DMA]:[1]:method_text:[s in the primary user when the policy     * is set on the profile owner.     */    @LargeTest   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[DMA]:[1]:method_text:[    fail(""Connectivity isn\'t available while expected: "" + message);            }        }    }}])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[DMA]:[2]:method_text:[row new IllegalArgumentException(""Did you add a new phone type? "" + phoneType);        }    }   ])', 1), ('([2:/android/telecom/cts/CallDetailsTest.java]:[DMA]:[2]:method_text:[  /**     * Tests whether the getCallerDisplayName() getter returns the correct object.     */   ])', 1), ('([2:/android/content/res/cts/AssetManagerTest.java]:[DMA]:[2]:method_text:[ expected        }        assertThat(mAssets.getLocales()).isNotNull();    }    @SmallTest   ])', 1), ('([1:/android/content/res/cts/AssetManagerTest.java]:[DMA]:[1]:method_text:[        } catch (RuntimeException e) {            // Expected.        }    }    @SmallTest   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[DMA]:[1]:method_text:[tStackTrace();            assertTrue(false);        }        return certificateChain;    }   ])', 1), ('([16:/android/security/identity/cts/ProvisioningTest.java]:[android.security.identity]:[16]:method_text:[tStackTrace();            assertTrue(false);        }        return certificateChain;    }   ])', 1), ('([1:/android/devicepolicy/cts/DevicePolicyManagerTest.java]:[DMA]:[1]:method_text:[  }    }    @RequireRunOnPrimaryUser    @RequireFeature(PackageManager.FEATURE_DEVICE_ADMIN)   ])', 1), (""([5:/android/content/cts/SharedPreferencesTest.java]:[DMA]:[5]:method_text:[memory commit doesn't mutate a data structure    // still being used while writing out to disk.   ])"", 1), ('([3:/android/content/cts/SharedPreferencesTest.java]:[DMA]:[3]:method_text:[etAll());            prefsFile.delete();            prefsFileClone.delete();        }    }   ])', 1), ('([2:/android/graphics/cts/VulkanFeaturesTest.java]:[DMA]:[2]:method_text:[; i++) {            devices[i] = vkjson.getJSONObject(i);        }        return devices;    }}])', 1), ('([17:/android/view/animation/cts/RotateAnimationTest.java]:[DMA]:[17]:method_text:[    assertEquals(expectedMatrixValues[i], actualMatrixValues[i], ROTATE_DELTA);        }    }   ])', 1), ('([12:/android/view/animation/cts/RotateAnimationTest.java]:[DMA]:[12]:method_text:[e, Transformation t) {            super.applyTransformation(interpolatedTime, t);        }    }}])', 1), ('([3:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[3]:method_text:[earUserRestriction(getWho(), UserManager.DISALLOW_REMOVE_USER);        super.tearDown();    }   ])', 1), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[2]:method_text:[  null,                /* flags */ 0);        Log.d(TAG, ""User create: "" + userHandle);    }   ])', 1), ('([3:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[3]:method_text:[uals(UserManager.USER_OPERATION_ERROR_LOW_STORAGE, e.getUserOperationResult());        }    }   ])', 1), ('([3:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[3]:method_text:[text.getContentResolver(),                        Settings.Secure.USER_SETUP_COMPLETE));    }   ])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[1]:method_text:[IZARD, ""assertSkipSetupWizard"");        PrimaryUserService.assertCrossUserCallArrived();    }   ])', 1), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[2]:method_text:[quals(1, secondaryUsers.size());        assertEquals(userHandle, secondaryUsers.get(0));    }   ])', 1), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[2]:method_text:[USERS,                mDevicePolicyManager.startUserInBackground(getWho(), userHandle));    }   ])', 1), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[2]:method_text:[r.USER_OPERATION_SUCCESS,                devicePolicyManager.logoutUser(componentName));    }   ])', 1), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[2]:method_text:[ame) {        assertTrue(""not affiliated user"", devicePolicyManager.isAffiliatedUser());    }   ])', 1), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[2]:method_text:[    assertTrue(""not ephemeral user"", devicePolicyManager.isEphemeralUser(componentName));    }   ])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[1]:method_text:[stalled: "" + uninstalledPackageNames,                uninstalledPackageNames.isEmpty());    }   ])', 1), ('([5:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[5]:method_text:[serHandle;    }    // createAndManageUser should circumvent the DISALLOW_ADD_USER restriction   ])', 1), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[2]:method_text:[ho(), ""Test User"",                getWho(), null, 0);        assertNotNull(userHandle);    }   ])', 1), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[2]:method_text:[ion, it should still be allowed        // to remove a user.        assertTrue(removed);    }   ])', 1), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[DMA]:[2]:method_text:[{            return new ComponentName(context, SecondaryUserAdminReceiver.class);        }    }}])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileUtils.java]:[DMA]:[1]:method_text:[;        intentFilter.addAction(ACTION_OBSERVE_URI_CHANGE);        return intentFilter;    }   ])', 1), ('([3:/android/app/cts/DownloadManagerInstallerTest.java]:[DMA]:[3]:method_text:[ndroidJUnit4.class)public class DownloadManagerInstallerTest extends DownloadManagerTestBase {   ])', 1), ('([4:/android/app/cts/DownloadManagerInstallerTest.java]:[DMA]:[4]:method_text:[oad(id, 0);        } finally {            mContext.unregisterReceiver(receiver);        }    }}])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[DMA]:[1]:method_text:[     * Tests {@link WifiManager#isConnectedMacRandomizationSupported()} does not crash.     */   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[DMA]:[2]:method_text:[**     * Tests {@link WifiManager#isPreferredNetworkOffloadSupported()} does not crash.     */   ])', 1), ('([1:/android/autofillservice/cts/LoginActivityTest.java]:[DMA]:[1]:method_text:[tends LoginActivityCommonTestCase {    private static final String TAG = ""LoginActivityTest"";   ])', 1), ('([2:/android/autofillservice/cts/LoginActivityTest.java]:[DMA]:[2]:method_text:[ mActivity.assertAutoFilled();        // clear clipboard        cm.clearPrimaryClip();    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[DMA]:[1]:method_text:[Layout().getLineBaseline(0),                tvNoMaxLine.getLayout().getLineBaseline(0));    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[DMA]:[1]:method_text:[neBaseline(i),                    tvNoMaxLine.getLayout().getLineBaseline(i));        }    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[DMA]:[1]:method_text:["",                tvTwoLines.getHeight(), tvEllipsizeEnd.getHeight());    }    @UiThreadTest   ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[DMA]:[3]:method_text:[       assertEquals(granularityTextView.getTextSize(), presetTextView.getTextSize(), 0f);    }   ])', 1), ('([8:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[8]:method_text:[k InputMethodManager#getInputMethodList()} contains     * {@link Ime1Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[ethodManager#getInputMethodList()} does not contain     * {@link Ime1Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[MethodManager#getEnabledInputMethodList()} contains     * {@link Ime1Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[nager#getEnabledInputMethodList()} does not contain     * {@link Ime1Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[k InputMethodManager#getInputMethodList()} contains     * {@link Ime2Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[ethodManager#getInputMethodList()} does not contain     * {@link Ime2Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[MethodManager#getEnabledInputMethodList()} contains     * {@link Ime2Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[nager#getEnabledInputMethodList()} does not contain     * {@link Ime2Constants#IME_ID}.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[oolean)} for     * {@link Ime1Constants#IME_ID} returns the implicitly enabled subtype.     */   ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[ for     * {@link Ime1Constants#IME_ID} does not return the implicitly enabled subtype.     */   ])', 1), ('([2:/android/telephony/cts/TelephonyManagerTest.java]:[DMA]:[2]:method_text:[ckageManager.FEATURE_TELEPHONY)                && mTelephonyManager.getPhoneCount() > 0;    }   ])', 1), ('([2:/android/telephony/cts/TelephonyManagerTest.java]:[DMA]:[2]:method_text:[of these information, just make sure they are in right     * condition(>0 or not null).     */   ])', 1), ('([2:/android/telephony/cts/TelephonyManagerTest.java]:[DMA]:[2]:method_text:[will be public in S, this test     * is commented and will be un-commented in Android S.     *   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[DMA]:[1]:method_text:[or a valid MAC address     * if only a WiFi device. At least one of them must be valid.     */   ])', 1), ('([2:/android/telephony/cts/TelephonyManagerTest.java]:[DMA]:[2]:method_text:[ter.getAddress();    }    private static final String ISO_COUNTRY_CODE_PATTERN = ""[a-z]{2}"";   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[DMA]:[1]:method_text:[ (manufacturer code) or null.     * The MC should match the first 8 digits of the MEID.     */   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[DMA]:[1]:method_text:[   }    /**     * Tests that the device properly reports either a valid IMEI or null.     */   ])', 1), ('([3:/android/telephony/cts/TelephonyManagerTest.java]:[DMA]:[3]:method_text:[ ensure {@link NetworkRegistrationInfo#isRoaming()} does not throw any     * exception.     */   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[DMA]:[1]:method_text:[   }    /**     * Tests that the device properly reports either a valid MEID or null.     */   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[DMA]:[1]:method_text:[caller does not have carrier privileges or is not the     * current default dialer app.     */   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[DMA]:[1]:method_text:[ }    /**     * Tests that the device properly sets and pads the contents of EF_FPLMN     */   ])', 1), ('([1:/com/android/cts/devicepolicy/LauncherAppsSingleUserTest.java]:[DMA]:[1]:method_text:[               mCurrentUserId, Collections.singletonMap(PARAM_TEST_USER, mSerialNumber));    }   ])', 1)]"	""	""	""	""	""
"276:775608) 9.11.3  . Identity Credential"	"9.11.3"	"C-0-4"	""	"[('android.widget.cts.ImageViewTest', 21), ('android.animation.cts.AnimatorSetTest', 18), ('android.widget.cts.MagnifierTest', 15), ('android.fragment.cts.FragmentTransitionTest', 12), ('android.app.cts.AlertDialogTest', 11), ('android.view.cts.TouchDelegateTest', 7), ('android.preference.cts.PreferenceRecycleTest', 5), ('android.view.cts.FrameMetricsListenerTest', 4), ('android.widget.cts.LayoutDirectionTest', 4), ('android.preference.cts.PreferenceFragmentTest', 3), ('android.graphics.cts.VulkanPreTransformTest', 3), ('android.widget.cts.DatePickerDialogTest', 3), ('android.preference.cts.ListPreferenceTest', 3), ('android.autofillservice.cts.MutableAutofillIdTest', 3), ('android.text.method.cts.TouchTest', 3), ('android.accessibilityservice.cts.AccessibilityEmbeddedHierarchyTest', 3), ('android.security.cts.FileSystemPermissionTest', 2), ('android.view.cts.ViewUnbufferedTest', 2), ('android.view.cts.KeyEventInterceptTest', 2), ('android.autofillservice.cts.dropdown.PreFilledLoginActivityTest', 2), ('android.hardware.camera2.cts.CaptureRequestTest', 1), ('android.permission.cts.NoActivityRelatedPermissionTest', 1), ('android.content.res.cts.ConfigTest', 1), ('android.database.sqlite.cts.SQLiteOpenHelperTest', 1), ('android.security.cts.RunningAppProcessInfoTest', 1), ('android.preference.cts.CustomEditTextPreferenceTest', 1)]"	"[('waitForTransition', 37), ('findBlue', 26), ('findGreen', 22), ('size', 19), ('getActivity', 16), ('beginTransaction', 14), ('commit', 14), ('TransitionFragment', 12), ('setup', 11), ('setupInitialFragment', 9), ('getInstrumentation', 8), ('findRed', 6), ('setUp', 4), ('SharedElementCallback', 4), ('popBackStack', 4), ('TrackingTransition', 4), ('tearDown', 3), ('getDialog', 2), ('waitForIdleSync', 2), ('Runnable', 2), ('run', 2), ('ComplexTransitionFragment', 2), ('getView', 2), ('getCapturedEpicenter', 2), ('toString', 2), ('getWidth', 2), ('getHeight', 2), ('TransitionSet', 2), ('getResources', 2), ('getUiAutomation', 2), ('clear', 2), ('poll', 2), ('close', 1), ('getTargetContext', 1), ('getWindow', 1), ('getDecorView', 1), ('getDevice', 1), ('data', 1), ('getFragmentManager', 1), ('enterExitTransitions', 1), ('removeAdded', 1), ('crossContainer', 1), ('onMapSharedElementOut', 1), ('onMapSharedElementIn', 1), ('complexSharedElementTransition', 1), ('showHideTransition', 1), ('attachDetachTransition', 1), ('noSharedElementTransition', 1), ('getTrackedTargets', 1), ('stream', 1), ('clearTargets', 1), ('resetCounters', 1), ('getMessage', 1), ('FrameCallback', 1), ('getInstance', 1), ('getAction', 1), ('getX', 1), ('getY', 1), ('getEventTime', 1), ('getSource', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('AccessibilityDumpOnFailureRule', 1), ('oneTimeSetup', 1), ('getServiceInfo', 1), ('getLayoutDirection', 1), ('getDurationScale', 1)]"	""	""	"9.11.3/C-0-4"	"""C-0-4] The trusted application MUST be implemented in a way such that its security properties are not affected (e.g. credential data is not released unless access control conditions are satisfied, MACs can&#39;t be produced for arbitrary data) even if Android is misbehaving or compromised. <h3 id=""912_data_deletion"" """	"09110300.670004"	"MAC"	""	""	""	"[('MAC', 132)]"	""	"[('[android.graphics.cts.VulkanPreTransformTest testVulkanPreTransformSetToMatchCurrentTransform None]', 2), ('[android.app.cts.AlertDialogTest testAlertDialog None]', 1), ('[android.app.cts.AlertDialogTest testAlertDialogDeprecatedAPI None]', 1), ('[android.app.cts.AlertDialogTest testCustomAlertDialog None]', 1), ('[android.app.cts.AlertDialogTest testCustomAlertDialogView None]', 1), ('[android.app.cts.AlertDialogTest testCallback None]', 1), ('[android.app.cts.AlertDialogTest testAlertDialogTheme None]', 1), ('[android.app.cts.AlertDialogTest testAlertDialogCancelable None]', 1), ('[android.app.cts.AlertDialogTest testAlertDialogNotCancelable None]', 1), ('[android.app.cts.AlertDialogTest testAlertDialogIconDrawable None]', 1), ('[android.app.cts.AlertDialogTest testAlertDialogIconAttribute None]', 1), ('[android.preference.cts.PreferenceFragmentTest PreferenceFragmentTest None]', 1), ('[android.preference.cts.PreferenceFragmentTest testGetPreferenceManager None]', 1), ('[android.preference.cts.PreferenceFragmentTest testGetPreferenceScreen None]', 1), ('[android.graphics.cts.VulkanPreTransformTest testVulkanPreTransformNotSetToMatchCurrentTransform None]', 1), ('[android.widget.cts.DatePickerDialogTest testConstructor None]', 1), ('[android.widget.cts.DatePickerDialogTest testShowDismiss None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[android.security.cts.FileSystemPermissionTest testDevHwRandomPermissions None]', 1), ('[android.view.cts.FrameMetricsListenerTest testReceiveData None]', 1), ('[android.view.cts.FrameMetricsListenerTest testMultipleListeners None]', 1), ('[android.view.cts.FrameMetricsListenerTest testDropCount None]', 1), ('[android.preference.cts.ListPreferenceTest ListPreferenceTest None]', 1), ('[android.preference.cts.ListPreferenceTest testGetEntries None]', 1), ('[android.preference.cts.ListPreferenceTest testGetEntryValues None]', 1), ('[android.fragment.cts.FragmentTransitionTest OnBackStackChangedListener None]', 1), ('[android.fragment.cts.FragmentTransitionTest getVisibility None]', 1), ('[android.fragment.cts.FragmentTransitionTest sharedElementMismatch None]', 1), ('[android.fragment.cts.FragmentTransitionTest invisibleNoTransitions None]', 1), ('[android.permission.cts.NoActivityRelatedPermissionTest NoActivityRelatedPermissionTest None]', 1), ('[android.content.res.cts.ConfigTest testNormalLocales None]', 1), ('[android.view.cts.TouchDelegateTest testParentClick None]', 1), ('[android.view.cts.TouchDelegateTest testCancelEvent None]', 1), ('[android.view.cts.TouchDelegateTest testTwoPointers None]', 1), ('[android.view.cts.TouchDelegateTest testGetTouchDelegateInfo_withNullBounds_noException None]', 1), ('[android.view.cts.TouchDelegateTest testOnTouchExplorationHoverEvent_withNullBounds_noException None]', 1), ('[android.view.cts.TouchDelegateTest testOnTouchExplorationHoverEvent_whenA11yEbtDisabled_receiveNoEvent None]', 1), ('[android.widget.cts.ImageViewTest testConstructor None]', 1), ('[android.widget.cts.ImageViewTest testSetImageIcon None]', 1), ('[android.widget.cts.ImageViewTest testSetImageResource None]', 1), ('[android.widget.cts.ImageViewTest testSetImageURI None]', 1), ('[android.widget.cts.ImageViewTest testSetImageDrawable None]', 1), ('[android.widget.cts.ImageViewTest testSetImageBitmap None]', 1), ('[android.widget.cts.ImageViewTest testAccessBaseline None]', 1), ('[android.widget.cts.ImageViewTest testSetColorFilter1 None]', 1), ('[android.widget.cts.ImageViewTest testSetColorFilterTintBlendMode None]', 1), ('[android.widget.cts.ImageViewTest testClearColorFilter None]', 1), ('[android.widget.cts.ImageViewTest testSetColorFilter2 None]', 1), ('[android.widget.cts.ImageViewTest testDrawableStateChanged None]', 1), ('[android.widget.cts.ImageViewTest testOnCreateDrawableState None]', 1), ('[android.widget.cts.ImageViewTest testOnDraw None]', 1), ('[android.widget.cts.ImageViewTest testSetFrame None]', 1), ('[android.widget.cts.ImageViewTest testImageTintBasics None]', 1), ('[android.widget.cts.ImageViewTest testImageTintBlendModeBasics None]', 1), ('[android.widget.cts.ImageViewTest testImageTintDrawableUpdates None]', 1), ('[android.widget.cts.ImageViewTest testImageTintVisuals None]', 1), ('[android.widget.cts.ImageViewTest testImageTintBlendModeVisuals None]', 1), ('[android.autofillservice.cts.MutableAutofillIdTest testDatasetPickerIsNotShownAfterViewIsSwappedOut None]', 1), ('[android.autofillservice.cts.MutableAutofillIdTest testViewGoneDuringAutofillCanStillBeFilled None]', 1), ('[android.autofillservice.cts.MutableAutofillIdTest testSave_serviceExpectingOldId None]', 1), ('[android.view.cts.ViewUnbufferedTest uptimeMillis None]', 1), ('[android.view.cts.ViewUnbufferedTest testUnbufferedJoystick_NoFocus None]', 1), ('[android.preference.cts.PreferenceRecycleTest recycleIsOnByDefaultTest None]', 1), ('[android.preference.cts.PreferenceRecycleTest recycleSetGetTest None]', 1), ('[android.preference.cts.PreferenceRecycleTest recycleSetViaXmlTest None]', 1), ('[android.preference.cts.PreferenceRecycleTest recycleSetViaCodeTest None]', 1), ('[android.text.method.cts.TouchTest testScrollTo None]', 1), ('[android.text.method.cts.TouchTest testOnTouchEvent None]', 1), ('[android.view.cts.KeyEventInterceptTest testKeyCodeBackShortcutRightMeta None]', 1), ('[android.widget.cts.MagnifierTest getDisplayMetrics None]', 1), ('[android.widget.cts.MagnifierTest testConstructor None]', 1), ('[android.widget.cts.MagnifierTest testShow_whenPixelCopyFails None]', 1), ('[android.widget.cts.MagnifierTest testDismiss_doesNotCrash None]', 1), ('[android.widget.cts.MagnifierTest testUpdate_doesNotCrash None]', 1), ('[android.widget.cts.MagnifierTest testMagnifierContent_refreshesAfterUpdate None]', 1), ('[android.widget.cts.MagnifierTest testSourcePosition_respectsMaxVisibleBounds_inHorizontalScrollableContainer None]', 1), ('[android.widget.cts.MagnifierTest testSourcePosition_respectsMaxVisibleBounds_inVerticalScrollableContainer None]', 1), ('[android.widget.cts.MagnifierTest testSourcePosition_respectsMaxInSurfaceBounds None]', 1), ('[android.widget.cts.MagnifierTest testSourcePosition_respectsMaxInSurfaceBounds_forSurfaceView None]', 1), ('[android.widget.cts.MagnifierTest testSourceBounds_areAdjustedWhenInvalid None]', 1), ('[android.widget.cts.MagnifierTest testZoomChange None]', 1), ('[android.widget.cts.MagnifierTest testZoomChange_throwsException_whenZoomIsZero None]', 1), ('[android.widget.cts.MagnifierTest testZoomChange_throwsException_whenZoomIsNegative None]', 1), ('[android.widget.cts.MagnifierTest testOverlay_isNotVisible_whenSetToNull None]', 1), ('[android.database.sqlite.cts.SQLiteOpenHelperTest testWalSchemaChangeVisibilityOnUpgrade None]', 1), ('[android.autofillservice.cts.dropdown.PreFilledLoginActivityTest testSanitization None]', 1), ('[android.accessibilityservice.cts.AccessibilityEmbeddedHierarchyTest postTestTearDown None]', 1), ('[android.accessibilityservice.cts.AccessibilityEmbeddedHierarchyTest testEmbeddedViewHasCorrectBoundAfterHostViewMove None]', 1), ('[android.accessibilityservice.cts.AccessibilityEmbeddedHierarchyTest testEmbeddedViewIsInvisibleAfterMovingOutOfScreen None]', 1), ('[android.widget.cts.LayoutDirectionTest testLayoutDirectionDefaults None]', 1), ('[android.widget.cts.LayoutDirectionTest testDirectionForAllLayoutsWithCode None]', 1), ('[android.widget.cts.LayoutDirectionTest testDirectionInheritanceForAllLayoutsWithCode None]', 1), ('[android.security.cts.RunningAppProcessInfoTest testRunningAppProcessInfo None]', 1), ('[android.preference.cts.CustomEditTextPreferenceTest CustomEditTextPreferenceTest None]', 1), ('[android.animation.cts.AnimatorSetTest testPlaySequentially None]', 1), ('[android.animation.cts.AnimatorSetTest testListenerCallbackOnEmptySet None]', 1), ('[android.animation.cts.AnimatorSetTest testPauseAndResume None]', 1), ('[android.animation.cts.AnimatorSetTest testPauseBeforeStart None]', 1), ('[android.animation.cts.AnimatorSetTest testSeekAfterPause None]', 1), ('[android.animation.cts.AnimatorSetTest testReverseWithStartDelay None]', 1), ('[android.animation.cts.AnimatorSetTest testZeroDurationScale None]', 1), ('[android.animation.cts.AnimatorSetTest testDurationScale None]', 1), ('[android.animation.cts.AnimatorSetTest testMultipleAnimatorsPlayTogether None]', 1), ('[android.animation.cts.AnimatorSetTest testSetInterpolator None]', 1), ('[android.animation.cts.AnimatorSetTest testClone None]', 1), ('[android.animation.cts.AnimatorSetTest testSeeking None]', 1), ('[android.animation.cts.AnimatorSetTest testGetCurrentPlayTime None]', 1), ('[android.animation.cts.AnimatorSetTest testNotifiesAfterEnd None]', 1), ('[android.animation.cts.AnimatorSetTest testManipulateChildOutsideOfSet None]', 1), ('[android.animation.cts.AnimatorSetTest testChildAnimatorStartCalled None]', 1), ('[android.animation.cts.AnimatorSetTest testInfiniteStartTime None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ImageViewTest.java', 21), ('/home/gpoor/cts-source/cts/tests/tests/animation/src/android/animation/cts/AnimatorSetTest.java', 18), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/MagnifierTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/FragmentTransitionTest.java', 12), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlertDialogTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TouchDelegateTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/preference/src/android/preference/cts/PreferenceRecycleTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FrameMetricsListenerTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/LayoutDirectionTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/preference/src/android/preference/cts/PreferenceFragmentTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanPreTransformTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/DatePickerDialogTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/preference/src/android/preference/cts/ListPreferenceTest.java', 3), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/MutableAutofillIdTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/TouchTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/FileSystemPermissionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewUnbufferedTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyEventInterceptTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/PreFilledLoginActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/NoActivityRelatedPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/sqlite/cts/SQLiteOpenHelperTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/RunningAppProcessInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/preference/src/android/preference/cts/CustomEditTextPreferenceTest.java', 1)]"	"[('(38,MAC,/android/app/cts/AlertDialogTest.java)', 1), ('(4,MAC,/android/preference/cts/PreferenceFragmentTest.java)', 1), ('(3,MAC,/android/graphics/cts/VulkanPreTransformTest.java)', 1), ('(9,MAC,/android/widget/cts/DatePickerDialogTest.java)', 1), ('(1,MAC,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(2,MAC,/android/security/cts/FileSystemPermissionTest.java)', 1), ('(28,MAC,/android/view/cts/FrameMetricsListenerTest.java)', 1), ('(5,MAC,/android/preference/cts/ListPreferenceTest.java)', 1), ('(41,MAC,/android/fragment/cts/FragmentTransitionTest.java)', 1), ('(2,MAC,/android/permission/cts/NoActivityRelatedPermissionTest.java)', 1), ('(3,MAC,/android/content/res/cts/ConfigTest.java)', 1), ('(41,MAC,/android/view/cts/TouchDelegateTest.java)', 1), ('(36,MAC,/android/widget/cts/ImageViewTest.java)', 1), ('(24,MAC,/android/autofillservice/cts/MutableAutofillIdTest.java)', 1), ('(10,MAC,/android/view/cts/ViewUnbufferedTest.java)', 1), ('(16,MAC,/android/preference/cts/PreferenceRecycleTest.java)', 1), ('(18,MAC,/android/text/method/cts/TouchTest.java)', 1), ('(7,MAC,/android/view/cts/KeyEventInterceptTest.java)', 1), ('(54,MAC,/android/widget/cts/MagnifierTest.java)', 1), ('(1,MAC,/android/database/sqlite/cts/SQLiteOpenHelperTest.java)', 1), ('(8,MAC,/android/autofillservice/cts/dropdown/PreFilledLoginActivityTest.java)', 1), ('(8,MAC,/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java)', 1), ('(25,MAC,/android/widget/cts/LayoutDirectionTest.java)', 1), ('(2,MAC,/android/security/cts/RunningAppProcessInfoTest.java)', 1), ('(3,MAC,/android/preference/cts/CustomEditTextPreferenceTest.java)', 1), ('(36,MAC,/android/animation/cts/AnimatorSetTest.java)', 1)]"	"[('([1:/android/widget/cts/ImageViewTest.java]:[MAC]:[1]:method_text:[assertEquals(testimageBitmap.getBitmap(), imageViewBitmap.getBitmap());    }    @UiThreadTest   ])', 2), ('([1:/android/widget/cts/ImageViewTest.java]:[MAC]:[1]:method_text:[orFilter());        assertNotNull(mImageViewRegular.getColorFilter());    }    @UiThreadTest   ])', 2), ('([1:/android/widget/cts/ImageViewTest.java]:[MAC]:[1]:method_text:[should be red"", imageViewTinted,                0xFFFF0000, 1, false);    }    @UiThreadTest   ])', 2), ('([4:/android/app/cts/AlertDialogTest.java]:[MAC]:[4]:method_text:[  PollingCheck.waitFor(mActivity.getDialog().getWindow().getDecorView()::hasWindowFocus);    }   ])', 1), ('([13:/android/app/cts/AlertDialogTest.java]:[MAC]:[13]:method_text:[ck(mNeutralButton);        PollingCheck.waitFor(() -> mActivity.isNeutralButtonClicked);    }   ])', 1), ('([7:/android/app/cts/AlertDialogTest.java]:[MAC]:[7]:method_text:[ ->                (DialogInterface.BUTTON_NEGATIVE == DialogStubActivity.buttonIndex));    }   ])', 1), ('([1:/android/app/cts/AlertDialogTest.java]:[MAC]:[1]:method_text:[Activity.TEST_CUSTOM_ALERTDIALOG);        assertTrue(mActivity.getDialog().isShowing());    }   ])', 1), ('([1:/android/app/cts/AlertDialogTest.java]:[MAC]:[1]:method_text:[ity.TEST_CUSTOM_ALERTDIALOG_VIEW);        assertTrue(mActivity.getDialog().isShowing());    }   ])', 1), ('([3:/android/app/cts/AlertDialogTest.java]:[MAC]:[3]:method_text:[nt(KeyEvent.ACTION_UP, KeyEvent.KEYCODE_0));        assertTrue(mActivity.onKeyUpCalled);    }   ])', 1), ('([1:/android/app/cts/AlertDialogTest.java]:[MAC]:[1]:method_text:[bActivity.TEST_ALERTDIALOG_THEME);        assertTrue(mActivity.getDialog().isShowing());    }   ])', 1), ('([3:/android/app/cts/AlertDialogTest.java]:[MAC]:[3]:method_text:[ync(KeyEvent.KEYCODE_BACK);        PollingCheck.waitFor(() -> mActivity.onCancelCalled);    }   ])', 1), ('([3:/android/app/cts/AlertDialogTest.java]:[MAC]:[3]:method_text:[.sendKeyDownUpSync(KeyEvent.KEYCODE_BACK);        assertFalse(mActivity.onCancelCalled);    }   ])', 1), ('([1:/android/app/cts/AlertDialogTest.java]:[MAC]:[1]:method_text:[.TEST_ALERT_DIALOG_ICON_DRAWABLE);        assertTrue(mActivity.getDialog().isShowing());    }   ])', 1), ('([1:/android/app/cts/AlertDialogTest.java]:[MAC]:[1]:method_text:[ty.TEST_ALERT_DIALOG_ICON_ATTRIBUTE);        assertTrue(mActivity.getDialog().isShowing());    }}])', 1), ('([2:/android/preference/cts/PreferenceFragmentTest.java]:[MAC]:[2]:method_text:[void setUp() throws Exception {        super.setUp();        mActivity = getActivity();    }   ])', 1), ('([1:/android/preference/cts/PreferenceFragmentTest.java]:[MAC]:[1]:method_text:[er prefManager = prefFragment.getPreferenceManager();        assertNotNull(prefManager);    }   ])', 1), ('([1:/android/preference/cts/PreferenceFragmentTest.java]:[MAC]:[1]:method_text:[enceScreen prefScreen = prefsFragment.getPreferenceScreen();        assertNull(prefScreen);    }}])', 1), ('([1:/android/graphics/cts/VulkanPreTransformTest.java]:[MAC]:[1]:method_text:[        SystemClock.sleep(2000);        mContext = InstrumentationRegistry.getContext();    }   ])', 1), ('([1:/android/graphics/cts/VulkanPreTransformTest.java]:[MAC]:[1]:method_text:[ivity.testVulkanPreTransform(true);        sActivity.finish();        sActivity = null;    }   ])', 1), ('([1:/android/graphics/cts/VulkanPreTransformTest.java]:[MAC]:[1]:method_text:[iff(bitmap.getPixel(width - 1, height - 1), 0, 255, 0);        }        return diff < 10;    }}])', 1), ('([4:/android/widget/cts/DatePickerDialogTest.java]:[MAC]:[4]:method_text:[ public void setup() {        mActivity = mActivityRule.getActivity();    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/DatePickerDialogTest.java]:[MAC]:[4]:method_text:[        android.R.style.Theme_Material_Dialog_Alert, null, 1970, 1, 1);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/DatePickerDialogTest.java]:[MAC]:[1]:method_text:[dismiss();        assertFalse(""Date picker still dismissed"", datePickerDialog.isShowing());    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[MAC]:[1]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/security/cts/FileSystemPermissionTest.java]:[MAC]:[1]:method_text:[ted void setUp() throws Exception {        super.setUp();        mDevice = getDevice();    }   ])', 1), ('([1:/android/security/cts/FileSystemPermissionTest.java]:[MAC]:[1]:method_text:[t.write(buf, 0, chunkSize);            }            return result.toByteArray();        }    }}])', 1), ('([6:/android/view/cts/FrameMetricsListenerTest.java]:[MAC]:[6]:method_text:[ad(() -> mActivity.setContentView(layoutId));        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([7:/android/view/cts/FrameMetricsListenerTest.java]:[MAC]:[7]:method_text:[rawSync(mActivityRule, scrollView, null);        }        assertEquals(0, data.size());    }   ])', 1), ('([9:/android/view/cts/FrameMetricsListenerTest.java]:[MAC]:[9]:method_text:[ity.getWindow().removeOnFrameMetricsAvailableListener(frameMetricsListener2);        });    }   ])', 1), ('([6:/android/view/cts/FrameMetricsListenerTest.java]:[MAC]:[6]:method_text:[rawFrameMetric,                (firstDrawFrameMetric == 0) || (firstDrawFrameMetric == 1));    }}])', 1), ('([3:/android/preference/cts/ListPreferenceTest.java]:[MAC]:[3]:method_text:[vity();        mListPref = (ListPreference) mActivity.findPreference(""list_preference"");    }   ])', 1), ('([1:/android/preference/cts/ListPreferenceTest.java]:[MAC]:[1]:method_text:[            R.array.entries_list_preference);        compareArrays(entriesExp, entries);    }   ])', 1), ('([1:/android/preference/cts/ListPreferenceTest.java]:[MAC]:[1]:method_text:[R.array.entryvalues_list_preference);        compareArrays(entryValuesExp, entryValues);    }   ])', 1), ('([3:/android/fragment/cts/FragmentTransitionTest.java]:[MAC]:[3]:method_text:[t that normal view transitions (enter, exit, reenter, return) run with    // a single fragment.   ])', 1), ('([2:/android/fragment/cts/FragmentTransitionTest.java]:[MAC]:[2]:method_text:[/ Test that shared elements transition from one fragment to the next    // and back during pop.   ])', 1), (""([5:/android/fragment/cts/FragmentTransitionTest.java]:[MAC]:[5]:method_text:[    }    // Make sure that shared elements on two different fragment containers don't interact   ])"", 1), ('([2:/android/fragment/cts/FragmentTransitionTest.java]:[MAC]:[2]:method_text:[ fragment2);    }    // Make sure that onSharedElementStart and onSharedElementEnd are called   ])', 1), ('([2:/android/fragment/cts/FragmentTransitionTest.java]:[MAC]:[2]:method_text:[reen);    }    // Make sure that onMapSharedElement works to change the shared element target   ])', 1), ('([2:/android/fragment/cts/FragmentTransitionTest.java]:[MAC]:[2]:method_text:[    }    // Ensure that shared element transitions that have targets properly target the views   ])', 1), (""([2:/android/fragment/cts/FragmentTransitionTest.java]:[MAC]:[2]:method_text:[itions have executed that they don't have any targets or other    // unfortunate modifications.   ])"", 1), ('([3:/android/fragment/cts/FragmentTransitionTest.java]:[MAC]:[3]:method_text:[gment2);    }    // Ensure that transitions are done when a fragment is attached and detached   ])', 1), (""([3:/android/fragment/cts/FragmentTransitionTest.java]:[MAC]:[3]:method_text:[t2);    }    // Ensure that shared element without matching transition name doesn't error out   ])"", 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[MAC]:[1]:method_text:[   }    // Ensure that using the same source or target shared element results in an exception.   ])', 1), ('([3:/android/fragment/cts/FragmentTransitionTest.java]:[MAC]:[3]:method_text:[    // No crash when transitioning a shared element and there is no shared element transition.   ])', 1), ('([13:/android/fragment/cts/FragmentTransitionTest.java]:[MAC]:[13]:method_text:[bility(View.INVISIBLE);            super.onViewCreated(view, savedInstanceState);        }    }}])', 1), ('([2:/android/permission/cts/NoActivityRelatedPermissionTest.java]:[MAC]:[2]:method_text:[uires Permission:     *   {@link android.Manifest.permission#GET_TASKS}     */    @MediumTest   ])', 1), ('([3:/android/content/res/cts/ConfigTest.java]:[MAC]:[3]:method_text:[ R.configVarying.bag,                R.styleable.TestConfig, new String[]{""bag mk MK""});    }   ])', 1), ('([5:/android/view/cts/TouchDelegateTest.java]:[MAC]:[5]:method_text:[InstrumentationRegistry.getInstrumentation();        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([8:/android/view/cts/TouchDelegateTest.java]:[MAC]:[8]:method_text:[ctivity.getButtonClickCount());        assertEquals(1, mActivity.getParentClickCount());    }   ])', 1), ('([5:/android/view/cts/TouchDelegateTest.java]:[MAC]:[5]:method_text:[ctivity.getButtonClickCount());        assertEquals(0, mActivity.getParentClickCount());    }   ])', 1), ('([6:/android/view/cts/TouchDelegateTest.java]:[MAC]:[6]:method_text:[(MotionEvent.ACTION_POINTER_UP);        ensureOldestActionEquals(MotionEvent.ACTION_UP);    }   ])', 1), ('([1:/android/view/cts/TouchDelegateTest.java]:[MAC]:[1]:method_text:[chDelegate = new TouchDelegate(null, view);        touchDelegate.getTouchDelegateInfo();    }   ])', 1), ('([3:/android/view/cts/TouchDelegateTest.java]:[MAC]:[3]:method_text:[ew TouchDelegate(null, view);        touchDelegate.onTouchExplorationHoverEvent(event);    }   ])', 1), ('([13:/android/view/cts/TouchDelegateTest.java]:[MAC]:[13]:method_text:[  });    }    interface Dispatcher {        void dispatchMotionEvent(MotionEvent event);    }}])', 1), ('([7:/android/widget/cts/ImageViewTest.java]:[MAC]:[7]:method_text:[          }        } catch (IOException e) {            fail(e.getMessage());        }    }   ])', 1), ('([7:/android/widget/cts/ImageViewTest.java]:[MAC]:[7]:method_text:[r);        new ImageView(mActivity, attrs);        new ImageView(mActivity, attrs, 0);    }   ])', 1), ('([2:/android/widget/cts/ImageViewTest.java]:[MAC]:[2]:method_text:[assertEquals(testimageBitmap.getBitmap(), imageViewBitmap.getBitmap());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/ImageViewTest.java]:[MAC]:[2]:method_text:[etTestUtils.assertEquals(testimageBitmap, imageViewBitmap.getBitmap());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[MAC]:[1]:method_text:[     WidgetTestUtils.assertEquals(bitmap, imageViewBitmap.getBitmap());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[MAC]:[1]:method_text:[gnBottom());        assertEquals(50, mImageViewRegular.getBaseline());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[MAC]:[1]:method_text:[ColorFilter());        assertNull(mImageViewRegular.getColorFilter());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[MAC]:[1]:method_text:[, drawable.getColorFilter());        assertSame(cf, mImageViewRegular.getColorFilter());    }   ])', 1), ('([2:/android/widget/cts/ImageViewTest.java]:[MAC]:[2]:method_text:[ble        assertArrayEquals(imageView.getDrawableState(), selectorDrawable.getState());    }   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[MAC]:[1]:method_text:[mageView.onCreateDrawableState(1));        mockImageView.setImageState(expected, true);    }   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[MAC]:[1]:method_text:[s());        verify(drawable, atLeastOnce()).draw(any(Canvas.class));    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[MAC]:[1]:method_text:[   verify(mockImageView, times(1)).onSizeChanged(anyInt(), anyInt(), anyInt(), anyInt());    }   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[MAC]:[1]:method_text:[sertEquals(PorterDuff.Mode.SRC_IN, imageViewTinted.getImageTintMode());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[MAC]:[1]:method_text:[ssertEquals(BlendMode.SRC_IN, imageViewTinted.getImageTintBlendMode());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[MAC]:[1]:method_text:[     verify(drawable, times(2)).setTintList(any(ColorStateList.class));    }    @UiThreadTest   ])', 1), ('([6:/android/autofillservice/cts/MutableAutofillIdTest.java]:[MAC]:[6]:method_text:[     mUiBot.selectDataset(datasetPicker, ""l1c2"");        expectation.assertAutoFilled();    }   ])', 1), ('([7:/android/autofillservice/cts/MutableAutofillIdTest.java]:[MAC]:[7]:method_text:[;        mUiBot.selectDataset(picker2, ""l1c1"");        expectation2.assertAutoFilled();    }   ])', 1), ('([11:/android/autofillservice/cts/MutableAutofillIdTest.java]:[MAC]:[11]:method_text:[ext2).isNotNull();        assertThat(node2Context2.getText().toString()).isEqualTo(""NOD2"");    }}])', 1), ('([9:/android/view/cts/ViewUnbufferedTest.java]:[MAC]:[9]:method_text:[eCallback(mFrameCallback);    }    // Normal view would expect to receive the buffered event.   ])', 1), ('([1:/android/view/cts/ViewUnbufferedTest.java]:[MAC]:[1]:method_text:[ls(1, mMaxReceivedCountPerFrame);    }    // Test view requested unbuffered for hover events.   ])', 1), ('([4:/android/preference/cts/PreferenceRecycleTest.java]:[MAC]:[4]:method_text:[ityRule.getActivity();    }    /**     * Tests that recycling is enabled as default.     */   ])', 1), ('([1:/android/preference/cts/PreferenceRecycleTest.java]:[MAC]:[1]:method_text:[f = new CustomCheckBoxPreference(mActivity);        assertTrue(pref.isRecycleEnabled());    }   ])', 1), ('([1:/android/preference/cts/PreferenceRecycleTest.java]:[MAC]:[1]:method_text:[     * Tests that recycleEnabled attribute is correctly reflected when defined via XLM.     */   ])', 1), ('([2:/android/preference/cts/PreferenceRecycleTest.java]:[MAC]:[2]:method_text:[flected when defined via     * {@link android.preference.Preference#setRecycleEnabled}.     */   ])', 1), ('([8:/android/preference/cts/PreferenceRecycleTest.java]:[MAC]:[8]:method_text:[/ Recycling        assertTrue(noRecyclePref.wasConvertViewNullInLastCall); // Not recycling    }}])', 1), ('([5:/android/text/method/cts/TouchTest.java]:[MAC]:[5]:method_text:[ TextViewNoIme(mActivity);        mTextView.setTextSize(TypedValue.COMPLEX_UNIT_SP, 10);    }   ])', 1), ('([7:/android/text/method/cts/TouchTest.java]:[MAC]:[7]:method_text:[tWidth(), mTextView.getScrollX(), 1.0f);        assertEquals(5, mTextView.getScrollY());    }   ])', 1), ('([6:/android/text/method/cts/TouchTest.java]:[MAC]:[6]:method_text:[(float f : widths) {            totalWidth += f;        }        return (int) totalWidth;    }}])', 1), ('([5:/android/view/cts/KeyEventInterceptTest.java]:[MAC]:[5]:method_text:[y = mActivityRule.getActivity();        PollingCheck.waitFor(mActivity::hasWindowFocus);    }   ])', 1), ('([2:/android/view/cts/KeyEventInterceptTest.java]:[MAC]:[2]:method_text:[tEquals(keyCode, keyEvent.getKeyCode());        assertEquals(action, keyEvent.getAction());    }}])', 1), ('([11:/android/widget/cts/MagnifierTest.java]:[MAC]:[11]:method_text:[ 1.1 && dpScreenHeight >= dpMagnifier.y * 1.1;    }    //***** Tests for constructor *****//   ])', 1), ('([1:/android/widget/cts/MagnifierTest.java]:[MAC]:[1]:method_text:[    public void testConstructor() {        new Magnifier(new View(mActivity));    }    ])', 1), ('([3:/android/widget/cts/MagnifierTest.java]:[MAC]:[3]:method_text:[);        assertNull(mMagnifier.getContent());    }    //***** Tests for #dismiss() *****//   ])', 1), ('([1:/android/widget/cts/MagnifierTest.java]:[MAC]:[1]:method_text:[MIT_EXCEEDED, latch.await(2, TimeUnit.SECONDS));    }    //***** Tests for #update() *****//   ])', 1), ('([1:/android/widget/cts/MagnifierTest.java]:[MAC]:[1]:method_text:[);        });        assertTrue(TIME_LIMIT_EXCEEDED, latch.await(2, TimeUnit.SECONDS));    }   ])', 1), ('([2:/android/widget/cts/MagnifierTest.java]:[MAC]:[2]:method_text:[tmap.sameAs(initialBitmap));    }    //***** Tests for the position of the magnifier *****//   ])', 1), ('([4:/android/widget/cts/MagnifierTest.java]:[MAC]:[4]:method_text:[- mMagnifier.getSourceWidth(),                sourcePosition.x, PIXEL_COMPARISON_DELTA);    }   ])', 1), ('([4:/android/widget/cts/MagnifierTest.java]:[MAC]:[4]:method_text:[ mMagnifier.getSourceHeight(),                sourcePosition.y, PIXEL_COMPARISON_DELTA);    }   ])', 1), ('([3:/android/widget/cts/MagnifierTest.java]:[MAC]:[3]:method_text:[ition.y                > view.getRootView().getHeight() - mMagnifier.getSourceHeight());    }   ])', 1), ('([5:/android/widget/cts/MagnifierTest.java]:[MAC]:[5]:method_text:[gnifier.getSourceHeight() / 2, sourcePosition.y,                PIXEL_COMPARISON_DELTA);    }   ])', 1), ('([9:/android/widget/cts/MagnifierTest.java]:[MAC]:[9]:method_text:[(), sourcePosition.y, PIXEL_COMPARISON_DELTA);    }    //***** Tests for zoom change *****//   ])', 1), ('([2:/android/widget/cts/MagnifierTest.java]:[MAC]:[2]:method_text:[     assertEquals((int) (height / newZoom), mMagnifier.getOriginalContent().getHeight());    }   ])', 1), ('([1:/android/widget/cts/MagnifierTest.java]:[MAC]:[1]:method_text:[{        final View view = new View(mActivity);        new Magnifier(view).setZoom(0f);    }   ])', 1), ('([1:/android/widget/cts/MagnifierTest.java]:[MAC]:[1]:method_text:[tivity);        new Magnifier(view).setZoom(-1f);    }    //***** Tests for overlay *****//   ])', 1), ('([6:/android/widget/cts/MagnifierTest.java]:[MAC]:[6]:method_text:[i) - quadrantsTotal) / quadrantsTotal;            assertTrue(proportion <= 0.1f);        }    }}])', 1), ('([1:/android/database/sqlite/cts/SQLiteOpenHelperTest.java]:[MAC]:[1]:method_text:[om test_table2"", null)) {            assertEquals(1, cursor.getColumnCount());        }    }   ])', 1), ('([2:/android/autofillservice/cts/dropdown/PreFilledLoginActivityTest.java]:[MAC]:[2]:method_text:[rActivityLaunched() {                mActivity = getActivity();            }        };    }   ])', 1), ('([6:/android/autofillservice/cts/dropdown/PreFilledLoginActivityTest.java]:[MAC]:[6]:method_text:[  assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""malkovich"");    }}])', 1), ('([6:/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java]:[MAC]:[6]:method_text:[Automation,                mActivityRule);        mActivity.waitForEmbeddedHierarchy();    }   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java]:[MAC]:[1]:method_text:[(),                newEmbeddedViewBoundsInScreen.equals(oldEmbeddedViewBoundsInScreen));    }   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEmbeddedHierarchyTest.java]:[MAC]:[1]:method_text:[     return !boundsInScreen.isEmpty();                    }, DEFAULT_TIMEOUT_MS);        }    }}])', 1), ('([4:/android/widget/cts/LayoutDirectionTest.java]:[MAC]:[4]:method_text:[ {        assertEquals(LAYOUT_DIRECTION_LTR, vg.getLayoutDirection());    }    @UiThreadTest   ])', 1), ('([5:/android/widget/cts/LayoutDirectionTest.java]:[MAC]:[5]:method_text:[TR        assertEquals(LAYOUT_DIRECTION_LTR, vg.getLayoutDirection());    }    @UiThreadTest   ])', 1), ('([6:/android/widget/cts/LayoutDirectionTest.java]:[MAC]:[6]:method_text:[        assertEquals(LAYOUT_DIRECTION_RTL, child.getLayoutDirection());    }    @UiThreadTest   ])', 1), ('([10:/android/widget/cts/LayoutDirectionTest.java]:[MAC]:[10]:method_text:[d4Id);        assertEquals(child4ResDir, child4.getLayoutDirection());    }    @UiThreadTest   ])', 1), ('([2:/android/security/cts/RunningAppProcessInfoTest.java]:[MAC]:[2]:method_text:[se/+"" +                ""/aaa0fee0d7a8da347a0c47cef5249c70efee209e"", (appList.size() == 1));    }}])', 1), ('([3:/android/preference/cts/CustomEditTextPreferenceTest.java]:[MAC]:[3]:method_text:[mEditTextPreference) mActivity.findPreference(                ""custom_edittext_pref_1"");    }   ])', 1), ('([5:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[5]:method_text:[ public void tearDown() {        ValueAnimator.setDurationScale(mPreviousDurationScale);    }   ])', 1), ('([2:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[2]:method_text:[unning());        assertTrue(endLatch.await(totalDuration * 2, TimeUnit.MILLISECONDS));    }   ])', 1), ('([1:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[1]:method_text:[;        assertTrue(listener.mStartIsCalled);        assertTrue(listener.mEndIsCalled);    }   ])', 1), ('([2:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[2]:method_text:[et.isPaused());        assertTrue(l1.mEndIsCalled);        assertTrue(l2.mEndIsCalled);    }   ])', 1), ('([1:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[1]:method_text:[.        assertTrue(listener.mStartIsCalled);        assertTrue(listener.mEndIsCalled);    }   ])', 1), ('([1:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[1]:method_text:[uals((float) a2.getAnimatedValue(), 50f, EPSILON);            set.cancel();        });    }   ])', 1), ('([1:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[1]:method_text:[    }    /**     * Test that duration scale is handled correctly in the AnimatorSet.     */   ])', 1), ('([1:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[1]:method_text:[   /**     * Test that non-zero duration scale is handled correctly in the AnimatorSet.     */   ])', 1), ('([1:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[1]:method_text:[tors playing together. We expect the start time for all animators     * to be the same.     */   ])', 1), ('([1:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[1]:method_text:[nning());        }        verify(setListener, within(400)).onAnimationEnd(set, false);    }   ])', 1), ('([8:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[8]:method_text:[ertTrue(""object should be unique "" + msg + "", obj:"" + object, identityHashes.add(code));    }   ])', 1), ('([1:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[1]:method_text:[    }    /**     * Testing seeking in an AnimatorSet containing sequential animators.     */   ])', 1), ('([1:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[1]:method_text:[;    }    /**     * Testing seeking in an AnimatorSet containing infinite animators.     */   ])', 1), ('([1:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[1]:method_text:[nother 100ms to end.        verify(setListener, within(200)).onAnimationEnd(set, false);    }   ])', 1), ('([1:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[1]:method_text:[ affected, and all the child animators would start at their     * scheduled start time.     */   ])', 1), (""([5:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[5]:method_text:[     *     * This test verifies that custom ValueAnimators will be start()'ed in a set.     */   ])"", 1), ('([1:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[1]:method_text:[start time. This test verifies     * that the infinite start time is handled correctly.     */   ])', 1), ('([2:/android/animation/cts/AnimatorSetTest.java]:[MAC]:[2]:method_text:[{            // Do not call super intentionally.            mStartCalled = true;        }    }}])', 1)]"	""	""	""	""	""
"276:775608) 9.11.3  . Identity Credential"	"9.11.3"	"C-0-1"	""	"[('android.app.cts.NotificationManagerTest', 16), ('android.widget.cts.TextViewTest', 9), ('android.webkit.cts.TracingControllerTest', 6), ('android.text.method.cts.MetaKeyKeyListenerTest', 6), ('android.media.cts.MediaSession2ServiceTest', 4), ('android.app.notification.legacy29.cts.NotificationAssistantServiceTest', 4), ('android.view.inputmethod.cts.NavigationBarColorTest', 4), ('android.text.method.cts.BaseKeyListenerTest', 4), ('android.text.method.cts.DateTimeKeyListenerTest', 3), ('com.android.cts.managedprofile.WipeDataNotificationTest', 3), ('android.text.method.cts.DigitsKeyListenerTest', 3), ('android.provider.cts.media.MediaStore_Audio_ArtistsTest', 2), ('android.security.cts.StagefrightTest', 2), ('android.view.cts.FocusFinderTest', 2), ('android.text.method.cts.DateKeyListenerTest', 2), ('android.webkit.cts.WebViewDataDirTest', 2), ('android.media.cts.MediaRoute2ProviderServiceTest', 2), ('android.provider.cts.media.MediaStore_Audio_AlbumsTest', 2), ('android.provider.cts.media.MediaStore_Audio_Genres_MembersTest', 2), ('android.webkit.cts.CookieManagerTest', 2), ('android.webkit.cts.WebViewTest', 1), ('android.webkit.cts.ServiceWorkerClientTest', 1), ('android.view.cts.ViewUnbufferedTest', 1), ('com.android.cts.webkit.WebViewDeviceSideStartupTest', 1), ('android.os.cts.HwBinderTest', 1), ('android.keystore.cts.KeyStoreTest', 1), ('android.media.cts.SystemMediaRouter2Test', 1), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 1), ('android.text.method.cts.HideReturnsTransformationMethodTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.permission.cts.LocationAccessCheckTest', 1), ('android.webkit.cts.CookieTest', 1), ('android.autofillservice.cts.unittests.DateValueSanitizerTest', 1), ('android.content.cts.ClipDescriptionTest', 1), ('android.net.http.cts.SslCertificateTest', 1), ('android.webkit.cts.WebHistoryItemTest', 1), ('android.telephony.cts.PhoneNumberUtilsTest', 1), ('android.view.textclassifier.cts.TextViewIntegrationTest', 1), ('android.app.cts.TileServiceTest', 1), ('android.text.cts.SpannableStringBuilderSpanTest', 1), ('android.text.cts.SpannableStringTest', 1), ('android.text.method.cts.QwertyKeyListenerTest', 1), ('android.provider.cts.media.MediaStore_Audio_MediaTest', 1), ('com.android.cts.deviceowner.AdminActionBookkeepingTest', 1), ('android.provider.cts.media.MediaStore_Audio_GenresTest', 1), ('android.view.cts.ChoreographerTest', 1), ('android.text.method.cts.ArrowKeyMovementMethodTest', 1)]"	"[('getInstrumentation', 8), ('getInstance', 8), ('build', 7), ('getId', 7), ('setUp', 6), ('tearDown', 6), ('getContentResolver', 5), ('toString', 5), ('getActiveNotifications', 5), ('getTargetContext', 4), ('close', 4), ('getPackageName', 4), ('getMessage', 4), ('size', 3), ('RouteCallback', 3), ('moveToFirst', 3), ('validateThread', 3), ('getUiAutomation', 2), ('getActivity', 2), ('clear', 2), ('poll', 2), ('getSimpleName', 2), ('getPackageManager', 2), ('setup', 2), ('newSingleThreadExecutor', 2), ('check', 2), ('run', 2), ('getTextLink', 2), ('getComplete', 2), ('cancelAll', 2), ('printStackTrace', 2), ('getKey', 2), ('getContext', 2), ('getGroupKey', 2), ('FrameCallback', 1), ('getAction', 1), ('getX', 1), ('getY', 1), ('getEventTime', 1), ('getSource', 1), ('getWidth', 1), ('getHeight', 1), ('UnlockScreenRule', 1), ('smartLinkify', 1), ('getScenario', 1), ('AtomicInteger', 1), ('length', 1), ('getStart', 1), ('getEnd', 1), ('data', 1), ('getSharedVolumeNames', 1), ('TracingReceiver', 1), ('ByteArrayOutputStream', 1), ('flush', 1), ('currentThread', 1), ('getName', 1), ('getNbChunks', 1), ('getCompleteCallable', 1), ('call', 1), ('getOutputStream', 1), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('getCount', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getOverrideGroupKey', 1), ('Object', 1)]"	""	""	"9.11.3/C-0-1"	"""C-0-1] MUST return non-null for the IdentityCredentialStore#getInstance() method. """	"09110300.670001"	"getInstance()"	""	""	""	"[('getInstance()', 107)]"	""	"[('[android.provider.cts.media.MediaStore_Audio_ArtistsTest testStoreAudioArtists None]', 2), ('[android.media.cts.MediaRoute2ProviderServiceTest finishActivity None]', 2), ('[android.provider.cts.media.MediaStore_Audio_AlbumsTest testStoreAudioAlbums None]', 2), ('[android.webkit.cts.WebViewTest testCreatingWebViewCreatesCookieSyncManager None]', 1), ('[android.webkit.cts.ServiceWorkerClientTest testServiceWorkerClientInterceptCallback None]', 1), ('[android.view.cts.ViewUnbufferedTest uptimeMillis None]', 1), ('[com.android.cts.webkit.WebViewDeviceSideStartupTest testCookieManagerBlockingUiThread None]', 1), ('[android.os.cts.HwBinderTest testHwBinder None]', 1), ('[android.keystore.cts.KeyStoreTest test_KeyStore_getInstance None]', 1), ('[android.media.cts.SystemMediaRouter2Test ArrayList None]', 1), ('[android.media.cts.MediaSession2ServiceTest testGetSessions None]', 1), ('[android.media.cts.MediaSession2ServiceTest testAddSessions_removedWhenClose None]', 1), ('[android.media.cts.MediaSession2ServiceTest testOnUpdateNotification None]', 1), ('[android.media.cts.MediaSession2ServiceTest testOnBind None]', 1), ('[android.app.notification.legacy20.cts.LegacyNotificationManager20Test testNotificationListener_cancelNotifications None]', 1), ('[android.security.cts.StagefrightTest testStagefright_bug_68342866 None]', 1), ('[android.security.cts.StagefrightTest testStagefright_cve_2019_1989 None]', 1), ('[android.text.method.cts.DateTimeKeyListenerTest testGetInstance None]', 1), ('[android.text.method.cts.DateTimeKeyListenerTest testGetInputType None]', 1), ('[android.text.method.cts.DateTimeKeyListenerTest testDateTimeKeyListener None]', 1), ('[android.text.method.cts.HideReturnsTransformationMethodTest testGetInstance None]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationEnqueued None]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testGetAllowedAssistantCapabilities None]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testUnsnoozeFromNAS None]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnSuggestedReplySent_methodExists None]', 1), ('[android.media.cts.PresentationSyncTest testThroughput None]', 1), ('[android.view.inputmethod.cts.NavigationBarColorTest getSystemUiVisibility None]', 1), ('[android.view.inputmethod.cts.NavigationBarColorTest testSetNavigationBarColor None]', 1), ('[android.view.inputmethod.cts.NavigationBarColorTest testLightNavigationBar None]', 1), ('[android.view.inputmethod.cts.NavigationBarColorTest testDimmingWindow None]', 1), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName None]', 1), ('[android.widget.cts.TextViewTest testAccessKeyListener None]', 1), ('[android.widget.cts.TextViewTest testAccessMovementMethod None]', 1), ('[android.widget.cts.TextViewTest testSetEditableFactory None]', 1), ('[android.widget.cts.TextViewTest testSetSpannableFactory None]', 1), ('[android.widget.cts.TextViewTest testAccessError None]', 1), ('[android.widget.cts.TextViewTest testKeyNavigation None]', 1), ('[android.widget.cts.TextViewTest testAccessTransformationMethod None]', 1), ('[android.widget.cts.TextViewTest testSingleLine None]', 1), ('[android.widget.cts.TextViewTest testGetTextDirectionHeuristic_RtlLayout_TextDirectionLocale None]', 1), ('[android.webkit.cts.CookieTest CookieTest None]', 1), ('[android.autofillservice.cts.unittests.DateValueSanitizerTest testSanitize_ok None]', 1), ('[android.view.cts.FocusFinderTest testGetInstance None]', 1), ('[android.text.method.cts.DateKeyListenerTest testGetInstance None]', 1), ('[android.text.method.cts.DateKeyListenerTest testDateTimeKeyListener None]', 1), ('[android.content.cts.ClipDescriptionTest testClassificationConfidenceValuesAreValid None]', 1), ('[com.android.cts.managedprofile.WipeDataNotificationTest testWipeDataWithReasonVerification None]', 1), ('[com.android.cts.managedprofile.WipeDataNotificationTest testWipeDataWithEmptyReasonVerification None]', 1), ('[com.android.cts.managedprofile.WipeDataNotificationTest testWipeDataWithoutReasonVerification None]', 1), ('[android.webkit.cts.WebViewDataDirTest testSameDirTwoProcesses None]', 1), ('[android.webkit.cts.WebViewDataDirTest testCookieJarsSeparate None]', 1), ('[android.net.http.cts.SslCertificateTest testConstructor None]', 1), ('[android.text.method.cts.BaseKeyListenerTest testBackspace None]', 1), ('[android.text.method.cts.BaseKeyListenerTest testBackspace_withAlt None]', 1), ('[android.text.method.cts.BaseKeyListenerTest testBackspace_withCtrl None]', 1), ('[android.text.method.cts.BaseKeyListenerTest testForwardDelete_withCtrl None]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testFilter1 None]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener1 None]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testGetInstance1 None]', 1), ('[android.webkit.cts.WebHistoryItemTest testWebHistoryItem None]', 1), ('[android.telephony.cts.PhoneNumberUtilsTest testFormatMethods None]', 1), ('[android.view.textclassifier.cts.TextViewIntegrationTest isDisplayed None]', 1), ('[android.app.cts.TileServiceTest testTileInDumpAndHasState None]', 1), ('[android.text.cts.SpannableStringBuilderSpanTest testCopyConstructorDoesNotEnforceParagraphStyleConstraint None]', 1), ('[android.text.cts.SpannableStringTest testCopyConstructorDoesNotEnforceParagraphStyleConstraint None]', 1), ('[android.provider.cts.media.MediaStore_Audio_Genres_MembersTest testStoreAudioGenresMembersExternal None]', 1), ('[android.webkit.cts.TracingControllerTest TracingControllerTest None]', 1), ('[android.webkit.cts.TracingControllerTest testTracingStopFalseIfNotTracing None]', 1), ('[android.webkit.cts.TracingControllerTest testTracingCannotStartIfAlreadyTracing None]', 1), ('[android.webkit.cts.TracingControllerTest testTracingInvalidCategoriesPatternExclusion None]', 1), ('[android.webkit.cts.TracingControllerTest testTracingInvalidCategoriesPatternComma None]', 1), ('[android.webkit.cts.TracingControllerTest testTracingWithNullConfig None]', 1), ('[android.webkit.cts.CookieManagerTest CookieManagerTest None]', 1), ('[android.webkit.cts.CookieManagerTest testGetInstance None]', 1), ('[android.text.method.cts.QwertyKeyListenerTest testGetInstance None]', 1), ('[android.provider.cts.media.MediaStore_Audio_MediaTest testStoreAudioMedia None]', 1), ('[android.app.cts.NotificationManagerTest isGroup None]', 1), ('[android.app.cts.NotificationManagerTest testSuspendPackage None]', 1), ('[android.app.cts.NotificationManagerTest testSuspendedPackageSendsNotification None]', 1), ('[android.app.cts.NotificationManagerTest testCanBubble_ranking None]', 1), ('[android.app.cts.NotificationManagerTest testShowBadging_ranking None]', 1), ('[android.app.cts.NotificationManagerTest testGetSuppressedVisualEffectsOff_ranking None]', 1), ('[android.app.cts.NotificationManagerTest testGetSuppressedVisualEffects_ranking None]', 1), ('[android.app.cts.NotificationManagerTest testKeyChannelGroupOverrideImportanceExplanation_ranking None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationDelegate_cannotCancelNotificationsPostedByDelegator None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationListener_setNotificationsShown None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationListener_getNotificationChannels None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationListener_getNotificationChannelGroups None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationListener_updateNotificationChannel None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationListener_getActiveNotifications None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationListener_getCurrentRanking None]', 1), ('[android.app.cts.NotificationManagerTest testNotificationListener_cancelNotifications None]', 1), ('[com.android.cts.deviceowner.AdminActionBookkeepingTest testRequestBugreport None]', 1), ('[android.provider.cts.media.MediaStore_Audio_GenresTest testGetContentUriForAudioId None]', 1), ('[android.text.method.cts.ArrowKeyMovementMethodTest testGetInstance None]', 1), ('[android.text.method.cts.MetaKeyKeyListenerTest testPressKey None]', 1), ('[android.text.method.cts.MetaKeyKeyListenerTest testReleaseKey None]', 1), ('[android.text.method.cts.MetaKeyKeyListenerTest testAdjustMetaAfterKeypress None]', 1), ('[android.text.method.cts.MetaKeyKeyListenerTest testResetMetaState None]', 1), ('[android.text.method.cts.MetaKeyKeyListenerTest testClearMetaKeyState None]', 1), ('[android.text.method.cts.MetaKeyKeyListenerTest testClearMetaKeyState2 None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 16), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TextViewTest.java', 9), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/TracingControllerTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/MetaKeyKeyListenerTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaSession2ServiceTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy29/src/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/NavigationBarColorTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/BaseKeyListenerTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/DateTimeKeyListenerTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/WipeDataNotificationTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/DigitsKeyListenerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/StagefrightTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FocusFinderTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/DateKeyListenerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewDataDirTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/CookieManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/ServiceWorkerClientTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewUnbufferedTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/webkit/app/src/com/android/cts/webkit/WebViewDeviceSideStartupTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyStoreTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SystemMediaRouter2Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy20/src/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/HideReturnsTransformationMethodTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/LocationAccessCheckTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/CookieTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/DateValueSanitizerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ClipDescriptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/http/cts/SslCertificateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaRoute2ProviderServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebHistoryItemTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneNumberUtilsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRoute2ProviderServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextViewIntegrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/TileServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/SpannableStringBuilderSpanTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/SpannableStringTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/QwertyKeyListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_MediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_GenresTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ChoreographerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/ArrowKeyMovementMethodTest.java', 1)]"	"[('(1,getInstance(),/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java)', 2), ('(1,getInstance(),/android/media/cts/MediaRoute2ProviderServiceTest.java)', 2), ('(1,getInstance(),/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java)', 2), ('(1,getInstance(),/android/webkit/cts/WebViewTest.java)', 1), ('(1,getInstance(),/android/webkit/cts/ServiceWorkerClientTest.java)', 1), ('(1,getInstance(),/android/view/cts/ViewUnbufferedTest.java)', 1), ('(2,getInstance(),/com/android/cts/webkit/WebViewDeviceSideStartupTest.java)', 1), ('(2,getInstance(),/android/os/cts/HwBinderTest.java)', 1), ('(1,getInstance(),/android/keystore/cts/KeyStoreTest.java)', 1), ('(1,getInstance(),/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(6,getInstance(),/android/media/cts/MediaSession2ServiceTest.java)', 1), ('(1,getInstance(),/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java)', 1), ('(2,getInstance(),/android/security/cts/StagefrightTest.java)', 1), ('(5,getInstance(),/android/text/method/cts/DateTimeKeyListenerTest.java)', 1), ('(3,getInstance(),/android/text/method/cts/HideReturnsTransformationMethodTest.java)', 1), ('(6,getInstance(),/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java)', 1), ('(1,getInstance(),/android/media/cts/PresentationSyncTest.java)', 1), ('(6,getInstance(),/android/view/inputmethod/cts/NavigationBarColorTest.java)', 1), ('(2,getInstance(),/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(13,getInstance(),/android/widget/cts/TextViewTest.java)', 1), ('(1,getInstance(),/android/webkit/cts/CookieTest.java)', 1), ('(2,getInstance(),/android/autofillservice/cts/unittests/DateValueSanitizerTest.java)', 1), ('(2,getInstance(),/android/view/cts/FocusFinderTest.java)', 1), ('(4,getInstance(),/android/text/method/cts/DateKeyListenerTest.java)', 1), ('(1,getInstance(),/android/content/cts/ClipDescriptionTest.java)', 1), ('(4,getInstance(),/com/android/cts/managedprofile/WipeDataNotificationTest.java)', 1), ('(2,getInstance(),/android/webkit/cts/WebViewDataDirTest.java)', 1), ('(1,getInstance(),/android/net/http/cts/SslCertificateTest.java)', 1), ('(18,getInstance(),/android/text/method/cts/BaseKeyListenerTest.java)', 1), ('(4,getInstance(),/android/text/method/cts/DigitsKeyListenerTest.java)', 1), ('(1,getInstance(),/android/webkit/cts/WebHistoryItemTest.java)', 1), ('(8,getInstance(),/android/telephony/cts/PhoneNumberUtilsTest.java)', 1), ('(1,getInstance(),/android/view/textclassifier/cts/TextViewIntegrationTest.java)', 1), ('(1,getInstance(),/android/app/cts/TileServiceTest.java)', 1), ('(1,getInstance(),/android/text/cts/SpannableStringBuilderSpanTest.java)', 1), ('(1,getInstance(),/android/text/cts/SpannableStringTest.java)', 1), ('(3,getInstance(),/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java)', 1), ('(8,getInstance(),/android/webkit/cts/TracingControllerTest.java)', 1), ('(4,getInstance(),/android/webkit/cts/CookieManagerTest.java)', 1), ('(1,getInstance(),/android/text/method/cts/QwertyKeyListenerTest.java)', 1), ('(1,getInstance(),/android/provider/cts/media/MediaStore_Audio_MediaTest.java)', 1), ('(16,getInstance(),/android/app/cts/NotificationManagerTest.java)', 1), ('(2,getInstance(),/com/android/cts/deviceowner/AdminActionBookkeepingTest.java)', 1), ('(1,getInstance(),/android/provider/cts/media/MediaStore_Audio_GenresTest.java)', 1), ('(1,getInstance(),/android/view/cts/ChoreographerTest.java)', 1), ('(3,getInstance(),/android/text/method/cts/ArrowKeyMovementMethodTest.java)', 1), ('(14,getInstance(),/android/text/method/cts/MetaKeyKeyListenerTest.java)', 1)]"	"[('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[sociations()"");        } catch (SecurityException e) {            // expected        }    }   ])', 3), ('([3:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[getInstance()]:[3]:method_text:[      assertEquals(Spanned.SPAN_POINT_POINT, text.getSpanFlags(Selection.SELECTION_END));    }   ])', 3), ('([1:/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java]:[getInstance()]:[1]:method_text:[, selection, selectionArgs, null);        assertEquals(0, c.getCount());        c.close();    }}])', 2), ('([1:/android/media/cts/MediaSession2ServiceTest.java]:[getInstance()]:[1]:method_text:[s = service.getSessions();            assertFalse(sessions.contains(session));        }    }   ])', 2), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[ot set to null!"");        } catch (NullPointerException e) {        }    }    @UiThreadTest   ])', 2), ('([1:/com/android/cts/managedprofile/WipeDataNotificationTest.java]:[getInstance()]:[1]:method_text:[SECONDS, TimeUnit.SECONDS));        NotificationListener.getInstance().clearListeners();    }   ])', 2), ('([1:/android/media/cts/MediaRoute2ProviderServiceTest.java]:[getInstance()]:[1]:method_text:[(mService != null) {            mService.clear();            mService = null;        }    }   ])', 2), ('([1:/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java]:[getInstance()]:[1]:method_text:[election, selectionArgs, null);        assertEquals(0, c.getCount());        c.close();    }   ])', 2), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[tFalse(outRanking.isSuspended());            }        }        mListener.resetData();    }   ])', 2), ('([1:/android/webkit/cts/WebViewTest.java]:[getInstance()]:[1]:method_text:[yncManager.getInstance());    }    // Static methods should be safe to call on non-UI threads   ])', 1), ('([1:/android/webkit/cts/ServiceWorkerClientTest.java]:[getInstance()]:[1]:method_text:[        public void unregisterSuccess() {            mUnregisterSuccess = true;        }    }}])', 1), ('([1:/android/view/cts/ViewUnbufferedTest.java]:[getInstance()]:[1]:method_text:[eCallback(mFrameCallback);    }    // Normal view would expect to receive the buffered event.   ])', 1), ('([2:/com/android/cts/webkit/WebViewDeviceSideStartupTest.java]:[getInstance()]:[2]:method_text:[42"", m.group(1)); // value got incremented        syncLoader.detach();    }    @UiThreadTest   ])', 1), ('([2:/android/os/cts/HwBinderTest.java]:[getInstance()]:[2]:method_text:[      notification.lock.unlock();        }        assertTrue(notification.registered);    }   ])', 1), ('([1:/android/keystore/cts/KeyStoreTest.java]:[getInstance()]:[1]:method_text:[eption expected) {        }        assertNotNull(KeyStore.getInstance(type, provider));    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[getInstance()]:[1]:method_text:[callbacks        clearCallbacks();        mUiAutomation.dropShellPermissionIdentity();    }   ])', 1), ('([3:/android/media/cts/MediaSession2ServiceTest.java]:[getInstance()]:[3]:method_text:[Session2Service.getInstance())                    .onUpdateNotification(null);        }    }   ])', 1), ('([1:/android/media/cts/MediaSession2ServiceTest.java]:[getInstance()]:[1]:method_text:[wrongIntent = new Intent(""wrongIntent"");        assertNull(service.onBind(wrongIntent));    }   ])', 1), ('([1:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[getInstance()]:[1]:method_text:[InterruptedException ex) {                // pass            }        }        return n;    }}])', 1), ('([1:/android/security/cts/StagefrightTest.java]:[getInstance()]:[1]:method_text:[     t.join();        policy.setCleartextTrafficPermitted(false);        server.join();    }   ])', 1), (""([1:/android/security/cts/StagefrightTest.java]:[getInstance()]:[1]:method_text:[or thread to exit so we're sure the player was released    }    /*     * b/135207745     */   ])"", 1), ('([3:/android/text/method/cts/DateTimeKeyListenerTest.java]:[getInstance()]:[3]:method_text:[assertNotSame(usListener1, irListener);        assertNotSame(usListener1, nullListener);    }   ])', 1), (""([1:/android/text/method/cts/DateTimeKeyListenerTest.java]:[getInstance()]:[1]:method_text:[d.     * 7. Remove DateTimeKeyListener and Press '1' key, this key will not be accepted     */   ])"", 1), ('([1:/android/text/method/cts/DateTimeKeyListenerTest.java]:[getInstance()]:[1]:method_text:[protected char[] getAcceptedChars() {            return super.getAcceptedChars();        }    }}])', 1), ('([3:/android/text/method/cts/HideReturnsTransformationMethodTest.java]:[getInstance()]:[3]:method_text:[d1 = HideReturnsTransformationMethod.getInstance();        assertSame(method0, method1);    }   ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[getInstance()]:[2]:method_text:[ListenerService.Ranking.USER_SENTIMENT_POSITIVE,                out.getUserSentiment());    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[getInstance()]:[1]:method_text:[            Adjustment.KEY_SNOOZE_CRITERIA));        mUi.dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[getInstance()]:[1]:method_text:[             + ""> was not restored when unsnoozed from listener"",                found);    }   ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[getInstance()]:[2]:method_text:[w new IOException(""Could not read stdout of command:\xa0"" + command, e);            }        }    }])', 1), ('([1:/android/media/cts/PresentationSyncTest.java]:[getInstance()]:[1]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([3:/android/view/inputmethod/cts/NavigationBarColorTest.java]:[getInstance()]:[3]:method_text:[                        bitmap.getWidth(), navigationBarHeight);            }        }    }   ])', 1), ('([1:/android/view/inputmethod/cts/NavigationBarColorTest.java]:[getInstance()]:[1]:method_text:[                   DimmingTestMode.NO_DIMMING_DIALOG));    }    @FlakyTest(bugId = 148768026)   ])', 1), ('([1:/android/view/inputmethod/cts/NavigationBarColorTest.java]:[getInstance()]:[1]:method_text:[BottomNavigationBerHeight(),                        DimmingTestMode.NO_DIMMING_DIALOG));    }   ])', 1), ('([1:/android/view/inputmethod/cts/NavigationBarColorTest.java]:[getInstance()]:[1]:method_text:[omNavigationBerHeight(),                        DimmingTestMode.DIMMING_DIALOG_ABOVE_IME));    }}])', 1), ('([2:/android/permission/cts/LocationAccessCheckTest.java]:[getInstance()]:[2]:method_text:[Unbind() throws Throwable {        unbindService();        getNotification(true, true);    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[ion.waitForIdleSync();        assertSame(qwertyKeyListener, mTextView.getKeyListener());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[rtEquals(selectionEnd, Selection.getSelectionEnd(mTextView.getText()));    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[ // the error message and icon will be cleared.        assertNull(mTextView.getError());    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[t.setSource(source);        CtsKeyEventUtil.sendKey(instrumentation, targetView, event);    }   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[getInstance()]:[4]:method_text:[ForIdleSync();        assertNull(mTextView.getTransformationMethod());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[getInstance()]:[2]:method_text:[ertEquals(singleLineWidth, mTextView.getLayout().getWidth());        }    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[  s.replace(0, s.length(), builder.toString());            mChangingText = false;        }    }}])', 1), ('([1:/android/webkit/cts/CookieTest.java]:[getInstance()]:[1]:method_text:[            }        }        assertFalse(mCookieManager.hasCookies());    }    @Presubmit   ])', 1), ('([2:/android/autofillservice/cts/unittests/DateValueSanitizerTest.java]:[getInstance()]:[2]:method_text:[dDate).isEqualTo(expectedDate);        assertThat(sanitizedValue).isEqualTo(expectedValue);    }}])', 1), ('([1:/android/view/cts/FocusFinderTest.java]:[getInstance()]:[1]:method_text:[Left.setNextFocusLeftId(View.NO_ID);        mBottomRight.setNextFocusLeftId(View.NO_ID);    }   ])', 1), ('([1:/android/view/cts/FocusFinderTest.java]:[getInstance()]:[1]:method_text:[    public void testGetInstance() {        assertNotNull(mFocusFinder);    }    ])', 1), ('([3:/android/text/method/cts/DateKeyListenerTest.java]:[getInstance()]:[3]:method_text:[assertNotSame(usListener1, irListener);        assertNotSame(usListener1, nullListener);    }   ])', 1), ('([1:/android/text/method/cts/DateKeyListenerTest.java]:[getInstance()]:[1]:method_text:[protected char[] getAcceptedChars() {            return super.getAcceptedChars();        }    }}])', 1), ('([1:/android/content/cts/ClipDescriptionTest.java]:[getInstance()]:[1]:method_text:[ity(intent);        mUiDevice.wait(Until.hasObject(By.pkg(clazz.getPackageName())), 15000);    }}])', 1), ('([2:/com/android/cts/managedprofile/WipeDataNotificationTest.java]:[getInstance()]:[2]:method_text:[ com.android.cts.managedprofile/.WipeDataReceiver"";        SystemUtil.runShellCommand(cmd);    }}])', 1), ('([1:/android/webkit/cts/WebViewDataDirTest.java]:[getInstance()]:[1]:method_text:[_URL);            assertNull(""cookie leaked to alternate cookie jar"", cookie);        }    }   ])', 1), ('([1:/android/webkit/cts/WebViewDataDirTest.java]:[getInstance()]:[1]:method_text:[))) {            processA.run(TestCookieInAlternateDir.class, REMOTE_TIMEOUT_MS);        }    }}])', 1), ('([1:/android/net/http/cts/SslCertificateTest.java]:[getInstance()]:[1]:method_text:[   public boolean hasUnsupportedCriticalExtension() {            return false;        }    }   ])', 1), ('([3:/android/text/method/cts/BaseKeyListenerTest.java]:[getInstance()]:[3]:method_text:[    assertEquals(""\\u05D6\\u05D4\\u0020Anroid\\u0020\\u05E2\\u05D5\\u05D1"", content.toString());    }   ])', 1), ('([3:/android/text/method/cts/BaseKeyListenerTest.java]:[getInstance()]:[3]:method_text:[AltBackspace(content, mockBaseKeyListener);        assertEquals("""", content.toString());    }   ])', 1), ('([6:/android/text/method/cts/BaseKeyListenerTest.java]:[getInstance()]:[6]:method_text:[;        assertEquals("""", content.toString());        verifyCursorPosition(content, 0);    }   ])', 1), (""([6:/android/text/method/cts/BaseKeyListenerTest.java]:[getInstance()]:[6]:method_text:[    * 3. ACTION_MULTIPLE KEYCODE_UNKNOWN by inserting the event's text into the content.     */   ])"", 1), ('([1:/android/text/method/cts/DigitsKeyListenerTest.java]:[getInstance()]:[1]:method_text:[urn ""123456""     * 14. filter ""+123456"" but dest has \'-\' before dstart, return ""123456""     */   ])', 1), ('([1:/android/text/method/cts/DigitsKeyListenerTest.java]:[getInstance()]:[1]:method_text:[ot be accepted,     *     because text view accepts minus sign iff it at the beginning.     */   ])', 1), ('([2:/android/text/method/cts/DigitsKeyListenerTest.java]:[getInstance()]:[2]:method_text:[er3);        assertSame(listener1, listener2);        assertSame(listener1, listener3);    }   ])', 1), ('([1:/android/webkit/cts/WebHistoryItemTest.java]:[getInstance()]:[1]:method_text:[ assertNotNull(item);        assertEquals(TestHtmlConstants.BR_TAG_TITLE, item.getTitle());    }}])', 1), ('([8:/android/telephony/cts/PhoneNumberUtilsTest.java]:[getInstance()]:[8]:method_text:[  assertEquals(PhoneNumberUtils.TOA_Unknown, PhoneNumberUtils.toaFromString(""88888888""));    }   ])', 1), ('([1:/android/view/textclassifier/cts/TextViewIntegrationTest.java]:[getInstance()]:[1]:method_text:[   assertFloatingToolbarIsDisplayed();        assertFloatingToolbarContainsItem(""Test"");    }   ])', 1), ('([1:/android/app/cts/TileServiceTest.java]:[getInstance()]:[1]:method_text:[= false;        @Override        public void run() {            hasRan = true;        }    }}])', 1), ('([1:/android/text/cts/SpannableStringBuilderSpanTest.java]:[getInstance()]:[1]:method_text:[opied.length(), AlignmentSpan.Standard.class);        assertEquals(0, copiedSpans.length);    }}])', 1), ('([1:/android/text/cts/SpannableStringTest.java]:[getInstance()]:[1]:method_text:[ed.length(), AlignmentSpan.Standard.class);        assertEquals(0, copiedSpans.length);    }   ])', 1), ('([2:/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java]:[getInstance()]:[2]:method_text:[a.getContentUri(mVolumeName),                Media._ID + ""="" + mAudioIdOfJamLive, null);    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java]:[getInstance()]:[1]:method_text:[ll, null, null);            assertEquals(0, c.getCount());            c.close();        }    }}])', 1), ('([2:/android/webkit/cts/TracingControllerTest.java]:[getInstance()]:[2]:method_text:[t thread    // (via executor). Tracing start/stop and webview loading happens on the UI thread.   ])', 1), ('([1:/android/webkit/cts/TracingControllerTest.java]:[getInstance()]:[1]:method_text:[ngController.isTracing());    }    // Test that tracing cannot be started if already tracing.   ])', 1), ('([1:/android/webkit/cts/TracingControllerTest.java]:[getInstance()]:[1]:method_text:[e already tracing"");    }    // Test that tracing cannot be invoked with excluded categories.   ])', 1), ('([1:/android/webkit/cts/TracingControllerTest.java]:[getInstance()]:[1]:method_text:[ pattern"");    }    // Test that tracing cannot be invoked with categories containing commas.   ])', 1), ('([1:/android/webkit/cts/TracingControllerTest.java]:[getInstance()]:[1]:method_text:[egory pattern"");    }    // Test that tracing cannot start with a configuration that is null.   ])', 1), ('([2:/android/webkit/cts/TracingControllerTest.java]:[getInstance()]:[2]:method_text:[tion(""about:blank"");        assertTrue(tracingController.stop(tracingReceiver, executor));    }}])', 1), ('([1:/android/webkit/cts/CookieManagerTest.java]:[getInstance()]:[1]:method_text:[setAcceptCookie(false);            assertFalse(mCookieManager.acceptCookie());        }    }   ])', 1), ('([3:/android/webkit/cts/CookieManagerTest.java]:[getInstance()]:[3]:method_text:[e();        CookieManager c2 = CookieManager.getInstance();        assertSame(c1, c2);    }   ])', 1), ('([1:/android/text/method/cts/QwertyKeyListenerTest.java]:[getInstance()]:[1]:method_text:[        assertNotSame(listener1, listener4);        assertNotSame(listener4, listener3);    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[getInstance()]:[1]:method_text:[ mContentResolver.delete(uri, null, null);            assertEquals(1, result);        }    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[anupSendBubbleActivity() {        mContext.unregisterReceiver(mBubbleBroadcastReceiver);    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[ertFalse(outRanking.canBubble());            }        }        mListener.resetData();    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[                       Settings.Secure.NOTIFICATION_BADGING, originalBadging));        }    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[        assertEquals(0, outRanking.getSuppressedVisualEffects());            }        }    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[alFilter);            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[            assertNotNull(outRanking.getImportanceExplanation());            }        }    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[VITY_NEW_TASK);        mContext.startActivity(revokeIntent);        Thread.sleep(1000);    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[sn\'t granted"");        } catch (SecurityException e) {            // expected        }    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[fs[1].getId());        assertEquals(sbn1.getPackageName(), notifs[1].getPackageName());    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[notification        assertEquals(mListener.mRankingMap, mListener.getCurrentRanking());    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[lse)) {            fail(""Failed to cancel notification id="" + notificationId);        }    }   ])', 1), ('([2:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[getInstance()]:[2]:method_text:[    /**     * Test: Retrieving network logs should update the corresponding timestamp.     */   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_GenresTest.java]:[getInstance()]:[1]:method_text:[ull));            assertEquals(1, mContentResolver.delete(genreUri, null, null));        }    }}])', 1), ('([1:/android/view/cts/ChoreographerTest.java]:[getInstance()]:[1]:method_text:[  @Before    public void setup() {        mChoreographer = Choreographer.getInstance();    }   ])', 1), ('([3:/android/text/method/cts/ArrowKeyMovementMethodTest.java]:[getInstance()]:[3]:method_text:[thod.getInstance();        assertNotNull(method1);        assertSame(method0, method1);    }   ])', 1), (""([1:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[getInstance()]:[1]:method_text:[KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_3));        assertEquals('3', content.charAt(3));    }   ])"", 1), ('([1:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[getInstance()]:[1]:method_text:[CTION_DOWN, KeyEvent.KEYCODE_3));        assertEquals(str.charAt(3), content.charAt(3));    }   ])', 1), ('([3:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[getInstance()]:[3]:method_text:[   assertEquals(Spanned.SPAN_POINT_POINT, content.getSpanFlags(Selection.SELECTION_END));    }   ])', 1)]"	""	""	""	""	""
"276:775608) 9.11.3  . Identity Credential"	"9.11.3"	"C-0-3"	""	"[('android.security.identity.cts.ProvisioningTest', 4), ('android.security.identity.cts.DynamicAuthTest', 3), ('android.security.identity.cts.ReaderAuthTest', 2), ('android.security.identity.cts.EphemeralKeyTest', 2), ('android.security.identity.cts.UserAuthTest', 2), ('android.security.identity.cts.IdentityApiTest', 2), ('android.security.identity.cts.HkdfTest', 2), ('android.security.identity.cts.CreateItemsRequestTest', 1), ('android.security.identity.cts.AttestationTest', 1), ('android.security.identity.cts.UtilUnitTests', 1), ('android.security.identity.cts.X509CertificateSigningTest', 1)]"	"[('build', 11), ('getBytes', 6), ('printStackTrace', 6), ('getExampleDrivingPrivilegesCbor', 4), ('end', 4), ('Builder', 4), ('length', 4), ('ByteArrayOutputStream', 2), ('CborBuilder', 2), ('addArray', 2), ('addMap', 2), ('toByteArray', 2), ('iterator', 2), ('next', 2), ('getPublicKey', 2), ('DeviceLockSession', 2), ('LockScreenSession', 2), ('setLockCredential', 2), ('performDeviceLock', 2), ('sleepDevice', 2), ('getTargetContext', 2), ('Random', 2), ('toString', 2), ('readerAuth', 1), ('generateKeyPair', 1), ('createEphemeralKey', 1)]"	""	""	"9.11.3/C-0-3"	"""C-0-3] The cryptographic operations needed to implement the Identity Credential System (e.g. the android.security.identity.* APIs) MUST be performed entirely in the trusted application and private key material MUST never leave the isolated execution environment unless specifically required by higher-level APIs (e.g. the createEphemeralKeyPair() method). """	"09110300.670003"	"createEphemeralKeyPair() android.security.identity"	""	""	""	"[('android.security.identity', 15), ('createEphemeralKeyPair()', 6)]"	""	"[('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveMultipleTimes None]', 2), ('[android.security.identity.cts.UserAuthTest isDeviceLocked None]', 2), ('[android.security.identity.cts.ReaderAuthTest isHalImplemented None]', 1), ('[android.security.identity.cts.EphemeralKeyTest isHalImplemented None]', 1), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthTest None]', 1), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthWithExpirationTest None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/DynamicAuthTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ReaderAuthTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/EphemeralKeyTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/CreateItemsRequestTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/AttestationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/UtilUnitTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/X509CertificateSigningTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/UserAuthTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/IdentityApiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/HkdfTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/HkdfTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/UserAuthTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/IdentityApiTest.java', 1)]"	"[('(3,createEphemeralKeyPair(),/android/security/identity/cts/ProvisioningTest.java)', 2), ('(16,android.security.identity,/android/security/identity/cts/ProvisioningTest.java)', 2), ('(11,android.security.identity,/android/security/identity/cts/UserAuthTest.java)', 2), ('(15,android.security.identity,/android/security/identity/cts/IdentityApiTest.java)', 2), ('(1,android.security.identity,/android/security/identity/cts/HkdfTest.java)', 2), ('(7,createEphemeralKeyPair(),/android/security/identity/cts/ReaderAuthTest.java)', 1), ('(14,android.security.identity,/android/security/identity/cts/ReaderAuthTest.java)', 1), ('(1,android.security.identity,/android/security/identity/cts/CreateItemsRequestTest.java)', 1), ('(1,createEphemeralKeyPair(),/android/security/identity/cts/EphemeralKeyTest.java)', 1), ('(4,android.security.identity,/android/security/identity/cts/EphemeralKeyTest.java)', 1), ('(16,createEphemeralKeyPair(),/android/security/identity/cts/DynamicAuthTest.java)', 1), ('(7,android.security.identity,/android/security/identity/cts/DynamicAuthTest.java)', 1), ('(3,android.security.identity,/android/security/identity/cts/AttestationTest.java)', 1), ('(1,android.security.identity,/android/security/identity/cts/UtilUnitTests.java)', 1), ('(1,android.security.identity,/android/security/identity/cts/X509CertificateSigningTest.java)', 1)]"	"[('([3:/android/security/identity/cts/ProvisioningTest.java]:[createEphemeralKeyPair()]:[3]:method_text:[;            assertTrue(false);        }        store.deleteCredentialByName(""test"");    }   ])', 2), ('([16:/android/security/identity/cts/ProvisioningTest.java]:[android.security.identity]:[16]:method_text:[tStackTrace();            assertTrue(false);        }        return certificateChain;    }   ])', 2), ('([11:/android/security/identity/cts/UserAuthTest.java]:[android.security.identity]:[11]:method_text:[) {            throw new RuntimeException(""Error creating auth-bound key"", e);        }    }   ])', 2), ('([15:/android/security/identity/cts/IdentityApiTest.java]:[android.security.identity]:[15]:method_text:[quals;public class IdentityApiTest {    private static final String TAG = ""IdentityApiTest"";   ])', 2), ('([1:/android/security/identity/cts/HkdfTest.java]:[android.security.identity]:[1]:method_text:[yte[] bytes = new byte[numBytes];        sRandom.nextBytes(bytes);        return bytes;    }   ])', 2), ('([7:/android/security/identity/cts/ReaderAuthTest.java]:[createEphemeralKeyPair()]:[7]:method_text:[           sessionTranscriptBytes,                readerSignature);        return result;    }}])', 1), ('([14:/android/security/identity/cts/ReaderAuthTest.java]:[android.security.identity]:[14]:method_text:[T_SHA512);        kpg.initialize(builder.build());        return kpg.generateKeyPair();    }   ])', 1), ('([1:/android/security/identity/cts/CreateItemsRequestTest.java]:[android.security.identity]:[1]:method_text:[t java.util.Map;import co.nstant.in.cbor.CborException;public class CreateItemsRequestTest {   ])', 1), ('([1:/android/security/identity/cts/EphemeralKeyTest.java]:[createEphemeralKeyPair()]:[1]:method_text:[            }            mMdlExpectedCounter += 1;            return plaintext;        }    }}])', 1), ('([4:/android/security/identity/cts/EphemeralKeyTest.java]:[android.security.identity]:[4]:method_text:[code.public class EphemeralKeyTest {    private static final String TAG = ""EphemeralKeyTest"";   ])', 1), ('([10:/android/security/identity/cts/DynamicAuthTest.java]:[createEphemeralKeyPair()]:[10]:method_text:[re done. Clean up after ourselves.        store.deleteCredentialByName(credentialName);    }   ])', 1), ('([6:/android/security/identity/cts/DynamicAuthTest.java]:[createEphemeralKeyPair()]:[6]:method_text:[taticAuthenticationData() throwing UnknownAuthenticationKeyException    // on an unknown auth key}])', 1), ('([7:/android/security/identity/cts/DynamicAuthTest.java]:[android.security.identity]:[7]:method_text:[ption;public class DynamicAuthTest {    private static final String TAG = ""DynamicAuthTest"";   ])', 1), ('([3:/android/security/identity/cts/AttestationTest.java]:[android.security.identity]:[3]:method_text:[STATION_APPLICATION_ID = 709;    public static final int KM_TAG_IDENTITY_CREDENTIAL_KEY = 721;   ])', 1), ('([1:/android/security/identity/cts/UtilUnitTests.java]:[android.security.identity]:[1]:method_text:[del.UnicodeString;import co.nstant.in.cbor.model.UnsignedInteger;public class UtilUnitTests {   ])', 1), ('([1:/android/security/identity/cts/X509CertificateSigningTest.java]:[android.security.identity]:[1]:method_text:[09CertificateSigningTest {    private static final String TAG = ""X509CertificateSigningTest"";   ])', 1)]"	""	""	""	""	""
"281:780937) 9.16  . Application Data Migration"	"9.16"	"C-1-4"	""	""	""	""	""	"9.16/C-1-4"	"""C-1-4] MUST only migrate application data to the same application on the target device, with the same package name AND signing certificate."""	"09160000.670104"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"281:780937) 9.16  . Application Data Migration"	"9.16"	"C-1-2"	""	""	""	""	""	"9.16/C-1-2"	"""C-1-2] MUST securely confirm the primary authentication on the source device and confirm with the user intent to copy the data on the source device before any data is transferred."""	"09160000.670102"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"281:780937) 9.16  . Application Data Migration"	"9.16"	"C-1-1"	""	""	""	""	""	"9.16/C-1-1"	"""C-1-1] MUST NOT initiate transfers of application data from devices on which the user has not set a primary authentication as described in 9.11.1 Secure Lock Screen and Authentication."""	"09160000.670101"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"281:780937) 9.16  . Application Data Migration"	"9.16"	"C-1-5"	""	""	""	""	""	"9.16/C-1-5"	"""C-1-5] MUST show an indication that the source device has had data migrated by a device-to-device data migration in the settings menu. A user SHOULD NOT be able to remove this indication. <h2 id=""10_software_compatibility_testing"" """	"09160000.670105"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"281:780937) 9.16  . Application Data Migration"	"9.16"	"C-1-3"	""	""	""	""	""	"9.16/C-1-3"	"""C-1-3] MUST use security key attestation to ensure that both the source device and the target device in the device-to-device migration are legitimate Android devices and have a locked bootloader."""	"09160000.670103"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"250:699468) 9.5  . Multi"	"9.5"	"C-1-3"	""	""	""	""	""	"9.5/C-1-3"	"""C-1-3] MUST have separate and isolated shared application storage (a.k.a. /sdcard) directories for each user instance."""	"09050000.670103"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"250:699468) 9.5  . Multi"	"9.5"	"C-1-2"	""	""	""	""	""	"9.5/C-1-2"	"""C-1-2] MUST, for each user, implement a security model consistent with the Android platform security model as defined in Security and Permissions reference document in the APIs."""	"09050000.670102"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"263:733095) 9.8.10  . Connectivity Bug Report"	"9.8.10"	"C-1-1"	""	"[('android.bugreport.cts.BugreportManagerTest', 3), ('android.carrierapi.cts.BugreportManagerTest', 1)]"	"[('startBugreport_connectivityBugreport', 1), ('BugreportCallbackImpl', 1)]"	""	""	"9.8.10/C-1-1"	"""C-1-1] MUST support generating connectivity bug reports via BUGREPORT_MODE_TELEPHONY with BugreportManager."""	"09081000.670101"	"BUGREPORT_MODE_TELEPHONY"	""	""	""	"[('BUGREPORT_MODE_TELEPHONY', 4)]"	""	"[('[android.bugreport.cts.BugreportManagerTest testTelephonyBugreport None]', 2), ('[android.carrierapi.cts.BugreportManagerTest hasEarlyReportFinished None]', 1), ('[android.bugreport.cts.BugreportManagerTest testFullBugreport None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/bugreport/src/android/bugreport/cts/BugreportManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/BugreportManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/bugreport/src/android/bugreport/cts/BugreportManagerTest.java', 1)]"	"[('(1,BUGREPORT_MODE_TELEPHONY,/android/carrierapi/cts/BugreportManagerTest.java)', 1), ('(1,BUGREPORT_MODE_TELEPHONY,/android/bugreport/cts/BugreportManagerTest.java)', 1), ('(2,BUGREPORT_MODE_TELEPHONY,/android/bugreport/cts/BugreportManagerTest.java)', 1)]"	"[('([1:/android/carrierapi/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[ertThat(mScreenshotFile.length()).isEqualTo(0L);        assertFdIsClosed(mScreenshotFd);    }   ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[port does not take any screenshot        assertThat(screenshot).isNull();    }    @LargeTest   ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[telephony bugreport does not take any screenshot        assertThat(screenshot).isNull();    }   ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[ringExtra(EXTRA_SCREENSHOT);        return new Pair<String, String>(bugreport, screenshot);    }}])', 1)]"	""	""	""	""	""
"263:733095) 9.8.10  . Connectivity Bug Report"	"9.8.10"	"C-1-4"	""	"[('android.bugreport.cts.BugreportManagerTest', 3), ('android.carrierapi.cts.BugreportManagerTest', 1)]"	"[('startBugreport_connectivityBugreport', 1), ('BugreportCallbackImpl', 1)]"	""	""	"9.8.10/C-1-4"	"""C-1-4] Reports generated using BUGREPORT_MODE_TELEPHONY MUST contain at least the following information: TelephonyDebugService dump TelephonyRegistry dump WifiService dump ConnectivityService dump A dump of the calling package&#39;s CarrierService instance (if bound) Radio log buffer """	"09081000.670104"	"BUGREPORT_MODE_TELEPHONY"	""	""	""	"[('BUGREPORT_MODE_TELEPHONY', 4)]"	""	"[('[android.bugreport.cts.BugreportManagerTest testTelephonyBugreport None]', 2), ('[android.carrierapi.cts.BugreportManagerTest hasEarlyReportFinished None]', 1), ('[android.bugreport.cts.BugreportManagerTest testFullBugreport None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/bugreport/src/android/bugreport/cts/BugreportManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/BugreportManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/bugreport/src/android/bugreport/cts/BugreportManagerTest.java', 1)]"	"[('(1,BUGREPORT_MODE_TELEPHONY,/android/carrierapi/cts/BugreportManagerTest.java)', 1), ('(1,BUGREPORT_MODE_TELEPHONY,/android/bugreport/cts/BugreportManagerTest.java)', 1), ('(2,BUGREPORT_MODE_TELEPHONY,/android/bugreport/cts/BugreportManagerTest.java)', 1)]"	"[('([1:/android/carrierapi/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[ertThat(mScreenshotFile.length()).isEqualTo(0L);        assertFdIsClosed(mScreenshotFd);    }   ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[port does not take any screenshot        assertThat(screenshot).isNull();    }    @LargeTest   ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[telephony bugreport does not take any screenshot        assertThat(screenshot).isNull();    }   ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[ringExtra(EXTRA_SCREENSHOT);        return new Pair<String, String>(bugreport, screenshot);    }}])', 1)]"	""	""	""	""	""
"263:733095) 9.8.10  . Connectivity Bug Report"	"9.8.10"	"C-1-2"	""	"[('android.bugreport.cts.BugreportManagerTest', 3), ('android.carrierapi.cts.BugreportManagerTest', 1)]"	"[('startBugreport_connectivityBugreport', 1), ('BugreportCallbackImpl', 1)]"	""	""	"9.8.10/C-1-2"	"""C-1-2] MUST obtain user consent every time BUGREPORT_MODE_TELEPHONY is used to generate a report and MUST NOT prompt the user to consent to all future requests from the application."""	"09081000.670102"	"BUGREPORT_MODE_TELEPHONY"	""	""	""	"[('BUGREPORT_MODE_TELEPHONY', 4)]"	""	"[('[android.bugreport.cts.BugreportManagerTest testTelephonyBugreport None]', 2), ('[android.carrierapi.cts.BugreportManagerTest hasEarlyReportFinished None]', 1), ('[android.bugreport.cts.BugreportManagerTest testFullBugreport None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/bugreport/src/android/bugreport/cts/BugreportManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/BugreportManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/bugreport/src/android/bugreport/cts/BugreportManagerTest.java', 1)]"	"[('(1,BUGREPORT_MODE_TELEPHONY,/android/carrierapi/cts/BugreportManagerTest.java)', 1), ('(1,BUGREPORT_MODE_TELEPHONY,/android/bugreport/cts/BugreportManagerTest.java)', 1), ('(2,BUGREPORT_MODE_TELEPHONY,/android/bugreport/cts/BugreportManagerTest.java)', 1)]"	"[('([1:/android/carrierapi/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[ertThat(mScreenshotFile.length()).isEqualTo(0L);        assertFdIsClosed(mScreenshotFd);    }   ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[port does not take any screenshot        assertThat(screenshot).isNull();    }    @LargeTest   ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[telephony bugreport does not take any screenshot        assertThat(screenshot).isNull();    }   ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[ringExtra(EXTRA_SCREENSHOT);        return new Pair<String, String>(bugreport, screenshot);    }}])', 1)]"	""	""	""	""	""
"263:733095) 9.8.10  . Connectivity Bug Report"	"9.8.10"	"C-1-3"	""	""	""	""	""	"9.8.10/C-1-3"	"""C-1-3] MUST NOT return the generated report to the requesting app without explicit user consent."""	"09081000.670103"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"264:734580) 9.8.11  . Data blobs sharing"	"9.8.11"	"C-1-2"	""	""	""	""	""	"9.8.11/C-1-2"	"""C-1-2] MUST NOT send off device or share with other apps the secure hashes of data blobs (which are used to control access). <h4 id=""9812_music_recognition"" """	"09081100.670102"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"264:734580) 9.8.11  . Data blobs sharing"	"9.8.11"	"C-1-1"	""	"[('com.android.cts.blob.BlobStoreManagerTest', 57), ('com.android.cts.device.blob.DataCleanupTest', 12), ('com.android.cts.device.blob.DataPersistenceTest', 6), ('com.android.server.cts.device.statsd.AtomTests', 1), ('com.android.cts.appsearch.app.GlobalSearchSessionPlatformCtsTest', 1)]"	""	""	""	"9.8.11/C-1-1"	"""C-1-1] MUST NOT share data blobs belonging to apps beyond what they intended to allow (i.e. the scope of default access and the other access modes that can be specified using BlobStoreManager.session#allowPackageAccess(), BlobStoreManager.session#allowSameSignatureAccess(), or BlobStoreManager.session#allowPublicAccess() MUST NOT be modified). The AOSP reference implementation meets these requirements."""	"09081100.670101"	"BlobStoreManager.session allowSameSignatureAccess() allowPackageAccess() allowPublicAccess()"	""	""	""	"[('BlobStoreManager.session', 52), ('allowPublicAccess()', 12), ('allowSameSignatureAccess()', 10), ('allowPackageAccess()', 3)]"	""	"[('[com.android.cts.device.blob.DataCleanupTest testCommitBlob None]', 5), ('[com.android.cts.blob.BlobStoreManagerTest testOpenSession_fromAnotherPkg None]', 4), ('[com.android.cts.blob.BlobStoreManagerTest testAllowPublicAccess_abandonedSession None]', 4), ('[com.android.cts.blob.BlobStoreManagerTest testAllowSameSignatureAccess_abandonedSession None]', 4), ('[com.android.cts.blob.BlobStoreManagerTest testStorageAttribution_acquireLease None]', 4), ('[com.android.cts.device.blob.DataCleanupTest testRecommitBlob None]', 3), ('[com.android.cts.device.blob.DataPersistenceTest testCreateSession None]', 2), ('[com.android.cts.device.blob.DataPersistenceTest testOpenSessionAndWrite None]', 2), ('[com.android.cts.device.blob.DataPersistenceTest testCommitSession None]', 2), ('[com.android.cts.device.blob.DataCleanupTest testCreateSession None]', 2), ('[com.android.cts.device.blob.DataCleanupTest testOpenSession None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testOpenReadWriteSession None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testOpenSessionAndAbandon None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testCloseSession None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testAllowPackageAccess_abandonedSession None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testSessionCommit None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testSessionCommit_incompleteData None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testSessionCommit_incorrectData None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testSessionCommit_largeBlob None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testCommitSession_multipleReadWrites None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testOpenBlob None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testStorageAttributedToSelf None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testCommitBlobAfterIdleMaintenance None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testExpiredSessionsDeleted_withPartialData None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testAllowPackageAccess_countLimitExceeded None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testBlobHandleCreation None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testAllowSameSignatureAccess None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testMixedAccessType None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testMixedAccessType_fromMultiplePackages None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testAllowPackageAccess None]', 2), ('[com.android.cts.blob.BlobStoreManagerTest testAllowPublicAccess None]', 2), ('[com.android.server.cts.device.statsd.AtomTests testBlobStore None]', 1), ('[com.android.cts.blob.BlobStoreManagerTest testAcquireLease_multipleLeasees None]', 1), ('[com.android.cts.appsearch.app.GlobalSearchSessionPlatformCtsTest testAllowPackageAccess None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/BlobStore/src/com/android/cts/blob/BlobStoreManagerTest.java', 29), ('/home/gpoor/cts-source/cts/tests/BlobStore/src/com/android/cts/blob/BlobStoreManagerTest.java', 28), ('/home/gpoor/cts-12-source/cts/hostsidetests/blobstore/test-apps/BlobStoreHostTestHelper/src/com/android/cts/device/blob/DataCleanupTest.java', 8), ('/home/gpoor/cts-source/cts/hostsidetests/blobstore/test-apps/BlobStoreHostTestHelper/src/com/android/cts/device/blob/DataCleanupTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/blobstore/test-apps/BlobStoreHostTestHelper/src/com/android/cts/device/blob/DataPersistenceTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/blobstore/test-apps/BlobStoreHostTestHelper/src/com/android/cts/device/blob/DataPersistenceTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/apps/statsdapp/src/com/android/server/cts/device/statsd/AtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/appsearch/src/com/android/cts/appsearch/app/GlobalSearchSessionPlatformCtsTest.java', 1)]"	"[('(3,BlobStoreManager.session,/com/android/cts/device/blob/DataPersistenceTest.java)', 2), ('(27,BlobStoreManager.session,/com/android/cts/blob/BlobStoreManagerTest.java)', 2), ('(6,allowSameSignatureAccess(),/com/android/cts/blob/BlobStoreManagerTest.java)', 2), ('(1,allowPackageAccess(),/com/android/cts/blob/BlobStoreManagerTest.java)', 2), ('(3,BlobStoreManager.session,/com/android/cts/device/blob/DataCleanupTest.java)', 1), ('(1,allowPublicAccess(),/com/android/cts/device/blob/DataCleanupTest.java)', 1), ('(7,allowPublicAccess(),/com/android/cts/blob/BlobStoreManagerTest.java)', 1), ('(1,BlobStoreManager.session,/com/android/server/cts/device/statsd/AtomTests.java)', 1), ('(4,BlobStoreManager.session,/com/android/cts/device/blob/DataCleanupTest.java)', 1), ('(2,allowSameSignatureAccess(),/com/android/cts/device/blob/DataCleanupTest.java)', 1), ('(2,allowPublicAccess(),/com/android/cts/device/blob/DataCleanupTest.java)', 1), ('(8,allowPublicAccess(),/com/android/cts/blob/BlobStoreManagerTest.java)', 1), ('(1,allowPackageAccess(),/com/android/cts/appsearch/app/GlobalSearchSessionPlatformCtsTest.java)', 1)]"	"[('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[essAllowed());            }        } finally {            blobData.delete();        }    }   ])', 4), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[ctSuccess */);            }        } finally {            blobData.delete();        }    }   ])', 4), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[rifyBlob(pfd);            }        } finally {            blobData.delete();        }    }   ])', 4), ('([1:/com/android/cts/device/blob/DataPersistenceTest.java]:[BlobStoreManager.session]:[1]:method_text:[UT_WAIT_FOR_IDLE_MS),                Exception.class, android.Manifest.permission.DUMP);    }   ])', 2), ('([1:/com/android/cts/device/blob/DataPersistenceTest.java]:[BlobStoreManager.session]:[1]:method_text:[BYTES,                    blobData.getFileSize() - PARTIAL_FILE_LENGTH_BYTES);        }    }   ])', 2), ('([1:/com/android/cts/device/blob/DataPersistenceTest.java]:[BlobStoreManager.session]:[1]:method_text:[_COMMIT_CALLBACK_MS, TimeUnit.MILLISECONDS))                    .isEqualTo(0);        }    }   ])', 2), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[BlobStoreManager.session]:[1]:method_text:[ssion, 0, PARTIAL_FILE_LENGTH_BYTES);        }        addSessionIdToResults(sessionId);    }   ])', 2), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[BlobStoreManager.session]:[1]:method_text:[            assertThat(session.getSize()).isEqualTo(PARTIAL_FILE_LENGTH_BYTES);        }    }   ])', 2), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[BlobStoreManager.session]:[1]:method_text:[       .isEqualTo(0);        }        addBlobHandleToResults(blobData.getBlobHandle());    }   ])', 2), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[allowPublicAccess()]:[1]:method_text:[       .isEqualTo(0);        }        addBlobHandleToResults(blobData.getBlobHandle());    }   ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[BlobHandle());            }        } finally {            blobData.delete();        }    }   ])', 2), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[2]:method_text:[kg(sessionId, HELPER_PKG2));        } finally {            blobData.delete();        }    }   ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[ger.openSession(sessionId));        } finally {            blobData.delete();        }    }   ])', 2), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[2]:method_text:[ssion.close();            }        } finally {            blobData.delete();        }    }   ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[.getBytes()));            }        } finally {            blobData.delete();        }    }   ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[rite(0L, 0L));            }        } finally {            blobData.delete();        }    }   ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[esults.add(result);            }        }        assertThat(invalidResults).isEmpty();    }   ])', 2), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[2]:method_text:[ze());            commitSession(sessionId, session, blobData.getBlobHandle());        }    }   ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[;        }, Pair.create(KEY_SESSION_EXPIRY_TIMEOUT_MS, String.valueOf(waitDurationMs)));    }   ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[    }        }, Pair.create(KEY_MAX_BLOB_ACCESS_PERMITTED_PACKAGES, String.valueOf(1)));    }   ])', 2), ('([4:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[4]:method_text:[) {            mCommandReceiver = null;            mContext.unbindService(this);        }    }}])', 2), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[2]:method_text:[cess(blobData, HELPER_PKG3);        } finally {            blobData.delete();        }    }   ])', 2), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[2]:method_text:[essAllowed());            }        } finally {            blobData.delete();        }    }   ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[1]:method_text:[cess(blobData, HELPER_PKG3);        } finally {            blobData.delete();        }    }   ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[1]:method_text:[1.unbind();            connection2.unbind();            connection3.unbind();        }    }   ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPackageAccess()]:[1]:method_text:[cess(blobData, HELPER_PKG3);        } finally {            blobData.delete();        }    }   ])', 2), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[2]:method_text:[kg(sessionId, HELPER_PKG2));        } finally {            blobData.delete();        }    }   ])', 2), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[2]:method_text:[cess(blobData, HELPER_PKG3);        } finally {            blobData.delete();        }    }   ])', 2), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[2]:method_text:[essAllowed());            }        } finally {            blobData.delete();        }    }   ])', 2), ('([3:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[3]:method_text:[ForUid.getDataBytes() - beforeStatsForUid.getDataBytes())                .isEqualTo(0L);    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[    .isEqualTo(0L);        } finally {            serviceConnection.unbind();        }    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[1]:method_text:[    .isEqualTo(0L);        } finally {            serviceConnection.unbind();        }    }   ])', 1), ('([1:/com/android/server/cts/device/statsd/AtomTests.java]:[BlobStoreManager.session]:[1]:method_text:[   callback.get(BLOB_COMMIT_CALLBACK_TIMEOUT_SEC, TimeUnit.SECONDS)).isEqualTo(0);        }    }}])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[BlobStoreManager.session]:[1]:method_text:[egistry.getArguments();        return ""1"".equals(args.getString(KEY_ALLOW_SAME_SIGNATURE));    }}])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[allowSameSignatureAccess()]:[1]:method_text:[       .isEqualTo(0);        }        addBlobHandleToResults(blobData.getBlobHandle());    }   ])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[allowSameSignatureAccess()]:[1]:method_text:[egistry.getArguments();        return ""1"".equals(args.getString(KEY_ALLOW_SAME_SIGNATURE));    }}])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[allowPublicAccess()]:[1]:method_text:[egistry.getArguments();        return ""1"".equals(args.getString(KEY_ALLOW_SAME_SIGNATURE));    }}])', 1), ('([3:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[3]:method_text:[(0L,                afterStatsForUid.getDataBytes() - beforeStatsForUid.getDataBytes());    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[id.getDataBytes());        } finally {            serviceConnection.unbind();        }    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[1]:method_text:[inally {            blobData.delete();            serviceConnection.unbind();        }    }   ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[1]:method_text:[id.getDataBytes());        } finally {            serviceConnection.unbind();        }    }   ])', 1), ('([1:/com/android/cts/appsearch/app/GlobalSearchSessionPlatformCtsTest.java]:[allowPackageAccess()]:[1]:method_text:[ assertPackageCanAccess(EMAIL_DOCUMENT, PKG_A);        assertPackageCannotAccess(PKG_B);    }   ])', 1)]"	""	""	""	""	""
"262:730795) 9.8.9  . Installed apps"	"9.8.9"	"C-0-1"	""	""	""	""	""	"9.8.9/C-0-1"	"""C-0-1] MUST NOT expose to any app targeting API level 30 or above details about any other installed app, unless the app is already able to see details about the other installed app through the managed APIs. This includes but is not limited to details exposed by any custom APIs added by the device implementer, or accessible via the filesystem."""	"09080900.670001"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"270:744174) 9.9.3  . Encryption Methods"	"9.9.3"	"C-1-14"	""	"[('android.appsecurity.cts.DirectBootHostTest', 10), ('android.appsecurity.cts.AppDataIsolationTests', 6), ('com.android.cts.devicepolicy.ManagedProfilePasswordTest', 5), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 2), ('com.android.cts.userspacereboot.host.UserspaceRebootHostTest', 2), ('android.uirendering.cts.testclasses.ColorFilterAlphaTest', 2), ('android.view.inputmethod.cts.InputMethodInfoTest', 2), ('android.security.cts.Poc17_09', 2), ('android.renderscript.cts.generated.TestNativeExp', 1), ('android.location.cts.gnss.GnssMeasurementWhenNoLocationTest', 1), ('android.text.cts.FontCoverageTest', 1), ('android.net.ipsec.ike.cts.IkeSessionDigitalSignatureTest', 1), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 1), ('android.hdmicec.cts.audio.HdmiCecSystemAudioModeTest', 1), ('android.renderscript.cts.generated.TestCross', 1), ('android.keystore.cts.CipherTest', 1), ('android.net.ipsec.ike.cts.IkeSessionMschapV2Test', 1), ('android.net.cts.Ikev2VpnTest', 1), ('com.android.cts.managedprofile.ResetPasswordWithTokenTest', 1), ('android.renderscript.cts.generated.TestMad', 1), ('android.provider.cts.contacts.hostside.ShadowCallLogTest', 1), ('android.keystore.cts.SignatureTest', 1), ('android.content.cts.ContextTest', 1), ('android.graphics.cts.ColorTest', 1)]"	"[('destroy', 86), ('toString', 61), ('getDevice', 35), ('StringBuilder', 20), ('tearDown', 14), ('setUp', 13), ('ArgumentsFloatFloat', 4), ('ArgumentsHalfHalf', 4), ('build', 4), ('createMultiRectBitmap', 4), ('Paint', 4), ('ArgumentsFloatFloatFloatFloat', 4), ('ArgumentsHalfHalfHalfHalf', 4), ('getInstrumentation', 3), ('getAbi', 2), ('getBuild', 2), ('Builder', 2), ('getHostAddress', 2), ('buildIkeSaProposalWithNormalModeCipher', 2), ('buildIkeSaProposalWithCombinedModeCipher', 2), ('reboot', 2), ('ArgumentsFloatNFloatNFloatN', 2), ('ArgumentsHalfNHalfNHalfN', 2), ('configs', 2), ('getActivity', 2), ('getWindow', 2), ('CanvasClient', 2), ('getContext', 2), ('getBytes', 2), ('checkNativeExpFloatFloat', 1), ('checkNativeExpFloat2Float2', 1), ('checkNativeExpFloat3Float3', 1), ('checkNativeExpFloat4Float4', 1), ('checkNativeExpHalfHalf', 1), ('checkNativeExpHalf2Half2', 1), ('checkNativeExpHalf3Half3', 1), ('checkNativeExpHalf4Half4', 1), ('HashMap', 1), ('toLanguageTag', 1), ('setUpCertsBeforeClass', 1), ('cect_11_2_15_6_SystemAudioModeOffBeforeStandby', 1), ('sendSystemAudioModeInitiation', 1), ('checkCrossFloat3Float3Float3', 1), ('checkCrossFloat4Float4Float4', 1), ('checkCrossHalf3Half3Half3', 1), ('checkCrossHalf4Half4Half4', 1), ('supports3DES', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('setUpCertBeforeClass', 1), ('getSimpleName', 1), ('checkMadFloatFloatFloatFloat', 1), ('checkMadFloat2Float2Float2Float2', 1), ('checkMadFloat3Float3Float3Float3', 1), ('checkMadFloat4Float4Float4Float4', 1), ('checkMadHalfHalfHalfHalf', 1), ('checkMadHalf2Half2Half2Half2', 1), ('checkMadHalf3Half3Half3Half3', 1), ('checkMadHalf4Half4Half4Half4', 1), ('resourceColor', 1), ('getTargetContext', 1), ('getResources', 1), ('TypedValue', 1), ('getDeclaredFields', 1), ('getDeclaredAnnotations', 1), ('getName', 1)]"	""	""	"9.9.3/C-1-14"	"""C-1-14] MUST NOT use the same File Based Encryption (FBE) keys or subkeys for different cryptographic purposes (e.g. for both encryption and key derivation, or for two different encryption algorithms)."""	"09090300.670114"	"FBE"	""	""	""	"[('FBE', 47)]"	""	"[('[android.appsecurity.cts.DirectBootHostTest testAutomotiveNativeFbe None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNative None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootEmulated None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNone None]', 2), ('[com.android.cts.userspacereboot.host.UserspaceRebootHostTest testOnlyFbeDevicesSupportUserspaceReboot None]', 2), ('[android.appsecurity.cts.AppDataIsolationTests testDirectBootModeWorks None]', 2), ('[android.view.inputmethod.cts.InputMethodInfoTest testAtLeastOneEncryptionAwareInputMethodIsAvailable None]', 2), ('[android.security.cts.Poc17_09 testPocCve_2017_6983 None]', 2), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDirApi29 None]', 1), ('[android.location.cts.gnss.GnssMeasurementWhenNoLocationTest testGnssMeasurementWhenNoLocation None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testLockNowWithKeyEviction None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testResetPasswordWithTokenBeforeUnlock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testClearPasswordWithTokenBeforeUnlock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testResetPasswordTokenUsableAfterClearingLock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testUnlockWorkProfile_deviceWidePassword None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest testIkeAuthHandlesFirstChildCreationFail None]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppAbleToAccessItsDataAfterReboot None]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked None]', 1), ('[android.net.cts.Ikev2VpnTest Ikev2VpnTest None]', 1), ('[android.provider.cts.contacts.hostside.ShadowCallLogTest testDirectBootCallLog None]', 1), ('[android.content.cts.ContextTest testGetText None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeExp.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/userspacereboot/src/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestCross.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionMschapV2Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/Ikev2VpnTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestMad.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/calllog/src/android/provider/cts/contacts/hostside/ShadowCallLogTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/SignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_09.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/userspacereboot/src/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ContextTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/ColorTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_09.java', 1)]"	"[('(1,FBE,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 2), ('(17,FBE,/android/appsecurity/cts/DirectBootHostTest.java)', 2), ('(1,FBE,/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java)', 2), ('(12,FBE,/android/appsecurity/cts/AppDataIsolationTests.java)', 2), ('(1,FBE,/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java)', 2), ('(5,FBE,/android/view/inputmethod/cts/InputMethodInfoTest.java)', 2), ('(8,FBE,/android/security/cts/Poc17_09.java)', 2), ('(1,FBE,/android/renderscript/cts/generated/TestNativeExp.java)', 1), ('(4,FBE,/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java)', 1), ('(2,FBE,/android/text/cts/FontCoverageTest.java)', 1), ('(1,FBE,/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java)', 1), ('(5,FBE,/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java)', 1), ('(1,FBE,/android/net/ipsec/ike/cts/IkeSessionPskTest.java)', 1), ('(1,FBE,/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java)', 1), ('(1,FBE,/android/renderscript/cts/generated/TestCross.java)', 1), ('(2,FBE,/android/keystore/cts/CipherTest.java)', 1), ('(1,FBE,/android/net/ipsec/ike/cts/IkeSessionMschapV2Test.java)', 1), ('(1,FBE,/android/net/cts/Ikev2VpnTest.java)', 1), ('(1,FBE,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(2,FBE,/android/renderscript/cts/generated/TestMad.java)', 1), ('(8,FBE,/android/provider/cts/contacts/hostside/ShadowCallLogTest.java)', 1), ('(1,FBE,/android/keystore/cts/SignatureTest.java)', 1), ('(2,FBE,/android/content/cts/ContextTest.java)', 1), ('(3,FBE,/android/graphics/cts/ColorTest.java)', 1)]"	"[('([1:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[1]:method_text:[allPackage(OTHER_PKG);    }    /**     * Automotive devices MUST support native FBE.     */   ])', 2), ('([4:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[4]:method_text:[equals(getFbeMode()));    }    /**     * If device has native FBE, verify lifecycle.     */   ])', 2), (""([3:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[3]:method_text:[    /**     * If device doesn't have native FBE, enable emulation and verify lifecycle.     */   ])"", 2), (""([3:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[3]:method_text:[ATED);    }    /**     * If device doesn't have native FBE, verify normal lifecycle.     */   ])"", 2), ('([6:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[6]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 2), ('([1:/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java]:[FBE]:[1]:method_text:[reboot {@code     * PowerManager.isRebootingUserspaceSupported()} returns {@code true}.     */   ])', 2), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[          }                getDevice().waitForDeviceAvailable();            }        }    }   ])', 2), ('([1:/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java]:[FBE]:[1]:method_text:[R_COLOR, mConfig.mode));            canvas.drawBitmap(mBitmap, 0, 0, mPaint);        }    };   ])', 2), ('([8:/android/security/cts/Poc17_09.java]:[FBE]:[8]:method_text:[                             )==139);    }    /**     * b/38195738     * b/36590192     */   ])', 2), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[FBE]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([1:/android/renderscript/cts/generated/TestNativeExp.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[FBE]:[1]:method_text:[ getDevice().executeShellCommand(""input keyevent 3"");        }        super.tearDown();    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[2]:method_text:[  getDevice().uninstallPackage(APPA_PKG);        getDevice().uninstallPackage(APPB_PKG);    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[    return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }}])', 1), ('([4:/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java]:[FBE]:[4]:method_text:[ {                TestUtils.setAirplaneModeOn(getContext(), false);            }        }    }}])', 1), ('([2:/android/text/cts/FontCoverageTest.java]:[FBE]:[2]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java]:[FBE]:[1]:method_text:[ecutor,                mIkeSessionCallback,                mFirstChildSessionCallback);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[        changeUserCredential(TEST_PASSWORD, null, mProfileUserId);        lockProfile();    }   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[erifyUserCredential(RESET_PASSWORD_TEST_DEFAULT_PASSWORD, mProfileUserId);    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[nified work challenge and the primary user clears     * the device lock.     */    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[    executeShellCommand(""input keyevent KEYCODE_WAKEUP"");        }    }    @LockSettingsTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[_PASSWORD, mPrimaryUserId);        }    }    @FlakyTest    @LargeTest    @LockSettingsTest   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[FBE]:[1]:method_text:[on.getErrorData());        ikeSession.kill();        mIkeSessionCallback.awaitOnClosed();    }}])', 1), ('([1:/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java]:[FBE]:[1]:method_text:[ly to a <Give System Audio Mode Status>    * message when the System Audio Mode is ""Off"".    */  ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[2]:method_text:[rows Exception {        getDevice().reboot();        waitForBootCompleted(getDevice());    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[ return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }   ])', 1), ('([1:/android/renderscript/cts/generated/TestCross.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/android/keystore/cts/CipherTest.java]:[FBE]:[2]:method_text:[ortsLockAndUnlock() {            return supportsInsecureLock();        }    }    @Presubmit   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionMschapV2Test.java]:[FBE]:[1]:method_text:[ecutor,                mIkeSessionCallback,                mFirstChildSessionCallback);    }   ])', 1), ('([1:/android/net/cts/Ikev2VpnTest.java]:[FBE]:[1]:method_text:[EST_MTU, profile.getMaxMtu());        assertFalse(profile.isRestrictedToTestNetworks());    }   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[FBE]:[5]:method_text:[rim() : """";            }        } catch (IOException e) {            return """";        }    }}])', 1), ('([1:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[FBE]:[1]:method_text:[ordBeforeUnlock} and will be called by the hostside logic     * before it is exercised.     */   ])', 1), ('([2:/android/renderscript/cts/generated/TestMad.java]:[FBE]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([8:/android/provider/cts/contacts/hostside/ShadowCallLogTest.java]:[FBE]:[8]:method_text:[ != null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([1:/android/keystore/cts/SignatureTest.java]:[FBE]:[1]:method_text:[e7a42b1ddff0c""));    }    private static final long DAY_IN_MILLIS = TestUtils.DAY_IN_MILLIS;   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[FBE]:[5]:method_text:[() : """";            }        } catch (IOException e) {            return """";        }    }   ])', 1), ('([2:/android/content/cts/ContextTest.java]:[FBE]:[2]:method_text:[ that apps can go through a     * backup/restore cycle between FBE and non-FBE devices.     */   ])', 1), ('([3:/android/graphics/cts/ColorTest.java]:[FBE]:[3]:method_text:[sync with colors in android.R.color"",                colors.length, numPublicApiColors);    }   ])', 1)]"	""	""	""	""	""
"271:745962) 9.9.4  . Resume on Reboot"	"9.9.4"	"C-0-1"	""	"[('android.hardware.camera2.cts.CaptureRequestTest', 30), ('test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest', 21), ('android.mediav2.cts.MuxerUnitTest', 15), ('android.fragment.cts.FragmentTransitionTest', 15), ('android.content.res.cts.ConfigTest', 14), ('android.media.cts.PresetReverbTest', 6), ('android.view.cts.FrameMetricsListenerTest', 5), ('android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest', 4), ('android.graphics.cts.VulkanPreTransformTest', 3), ('android.security.cts.FileSystemPermissionTest', 3), ('android.security.cts.PerfEventParanoidTest', 3), ('android.graphics.cts.BasicVulkanGpuTest', 2), ('android.provider.cts.media.MediaStorePlacementTest', 2), ('android.hdmicec.cts.playback.HdmiCecStartupTest', 2), ('com.android.cts.usb.TestUsbTest', 2), ('com.android.cts.verifier.sensors.MotionIndicatorView', 2), ('com.android.cts.dexmetadata.InstallDexMetadataTest', 2), ('android.server.wm.AmProfileTests', 2), ('android.permission.cts.BackgroundPermissionsTest', 1), ('com.android.compatibility.common.util.DeviceReportTest', 1), ('android.renderscript.cts.generated.TestNativeExp', 1), ('android.view.cts.ViewConfigurationTest', 1), ('android.renderscript.cts.generated.TestErfc', 1), ('android.widget.cts.DatePickerDialogTest', 1), ('android.contentcaptureservice.cts.unit.ContentCaptureConditionTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi25', 1), ('android.util.cts.LruCacheTest', 1), ('com.android.cts.packagemanager.preferredactivity.host.PreferredActivityTests', 1), ('android.database.sqlite.cts.SQLiteQueryTest', 1), ('FullBackupOnlyTest', 1), ('android.permission.cts.NoActivityRelatedPermissionTest', 1)]"	"[('destroy', 52), ('toString', 50), ('waitForTransition', 35), ('findBlue', 30), ('size', 30), ('setUp', 26), ('findGreen', 23), ('getValue', 20), ('StringBuilder', 16), ('tearDown', 15), ('TransitionFragment', 15), ('setupInitialFragment', 14), ('beginTransaction', 14), ('commit', 13), ('capture', 12), ('ArgumentsFloatFloat', 8), ('ArgumentsHalfHalf', 8), ('getDevice', 8), ('any', 8), ('getActivity', 6), ('getTargets', 6), ('getEpicenterCallback', 6), ('findRed', 6), ('data', 5), ('getTargetContext', 4), ('clear', 4), ('SharedElementCallback', 4), ('popBackStack', 4), ('TrackingTransition', 4), ('getInstrumentation', 3), ('setup', 3), ('ContentValues', 2), ('Bundle', 2), ('getSharedVolumeNames', 2), ('getContentResolver', 2), ('build', 2), ('getName', 2), ('DeviceState', 2), ('activities', 2), ('packages', 2), ('packageName', 2), ('resolve', 2), ('installedOnUsers', 2), ('Runnable', 2), ('run', 2), ('ComplexTransitionFragment', 2), ('getView', 2), ('getCapturedEpicenter', 2), ('TransitionSet', 2), ('setupFiles', 2), ('newTheme', 2), ('recycle', 2), ('TotalConfig', 2), ('Configuration', 2), ('getSimpleName', 1), ('getUiAutomation', 1), ('checkNativeExpFloatFloat', 1), ('checkNativeExpFloat2Float2', 1), ('checkNativeExpFloat3Float3', 1), ('checkNativeExpFloat4Float4', 1), ('checkNativeExpHalfHalf', 1), ('checkNativeExpHalf2Half2', 1), ('checkNativeExpHalf3Half3', 1), ('checkNativeExpHalf4Half4', 1), ('cectVerifyStartupMessages', 1), ('trim', 1), ('getDeviceTypeString', 1), ('checkErfcFloatFloat', 1), ('checkErfcFloat2Float2', 1), ('checkErfcFloat3Float3', 1), ('checkErfcFloat4Float4', 1), ('checkErfcHalfHalf', 1), ('checkErfcHalf2Half2', 1), ('checkErfcHalf3Half3', 1), ('checkErfcHalf4Half4', 1), ('user_returnsUserReference', 1), ('user', 1), ('activities_any_returnsActivity', 1), ('uninstall_uninstalls', 1), ('uninstall', 1), ('autoclose_uninstalls', 1), ('keepAlive_notInstalled_throwsException', 1), ('stop_previouslyCalledKeepAlive_processDoesNotRestart', 1), ('start', 1), ('keepAlive', 1), ('stop', 1), ('reference', 1), ('runningProcesses', 1), ('waitForIdleSync', 1), ('enterExitTransitions', 1), ('sharedElement', 1), ('intermediateFragment', 1), ('removeAdded', 1), ('callStartEndWithSharedElements', 1), ('onMapSharedElementOut', 1), ('onMapSharedElementIn', 1), ('complexSharedElementTransition', 1), ('transitionsEndUnchanged', 1), ('showHideTransition', 1), ('attachDetachTransition', 1), ('sharedDuplicateTargetNames', 1), ('noSharedElementTransition', 1), ('getTrackedTargets', 1), ('stream', 1), ('clearTargets', 1), ('getWidth', 1), ('getHeight', 1), ('getFragmentManager', 1), ('getFilesDir', 1), ('setUpClass', 1), ('tearDownClass', 1)]"	""	""	"9.9.4/C-0-1"	"""C-0-1] CE storage MUST NOT be readable even for the attacker who physically has the device and then has these capabilities and limitations: Can use the signing key of any vendor or company to sign arbitrary messages. Can cause an OTA to be received by the device. Can modify the operation of any hardware (AP, flash etc) except as detailed below, but such modification involves a delay of at least an hour and a power cycle that destroys RAM contents. Cannot modify the operation of tamper-resistant hardware (eg Titan M). Cannot read the RAM of the live device. Cannot obtain the user’s credential (PIN, pattern, password) or otherwise cause it to be entered. By way of example, a device implementation that implements and complies with all of the descriptions found here will be compliant with && C-0-1] CE storage MUST NOT be readable even for the attacker who physically has the device and then has these capabilities and limitations: Can use the signing key of any vendor or company to sign arbitrary messages. Can cause an OTA to be received by the device. Can modify the operation of any hardware (AP, flash etc) except as detailed below, but such modification involves a delay of at least an hour and a power cycle that destroys RAM contents. Cannot modify the operation of tamper-resistant hardware (eg Titan M). Cannot read the RAM of the live device. Cannot obtain the user’s credential (PIN, pattern, password) or otherwise cause it to be entered. By way of example, a device implementation that implements and complies with all of the descriptions found here will be compliant with | C-0-1]. <h3 id=""910_device_integrity"" """	"09090400.670001"	"PIN RAM OTA"	""	""	""	"[('PIN', 61), ('RAM', 46), ('OTA', 40)]"	""	"[('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 3), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest cleanUpTestImes None]', 2), ('[android.graphics.cts.VulkanPreTransformTest testVulkanPreTransformSetToMatchCurrentTransform None]', 2), ('[android.hardware.camera2.cts.CaptureRequestTest testLensShadingMap None]', 2), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashTurnOff None]', 2), ('[com.android.cts.verifier.sensors.MotionIndicatorView testUI None]', 2), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest TestApis None]', 2), ('[android.view.cts.FrameMetricsListenerTest testDropCount None]', 2), ('[android.security.cts.PerfEventParanoidTest testPerfEventRestricted None]', 2), ('[android.content.res.cts.ConfigTest DisplayMetrics None]', 2), ('[android.content.res.cts.ConfigTest testNewScreenSize None]', 2), ('[android.permission.cts.BackgroundPermissionsTest uninstallTestApp None]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testInputUnbindsOnAppStopInstant None]', 1), ('[android.inputmethodservice.cts.hostside.InputMethodServiceLifecycleTest testImeVisibilityAfterImeSwitchingInstant None]', 1), ('[android.hdmicec.cts.playback.HdmiCecStartupTest HdmiCecStartupTest None]', 1), ('[android.hdmicec.cts.playback.HdmiCecStartupTest isEmpty None]', 1), ('[android.view.cts.ViewConfigurationTest testExceptionsThrown None]', 1), ('[android.graphics.cts.VulkanPreTransformTest testVulkanPreTransformNotSetToMatchCurrentTransform None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAeModeAndLock None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFaceDetection None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testToneMapControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testColorCorrectionControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testEdgeModeControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testEdgeModeControlFastFps None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFocusDistanceControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testNoiseReductionModeControl None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testNoiseReductionModeControlFastFps None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAwbModeAndLock None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAfModes None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testCameraStabilizations None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testDigitalZoom None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testZoomRatio None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testDigitalZoomPreviewCombinations None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testEffectModes None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testSettingsBinderParcel None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testBlackLevelLock None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAntiBandingModes None]', 1), ('[com.android.cts.usb.TestUsbTest CollectingTestListener None]', 1), ('[com.android.cts.usb.TestUsbTest testUsbSerialReadOnDeviceMatches None]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testDvbsFrontendSettings None]', 1), ('[android.media.cts.PresetReverbTest test0_0ConstructorAndRelease None]', 1), ('[android.media.cts.PresetReverbTest test1_0Presets None]', 1), ('[android.media.cts.PresetReverbTest test1_1Properties None]', 1), ('[android.media.cts.PresetReverbTest test3_1EnableStatusListener None]', 1), ('[android.media.cts.PresetReverbTest test3_2ParameterChangedListener None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi25 removeTestUsers None]', 1), ('[android.util.cts.LruCacheTest testConstructorDoesNotAllowZeroCacheSize None]', 1), ('[android.security.cts.FileSystemPermissionTest testDevHwRandomPermissions None]', 1), ('[android.security.cts.FileSystemPermissionTest testAllBlockDevicesAreSecure None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIdempotentRelease None]', 1), ('[android.mediav2.cts.MuxerUnitTest TestName None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfAddTrackSucceedsAfterWriteSampleData None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfAddTrackSucceedsAfterStop None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfMuxerStartsAfterWriteSampleData None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfMuxerStartsAfterStop None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIdempotentStop None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfWriteSampleDataRejectsInvalidTrackIndex None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfWriteSampleDataRejectsNullByteBuffer None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfWriteSampleDataRejectsNullBuffInfo None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfWriteSampleDataRejectsInvalidBuffInfo None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfWriteSampleDataRejectsInvalidPts None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfWriteSampleDataSucceedsBeforeStart None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfWriteSampleDataSucceedsAfterStop None]', 1), ('[android.mediav2.cts.MuxerUnitTest testIfWriteSampleDataSucceedsAfterRelease None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest testApp_returnsTestApp None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest isNotNull None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest killProcess_keepAlive_processIsRunningAgain None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest stop_processIsNotRunning None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest isEmpty None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest process_isNotRunning_returnsNull None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest process_isRunning_isNotNull None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_receivesBroadcast None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_multipleIntentFilters_receivesAllMatchingBroadcasts None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_processIsRunning None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest stop_registeredReceiver_doesNotReceiveBroadcast None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest unregisterReceiver_registeredReceiver_doesNotReceiveBroadcast None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest unregisterReceiver_doesNotUnregisterOtherReceivers None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest keepAlive_processIsRunning None]', 1), ('[test.java.com.android.bedstead.testapp.TestAppInstanceReferenceTest registerReceiver_appIsKilled_stillReceivesBroadcast None]', 1), ('[android.view.cts.FrameMetricsListenerTest testReceiveData None]', 1), ('[android.view.cts.FrameMetricsListenerTest testMultipleListeners None]', 1), ('[com.android.cts.dexmetadata.InstallDexMetadataTest testNoDm None]', 1), ('[android.fragment.cts.FragmentTransitionTest getVisibility None]', 1), ('[android.fragment.cts.FragmentTransitionTest sharedElementMismatch None]', 1), ('[android.fragment.cts.FragmentTransitionTest OnBackStackChangedListener None]', 1), ('[android.server.wm.AmProfileTests testAmStartStartProfilerSamplingStreaming None]', 1), ('[android.permission.cts.NoActivityRelatedPermissionTest NoActivityRelatedPermissionTest None]', 1), ('[android.content.res.cts.ConfigTest testAllEmptyConfigs None]', 1), ('[android.content.res.cts.ConfigTest testAllClassicConfigs None]', 1), ('[android.content.res.cts.ConfigTest testDensity None]', 1), ('[android.content.res.cts.ConfigTest testScreenSize None]', 1), ('[android.content.res.cts.ConfigTest testPrecedence None]', 1), ('[android.content.res.cts.ConfigTest testCombinations None]', 1), ('[android.content.res.cts.ConfigTest testNormalLocales None]', 1), ('[android.content.res.cts.ConfigTest testExtendedLocales None]', 1), ('[android.content.res.cts.ConfigTest testTlAndFilConversion None]', 1), ('[android.content.res.cts.ConfigTest testGetLocalesConvertsTlToFil None]', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 30), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/testapp/src/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java', 21), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/MuxerUnitTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/FragmentTransitionTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 14), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresetReverbTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/FrameMetricsListenerTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/inputmethodservice/hostside/src/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanPreTransformTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/FileSystemPermissionTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/PerfEventParanoidTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/playback/HdmiCecStartupTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/usb/src/com/android/cts/usb/TestUsbTest.java', 2), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MotionIndicatorView.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/dexmetadata/app/src/com/android/cts/dexmetadata/InstallDexMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AmProfileTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/BackgroundPermissionsTest.java', 1), ('/home/gpoor/cts-source/cts/common/device-side/util-axt/tests/src/com/android/compatibility/common/util/DeviceReportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePlacementTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeExp.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestErfc.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/DatePickerDialogTest.java', 1), ('/home/gpoor/cts-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/unit/ContentCaptureConditionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePlacementTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/LruCacheTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/preferredactivity/src/com/android/cts/packagemanager/preferredactivity/host/PreferredActivityTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/sqlite/cts/SQLiteQueryTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/FullBackupOnly/src/FullBackupOnlyTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/NoActivityRelatedPermissionTest.java', 1)]"	"[('(8,RAM,/android/provider/cts/media/MediaStorePlacementTest.java)', 2), ('(1,OTA,/android/permission/cts/BackgroundPermissionsTest.java)', 1), ('(5,RAM,/android/graphics/cts/BasicVulkanGpuTest.java)', 1), ('(1,OTA,/android/graphics/cts/BasicVulkanGpuTest.java)', 1), ('(1,RAM,/com/android/compatibility/common/util/DeviceReportTest.java)', 1), ('(1,PIN,/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java)', 1), ('(7,RAM,/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java)', 1), ('(2,OTA,/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java)', 1), ('(1,RAM,/android/renderscript/cts/generated/TestNativeExp.java)', 1), ('(3,OTA,/android/hdmicec/cts/playback/HdmiCecStartupTest.java)', 1), ('(1,RAM,/android/view/cts/ViewConfigurationTest.java)', 1), ('(1,RAM,/android/renderscript/cts/generated/TestErfc.java)', 1), ('(11,OTA,/android/graphics/cts/VulkanPreTransformTest.java)', 1), ('(1,OTA,/android/widget/cts/DatePickerDialogTest.java)', 1), ('(40,PIN,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(239,RAM,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(7,OTA,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,OTA,/android/contentcaptureservice/cts/unit/ContentCaptureConditionTest.java)', 1), ('(6,OTA,/com/android/cts/usb/TestUsbTest.java)', 1), ('(2,RAM,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(29,RAM,/android/media/cts/PresetReverbTest.java)', 1), ('(1,OTA,/android/media/cts/PresetReverbTest.java)', 1), ('(3,OTA,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java)', 1), ('(1,OTA,/android/util/cts/LruCacheTest.java)', 1), ('(1,RAM,/android/security/cts/FileSystemPermissionTest.java)', 1), ('(2,OTA,/android/security/cts/FileSystemPermissionTest.java)', 1), ('(1,PIN,/android/mediav2/cts/MuxerUnitTest.java)', 1), ('(19,RAM,/android/mediav2/cts/MuxerUnitTest.java)', 1), ('(17,RAM,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(27,OTA,/com/android/cts/verifier/sensors/MotionIndicatorView.java)', 1), ('(67,PIN,/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java)', 1), ('(2,OTA,/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java)', 1), ('(84,RAM,/android/view/cts/FrameMetricsListenerTest.java)', 1), ('(4,OTA,/android/view/cts/FrameMetricsListenerTest.java)', 1), ('(2,PIN,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 1), ('(6,OTA,/com/android/cts/packagemanager/preferredactivity/host/PreferredActivityTests.java)', 1), ('(1,PIN,/android/security/cts/PerfEventParanoidTest.java)', 1), ('(3,OTA,/android/security/cts/PerfEventParanoidTest.java)', 1), ('(1,RAM,/android/database/sqlite/cts/SQLiteQueryTest.java)', 1), ('(19,PIN,/android/fragment/cts/FragmentTransitionTest.java)', 1), ('(6,RAM,/android/fragment/cts/FragmentTransitionTest.java)', 1), ('(1,OTA,/FullBackupOnlyTest.java)', 1), ('(3,RAM,/android/server/wm/AmProfileTests.java)', 1), ('(1,OTA,/android/server/wm/AmProfileTests.java)', 1), ('(1,OTA,/android/permission/cts/NoActivityRelatedPermissionTest.java)', 1), ('(2,PIN,/android/content/res/cts/ConfigTest.java)', 1), ('(1,RAM,/android/content/res/cts/ConfigTest.java)', 1), ('(18,OTA,/android/content/res/cts/ConfigTest.java)', 1)]"	"[('([1:/android/mediav2/cts/MuxerUnitTest.java]:[RAM]:[1]:method_text:[essage());            } finally {                muxer.release();            }        }       ])', 6), ('([8:/android/provider/cts/media/MediaStorePlacementTest.java]:[RAM]:[8]:method_text:[ideo.Media.getContentUri(mVolumeName);        mValues.clear();        mExtras.clear();    }   ])', 2), ('([2:/android/mediav2/cts/MuxerUnitTest.java]:[RAM]:[2]:method_text:[/ expected            } finally {                muxer.release();            }        }       ])', 2), ('([1:/android/mediav2/cts/MuxerUnitTest.java]:[RAM]:[1]:method_text:[/ expected            } finally {                muxer.release();            }        }       ])', 2), ('([2:/android/mediav2/cts/MuxerUnitTest.java]:[RAM]:[2]:method_text:[essage());            } finally {                muxer.release();            }        }       ])', 2), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[            assertThat(testApp.reference().runningProcess(sUser)).isNotNull();        }    }   ])', 2), ('([4:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[4]:method_text:[action().isEqualTo(INTENT_ACTION);            assertThat(logs.get()).isNull();        }    }   ])', 2), ('([1:/android/permission/cts/BackgroundPermissionsTest.java]:[OTA]:[1]:method_text:[mation();    @After    public void uninstallTestApp() {        uninstallApp(APP_PKG);    }   ])', 1), ('([5:/android/graphics/cts/BasicVulkanGpuTest.java]:[RAM]:[5]:method_text:[rmat;    public BasicVulkanGpuTest(String name, int format) {        mFormat = format;    }   ])', 1), ('([1:/android/graphics/cts/BasicVulkanGpuTest.java]:[OTA]:[1]:method_text:[rmat;    public BasicVulkanGpuTest(String name, int format) {        mFormat = format;    }   ])', 1), ('([1:/com/android/compatibility/common/util/DeviceReportTest.java]:[RAM]:[1]:method_text:[REAM_NAME_3 = ""SampleStream3"";    private static final String STREAM_NAME_4 = ""SampleStream4"";   ])', 1), ('([1:/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java]:[PIN]:[1]:method_text:[-instant) apps.     *     * <p>Regression test for Bug 152876819.</p>     */    @AppModeFull   ])', 1), ('([5:/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java]:[RAM]:[5]:method_text:[ }    /**     * Test IME switching APIs for full (non-instant) apps.     */    @AppModeFull   ])', 1), ('([2:/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java]:[RAM]:[2]:method_text:[           imeId + "" should be "" + (shouldBeEnabled ? ""enabled."" : ""available.""));        }    }}])', 1), ('([2:/android/inputmethodservice/cts/hostside/InputMethodServiceLifecycleTest.java]:[OTA]:[2]:method_text:[ }    /**     * Test IME switching APIs for full (non-instant) apps.     */    @AppModeFull   ])', 1), ('([1:/android/renderscript/cts/generated/TestNativeExp.java]:[RAM]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/hdmicec/cts/playback/HdmiCecStartupTest.java]:[OTA]:[1]:method_text:[ only the device only sends messages which are allowed by the spec.   */  @Ignore(""b/149519706"") ])', 1), ('([2:/android/hdmicec/cts/playback/HdmiCecStartupTest.java]:[OTA]:[2]:method_text:[permissible messages received"").        that(filter(messagesReceived, notAllowed)).isEmpty();  }}])', 1), ('([1:/android/view/cts/ViewConfigurationTest.java]:[RAM]:[1]:method_text:[e the classification. Therefore, this multiplier should be always greater or equal to 1.     */   ])', 1), ('([1:/android/renderscript/cts/generated/TestErfc.java]:[RAM]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([5:/android/graphics/cts/VulkanPreTransformTest.java]:[OTA]:[5]:method_text:[        SystemClock.sleep(2000);        mContext = InstrumentationRegistry.getContext();    }   ])', 1), ('([1:/android/graphics/cts/VulkanPreTransformTest.java]:[OTA]:[1]:method_text:[ivity.testVulkanPreTransform(true);        sActivity.finish();        sActivity = null;    }   ])', 1), ('([5:/android/graphics/cts/VulkanPreTransformTest.java]:[OTA]:[5]:method_text:[iff(bitmap.getPixel(width - 1, height - 1), 0, 255, 0);        }        return diff < 10;    }}])', 1), ('([1:/android/widget/cts/DatePickerDialogTest.java]:[OTA]:[1]:method_text:[ public void setup() {        mActivity = mActivityRule.getActivity();    }    @UiThreadTest   ])', 1), ('([4:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[4]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[anti-banding modes, check if the exposure time adjustment is     * correct.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[ test the flash control     * and {@link CaptureResult#FLASH_STATE} result.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[f given various initial and final     * AE_CONTROL modes for repeating CaptureRequests.     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[2]:method_text:[);            }        }    }    /**     * Test face detection modes and results.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[evice();            }        }    }    /**     * Test tone map modes and controls.     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[2]:method_text:[            }        }    }    /**     * Test color correction modes and controls.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[      }        }    }    /**     * Test edge mode control for Fps not exceeding 30.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[       }        }    }    /**     * Test edge mode control for Fps greater than 30.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[oseDevice();            }        }    }    /**     * Test focus distance control.     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[2]:method_text:[       }    }    /**     * Test noise reduction mode for fps ranges not exceeding 30     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[        }    }    /**     * Test noise reduction mode for fps ranges greater than 30     */   ])', 1), (""([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[ <p>The color correction gain and transform shouldn't be changed when AWB is locked.</p>     */   ])"", 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[   closeDevice();            }        }    }    /**     * Test different AF modes.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[();            }        }    }    /**     * Test video and optical stabilizations.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[validate the returned crop regions.     * The max preview size is used for each camera.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[turned crop regions and zoom ratio.     * The max preview size is used for each camera.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[ombinations.     * TODO: this and above test should all be moved to preview test class.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[  closeDevice();            }        }    }    /**     * Test scene mode controls.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[1]:method_text:[vice();            }        }    }    /**     * Test extended scene mode controls.     */   ])', 1), ('([14:/android/hardware/camera2/cts/CaptureRequestTest.java]:[PIN]:[14]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([20:/android/hardware/camera2/cts/CaptureRequestTest.java]:[RAM]:[20]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[RAM]:[3]:method_text:[ain locked after exposure     * value changes (when requests have lock ON).     * </p>     */   ])', 1), ('([5:/android/hardware/camera2/cts/CaptureRequestTest.java]:[RAM]:[5]:method_text:[ack level should be     *   close enough to the optical black level values.     * </p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/CaptureRequestTest.java]:[RAM]:[7]:method_text:[anti-banding modes, check if the exposure time adjustment is     * correct.     * </p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[RAM]:[3]:method_text:[ should satisfy the per frame controls defined in     * API specifications.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[RAM]:[1]:method_text:[);            }        }    }    /**     * Test face detection modes and results.     */   ])', 1), ('([200:/android/hardware/camera2/cts/CaptureRequestTest.java]:[RAM]:[200]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[OTA]:[1]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([6:/android/hardware/camera2/cts/CaptureRequestTest.java]:[OTA]:[6]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/contentcaptureservice/cts/unit/ContentCaptureConditionTest.java]:[OTA]:[1]:method_text:[nal int NO_FLAGS = 0;    private final LocusId mLocusId = new LocusId(""http://com.example/"");   ])', 1), ('([5:/com/android/cts/usb/TestUsbTest.java]:[OTA]:[5]:method_text:[A-Z0-9]{6,20}     */    @AppModeInstant(reason = ""only instant apps fail when reading serial"")   ])', 1), ('([1:/com/android/cts/usb/TestUsbTest.java]:[OTA]:[1]:method_text:[at() throws DeviceNotAvailableException {        mDevice.executeAdbCommand(""logcat"", ""-c"");    }}])', 1), ('([2:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[RAM]:[2]:method_text:[ls(false, cr.isShortFrameEnabled());        assertEquals(55, cr.getBitsPer1000Symbol());    }   ])', 1), ('([1:/android/media/cts/PresetReverbTest.java]:[RAM]:[1]:method_text:[- get/set parameters    //----------------------------------    //Test case 1.0: test presets   ])', 1), ('([3:/android/media/cts/PresetReverbTest.java]:[RAM]:[3]:method_text:[  } finally {            releaseReverb();        }    }    //Test case 1.1: test properties   ])', 1), ('([3:/android/media/cts/PresetReverbTest.java]:[RAM]:[3]:method_text:[------------------------    //Test case 2.0: test setEnabled() and getEnabled() in valid state   ])', 1), ('([1:/android/media/cts/PresetReverbTest.java]:[RAM]:[1]:method_text:[le status not updated"", mIsEnabled);    }    //Test case 3.2: test parameter changed listener   ])', 1), ('([21:/android/media/cts/PresetReverbTest.java]:[RAM]:[21]:method_text:[ (mReverb2 != null) {            mReverb2.release();            mReverb2 = null;        }    }}])', 1), ('([1:/android/media/cts/PresetReverbTest.java]:[OTA]:[1]:method_text:[ctor    //----------------------------------    //Test case 0.0: test constructor and release   ])', 1), ('([3:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java]:[OTA]:[3]:method_text:[moveUser(mUserId);        }        super.tearDown();    }    @Override    @PermissionsTest   ])', 1), ('([1:/android/util/cts/LruCacheTest.java]:[OTA]:[1]:method_text:[>(0);            fail();        } catch (IllegalArgumentException expected) {        }    }   ])', 1), ('([1:/android/security/cts/FileSystemPermissionTest.java]:[RAM]:[1]:method_text:[t.write(buf, 0, chunkSize);            }            return result.toByteArray();        }    }}])', 1), ('([1:/android/security/cts/FileSystemPermissionTest.java]:[OTA]:[1]:method_text:[ted void setUp() throws Exception {        super.setUp();        mDevice = getDevice();    }   ])', 1), ('([1:/android/security/cts/FileSystemPermissionTest.java]:[OTA]:[1]:method_text:[CE_ADB_COMMAND, path, type);    }    private static String HW_RNG_DEVICE = ""/dev/hw_random"";   ])', 1), ('([1:/android/mediav2/cts/MuxerUnitTest.java]:[PIN]:[1]:method_text:[       private native boolean nativeTestIfWriteSampleDataSucceedsAfterStop(String outPath);       ])', 1), ('([2:/android/mediav2/cts/MuxerUnitTest.java]:[RAM]:[2]:method_text:[taInfo.flags = 0;            muxer.writeSampleData(trackID, metaBuff, metaInfo);        }       ])', 1), ('([1:/android/mediav2/cts/MuxerUnitTest.java]:[RAM]:[1]:method_text:[         }            } finally {                muxer.release();            }        }       ])', 1), ('([17:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[RAM]:[17]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([27:/com/android/cts/verifier/sensors/MotionIndicatorView.java]:[OTA]:[27]:method_text:[Value() {        // ensure float division        return ((float)(mLastData - mLow))/mStep;    }}])', 1), ('([1:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[1]:method_text:[    @Before    public void setup() {        mTestAppProvider = new TestAppProvider();    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[ = testApp.instance(sUser);        assertThat(testAppInstance.user()).isEqualTo(sUser);    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[stApp.instance(sUser);        assertThat(testAppInstance.testApp()).isEqualTo(testApp);    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[ser)) {            assertThat(testAppInstance.activities().any()).isNotNull();        }    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[= null) {            assertThat(pkg.installedOnUsers()).doesNotContain(sUser);        }    }   ])', 1), ('([2:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[2]:method_text:[= null) {            assertThat(pkg.installedOnUsers()).doesNotContain(sUser);        }    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[e(sUser);        assertThrows(IllegalStateException.class, testAppInstance::keepAlive);    }   ])', 1), (""([4:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[4]:method_text:[fter stopKeepAlive it does not restart, as we'd have to wait an    // unbounded amount of time   ])"", 1), ('([4:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[4]:method_text:[p();            assertThat(testApp.reference().runningProcesses()).isEmpty();        }    }   ])', 1), ('([5:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[5]:method_text:[p();            assertThat(testApp.reference().runningProcesses()).isEmpty();        }    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[p.install(sUser)) {            assertThat(testAppInstance.process()).isNull();        }    }   ])', 1), ('([4:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[4]:method_text:[.any().start();            assertThat(testAppInstance.process()).isNotNull();        }    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[on().isEqualTo(INTENT_ACTION);            assertThat(logs.poll()).isNotNull();        }    }   ])', 1), ('([4:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[4]:method_text:[hat(logs.poll()).isNotNull();            assertThat(logs2.poll()).isNotNull();        }    }   ])', 1), ('([5:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[5]:method_text:[ertThat(logs.get()).isNull();            assertThat(logs2.poll()).isNotNull();        }    }   ])', 1), ('([3:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[PIN]:[3]:method_text:[ction().isEqualTo(INTENT_ACTION);            assertThat(logs.poll()).isNotNull();        }    }}])', 1), ('([2:/test/java/com/android/bedstead/testapp/TestAppInstanceReferenceTest.java]:[OTA]:[2]:method_text:[    @Before    public void setup() {        mTestAppProvider = new TestAppProvider();    }   ])', 1), ('([2:/android/view/cts/FrameMetricsListenerTest.java]:[RAM]:[2]:method_text:[ad(() -> mActivity.setContentView(layoutId));        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([10:/android/view/cts/FrameMetricsListenerTest.java]:[RAM]:[10]:method_text:[rawSync(mActivityRule, scrollView, null);        }        assertEquals(0, data.size());    }   ])', 1), ('([24:/android/view/cts/FrameMetricsListenerTest.java]:[RAM]:[24]:method_text:[ity.getWindow().removeOnFrameMetricsAvailableListener(frameMetricsListener2);        });    }   ])', 1), ('([48:/android/view/cts/FrameMetricsListenerTest.java]:[RAM]:[48]:method_text:[rawFrameMetric,                (firstDrawFrameMetric == 0) || (firstDrawFrameMetric == 1));    }}])', 1), ('([4:/android/view/cts/FrameMetricsListenerTest.java]:[OTA]:[4]:method_text:[rawFrameMetric,                (firstDrawFrameMetric == 0) || (firstDrawFrameMetric == 1));    }}])', 1), ('([1:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[PIN]:[1]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 1), ('([1:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[PIN]:[1]:method_text:[     result.put(codePath, dexMetadataPath);            }        }        return result;    }}])', 1), ('([6:/com/android/cts/packagemanager/preferredactivity/host/PreferredActivityTests.java]:[OTA]:[6]:method_text:[);        assertFalse(getDevice().isPackageInstalled(TEST_PACKAGE_NAME));    }    @LargeTest   ])', 1), ('([1:/android/security/cts/PerfEventParanoidTest.java]:[PIN]:[1]:method_text:[    getDevice().hasFeature(""feature:android.hardware.security.model.compatible""));        }    }}])', 1), ('([1:/android/security/cts/PerfEventParanoidTest.java]:[OTA]:[1]:method_text:[setUp() throws Exception {        mDevice = getDevice();    }    @CddTest(requirement=""9.7"")   ])', 1), ('([2:/android/security/cts/PerfEventParanoidTest.java]:[OTA]:[2]:method_text:[    getDevice().hasFeature(""feature:android.hardware.security.model.compatible""));        }    }}])', 1), ('([1:/android/database/sqlite/cts/SQLiteQueryTest.java]:[RAM]:[1]:method_text:[e.sqlite.cts;import junit.framework.TestCase;public class SQLiteQueryTest extends TestCase {   ])', 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[/ Test that shared elements transition from one fragment to the next    // and back during pop.   ])', 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[es);    }    // Test that shared element transitions through multiple fragments work together   ])', 1), (""([2:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[2]:method_text:[ent2);    }    // Adding/removing the same fragment multiple times shouldn't mess anything up   ])"", 1), (""([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[    }    // Make sure that shared elements on two different fragment containers don't interact   ])"", 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[));    }    // Make sure that onMapSharedElement works to change the shared element going out   ])', 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[reen);    }    // Make sure that onMapSharedElement works to change the shared element target   ])', 1), ('([3:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[3]:method_text:[    }    // Ensure that shared element transitions that have targets properly target the views   ])', 1), (""([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[itions have executed that they don't have any targets or other    // unfortunate modifications.   ])"", 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[rCallback());    }    // Ensure that transitions are done when a fragment is shown and hidden   ])', 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[gment2);    }    // Ensure that transitions are done when a fragment is attached and detached   ])', 1), (""([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[t2);    }    // Ensure that shared element without matching transition name doesn't error out   ])"", 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[   }    // Ensure that using the same source or target shared element results in an exception.   ])', 1), (""([1:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[1]:method_text:[cted        }    }    // Test that invisible fragment views don't participate in transitions   ])"", 1), ('([3:/android/fragment/cts/FragmentTransitionTest.java]:[PIN]:[3]:method_text:[bility(View.INVISIBLE);            super.onViewCreated(view, savedInstanceState);        }    }}])', 1), ('([6:/android/fragment/cts/FragmentTransitionTest.java]:[RAM]:[6]:method_text:[t that normal view transitions (enter, exit, reenter, return) run with    // a single fragment.   ])', 1), ('([1:/FullBackupOnlyTest.java]:[OTA]:[1]:method_text:[r, ""file_to_backup"");        mDoBackupFile2 = new File(normalFolder, ""file_to_backup2"");    }   ])', 1), ('([3:/android/server/wm/AmProfileTests.java]:[RAM]:[3]:method_text:[lFirstWord);        // Clean up.        executeShellCommand(""rm -f "" + OUTPUT_FILE_PATH);    }}])', 1), ('([1:/android/server/wm/AmProfileTests.java]:[OTA]:[1]:method_text:[ yes;     *    sampling-based profiling? no;     *    using streaming output mode? no.     */   ])', 1), ('([1:/android/permission/cts/NoActivityRelatedPermissionTest.java]:[OTA]:[1]:method_text:[uires Permission:     *   {@link android.Manifest.permission#GET_TASKS}     */    @MediumTest   ])', 1), ('([2:/android/content/res/cts/ConfigTest.java]:[PIN]:[2]:method_text:[{            fail(""Should be able to find application info for this package"");        }    }   ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[RAM]:[1]:method_text:[// TODO - add tests for special cases - ie, other key params seem ignored if // nokeys is set   ])', 1), ('([7:/android/content/res/cts/ConfigTest.java]:[OTA]:[7]:method_text:[{            fail(""Should be able to find application info for this package"");        }    }   ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[OTA]:[1]:method_text:[, R.configVarying.bag,                R.styleable.TestConfig, new String[]{""bag h670""});    }   ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[OTA]:[1]:method_text:[configVarying.bag,                R.styleable.TestConfig, new String[]{""bag h670""});    }       ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[OTA]:[1]:method_text:[R.configVarying.bag,                R.styleable.TestConfig, new String[]{""bag 240dpi""});    }   ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[OTA]:[1]:method_text:[configVarying.large, ""large"");        checkValue(res, R.configVarying.xlarge, ""xlarge"");    }   ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[OTA]:[1]:method_text:[// TODO - add tests for special cases - ie, other key params seem ignored if // nokeys is set   ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[OTA]:[1]:method_text:[gVarying.bag,                R.styleable.TestConfig, new String[]{""bag mcc111 mnc222""});    }   ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[OTA]:[1]:method_text:[nfigVarying.bag,                R.styleable.TestConfig, new String[]{""bag dpad 63x57""});    }   ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[OTA]:[1]:method_text:[ R.configVarying.bag,                R.styleable.TestConfig, new String[]{""bag mk MK""});    }   ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[OTA]:[1]:method_text:[figVarying.bag,                R.styleable.TestConfig, new String[]{""bag kok VARIANT""});    }   ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[OTA]:[1]:method_text:[onfigVarying.bag,                R.styleable.TestConfig, new String[] { ""bag tgl PH"" });    }   ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[OTA]:[1]:method_text:[ssertTrue(filLocales.contains(""fil-PH""));        assertTrue(filLocales.contains(""fil-SA""));    }}])', 1)]"	""	""	""	""	""
