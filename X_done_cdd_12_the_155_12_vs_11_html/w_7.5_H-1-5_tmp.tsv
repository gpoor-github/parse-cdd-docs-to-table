"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"2.2.7.2  . Camera"	"7.5"	"H-1-5"	"7.5/H-1-5"	"07050000.720105"	"""[7.5/H-1-5] MUST have camera2 JPEG capture latency &lt; 1000ms for 1080p resolution as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras.  | [7.5/H-1-5] MUST have camera2 JPEG capture latency &lt; 1000 ms for 1080p resolution as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. """	""	"camera"	"ITS latency 1080p CTS 1000ms resolution PerformanceTest MEDIA_PERFORMANCE_CLASS JPEG capture"	"MEDIA_PERFORMANCE_CLASS  capture latency 1000ms  1080p resolution  PerformanceTest"	""	""	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 34), ('android.hardware.camera2.cts.ImageReaderTest', 34), ('android.hardware.camera2.cts.RobustnessTest', 33), ('android.hardware.camera2.cts.StillCaptureTest', 31), ('android.hardware.cts.CameraTest', 26), ('android.hardware.camera2.cts.PerformanceTest', 26), ('android.hardware.camera2.cts.CameraDeviceTest', 24), ('android.hardware.camera2.cts.ReprocessCaptureTest', 23), ('android.hardware.camera2.cts.DngCreatorTest', 19), ('android.hardware.camera2.cts.RecordingTest', 18), ('android.hardware.camera2.cts.MultiResolutionImageReaderTest', 18), ('android.hardware.camera2.cts.OfflineSessionTest', 16), ('android.hardware.camera2.cts.CaptureRequestTest', 16), ('android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest', 16), ('android.hardware.camera2.cts.CameraExtensionSessionTest', 15), ('android.hardware.camera2.cts.SurfaceViewPreviewTest', 15), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 14), ('android.hardware.camera2.cts.StaticMetadataTest', 13), ('android.hardware.camera2.cts.BurstCaptureTest', 11), ('android.hardware.camera2.cts.MultiViewTest', 9), ('android.hardware.camera2.cts.CaptureResultTest', 9), ('com.android.cts.verifier.camera.its.ItsService', 8), ('android.hardware.camera2.cts.CameraTestUtils', 8), ('android.hardware.camera2.cts.helpers.StaticMetadat', 7), ('android.hardware.camera2.cts.CameraExtensionCharacteristicsTest', 7), ('android.camera.cts.api31test.SPerfClassTest', 6), ('android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase', 6), ('android.hardware.camera2.cts.ZoomCaptureTest', 6), ('android.hardware.camera2.cts.AllocationTest', 6), ('android.hardware.camera2.cts.BurstCaptureRawTest', 5), ('com.android.cts.verifier.camera.bokeh.CameraBokehActivity', 5), ('android.hardware.multiprocess.camera.cts.CameraEvictionTest', 5), ('android.hardware.camera2.cts.HeifWriterTest', 4), ('com.android.cts.verifier.camera.orientation.CameraOrientationActivity', 4), ('com.android.cts.verifier.camera.formats.CameraFormatsActivity', 4), ('android.hardware.cts.CameraGLTest', 4), ('android.hardware.camera2.cts.CameraManagerTest', 4), ('android.hardware.camera2.cts.ImageWriterTest', 4), ('android.hardware.camera2.cts.NativeImageReaderTest', 4), ('android.hardware.camera2.cts.FastBasicsTest', 4), ('com.android.cts.verifier.camera.fov.PhotoCaptureActivity', 4), ('com.android.cts.verifier.camera.video.CameraVideoActivity', 4), ('android.hardware.camera2.cts.testcases.Camera2MultiViewTestCase', 3), ('android.hardware.camera2.cts.helpers.CameraMetadataGetter', 3), ('android.hardware.camera2.cts.testcases.Camera2ConcurrentAndroidTestCase', 3), ('android.hardware.cts.LegacyCameraPerformanceTest', 3), ('android.hardware.camera2.cts.testcases.Camera2AndroidTestCase', 3), ('android.camera.cts.api25test.EnableZslTest', 3), ('com.android.cts.verifier.camera.intents.CameraIntentsActivity', 3), ('android.hardware.camera2.cts.ConcurrentCameraTest', 3), ('android.hardware.camera2.cts.helpers.Camera2Focuser', 3), ('android.hardware.camera2.cts.NativeCameraDeviceTest', 3), ('android.hardware.camera2.cts.SimpleObjectsTest', 3), ('android.hardware.camera2.cts.NativeStillCaptureTest', 3), ('android.hardware.cts.CameraPerformanceTestHelper', 3), ('android.hardware.cts.Camera_SizeTest', 3), ('android.hardware.camera2.cts.testcases.Camera2AndroidTestRule', 3), ('com.android.cts.verifier.camera.its.ItsTestActivity', 2), ('android.hardware.camera2.cts.rs.RawConverter', 2), ('com.android.cts.verifier.camera.fov.DetermineFovActivity', 2), ('android.hardware.camera2.cts.helpers.CameraErrorCollector', 2), ('android.hardware.camera2.cts.helpers.CameraSessionUtils', 2), ('com.android.cts.verifier.camera.fov.CtsTestHelper', 2), ('com.android.cts.verifier.camera.its.Logt', 2), ('android.hardware.camera2.cts.IdleUidTest', 2), ('android.hardware.camera2.cts.rs.AllocationCache', 2), ('android.hardware.cts.GLSurfaceViewCtsActivity', 2), ('com.android.cts.verifier.camera.performance.CameraPerformanceActivity', 2), ('android.hardware.camera2.cts.rs.BlockingInputAllocation', 2), ('android.hardware.camera2.cts.rs.ScriptGraph', 2), ('android.hardware.camera2.cts.rs.ScriptYuvMeans2dTo1d', 1), ('android.hardware.camera2.cts.CtsUtilsTest', 1), ('android.hardware.camera2.cts.rs.ScriptYuvToRgb', 1), ('com.android.cts.verifier.camera.intents.CameraContentJobService', 1), ('android.hardware.cts.CameraCtsActivity', 1), ('android.hardware.multiprocess.camera.cts.Camera1Activity', 1), ('android.hardware.camera2.cts.helpers.AssertHelpers', 1), ('android.hardware.multiprocess.camera.cts.MediaRecorderCameraActivity', 1), ('android.hardware.cts.helpers.CameraParameterizedTestCase', 1), ('android.hardware.camera2.cts.CameraExtensionTestActivity', 1), ('android.hardware.camera2.cts.helpers.InMatcher', 1), ('com.android.cts.verifier.camera.fov.CameraPreviewView', 1), ('android.hardware.camera2.cts.helpers.MaybeNull', 1), ('android.hardware.camera2.cts.Camera2SurfaceViewCtsActivity', 1), ('android.hardware.camera2.cts.Camera2MultiViewCtsActivity', 1), ('com.android.cts.verifier.camera.flashlight.CameraFlashlightActivity', 1), ('android.hardware.camera2.cts.Camera2OfflineTestActivity', 1), ('com.android.cts.verifier.camera.fov.CalibrationPreferenceActivity', 1), ('android.hardware.multiprocess.camera.cts.ErrorLoggingService', 1), ('android.hardware.cts.Camera_ParametersTest', 1), ('android.hardware.multiprocess.camera.cts.Camera2Activity', 1), ('com.android.cts.verifier.camera.performance.CameraTestInstrumentation', 1), ('android.hardware.camera2.cts.rs.RenderScriptSingleton', 1), ('android.hardware.camera2.cts.FlashlightTest', 1), ('android.hardware.camera2.cts.NativeCameraManagerTest', 1), ('android.hardware.camera2.cts.Camera2ParameterizedTestCase', 1), ('android.hardware.camera2.cts.helpers.UncheckedCloseable', 1), ('android.hardware.camera2.cts.rs.Script', 1), ('android.hardware.camera2.cts.rs.ScriptYuvMeans1d', 1), ('android.hardware.camera2.cts.rs.ScriptYuvCrop', 1)]"	"[('setUp', 139), ('close', 133), ('start', 85), ('tearDown', 73), ('getWidth', 66), ('getHeight', 62), ('AtomicInteger', 56), ('toString', 54), ('getLooper', 53), ('Object', 40), ('getName', 36), ('clear', 33), ('capacity', 32), ('getSurface', 32), ('quitSafely', 30), ('run', 27), ('BlockingStateCallback', 25), ('getOutputStream', 24), ('lock', 24), ('unlock', 24), ('floatValue', 20), ('getSimpleName', 19), ('quit', 18), ('getPackageManager', 17), ('closeCameraDevice', 16), ('take', 16), ('checkAndStartThread', 16), ('getState', 16), ('size', 15), ('onDestroy', 14), ('release', 14), ('CameraErrorCollector', 12), ('onCreate', 12), ('onResume', 12), ('onPause', 12), ('getStageIndex', 12), ('elapsedRealtime', 12), ('ReentrantLock', 12), ('newCondition', 12), ('signal', 12), ('build', 11), ('hashCode', 9), ('getHolder', 9), ('PreviewCallback', 9), ('getRS', 8), ('getActivity', 8), ('StringBuilder', 8), ('SerializerRunnable', 8), ('SocketRunnable', 8), ('getId', 8), ('getPhysicalCameraIds', 8), ('JSONObject', 8), ('hasArray', 8), ('array', 8), ('flush', 8), ('peek', 8), ('removeFirst', 8), ('accept', 8), ('getInputStream', 8), ('readLine', 8), ('getDefault', 8), ('stopSelf', 8), ('doGetProps', 8), ('doStartSensorEvents', 8), ('ConditionVariable', 8), ('getTargetContext', 8), ('CaptureCallback', 8), ('checkNotClosed', 8), ('clearContext', 8), ('getSize', 7), ('getAeModeName', 7), ('getAfModeName', 7), ('getInstrumentation', 7), ('getStateWaiter', 7), ('getElement', 6), ('create', 6), ('verify', 6), ('centerY', 6), ('centerX', 6), ('NullPointerException', 6), ('poll', 6), ('getAction', 6), ('updateSuccessState', 6), ('cancelAutoFocus', 6), ('createRequestBuilder', 6), ('startPreview', 6), ('width', 5), ('height', 5), ('Renderer', 5), ('getView', 5), ('SizeComparator', 5), ('executeUnchecked', 4), ('updateScriptInput', 4), ('getColumnCount', 4), ('getRowCount', 4), ('drawContents', 4), ('never', 4), ('getMessage', 4), ('getRect', 4), ('getMeteringWeight', 4), ('open', 4), ('ErrorCallback', 4), ('getIntent', 4), ('calcAllCombinationsSize', 4), ('getArguments', 4), ('getExternalCacheDir', 4), ('getReportedFovDegrees', 4), ('getNumberOfCameras', 4), ('ioReceive', 4), ('getCameraInfo', 3), ('getCacheDir', 3), ('length', 3), ('getTextureView', 3), ('SurfaceTextureCallback', 3), ('SurfaceTextureBurstCallback', 3), ('beforeActivityLaunched', 3), ('hasFocuser', 3), ('Thread', 3), ('prepare', 3), ('myLooper', 3), ('loop', 3), ('terminateMessageLooper', 3), ('getThread', 3), ('join', 3), ('autoFocus', 3), ('AutoFocusCallback', 3), ('takePicture', 3), ('PictureCallback', 3), ('getCamera', 3), ('getCache', 3), ('getDebugFileNameBase', 3), ('getContext', 3), ('CameraIterable', 3), ('SizeIterable', 3), ('ResultIterable', 3), ('getSourceSize', 3), ('getLaunchOptions', 3), ('LaunchOptions', 3), ('toRectF', 3), ('BlockingSessionCallback', 3), ('advanceInputWaiting', 3), ('execute', 3), ('stopCapture', 3), ('getInputData', 3), ('getOutputAllocation', 3), ('getBytesSize', 3), ('getOutputData', 3), ('getType', 2), ('getX', 2), ('ResultReceiver', 2), ('SparseIntArray', 2), ('getConfig', 2), ('getGainFactorCount', 2), ('printStackTrace', 2), ('Callback', 2), ('anyInt', 2), ('notNullValue', 2), ('getFormat', 2), ('getTimestamp', 2), ('getSurfaceView', 2), ('stop', 2), ('Intent', 2), ('before', 2), ('after', 2), ('updatePreviewSurfaceTexture', 2), ('StreamCombinationTargets', 2), ('getRenderScript', 2), ('getCameraManager', 2), ('resetRenderer', 2), ('resetRenderMode', 2), ('resetGlVersion', 2), ('getUsage', 2), ('getAllocation', 2), ('waitForBufferAndReceive', 2), ('waitForBuffer', 2), ('Builder', 2), ('checkInput', 2), ('getJobId', 1), ('getLayoutParams', 1), ('MediaRecorder', 1), ('Paint', 1), ('doSomething', 1), ('MaybeNull', 1), ('getWindow', 1), ('startHandlerThread', 1), ('stopHandlerThread', 1), ('getExtras', 1), ('AvailabilityCallback', 1), ('StateCallback', 1), ('getBinder', 1), ('sendMessages', 1), ('keySet', 1), ('releaseAllContexts', 1), ('RenderScriptSingleton', 1), ('initializeAvailabilityCallbacksNative', 1), ('hasFlash', 1), ('Foo', 1), ('ParameterMap', 1), ('getValueClass', 1)]"	"[('CtsCameraTestCases', 543), ('CtsCameraApi31TestCases', 6), ('CtsCameraApi25TestCases', 3)]"	""	"android.hardware.camera2.cts.rs.ScriptYuvCrop"	"getHeight"	"CtsCameraTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 34), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 34), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 33), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 31), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraTest.java', 26), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java', 26), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 24), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ReprocessCaptureTest.java', 23), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 19), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 18), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java', 18), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionSessionTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/SurfaceViewPreviewTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 14), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 9), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 8), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 8), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/StaticMetadata.java', 7), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/camera/api31test/src/android/camera/cts/api31test/SPerfClassTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java', 6), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureRawTest.java', 5), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 4), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java', 4), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/formats/CameraFormatsActivity.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraGLTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageWriterTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeImageReaderTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/FastBasicsTest.java', 4), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java', 4), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/video/CameraVideoActivity.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2MultiViewTestCase.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/CameraMetadataGetter.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2ConcurrentAndroidTestCase.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/LegacyCameraPerformanceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/api25test/src/android/camera/cts/api25test/EnableZslTest.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ConcurrentCameraTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/Camera2Focuser.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/SimpleObjectsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeStillCaptureTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraPerformanceTestHelper.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/Camera_SizeTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2AndroidTestRule.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsTestActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/RawConverter.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/DetermineFovActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/CameraErrorCollector.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/CameraSessionUtils.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/CtsTestHelper.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/Logt.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/IdleUidTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/AllocationCache.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/GLSurfaceViewCtsActivity.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/BlockingInputAllocation.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/ScriptGraph.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/ScriptYuvMeans2dTo1d.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CtsUtilsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/ScriptYuvToRgb.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/intents/CameraContentJobService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/Camera1Activity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/AssertHelpers.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/MediaRecorderCameraActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/cts/helpers/CameraParameterizedTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/InMatcher.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/CameraPreviewView.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/MaybeNull.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/Camera2SurfaceViewCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/Camera2MultiViewCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/flashlight/CameraFlashlightActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/Camera2OfflineTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/CalibrationPreferenceActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/ErrorLoggingService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/Camera_ParametersTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/Camera2Activity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/performance/CameraTestInstrumentation.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/RenderScriptSingleton.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/FlashlightTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/Camera2ParameterizedTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/UncheckedCloseable.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/Script.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/ScriptYuvMeans1d.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/ScriptYuvCrop.java', 1)]"	"[('(4,CTS,/android/hardware/camera2/cts/rs/ScriptYuvMeans2dTo1d.java)', 1), ('(2,ITS,/android/hardware/camera2/cts/testcases/Camera2MultiViewTestCase.java)', 1), ('(16,CTS,/android/hardware/camera2/cts/testcases/Camera2MultiViewTestCase.java)', 1), ('(44,capture,/android/hardware/camera2/cts/testcases/Camera2MultiViewTestCase.java)', 1), ('(1,ITS,/android/hardware/camera2/cts/helpers/CameraMetadataGetter.java)', 1), ('(1,CTS,/android/hardware/camera2/cts/helpers/CameraMetadataGetter.java)', 1), ('(28,capture,/android/hardware/camera2/cts/helpers/CameraMetadataGetter.java)', 1), ('(3,CTS,/android/hardware/camera2/cts/CtsUtilsTest.java)', 1), ('(52,ITS,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(6,CTS,/com/android/cts/verifier/camera/its/ItsTestActivity.java)', 1), ('(1,1080p,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(7,CTS,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(22,JPEG,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(88,capture,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(2,CTS,/android/hardware/camera2/cts/rs/RawConverter.java)', 1), ('(8,capture,/android/hardware/camera2/cts/rs/RawConverter.java)', 1), ('(8,latency,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(1,1080p,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(4,CTS,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(1,resolution,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(6,JPEG,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(72,capture,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(7,CTS,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(1,resolution,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(45,capture,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(1,ITS,/android/hardware/camera2/cts/testcases/Camera2ConcurrentAndroidTestCase.java)', 1), ('(7,CTS,/android/hardware/camera2/cts/testcases/Camera2ConcurrentAndroidTestCase.java)', 1), ('(25,capture,/android/hardware/camera2/cts/testcases/Camera2ConcurrentAndroidTestCase.java)', 1), ('(2,ITS,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(2,1080p,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(6,CTS,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(86,resolution,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(65,JPEG,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(492,capture,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(2,ITS,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(8,latency,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(3,1080p,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(4,CTS,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(39,resolution,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(9,JPEG,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(43,capture,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(3,CTS,/android/hardware/camera2/cts/rs/ScriptYuvToRgb.java)', 1), ('(5,CTS,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 1), ('(33,JPEG,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 1), ('(294,capture,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 1), ('(4,CTS,/com/android/cts/verifier/camera/fov/DetermineFovActivity.java)', 1), ('(2,capture,/com/android/cts/verifier/camera/fov/DetermineFovActivity.java)', 1), ('(2,ITS,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(5,CTS,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(9,JPEG,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(492,capture,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(3,CTS,/android/hardware/cts/LegacyCameraPerformanceTest.java)', 1), ('(4,PerformanceTest,/android/hardware/cts/LegacyCameraPerformanceTest.java)', 1), ('(1,capture,/android/hardware/cts/LegacyCameraPerformanceTest.java)', 1), ('(1,CTS,/com/android/cts/verifier/camera/intents/CameraContentJobService.java)', 1), ('(8,ITS,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(8,1080p,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(4,CTS,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(2,resolution,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(29,JPEG,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(167,capture,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(4,CTS,/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java)', 1), ('(9,resolution,/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java)', 1), ('(1,JPEG,/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java)', 1), ('(2,capture,/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java)', 1), ('(21,CTS,/android/hardware/camera2/cts/helpers/CameraErrorCollector.java)', 1), ('(52,capture,/android/hardware/camera2/cts/helpers/CameraErrorCollector.java)', 1), ('(3,ITS,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(38,latency,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(14,CTS,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(673,capture,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(3,CTS,/android/hardware/cts/CameraCtsActivity.java)', 1), ('(2,CTS,/android/hardware/multiprocess/camera/cts/Camera1Activity.java)', 1), ('(1,CTS,/android/hardware/camera2/cts/helpers/AssertHelpers.java)', 1), ('(3,CTS,/android/hardware/camera2/cts/helpers/CameraSessionUtils.java)', 1), ('(74,capture,/android/hardware/camera2/cts/helpers/CameraSessionUtils.java)', 1), ('(6,CTS,/android/hardware/camera2/cts/BurstCaptureRawTest.java)', 1), ('(236,capture,/android/hardware/camera2/cts/BurstCaptureRawTest.java)', 1), ('(1,ITS,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(39,latency,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(4,1080p,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(10,CTS,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(62,resolution,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(97,JPEG,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(70,capture,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(189,ITS,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(1,latency,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(4,1080p,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(10,CTS,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(9,PerformanceTest,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(2,MEDIA_PERFORMANCE_CLASS,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(16,JPEG,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(351,capture,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(1,ITS,/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java)', 1), ('(9,CTS,/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java)', 1), ('(54,capture,/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java)', 1), ('(21,ITS,/android/hardware/cts/CameraTest.java)', 1), ('(1,1080p,/android/hardware/cts/CameraTest.java)', 1), ('(9,CTS,/android/hardware/cts/CameraTest.java)', 1), ('(104,JPEG,/android/hardware/cts/CameraTest.java)', 1), ('(5,capture,/android/hardware/cts/CameraTest.java)', 1), ('(3,CTS,/android/hardware/multiprocess/camera/cts/MediaRecorderCameraActivity.java)', 1), ('(3,CTS,/com/android/cts/verifier/camera/fov/CtsTestHelper.java)', 1), ('(6,resolution,/com/android/cts/verifier/camera/fov/CtsTestHelper.java)', 1), ('(9,CTS,/android/hardware/camera2/cts/MultiViewTest.java)', 1), ('(43,capture,/android/hardware/camera2/cts/MultiViewTest.java)', 1), ('(1,ITS,/android/camera/cts/api25test/EnableZslTest.java)', 1), ('(5,CTS,/android/camera/cts/api25test/EnableZslTest.java)', 1), ('(13,capture,/android/camera/cts/api25test/EnableZslTest.java)', 1), ('(9,CTS,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1), ('(111,resolution,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1), ('(6,JPEG,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1), ('(58,capture,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1), ('(1,ITS,/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java)', 1), ('(13,CTS,/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java)', 1), ('(7,capture,/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java)', 1), ('(1,ITS,/com/android/cts/verifier/camera/formats/CameraFormatsActivity.java)', 1), ('(3,CTS,/com/android/cts/verifier/camera/formats/CameraFormatsActivity.java)', 1), ('(43,resolution,/com/android/cts/verifier/camera/formats/CameraFormatsActivity.java)', 1), ('(4,JPEG,/com/android/cts/verifier/camera/formats/CameraFormatsActivity.java)', 1), ('(1,CTS,/android/hardware/cts/helpers/CameraParameterizedTestCase.java)', 1), ('(13,latency,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(6,CTS,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(17,JPEG,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(244,capture,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(2,ITS,/android/hardware/cts/CameraGLTest.java)', 1), ('(19,CTS,/android/hardware/cts/CameraGLTest.java)', 1), ('(1,capture,/android/hardware/cts/CameraGLTest.java)', 1), ('(1,CTS,/android/hardware/camera2/cts/CameraExtensionTestActivity.java)', 1), ('(28,latency,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(10,CTS,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(7,PerformanceTest,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(41,JPEG,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(323,capture,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(3,CTS,/android/hardware/camera2/cts/helpers/InMatcher.java)', 1), ('(5,CTS,/android/hardware/camera2/cts/ConcurrentCameraTest.java)', 1), ('(21,capture,/android/hardware/camera2/cts/ConcurrentCameraTest.java)', 1), ('(1,CTS,/com/android/cts/verifier/camera/fov/CameraPreviewView.java)', 1), ('(2,CTS,/android/hardware/camera2/cts/helpers/MaybeNull.java)', 1), ('(5,CTS,/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java)', 1), ('(143,resolution,/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java)', 1), ('(17,JPEG,/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java)', 1), ('(109,capture,/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java)', 1), ('(4,CTS,/android/hardware/camera2/cts/Camera2SurfaceViewCtsActivity.java)', 1), ('(1,ITS,/android/camera/cts/api31test/SPerfClassTest.java)', 1), ('(7,1080p,/android/camera/cts/api31test/SPerfClassTest.java)', 1), ('(7,CTS,/android/camera/cts/api31test/SPerfClassTest.java)', 1), ('(32,JPEG,/android/camera/cts/api31test/SPerfClassTest.java)', 1), ('(35,capture,/android/camera/cts/api31test/SPerfClassTest.java)', 1), ('(4,ITS,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(43,latency,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(3,1080p,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(24,CTS,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(6,JPEG,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(196,capture,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(3,ITS,/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java)', 1), ('(3,CTS,/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java)', 1), ('(1,resolution,/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java)', 1), ('(30,JPEG,/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java)', 1), ('(71,capture,/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java)', 1), ('(1,ITS,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 1), ('(4,latency,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 1), ('(6,CTS,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 1), ('(141,capture,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 1), ('(1,ITS,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(7,latency,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(8,CTS,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(1,resolution,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(73,JPEG,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(338,capture,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(1,latency,/android/hardware/camera2/cts/helpers/Camera2Focuser.java)', 1), ('(1,CTS,/android/hardware/camera2/cts/helpers/Camera2Focuser.java)', 1), ('(55,capture,/android/hardware/camera2/cts/helpers/Camera2Focuser.java)', 1), ('(6,CTS,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(4,JPEG,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(28,capture,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(3,CTS,/android/hardware/camera2/cts/NativeCameraDeviceTest.java)', 1), ('(8,capture,/android/hardware/camera2/cts/NativeCameraDeviceTest.java)', 1), ('(3,CTS,/android/hardware/camera2/cts/SimpleObjectsTest.java)', 1), ('(23,capture,/android/hardware/camera2/cts/SimpleObjectsTest.java)', 1), ('(1,ITS,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(6,CTS,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(5,capture,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(1,ITS,/com/android/cts/verifier/camera/its/Logt.java)', 1), ('(1,CTS,/com/android/cts/verifier/camera/its/Logt.java)', 1), ('(3,CTS,/android/hardware/camera2/cts/NativeStillCaptureTest.java)', 1), ('(8,capture,/android/hardware/camera2/cts/NativeStillCaptureTest.java)', 1), ('(1,CTS,/android/hardware/cts/CameraPerformanceTestHelper.java)', 1), ('(1,PerformanceTest,/android/hardware/cts/CameraPerformanceTestHelper.java)', 1), ('(1,JPEG,/android/hardware/cts/CameraPerformanceTestHelper.java)', 1), ('(4,CTS,/android/hardware/camera2/cts/Camera2MultiViewCtsActivity.java)', 1), ('(12,ITS,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(17,latency,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(3,1080p,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(9,CTS,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(30,resolution,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(2,MEDIA_PERFORMANCE_CLASS,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(106,JPEG,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(301,capture,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(4,CTS,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(13,JPEG,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(3,CTS,/com/android/cts/verifier/camera/flashlight/CameraFlashlightActivity.java)', 1), ('(3,CTS,/android/hardware/camera2/cts/IdleUidTest.java)', 1), ('(4,capture,/android/hardware/camera2/cts/IdleUidTest.java)', 1), ('(3,ITS,/android/hardware/camera2/cts/rs/AllocationCache.java)', 1), ('(5,CTS,/android/hardware/camera2/cts/rs/AllocationCache.java)', 1), ('(4,CTS,/android/hardware/camera2/cts/ImageWriterTest.java)', 1), ('(2,JPEG,/android/hardware/camera2/cts/ImageWriterTest.java)', 1), ('(37,capture,/android/hardware/camera2/cts/ImageWriterTest.java)', 1), ('(8,latency,/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java)', 1), ('(3,CTS,/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java)', 1), ('(4,resolution,/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java)', 1), ('(2,JPEG,/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java)', 1), ('(1,capture,/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java)', 1), ('(1,ITS,/android/hardware/cts/GLSurfaceViewCtsActivity.java)', 1), ('(2,CTS,/android/hardware/cts/GLSurfaceViewCtsActivity.java)', 1), ('(5,CTS,/android/hardware/camera2/cts/Camera2OfflineTestActivity.java)', 1), ('(8,CTS,/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java)', 1), ('(4,PerformanceTest,/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java)', 1), ('(2,ITS,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(7,CTS,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(1,resolution,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(27,JPEG,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(402,capture,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(2,CTS,/com/android/cts/verifier/camera/fov/CalibrationPreferenceActivity.java)', 1), ('(3,CTS,/android/hardware/camera2/cts/NativeImageReaderTest.java)', 1), ('(8,JPEG,/android/hardware/camera2/cts/NativeImageReaderTest.java)', 1), ('(1,ITS,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(3,latency,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(1,1080p,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(6,CTS,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(2,PerformanceTest,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(5,JPEG,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(118,capture,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(2,CTS,/android/hardware/multiprocess/camera/cts/ErrorLoggingService.java)', 1), ('(8,CTS,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(56,resolution,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(119,JPEG,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(365,capture,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(1,CTS,/android/hardware/cts/Camera_ParametersTest.java)', 1), ('(2,CTS,/android/hardware/multiprocess/camera/cts/Camera2Activity.java)', 1), ('(8,CTS,/android/hardware/camera2/cts/FastBasicsTest.java)', 1), ('(8,JPEG,/android/hardware/camera2/cts/FastBasicsTest.java)', 1), ('(36,capture,/android/hardware/camera2/cts/FastBasicsTest.java)', 1), ('(5,ITS,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(5,CTS,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(5,resolution,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(19,JPEG,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(77,capture,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(1,CTS,/com/android/cts/verifier/camera/performance/CameraTestInstrumentation.java)', 1), ('(5,CTS,/android/hardware/camera2/cts/rs/RenderScriptSingleton.java)', 1), ('(32,CTS,/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java)', 1), ('(5,CTS,/android/hardware/camera2/cts/FlashlightTest.java)', 1), ('(12,ITS,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(12,CTS,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(6,resolution,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(89,JPEG,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(194,capture,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(1,ITS,/android/hardware/camera2/cts/testcases/Camera2AndroidTestRule.java)', 1), ('(6,CTS,/android/hardware/camera2/cts/testcases/Camera2AndroidTestRule.java)', 1), ('(55,capture,/android/hardware/camera2/cts/testcases/Camera2AndroidTestRule.java)', 1), ('(3,CTS,/android/hardware/camera2/cts/NativeCameraManagerTest.java)', 1), ('(9,CTS,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(56,resolution,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(8,JPEG,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(5,capture,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(4,ITS,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(13,CTS,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(86,capture,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(4,CTS,/android/hardware/camera2/cts/Camera2ParameterizedTestCase.java)', 1), ('(1,CTS,/android/hardware/camera2/cts/helpers/UncheckedCloseable.java)', 1), ('(3,1080p,/com/android/cts/verifier/camera/video/CameraVideoActivity.java)', 1), ('(5,CTS,/com/android/cts/verifier/camera/video/CameraVideoActivity.java)', 1), ('(21,resolution,/com/android/cts/verifier/camera/video/CameraVideoActivity.java)', 1), ('(11,capture,/com/android/cts/verifier/camera/video/CameraVideoActivity.java)', 1), ('(5,ITS,/android/hardware/camera2/cts/rs/BlockingInputAllocation.java)', 1), ('(3,CTS,/android/hardware/camera2/cts/rs/BlockingInputAllocation.java)', 1), ('(5,CTS,/android/hardware/camera2/cts/rs/Script.java)', 1), ('(1,ITS,/android/hardware/camera2/cts/rs/ScriptGraph.java)', 1), ('(9,CTS,/android/hardware/camera2/cts/rs/ScriptGraph.java)', 1), ('(4,CTS,/android/hardware/camera2/cts/rs/ScriptYuvMeans1d.java)', 1), ('(4,CTS,/android/hardware/camera2/cts/rs/ScriptYuvCrop.java)', 1)]"	"[('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[capture]:[1]:method_text:[/false);            } finally {                closeDevice(id);            }        }    }   ])', 5), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[capture]:[1]:method_text:[*/true);            } finally {                closeDevice(id);            }        }    }   ])', 4), ('([4:/android/hardware/camera2/cts/rs/ScriptYuvMeans2dTo1d.java]:[CTS]:[4]:method_text:[p should use ScriptYuvCrop.class        mScript.set_src_x(0);        mScript.set_src_y(0);    }}])', 1), ('([2:/android/hardware/camera2/cts/testcases/Camera2MultiViewTestCase.java]:[ITS]:[2]:method_text:[iter().waitForState(                    SESSION_READY, SESSION_READY_TIMEOUT_MS);        }    }}])', 1), ('([16:/android/hardware/camera2/cts/testcases/Camera2MultiViewTestCase.java]:[CTS]:[16]:method_text:[iter().waitForState(                    SESSION_READY, SESSION_READY_TIMEOUT_MS);        }    }}])', 1), ('([44:/android/hardware/camera2/cts/testcases/Camera2MultiViewTestCase.java]:[capture]:[44]:method_text:[iter().waitForState(                    SESSION_READY, SESSION_READY_TIMEOUT_MS);        }    }}])', 1), ('([1:/android/hardware/camera2/cts/helpers/CameraMetadataGetter.java]:[ITS]:[1]:method_text:[ e);                    }                }            }        }        return jsonObj;    }}])', 1), ('([1:/android/hardware/camera2/cts/helpers/CameraMetadataGetter.java]:[CTS]:[1]:method_text:[ e);                    }                }            }        }        return jsonObj;    }}])', 1), ('([28:/android/hardware/camera2/cts/helpers/CameraMetadataGetter.java]:[capture]:[28]:method_text:[ e);                    }                }            }        }        return jsonObj;    }}])', 1), ('([3:/android/hardware/camera2/cts/CtsUtilsTest.java]:[CTS]:[3]:method_text:[de. * </p> */public class CtsUtilsTest {    private static final byte PADBYTE = (byte)0xa5;   ])', 1), ('([52:/com/android/cts/verifier/camera/its/ItsTestActivity.java]:[ITS]:[52]:method_text:[era_its_test, R.string.camera_its_test_info, -1);        setPassFailButtonClickListeners();    }}])', 1), ('([6:/com/android/cts/verifier/camera/its/ItsTestActivity.java]:[CTS]:[6]:method_text:[era_its_test, R.string.camera_its_test_info, -1);        setPassFailButtonClickListeners();    }}])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[1080p]:[1]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([5:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[5]:method_text:[* surfaces not registered with camera or surfaces used in     * repeating requests.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[1]:method_text:[e     * sensor during offline processing does not have any unexpected side effects.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[CTS]:[1]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[ied about the     * remaining offline requests via the registered offline callback.</p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[3]:method_text:[cks behave as expected     * in case the camera supports offline depth jpeg output.</p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[7]:method_text:[callbacks behave as expected     * in case the camera supports offline HEIC output.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[ssion and receive     * all corresponding callbacks according to the documentation.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[nitialize a new regular capture session     * in parallel with the offline session.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[eive the expected sequence abort callbacks when switching     * to offline session.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[re correctly advertised and switching to offline     * mode is failing as expected.</p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[7]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([6:/android/hardware/camera2/cts/OfflineSessionTest.java]:[capture]:[6]:method_text:[* surfaces not registered with camera or surfaces used in     * repeating requests.</p>     */   ])', 1), ('([18:/android/hardware/camera2/cts/OfflineSessionTest.java]:[capture]:[18]:method_text:[ied about the     * remaining offline requests via the registered offline callback.</p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/OfflineSessionTest.java]:[capture]:[2]:method_text:[nitialize a new regular capture session     * in parallel with the offline session.</p>     */   ])', 1), ('([62:/android/hardware/camera2/cts/OfflineSessionTest.java]:[capture]:[62]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([2:/android/hardware/camera2/cts/rs/RawConverter.java]:[CTS]:[2]:method_text:[ D50_XYZ[1], 0, 0, 0, D50_XYZ[2]};        multiply(m2, intermediate, /*out*/forwardMatrix);    }}])', 1), ('([8:/android/hardware/camera2/cts/rs/RawConverter.java]:[capture]:[8]:method_text:[ D50_XYZ[1], 0, 0, 0, D50_XYZ[2]};        multiply(m2, intermediate, /*out*/forwardMatrix);    }}])', 1), ('([8:/android/hardware/camera2/cts/BurstCaptureTest.java]:[latency]:[8]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[1080p]:[1]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([4:/android/hardware/camera2/cts/BurstCaptureTest.java]:[CTS]:[4]:method_text:[ol.     * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.     */   ])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[resolution]:[1]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[JPEG]:[1]:method_text:[is test uses STILL_CAPTURE intent, and exercises path where     * enableZsl is enabled.     */   ])', 1), ('([4:/android/hardware/camera2/cts/BurstCaptureTest.java]:[JPEG]:[4]:method_text:[de.     * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.     */   ])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[JPEG]:[1]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([5:/android/hardware/camera2/cts/BurstCaptureTest.java]:[capture]:[5]:method_text:[ol.     * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.     */   ])', 1), ('([2:/android/hardware/camera2/cts/BurstCaptureTest.java]:[capture]:[2]:method_text:[is test uses STILL_CAPTURE intent, and exercises path where     * enableZsl is enabled.     */   ])', 1), ('([2:/android/hardware/camera2/cts/BurstCaptureTest.java]:[capture]:[2]:method_text:[de.     * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.     */   ])', 1), ('([63:/android/hardware/camera2/cts/BurstCaptureTest.java]:[capture]:[63]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([7:/android/hardware/camera2/cts/HeifWriterTest.java]:[CTS]:[7]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([1:/android/hardware/camera2/cts/HeifWriterTest.java]:[resolution]:[1]:method_text:[           }            // TODO: add more key validations.        }        return result;    }}])', 1), ('([4:/android/hardware/camera2/cts/HeifWriterTest.java]:[capture]:[4]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([41:/android/hardware/camera2/cts/HeifWriterTest.java]:[capture]:[41]:method_text:[           }            // TODO: add more key validations.        }        return result;    }}])', 1), ('([1:/android/hardware/camera2/cts/testcases/Camera2ConcurrentAndroidTestCase.java]:[ITS]:[1]:method_text:[ {                Log.v(TAG, ""Camera "" + cameraId + "" is closed"");            }        }    }}])', 1), ('([7:/android/hardware/camera2/cts/testcases/Camera2ConcurrentAndroidTestCase.java]:[CTS]:[7]:method_text:[ {                Log.v(TAG, ""Camera "" + cameraId + "" is closed"");            }        }    }}])', 1), ('([25:/android/hardware/camera2/cts/testcases/Camera2ConcurrentAndroidTestCase.java]:[capture]:[25]:method_text:[ {                Log.v(TAG, ""Camera "" + cameraId + "" is closed"");            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[ITS]:[1]:method_text:[    /**     * Test for making sure the mandatory stream combinations work as expected.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[ITS]:[1]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[1080p]:[2]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([5:/android/hardware/camera2/cts/RobustnessTest.java]:[CTS]:[5]:method_text:[uffer size in the     * available stream configurations for a surface with this format.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[CTS]:[1]:method_text:[nput/output combinations for each hardware     * level and capability work as expected.     */   ])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[resolution]:[2]:method_text:[    /**     * Test for making sure the mandatory stream combinations work as expected.     */   ])', 1), ('([12:/android/hardware/camera2/cts/RobustnessTest.java]:[resolution]:[12]:method_text:[    /**     * Test for making sure the mandatory stream combinations work as expected.     */   ])', 1), ('([12:/android/hardware/camera2/cts/RobustnessTest.java]:[resolution]:[12]:method_text:[nput/output combinations for each hardware     * level and capability work as expected.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[resolution]:[1]:method_text:[nput/output combinations for each hardware     * level and capability work as expected.     */   ])', 1), ('([20:/android/hardware/camera2/cts/RobustnessTest.java]:[resolution]:[20]:method_text:[  if (inputWriter != null) {                inputWriter.close();            }        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/RobustnessTest.java]:[resolution]:[3]:method_text:[/ true);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([5:/android/hardware/camera2/cts/RobustnessTest.java]:[resolution]:[5]:method_text:[ll expected mandatory stream combinations are present and     * advertised accordingly.     */   ])', 1), ('([9:/android/hardware/camera2/cts/RobustnessTest.java]:[resolution]:[9]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 1), ('([22:/android/hardware/camera2/cts/RobustnessTest.java]:[resolution]:[22]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[JPEG]:[2]:method_text:[nput/output combinations for each hardware     * level and capability work as expected.     */   ])', 1), ('([4:/android/hardware/camera2/cts/RobustnessTest.java]:[JPEG]:[4]:method_text:[  if (inputWriter != null) {                inputWriter.close();            }        }    }   ])', 1), ('([13:/android/hardware/camera2/cts/RobustnessTest.java]:[JPEG]:[13]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 1), ('([46:/android/hardware/camera2/cts/RobustnessTest.java]:[JPEG]:[46]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([7:/android/hardware/camera2/cts/RobustnessTest.java]:[capture]:[7]:method_text:[uffer size in the     * available stream configurations for a surface with this format.     */   ])', 1), ('([30:/android/hardware/camera2/cts/RobustnessTest.java]:[capture]:[30]:method_text:[    /**     * Test for making sure the mandatory stream combinations work as expected.     */   ])', 1), ('([28:/android/hardware/camera2/cts/RobustnessTest.java]:[capture]:[28]:method_text:[nput/output combinations for each hardware     * level and capability work as expected.     */   ])', 1), ('([34:/android/hardware/camera2/cts/RobustnessTest.java]:[capture]:[34]:method_text:[  if (inputWriter != null) {                inputWriter.close();            }        }    }   ])', 1), ('([60:/android/hardware/camera2/cts/RobustnessTest.java]:[capture]:[60]:method_text:[     }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([34:/android/hardware/camera2/cts/RobustnessTest.java]:[capture]:[34]:method_text:[       }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([46:/android/hardware/camera2/cts/RobustnessTest.java]:[capture]:[46]:method_text:[       }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([48:/android/hardware/camera2/cts/RobustnessTest.java]:[capture]:[48]:method_text:[       }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([62:/android/hardware/camera2/cts/RobustnessTest.java]:[capture]:[62]:method_text:[     }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([24:/android/hardware/camera2/cts/RobustnessTest.java]:[capture]:[24]:method_text:[Number);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([5:/android/hardware/camera2/cts/RobustnessTest.java]:[capture]:[5]:method_text:[       }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([12:/android/hardware/camera2/cts/RobustnessTest.java]:[capture]:[12]:method_text:[       }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([89:/android/hardware/camera2/cts/RobustnessTest.java]:[capture]:[89]:method_text:[ll expected mandatory stream combinations are present and     * advertised accordingly.     */   ])', 1), ('([12:/android/hardware/camera2/cts/RobustnessTest.java]:[capture]:[12]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[capture]:[1]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([2:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[ITS]:[2]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([8:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[latency]:[8]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([3:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[1080p]:[3]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([4:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[CTS]:[4]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([39:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[resolution]:[39]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([9:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[JPEG]:[9]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([43:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[capture]:[43]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([3:/android/hardware/camera2/cts/rs/ScriptYuvToRgb.java]:[CTS]:[3]:method_text:[verride    protected void updateScriptInput() {        mScript.setInput(mInputAllocation);    }}])', 1), ('([5:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[CTS]:[5]:method_text:[KEYS,    }    /**     * Test YUV_420_888 -> YUV_420_888 with maximal supported sizes     */   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[KEYS,    }    /**     * Test YUV_420_888 -> YUV_420_888 with maximal supported sizes     */   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[);        }    }    /**     * Test YUV_420_888 -> JPEG with maximal supported sizes     */   ])', 1), ('([3:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[3]:method_text:[);        }    }    /**     * Test YUV_420_888 -> HEIC with maximal supported sizes     */   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[0_888);        }    }    /**     * Test OPAQUE -> JPEG with maximal supported sizes     */   ])', 1), ('([3:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[3]:method_text:[.JPEG);        }    }    /**     * Test OPAQUE -> HEIC with maximal supported sizes     */   ])', 1), ('([2:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[2]:method_text:[ter.queueInputBuffer may become     * stuck due to stale buffers from previous session.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[2]:method_text:[      }    }    /**     * Test burst reprocessing captures with and without preview.     */   ])', 1), (""([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[put's exif data for the largest input and output sizes for each     * supported format.     */   ])"", 1), ('([4:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[4]:method_text:[         }            } finally {                closeDevice();            }        }    }   ])', 1), ('([15:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[15]:method_text:[   public TotalCaptureResult getTotalCaptureResult() {            return mResult;        }    }}])', 1), ('([16:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[capture]:[16]:method_text:[KEYS,    }    /**     * Test YUV_420_888 -> YUV_420_888 with maximal supported sizes     */   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[capture]:[1]:method_text:[   }    }    /**     * Test all supported size and format combinations with preview.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[capture]:[1]:method_text:[();            }        }    }    /**     * Test recreating reprocessing sessions.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[capture]:[2]:method_text:[       }    }    /**     * Verify issuing cross session capture requests is invalid.     */   ])', 1), ('([12:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[capture]:[12]:method_text:[ter.queueInputBuffer may become     * stuck due to stale buffers from previous session.     */   ])', 1), ('([4:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[capture]:[4]:method_text:[      }    }    /**     * Test burst reprocessing captures with and without preview.     */   ])', 1), ('([4:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[capture]:[4]:method_text:[ Test burst captures mixed with regular and reprocess captures with and without preview.     */   ])', 1), ('([3:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[capture]:[3]:method_text:[capture requests of the largest input and output sizes for each     * supported format.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[capture]:[2]:method_text:[t reprocess timestamps for the largest input and output sizes for each supported format.     */   ])', 1), (""([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[capture]:[1]:method_text:[put's exif data for the largest input and output sizes for each     * supported format.     */   ])"", 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[capture]:[1]:method_text:[         }            } finally {                closeDevice();            }        }    }   ])', 1), ('([247:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[capture]:[247]:method_text:[   public TotalCaptureResult getTotalCaptureResult() {            return mResult;        }    }}])', 1), ('([4:/com/android/cts/verifier/camera/fov/DetermineFovActivity.java]:[CTS]:[4]:method_text:[                       drawRect.bottom, paint);        holder.unlockCanvasAndPost(canvas);    }}])', 1), ('([2:/com/android/cts/verifier/camera/fov/DetermineFovActivity.java]:[capture]:[2]:method_text:[                       drawRect.bottom, paint);        holder.unlockCanvasAndPost(canvas);    }}])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[ITS]:[1]:method_text:[e(mCameraIdsUnderTest[i], mCameraMockListener);                }            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[ITS]:[1]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([5:/android/hardware/camera2/cts/CameraDeviceTest.java]:[CTS]:[5]:method_text:[ure the stable frame rate is guaranteed for the given     * settings.</li>     * </ul>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[JPEG]:[1]:method_text:[           mSession.close();        }    }    /**     * Test session configuration.     */   ])', 1), ('([8:/android/hardware/camera2/cts/CameraDeviceTest.java]:[JPEG]:[8]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([11:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[11]:method_text:[ure the stable frame rate is guaranteed for the given     * settings.</li>     * </ul>     */   ])', 1), ('([3:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[3]:method_text:[takes priority to the stable     * frame rate for the given settings.</li>     * </ul>     */   ])', 1), ('([3:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[3]:method_text:[should be stable, for example, wide fps range like [7, 30]     * is a bad setting.</li>     */   ])', 1), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[2]:method_text:[ettings should maximize image quality     * without compromising stable frame rate.</p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[2]:method_text:[. It has the similar requirement     * as preview, with an additional requirement: </p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[3]:method_text:[posure, sensitivity, and so on) are     * set to reasonable defaults.</li>     * </ul>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[1]:method_text:[tureTemplateTestByCamera(mCameraIdsUnderTest[i], CameraDevice.TEMPLATE_MANUAL);        }    }   ])', 1), ('([11:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[11]:method_text:[e(mCameraIdsUnderTest[i], mCameraMockListener);                }            }        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[3]:method_text:[ runCaptureTest(/*burst*/false, /*repeating*/false, /*abort*/false, /*useExecutor*/true);    }   ])', 1), ('([3:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[3]:method_text:[  runCaptureTest(/*burst*/true, /*repeating*/false, /*abort*/false, /*useExecutor*/true);    }   ])', 1), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[2]:method_text:[  runCaptureTest(/*burst*/false, /*repeating*/true, /*abort*/false, /*useExecutor*/true);    }   ])', 1), ('([6:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[6]:method_text:[progress work. Once the abort is complete, the idle callback will be called.     * </p>     */   ])', 1), ('([10:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[10]:method_text:[     */    }    /**     * Test invalid capture (e.g. null or empty capture request).     */   ])', 1), ('([12:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[12]:method_text:[rtCaptures,     *     capture, setRepeatingRequest, stopRepeating, session+device.close     */   ])', 1), ('([34:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[34]:method_text:[    /**     * Verify basic semantics and error conditions of the prepare call.     *     */   ])', 1), ('([19:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[19]:method_text:[           mSession.close();        }    }    /**     * Test session configuration.     */   ])', 1), ('([4:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[4]:method_text:[    }    }    /**     * Check for any state leakage in case of internal re-configure     */   ])', 1), ('([28:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[28]:method_text:[);        }    }    /**     * Verify creating a session with additional parameters.     */   ])', 1), ('([335:/android/hardware/camera2/cts/CameraDeviceTest.java]:[capture]:[335]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([3:/android/hardware/cts/LegacyCameraPerformanceTest.java]:[CTS]:[3]:method_text:[  if (mHelper.getCamera() != null) {            mHelper.getCamera().release();        }    }   ])', 1), ('([4:/android/hardware/cts/LegacyCameraPerformanceTest.java]:[PerformanceTest]:[4]:method_text:[  if (mHelper.getCamera() != null) {            mHelper.getCamera().release();        }    }   ])', 1), ('([1:/android/hardware/cts/LegacyCameraPerformanceTest.java]:[capture]:[1]:method_text:[                   ResultUnit.MS);            reportLog.submit(mInstrumentation);        }    }}])', 1), ('([1:/com/android/cts/verifier/camera/intents/CameraContentJobService.java]:[CTS]:[1]:method_text:[ose();            mExecutedJobParameters = null;            mCancelled = false;        }    }}])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[ITS]:[1]:method_text:[on and validate the     * recorded video. Preview is set to the video size.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[ITS]:[1]:method_text:[ *     * <p>The recording should be working fine for any kind of start/stop orders.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[ITS]:[1]:method_text:[* <p>     * Test preview and video surfaces sharing the same camera stream.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[ITS]:[1]:method_text:[   * This exercises format/dataspace override behavior of the camera device.     * </p>     */   ])', 1), ('([4:/android/hardware/camera2/cts/RecordingTest.java]:[ITS]:[4]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([2:/android/hardware/camera2/cts/RecordingTest.java]:[1080p]:[2]:method_text:[on and validate the     * recorded video. Preview is set to the video size.     * </p>     */   ])', 1), ('([6:/android/hardware/camera2/cts/RecordingTest.java]:[1080p]:[6]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([4:/android/hardware/camera2/cts/RecordingTest.java]:[CTS]:[4]:method_text:[on and validate the     * recorded video. Preview is set to the video size.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/RecordingTest.java]:[resolution]:[2]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[JPEG]:[1]:method_text:[ is also     * checked to make sure no frame drop caused by video snapshot.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[JPEG]:[1]:method_text:[ capture images are validated according to the capture     * configuration.     * </p>     */   ])', 1), ('([27:/android/hardware/camera2/cts/RecordingTest.java]:[JPEG]:[27]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([4:/android/hardware/camera2/cts/RecordingTest.java]:[capture]:[4]:method_text:[on and validate the     * recorded video. Preview is set to the video size.     * </p>     */   ])', 1), ('([5:/android/hardware/camera2/cts/RecordingTest.java]:[capture]:[5]:method_text:[ is also     * checked to make sure no frame drop caused by video snapshot.     * </p>     */   ])', 1), ('([5:/android/hardware/camera2/cts/RecordingTest.java]:[capture]:[5]:method_text:[ capture images are validated according to the capture     * configuration.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[capture]:[1]:method_text:[Test timelapse recording, where capture rate is slower than video (playback) frame rate.     */   ])', 1), ('([16:/android/hardware/camera2/cts/RecordingTest.java]:[capture]:[16]:method_text:[of highest framerate. Make sure that the video framerate are still accurate.     * </p>     */   ])', 1), ('([136:/android/hardware/camera2/cts/RecordingTest.java]:[capture]:[136]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([4:/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java]:[CTS]:[4]:method_text:[ation) {            mCameraId = cameraId;            mOrientation = orientation;        }    }}])', 1), ('([9:/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java]:[resolution]:[9]:method_text:[ation) {            mCameraId = cameraId;            mOrientation = orientation;        }    }}])', 1), ('([1:/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java]:[JPEG]:[1]:method_text:[ation) {            mCameraId = cameraId;            mOrientation = orientation;        }    }}])', 1), ('([2:/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java]:[capture]:[2]:method_text:[ation) {            mCameraId = cameraId;            mOrientation = orientation;        }    }}])', 1), ('([21:/android/hardware/camera2/cts/helpers/CameraErrorCollector.java]:[CTS]:[21]:method_text:[        expectEquals(msg + ""Image timestamp is wrong."", image.getTimestamp(), timestampNs);    }}])', 1), ('([52:/android/hardware/camera2/cts/helpers/CameraErrorCollector.java]:[capture]:[52]:method_text:[        expectEquals(msg + ""Image timestamp is wrong."", image.getTimestamp(), timestampNs);    }}])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[ITS]:[3]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[latency]:[1]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[latency]:[2]:method_text:[ack level should be     *   close enough to the optical black level values.     * </p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[latency]:[3]:method_text:[anti-banding modes, check if the exposure time adjustment is     * correct.     * </p>     */   ])', 1), ('([32:/android/hardware/camera2/cts/CaptureRequestTest.java]:[latency]:[32]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([6:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CTS]:[6]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([8:/android/hardware/camera2/cts/CaptureRequestTest.java]:[CTS]:[8]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([8:/android/hardware/camera2/cts/CaptureRequestTest.java]:[capture]:[8]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([30:/android/hardware/camera2/cts/CaptureRequestTest.java]:[capture]:[30]:method_text:[ain locked after exposure     * value changes (when requests have lock ON).     * </p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/CaptureRequestTest.java]:[capture]:[7]:method_text:[ack level should be     *   close enough to the optical black level values.     * </p>     */   ])', 1), ('([4:/android/hardware/camera2/cts/CaptureRequestTest.java]:[capture]:[4]:method_text:[ed by setting {@link CaptureRequest#STATISTICS_LENS_SHADING_MAP_MODE} to ON.     * </p>     */   ])', 1), ('([12:/android/hardware/camera2/cts/CaptureRequestTest.java]:[capture]:[12]:method_text:[anti-banding modes, check if the exposure time adjustment is     * correct.     * </p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/CaptureRequestTest.java]:[capture]:[3]:method_text:[ test the flash control     * and {@link CaptureResult#FLASH_STATE} result.     * </p>     */   ])', 1), ('([8:/android/hardware/camera2/cts/CaptureRequestTest.java]:[capture]:[8]:method_text:[f given various initial and final     * AE_CONTROL modes for repeating CaptureRequests.     */   ])', 1), ('([10:/android/hardware/camera2/cts/CaptureRequestTest.java]:[capture]:[10]:method_text:[);            }        }    }    /**     * Test face detection modes and results.     */   ])', 1), ('([591:/android/hardware/camera2/cts/CaptureRequestTest.java]:[capture]:[591]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([3:/android/hardware/cts/CameraCtsActivity.java]:[CTS]:[3]:method_text:[PUSH_BUFFERS);    }    public SurfaceView getSurfaceView() {        return mSurfaceView;    }}])', 1), ('([2:/android/hardware/multiprocess/camera/cts/Camera1Activity.java]:[CTS]:[2]:method_text:[       mErrorServiceConnection.stop();            mErrorServiceConnection = null;        }    }}])', 1), ('([1:/android/hardware/camera2/cts/helpers/AssertHelpers.java]:[CTS]:[1]:method_text:[ult constructor for noninstantiability    private AssertHelpers() { throw new AssertionError(); }}])', 1), ('([3:/android/hardware/camera2/cts/helpers/CameraSessionUtils.java]:[CTS]:[3]:method_text:[onstructor for noninstantiability    private CameraSessionUtils() { throw new AssertionError(); }}])', 1), ('([74:/android/hardware/camera2/cts/helpers/CameraSessionUtils.java]:[capture]:[74]:method_text:[onstructor for noninstantiability    private CameraSessionUtils() { throw new AssertionError(); }}])', 1), ('([6:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[CTS]:[6]:method_text:[own();    }    /**     * Verify raw sensor size information is correctly configured.     */   ])', 1), ('([7:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[capture]:[7]:method_text:[own();    }    /**     * Verify raw sensor size information is correctly configured.     */   ])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[capture]:[1]:method_text:[re and sensitivity) is rounded down if the request cannot     * be honored.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[capture]:[1]:method_text:[nual and auto setting would not make the capture results out of     * sync.     * </p>     */   ])', 1), ('([227:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[capture]:[227]:method_text:[            }            } finally {                closeDevice();            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[ITS]:[1]:method_text:[ck camera orientation against device orientation     */    @CddTest(requirement=""7.5.5/C-1-1"")   ])', 1), ('([2:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[latency]:[2]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([12:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[latency]:[12]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([7:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[latency]:[7]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[latency]:[1]:method_text:[     }    }    /**     * Test values for static metadata used by the RAW capability.     */   ])', 1), ('([17:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[latency]:[17]:method_text:[wbLock));            }        }    }    /**     * Check reprocessing capabilities.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[1080p]:[1]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[1080p]:[3]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([8:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[CTS]:[8]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[CTS]:[1]:method_text:[     }    }    /**     * Test values for static metadata used by the RAW capability.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[CTS]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([6:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[resolution]:[6]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([15:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[resolution]:[15]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[resolution]:[3]:method_text:[wbLock));            }        }    }    /**     * Check reprocessing capabilities.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[resolution]:[2]:method_text:[   }        }    }    /**     * Check ultra high resolution sensor characteristics.     */   ])', 1), ('([19:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[resolution]:[19]:method_text:[nputSize));            }        }    }    /**     * Check depth output capability     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[resolution]:[1]:method_text:[ cross-check the high speed sizes and fps ranges from     * the StreamConfigurationMap.     */   ])', 1), ('([16:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[resolution]:[16]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([35:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[JPEG]:[35]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[JPEG]:[1]:method_text:[     }    }    /**     * Test values for static metadata used by the RAW capability.     */   ])', 1), ('([6:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[JPEG]:[6]:method_text:[wbLock));            }        }    }    /**     * Check reprocessing capabilities.     */   ])', 1), ('([3:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[JPEG]:[3]:method_text:[   }        }    }    /**     * Check ultra high resolution sensor characteristics.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[JPEG]:[2]:method_text:[nputSize));            }        }    }    /**     * Check depth output capability     */   ])', 1), ('([45:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[JPEG]:[45]:method_text:[al distortion        }    }    /**     * Cross-check StreamConfigurationMap output     */   ])', 1), ('([5:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[JPEG]:[5]:method_text:[ cross-check the high speed sizes and fps ranges from     * the StreamConfigurationMap.     */   ])', 1), ('([3:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[capture]:[3]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([20:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[capture]:[20]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([5:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[capture]:[5]:method_text:[   }    }    /**     * Test values for static metadata used by the BURST capability.     */   ])', 1), ('([5:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[capture]:[5]:method_text:[wbLock));            }        }    }    /**     * Check reprocessing capabilities.     */   ])', 1), ('([10:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[capture]:[10]:method_text:[   }        }    }    /**     * Check ultra high resolution sensor characteristics.     */   ])', 1), ('([6:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[capture]:[6]:method_text:[nputSize));            }        }    }    /**     * Check depth output capability     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[capture]:[1]:method_text:[ cross-check the high speed sizes and fps ranges from     * the StreamConfigurationMap.     */   ])', 1), ('([5:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[capture]:[5]:method_text:[on test"");            }        }    }    /**     * Check Logical camera capability     */   ])', 1), ('([15:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[capture]:[15]:method_text:[report NONE; if actually supporting feature, must report NONE, 90, AUTO at     * least.     */   ])', 1), ('([189:/com/android/cts/verifier/camera/its/ItsService.java]:[ITS]:[189]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([1:/com/android/cts/verifier/camera/its/ItsService.java]:[latency]:[1]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([4:/com/android/cts/verifier/camera/its/ItsService.java]:[1080p]:[4]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([10:/com/android/cts/verifier/camera/its/ItsService.java]:[CTS]:[10]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([9:/com/android/cts/verifier/camera/its/ItsService.java]:[PerformanceTest]:[9]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([2:/com/android/cts/verifier/camera/its/ItsService.java]:[MEDIA_PERFORMANCE_CLASS]:[2]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([16:/com/android/cts/verifier/camera/its/ItsService.java]:[JPEG]:[16]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([351:/com/android/cts/verifier/camera/its/ItsService.java]:[capture]:[351]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([1:/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java]:[ITS]:[1]:method_text:[ is closed"");        } catch (IllegalStateException e) {            // Expected.        }    }}])', 1), ('([9:/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java]:[CTS]:[9]:method_text:[ is closed"");        } catch (IllegalStateException e) {            // Expected.        }    }}])', 1), ('([54:/android/hardware/camera2/cts/testcases/Camera2AndroidTestCase.java]:[capture]:[54]:method_text:[ is closed"");        } catch (IllegalStateException e) {            // Expected.        }    }}])', 1), ('([5:/android/hardware/cts/CameraTest.java]:[ITS]:[5]:method_text:[ture and verify all the callback     * functions are called properly.     */    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[ITS]:[1]:method_text:[assertNull(exif.getAttribute(ExifInterface.TAG_GPS_PROCESSING_METHOD));    }    @UiThreadTest   ])', 1), ('([5:/android/hardware/cts/CameraTest.java]:[ITS]:[5]:method_text:[r3 == 1) {                mPreviewDone.open();            }        }    }    @UiThreadTest   ])', 1), ('([5:/android/hardware/cts/CameraTest.java]:[ITS]:[5]:method_text:[= PREVIEW_CALLBACK_RECEIVED;            mPreviewDone.open();        }    }    @UiThreadTest   ])', 1), ('([5:/android/hardware/cts/CameraTest.java]:[ITS]:[5]:method_text:[ "")"",                    Character.isLetter(c) && c != \'x\');        }    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[1080p]:[1]:method_text:[     }            mCamera.stopPreview();            terminateMessageLooper();        }    }   ])', 1), ('([6:/android/hardware/cts/CameraTest.java]:[CTS]:[6]:method_text:[ture and verify all the callback     * functions are called properly.     */    @UiThreadTest   ])', 1), ('([2:/android/hardware/cts/CameraTest.java]:[CTS]:[2]:method_text:[       || (format == ImageFormat.JPEG) || (format == ImageFormat.YUY2);    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[CTS]:[1]:method_text:[(face.id != faces[i + 1].id);                }            }        }    }    @UiThreadTest   ])', 1), ('([15:/android/hardware/cts/CameraTest.java]:[JPEG]:[15]:method_text:[ture and verify all the callback     * functions are called properly.     */    @UiThreadTest   ])', 1), ('([7:/android/hardware/cts/CameraTest.java]:[JPEG]:[7]:method_text:[ MP)"",                    realArea >= videoSnapshotMinArea);        }    }    @UiThreadTest   ])', 1), ('([14:/android/hardware/cts/CameraTest.java]:[JPEG]:[14]:method_text:[       || (format == ImageFormat.JPEG) || (format == ImageFormat.YUY2);    }    @UiThreadTest   ])', 1), ('([17:/android/hardware/cts/CameraTest.java]:[JPEG]:[17]:method_text:[ld be decodable"",                BitmapFactory.decodeFile(mJpegPath));    }    @UiThreadTest   ])', 1), ('([24:/android/hardware/cts/CameraTest.java]:[JPEG]:[24]:method_text:[assertNull(exif.getAttribute(ExifInterface.TAG_GPS_PROCESSING_METHOD));    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[JPEG]:[1]:method_text:[    waitForSnapshotDone();        }        terminateMessageLooper();    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[JPEG]:[1]:method_text:[             distances[Parameters.FOCUS_DISTANCE_FAR_INDEX]);        }    }    @UiThreadTest   ])', 1), ('([5:/android/hardware/cts/CameraTest.java]:[JPEG]:[5]:method_text:[= PREVIEW_CALLBACK_RECEIVED;            mPreviewDone.open();        }    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[JPEG]:[1]:method_text:[    }    }    // Apps should be able to call startPreview in jpeg callback.    @UiThreadTest   ])', 1), ('([7:/android/hardware/cts/CameraTest.java]:[JPEG]:[7]:method_text:[xception e) {            }            mSnapshotDone.open();        }    }    @UiThreadTest   ])', 1), ('([2:/android/hardware/cts/CameraTest.java]:[JPEG]:[2]:method_text:[{            recorder.release();            mCamera.lock();        }    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[JPEG]:[1]:method_text:[            break;        }        mCamera.setParameters(parameters);    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[JPEG]:[1]:method_text:[(face.id != faces[i + 1].id);                }            }        }    }    @UiThreadTest   ])', 1), ('([2:/android/hardware/cts/CameraTest.java]:[JPEG]:[2]:method_text:[     }            mCamera.stopPreview();            terminateMessageLooper();        }    }   ])', 1), ('([6:/android/hardware/cts/CameraTest.java]:[JPEG]:[6]:method_text:[one.close();        }        mCamera.stopPreview();        terminateMessageLooper();    }   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[capture]:[1]:method_text:[ld be decodable"",                BitmapFactory.decodeFile(mJpegPath));    }    @UiThreadTest   ])', 1), ('([4:/android/hardware/cts/CameraTest.java]:[capture]:[4]:method_text:[assertNull(exif.getAttribute(ExifInterface.TAG_GPS_PROCESSING_METHOD));    }    @UiThreadTest   ])', 1), ('([3:/android/hardware/multiprocess/camera/cts/MediaRecorderCameraActivity.java]:[CTS]:[3]:method_text:[ e);        }    }    @Override    public void surfaceDestroyed(SurfaceHolder holder) {    }}])', 1), ('([3:/com/android/cts/verifier/camera/fov/CtsTestHelper.java]:[CTS]:[3]:method_text:[         + "", Measured FOV = "" + res.measuredFOV + \'\\n\';        }        return details;    }}])', 1), ('([6:/com/android/cts/verifier/camera/fov/CtsTestHelper.java]:[resolution]:[6]:method_text:[         + "", Measured FOV = "" + res.measuredFOV + \'\\n\';        }        return details;    }}])', 1), ('([8:/android/hardware/camera2/cts/MultiViewTest.java]:[CTS]:[8]:method_text:[atic int YUV_IMG_READER_COUNT = 3;    private final static double BITMAP_DIFF_THRESHOLD = 0.1;   ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[CTS]:[1]:method_text:[stopPreview(cameraId);    }    /*     * Test dynamic shared surface switch behavior.     */   ])', 1), ('([3:/android/hardware/camera2/cts/MultiViewTest.java]:[capture]:[3]:method_text:[atic int YUV_IMG_READER_COUNT = 3;    private final static double BITMAP_DIFF_THRESHOLD = 0.1;   ])', 1), ('([5:/android/hardware/camera2/cts/MultiViewTest.java]:[capture]:[5]:method_text:[Id);    }    /*     * Verify dynamic shared surface behavior using YUV ImageReaders.     */   ])', 1), ('([6:/android/hardware/camera2/cts/MultiViewTest.java]:[capture]:[6]:method_text:[eaders[i].close();        }    }    /*     * Test the dynamic shared surface limit.     */   ])', 1), ('([4:/android/hardware/camera2/cts/MultiViewTest.java]:[capture]:[4]:method_text:[stopPreview(cameraId);    }    /*     * Test dynamic shared surface switch behavior.     */   ])', 1), ('([4:/android/hardware/camera2/cts/MultiViewTest.java]:[capture]:[4]:method_text:[ify the Bitmap     * from the first TextureView is identical to the second TextureView.     */   ])', 1), ('([15:/android/hardware/camera2/cts/MultiViewTest.java]:[capture]:[15]:method_text:[    }    /*     * Verify behavior of sharing surfaces within one OutputConfiguration     */   ])', 1), ('([6:/android/hardware/camera2/cts/MultiViewTest.java]:[capture]:[6]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([1:/android/camera/cts/api25test/EnableZslTest.java]:[ITS]:[1]:method_text:[ <p>Verify CaptureRequest.CONTROL_ENABLE_ZSL is false if available in all templates.</p>     */   ])', 1), ('([5:/android/camera/cts/api25test/EnableZslTest.java]:[CTS]:[5]:method_text:[ <p>Verify CaptureRequest.CONTROL_ENABLE_ZSL is false if available in all templates.</p>     */   ])', 1), ('([13:/android/camera/cts/api25test/EnableZslTest.java]:[capture]:[13]:method_text:[ <p>Verify CaptureRequest.CONTROL_ENABLE_ZSL is false if available in all templates.</p>     */   ])', 1), ('([9:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[CTS]:[9]:method_text:[er mMultiResolutionImageReader;    private SimpleMultiResolutionImageReaderListener mListener;   ])', 1), ('([10:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[resolution]:[10]:method_text:[er mMultiResolutionImageReader;    private SimpleMultiResolutionImageReaderListener mListener;   ])', 1), ('([29:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[resolution]:[29]:method_text:[                maxSizes.contains(streamSize));                }            }        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[resolution]:[2]:method_text:[ {        testMultiResolutionImageReaderForFormat(ImageFormat.JPEG, /*repeating*/false);    }   ])', 1), ('([2:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[resolution]:[2]:method_text:[    testMultiResolutionImageReaderForFormat(ImageFormat.YUV_420_888, /*repeating*/false);    }   ])', 1), ('([2:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[resolution]:[2]:method_text:[     testMultiResolutionImageReaderForFormat(ImageFormat.RAW_SENSOR, /*repeating*/false);    }   ])', 1), ('([2:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[resolution]:[2]:method_text:[        testMultiResolutionImageReaderForFormat(ImageFormat.PRIVATE, /*repeating*/false);    }   ])', 1), ('([2:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[resolution]:[2]:method_text:[n {        testMultiResolutionImageReaderForFormat(ImageFormat.JPEG, /*repeating*/true);    }   ])', 1), ('([2:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[resolution]:[2]:method_text:[     testMultiResolutionImageReaderForFormat(ImageFormat.YUV_420_888, /*repeating*/true);    }   ])', 1), ('([2:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[resolution]:[2]:method_text:[      testMultiResolutionImageReaderForFormat(ImageFormat.RAW_SENSOR, /*repeating*/true);    }   ])', 1), ('([3:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[resolution]:[3]:method_text:[Test for making sure the mandatory stream combinations work for multi-resolution output.     */   ])', 1), ('([55:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[resolution]:[55]:method_text:[s HardwareBuffer"", hwb);            img.close();            numImageVerified++;        }    }}])', 1), ('([2:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[JPEG]:[2]:method_text:[er mMultiResolutionImageReader;    private SimpleMultiResolutionImageReaderListener mListener;   ])', 1), ('([2:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[JPEG]:[2]:method_text:[ {        testMultiResolutionImageReaderForFormat(ImageFormat.JPEG, /*repeating*/false);    }   ])', 1), ('([2:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[JPEG]:[2]:method_text:[n {        testMultiResolutionImageReaderForFormat(ImageFormat.JPEG, /*repeating*/true);    }   ])', 1), ('([10:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[capture]:[10]:method_text:[er mMultiResolutionImageReader;    private SimpleMultiResolutionImageReaderListener mListener;   ])', 1), ('([4:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[capture]:[4]:method_text:[                maxSizes.contains(streamSize));                }            }        }    }   ])', 1), ('([44:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[capture]:[44]:method_text:[s HardwareBuffer"", hwb);            img.close();            numImageVerified++;        }    }}])', 1), ('([1:/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java]:[ITS]:[1]:method_text:[sButtonGoesToNextStage() {        findViewById(R.id.pass_button).setOnClickListener(this);    }}])', 1), ('([13:/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java]:[CTS]:[13]:method_text:[sButtonGoesToNextStage() {        findViewById(R.id.pass_button).setOnClickListener(this);    }}])', 1), ('([7:/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java]:[capture]:[7]:method_text:[sButtonGoesToNextStage() {        findViewById(R.id.pass_button).setOnClickListener(this);    }}])', 1), ('([1:/com/android/cts/verifier/camera/formats/CameraFormatsActivity.java]:[ITS]:[1]:method_text:[    uIndex += 4;                    vIndex += 4;                }            }        }    }}])', 1), ('([3:/com/android/cts/verifier/camera/formats/CameraFormatsActivity.java]:[CTS]:[3]:method_text:[    uIndex += 4;                    vIndex += 4;                }            }        }    }}])', 1), ('([43:/com/android/cts/verifier/camera/formats/CameraFormatsActivity.java]:[resolution]:[43]:method_text:[    uIndex += 4;                    vIndex += 4;                }            }        }    }}])', 1), ('([4:/com/android/cts/verifier/camera/formats/CameraFormatsActivity.java]:[JPEG]:[4]:method_text:[    uIndex += 4;                    vIndex += 4;                }            }        }    }}])', 1), ('([1:/android/hardware/cts/helpers/CameraParameterizedTestCase.java]:[CTS]:[1]:method_text:[   if (mAdoptShellPerm) {            mUiAutomation.dropShellPermissionIdentity();        }    }}])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[latency]:[1]:method_text:[erage capture latency and if possible    // ensure that the value is within the reported range.   ])', 1), ('([12:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[latency]:[12]:method_text:[           }            }        }    }    // Verify concurrent extension sessions behavior   ])', 1), ('([6:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[CTS]:[6]:method_text:[ure);    }    // Verify that camera extension sessions can be created and closed as expected.   ])', 1), ('([8:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[JPEG]:[8]:method_text:[           }            }        }    }    // Verify concurrent extension sessions behavior   ])', 1), ('([8:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[JPEG]:[8]:method_text:[ally increasing timestamps!"");            }            return mLastTimestamp;        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[JPEG]:[1]:method_text:[y {                    mTestRule.closeDevice(id);                }            }        }    }}])', 1), ('([4:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[capture]:[4]:method_text:[ure);    }    // Verify that camera extension sessions can be created and closed as expected.   ])', 1), ('([5:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[capture]:[5]:method_text:[that camera extension sessions close as expected when creating a regular capture    // session.   ])', 1), ('([3:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[capture]:[3]:method_text:[seDevice(id);                }            }        }    }    // Verify camera device query   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[capture]:[1]:method_text:[repeating/stopRepeating on all supported extensions and expected state/capture    // callbacks.   ])', 1), ('([35:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[capture]:[35]:method_text:[erage capture latency and if possible    // ensure that the value is within the reported range.   ])', 1), ('([50:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[capture]:[50]:method_text:[           }            }        }    }    // Verify concurrent extension sessions behavior   ])', 1), ('([7:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[capture]:[7]:method_text:[epeating with multi frame capture on all supported extensions.    // Verify still frame output.   ])', 1), ('([92:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[capture]:[92]:method_text:[ally increasing timestamps!"");            }            return mLastTimestamp;        }    }   ])', 1), ('([47:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[capture]:[47]:method_text:[y {                    mTestRule.closeDevice(id);                }            }        }    }}])', 1), ('([2:/android/hardware/cts/CameraGLTest.java]:[ITS]:[2]:method_text:[.setPreviewTexture in conjunction with the standard Camera preview callback */    @UiThreadTest   ])', 1), ('([18:/android/hardware/cts/CameraGLTest.java]:[CTS]:[18]:method_text:[.setPreviewTexture in conjunction with the standard Camera preview callback */    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraGLTest.java]:[CTS]:[1]:method_text:["";        // Magic key        private static final int GL_TEXTURE_EXTERNAL_OES = 0x8D65;    }}])', 1), ('([1:/android/hardware/cts/CameraGLTest.java]:[capture]:[1]:method_text:[.setPreviewTexture in conjunction with the standard Camera preview callback */    @UiThreadTest   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionTestActivity.java]:[CTS]:[1]:method_text:[mTextureView);    }    public TextureView getTextureView() {        return mTextureView;    }}])', 1), ('([2:/android/hardware/camera2/cts/PerformanceTest.java]:[latency]:[2]:method_text:[   * For depth-only devices, timing is done with the DEPTH16 format instead.     * </p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/PerformanceTest.java]:[latency]:[3]:method_text:[ sending     * out the capture request and getting the full capture result.     * </p>     */   ])', 1), ('([8:/android/hardware/camera2/cts/PerformanceTest.java]:[latency]:[8]:method_text:[, and the frame duration, which is the timestamp     * gap between results.     * </p>     */   ])', 1), ('([4:/android/hardware/camera2/cts/PerformanceTest.java]:[latency]:[4]:method_text:[e time     * a reprocess request is issued to the time the reprocess image is returned.     */   ])', 1), ('([2:/android/hardware/camera2/cts/PerformanceTest.java]:[latency]:[2]:method_text:[s,     * i.e., how many frames can be reprocessed during a given amount of time.     *     */   ])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[latency]:[1]:method_text:[e     * time a reprocess request is issued to the time the reprocess image is returned.     */   ])', 1), ('([2:/android/hardware/camera2/cts/PerformanceTest.java]:[latency]:[2]:method_text:[s, i.e., how many frames can     * be reprocessed during a given amount of time.     *     */   ])', 1), ('([6:/android/hardware/camera2/cts/PerformanceTest.java]:[latency]:[6]:method_text:[sult after ""                    + ""waiting for "" + numResultsWait + "" results"");        }    }}])', 1), ('([8:/android/hardware/camera2/cts/PerformanceTest.java]:[CTS]:[8]:method_text:[   * For depth-only devices, timing is done with the DEPTH16 format instead.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[CTS]:[1]:method_text:[, and the frame duration, which is the timestamp     * gap between results.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[CTS]:[1]:method_text:[e time     * a reprocess request is issued to the time the reprocess image is returned.     */   ])', 1), ('([2:/android/hardware/camera2/cts/PerformanceTest.java]:[PerformanceTest]:[2]:method_text:[   * For depth-only devices, timing is done with the DEPTH16 format instead.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[PerformanceTest]:[1]:method_text:[s,     * i.e., how many frames can be reprocessed during a given amount of time.     *     */   ])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[PerformanceTest]:[1]:method_text:[e     * time a reprocess request is issued to the time the reprocess image is returned.     */   ])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[PerformanceTest]:[1]:method_text:[s, i.e., how many frames can     * be reprocessed during a given amount of time.     *     */   ])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[PerformanceTest]:[1]:method_text:[        }    }    /**     * Testing reprocessing caused preview stall (frame drops)     */   ])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[PerformanceTest]:[1]:method_text:[sult after ""                    + ""waiting for "" + numResultsWait + "" results"");        }    }}])', 1), ('([4:/android/hardware/camera2/cts/PerformanceTest.java]:[JPEG]:[4]:method_text:[   * For depth-only devices, timing is done with the DEPTH16 format instead.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/PerformanceTest.java]:[JPEG]:[2]:method_text:[ sending     * out the capture request and getting the full capture result.     * </p>     */   ])', 1), ('([8:/android/hardware/camera2/cts/PerformanceTest.java]:[JPEG]:[8]:method_text:[, and the frame duration, which is the timestamp     * gap between results.     * </p>     */   ])', 1), ('([27:/android/hardware/camera2/cts/PerformanceTest.java]:[JPEG]:[27]:method_text:[sult after ""                    + ""waiting for "" + numResultsWait + "" results"");        }    }}])', 1), ('([9:/android/hardware/camera2/cts/PerformanceTest.java]:[capture]:[9]:method_text:[   * For depth-only devices, timing is done with the DEPTH16 format instead.     * </p>     */   ])', 1), ('([12:/android/hardware/camera2/cts/PerformanceTest.java]:[capture]:[12]:method_text:[ sending     * out the capture request and getting the full capture result.     * </p>     */   ])', 1), ('([51:/android/hardware/camera2/cts/PerformanceTest.java]:[capture]:[51]:method_text:[, and the frame duration, which is the timestamp     * gap between results.     * </p>     */   ])', 1), ('([69:/android/hardware/camera2/cts/PerformanceTest.java]:[capture]:[69]:method_text:[e time     * a reprocess request is issued to the time the reprocess image is returned.     */   ])', 1), ('([182:/android/hardware/camera2/cts/PerformanceTest.java]:[capture]:[182]:method_text:[sult after ""                    + ""waiting for "" + numResultsWait + "" results"");        }    }}])', 1), ('([3:/android/hardware/camera2/cts/helpers/InMatcher.java]:[CTS]:[3]:method_text:[ static <T> Matcher<T> in(Collection<T> operand) {        return new InMatcher<T>(operand);    }}])', 1), ('([5:/android/hardware/camera2/cts/ConcurrentCameraTest.java]:[CTS]:[5]:method_text:[ this.substituteY8 = substituteY8;            this.combination = combination;        }    };   ])', 1), ('([5:/android/hardware/camera2/cts/ConcurrentCameraTest.java]:[capture]:[5]:method_text:[ this.substituteY8 = substituteY8;            this.combination = combination;        }    };   ])', 1), ('([16:/android/hardware/camera2/cts/ConcurrentCameraTest.java]:[capture]:[16]:method_text:[ssage()));                }            }            testSample.targets.close();        }    }}])', 1), ('([1:/com/android/cts/verifier/camera/fov/CameraPreviewView.java]:[CTS]:[1]:method_text:[ i * GRID_WIDTH;            canvas.drawLine(x, 0, x, canvas.getHeight(), mPaint);        }    }}])', 1), ('([2:/android/hardware/camera2/cts/helpers/MaybeNull.java]:[CTS]:[2]:method_text:[default constructor for noninstantiability    private MaybeNull() { throw new AssertionError(); }}])', 1), ('([5:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[CTS]:[5]:method_text:[  private ImageWriter mImageWriter;    private SimpleImageWriterListener mImageWriterListener;   ])', 1), ('([11:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[resolution]:[11]:method_text:[  private ImageWriter mImageWriter;    private SimpleImageWriterListener mImageWriterListener;   ])', 1), ('([49:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[resolution]:[49]:method_text:[   }    }    /**     * Test YUV_420_888 -> YUV_420_888 multi-resolution reprocessing     */   ])', 1), ('([3:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[resolution]:[3]:method_text:[;        }    }    /**     * Test YUV_420_888 -> JPEG multi-resolution reprocessing     */   ])', 1), ('([3:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[resolution]:[3]:method_text:[        }    }    /**     * Test OPAQUE -> YUV_420_888 multi-resolution reprocessing     */   ])', 1), ('([3:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[resolution]:[3]:method_text:[_888);        }    }    /**     * Test OPAQUE -> JPEG multi-resolution reprocessing     */   ])', 1), ('([3:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[resolution]:[3]:method_text:[ng sure the mandatory stream combinations work for multi-resolution     * reprocessing.     */   ])', 1), ('([71:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[resolution]:[71]:method_text:[     }        public Size getExpectedSize() {            return mExpectedSize;        }    }}])', 1), ('([4:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[JPEG]:[4]:method_text:[   }    }    /**     * Test YUV_420_888 -> YUV_420_888 multi-resolution reprocessing     */   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[;        }    }    /**     * Test YUV_420_888 -> JPEG multi-resolution reprocessing     */   ])', 1), ('([2:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[JPEG]:[2]:method_text:[        }    }    /**     * Test OPAQUE -> YUV_420_888 multi-resolution reprocessing     */   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[_888);        }    }    /**     * Test OPAQUE -> JPEG multi-resolution reprocessing     */   ])', 1), ('([3:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[JPEG]:[3]:method_text:[ng sure the mandatory stream combinations work for multi-resolution     * reprocessing.     */   ])', 1), ('([6:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[JPEG]:[6]:method_text:[     }        public Size getExpectedSize() {            return mExpectedSize;        }    }}])', 1), ('([14:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[capture]:[14]:method_text:[  private ImageWriter mImageWriter;    private SimpleImageWriterListener mImageWriterListener;   ])', 1), ('([95:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[capture]:[95]:method_text:[     }        public Size getExpectedSize() {            return mExpectedSize;        }    }}])', 1), ('([4:/android/hardware/camera2/cts/Camera2SurfaceViewCtsActivity.java]:[CTS]:[4]:method_text:[(surfaceLock) {            surfaceValid = false;        }        surfaceStateDone.open();    }}])', 1), ('([1:/android/camera/cts/api31test/SPerfClassTest.java]:[ITS]:[1]:method_text:[ra S Performance class requirement for JPEG sizes.     */    @CddTest(requirement=""7.5/H-1-8"")   ])', 1), ('([7:/android/camera/cts/api31test/SPerfClassTest.java]:[1080p]:[7]:method_text:[ra S Performance class requirement for JPEG sizes.     */    @CddTest(requirement=""7.5/H-1-8"")   ])', 1), ('([7:/android/camera/cts/api31test/SPerfClassTest.java]:[CTS]:[7]:method_text:[ra S Performance class requirement for JPEG sizes.     */    @CddTest(requirement=""7.5/H-1-8"")   ])', 1), ('([30:/android/camera/cts/api31test/SPerfClassTest.java]:[JPEG]:[30]:method_text:[ra S Performance class requirement for JPEG sizes.     */    @CddTest(requirement=""7.5/H-1-8"")   ])', 1), ('([2:/android/camera/cts/api31test/SPerfClassTest.java]:[JPEG]:[2]:method_text:[meraIds.length; i++) {            testSPerfClassJpegSizesByCamera(mCameraIds[i]);        }    }}])', 1), ('([35:/android/camera/cts/api31test/SPerfClassTest.java]:[capture]:[35]:method_text:[ra S Performance class requirement for JPEG sizes.     */    @CddTest(requirement=""7.5/H-1-8"")   ])', 1), ('([4:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[ITS]:[4]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([43:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[latency]:[43]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([3:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[1080p]:[3]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([24:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[CTS]:[24]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([6:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[JPEG]:[6]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([196:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[capture]:[196]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([3:/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java]:[ITS]:[3]:method_text:[ton = (ImageButton) findViewById(R.id.pass_button);        pass_button.setEnabled(enabled);    }}])', 1), ('([3:/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java]:[CTS]:[3]:method_text:[ton = (ImageButton) findViewById(R.id.pass_button);        pass_button.setEnabled(enabled);    }}])', 1), ('([1:/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java]:[resolution]:[1]:method_text:[ton = (ImageButton) findViewById(R.id.pass_button);        pass_button.setEnabled(enabled);    }}])', 1), ('([30:/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java]:[JPEG]:[30]:method_text:[ton = (ImageButton) findViewById(R.id.pass_button);        pass_button.setEnabled(enabled);    }}])', 1), ('([71:/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java]:[capture]:[71]:method_text:[ton = (ImageButton) findViewById(R.id.pass_button);        pass_button.setEnabled(enabled);    }}])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[ITS]:[1]:method_text:[  /**     * Test for making sure that streaming from physical streams work as expected.     */   ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[latency]:[1]:method_text:[}    }    /**     * Tests invalid/incorrect multiple physical capture request cases.     */   ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[latency]:[1]:method_text:[camera, the activePhysicalId is valid, and is the same     * for all capture templates.     */   ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[latency]:[1]:method_text:[d device, the default FOV is     * between 50 and 90 degrees for all capture templates.     */   ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[latency]:[1]:method_text:[htPixels/dm.ydpi,2);        return Math.sqrt(widthInInchesSquared + heightInInchesSquared);    }}])', 1), ('([6:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[CTS]:[6]:method_text:[agtion behaves as expected     * for logical multi-camera and non-logical multi-camera.     */   ])', 1), ('([7:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[capture]:[7]:method_text:[agtion behaves as expected     * for logical multi-camera and non-logical multi-camera.     */   ])', 1), ('([9:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[capture]:[9]:method_text:[  /**     * Test for making sure that streaming from physical streams work as expected.     */   ])', 1), ('([8:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[capture]:[8]:method_text:[    * Test for making sure that multiple requests for physical cameras work as expected.     */   ])', 1), ('([9:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[capture]:[9]:method_text:[}    }    /**     * Tests invalid/incorrect multiple physical capture request cases.     */   ])', 1), ('([13:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[capture]:[13]:method_text:[not have sudden jump in field     *   of view.     * - Main physical id must be valid.     */   ])', 1), ('([25:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[capture]:[25]:method_text:[camera, the activePhysicalId is valid, and is the same     * for all capture templates.     */   ])', 1), ('([9:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[capture]:[9]:method_text:[d device, the default FOV is     * between 50 and 90 degrees for all capture templates.     */   ])', 1), ('([61:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[capture]:[61]:method_text:[htPixels/dm.ydpi,2);        return Math.sqrt(widthInInchesSquared + heightInInchesSquared);    }}])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[ITS]:[1]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([7:/android/hardware/camera2/cts/StillCaptureTest.java]:[latency]:[7]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([8:/android/hardware/camera2/cts/StillCaptureTest.java]:[CTS]:[8]:method_text:[  super.tearDown();    }    /**     * Test JPEG capture exif fields for each camera.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[resolution]:[1]:method_text:[ages produced by the largest resolution camera sensor on     * the devices.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[1]:method_text:[  super.tearDown();    }    /**     * Test JPEG capture exif fields for each camera.     */   ])', 1), ('([5:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[5]:method_text:[        }        }    }    /**     * Test HEIC capture exif fields for each camera.     */   ])', 1), ('([10:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[10]:method_text:[peg. The AWB and AE are in auto modes. AF mode     * is CONTINUOUS_PICTURE.     * </p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[3]:method_text:[   * is CONTINUOUS_PICTURE. Same as testTakePicture, but with enableZSL set.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[1]:method_text:[ AE/AF can settle.     * - Capturing with a request targeting all three output streams.     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[2]:method_text:[ AE/AF can settle.     * - Capturing with a request targeting all three output streams.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[1]:method_text:[e scan is triggered to make sure the AF     * converges in reasonable time.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[1]:method_text:[     * result validation is covered by {@link #stillExifTestByCamera} test.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[2]:method_text:[ages produced by the largest resolution camera sensor on     * the devices.     * </p>     */   ])', 1), ('([47:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[47]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([8:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[8]:method_text:[  super.tearDown();    }    /**     * Test JPEG capture exif fields for each camera.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[1]:method_text:[        }        }    }    /**     * Test HEIC capture exif fields for each camera.     */   ])', 1), ('([3:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[3]:method_text:[  }    }    /**     * Test dynamic depth capture along with preview for each camera.     */   ])', 1), ('([7:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[7]:method_text:[peg. The AWB and AE are in auto modes. AF mode     * is CONTINUOUS_PICTURE.     * </p>     */   ])', 1), ('([6:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[6]:method_text:[   * is CONTINUOUS_PICTURE. Same as testTakePicture, but with enableZSL set.     * </p>     */   ])', 1), ('([5:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[5]:method_text:[ Test basic Raw capture. Raw buffer avaiablility is checked, but raw buffer data is not.     */   ])', 1), ('([4:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[4]:method_text:[t basic Raw ZSL capture. Raw buffer avaiablility is checked, but raw buffer data is not.     */   ])', 1), ('([8:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[8]:method_text:[ AE/AF can settle.     * - Capturing with a request targeting all three output streams.     */   ])', 1), ('([4:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[4]:method_text:[ AE/AF can settle.     * - Capturing with a request targeting all three output streams.     */   ])', 1), ('([7:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[7]:method_text:[e scan is triggered to make sure the AF     * converges in reasonable time.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[2]:method_text:[     * result validation is covered by {@link #stillExifTestByCamera} test.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[1]:method_text:[ed when AE     * compensation settings is changed, even when AE lock is ON.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[1]:method_text:[eader();            }        }    }    /**     * Test Ae region for still capture.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[1]:method_text:[ader();            }        }    }    /**     * Test AWB region for still capture.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[1]:method_text:[eader();            }        }    }    /**     * Test Af region for still capture.     */   ])', 1), ('([6:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[6]:method_text:[ages produced by the largest resolution camera sensor on     * the devices.     * </p>     */   ])', 1), ('([273:/android/hardware/camera2/cts/StillCaptureTest.java]:[capture]:[273]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([1:/android/hardware/camera2/cts/helpers/Camera2Focuser.java]:[latency]:[1]:method_text:[          }                mAutoFocus.onCaptureCompleted(result);            }        };    }}])', 1), ('([1:/android/hardware/camera2/cts/helpers/Camera2Focuser.java]:[CTS]:[1]:method_text:[          }                mAutoFocus.onCaptureCompleted(result);            }        };    }}])', 1), ('([55:/android/hardware/camera2/cts/helpers/Camera2Focuser.java]:[capture]:[55]:method_text:[          }                mAutoFocus.onCaptureCompleted(result);            }        };    }}])', 1), ('([6:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[CTS]:[6]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([1:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[JPEG]:[1]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([3:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[JPEG]:[3]:method_text:[t.JPEG);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([7:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[capture]:[7]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([2:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[capture]:[2]:method_text:[t.JPEG);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([19:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[capture]:[19]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([3:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[CTS]:[3]:method_text:[dLibrary(""ctscamera2_jni"");        Log.i(""NativeCameraDeviceTest"", ""after loadlibrary"");    }   ])', 1), ('([3:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[capture]:[3]:method_text:[details"",                testCameraDeviceCreateCaptureRequestNative(mOverrideCameraId));    }   ])', 1), ('([5:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[capture]:[5]:method_text:[    private static native boolean testCameraDeviceCaptureFailureNative(String overrideCameraId);}])', 1), ('([3:/android/hardware/camera2/cts/SimpleObjectsTest.java]:[CTS]:[3]:method_text:[droidJUnit4.class)@SuppressWarnings(""EqualsIncompatibleType"")public class SimpleObjectsTest {   ])', 1), ('([3:/android/hardware/camera2/cts/SimpleObjectsTest.java]:[capture]:[3]:method_text:[droidJUnit4.class)@SuppressWarnings(""EqualsIncompatibleType"")public class SimpleObjectsTest {   ])', 1), ('([20:/android/hardware/camera2/cts/SimpleObjectsTest.java]:[capture]:[20]:method_text:[d not be equal"",                !testCharacteristicsKey.equals(testCharacteristicsKey5));    }}])', 1), ('([1:/android/hardware/camera2/cts/CameraManagerTest.java]:[ITS]:[1]:method_text:[fail(""Invalid CameraAccessException code: "" + reason);        return -1; // unreachable    }   ])', 1), ('([6:/android/hardware/camera2/cts/CameraManagerTest.java]:[CTS]:[6]:method_text:[fail(""Invalid CameraAccessException code: "" + reason);        return -1; // unreachable    }   ])', 1), ('([2:/android/hardware/camera2/cts/CameraManagerTest.java]:[capture]:[2]:method_text:[pening the same device multiple times and make sure the right     * error state is set.     */   ])', 1), (""([3:/android/hardware/camera2/cts/CameraManagerTest.java]:[capture]:[3]:method_text:[effect, and unregistering     * a listener that isn't registered should have no effect.     */   ])"", 1), ('([1:/com/android/cts/verifier/camera/its/Logt.java]:[ITS]:[1]:method_text:[os.SystemClock.elapsedRealtime();        Log.e(tag, String.format(""[%d] %s"", t, msg), tr);    }}])', 1), ('([1:/com/android/cts/verifier/camera/its/Logt.java]:[CTS]:[1]:method_text:[os.SystemClock.elapsedRealtime();        Log.e(tag, String.format(""[%d] %s"", t, msg), tr);    }}])', 1), ('([3:/android/hardware/camera2/cts/NativeStillCaptureTest.java]:[CTS]:[3]:method_text:[dLibrary(""ctscamera2_jni"");        Log.i(""NativeStillCaptureTest"", ""after loadlibrary"");    }   ])', 1), ('([4:/android/hardware/camera2/cts/NativeStillCaptureTest.java]:[capture]:[4]:method_text:[dLibrary(""ctscamera2_jni"");        Log.i(""NativeStillCaptureTest"", ""after loadlibrary"");    }   ])', 1), ('([4:/android/hardware/camera2/cts/NativeStillCaptureTest.java]:[capture]:[4]:method_text:[StillCaptureNative(            String filePath, Surface previewSurface, String overrideCameraId);}])', 1), ('([1:/android/hardware/cts/CameraPerformanceTestHelper.java]:[CTS]:[1]:method_text:[apshotLock.unlock();        }    }    public Camera getCamera() {        return mCamera;    }])', 1), ('([1:/android/hardware/cts/CameraPerformanceTestHelper.java]:[PerformanceTest]:[1]:method_text:[apshotLock.unlock();        }    }    public Camera getCamera() {        return mCamera;    }])', 1), ('([1:/android/hardware/cts/CameraPerformanceTestHelper.java]:[JPEG]:[1]:method_text:[apshotLock.unlock();        }    }    public Camera getCamera() {        return mCamera;    }])', 1), ('([4:/android/hardware/camera2/cts/Camera2MultiViewCtsActivity.java]:[CTS]:[4]:method_text:[xception(""Surface view index must be 0 or 1"");        }        return mSurfaceView[index];    }}])', 1), ('([12:/android/hardware/camera2/cts/CameraTestUtils.java]:[ITS]:[12]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([17:/android/hardware/camera2/cts/CameraTestUtils.java]:[latency]:[17]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([3:/android/hardware/camera2/cts/CameraTestUtils.java]:[1080p]:[3]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([9:/android/hardware/camera2/cts/CameraTestUtils.java]:[CTS]:[9]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([30:/android/hardware/camera2/cts/CameraTestUtils.java]:[resolution]:[30]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([2:/android/hardware/camera2/cts/CameraTestUtils.java]:[MEDIA_PERFORMANCE_CLASS]:[2]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([106:/android/hardware/camera2/cts/CameraTestUtils.java]:[JPEG]:[106]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([301:/android/hardware/camera2/cts/CameraTestUtils.java]:[capture]:[301]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([4:/android/hardware/cts/Camera_SizeTest.java]:[CTS]:[4]:method_text:[float ASPECT_RATIO_TOLERANCE = 0.05f;    private static final String TAG = ""Camera_SizeTest"";   ])', 1), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[JPEG]:[1]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}     */   ])', 1), ('([12:/android/hardware/cts/Camera_SizeTest.java]:[JPEG]:[12]:method_text:[st = new Camera_SizeTest();        test.setName(testName);        testSuite.addTest(test);    }}])', 1), ('([3:/com/android/cts/verifier/camera/flashlight/CameraFlashlightActivity.java]:[CTS]:[3]:method_text:[t_done_button);                break;            default:                break;        }    }}])', 1), ('([3:/android/hardware/camera2/cts/IdleUidTest.java]:[CTS]:[3]:method_text:[);    }    /**     * Tests that a UID has access to the camera only in active state.     */   ])', 1), ('([4:/android/hardware/camera2/cts/IdleUidTest.java]:[capture]:[4]:method_text:[;        SystemUtil.runShellCommand(InstrumentationRegistry.getInstrumentation(), command);    }}])', 1), ('([3:/android/hardware/camera2/cts/rs/AllocationCache.java]:[ITS]:[3]:method_text:[       throw new IllegalStateException(""AllocationCache has already been closed"");        }    }}])', 1), ('([5:/android/hardware/camera2/cts/rs/AllocationCache.java]:[CTS]:[5]:method_text:[       throw new IllegalStateException(""AllocationCache has already been closed"");        }    }}])', 1), ('([4:/android/hardware/camera2/cts/ImageWriterTest.java]:[CTS]:[4]:method_text:[. This validates the ImageWriter explicit buffer copy     * interface.</li>     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/ImageWriterTest.java]:[JPEG]:[2]:method_text:[ce(), 1 /*maxImages*/);            writer.close();            reader.close();        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/ImageWriterTest.java]:[capture]:[3]:method_text:[. This validates the ImageWriter explicit buffer copy     * interface.</li>     * </p>     */   ])', 1), ('([34:/android/hardware/camera2/cts/ImageWriterTest.java]:[capture]:[34]:method_text:[""Opaque image number planes should be zero"",                image.getPlanes().length == 0);    }}])', 1), ('([8:/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java]:[latency]:[8]:method_text:[< latencyRange.getUpper()));                    }                }            }        }    }}])', 1), ('([3:/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java]:[CTS]:[3]:method_text:[nsion"");        } catch (IllegalArgumentException e) {            // Expected        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java]:[resolution]:[3]:method_text:[nsion"");        } catch (IllegalArgumentException e) {            // Expected        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java]:[resolution]:[1]:method_text:[urface "" +                            ""type"");                }            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java]:[JPEG]:[1]:method_text:[ySupportedSizes(extensionChars, id, extension, ImageFormat.JPEG);            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java]:[JPEG]:[1]:method_text:[< latencyRange.getUpper()));                    }                }            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java]:[capture]:[1]:method_text:[< latencyRange.getUpper()));                    }                }            }        }    }}])', 1), ('([1:/android/hardware/cts/GLSurfaceViewCtsActivity.java]:[ITS]:[1]:method_text:[  @Override    protected void onPause() {        super.onPause();        mView.onPause();    }}])', 1), ('([2:/android/hardware/cts/GLSurfaceViewCtsActivity.java]:[CTS]:[2]:method_text:[  @Override    protected void onPause() {        super.onPause();        mView.onPause();    }}])', 1), ('([5:/android/hardware/camera2/cts/Camera2OfflineTestActivity.java]:[CTS]:[5]:method_text:[       mErrorServiceConnection.stop();            mErrorServiceConnection = null;        }    }}])', 1), ('([8:/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java]:[CTS]:[8]:method_text:[ends RunListener {        private volatile boolean mCurrentTestReported;        @Override       ])', 1), ('([4:/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java]:[PerformanceTest]:[4]:method_text:[ends RunListener {        private volatile boolean mCurrentTestReported;        @Override       ])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[ITS]:[1]:method_text:[ys happen after onCaptureStart or     * onCaptureProgressed callbacks.     * </ul></p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[ITS]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([7:/android/hardware/camera2/cts/CaptureResultTest.java]:[CTS]:[7]:method_text:[y times, and checks if there is any null entries in     * a capture result.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[resolution]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([27:/android/hardware/camera2/cts/CaptureResultTest.java]:[JPEG]:[27]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([10:/android/hardware/camera2/cts/CaptureResultTest.java]:[capture]:[10]:method_text:[y times, and checks if there is any null entries in     * a capture result.     * </p>     */   ])', 1), ('([17:/android/hardware/camera2/cts/CaptureResultTest.java]:[capture]:[17]:method_text:[ys happen after onCaptureStart or     * onCaptureProgressed callbacks.     * </ul></p>     */   ])', 1), ('([30:/android/hardware/camera2/cts/CaptureResultTest.java]:[capture]:[30]:method_text:[ers, and capture callbacks match for     * a single request, and increase monotonically     */   ])', 1), ('([345:/android/hardware/camera2/cts/CaptureResultTest.java]:[capture]:[345]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([2:/com/android/cts/verifier/camera/fov/CalibrationPreferenceActivity.java]:[CTS]:[2]:method_text:[savedInstanceState);    addPreferencesFromResource(R.xml.camera_fov_calibration_preferences);  }}])', 1), ('([3:/android/hardware/camera2/cts/NativeImageReaderTest.java]:[CTS]:[3]:method_text:[adLibrary(""ctscamera2_jni"");        Log.i(""NativeImageReaderTest"", ""after loadlibrary"");    }   ])', 1), ('([3:/android/hardware/camera2/cts/NativeImageReaderTest.java]:[JPEG]:[3]:method_text:[log for details"",                testJpegNative(mDebugFileNameBase, mOverrideCameraId));    }   ])', 1), ('([3:/android/hardware/camera2/cts/NativeImageReaderTest.java]:[JPEG]:[3]:method_text:[or details"",                testDepthJpegNative(mDebugFileNameBase, mOverrideCameraId));    }   ])', 1), ('([2:/android/hardware/camera2/cts/NativeImageReaderTest.java]:[JPEG]:[2]:method_text:[  private static native boolean testImageReaderCloseAcquiredImagesNative(String overrideCameraId);}])', 1), ('([1:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[ITS]:[1]:method_text:[     isA(CaptureRequest.class),                                isA(CaptureFailure.class));    }}])', 1), ('([2:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[latency]:[2]:method_text:[rent native internals, and multiple Surfaces pointing to the same actual consumer object     */   ])', 1), ('([1:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[latency]:[1]:method_text:[     isA(CaptureRequest.class),                                isA(CaptureFailure.class));    }}])', 1), ('([1:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[1080p]:[1]:method_text:[     isA(CaptureRequest.class),                                isA(CaptureFailure.class));    }}])', 1), ('([5:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[CTS]:[5]:method_text:[e capture timestamp     * (monotonically increasing) ordering are verified.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[CTS]:[1]:method_text:[use a newly-prepared output does not cause additional     *   preview glitches to occur     */   ])', 1), ('([2:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[PerformanceTest]:[2]:method_text:[rent native internals, and multiple Surfaces pointing to the same actual consumer object     */   ])', 1), ('([5:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[JPEG]:[5]:method_text:[     isA(CaptureRequest.class),                                isA(CaptureFailure.class));    }}])', 1), ('([11:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[capture]:[11]:method_text:[e capture timestamp     * (monotonically increasing) ordering are verified.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[capture]:[1]:method_text:[attern preview and capture result, the image buffer     * is not validated.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[capture]:[1]:method_text:[ET_FPS_RANGE} for preview, validate the preview     * frame duration and exposure time.     */   ])', 1), ('([1:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[capture]:[1]:method_text:[use a newly-prepared output does not cause additional     *   preview glitches to occur     */   ])', 1), ('([13:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[capture]:[13]:method_text:[rent native internals, and multiple Surfaces pointing to the same actual consumer object     */   ])', 1), ('([7:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[capture]:[7]:method_text:[ SOME_FRAMES);    }    /*     * Verify creation of deferred surface capture sessions     */   ])', 1), ('([84:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[capture]:[84]:method_text:[     isA(CaptureRequest.class),                                isA(CaptureFailure.class));    }}])', 1), ('([2:/android/hardware/multiprocess/camera/cts/ErrorLoggingService.java]:[CTS]:[2]:method_text:[d exception while retrieving errors: "" + e);            }            return res;        }    }}])', 1), ('([8:/android/hardware/camera2/cts/DngCreatorTest.java]:[CTS]:[8]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([6:/android/hardware/camera2/cts/DngCreatorTest.java]:[resolution]:[6]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([4:/android/hardware/camera2/cts/DngCreatorTest.java]:[resolution]:[4]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/DngCreatorTest.java]:[resolution]:[7]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([4:/android/hardware/camera2/cts/DngCreatorTest.java]:[resolution]:[4]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([8:/android/hardware/camera2/cts/DngCreatorTest.java]:[resolution]:[8]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([27:/android/hardware/camera2/cts/DngCreatorTest.java]:[resolution]:[27]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([3:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[3]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[7]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([17:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[17]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[7]:method_text:[  * Test basic DNG creation, ensure that the DNG image can be rendered by BitmapFactory.     */   ])', 1), ('([85:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[85]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([21:/android/hardware/camera2/cts/DngCreatorTest.java]:[capture]:[21]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([15:/android/hardware/camera2/cts/DngCreatorTest.java]:[capture]:[15]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([22:/android/hardware/camera2/cts/DngCreatorTest.java]:[capture]:[22]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([40:/android/hardware/camera2/cts/DngCreatorTest.java]:[capture]:[40]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([5:/android/hardware/camera2/cts/DngCreatorTest.java]:[capture]:[5]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([6:/android/hardware/camera2/cts/DngCreatorTest.java]:[capture]:[6]:method_text:[  * Test basic DNG creation, ensure that the DNG image can be rendered by BitmapFactory.     */   ])', 1), ('([256:/android/hardware/camera2/cts/DngCreatorTest.java]:[capture]:[256]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([1:/android/hardware/cts/Camera_ParametersTest.java]:[CTS]:[1]:method_text:[port android.hardware.Camera.Parameters;public class Camera_ParametersTest extends TestCase {   ])', 1), ('([2:/android/hardware/multiprocess/camera/cts/Camera2Activity.java]:[CTS]:[2]:method_text:[       mErrorServiceConnection.stop();            mErrorServiceConnection = null;        }    }}])', 1), ('([8:/android/hardware/camera2/cts/FastBasicsTest.java]:[CTS]:[8]:method_text:[IMEOUT_MS = 8000;    private static final int FRAMES_TO_WAIT_FOR_CAPTURE = 100;    @Presubmit   ])', 1), ('([8:/android/hardware/camera2/cts/FastBasicsTest.java]:[JPEG]:[8]:method_text:[ true;                mPictureSignal.notifyAll();            }        }    }    @Presubmit   ])', 1), ('([4:/android/hardware/camera2/cts/FastBasicsTest.java]:[capture]:[4]:method_text:[IMEOUT_MS = 8000;    private static final int FRAMES_TO_WAIT_FOR_CAPTURE = 100;    @Presubmit   ])', 1), ('([32:/android/hardware/camera2/cts/FastBasicsTest.java]:[capture]:[32]:method_text:[ true;                mPictureSignal.notifyAll();            }        }    }    @Presubmit   ])', 1), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[ITS]:[1]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[ITS]:[1]:method_text:[   }    /**     * Test advertised capability does match available keys and vice versa     */   ])', 1), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[ITS]:[1]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 1), ('([2:/android/hardware/camera2/cts/StaticMetadataTest.java]:[ITS]:[2]:method_text:[raCharacteristics(cameraId),                CheckLevel.COLLECT, /* collector */mCollector);    }}])', 1), ('([4:/android/hardware/camera2/cts/StaticMetadataTest.java]:[CTS]:[4]:method_text:[  /**     * Test the available capability for different hardware support level devices.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[CTS]:[1]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([2:/android/hardware/camera2/cts/StaticMetadataTest.java]:[resolution]:[2]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([3:/android/hardware/camera2/cts/StaticMetadataTest.java]:[resolution]:[3]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 1), ('([14:/android/hardware/camera2/cts/StaticMetadataTest.java]:[JPEG]:[14]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([5:/android/hardware/camera2/cts/StaticMetadataTest.java]:[JPEG]:[5]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 1), ('([3:/android/hardware/camera2/cts/StaticMetadataTest.java]:[capture]:[3]:method_text:[  /**     * Test the available capability for different hardware support level devices.     */   ])', 1), ('([2:/android/hardware/camera2/cts/StaticMetadataTest.java]:[capture]:[2]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([72:/android/hardware/camera2/cts/StaticMetadataTest.java]:[capture]:[72]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 1), ('([1:/com/android/cts/verifier/camera/performance/CameraTestInstrumentation.java]:[CTS]:[1]:method_text:[ != null) {                mMetricListener.onResultMetric(metric);            }        }    }}])', 1), ('([5:/android/hardware/camera2/cts/rs/RenderScriptSingleton.java]:[CTS]:[5]:method_text:[tructor for noninstantiability    private RenderScriptSingleton() { throw new AssertionError(); }}])', 1), ('([12:/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java]:[CTS]:[12]:method_text:[per.tearDown();    }    /**     * Test basic eviction scenarios for the Camera1 API.     */   ])', 1), ('([3:/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java]:[CTS]:[3]:method_text:[es a security exception when     * trying to modify the oom score for camera framework.     */   ])', 1), ('([1:/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java]:[CTS]:[1]:method_text:[oritiesChanged();    }    /**     * Test native camera availability access callback.     */   ])', 1), ('([1:/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java]:[CTS]:[1]:method_text:[   }    }    /**     * Test basic eviction scenarios for camera used in MediaRecoder     */   ])', 1), ('([15:/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java]:[CTS]:[15]:method_text:["", expected was "" +                Arrays.toString(expected), expIndex == expected.length);    }}])', 1), ('([5:/android/hardware/camera2/cts/FlashlightTest.java]:[CTS]:[5]:method_text:[f (info.hasFlash()) {                mFlashCameraIdList.add(id);            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[ITS]:[1]:method_text:[  closeDevice(id);            }        }    }    /** Tests that usage bits are preserved */   ])', 1), ('([11:/android/hardware/camera2/cts/ImageReaderTest.java]:[ITS]:[11]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([11:/android/hardware/camera2/cts/ImageReaderTest.java]:[CTS]:[11]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[CTS]:[1]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[resolution]:[1]:method_text:[EG outputs for the same frame match for each YUV     * resolution and format supported.     */   ])', 1), ('([3:/android/hardware/camera2/cts/ImageReaderTest.java]:[resolution]:[3]:method_text:[    }    /**     * Test that images captured after discarding free buffers are valid.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ImageReaderTest.java]:[resolution]:[2]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([5:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[5]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[1]:method_text:[/ true);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[3]:method_text:[/false);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[3]:method_text:[*/true);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[1]:method_text:[sing ImageReader.     *     * <p>Both stream formats are mandatory for Camera2 API</p>     */   ])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[4]:method_text:[ge flag argument.     *     * <p>Both stream formats are mandatory for Camera2 API</p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[3]:method_text:[* Test two image stream (YUV420_888 and RAW_SENSOR) capture by using ImageReader.     *     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[1]:method_text:[EG outputs for the same frame match for each YUV     * resolution and format supported.     */   ])', 1), ('([66:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[66]:method_text:[    }    /**     * Test that images captured after discarding free buffers are valid.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[2]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([6:/android/hardware/camera2/cts/ImageReaderTest.java]:[capture]:[6]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[capture]:[1]:method_text:[sing ImageReader.     *     * <p>Both stream formats are mandatory for Camera2 API</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[capture]:[1]:method_text:[ge flag argument.     *     * <p>Both stream formats are mandatory for Camera2 API</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[capture]:[1]:method_text:[* Test two image stream (YUV420_888 and RAW_SENSOR) capture by using ImageReader.     *     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[capture]:[1]:method_text:[* ImageReader factory method that has usage flag argument, and uses a custom usage flag.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[capture]:[1]:method_text:[geReader with the     * ImageReader factory method that has usage flag argument.     *     */   ])', 1), ('([45:/android/hardware/camera2/cts/ImageReaderTest.java]:[capture]:[45]:method_text:[    }    /**     * Test that images captured after discarding free buffers are valid.     */   ])', 1), ('([129:/android/hardware/camera2/cts/ImageReaderTest.java]:[capture]:[129]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([1:/android/hardware/camera2/cts/testcases/Camera2AndroidTestRule.java]:[ITS]:[1]:method_text:[ is closed"");        } catch (IllegalStateException e) {            // Expected.        }    }}])', 1), ('([6:/android/hardware/camera2/cts/testcases/Camera2AndroidTestRule.java]:[CTS]:[6]:method_text:[ is closed"");        } catch (IllegalStateException e) {            // Expected.        }    }}])', 1), ('([55:/android/hardware/camera2/cts/testcases/Camera2AndroidTestRule.java]:[capture]:[55]:method_text:[ is closed"");        } catch (IllegalStateException e) {            // Expected.        }    }}])', 1), ('([3:/android/hardware/camera2/cts/NativeCameraManagerTest.java]:[CTS]:[3]:method_text:[Library(""ctscamera2_jni"");        Log.i(""NativeCameraManagerTest"", ""after loadlibrary"");    }   ])', 1), ('([9:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[CTS]:[9]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([56:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[resolution]:[56]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([8:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[JPEG]:[8]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([5:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[capture]:[5]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([4:/android/hardware/camera2/cts/AllocationTest.java]:[ITS]:[4]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([13:/android/hardware/camera2/cts/AllocationTest.java]:[CTS]:[13]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([60:/android/hardware/camera2/cts/AllocationTest.java]:[capture]:[60]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([3:/android/hardware/camera2/cts/AllocationTest.java]:[capture]:[3]:method_text:[y high ISO and exposure time. Expect it to be white.</p>     *     * @throws Exception     */   ])', 1), ('([7:/android/hardware/camera2/cts/AllocationTest.java]:[capture]:[7]:method_text:[       });    }    /**     * Test that the android.sensitivity.parameter is applied.     */   ])', 1), ('([16:/android/hardware/camera2/cts/AllocationTest.java]:[capture]:[16]:method_text:[            // TODO: Make a Configure decorator or some such for configureOutputs        }    }}])', 1), ('([4:/android/hardware/camera2/cts/Camera2ParameterizedTestCase.java]:[CTS]:[4]:method_text:[        idsUnderTest = new String[]{};            }        }        return idsUnderTest;    }}])', 1), ('([1:/android/hardware/camera2/cts/helpers/UncheckedCloseable.java]:[CTS]:[1]:method_text:[    *     * <p>Does not throw any checked exceptions.</p>     */    @Override    void close();}])', 1), ('([3:/com/android/cts/verifier/camera/video/CameraVideoActivity.java]:[1080p]:[3]:method_text:[          "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([5:/com/android/cts/verifier/camera/video/CameraVideoActivity.java]:[CTS]:[5]:method_text:[          "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([21:/com/android/cts/verifier/camera/video/CameraVideoActivity.java]:[resolution]:[21]:method_text:[          "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([11:/com/android/cts/verifier/camera/video/CameraVideoActivity.java]:[capture]:[11]:method_text:[          "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([5:/android/hardware/camera2/cts/rs/BlockingInputAllocation.java]:[ITS]:[5]:method_text:[   mPendingBuffers++;                mBufferSyncObject.notifyAll();            }        }    }}])', 1), ('([3:/android/hardware/camera2/cts/rs/BlockingInputAllocation.java]:[CTS]:[3]:method_text:[   mPendingBuffers++;                mBufferSyncObject.notifyAll();            }        }    }}])', 1), ('([5:/android/hardware/camera2/cts/rs/Script.java]:[CTS]:[5]:method_text:[}    protected static RenderScript getRS() {        return RenderScriptSingleton.getRS();    }}])', 1), ('([1:/android/hardware/camera2/cts/rs/ScriptGraph.java]:[ITS]:[1]:method_text:[      try {            close();        "	""	""	"[('capture', 221), ('CTS', 119), ('JPEG', 119), ('resolution', 60), ('ITS', 50), ('latency', 33), ('1080p', 15), ('PerformanceTest', 11), ('MEDIA_PERFORMANCE_CLASS', 2)]"	"[('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 8), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 8), ('[android.hardware.camera2.cts.helpers.StaticMetadat getCharacteristics None]', 7), ('[android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase isInstantApp CtsCameraTestCases]', 6), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 5), ('[android.hardware.camera2.cts.RobustnessTest testVerifyReprocessMandatoryOutputCombinationTables CtsCameraTestCases]', 5), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 5), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 5), ('[android.camera.cts.api31test.SPerfClassTest getCameraIdList CtsCameraApi31TestCases]', 5), ('[com.android.cts.verifier.camera.bokeh.CameraBokehActivity setPassFailButtonClickListeners None]', 5), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testDeferredSurfaces CtsCameraTestCases]', 5), ('[android.hardware.camera2.cts.StaticMetadataTest testHwSupportedLevel CtsCameraTestCases]', 5), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected CtsCameraTestCases]', 5), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs CtsCameraTestCases]', 4), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionOutputCombinations CtsCameraTestCases]', 4), ('[android.hardware.camera2.cts.RecordingTest isColorOutputSupported CtsCameraTestCases]', 4), ('[com.android.cts.verifier.camera.orientation.CameraOrientationActivity setPassFailButtonClickListeners None]', 4), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes CtsCameraTestCases]', 4), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 4), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStaticBurstCharacteristics CtsCameraTestCases]', 4), ('[com.android.cts.verifier.camera.formats.CameraFormatsActivity setPassFailButtonClickListeners None]', 4), ('[android.hardware.camera2.cts.PerformanceTest testSingleCapture CtsCameraTestCases]', 4), ('[android.hardware.camera2.cts.PerformanceTest testReprocessingCaptureStall CtsCameraTestCases]', 4), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths CtsCameraTestCases]', 4), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps CtsCameraTestCases]', 4), ('[android.hardware.camera2.cts.StaticMetadataTest testCapabilities CtsCameraTestCases]', 4), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 4), ('[com.android.cts.verifier.camera.video.CameraVideoActivity exists None]', 4), ('[android.hardware.camera2.cts.testcases.Camera2MultiViewTestCase isOpened CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.helpers.CameraMetadataGetter getCameraIdListNoLazy None]', 3), ('[android.hardware.camera2.cts.testcases.Camera2ConcurrentAndroidTestCase isInstantApp CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionReprocessConfigurations CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testKeys CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraPerfClassCharacteristics CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testReprocessingCharacteristics CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testUltraHighResolutionSensorCharacteristics CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStreamConfigurationMap CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.testcases.Camera2AndroidTestCase isInstantApp CtsCameraTestCases]', 3), ('[android.hardware.cts.CameraTest TestShutterCallback CtsCameraTestCases]', 3), ('[android.hardware.cts.CameraTest testJpegExif CtsCameraTestCases]', 3), ('[android.camera.cts.api25test.EnableZslTest getCameraIdList CtsCameraApi25TestCases]', 3), ('[com.android.cts.verifier.camera.intents.CameraIntentsActivity setPassFailButtonClickListeners None]', 3), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testMultiFrameCapture CtsCameraTestCases]', 3), ('[android.hardware.cts.CameraGLTest deriveCameraIdsUnderTest CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.PerformanceTest testCameraLaunch CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.PerformanceTest testMultipleCapture CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionMandatoryStreamCombinationTest CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.StillCaptureTest testAePrecaptureTriggerCancelJpegCapture CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.helpers.Camera2Focuser createCaptureListener None]', 3), ('[android.hardware.camera2.cts.CameraExtensionCharacteristicsTest testExtensionLatencyRanges CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testPreparePerformance CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageThumbnail CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.DngCreatorTest testRaw16JpegMaximumResolutionConsistency CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.DngCreatorTest testDngRenderingByBitmapFactor CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.ImageReaderTest testAllOutputYUVResolutions CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.testcases.Camera2AndroidTestRule getCameraIdsUnderTest CtsCameraTestCases]', 3), ('[com.android.cts.verifier.camera.its.ItsTestActivity ItsTestActivity None]', 2), ('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionClose CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurst CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.BurstCaptureTest testJpegBurst CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.HeifWriterTest isInstantApp CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.HeifWriterTest testHeif CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryOutputCombinations CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RobustnessTest testBadSurfaceDimensions CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RobustnessTest testOisDataMode CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ReprocessCaptureTest testCrossSessionCaptureException CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ReprocessCaptureTest testQueueImageWithoutRequest CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessTimestamps CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessJpegExif CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessRequestKeys CtsCameraTestCases]', 2), ('[com.android.cts.verifier.camera.fov.DetermineFovActivity OnSeekBarChangeListener None]', 2), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceCreateCaptureBuilder CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateCustomSession CtsCameraTestCases]', 2), ('[android.hardware.cts.LegacyCameraPerformanceTest CameraPerformanceTestHelper CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RecordingTest testMediaCodecRecording CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RecordingTest testVideoSnapshot CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CaptureRequestTest testBlackLevelLock CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CaptureRequestTest testLensShadingMap CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.helpers.CameraSessionUtils getMockCaptureListener None]', 2), ('[android.hardware.cts.CameraTest testPreviewPictureSizesCombination CtsCameraTestCases]', 2), ('[android.hardware.cts.CameraTest testVideoSnapshot CtsCameraTestCases]', 2), ('[android.hardware.cts.CameraTest testParameters CtsCameraTestCases]', 2), ('[android.hardware.cts.CameraTest testFaceDetection CtsCameraTestCases]', 2), ('[android.hardware.cts.CameraTest testJpegThumbnailSize CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceLimit CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionCaptureCharacteristics CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderJpeg CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRepeatingJpeg CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionMandatoryStreamCombinationTest CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testRepeatingCapture CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testRepeatingAndCaptureCombined CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testIllegalArguments CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.PerformanceTest testReprocessingLatency CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.PerformanceTest testReprocessingThroughput CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.PerformanceTest testHighQualityReprocessingLatency CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionReprocessCharacteristics CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionYuvToYuvReprocessing CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionYuvToJpegReprocessing CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionOpaqueToYuvReprocessing CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionOpaqueToJpegReprocessing CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testInvalidPhysicalCameraIdInOutputConfiguration CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testBasicPhysicalRequests CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testLogicalCameraZoomSwitch CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testActivePhysicalId CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testDefaultFov CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testJpegExif CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testDynamicDepthCapture CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testTakePicture CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testBasicRawZslCapture CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testFullRawCapture CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testFullRawZSLCapture CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testTouchForFocus CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ZoomCaptureTest testJpegZoomCapture CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraManagerTest NoopCameraListener CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.rs.AllocationCache isEmpty CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraExtensionCharacteristicsTest getCameraListener CtsCameraTestCases]', 2), ('[com.android.cts.verifier.camera.performance.CameraPerformanceActivity CameraTestInstrumentation None]', 2), ('[android.hardware.camera2.cts.CaptureResultTest testCameraCaptureResultAllKeys CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testSurfaceSet CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageBasic CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageBasicMaximumResolution CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.DngCreatorTest testRaw16JpegConsistency CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.FastBasicsTest testCamera2 CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testImageReaderYuvAndRawWithUsageFlag CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testJpeg CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testRepeatingJpeg CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testInvalidAccessTest CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testYuvAndJpeg CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testYuvAndJpegWithUsageFlag CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.rs.BlockingInputAllocation receiveLatestAvailableBuffers CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.rs.ScriptGraph isInputFromSurface CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineHEIC CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineCallbacks CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineDepthJpeg CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testDeviceCloseAndOpen CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionWithRegularSession CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testRepeatingSequenceAbort CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryReprocessConfigurations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testConfigureInvalidSensorPixelModes CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testBasicTriggerSequence CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testSimultaneousTriggers CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAfThenAeTrigger CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAeThenAfTrigger CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAeAndAfCausality CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAbandonRepeatingRequestSurface CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testConfigureAbandonedSurface CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAfSceneChange CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicYuvToYuvReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicYuvToJpegReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicOpaqueToYuvReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicOpaqueToJpegReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessingSizeFormat CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessingSizeFormatWithPreview CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testRecreateReprocessingSessions CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBurstReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testMixedBurstReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessAbort CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDevicePreviewTemplate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceStillTemplate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceRecordingTemplate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceVideoSnapShotTemplate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceZSLTemplate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceManualTemplate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceCaptureBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceRepeatingRequest CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceRepeatingBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceAbort CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testInvalidCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testChainedOperation CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testSessionConfiguration CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testSessionParametersStateLeak CtsCameraTestCases]', 1), ('[android.hardware.cts.LegacyCameraPerformanceTest testLegacyApiPerformance CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.intents.CameraContentJobService getTestEnvironment None]', 1), ('[android.hardware.camera2.cts.RecordingTest testSupportedVideoSizes CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingFramerateLowToHigh CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest testVideoPreviewSurfaceSharing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest testBurstVideoSnapshot CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest testAbandonedHighSpeedRequest CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testSettingsBinderParcel CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testDynamicBlackWhiteLevel CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAeModeAndLock CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashControl CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashTurnOff CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.helpers.AssertHelpers AssertHelpers None]', 1), ('[android.hardware.camera2.cts.BurstCaptureRawTest testRawSensorSize CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureRawTest testMetadataRoundDown CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureRawTest testTimestamp CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testLegacyCameraDeviceParity CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testDepthOutputCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStaticSessionKeys CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testOpticalBlackRegions CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testMonochromeCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testPreviewCallbackWithBuffer CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testPreviewFpsRange CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testTakePicture CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testImmediateZoom CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testFocusDistances CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testMeteringAreas CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testJpegCallbackStartPreview CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testRecordingHint CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest test3ALockInteraction CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testPreviewCallbackWithPicture CtsCameraTestCases]', 1), ('[android.hardware.multiprocess.camera.cts.MediaRecorderCameraActivity isInstantApp CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceImageReaderSwitch CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceYUVImageReaderSwitch CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaceSwitch CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiViewTest testTextureImageWriterReaderOperation CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiViewTest testSharedSurfaces CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderFlexibleYuv CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderPrivate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRepeatingFlexibleYuv CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRepeatingRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRepeatingPrivate CtsCameraTestCases]', 1), ('[android.hardware.cts.helpers.CameraParameterizedTestCase isPerfMeasure None]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testCloseCaptureSession CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testCloseExtensionSession CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testGetDevice CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testConcurrentSessions CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraGLTest testCameraToSurfaceTextureMetadata CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testHighQualityReprocessingThroughput CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ConcurrentCameraTest testMandatoryConcurrentStreamCombination CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.helpers.MaybeNull AssertionError None]', 1), ('[android.camera.cts.api31test.SPerfClassTest testSPerfClassJpegSizes CtsCameraApi31TestCases]', 1), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testBasicLogicalPhysicalStreamCombination CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testInvalidPhysicalCameraRequests CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testHeicExif CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testTakePictureZsl CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testBasicRawCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testStillPreviewCombination CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testAeCompensation CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testAeRegions CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testAwbRegions CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceCreateCaptureRequest CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeCameraDeviceTest testCameraDeviceCaptureFailure CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.SimpleObjectsTest CameraKeysTest CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerOpenAllCameras CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerOpenCameraTwice CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeStillCaptureTest testStillCapture CtsCameraTestCases]', 1), ('[android.hardware.cts.Camera_SizeTest testConstructor CtsCameraTestCases]', 1), ('[android.hardware.cts.Camera_SizeTest testMaxAspectRatios CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.flashlight.CameraFlashlightActivity OnClickListener None]', 1), ('[android.hardware.camera2.cts.IdleUidTest testCameraAccessBecomingInactiveUid CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageWriterTest testWriterReaderBlobFormats CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageWriterTest testWriterFormatOverride CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionCharacteristicsTest testIllegalArguments CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionCharacteristicsTest testExtensionSizes CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testPartialResult CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeImageReaderTest testJpeg CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeImageReaderTest testDepthJpeg CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeImageReaderTest testImageReaderCloseAcquiredImages CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testCameraPreview CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testBasicTestPatternPreview CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testSurfaceEquality CtsCameraTestCases]', 1), ('[android.hardware.multiprocess.camera.cts.ErrorLoggingService listIterator CtsCameraTestCases]', 1), ('[android.hardware.multiprocess.camera.cts.Camera2Activity getCameraIdListNoLazy CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testMaxNumOutputStreams CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testLensFacing CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.performance.CameraTestInstrumentation isEmpty None]', 1), ('[android.hardware.camera2.cts.rs.RenderScriptSingleton AssertionError CtsCameraTestCases]', 1), ('[android.hardware.multiprocess.camera.cts.CameraEvictionTest CameraEvictionTest CtsCameraTestCases]', 1), ('[android.hardware.multiprocess.camera.cts.CameraEvictionTest testBasicCamera2ActivityEvictionOomScoreOffset CtsCameraTestCases]', 1), ('[android.hardware.multiprocess.camera.cts.CameraEvictionTest testCamera2AccessCallback CtsCameraTestCases]', 1), ('[android.hardware.multiprocess.camera.cts.CameraEvictionTest testCamera2NativeAccessCallback CtsCameraTestCases]', 1), ('[android.hardware.multiprocess.camera.cts.CameraEvictionTest testMediaRecorderCameraActivityEviction CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testDiscardFreeBuffers CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testDynamicDepth CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testRawPrivate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testP010 CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testHeic CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testRepeatingRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testRepeatingRawPrivate CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testRepeatingHeic CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testImageReaderYuvAndRaw CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testImageReaderPrivateWithProtectedUsageFlag CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.AllocationTest testAllocationFromCameraFlexibleYuv CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.AllocationTest testBlackWhite CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.AllocationTest testParamSensitivity CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.Camera2ParameterizedTestCase deriveCameraIdsUnderTest None]', 1), ('[android.hardware.camera2.cts.rs.Script isEmpty CtsCameraTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
