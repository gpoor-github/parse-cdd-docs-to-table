"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"7.4.2  . IEEE 802.11"	"7.4.2"	"C-1-9"	"7.4.2/C-1-9"	"07040200.670109"	"""C-1-9] MUST iterate probe request sequence number as normal (sequentially) between the probe requests in a scan."""	""	""	"probe scan"	"probe scan"	""	""	""	""	""	""	""	"com.android.cts.verifier.bluetooth.BleInsecureServerTestListActivity"	"Utils"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 25), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/device/src/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java', 18), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 14), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/legacy/src/android/scopedstorage/cts/legacy/LegacyStorageTest.java', 13), ('/home/gpoor/cts-12-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/NetworkScanApiTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLocationInfoTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/ScanFilterTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/RouteDiscoveryPreferenceTest.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/AtomTests.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/BluetoothLeScanTest.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/src/android/scopedstorage/cts/ScopedStorageTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaScannerTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/rtt/cts/WifiRttTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/UseProcessTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesRenouncePermissionTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/WriteExternalStorageApp/src/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ScanResultTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/ScanSettingsTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentResolverSyncTestCase.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/device/src/android/scopedstorage/cts/device/RedactUriDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePlacementTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NoWifiStatePermissionTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/ScanCallbackTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/MediaStorageApp/src/com/android/cts/mediastorageapp/MediaStorageTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/AsyncTaskTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PermissionsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreTrashedTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/InterfaceForAppsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Images_MediaTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSpecifierTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/stagedinstall/app/src/com/android/tests/stagedinstall/StagedInstallTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/DeviceWiphyCapabilitiesTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/ScanResultTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConnectedNetworkScorerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/location/location_fine/src/android/location/cts/fine/ScanningSettingsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_DownloadsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/LegacyStorageHostTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ReadExternalStorageApp/src/com/android/cts/readexternalstorageapp/ReadMultiViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/ScanRecordTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/monkey/src/com/android/cts/monkey/SeedTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/KeyValueApp/src/android/cts/backup/keyvaluerestoreapp/KeyValueBackupRestoreTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaScannerConnectionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/wifi/WifiStatsTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaScannerNotificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/DownloadManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/abioverride/src/android/abioverride/cts/AbiOverrideTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ListeningPortsApp/src/android/appsecurity/cts/listeningports/ListeningPortsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2020_0018.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/AppWidgetTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/src/com/android/cts/tagging/TaggingSdk30Test.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/VerifyInputEventTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/tv/src/com/android/cts/tv/TvInputManagerHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/src/com/android/cts/tagging/TaggingManifestDisabledTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/StorageApp/src/com/android/cts/storageapp/StorageTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/trustedvoice/src/android/trustedvoice/cts/TrustedVoiceHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/SharedUidPermissionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/os/src/android/os/cts/ProcfsHostTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/src/com/android/cts/tagging/TaggingBaseTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/stagedinstall/src/com/android/tests/stagedinstall/host/StagedInstallTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/MotionEventTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/BuildTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/wifibroadcasts/src/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/sample/src/android/sample/cts/SampleHostJUnit4Test.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/PackageAccessApp/src/com/android/cts/packageaccessapp/PackageAccessTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/SplitPermissionsSystemTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/DialogTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ListeningPortsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/ScopedStorageHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/display/src/android/display/cts/BrightnessTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/UidAtomTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/FileSystemPermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/NativeScanResultTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/WriteExternalStorageApp/src/com/android/cts/writeexternalstorageapp/WriteGiftTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/monkey/src/com/android/cts/monkey/MonkeyTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyEventTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/jdwp/runner/host-side/src/com/android/compatibility/testtype/DalvikTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/dumpsys/src/android/dumpsys/cts/BatteryStatsDumpsysTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/MidiNativeTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/LongPressBackActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/device/src/android/scopedstorage/cts/device/BypassDatabaseOperationsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/NintendoSwitchProTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CurrentXmlHandler.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/rtt/cts/TestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePendingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/ScannerNotificationReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/StorageStatsApp/src/com/android/cts/storagestatsapp/StorageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/WifiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaRoute2ProviderServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/ConnectionAccessServerActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/LocationAccessCheckTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/display/src/android/display/cts/DisplayTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/CtsWifiLocationTestApp/src/android/net/wifi/cts/app/RetrieveScanResultsAndReturnStatusActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/DevicePickerActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/CtsWifiLocationTestApp/src/android/net/wifi/cts/app/RetrieveConnectionInfoAndReturnStatusActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleAdvertiserHardwareScanFilterActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleScannerPowerLevelActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/test-apps/CVE-2021-0523/src/android/security/cts/CVE_2021_0523/PocActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ServicesInstantAppsCannotAccessTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/libs/install/testapp/src/com/android/cts/install/lib/testapp/ProcessUserData.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiBackupRestoreTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/libs/testserver/src/android/webkit/cts/TestWebServer.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/device-info/src/com/android/compatibility/common/deviceinfo/GlesStubActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/lib/common/src/android/signature/cts/ApiPresenceChecker.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/midilib/MidiIODevice.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleSecureServerScannerTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentProviderClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/common/HdmiCecDeviceTypeTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleSecureServerScannerPowerLevelActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/ScopedStorageInstantAppHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/helpers/OpenCVLibrary.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifi/NetworkRequestUnavailableNetworkSpecifierTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleInsecureServerScannerPowerLevelActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_FilesTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifi/testcase/NetworkRequestTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ExternalStorageApp/src/com/android/cts/externalstorageapp/CommonExternalStorageTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ExternalStorageHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/format/cts/DateFormatTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/harmfulappwarning/src/android/harmfulappwarning/cts/HarmfulAppWarningTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiCodecPerfTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/projection/offscreen/ProjectionOffscreenActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/MidiJavaTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaSessionTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/text/cts/TextRunShaperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrintJobStateTransitionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/CtsKeyEventUtil.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/apps/batterystatsapp/src/com/android/server/cts/device/batterystats/BatteryStatsBgVsFgActions.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/cpptools/src/com/android/cts/cpptools/RunasPermissionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Video_MediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ListViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleScannerService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiMigrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/TestModuleConfigHandler.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/netsecpolicy/src/android/security/NetworkSecurityPolicyTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceKeyLayoutMapTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/ShellIdentityUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/ExactAlarmsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsReportHandler.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/BaseBootReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SystemMediaRouter2Test.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/SimpleApp/src/com/android/cts/launcherapps/simpleapp/SimpleActivityStartService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleCocClientService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleAdvertiserTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/device-info/src/com/android/compatibility/common/deviceinfo/StorageDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/PasswordTransformationMethodTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/nfc/TagVerifierActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifi/TestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/acceleration/src/android/acceleration/cts/HardwareAccelerationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/acceleration/src/android/acceleration/cts/WindowFlagHardwareAccelerationTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/MessageTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/SupplicantStateTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/MidiTestActivityBase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/LocationCheckerActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/edi/src/android/edi/cts/PropertyDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/CallTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/FileDescriptorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DragDropTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/edi/src/android/edi/cts/ProcessDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/NoExecutePermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/test-apps/CVE-2021-0523/src/android/security/cts/CVE_2021_0523/PocService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_MediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/VideoEncoderDecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/cts/TvInputServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/ProtectedBroadcastsTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioFrequencyActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/AuthenticationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/device-setup/TestDeviceSetup/src/android/tests/getinfo/RootProcessScanner.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/LogHelper.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleScannerTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/TestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/PackageSignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/utils/ActivityLaunchUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/mockime/src/com/android/cts/mockime/MockIme.java', 1), ('/home/gpoor/cts-12-source/cts/tests/acceleration/src/android/acceleration/cts/SoftwareAccelerationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/BluetoothScanReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/ProviderTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleScannerHardwareScanFilterActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/HearingAidProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBAudioPeripheralNotificationsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrintJobTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrintServicesTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/HidDeviceActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/build/src/util/build/BuildUtilBase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoDecoderPerfTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/ProtoDumpTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/util/ListScenario.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/AppThatRequestBluetoothPermission30/src/android/permission/cts/appthatrequestpermission/AccessBluetoothOnCommand.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/BatteryStatsValidationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/TestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceMultiDeviceKeyEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/TriggerContentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ImageDecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AmProfileTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleClientService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleEncryptedClientService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifi/testcase/NetworkSuggestionTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewSslTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/Camera2Focuser.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AnalogHeadsetAudioActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/role/src/android/app/role/cts/RoleManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/TestModuleConfigHandler.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleInsecureServerScannerTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/AtomTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/device-setup/TestDeviceSetup/src/android/tests/getinfo/DeviceInfoInstrument.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyLocationTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PackageVisibilityTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/usb/src/com/android/cts/usb/TestUsbTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/AdbUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleAdvertiserService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/jdwp/runner/device-side/src/com/android/compatibility/dalvik/DalvikTestRunner.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/MockSyncAdapter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/UidCapTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/display/src/android/display/cts/VirtualDisplayTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBAudioPeripheralActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleInsecureClientTestListActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/bluetoothTestUtilLib/src/android/bluetooth/cts/BTAdapterUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/PdfRendererTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ExpandableListWithHeaders.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/WindowInsetsAnimationUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/BaseTelecomTestWithMockServices.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/CtsWifiLocationTestApp/src/android/net/wifi/cts/app/TriggerScanAndReturnStatusActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/audiolib/TapLatencyAnalyser.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/selinux/common/src/android/security/SELinuxTargetSdkTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackSurroundTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BluetoothTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/CoexUnsafeChannelTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleSecureClientTestListActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/StaticMetadata.java', 1), ('/home/gpoor/cts-12-source/cts/tests/providerui/src/android/providerui/cts/MediaStoreUiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/MediaProviderTranscode/src/android/mediaprovidertranscode/cts/TranscodeTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/acceleration/src/android/acceleration/AcceleratedView.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2021_0523.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/KeyguardDismissLoggerCallback.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/TextShaperTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/cts/TvContractTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleSecureServerTestListActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/device-setup/TestDeviceSetup/src/android/tests/getinfo/GLESSurfaceView.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/WindowInsetsBehaviorTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationControllerTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleConnectionPriorityClientService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/leanbackjank/app/src/android/leanbackjank/app/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemui/src/android/systemui/cts/LightBarTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleInsecureServerTestListActivity.java', 1)]"	"[('(1,scan,/com/android/compatibility/testtype/DalvikTest.java)', 1), ('(14,scan,/android/dumpsys/cts/BatteryStatsDumpsysTest.java)', 1), ('(3,scan,/android/os/cts/AsyncTaskTest.java)', 1), ('(3,probe,/com/android/cts/readexternalstorageapp/ReadMultiViewTest.java)', 1), ('(5,scan,/com/android/cts/verifier/audio/MidiNativeTestActivity.java)', 1), ('(1,scan,/android/view/cts/LongPressBackActivity.java)', 1), ('(2,scan,/android/app/cts/NotificationManagerTest.java)', 1), ('(8,scan,/android/bluetooth/cts/ScanRecordTest.java)', 1), ('(5,scan,/android/scopedstorage/cts/device/BypassDatabaseOperationsTest.java)', 1), ('(3,probe,/android/hardware/input/cts/tests/NintendoSwitchProTest.java)', 1), ('(1,scan,/com/android/cts/apicoverage/CurrentXmlHandler.java)', 1), ('(67,scan,/android/net/wifi/rtt/cts/TestBase.java)', 1), ('(2,scan,/android/provider/cts/media/MediaStorePendingTest.java)', 1), ('(3,scan,/com/android/cts/deviceandprofileowner/PermissionsTest.java)', 1), ('(6,scan,/com/android/cts/monkey/SeedTest.java)', 1), ('(4,scan,/android/media/cts/ScannerNotificationReceiver.java)', 1), ('(3,scan,/com/android/cts/storagestatsapp/StorageStatsTest.java)', 1), ('(10,scan,/android/cts/backup/keyvaluerestoreapp/KeyValueBackupRestoreTest.java)', 1), ('(8,probe,/com/android/cts/managedprofile/WifiTest.java)', 1), ('(1,scan,/android/media/cts/MediaRoute2ProviderServiceTest.java)', 1), ('(2,scan,/com/android/cts/verifier/bluetooth/ConnectionAccessServerActivity.java)', 1), ('(41,scan,/android/media/cts/MediaScannerConnectionTest.java)', 1), ('(4,scan,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(3,scan,/android/display/cts/DisplayTest.java)', 1), ('(5,scan,/android/appsecurity/cts/UseProcessTest.java)', 1), ('(27,scan,/android/cts/statsdatom/wifi/WifiStatsTests.java)', 1), ('(3,scan,/android/provider/cts/media/MediaStoreTrashedTest.java)', 1), ('(4,scan,/android/print/cts/InterfaceForAppsTest.java)', 1), ('(8,scan,/android/net/wifi/cts/app/RetrieveScanResultsAndReturnStatusActivity.java)', 1), ('(53,scan,/android/gputools/cts/CtsRootlessGpuDebugHostTest.java)', 1), ('(8,scan,/com/android/cts/verifier/bluetooth/DevicePickerActivity.java)', 1), ('(18,scan,/android/media/cts/MediaScannerNotificationTest.java)', 1), ('(6,scan,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(22,scan,/android/media/cts/RouteDiscoveryPreferenceTest.java)', 1), ('(2,scan,/android/net/wifi/cts/app/RetrieveConnectionInfoAndReturnStatusActivity.java)', 1), ('(25,scan,/com/android/cts/verifier/bluetooth/BleAdvertiserHardwareScanFilterActivity.java)', 1), ('(15,scan,/com/android/cts/verifier/bluetooth/BleScannerPowerLevelActivity.java)', 1), ('(1,scan,/android/media/cts/DecoderTest.java)', 1), ('(1,scan,/android/security/cts/CVE_2021_0523/PocActivity.java)', 1), ('(42,scan,/android/permission/cts/NearbyDevicesRenouncePermissionTest.java)', 1), ('(1,scan,/android/permission/cts/ServicesInstantAppsCannotAccessTests.java)', 1), ('(2,scan,/android/app/cts/DownloadManagerTest.java)', 1), ('(6,scan,/android/mediadrm/cts/Utils.java)', 1), ('(3,scan,/android/abioverride/cts/AbiOverrideTest.java)', 1), ('(5,scan,/com/android/cts/install/lib/testapp/ProcessUserData.java)', 1), ('(9,scan,/android/appsecurity/cts/listeningports/ListeningPortsTest.java)', 1), ('(2,scan,/android/net/wifi/cts/WifiBackupRestoreTest.java)', 1), ('(15,scan,/android/provider/cts/media/MediaStore_Images_MediaTest.java)', 1), ('(1,scan,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(3,scan,/android/webkit/cts/TestWebServer.java)', 1), ('(8,scan,/com/android/compatibility/common/deviceinfo/GlesStubActivity.java)', 1), ('(3,scan,/android/signature/cts/ApiPresenceChecker.java)', 1), ('(3,scan,/com/android/cts/verifier/audio/midilib/MidiIODevice.java)', 1), ('(2,scan,/com/android/cts/verifier/bluetooth/BleSecureServerScannerTestActivity.java)', 1), ('(118,scan,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(26,scan,/android/scopedstorage/cts/legacy/LegacyStorageTest.java)', 1), ('(7,scan,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(17,probe,/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java)', 1), ('(2,scan,/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java)', 1), ('(6,scan,/android/security/cts/CVE_2020_0018.java)', 1), ('(2,scan,/android/appwidget/cts/AppWidgetTest.java)', 1), ('(178,scan,/android/carrierapi/cts/NetworkScanApiTest.java)', 1), ('(1,scan,/android/content/cts/ContentProviderClientTest.java)', 1), ('(13,scan,/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java)', 1), ('(1,scan,/android/hdmicec/cts/common/HdmiCecDeviceTypeTest.java)', 1), ('(2,scan,/com/android/cts/verifier/bluetooth/BleSecureServerScannerPowerLevelActivity.java)', 1), ('(2,probe,/com/android/cts/tagging/TaggingSdk30Test.java)', 1), ('(1,scan,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(4,scan,/android/view/cts/VerifyInputEventTest.java)', 1), ('(5,scan,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(2,scan,/android/scopedstorage/cts/host/ScopedStorageInstantAppHostTest.java)', 1), ('(4,probe,/com/android/cts/verifier/sensors/helpers/OpenCVLibrary.java)', 1), ('(14,scan,/android/net/wifi/cts/WifiNetworkSpecifierTest.java)', 1), ('(24,scan,/android/bluetooth/cts/ScanSettingsTest.java)', 1), ('(1,scan,/com/android/cts/verifier/wifi/NetworkRequestUnavailableNetworkSpecifierTestActivity.java)', 1), ('(2,scan,/com/android/cts/verifier/bluetooth/BleInsecureServerScannerPowerLevelActivity.java)', 1), ('(3,scan,/android/provider/cts/media/MediaStore_FilesTest.java)', 1), ('(37,scan,/com/android/cts/verifier/wifi/testcase/NetworkRequestTestCase.java)', 1), ('(29,probe,/com/android/cts/externalstorageapp/CommonExternalStorageTest.java)', 1), ('(3,scan,/com/android/cts/tv/TvInputManagerHostTest.java)', 1), ('(2,probe,/com/android/cts/tagging/TaggingManifestDisabledTest.java)', 1), ('(8,probe,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1), ('(6,scan,/android/text/format/cts/DateFormatTest.java)', 1), ('(1,scan,/android/harmfulappwarning/cts/HarmfulAppWarningTest.java)', 1), ('(1,scan,/android/mediapc/cts/MultiCodecPerfTestBase.java)', 1), ('(3,scan,/com/android/cts/verifier/projection/offscreen/ProjectionOffscreenActivity.java)', 1), ('(1,scan,/android/server/wm/KeyguardTestBase.java)', 1), ('(270,scan,/android/bluetooth/cts/BluetoothLeScanTest.java)', 1), ('(2,probe,/com/android/cts/storageapp/StorageTest.java)', 1), ('(5,scan,/com/android/cts/verifier/audio/MidiJavaTestActivity.java)', 1), ('(1,scan,/android/media/cts/MediaSessionTestActivity.java)', 1), ('(3,scan,/android/graphics/text/cts/TextRunShaperTest.java)', 1), ('(4,scan,/android/content/cts/ContentResolverSyncTestCase.java)', 1), ('(1,scan,/android/print/cts/PrintJobStateTransitionsTest.java)', 1), ('(3,scan,/android/trustedvoice/cts/TrustedVoiceHostTest.java)', 1), ('(7,scan,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(2,scan,/android/permission/cts/SharedUidPermissionsTest.java)', 1), ('(3,scan,/com/android/tests/stagedinstall/StagedInstallTest.java)', 1), ('(3,scan,/com/android/compatibility/common/util/CtsKeyEventUtil.java)', 1), ('(58,scan,/com/android/server/cts/device/batterystats/BatteryStatsBgVsFgActions.java)', 1), ('(3,scan,/android/os/cts/ProcfsHostTests.java)', 1), ('(1,probe,/com/android/cts/tagging/TaggingBaseTest.java)', 1), ('(3,scan,/com/android/cts/tagging/TaggingBaseTest.java)', 1), ('(28,scan,/android/scopedstorage/cts/ScopedStorageTest.java)', 1), ('(4,scan,/android/scopedstorage/cts/device/RedactUriDeviceTest.java)', 1), ('(4,scan,/com/android/tests/stagedinstall/host/StagedInstallTest.java)', 1), ('(21,scan,/android/net/wifi/nl80211/cts/DeviceWiphyCapabilitiesTest.java)', 1), ('(1,scan,/com/android/cts/cpptools/RunasPermissionsTest.java)', 1), ('(19,scan,/android/bluetooth/cts/ScanResultTest.java)', 1), ('(4,scan,/android/provider/cts/media/MediaStore_Video_MediaTest.java)', 1), ('(6,scan,/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java)', 1), ('(13,probe,/android/net/wifi/cts/ConnectedNetworkScorerTest.java)', 1), ('(12,scan,/android/net/wifi/cts/ConnectedNetworkScorerTest.java)', 1), ('(5,scan,/android/widget/cts/ListViewTest.java)', 1), ('(73,scan,/com/android/cts/verifier/bluetooth/BleScannerService.java)', 1), ('(4,scan,/android/net/wifi/cts/WifiMigrationTest.java)', 1), ('(1,scan,/com/android/cts/releaseparser/TestModuleConfigHandler.java)', 1), ('(1,scan,/android/security/NetworkSecurityPolicyTestBase.java)', 1), ('(2,scan,/android/view/cts/input/InputDeviceKeyLayoutMapTest.java)', 1), ('(29,scan,/android/location/cts/fine/ScanningSettingsTest.java)', 1), ('(7,scan,/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java)', 1), ('(1,scan,/com/android/cts/deviceandprofileowner/KeyManagementTest.java)', 1), ('(13,scan,/android/media/tv/tuner/cts/TunerTest.java)', 1), ('(1,scan,/com/android/compatibility/common/util/ShellIdentityUtils.java)', 1), ('(1,scan,/android/alarmmanager/cts/ExactAlarmsTest.java)', 1), ('(1,scan,/com/android/cts/apicoverage/CtsReportHandler.java)', 1), ('(8,probe,/android/provider/cts/media/MediaStorePlacementTest.java)', 1), ('(2,scan,/android/provider/cts/media/MediaStorePlacementTest.java)', 1), ('(4,probe,/com/android/cts/splitapp/BaseBootReceiver.java)', 1), ('(8,scan,/android/permission/cts/NoWifiStatePermissionTest.java)', 1), ('(2,scan,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(2,scan,/com/android/cts/launcherapps/simpleapp/SimpleActivityStartService.java)', 1), ('(39,scan,/com/android/cts/verifier/bluetooth/BleCocClientService.java)', 1), ('(1,scan,/com/android/cts/verifier/bluetooth/BleAdvertiserTestActivity.java)', 1), ('(9,scan,/com/android/compatibility/common/deviceinfo/StorageDeviceInfo.java)', 1), ('(6,scan,/android/text/method/cts/PasswordTransformationMethodTest.java)', 1), ('(4,scan,/com/android/cts/verifier/nfc/TagVerifierActivity.java)', 1), ('(88,scan,/com/android/cts/verifier/wifi/TestUtils.java)', 1), ('(3,scan,/android/security/cts/MotionEventTest.java)', 1), ('(8,scan,/android/acceleration/cts/HardwareAccelerationTest.java)', 1), ('(8,scan,/android/acceleration/cts/WindowFlagHardwareAccelerationTest.java)', 1), ('(2,scan,/com/android/cts/verifier/bluetooth/MessageTestActivity.java)', 1), ('(1,scan,/android/net/wifi/cts/SupplicantStateTest.java)', 1), ('(10,scan,/com/android/cts/verifier/audio/MidiTestActivityBase.java)', 1), ('(1,scan,/com/android/cts/verifier/managedprovisioning/LocationCheckerActivity.java)', 1), ('(25,scan,/android/os/cts/BuildTest.java)', 1), ('(6,scan,/android/edi/cts/PropertyDeviceInfo.java)', 1), ('(1,scan,/android/telecom/cts/CallTest.java)', 1), ('(1,scan,/android/security/cts/FileDescriptorTest.java)', 1), ('(3,scan,/android/server/wm/DragDropTest.java)', 1), ('(6,scan,/android/edi/cts/ProcessDeviceInfo.java)', 1), ('(1,scan,/android/os/cts/NoExecutePermissionTest.java)', 1), ('(1,scan,/android/security/cts/CVE_2021_0523/PocService.java)', 1), ('(39,scan,/android/net/wifi/cts/WifiLocationInfoTest.java)', 1), ('(3,scan,/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java)', 1), ('(4,scan,/android/provider/cts/media/MediaStore_Audio_MediaTest.java)', 1), ('(1,scan,/android/video/cts/VideoEncoderDecoderTest.java)', 1), ('(1,scan,/android/server/wm/KeyguardLockedTests.java)', 1), ('(2,scan,/android/media/tv/cts/TvInputServiceTest.java)', 1), ('(2,scan,/android/permission2/cts/ProtectedBroadcastsTest.java)', 1), ('(3,scan,/com/android/cts/verifier/audio/AudioFrequencyActivity.java)', 1), ('(1,scan,/android/autofillservice/cts/dropdown/AuthenticationTest.java)', 1), ('(41,scan,/android/tests/getinfo/RootProcessScanner.java)', 1), ('(3,scan,/android/sample/cts/SampleHostJUnit4Test.java)', 1), ('(5,scan,/android/hdmicec/cts/LogHelper.java)', 1), ('(5,scan,/com/android/cts/verifier/bluetooth/BleScannerTestActivity.java)', 1), ('(53,scan,/android/net/wifi/cts/TestHelper.java)', 1), ('(1,scan,/android/security/cts/PackageSignatureTest.java)', 1), ('(2,scan,/android/accessibilityservice/cts/utils/ActivityLaunchUtils.java)', 1), ('(6,scan,/com/android/cts/mockime/MockIme.java)', 1), ('(4,scan,/android/acceleration/cts/SoftwareAccelerationTest.java)', 1), ('(9,scan,/android/bluetooth/cts/BluetoothScanReceiver.java)', 1), ('(2,scan,/com/android/cts/packageaccessapp/PackageAccessTest.java)', 1), ('(1,scan,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(6,scan,/android/provider/cts/ProviderTestUtils.java)', 1), ('(8,scan,/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java)', 1), ('(35,scan,/com/android/cts/verifier/bluetooth/BleScannerHardwareScanFilterActivity.java)', 1), ('(3,scan,/android/bluetooth/cts/HearingAidProfileTest.java)', 1), ('(3,scan,/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java)', 1), ('(3,scan,/com/android/cts/verifier/audio/USBAudioPeripheralNotificationsTest.java)', 1), ('(1,scan,/android/print/cts/PrintJobTest.java)', 1), ('(1,scan,/android/print/cts/PrintServicesTest.java)', 1), ('(191,scan,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(2,scan,/com/android/cts/verifier/bluetooth/HidDeviceActivity.java)', 1), ('(2,scan,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(179,scan,/android/media/cts/MediaScannerTest.java)', 1), ('(6,scan,/android/net/wifi/cts/WifiInfoTest.java)', 1), ('(7,scan,/android/provider/cts/media/MediaStore_DownloadsTest.java)', 1), ('(18,scan,/util/build/BuildUtilBase.java)', 1), ('(5,scan,/android/graphics/cts/BitmapTest.java)', 1), ('(2,scan,/android/permission/cts/SplitPermissionsSystemTest.java)', 1), ('(3,scan,/android/host/multiuser/BaseMultiUserTest.java)', 1), ('(3,scan,/android/app/cts/ActivityManagerProcessStateTest.java)', 1), ('(1,scan,/android/media/cts/VideoDecoderPerfTest.java)', 1), ('(4,scan,/android/app/cts/DialogTest.java)', 1), ('(6,scan,/com/android/server/cts/ProtoDumpTestCase.java)', 1), ('(1,scan,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,scan,/android/widget/cts/util/ListScenario.java)', 1), ('(32,scan,/android/permission/cts/appthatrequestpermission/AccessBluetoothOnCommand.java)', 1), ('(4,scan,/com/android/server/cts/BatteryStatsValidationTest.java)', 1), ('(8,scan,/android/bluetooth/cts/TestUtils.java)', 1), ('(45,scan,/android/bluetooth/cts/ScanFilterTest.java)', 1), ('(3,scan,/android/view/cts/input/InputDeviceMultiDeviceKeyEventTest.java)', 1), ('(9,scan,/android/appsecurity/cts/ListeningPortsTest.java)', 1), ('(23,scan,/android/jobscheduler/cts/TriggerContentTest.java)', 1), ('(2,scan,/android/graphics/cts/ImageDecoderTest.java)', 1), ('(34,scan,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,scan,/android/server/wm/AmProfileTests.java)', 1), ('(39,scan,/com/android/cts/verifier/bluetooth/BleClientService.java)', 1), ('(46,scan,/com/android/cts/verifier/bluetooth/BleEncryptedClientService.java)', 1), ('(35,scan,/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java)', 1), ('(28,scan,/com/android/cts/verifier/wifi/testcase/NetworkSuggestionTestCase.java)', 1), ('(1,scan,/android/webkit/cts/WebViewSslTest.java)', 1), ('(2,scan,/android/provider/cts/media/MediaStoreTest.java)', 1), ('(8,scan,/android/hardware/camera2/cts/helpers/Camera2Focuser.java)', 1), ('(3,scan,/com/android/cts/verifier/audio/AnalogHeadsetAudioActivity.java)', 1), ('(1,scan,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(1,scan,/android/app/role/cts/RoleManagerTest.java)', 1), ('(1,scan,/com/android/cts/apicoverage/TestModuleConfigHandler.java)', 1), ('(2,scan,/com/android/cts/verifier/bluetooth/BleInsecureServerScannerTestActivity.java)', 1), ('(3,probe,/android/cts/statsdatom/statsd/AtomTestCase.java)', 1), ('(3,scan,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(15,scan,/android/tests/getinfo/DeviceInfoInstrument.java)', 1), ('(2,probe,/android/telephony/cts/TelephonyLocationTests.java)', 1), ('(6,scan,/android/media/cts/Utils.java)', 1), ('(4,scan,/android/scopedstorage/cts/host/ScopedStorageHostTest.java)', 1), ('(3,scan,/android/appsecurity/cts/PackageVisibilityTest.java)', 1), ('(6,scan,/android/scopedstorage/cts/host/LegacyStorageHostTest.java)', 1), ('(1,scan,/com/android/cts/usb/TestUsbTest.java)', 1), ('(4,scan,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(3,scan,/android/security/cts/AdbUtils.java)', 1), ('(79,scan,/android/bluetooth/cts/ScanCallbackTest.java)', 1), ('(40,scan,/com/android/cts/verifier/bluetooth/BleAdvertiserService.java)', 1), ('(3,scan,/android/display/cts/BrightnessTest.java)', 1), ('(11,scan,/android/cts/statsdatom/statsd/UidAtomTests.java)', 1), ('(3,scan,/com/android/compatibility/dalvik/DalvikTestRunner.java)', 1), ('(1,scan,/android/devicepolicy/cts/DevicePolicyManagerTest.java)', 1), ('(86,scan,/android/net/wifi/cts/ScanResultTest.java)', 1), ('(3,scan,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(3,scan,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(2,scan,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(1,scan,/android/content/cts/MockSyncAdapter.java)', 1), ('(1,scan,/android/alarmmanager/cts/UidCapTests.java)', 1), ('(4,probe,/com/android/cts/mediastorageapp/MediaStorageTest.java)', 1), ('(5,scan,/com/android/cts/mediastorageapp/MediaStorageTest.java)', 1), ('(4,scan,/android/display/cts/VirtualDisplayTest.java)', 1), ('(3,scan,/com/android/cts/verifier/audio/USBAudioPeripheralActivity.java)', 1), ('(1,scan,/com/android/cts/verifier/bluetooth/BleInsecureClientTestListActivity.java)', 1), ('(5,scan,/android/net/wifi/nl80211/cts/NativeScanResultTest.java)', 1), ('(1,scan,/android/bluetooth/cts/BTAdapterUtils.java)', 1), ('(25,probe,/android/graphics/pdf/cts/PdfRendererTest.java)', 1), ('(1,scan,/android/widget/cts/ExpandableListWithHeaders.java)', 1), ('(1,scan,/android/server/wm/WindowInsetsAnimationUtils.java)', 1), ('(3,probe,/com/android/cts/writeexternalstorageapp/WriteGiftTest.java)', 1), ('(27,scan,/android/net/wifi/rtt/cts/WifiRttTest.java)', 1), ('(4,scan,/android/telecom/cts/BaseTelecomTestWithMockServices.java)', 1), ('(3,scan,/com/android/cts/monkey/MonkeyTest.java)', 1), ('(8,scan,/android/net/wifi/cts/app/TriggerScanAndReturnStatusActivity.java)', 1), ('(2,scan,/com/android/cts/verifier/audio/audiolib/TapLatencyAnalyser.java)', 1), ('(8,scan,/android/security/SELinuxTargetSdkTestBase.java)', 1), ('(8,scan,/android/media/cts/AudioTrackSurroundTest.java)', 1), ('(2,scan,/com/android/cts/verifier/bluetooth/BluetoothTestActivity.java)', 1), ('(2,scan,/android/net/wifi/cts/CoexUnsafeChannelTest.java)', 1), ('(1,scan,/com/android/cts/verifier/bluetooth/BleSecureClientTestListActivity.java)', 1), ('(2,scan,/android/content/cts/AvailableIntentsTest.java)', 1), ('(2,scan,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(58,scan,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(1,scan,/android/providerui/cts/MediaStoreUiTest.java)', 1), ('(2,scan,/android/mediaprovidertranscode/cts/TranscodeTestUtils.java)', 1), ('(7,scan,/android/view/cts/KeyEventTest.java)', 1), ('(1,scan,/android/acceleration/AcceleratedView.java)', 1), ('(1,scan,/android/security/cts/CVE_2021_0523.java)', 1), ('(1,scan,/android/server/wm/app/KeyguardDismissLoggerCallback.java)', 1), ('(4,scan,/android/text/cts/TextShaperTest.java)', 1), ('(4,probe,/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java)', 1), ('(3,scan,/android/media/tv/cts/TvContractTest.java)', 1), ('(1,scan,/com/android/cts/verifier/bluetooth/BleSecureServerTestListActivity.java)', 1), ('(1,scan,/android/media/cts/AudioManagerTest.java)', 1), ('(8,scan,/android/tests/getinfo/GLESSurfaceView.java)', 1), ('(1,scan,/android/systemui/cts/WindowInsetsBehaviorTests.java)', 1), ('(7,scan,/android/server/wm/WindowInsetsAnimationControllerTests.java)', 1), ('(1,scan,/android/view/inputmethod/cts/InputMethodServiceTest.java)', 1), ('(35,scan,/com/android/cts/verifier/bluetooth/BleConnectionPriorityClientService.java)', 1), ('(2,scan,/android/leanbackjank/app/Utils.java)', 1), ('(1,scan,/android/systemui/cts/LightBarTests.java)', 1), ('(1,scan,/com/android/cts/verifier/bluetooth/BleInsecureServerTestListActivity.java)', 1)]"	"[('([3:/android/permission/cts/NearbyDevicesRenouncePermissionTest.java]:[scan]:[3]:method_text:[0);            assertThat(mScanNoteCount).isGreaterThan(0);        });    }    @AppModeFull   ])', 3), ('([1:/android/print/cts/InterfaceForAppsTest.java]:[scan]:[1]:method_text:[rue(job.isCancelled()));        waitForPrinterDiscoverySessionDestroyCallbackCalled(1);    }   ])', 2), (""([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[scan]:[4]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.     */   ])"", 2), ('([4:/android/bluetooth/cts/ScanFilterTest.java]:[scan]:[4]:method_text:[());        assertTrue(""uuid filter fails"", filter.matches(mScanResult));    }    @SmallTest   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[scan]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[scan]:[2]:method_text:[        } finally {            denyAppOps(""android:manage_external_storage"");        }    }   ])', 2), ('([1:/com/android/compatibility/testtype/DalvikTest.java]:[scan]:[1]:method_text:[em.currentTimeMillis() - mStartTime, new HashMap<String, Metric>());            }        }    }}])', 1), ('([14:/android/dumpsys/cts/BatteryStatsDumpsysTest.java]:[scan]:[14]:method_text:[3]); // unoptimizedScanMaxTime        assertInteger(parts[14]); // unoptimizedScanMaxTimeBg    }}])', 1), ('([1:/android/os/cts/AsyncTaskTest.java]:[scan]:[1]:method_text:[k.exception);        assertTrue(mMyAsyncTask.exception instanceof InterruptedException);    }   ])', 1), ('([1:/android/os/cts/AsyncTaskTest.java]:[scan]:[1]:method_text:[assertTrue(mMyAsyncTask.isOnCancelledCalled);        assertNull(mMyAsyncTask.exception);    }   ])', 1), ('([1:/android/os/cts/AsyncTaskTest.java]:[scan]:[1]:method_text:[ssertFalse(mMyAsyncTask.isOnCancelledCalled);        assertNull(mMyAsyncTask.exception);    }   ])', 1), ('([2:/com/android/cts/readexternalstorageapp/ReadMultiViewTest.java]:[probe]:[2]:method_text:[ile());    }    /**     * Verify that we have R/W access to test.probe in our cache.     */   ])', 1), ('([1:/com/android/cts/readexternalstorageapp/ReadMultiViewTest.java]:[probe]:[1]:method_text:[h()).st_uid);        assertEquals(Os.getuid(), Os.stat(testFile.getAbsolutePath()).st_uid);    }}])', 1), ('([5:/com/android/cts/verifier/audio/MidiNativeTestActivity.java]:[scan]:[5]:method_text:[class USBMidiEchoReceiver */    } /* class BTMidiTestModule */} /* class MidiNativeTestActivity */])', 1), ('([1:/android/view/cts/LongPressBackActivity.java]:[scan]:[1]:method_text:[ mSawBackUp;    }    public boolean sawOnBackPressed() {        return mSawOnBackPressed;    }])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[scan]:[1]:method_text:[sAutogrouped();        }        cancelAndPoll(701);        assertNotificationCount(0);    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[scan]:[1]:method_text:[            // pass        }        assertOnlySomeNotificationsAutogrouped(postedIds);    }   ])', 1), (""([4:/android/bluetooth/cts/ScanRecordTest.java]:[scan]:[4]:method_text:[h.BluetoothTestRunner' */public class ScanRecordTest extends AndroidTestCase {    @SmallTest   ])"", 1), ('([4:/android/bluetooth/cts/ScanRecordTest.java]:[scan]:[4]:method_text:[).get(uuid2));        TestUtils.assertArrayEquals(serviceData, data.getServiceData(uuid2));    }}])', 1), ('([5:/android/scopedstorage/cts/device/BypassDatabaseOperationsTest.java]:[scan]:[5]:method_text:[lver(), file);            MediaStore.scanFile(getContentResolver(), renamedFile);        }    }}])', 1), ('([3:/android/hardware/input/cts/tests/NintendoSwitchProTest.java]:[probe]:[3]:method_text:[id-nintendo probe is done, add a delay here.         */        SystemClock.sleep(1000);    }   ])', 1), ('([1:/com/android/cts/apicoverage/CurrentXmlHandler.java]:[scan]:[1]:method_text:[ributes attributes) {        return ""java.lang.Enum"".equals(attributes.getValue(""extends""));    }])', 1), ('([67:/android/net/wifi/rtt/cts/TestBase.java]:[scan]:[67]:method_text:[RE_SCAN_MILLIS);            }            scanCount++;        }        return bestTestAp;    }}])', 1), ('([2:/android/provider/cts/media/MediaStorePendingTest.java]:[scan]:[2]:method_text:[t modified time and size     * as part of publishing that we still perform a full scan.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[scan]:[1]:method_text:[  } finally {                revokePermission(sensorPermission);            }        }    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[scan]:[1]:method_text:[NIED);            assertCannotRequestPermissionFromActivity(sensorPermission);        }    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PermissionsTest.java]:[scan]:[1]:method_text:[ PERMISSION_DENIED,                PERMISSION_APP_PACKAGE_NAME, PERMISSIONS_ACTIVITY_NAME);    }}])', 1), ('([1:/com/android/cts/monkey/SeedTest.java]:[scan]:[1]:method_text:[roid.cts.monkey;import java.util.Scanner;public class SeedTest extends AbstractMonkeyTest {   ])', 1), ('([5:/com/android/cts/monkey/SeedTest.java]:[scan]:[5]:method_text:[ith("":Sending"")) {                return line;            }        }        return null;    }}])', 1), ('([4:/android/media/cts/ScannerNotificationReceiver.java]:[scan]:[4]:method_text:[                    count++;                }            }        }        return count;    }}])', 1), ('([3:/com/android/cts/storagestatsapp/StorageStatsTest.java]:[scan]:[3]:method_text:[ manually should always be consistent with     * whatever the stats APIs are returning.     */   ])', 1), ('([1:/android/cts/backup/keyvaluerestoreapp/KeyValueBackupRestoreTest.java]:[scan]:[1]:method_text:[  public void tearDown() {        mContext.unregisterReceiver(mSharedPrefencesReceiver);    }   ])', 1), (""([9:/android/cts/backup/keyvaluerestoreapp/KeyValueBackupRestoreTest.java]:[scan]:[9]:method_text:[est, but a device-side routine that's called from the host-side to     * requestBackup.     */   ])"", 1), ('([8:/com/android/cts/managedprofile/WifiTest.java]:[probe]:[8]:method_text:[               return config;                }            }        }        return null;    }}])', 1), ('([1:/android/media/cts/MediaRoute2ProviderServiceTest.java]:[scan]:[1]:method_text:[            routeMap.put(route.getOriginalId(), route);        }        return routeMap;    }}])', 1), ('([2:/com/android/cts/verifier/bluetooth/ConnectionAccessServerActivity.java]:[scan]:[2]:method_text:[mChatService.stop();        }        unregisterReceiver(mConnectionAccessRequestReceiver);    }}])', 1), ('([11:/android/media/cts/MediaScannerConnectionTest.java]:[scan]:[11]:method_text:[ediaScannerConnection.disconnect();            mMediaScannerConnection = null;        }    }   ])', 1), ('([30:/android/media/cts/MediaScannerConnectionTest.java]:[scan]:[30]:method_text:[th;            if (uri != null) {                mediaUri = uri;            }        }    }}])', 1), ('([4:/android/permission/cts/LocationAccessCheckTest.java]:[scan]:[4]:method_text:[    @After    public void locationUnbind() throws Throwable {        unbindService();    }   ])', 1), ('([3:/android/display/cts/DisplayTest.java]:[scan]:[3]:method_text:[     * Verify that the getDisplays method returns both a default and an overlay display.     */   ])', 1), ('([1:/android/appsecurity/cts/UseProcessTest.java]:[scan]:[1]:method_text:[application"");        assertTrue(!getDevice().getInstalledPackageNames().contains(PKG));    }   ])', 1), ('([1:/android/appsecurity/cts/UseProcessTest.java]:[scan]:[1]:method_text:[mmyActivity"");        assertTrue(!getDevice().getInstalledPackageNames().contains(PKG));    }   ])', 1), ('([1:/android/appsecurity/cts/UseProcessTest.java]:[scan]:[1]:method_text:[ummyService"");        assertTrue(!getDevice().getInstalledPackageNames().contains(PKG));    }   ])', 1), ('([1:/android/appsecurity/cts/UseProcessTest.java]:[scan]:[1]:method_text:[mmyReceiver"");        assertTrue(!getDevice().getInstalledPackageNames().contains(PKG));    }   ])', 1), ('([1:/android/appsecurity/cts/UseProcessTest.java]:[scan]:[1]:method_text:[.DummyProvider"");        assertTrue(!getDevice().getInstalledPackageNames().contains(PKG));    }}])', 1), ('([18:/android/cts/statsdatom/wifi/WifiStatsTests.java]:[scan]:[18]:method_text:[_SERVICE);            assertThat(a.getScanDurationMillis()).isGreaterThan(0);        }    }   ])', 1), ('([9:/android/cts/statsdatom/wifi/WifiStatsTests.java]:[scan]:[9]:method_text:[er()).isEqualTo(stateOn);        assertThat(a1.getState().getNumber()).isEqualTo(stateOff);    }}])', 1), (""([1:/android/provider/cts/media/MediaStoreTrashedTest.java]:[scan]:[1]:method_text:[le, uri);    }    /**     * Verify that we can trash and untrash items we don't own.     */   ])"", 1), ('([1:/android/provider/cts/media/MediaStoreTrashedTest.java]:[scan]:[1]:method_text:[uri);    }    /**     * Verify that we can trash and untrash items in odd locations.     */   ])', 1), ('([1:/android/provider/cts/media/MediaStoreTrashedTest.java]:[scan]:[1]:method_text:[h(),                    c.getString(c.getColumnIndexOrThrow(MediaColumns.DATA)));        }    }}])', 1), ('([2:/android/print/cts/InterfaceForAppsTest.java]:[scan]:[2]:method_text:[rue(job.isCancelled()));        waitForPrinterDiscoverySessionDestroyCallbackCalled(1);    }   ])', 1), ('([8:/android/net/wifi/cts/app/RetrieveScanResultsAndReturnStatusActivity.java]:[scan]:[8]:method_text:[setResult(RESULT_OK, new Intent().putExtra(SCAN_STATUS_EXTRA, succeeded));        finish();    }}])', 1), ('([25:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[scan]:[25]:method_text:[es layers to our debuggable app and ensures they are     * loaded in the correct order.     */   ])', 1), ('([2:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[scan]:[2]:method_text:[not enumerate layers in base     * directory if enable_gpu_debug_layers is not enabled.     */   ])', 1), ('([2:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[scan]:[2]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_app does not match.     */   ])', 1), ('([2:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[scan]:[2]:method_text:[S apps do not enumerate layers in base     * directory if gpu_debug_layers are not set.     */   ])', 1), ('([2:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[scan]:[2]:method_text:[/**     * This test ensures we can still use properties if no GLES layers are specified     */   ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[scan]:[4]:method_text:[/**     * This test ensures system properties are ignored if Settings load a GLES layer     */   ])', 1), ('([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[scan]:[6]:method_text:[/**     * This test ensures that external GLES layers can be loaded by a debuggable app     */   ])', 1), ('([2:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[scan]:[2]:method_text:[ppStartTime);        Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);    }}])', 1), ('([8:/com/android/cts/verifier/bluetooth/DevicePickerActivity.java]:[scan]:[8]:method_text:[tName() != null ? device.getName() : """",                    device.getAddress());        }    }}])', 1), ('([1:/android/media/cts/MediaScannerNotificationTest.java]:[scan]:[1]:method_text:[luate and port to instant"")public class MediaScannerNotificationTest extends AndroidTestCase {   ])', 1), ('([17:/android/media/cts/MediaScannerNotificationTest.java]:[scan]:[17]:method_text:[obar."" + extensions[i]).delete());        }        assertTrue(new File(tmpPath).delete());    }}])', 1), ('([6:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[scan]:[6]:method_text:[ls(false, cr.isShortFrameEnabled());        assertEquals(55, cr.getBitsPer1000Symbol());    }   ])', 1), ('([2:/android/media/cts/RouteDiscoveryPreferenceTest.java]:[scan]:[2]:method_text:[rence.shouldPerformActiveScan());        assertEquals(0, preference.describeContents());    }   ])', 1), ('([2:/android/media/cts/RouteDiscoveryPreferenceTest.java]:[scan]:[2]:method_text:[nce.getPreferredFeatures());        assertTrue(newPreference.shouldPerformActiveScan());    }   ])', 1), ('([5:/android/media/cts/RouteDiscoveryPreferenceTest.java]:[scan]:[5]:method_text:[ce.getPreferredFeatures());        assertFalse(newPreference.shouldPerformActiveScan());    }   ])', 1), ('([2:/android/media/cts/RouteDiscoveryPreferenceTest.java]:[scan]:[2]:method_text:[tures, true /* isActiveScan */).build();        assertEquals(preference1, preference2);    }   ])', 1), ('([1:/android/media/cts/RouteDiscoveryPreferenceTest.java]:[scan]:[1]:method_text:[Preference.Builder(preference1).build();        assertEquals(preference1, preference2);    }   ])', 1), ('([5:/android/media/cts/RouteDiscoveryPreferenceTest.java]:[scan]:[5]:method_text:[        .build();        assertNotEquals(preference, preferenceWithDifferentActiveScan);    }   ])', 1), ('([4:/android/media/cts/RouteDiscoveryPreferenceTest.java]:[scan]:[4]:method_text:[        .build();        assertNotEquals(preference, preferenceWithDifferentActiveScan);    }   ])', 1), ('([1:/android/media/cts/RouteDiscoveryPreferenceTest.java]:[scan]:[1]:method_text:[l.obtain();        preference.writeToParcel(dummyParcel, 0);        dummyParcel.recycle();    }}])', 1), ('([2:/android/net/wifi/cts/app/RetrieveConnectionInfoAndReturnStatusActivity.java]:[scan]:[2]:method_text:[setResult(RESULT_OK, new Intent().putExtra(SCAN_STATUS_EXTRA, succeeded));        finish();    }}])', 1), ('([25:/com/android/cts/verifier/bluetooth/BleAdvertiserHardwareScanFilterActivity.java]:[scan]:[25]:method_text:[NOT_SUPPORT:                    pass();                    break;            }        }    };}])', 1), ('([15:/com/android/cts/verifier/bluetooth/BleScannerPowerLevelActivity.java]:[scan]:[15]:method_text:[T)                            .show();                     break;            }        }    };}])', 1), ('([1:/android/media/cts/DecoderTest.java]:[scan]:[1]:method_text:[    ""40 78 13 64 cf 78 ed cc  bf 5a de f9 8e c7 c3 00""    };    @CddTest(requirement=""5.3.7"")   ])', 1), ('([1:/android/security/cts/CVE_2021_0523/PocActivity.java]:[scan]:[1]:method_text:[e    protected void onDestroy() {        super.onDestroy();        mScreenLock.release();    }}])', 1), ('([12:/android/permission/cts/NearbyDevicesRenouncePermissionTest.java]:[scan]:[12]:method_text:[teCounts() {        mLocationNoteCount = 0;        mScanNoteCount = 0;    }    @AppModeFull   ])', 1), ('([21:/android/permission/cts/NearbyDevicesRenouncePermissionTest.java]:[scan]:[21]:method_text:[              + "" com.android.bluetooth/.btservice.AdapterService set-test-mode disabled"");    }}])', 1), ('([1:/android/permission/cts/ServicesInstantAppsCannotAccessTests.java]:[scan]:[1]:method_text:[AppModeInstant@RunWith(AndroidJUnit4.class)public class ServicesInstantAppsCannotAccessTests {   ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[scan]:[1]:method_text:[ finally {                mContext.unregisterReceiver(receiver);            }        }    }   ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[scan]:[1]:method_text:[utStream(file)) {            FileUtils.copy(source, target);        }        return file;    }}])', 1), ('([6:/android/mediadrm/cts/Utils.java]:[scan]:[6]:method_text:[      mActiveConfigSize = configs.size();            mCountDownLatch.countDown();        }    }}])', 1), ('([1:/android/abioverride/cts/AbiOverrideTest.java]:[scan]:[1]:method_text:[ correctly set to 32bit when use32BitAbi is set to true.     *     * @throws Exception     */   ])', 1), ('([2:/android/abioverride/cts/AbiOverrideTest.java]:[scan]:[2]:method_text:[he result is false        assertEquals(""Incorrect abi"", TEST_STRING + ""false"", testString);    }}])', 1), ('([5:/com/android/cts/install/lib/testapp/ProcessUserData.java]:[scan]:[5]:method_text:[ of the app or the user data            // has been wiped.            return -1;        }    }}])', 1), ('([1:/android/appsecurity/cts/listeningports/ListeningPortsTest.java]:[scan]:[1]:method_text:[e file and the boolean     * values are received as parameters from the host side test.     */   ])', 1), ('([8:/android/appsecurity/cts/listeningports/ListeningPortsTest.java]:[scan]:[8]:method_text:[2*i + 1), 16));            }            return InetAddress.getByAddress(retval);        }    }}])', 1), (""([2:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[scan]:[2]:method_text:[     * a no-op, will only ensure that the device does not crash when invoking the API's.     */   ])"", 1), ('([6:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[scan]:[6]:method_text:[ {            if (file != null) {                file.delete();            }        }    }   ])', 1), ('([5:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[scan]:[5]:method_text:[ll));        assertNotNull(mContentResolver.loadThumbnail(uri, new Size(96, 96), null));    }   ])', 1), ('([4:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[scan]:[4]:method_text:[dir, ""d.jpg"")));        assertEquals(d, mContentResolver.uncanonicalize(canonicalized));    }   ])', 1), ('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[scan]:[1]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([3:/android/webkit/cts/TestWebServer.java]:[scan]:[3]:method_text:[     String path = uri.getPath();            return path.equals(SHUTDOWN_PREFIX);        }    }}])', 1), ('([8:/com/android/compatibility/common/deviceinfo/GlesStubActivity.java]:[scan]:[8]:method_text:[e extension string.            collector.addEglExtensions(extensions.split("" ""));        }    }}])', 1), ('([3:/android/signature/cts/ApiPresenceChecker.java]:[scan]:[3]:method_text:[timeClass,            JDiffClassDescription.JDiffMethod methodDescription, Method method) {    }}])', 1), ('([3:/com/android/cts/verifier/audio/midilib/MidiIODevice.java]:[scan]:[3]:method_text:[PROPERTY_NAME);        } else {            return """";        }    }}   /* class MidiIODevice */])', 1), ('([2:/com/android/cts/verifier/bluetooth/BleSecureServerScannerTestActivity.java]:[scan]:[2]:method_text:[ublic void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);    }}])', 1), ('([7:/com/android/server/cts/device/statsdatom/AtomTests.java]:[scan]:[7]:method_text:[VICE, 117);        APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_ESTABLISH_VPN_MANAGER, 118);    }   ])', 1), ('([9:/com/android/server/cts/device/statsdatom/AtomTests.java]:[scan]:[9]:method_text:[tings.SCAN_MODE_OPPORTUNISTIC).build();        performBleScan(scanSettings, null,false);    }   ])', 1), ('([9:/com/android/server/cts/device/statsdatom/AtomTests.java]:[scan]:[9]:method_text:[ttings.SCAN_MODE_LOW_LATENCY).build();        performBleScan(scanSettings, null, false);    }   ])', 1), ('([13:/com/android/server/cts/device/statsdatom/AtomTests.java]:[scan]:[13]:method_text:[Builder();        performBleScan(scanSettings, Arrays.asList(scanFilter.build()), true);    }   ])', 1), ('([70:/com/android/server/cts/device/statsdatom/AtomTests.java]:[scan]:[70]:method_text:[   sleep(2_000);            }            bleScanner.stopScan(scanCallback);        });    }   ])', 1), ('([1:/com/android/server/cts/device/statsdatom/AtomTests.java]:[scan]:[1]:method_text:[           }        }.execute();        waitForReceiver(context, 59_000, latch, null);    }   ])', 1), ('([9:/com/android/server/cts/device/statsdatom/AtomTests.java]:[scan]:[9]:method_text:[Scan();            waitForReceiver(context, 60_000, onReceiveLatch, receiver);        }    }   ])', 1), ('([2:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[scan]:[2]:method_text:[estrictions imposed by     * MediaProvider. <p> Assumes we have WRITE_EXTERNAL_STORAGE.     */   ])', 1), ('([1:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[scan]:[1]:method_text:[ally {            fileInMediaDir.delete();        }    }    // test read storage permission   ])', 1), ('([1:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[scan]:[1]:method_text:[ }    }    /**     * Test that legacy app with storage permission can list all files     */   ])', 1), ('([2:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[scan]:[2]:method_text:[  }    /**     * Test that URI returned on inserting hidden file is valid after scan.     */   ])', 1), ('([1:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[scan]:[1]:method_text:[EXTERNAL_STORAGE permission bypasses rename     * restrictions imposed by MediaProvider     */   ])', 1), ('([1:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[scan]:[1]:method_text:[app with no storage permission can only rename files in app external     * directories.     */   ])', 1), ('([1:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[scan]:[1]:method_text:[NIQUE constraint error while updating db     * rows corresponding to renamed directory.     */   ])', 1), ('([3:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[scan]:[3]:method_text:[    * b/150498564,b/150274099: Test that apps can rename files that are not in database.     */   ])', 1), (""([1:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[scan]:[1]:method_text:[st that legacy apps creating files for existing db row doesn't upsert and set IS_PENDING     */   ])"", 1), ('([3:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[scan]:[3]:method_text:[ } finally {                deleteWithMediaProviderNoThrow(uri);            }        }    }   ])', 1), ('([1:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[scan]:[1]:method_text:[e.delete();            denyAppOpsToUid(Process.myUid(), SYSTEM_GALERY_APPOPS);        }    }   ])', 1), ('([1:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[scan]:[1]:method_text:[nally {            otherAppVideoFile.delete();            videoFile.delete();        }    }   ])', 1), ('([8:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[scan]:[8]:method_text:[ke sure inserting files from app private directories in legacy apps is allowed via DATA.     */   ])', 1), ('([7:/android/hardware/camera2/cts/RobustnessTest.java]:[scan]:[7]:method_text:[ll expected mandatory stream combinations are present and     * advertised accordingly.     */   ])', 1), ('([1:/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java]:[probe]:[1]:method_text:[{        assertEquals(Environment.MEDIA_MOUNTED, Environment.getExternalStorageState());    }   ])', 1), ('([6:/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java]:[probe]:[6]:method_text:[gacy filesystem paths continue working, and that they all     * point to same location.     */   ])', 1), ('([10:/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java]:[probe]:[10]:method_text:[              assertDirNoWriteAccess(userPath);                }            }        }    }   ])', 1), ('([1:/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java]:[scan]:[1]:method_text:[ / 1000;        assertEquals(newTimeSeconds, Os.fstat(fd.getFileDescriptor()).st_mtime);    }   ])', 1), ('([1:/com/android/cts/writeexternalstorageapp/WriteExternalStorageTest.java]:[scan]:[1]:method_text:[ctories tested by     * {@link CommonExternalStorageTest#testAllPackageDirsWritable()}.     */   ])', 1), ('([1:/android/security/cts/CVE_2020_0018.java]:[scan]:[1]:method_text:[class)public class CVE_2020_0018 extends SecurityTestCase {    /**     * b/139945049     */   ])', 1), ('([5:/android/security/cts/CVE_2020_0018.java]:[scan]:[5]:method_text:[tEntry,                           not(containsString(""deviceId"")));            }        }    }}])', 1), ('([1:/android/appwidget/cts/AppWidgetTest.java]:[scan]:[1]:method_text:[rInfo());    }    @AppModeInstant(reason = ""Instant apps cannot provide or host app widgets"")   ])', 1), ('([1:/android/appwidget/cts/AppWidgetTest.java]:[scan]:[1]:method_text:[WidgetId());    }    @AppModeFull(reason = ""Instant apps cannot provide or host app widgets"")   ])', 1), ('([59:/android/carrierapi/cts/NetworkScanApiTest.java]:[scan]:[59]:method_text:[ radioAccessSpecifier;    }    /** Tests that the device properly requests a network scan. */   ])', 1), ('([15:/android/carrierapi/cts/NetworkScanApiTest.java]:[scan]:[15]:method_text:[);        } finally {            getAndSetLocationSwitch(isLocationSwitchOn);        }    }   ])', 1), ('([2:/android/carrierapi/cts/NetworkScanApiTest.java]:[scan]:[2]:method_text:[tNetworkScanLocationOffPass() {        requestNetworkScanLocationOffHelper(false, true);    }   ])', 1), ('([29:/android/carrierapi/cts/NetworkScanApiTest.java]:[scan]:[29]:method_text:[InfoCallback was interrupted: "" + ex);        }        return resultsCallback.cellInfo;    }   ])', 1), ('([15:/android/carrierapi/cts/NetworkScanApiTest.java]:[scan]:[15]:method_text:[cs.add(""310120"");        return mccMncs;    }    /** To test its constructor and getters. */   ])', 1), ('([16:/android/carrierapi/cts/NetworkScanApiTest.java]:[scan]:[16]:method_text:[escribeContents())                .isEqualTo(0);    }    /** To test its hashCode method. */   ])', 1), ('([17:/android/carrierapi/cts/NetworkScanApiTest.java]:[scan]:[17]:method_text:[ .isNotEqualTo(networkScanRequest3.hashCode());    }    /** To test its comparison method. */   ])', 1), ('([16:/android/carrierapi/cts/NetworkScanApiTest.java]:[scan]:[16]:method_text:[(networkScanRequest2);    }    /** To test its writeToParcel and createFromParcel methods. */   ])', 1), ('([9:/android/carrierapi/cts/NetworkScanApiTest.java]:[scan]:[9]:method_text:[quest.CREATOR.createFromParcel(p);        assertThat(networkScanRequest).isEqualTo(newnsr);    }}])', 1), ('([1:/android/content/cts/ContentProviderClientTest.java]:[scan]:[1]:method_text:[gnal.isCanceled());            verify(mICancellationSignal, never()).cancel();        }    }   ])', 1), ('([1:/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java]:[scan]:[1]:method_text:[tests if Wifi is not supported        assumeTrue(WifiFeature.isWifiSupported(mContext));    }   ])', 1), ('([12:/android/net/wifi/nl80211/cts/WifiNl80211ManagerTest.java]:[scan]:[12]:method_text:[R_TKIP));        assertThat(securityType.groupCipher).isEqualTo(ScanResult.CIPHER_CCMP);    }   ])', 1), ('([1:/android/hdmicec/cts/common/HdmiCecDeviceTypeTest.java]:[scan]:[1]:method_text:[emSwitch));    /**     * Tests that the device declares a valid HDMI CEC device type.     */   ])', 1), ('([2:/com/android/cts/verifier/bluetooth/BleSecureServerScannerPowerLevelActivity.java]:[scan]:[2]:method_text:[ublic void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);    }}])', 1), ('([1:/com/android/cts/tagging/TaggingSdk30Test.java]:[probe]:[1]:method_text:[mpat is never probed for the status of the heap pointer    // tagging feature in this instance.   ])', 1), ('([1:/com/android/cts/tagging/TaggingSdk30Test.java]:[probe]:[1]:method_text:[es*/ ImmutableSet.of());    }    // Ensure that disabling MTE on non-MTE hardware is a no-op.   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[scan]:[1]:method_text:[);        }    }    /**     * Verify creating a session with additional parameters.     */   ])', 1), ('([2:/android/view/cts/VerifyInputEventTest.java]:[scan]:[2]:method_text:[ld contain the virtual device id, which is consistent with what the     * app receives.     */   ])', 1), ('([2:/android/view/cts/VerifyInputEventTest.java]:[scan]:[2]:method_text:[   boolean flagValue = (expectedFlags & flag) != 0;        assertEquals(flagValue, actual);    }}])', 1), ('([3:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[scan]:[3]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[scan]:[2]:method_text:[e not sustainable"",                    (resDhry > 15) ||                    (resApp > 5));    }}])', 1), ('([2:/android/scopedstorage/cts/host/ScopedStorageInstantAppHostTest.java]:[scan]:[2]:method_text:[rage() throws Exception {        runDeviceTest(""testInstantAppsCantAccessExternalStorage"");    }}])', 1), ('([4:/com/android/cts/verifier/sensors/helpers/OpenCVLibrary.java]:[probe]:[4]:method_text:[        } finally {            context.unbindService(conn);        }        return ret;    }}])', 1), ('([8:/android/net/wifi/cts/WifiNetworkSpecifierTest.java]:[scan]:[8]:method_text:[    /**     * Tests the entire connection flow using a specific SSID in the specifier.     */   ])', 1), ('([4:/android/net/wifi/cts/WifiNetworkSpecifierTest.java]:[scan]:[4]:method_text:[the device (that     * can provide internet connectivity) when the request is released.     */   ])', 1), ('([2:/android/net/wifi/cts/WifiNetworkSpecifierTest.java]:[scan]:[2]:method_text:[e();        } else {            assertThat(redacted.equals(specifier)).isTrue();        }    }}])', 1), ('([3:/android/bluetooth/cts/ScanSettingsTest.java]:[scan]:[3]:method_text:[@link ScanSettings}. */public class ScanSettingsTest extends AndroidTestCase {    @SmallTest   ])', 1), ('([7:/android/bluetooth/cts/ScanSettingsTest.java]:[scan]:[7]:method_text:[anResultType());        assertEquals(0, settings.getReportDelayMillis());    }    @SmallTest   ])', 1), ('([2:/android/bluetooth/cts/ScanSettingsTest.java]:[scan]:[2]:method_text:[s.Builder().build();        assertEquals(0, settings.describeContents());    }    @SmallTest   ])', 1), ('([12:/android/bluetooth/cts/ScanSettingsTest.java]:[scan]:[12]:method_text:[Millis());        assertEquals(ScanSettings.SCAN_MODE_LOW_LATENCY, settings.getScanMode());    }}])', 1), ('([1:/com/android/cts/verifier/wifi/NetworkRequestUnavailableNetworkSpecifierTestActivity.java]:[scan]:[1]:method_text:[equest_unavailable,                R.string.wifi_test_network_request_unavailable_info, 0);    }}])', 1), ('([2:/com/android/cts/verifier/bluetooth/BleInsecureServerScannerPowerLevelActivity.java]:[scan]:[2]:method_text:[ublic void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);    }}])', 1), ('([3:/android/provider/cts/media/MediaStore_FilesTest.java]:[scan]:[3]:method_text:[ull));        assertEquals(43L, queryLong(uri, MediaStore.Audio.AudioColumns.BOOKMARK));    }   ])', 1), ('([37:/com/android/cts/verifier/wifi/testcase/NetworkRequestTestCase.java]:[scan]:[37]:method_text:[vityManager.unregisterNetworkCallback(mNetworkCallback);        }        super.tearDown();    }}])', 1), ('([29:/com/android/cts/externalstorageapp/CommonExternalStorageTest.java]:[probe]:[29]:method_text:[            total += c;            out.write(buffer, 0, c);        }        return total;    }}])', 1), ('([1:/com/android/cts/tv/TvInputManagerHostTest.java]:[scan]:[1]:method_text:[ninstallPackage(TEST_PKG, true);            uninstallPackage(TEST_PKG2, true);        }    }   ])', 1), ('([2:/com/android/cts/tv/TvInputManagerHostTest.java]:[scan]:[2]:method_text:[ure ""            + requiredFeature + "". Test won\'t run."");        }        return result;    }}])', 1), ('([1:/com/android/cts/tagging/TaggingManifestDisabledTest.java]:[probe]:[1]:method_text:[ngBaseTest for more info.                /*reportedDisabledChanges*/ ImmutableSet.of());    }   ])', 1), ('([1:/com/android/cts/tagging/TaggingManifestDisabledTest.java]:[probe]:[1]:method_text:[ggingBaseTest for more info.                /*reportedDisabledChanges*/ ImmutableSet.of());    }}])', 1), ('([8:/android/appsecurity/cts/ExternalStorageHostTest.java]:[probe]:[8]:method_text:[             assertFalse(probe, access(probe));                }            }        }    }   ])', 1), ('([6:/android/text/format/cts/DateFormatTest.java]:[scan]:[6]:method_text:[Delimiter(""\\\\A"")) {            return scanner.hasNext() ? scanner.next() : """";        }    }   ])', 1), (""([1:/android/harmfulappwarning/cts/HarmfulAppWarningTest.java]:[scan]:[1]:method_text:[re that we're able to detect the launch of the activity when there     * is no warning.     */   ])"", 1), ('([1:/android/mediapc/cts/MultiCodecPerfTestBase.java]:[scan]:[1]:method_text:[minOfMaxFrameRates / 30.0),                (int) (minOfMaxMacroBlockRates / 3600.0 / 30)));    }}])', 1), ('([3:/com/android/cts/verifier/projection/offscreen/ProjectionOffscreenActivity.java]:[scan]:[3]:method_text:[ader.acquireLatestImage();        if (image != null) {            image.close();        }    }}])', 1), ('([1:/android/server/wm/KeyguardTestBase.java]:[scan]:[1]:method_text:[             () -> TestJournalContainer.get(testingComponentName).extras.getBoolean(entry));    }}])', 1), ('([20:/android/bluetooth/cts/BluetoothLeScanTest.java]:[scan]:[20]:method_text:[t case for BLE scans. Checks BLE scan timestamp is within correct range.     */    @MediumTest   ])', 1), ('([15:/android/bluetooth/cts/BluetoothLeScanTest.java]:[scan]:[15]:method_text:[only beacons matching certain type of scan filters were     * reported.     */    @MediumTest   ])', 1), ('([47:/android/bluetooth/cts/BluetoothLeScanTest.java]:[scan]:[47]:method_text:[ore explicit scan.//     * TODO(b/70865144): re-enable this test.//     *///    @MediumTest//   ])', 1), ('([67:/android/bluetooth/cts/BluetoothLeScanTest.java]:[scan]:[67]:method_text:[ults().isEmpty());//    }    /**     * Test case for BLE Batch scan.     */    @MediumTest   ])', 1), ('([32:/android/bluetooth/cts/BluetoothLeScanTest.java]:[scan]:[32]:method_text:[   }    /**     * Test case for starting a scan with a PendingIntent.     */    @MediumTest   ])', 1), ('([10:/android/bluetooth/cts/BluetoothLeScanTest.java]:[scan]:[10]:method_text:[   }    /**     * Test case for starting a scan with a PendingIntent.     */    @MediumTest   ])', 1), ('([79:/android/bluetooth/cts/BluetoothLeScanTest.java]:[scan]:[79]:method_text:[BatchScanSupported() {        return mBluetoothAdapter.isOffloadedScanBatchingSupported();    }}])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[probe]:[1]:method_text:[""cts"" probe files in every possible common storage location that     * we can think of.     */   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[probe]:[1]:method_text:[ the ""cts"" probe files created above,     * since our storage should be fully isolated.     */   ])', 1), ('([5:/com/android/cts/verifier/audio/MidiJavaTestActivity.java]:[scan]:[5]:method_text:[     } /* class USBMidiEchoReceiver */    } /* class BTMidiTestModule */} /* class MidiActivity */])', 1), ('([1:/android/media/cts/MediaSessionTestActivity.java]:[scan]:[1]:method_text:[er = new MediaController(this, token);            setMediaController(controller);        }    }}])', 1), ('([3:/android/graphics/text/cts/TextRunShaperTest.java]:[scan]:[3]:method_text:[            );        }        assertThat(glyphsResult.sameAs(layoutResult)).isTrue();    }   ])', 1), ('([1:/android/content/cts/ContentResolverSyncTestCase.java]:[scan]:[1]:method_text:[etIsSyncable(account, authority, (b) ? 1 : 0);    }    /**     * Test a sync request     */   ])', 1), ('([1:/android/content/cts/ContentResolverSyncTestCase.java]:[scan]:[1]:method_text:[UTHORITY, getMockSyncAdapter().getAuthority());    }    /**     * Test a sync cancel     */   ])', 1), ('([1:/android/content/cts/ContentResolverSyncTestCase.java]:[scan]:[1]:method_text:[Y));    }    /**     * Test if we can set and get the MasterSyncAutomatically switch     */   ])', 1), ('([1:/android/content/cts/ContentResolverSyncTestCase.java]:[scan]:[1]:method_text:[etAccounts().get(0));        assertEquals(AUTHORITY, getMockSyncAdapter().getAuthority());    }}])', 1), ('([1:/android/print/cts/PrintJobStateTransitionsTest.java]:[scan]:[1]:method_text:[nce the job is     * queued.     *     * @throws Exception If anything is unexpected.     */   ])', 1), ('([1:/android/trustedvoice/cts/TrustedVoiceHostTest.java]:[scan]:[1]:method_text:[*     * Tests the app successfully unlocked the device.     *     * @throws Exception     */   ])', 1), ('([2:/android/trustedvoice/cts/TrustedVoiceHostTest.java]:[scan]:[2]:method_text:[E_COMMAND);            getDevice().executeShellCommand(DISMISS_KEYGUARD_COMMAND);        }    }}])', 1), ('([7:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[scan]:[7]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([1:/android/permission/cts/SharedUidPermissionsTest.java]:[scan]:[1]:method_text:[sertThat(isPermissionGranted(PKG_THAT_REQUESTS_NO_PERMISSIONS, READ_CONTACTS)).isFalse();    }   ])', 1), ('([1:/android/permission/cts/SharedUidPermissionsTest.java]:[scan]:[1]:method_text:[ssertThat(isPermissionGranted(PKG_THAT_REQUESTS_NO_PERMISSIONS, READ_CONTACTS)).isTrue();    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[scan]:[1]:method_text:[);    }    /**     * Apex should fail to install if apk-in-apex fails to get scanned     */   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[scan]:[1]:method_text:[ssionId();        waitForIsReadyBroadcast(sessionId);        storeSessionId(sessionId);    }   ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[scan]:[1]:method_text:[rgetPSdk"");        assertThat(getInstalledVersion(SHIM_APEX_PACKAGE_NAME)).isEqualTo(1);    }   ])', 1), ('([3:/com/android/compatibility/common/util/CtsKeyEventUtil.java]:[scan]:[3]:method_text:[                ""This method can not be called from the main application thread"");        }    }}])', 1), ('([58:/com/android/server/cts/device/batterystats/BatteryStatsBgVsFgActions.java]:[scan]:[58]:method_text:[dException e) {            Log.e(TAG, ""Interrupted exception while sleeping"", e);        }    }}])', 1), ('([1:/android/os/cts/ProcfsHostTests.java]:[scan]:[1]:method_text:[le is in a reasonable   * shape, and the file is being updated.   *   * @throws Exception   */ ])', 1), ('([2:/android/os/cts/ProcfsHostTests.java]:[scan]:[2]:method_text:[ < threads.length; i++) {      tids[i] = Integer.parseInt(threads[i]);    }    return tids;  }}])', 1), ('([1:/com/android/cts/tagging/TaggingBaseTest.java]:[probe]:[1]:method_text:[mmand(                ""settings put global force_non_debuggable_final_build_for_compat 0"");    }}])', 1), ('([3:/com/android/cts/tagging/TaggingBaseTest.java]:[scan]:[3]:method_text:[mmand(                ""settings put global force_non_debuggable_final_build_for_compat 0"");    }}])', 1), ('([2:/android/scopedstorage/cts/ScopedStorageTest.java]:[scan]:[2]:method_text:[.scanFile(getContentResolver(), shellPdfAtRoot);            myAppPdf.delete();        }    }   ])', 1), ('([2:/android/scopedstorage/cts/ScopedStorageTest.java]:[scan]:[2]:method_text:[        deleteFilesAs(APP_B_NO_PERMS, otherAppImg, otherAppMusic, otherAppPdf);        }    }   ])', 1), ('([5:/android/scopedstorage/cts/ScopedStorageTest.java]:[scan]:[5]:method_text:[lete();            renamedMediaFile.delete();            nomediaDir.delete();        }    }   ])', 1), ('([9:/android/scopedstorage/cts/ScopedStorageTest.java]:[scan]:[9]:method_text:[ale db rows.            MediaStore.scanFile(getContentResolver(), nomediaDir);        }    }   ])', 1), ('([5:/android/scopedstorage/cts/ScopedStorageTest.java]:[scan]:[5]:method_text:[;            deleteFileAsNoThrow(otherApp, otherAppBinary.getAbsolutePath());        }    }   ])', 1), ('([5:/android/scopedstorage/cts/ScopedStorageTest.java]:[scan]:[5]:method_text:[ executeShellCommand(""am get-current-user"");        return Integer.parseInt(userId.trim());    }}])', 1), ('([1:/android/scopedstorage/cts/device/RedactUriDeviceTest.java]:[scan]:[1]:method_text:[actedUriCommon(uri, redactedUri);        } finally {            img.delete();        }    }   ])', 1), ('([1:/android/scopedstorage/cts/device/RedactUriDeviceTest.java]:[scan]:[1]:method_text:[        }        } finally {            files.forEach(file -> file.delete());        }    }   ])', 1), (""([1:/android/scopedstorage/cts/device/RedactUriDeviceTest.java]:[scan]:[1]:method_text:[   }    }    /*     * Verify that app can't open the shared redacted URI for write.     **/   ])"", 1), ('([1:/android/scopedstorage/cts/device/RedactUriDeviceTest.java]:[scan]:[1]:method_text:[have to external storage            FileUtils.copy(in, out);        }        return img;    }}])', 1), ('([1:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[scan]:[1]:method_text:[);    }    /**     * Apex should fail to install if apk-in-apex fails to get scanned     */   ])', 1), ('([3:/com/android/tests/stagedinstall/host/StagedInstallTest.java]:[scan]:[3]:method_text:[oot();        runPhase(""testApexFailsToInstallIfApkInApexFailsToScan_VerifyPostReboot"");    }   ])', 1), ('([1:/android/net/wifi/nl80211/cts/DeviceWiphyCapabilitiesTest.java]:[scan]:[1]:method_text:[} object can be serialized and deserialized,     *  while keeping its values unchanged.     */   ])', 1), ('([6:/android/net/wifi/nl80211/cts/DeviceWiphyCapabilitiesTest.java]:[scan]:[6]:method_text:[apa.hashCode());    }    /** Test mapping wifi standard support into channel width support */   ])', 1), ('([14:/android/net/wifi/nl80211/cts/DeviceWiphyCapabilitiesTest.java]:[scan]:[14]:method_text:[;        assertThat(capa.isChannelWidthSupported(ScanResult.CHANNEL_WIDTH_80MHZ)).isTrue();    }}])', 1), ('([1:/com/android/cts/cpptools/RunasPermissionsTest.java]:[scan]:[1]:method_text:[urrentUser, CONNECTOR_EXE_NAME));        assertEquals(EXPECTED_CONNECTOR_OUTPUT, results);    }}])', 1), ('([6:/android/bluetooth/cts/ScanResultTest.java]:[scan]:[6]:method_text:[_NANOS = 10000L;    /**     * Test read and write parcel of ScanResult     */    @SmallTest   ])', 1), ('([9:/android/bluetooth/cts/ScanResultTest.java]:[scan]:[9]:method_text:[sertArrayEquals(SCAN_RECORD, resultFromParcel.getScanRecord().getBytes());    }    @SmallTest   ])', 1), ('([4:/android/bluetooth/cts/ScanResultTest.java]:[scan]:[4]:method_text:[ RSSI,                TIMESTAMP_NANOS);        assertEquals(0, result.describeContents());    }}])', 1), ('([4:/android/provider/cts/media/MediaStore_Video_MediaTest.java]:[scan]:[4]:method_text:[dir, ""d.mp4"")));        assertEquals(d, mContentResolver.uncanonicalize(canonicalized));    }   ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[scan]:[1]:method_text:[ger().hasSystemFeature(                PackageManager.FEATURE_INCREMENTAL_DELIVERY, 2));    }   ])', 1), ('([5:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[scan]:[5]:method_text:[),                    parseInt(line, userIdIdx, USER_ID_PREFIX.length(), -1));        }    }   ])', 1), ('([5:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[probe]:[5]:method_text:[ilityStatsEntry} retrieved from     * {@link WifiManager.OnWifiUsabilityStatsListener}.     */   ])', 1), ('([8:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[probe]:[8]:method_text:[* Tests the {@link android.net.wifi.WifiManager#updateWifiUsabilityScore(int, int, int)}     */   ])', 1), ('([12:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[scan]:[12]:method_text:[* Tests the {@link android.net.wifi.WifiManager#updateWifiUsabilityScore(int, int, int)}     */   ])', 1), ('([5:/android/widget/cts/ListViewTest.java]:[scan]:[5]:method_text:[alse);        assertFalse(mListView.getItemsCanFocus());        // TODO: how to check?    }   ])', 1), ('([73:/com/android/cts/verifier/bluetooth/BleScannerService.java]:[scan]:[73]:method_text:[       Log.e(TAG, ""Scan fail. Error code: "" + new Integer(errorCode).toString());        }    }}])', 1), ('([4:/android/net/wifi/cts/WifiMigrationTest.java]:[scan]:[4]:method_text:[    /**     * Tests {@link android.net.wifi.WifiMigration.SettingsMigrationData} class.     */   ])', 1), ('([1:/com/android/cts/releaseparser/TestModuleConfigHandler.java]:[scan]:[1]:method_text:[   public TestModuleConfig getTestModuleConfig() {        return mTestModuleConfig.build();    }}])', 1), ('([1:/android/security/NetworkSecurityPolicyTestBase.java]:[scan]:[1]:method_text:[) {            synchronized (mLock) {                return mDone;            }        }    }}])', 1), ('([2:/android/view/cts/input/InputDeviceKeyLayoutMapTest.java]:[scan]:[2]:method_text:[tate before test.        checkMetaKeyState(""SCROLL_LOCK"", KeyEvent.META_SCROLL_LOCK_ON);    }   ])', 1), ('([11:/android/location/cts/fine/ScanningSettingsTest.java]:[scan]:[11]:method_text:[r.MATCH_DEFAULT_ONLY).activityInfo.packageName;    }    @CddTest(requirement = ""7.4.2/C-2-1"")   ])', 1), ('([9:/android/location/cts/fine/ScanningSettingsTest.java]:[scan]:[9]:method_text:[ wifiManager.isScanAlwaysAvailable()        );    }    @CddTest(requirement = ""7.4.3/C-4-1"")   ])', 1), ('([9:/android/location/cts/fine/ScanningSettingsTest.java]:[scan]:[9]:method_text:[ngKey);        assertEquals(checked, Settings.Global.getInt(resolver, settingKey, 0) == 1);    }}])', 1), ('([7:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[scan]:[7]:method_text:[work using restricted suggestion API.     * 3. Verify that both connections are active.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[scan]:[1]:method_text:[_PADDING_RSA_PKCS1)            .setIsStrongBoxBacked(useStrongBox)            .build();    }   ])', 1), ('([1:/android/media/tv/tuner/cts/TunerTest.java]:[scan]:[1]:method_text:[       if (mTuner != null) {          mTuner.close();          mTuner = null;        }    }   ])', 1), ('([5:/android/media/tv/tuner/cts/TunerTest.java]:[scan]:[5]:method_text:[sertEquals(Tuner.RESULT_SUCCESS, res);            }        }        mLockLatch = null;    }   ])', 1), ('([7:/android/media/tv/tuner/cts/TunerTest.java]:[scan]:[7]:method_text:[                ScanCallback.super.onDvbcAnnexReported(dvbcAnnext);            }        };    }}])', 1), ('([1:/com/android/compatibility/common/util/ShellIdentityUtils.java]:[scan]:[1]:method_text:[run();        } finally {            uiAutomation.dropShellPermissionIdentity();        }    }}])', 1), ('([1:/android/alarmmanager/cts/ExactAlarmsTest.java]:[scan]:[1]:method_text:["").commitAndAwaitPropagation();        assertTrue(mAlarmManager.canScheduleExactAlarms());    }}])', 1), ('([1:/com/android/cts/apicoverage/CtsReportHandler.java]:[scan]:[1]:method_text:[        }    }    public CtsReport getCtsReport() {        return mCtsReportBld.build();    }}])', 1), ('([2:/android/provider/cts/media/MediaStorePlacementTest.java]:[probe]:[2]:method_text:[fail();            } catch (IllegalArgumentException expected) {            }        }    }   ])', 1), ('([6:/android/provider/cts/media/MediaStorePlacementTest.java]:[probe]:[6]:method_text:[nally able to delete it        assertEquals(1, mContentResolver.delete(probeUri, null));    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[scan]:[1]:method_text:[));        assertFalse(updatePlacement(uri,                Optional.of(""DCIM""), null));    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[scan]:[1]:method_text:[ll, null) == 1);        } catch (Exception tolerated) {            return false;        }    }}])', 1), ('([4:/com/android/cts/splitapp/BaseBootReceiver.java]:[probe]:[4]:method_text:[    return Settings.Global.getInt(context.getContentResolver(), Settings.Global.BOOT_COUNT);    }}])', 1), ('([1:/android/permission/cts/NoWifiStatePermissionTest.java]:[scan]:[1]:method_text:[ <p>Requires Permission:     *   {@link android.Manifest.permission#ACCESS_WIFI_STATE}.     */   ])', 1), ('([3:/android/permission/cts/NoWifiStatePermissionTest.java]:[scan]:[3]:method_text:[ <p>Requires Permission:     *   {@link android.Manifest.permission#ACCESS_WIFI_STATE}.     */   ])', 1), ('([1:/android/permission/cts/NoWifiStatePermissionTest.java]:[scan]:[1]:method_text:[ <p>Requires Permission:     *   {@link android.Manifest.permission#CHANGE_WIFI_STATE}.     */   ])', 1), ('([3:/android/permission/cts/NoWifiStatePermissionTest.java]:[scan]:[3]:method_text:[ <p>Requires Permission:     *   {@link android.Manifest.permission#CHANGE_WIFI_STATE}.     */   ])', 1), ('([2:/android/media/cts/SystemMediaRouter2Test.java]:[scan]:[2]:method_text:[callbacks        clearCallbacks();        mUiAutomation.dropShellPermissionIdentity();    }   ])', 1), ('([2:/com/android/cts/launcherapps/simpleapp/SimpleActivityStartService.java]:[scan]:[2]:method_text:[        reply.putExtra(""result"", Activity.RESULT_FIRST_USER);        sendBroadcast(reply);    }}])', 1), ('([39:/com/android/cts/verifier/bluetooth/BleCocClientService.java]:[scan]:[39]:method_text:[ait for next state                        break;                }            }        }    };}])', 1), ('([1:/com/android/cts/verifier/bluetooth/BleAdvertiserTestActivity.java]:[scan]:[1]:method_text:[                    }                    })                    .create().show();        }    }}])', 1), ('([9:/com/android/compatibility/common/deviceinfo/StorageDeviceInfo.java]:[scan]:[9]:method_text:[            Log.w(TAG, Log.getStackTraceString(e));        }        return partitionList;    }}])', 1), ('([6:/android/text/method/cts/PasswordTransformationMethodTest.java]:[scan]:[6]:method_text:[Delimiter(""\\\\A"")) {            return scanner.hasNext() ? scanner.next() : """";        }    }   ])', 1), ('([4:/com/android/cts/verifier/nfc/TagVerifierActivity.java]:[scan]:[4]:method_text:[yTech) {        return NfcTestActivity.class.getName() + ""_"" + primaryTech.getSimpleName();    }}])', 1), ('([88:/com/android/cts/verifier/wifi/TestUtils.java]:[scan]:[88]:method_text:[er::new, StringBuilder::appendCodePoint, StringBuilder::append)                .toString();    }}])', 1), ('([1:/android/security/cts/MotionEventTest.java]:[scan]:[1]:method_text:[   * screen to determine approximate locations of touch events without the user knowing.     */   ])', 1), ('([2:/android/security/cts/MotionEventTest.java]:[scan]:[2]:method_text:[&                Configuration.UI_MODE_TYPE_MASK) == Configuration.UI_MODE_TYPE_VR_HEADSET;    }}])', 1), ('([8:/android/acceleration/cts/HardwareAccelerationTest.java]:[scan]:[8]:method_text:[ed());            assertFalse(mManualSoftwareView.isCanvasHardwareAccelerated());        }    }}])', 1), ('([8:/android/acceleration/cts/WindowFlagHardwareAccelerationTest.java]:[scan]:[8]:method_text:[ed());            assertFalse(mManualSoftwareView.isCanvasHardwareAccelerated());        }    }}])', 1), ('([2:/com/android/cts/verifier/bluetooth/MessageTestActivity.java]:[scan]:[2]:method_text:[          mChatService.stop();        }        unregisterReceiver(mPairingActionReceiver);    }}])', 1), ('([1:/android/net/wifi/cts/SupplicantStateTest.java]:[scan]:[1]:method_text:[NINITIALIZED));        assertFalse(SupplicantState.isValidState(SupplicantState.INVALID));    }}])', 1), ('([10:/com/android/cts/verifier/audio/MidiTestActivityBase.java]:[scan]:[10]:method_text:[      }            };            mTimeoutTimer.schedule(task, TEST_TIMEOUT_MS);        }    }}])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/LocationCheckerActivity.java]:[scan]:[1]:method_text:[EXTRA_ERROR_ID, messageId);        setResult(Activity.RESULT_OK, result);        finish();    }}])', 1), ('([1:/android/os/cts/BuildTest.java]:[scan]:[1]:method_text:[ ABI fields are consistent.     */    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([24:/android/os/cts/BuildTest.java]:[scan]:[24]:method_text:[ile(""^([0-9A-Za-z._-]+)$"");    /** Tests that check for valid values of constants in Build. */   ])', 1), ('([6:/android/edi/cts/PropertyDeviceInfo.java]:[scan]:[6]:method_text:[                  ""Unable to find any read-only properties. Output is "" + stdout);        }    }}])', 1), ('([1:/android/telecom/cts/CallTest.java]:[scan]:[1]:method_text:[PABILITY_DISCONNECT_FROM_CONFERENCE | CAPABILITY_MUTE,                CAPABILITY_HOLD));    }   ])', 1), ('([1:/android/security/cts/FileDescriptorTest.java]:[scan]:[1]:method_text:[g fcntl(F_GETFD) on the file descriptor,   * and verifying that the FD_CLOEXEC flag is set.   */ ])', 1), ('([3:/android/server/wm/DragDropTest.java]:[scan]:[3]:method_text:[Create(savedInstanceState);            setContentView(R.layout.drag_drop_layout);        }    }}])', 1), ('([6:/android/edi/cts/ProcessDeviceInfo.java]:[scan]:[6]:method_text:[        store.addListResult(""unapproved_root_processes"", new ArrayList<String>(unapproved));    }}])', 1), ('([1:/android/os/cts/NoExecutePermissionTest.java]:[scan]:[1]:method_text:[ePermissionTest extends TestCase {    static {        System.loadLibrary(""ctsos_jni"");    }   ])', 1), ('([1:/android/security/cts/CVE_2021_0523/PocService.java]:[scan]:[1]:method_text:[overlay the WifiScanModeActivity screen"");            }            return false;        }    }}])', 1), ('([23:/android/net/wifi/cts/WifiLocationInfoTest.java]:[scan]:[23]:method_text:[E_NAME,                WIFI_LOCATION_TEST_APP_RETRIEVE_TRANSPORT_INFO_SERVICE), status);    }   ])', 1), ('([2:/android/net/wifi/cts/WifiLocationInfoTest.java]:[scan]:[2]:method_text:[n()            throws Exception {        triggerScanFgActivityAndAssertStatusIs(false);    }   ])', 1), ('([2:/android/net/wifi/cts/WifiLocationInfoTest.java]:[scan]:[2]:method_text:[ACKAGE_NAME, ACCESS_FINE_LOCATION);        triggerScanFgActivityAndAssertStatusIs(true);    }   ])', 1), ('([2:/android/net/wifi/cts/WifiLocationInfoTest.java]:[scan]:[2]:method_text:[E_NAME, ACCESS_BACKGROUND_LOCATION);        triggerScanBgServiceAndAssertStatusIs(true);    }   ])', 1), ('([2:/android/net/wifi/cts/WifiLocationInfoTest.java]:[scan]:[2]:method_text:[ACKAGE_NAME, ACCESS_FINE_LOCATION);        triggerScanBgServiceAndAssertStatusIs(false);    }   ])', 1), ('([2:/android/net/wifi/cts/WifiLocationInfoTest.java]:[scan]:[2]:method_text:[        throws Exception {        retrieveScanResultsFgActivityAndAssertStatusIs(false);    }   ])', 1), ('([2:/android/net/wifi/cts/WifiLocationInfoTest.java]:[scan]:[2]:method_text:[AME, ACCESS_FINE_LOCATION);        retrieveScanResultsFgActivityAndAssertStatusIs(true);    }   ])', 1), ('([2:/android/net/wifi/cts/WifiLocationInfoTest.java]:[scan]:[2]:method_text:[ACCESS_BACKGROUND_LOCATION);        retrieveScanResultsBgServiceAndAssertStatusIs(true);    }   ])', 1), ('([2:/android/net/wifi/cts/WifiLocationInfoTest.java]:[scan]:[2]:method_text:[AME, ACCESS_FINE_LOCATION);        retrieveScanResultsBgServiceAndAssertStatusIs(false);    }   ])', 1), ('([1:/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java]:[scan]:[1]:method_text:[s the string was not logged to Logcat from the activity.     *     * @throws Exception     */   ])', 1), ('([2:/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java]:[scan]:[2]:method_text:[s part of CTS Pre-conditions        device.executeShellCommand(""svc wifi enable; sleep 1"");    }}])', 1), ('([4:/android/provider/cts/media/MediaStore_Audio_MediaTest.java]:[scan]:[4]:method_text:[dir, ""d.mp3"")));        assertEquals(d, mContentResolver.uncanonicalize(canonicalized));    }   ])', 1), ('([1:/android/video/cts/VideoEncoderDecoderTest.java]:[scan]:[1]:method_text:[. Add further    // tests and change the count if there can be more encoders.    // AVC tests   ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[scan]:[1]:method_text:[IVITY, false);        assertTrue(mWmState.getKeyguardControllerState().keyguardShowing);    }   ])', 1), ('([2:/android/media/tv/cts/TvInputServiceTest.java]:[scan]:[2]:method_text:[argument         * @return the function result         */        boolean apply(T value);    }}])', 1), ('([2:/android/permission2/cts/ProtectedBroadcastsTest.java]:[scan]:[2]:method_text:[K_OTHERS"",    };    /**     * Verify that protected broadcast actions can\'t be sent.     */   ])', 1), ('([3:/com/android/cts/verifier/audio/AudioFrequencyActivity.java]:[scan]:[3]:method_text:[AudioManager.GET_DEVICES_ALL));        }    }//    abstract public void updateConnectStatus();}])', 1), ('([1:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[scan]:[1]:method_text:[ore finishing the Auth UI.        latch.countDown();        mUiBot.assertNoDatasets();    }   ])', 1), ('([41:/android/tests/getinfo/RootProcessScanner.java]:[scan]:[41]:method_text:[           return scanner.next();        } finally {            scanner.close();        }    }}])', 1), ('([1:/android/sample/cts/SampleHostJUnit4Test.java]:[scan]:[1]:method_text:[ing was successfully logged to Logcat from the activity.     *     * @throws Exception     */   ])', 1), ('([2:/android/sample/cts/SampleHostJUnit4Test.java]:[scan]:[2]:method_text:[://source.android.com/devices/tech/test_infra/tradefed/testing/through-tf/report-metrics     */   ])', 1), ('([5:/android/hdmicec/cts/LogHelper.java]:[scan]:[5]:method_text:[umeTrue(testString.equals(SAD_CONFIGURATION_MARKER));        return mSupportedAudioFormats;    }}])', 1), ('([5:/com/android/cts/verifier/bluetooth/BleScannerTestActivity.java]:[scan]:[5]:method_text:[                    }                    })                    .create().show();        }    }}])', 1), ('([53:/android/net/wifi/cts/TestHelper.java]:[scan]:[53]:method_text:[ult.WIFI_BAND_60_GHZ;        } else {            return ScanResult.UNSPECIFIED;        }    }}])', 1), ('([1:/android/security/cts/PackageSignatureTest.java]:[scan]:[1]:method_text:[put != null) {                    output.close();                }            }        }    }}])', 1), ('([2:/android/accessibilityservice/cts/utils/ActivityLaunchUtils.java]:[scan]:[2]:method_text:[private static abstract class ActivityLauncher {        abstract Activity launchActivity();    }}])', 1), ('([6:/com/android/cts/mockime/MockIme.java]:[scan]:[6]:method_text:[   recordEventInternal(""onInlineSuggestionLongClickedEvent"", runnable, arguments);        }    }}])', 1), ('([4:/android/acceleration/cts/SoftwareAccelerationTest.java]:[scan]:[4]:method_text:[dwareAccelerated());        assertFalse(mManualSoftwareView.isCanvasHardwareAccelerated());    }}])', 1), ('([9:/android/bluetooth/cts/BluetoothScanReceiver.java]:[scan]:[9]:method_text:[ownLatch() {        sCountDownLatch = new CountDownLatch(1);        return sCountDownLatch;    }])', 1), ('([1:/com/android/cts/packageaccessapp/PackageAccessTest.java]:[scan]:[1]:method_text:[kageName)) {                fail(TINY_PKG + "" visible in user"");            }        }    }   ])', 1), ('([1:/com/android/cts/packageaccessapp/PackageAccessTest.java]:[scan]:[1]:method_text:[urn;            }        }        fail(TINY_PKG + "" not found in getInstalledPackages()"");    }])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[scan]:[1]:method_text:[e scan is triggered to make sure the AF     * converges in reasonable time.     * </p>     */   ])', 1), ('([6:/android/provider/cts/ProviderTestUtils.java]:[scan]:[6]:method_text:[umentation().getUiAutomation().                    dropShellPermissionIdentity();        }    }}])', 1), ('([8:/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java]:[scan]:[8]:method_text:[ to a network using peer to peer API.     * 3. Verify that both connections are active.     */   ])', 1), ('([35:/com/android/cts/verifier/bluetooth/BleScannerHardwareScanFilterActivity.java]:[scan]:[35]:method_text:[    text1.setText(key);            text2.setText(value);            return view;        }    }}])', 1), ('([3:/android/bluetooth/cts/HearingAidProfileTest.java]:[scan]:[3]:method_text:[ t) {        try {            Thread.sleep(t);        } catch (InterruptedException e) {}    }}])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java]:[scan]:[1]:method_text:[ waitForMotionEvents(IS_ACTION_CANCEL, 1);        assertEquals(1, mMotionEvents.size());    }   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java]:[scan]:[1]:method_text:[(mMotionEvents.size() - 1),                both(IS_ACTION_UP).and(isAtPoint(endPoint)));    }   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java]:[scan]:[1]:method_text:[             .addStroke(new StrokeDescription(path2, 0, duration))                .build();    }}])', 1), ('([3:/com/android/cts/verifier/audio/USBAudioPeripheralNotificationsTest.java]:[scan]:[3]:method_text:[onReceive(Context context, Intent intent) {            reportPlugIntent(intent);        }    }}])', 1), ('([1:/android/print/cts/PrintJobTest.java]:[scan]:[1]:method_text:[er, PRINTER_NAME);            sHasBeenSetUp = true;        }        resetCounters();    }   ])', 1), ('([1:/android/print/cts/PrintServicesTest.java]:[scan]:[1]:method_text:[that the icon get be updated.     *     * @throws Throwable If anything is unexpected.     */   ])', 1), ('([35:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[35]:method_text:[);        }        return -1;    }    /**     * Test creation of WifiManager Lock.     */   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[2]:method_text:[    /**     * Test wifi scanning when Wifi is off and location scanning is turned on.     */   ])', 1), ('([13:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[13]:method_text:[rify that privileged call fails.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([3:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[3]:method_text:[t.wifi.cts.WifiManagerTest --method testWifiScanTimestamp     */    @VirtualDeviceNotSupported   ])', 1), ('([19:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[19]:method_text:[          + numFreshAps;        assertTrue(msg, numFreshAps * 2 >= mScanResults.size());    }   ])', 1), ('([6:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[6]:method_text:[urn getContext().getPackageManager().hasSystemFeature(PackageManager.FEATURE_AUTOMOTIVE);    }   ])', 1), ('([11:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[11]:method_text:[een turns off while wifi is disabled     * but location is on.     * @throws Exception     */   ])', 1), ('([10:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[10]:method_text:[not turned off when the screen turns off while wifi is enabled.     * @throws Exception     */   ])', 1), ('([9:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[9]:method_text:[e platform supports a reasonable number of suggestions per app.     * @throws Exception     */   ])', 1), ('([3:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[3]:method_text:[fiManager#connect(int, WifiManager.ActionListener)} to an existing saved     * network.     */   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[2]:method_text:[er)} by adding/removing a new     * network.     */    @AsbSecurityTest(cveBugId = 159373687)   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[1]:method_text:[ /** Test that PNO scans reconnects us when the device is disconnected and the screen is off. */   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[2]:method_text:[     }    }    /**     * Tests {@link WifiManager#isTdlsSupported()} does not crash.     */   ])', 1), ('([4:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[4]:method_text:[r#setScanAlwaysAvailable(boolean)} &     * {@link WifiManager#isScanAlwaysAvailable()}.     */   ])', 1), ('([8:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[8]:method_text:[r#setScanThrottleEnabled(boolean)} &     * {@link WifiManager#isScanThrottleEnabled()}.     */   ])', 1), ('([6:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[6]:method_text:[nager#setAutoWakeupEnabled(boolean)} &     * {@link WifiManager#isAutoWakeupEnabled()}.     */   ])', 1), ('([3:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[3]:method_text:[ }    /**     * Test that the wifi country code is either null, or a length-2 string.     */   ])', 1), ('([8:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[8]:method_text:[ing it once it is added, and comparing it     * to the local copy of the configuration.     */   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[2]:method_text:[ Tests {@link WifiManager#setTdlsEnabledWithMacAddress(String, boolean)} does not crash.     */   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[2]:method_text:[ing == RANDOMIZATION_PERSISTENT.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([9:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[9]:method_text:[y());    }    /**     * Tests {@link WifiManager#getMatchingScanResults(List, List)}     */   ])', 1), ('([17:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[17]:method_text:[pty());    }    /**     * Tests {@link WifiManager#disableEphemeralNetwork(String)}.     */   ])', 1), ('([4:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[4]:method_text:[;        }    }    /**     * Tests {@link WifiManager#allowAutojoin(int, boolean)}.     */   ])', 1), ('([6:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[6]:method_text:[    }    /**     * Tests {@link WifiManager#allowAutojoinPasspoint(String, boolean)}.     */   ])', 1), ('([6:/android/net/wifi/cts/WifiManagerTest.java]:[scan]:[6]:method_text:[     }    }    /**     * Tests {@link WifiManager#isWapiSupported()} does not crash.     */   ])', 1), ('([2:/com/android/cts/verifier/bluetooth/HidDeviceActivity.java]:[scan]:[2]:method_text:[ATURE_TELEVISION)                  || pm.hasSystemFeature(PackageManager.FEATURE_LEANBACK);    }}])', 1), ('([1:/android/appsecurity/cts/AppDataIsolationTests.java]:[scan]:[1]:method_text:[un();        runDeviceTests(APPB_PKG, APPB_CLASS, APPB_METHOD_CAN_NOT_ACCESS_APPA_DIR);    }   ])', 1), ('([1:/android/appsecurity/cts/AppDataIsolationTests.java]:[scan]:[1]:method_text:[     runDeviceTests(APPB_PKG, APPB_CLASS, APPB_METHOD_CAN_NOT_ACCESS_APPA_EXTERNAL_DIRS);    }   ])', 1), ('([11:/android/media/cts/MediaScannerTest.java]:[scan]:[11]:method_text:[tContentUri(""external""),                ""_data like ?"", new String[] { mFileDir + ""%""});    }   ])', 1), ('([19:/android/media/cts/MediaScannerTest.java]:[scan]:[19]:method_text:[Title, c.getString(0));        mMediaScannerConnection.disconnect();        c.close();    }   ])', 1), ('([28:/android/media/cts/MediaScannerTest.java]:[scan]:[28]:method_text:[1b);        mMediaScannerConnection.disconnect();        checkConnectionState(false);    }   ])', 1), ('([18:/android/media/cts/MediaScannerTest.java]:[scan]:[18]:method_text:[ll);        mMediaScannerConnection.disconnect();        checkConnectionState(false);    }   ])', 1), ('([71:/android/media/cts/MediaScannerTest.java]:[scan]:[71]:method_text:[d_3.mp3"",                    new String[] {""谭咏麟"", ""二十年白金畅销金曲全记录"", null, ""知心当玩偶"", null})    };   ])', 1), ('([32:/android/media/cts/MediaScannerTest.java]:[scan]:[32]:method_text:[tic int getCurrentUser() {        return android.os.Process.myUserHandle().getIdentifier();    }}])', 1), ('([1:/android/net/wifi/cts/WifiInfoTest.java]:[scan]:[1]:method_text:[.expectedState == STATE_WIFI_CHANGING)                mMySync.wait(WAIT_MSEC);        }    }   ])', 1), ('([5:/android/net/wifi/cts/WifiInfoTest.java]:[scan]:[5]:method_text:[ that was set, and that     * calling build multiple times returns different instances.     */   ])', 1), ('([2:/android/provider/cts/media/MediaStore_DownloadsTest.java]:[scan]:[2]:method_text:[           pw.print(fileContents);        }        verifyScannedDownload(downloadFile);    }   ])', 1), ('([2:/android/provider/cts/media/MediaStore_DownloadsTest.java]:[scan]:[2]:method_text:[          FileUtils.copy(in, out);        }        verifyScannedDownload(downloadFile);    }   ])', 1), ('([3:/android/provider/cts/media/MediaStore_DownloadsTest.java]:[scan]:[3]:method_text:[ediaStore.Downloads._ID + ""="" + id, null, null);        assertEquals(1, cursor.getCount());    }}])', 1), ('([18:/util/build/BuildUtilBase.java]:[scan]:[18]:method_text:[ile: "" + e.getClass().getName() +                    "", msg:"" + e.getMessage());        }    }}])', 1), (""([1:/android/graphics/cts/BitmapTest.java]:[scan]:[1]:method_text:[han colors' length        Bitmap.createBitmap(colors, 10, 100, 50, 100, Config.RGB_565);    }   ])"", 1), ('([2:/android/graphics/cts/BitmapTest.java]:[scan]:[2]:method_text:[ase: lastScanline less than 0        mBitmap.setPixels(colors, 10, -50, 10, 10, 50, 50);    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[scan]:[2]:method_text:[gger than the length of colors        mBitmap.setPixels(colors, 10, 50, 10, 10, 50, 50);    }   ])', 1), ('([1:/android/permission/cts/SplitPermissionsSystemTest.java]:[scan]:[1]:method_text:[PERMISSION_SERVICE);        mSplitPermissions = permissionManager.getSplitPermissions();    }   ])', 1), ('([1:/android/permission/cts/SplitPermissionsSystemTest.java]:[scan]:[1]:method_text:[xactlyElementsIn(permission);        assertThat(split.getTargetSdk()).isEqualTo(targetSdk);    }}])', 1), ('([3:/android/host/multiuser/BaseMultiUserTest.java]:[scan]:[3]:method_text:[ supports);                    base.evaluate();                }            };        }    }}])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[scan]:[1]:method_text:[* Test that a single ""can\'t save state"" app has the proper process management semantics.     */   ])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[scan]:[1]:method_text:[ /**     * Test that switching between two ""can\'t save state"" apps is handled properly.     */   ])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[scan]:[1]:method_text:[ound service,     * app should go back to cached state.     *     * @throws Exception     */   ])', 1), ('([1:/android/media/cts/VideoDecoderPerfTest.java]:[scan]:[1]:method_text:[ = {        ""bbb_s1_320x240_mp4_h264_mp2_800kbps_30fps_aac_lc_5ch_240kbps_44100hz.mp4"",    };   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[scan]:[1]:method_text:[    * 2. set onDismissListener to null, it will not changed flag after dialog dismissed.     */   ])', 1), ('([3:/android/app/cts/DialogTest.java]:[scan]:[3]:method_text:[       isShowContextMenuCalled = true;            return super.showContextMenu();        }    }}])', 1), ('([6:/com/android/server/cts/ProtoDumpTestCase.java]:[scan]:[6]:method_text:[otAvailableException e) {            System.err.println(e);        }        return false;    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[scan]:[1]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/widget/cts/util/ListScenario.java]:[scan]:[1]:method_text:[int getViewTypeCount() {            return ListScenario.this.getViewTypeCount();        }    }}])', 1), ('([32:/android/permission/cts/appthatrequestpermission/AccessBluetoothOnCommand.java]:[scan]:[32]:method_text:[ring selection, String[] selectionArgs) {        throw new UnsupportedOperationException();    }}])', 1), ('([4:/com/android/server/cts/BatteryStatsValidationTest.java]:[scan]:[4]:method_text:[rows Exception {        getDevice().executeShellCommand(""dumpsys batterystats --reset"");    }   ])', 1), ('([8:/android/bluetooth/cts/TestUtils.java]:[scan]:[8]:method_text:[xception e) {            Log.e(TestUtils.class.getSimpleName(), ""interrupted"", e);        }    }])', 1), ('([14:/android/bluetooth/cts/ScanFilterTest.java]:[scan]:[14]:method_text:[000000L);            mFilterBuilder = new ScanFilter.Builder();        }    }    @SmallTest   ])', 1), ('([3:/android/bluetooth/cts/ScanFilterTest.java]:[scan]:[3]:method_text:[        assertFalse(""setName filter fails"", filter.matches(mScanResult));    }    @SmallTest   ])', 1), ('([3:/android/bluetooth/cts/ScanFilterTest.java]:[scan]:[3]:method_text:[;        assertFalse(""device filter fails"", filter.matches(mScanResult));    }    @SmallTest   ])', 1), ('([6:/android/bluetooth/cts/ScanFilterTest.java]:[scan]:[6]:method_text:[    assertFalse(""service data filter fails"", filter.matches(mScanResult));    }    @SmallTest   ])', 1), ('([6:/android/bluetooth/cts/ScanFilterTest.java]:[scan]:[6]:method_text:[(""partial setManufacturerData filter fails"", filter.matches(mScanResult));    }    @SmallTest   ])', 1), ('([1:/android/bluetooth/cts/ScanFilterTest.java]:[scan]:[1]:method_text:[nufacturerDataMask).build();        testReadWriteParcelForFilter(filter);    }    @SmallTest   ])', 1), ('([4:/android/bluetooth/cts/ScanFilterTest.java]:[scan]:[4]:method_text:[ScanFilter.CREATOR.createFromParcel(parcel);        assertEquals(filter, filterFromParcel);    }}])', 1), ('([3:/android/view/cts/input/InputDeviceMultiDeviceKeyEventTest.java]:[scan]:[3]:method_text:[Event.ACTION_UP, label, /* repeat */ 0);        assertReceivedKeyEvent(expectedUpEvent);    }   ])', 1), ('([1:/android/appsecurity/cts/ListeningPortsTest.java]:[scan]:[1]:method_text:[  * unauthorized access to computers systems without user knowledge or     * awareness.     */   ])', 1), ('([8:/android/appsecurity/cts/ListeningPortsTest.java]:[scan]:[8]:method_text:[);            }        }        contents.append(""\'"");        return contents.toString();    }}])', 1), ('([23:/android/jobscheduler/cts/TriggerContentTest.java]:[scan]:[23]:method_text:[ize(); i++) {            assertEquals(expectedPath.get(i), actualPath.get(i));        }    }   ])', 1), ('([2:/android/graphics/cts/ImageDecoderTest.java]:[scan]:[2]:method_text:[   assertTrue(saveByteCount < normalByteCount);                }            }        }    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[scan]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[scan]:[1]:method_text:[ble {        install(APK_BLUETOOTH_30);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[scan]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[scan]:[1]:method_text:[{        install(APK_BLUETOOTH_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([2:/android/permission/cts/NearbyDevicesPermissionTest.java]:[scan]:[2]:method_text:[ermission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([2:/android/permission/cts/NearbyDevicesPermissionTest.java]:[scan]:[2]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[scan]:[1]:method_text:[PK_BLUETOOTH_NEVER_FOR_LOCATION_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([2:/android/permission/cts/NearbyDevicesPermissionTest.java]:[scan]:[2]:method_text:[ission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([2:/android/permission/cts/NearbyDevicesPermissionTest.java]:[scan]:[2]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), (""([4:/android/permission/cts/NearbyDevicesPermissionTest.java]:[scan]:[4]:method_text:[uetooth     * scan results; they'd always need to involve the user to gain permissions.     */   ])"", 1), (""([6:/android/permission/cts/NearbyDevicesPermissionTest.java]:[scan]:[6]:method_text:[uetooth     * scan results; they'd always need to involve the user to gain permissions.     */   ])"", 1), ('([9:/android/permission/cts/NearbyDevicesPermissionTest.java]:[scan]:[9]:method_text:[               + "" com.android.bluetooth/.btservice.AdapterService set-test-mode disabled"");    }}])', 1), ('([1:/android/server/wm/AmProfileTests.java]:[scan]:[1]:method_text:[lFirstWord);        // Clean up.        executeShellCommand(""rm -f "" + OUTPUT_FILE_PATH);    }}])', 1), ('([39:/com/android/cts/verifier/bluetooth/BleClientService.java]:[scan]:[39]:method_text:[ait for next state                        break;                }            }        }    };}])', 1), ('([46:/com/android/cts/verifier/bluetooth/BleEncryptedClientService.java]:[scan]:[46]:method_text:[n"");        if (mScanner != null) {            mScanner.stopScan(mScanCallback);        }    }}])', 1), ('([6:/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java]:[scan]:[6]:method_text:[ectedWait,                atom -> atom.getBleScanStateChanged().getState().getNumber());    }   ])', 1), ('([11:/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java]:[scan]:[11]:method_text:[t(a1.getIsFirstMatch()).isFalse();        assertThat(a1.getIsOpportunistic()).isFalse();    }   ])', 1), ('([12:/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java]:[scan]:[12]:method_text:[at(a1.getIsFirstMatch()).isFalse();        assertThat(a1.getIsOpportunistic()).isTrue();    }   ])', 1), ('([6:/android/cts/statsdatom/bluetooth/BluetoothStatsTests.java]:[scan]:[6]:method_text:[).getAtom().getBleScanResultReceived();        assertThat(a0.getNumResults()).isAtLeast(1);    }}])', 1), ('([28:/com/android/cts/verifier/wifi/testcase/NetworkSuggestionTestCase.java]:[scan]:[28]:method_text:[        mWifiManager.removeNetworkSuggestions(new ArrayList<>());        super.tearDown();    }}])', 1), ('([1:/android/webkit/cts/WebViewSslTest.java]:[scan]:[1]:method_text:[ed"",                TestHtmlConstants.HELLO_WORLD_TITLE.equals(mOnUiThread.getTitle()));    }   ])', 1), ('([2:/android/provider/cts/media/MediaStoreTest.java]:[scan]:[2]:method_text:[             null, null, null);        assertEquals(1, c.getCount());        c.close();    }   ])', 1), ('([8:/android/hardware/camera2/cts/helpers/Camera2Focuser.java]:[scan]:[8]:method_text:[          }                mAutoFocus.onCaptureCompleted(result);            }        };    }}])', 1), ('([3:/com/android/cts/verifier/audio/AnalogHeadsetAudioActivity.java]:[scan]:[3]:method_text:[Unit.NONE);                break;        }        return super.onKeyDown(keyCode, event);    }}])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[scan]:[1]:method_text:[n state.    }    //TODO(b/180413140) Investigate why the test fails on DO mode.    @Override   ])', 1), ('([1:/android/app/role/cts/RoleManagerTest.java]:[scan]:[1]:method_text:[itForResult(true);        assertThat(result.first).isEqualTo(Activity.RESULT_CANCELED);    }   ])', 1), ('([1:/com/android/cts/apicoverage/TestModuleConfigHandler.java]:[scan]:[1]:method_text:[();    }    public FileMetadata getFileMetadata() {        return mFileMetadata.build();    }}])', 1), ('([2:/com/android/cts/verifier/bluetooth/BleInsecureServerScannerTestActivity.java]:[scan]:[2]:method_text:[ublic void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);    }}])', 1), ('([3:/android/cts/statsdatom/statsd/AtomTestCase.java]:[probe]:[3]:method_text:[estamp is not truncated"")                .that(timestampNs % fiveMinutesInNs).isEqualTo(0);    }}])', 1), ('([3:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[scan]:[3]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([15:/android/tests/getinfo/DeviceInfoInstrument.java]:[scan]:[15]:method_text:[tivityManager.getMemoryInfo(memoryInfo);        return String.valueOf(memoryInfo.totalMem);    }}])', 1), ('([2:/android/telephony/cts/TelephonyLocationTests.java]:[probe]:[2]:method_text:[tOperatorAlphaShort()));        assertTrue(TextUtils.isEmpty(state.getOperatorNumeric()));    }}])', 1), ('([6:/android/media/cts/Utils.java]:[scan]:[6]:method_text:[      mActiveConfigSize = configs.size();            mCountDownLatch.countDown();        }    }}])', 1), ('([3:/android/appsecurity/cts/PackageVisibilityTest.java]:[scan]:[3]:method_text:[    return ""1"".equals(getDevice().executeShellCommand(""getprop sys.boot_completed"").trim());    }}])', 1), ('([2:/android/scopedstorage/cts/host/LegacyStorageHostTest.java]:[scan]:[2]:method_text:[TERNAL_STORAGE"");        runDeviceTest(""testLegacySystemGalleryWithoutWESCannotRename"");    }   ])', 1), ('([2:/android/scopedstorage/cts/host/LegacyStorageHostTest.java]:[scan]:[2]:method_text:[ption {        runDeviceTest(""testLegacyWESCanRenameImagesAndVideosWithDbUpdates_hasW"");    }   ])', 1), ('([2:/android/scopedstorage/cts/host/LegacyStorageHostTest.java]:[scan]:[2]:method_text:[rows Exception {        runDeviceTest(""testScanUpdatesMetadataForNewlyAddedFile_hasRW"");    }   ])', 1), ('([1:/com/android/cts/usb/TestUsbTest.java]:[scan]:[1]:method_text:[nt [a-zA-Z0-9]{6,20}     */    @AppModeFull(reason = ""serial can not be read by instant apps"")   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[scan]:[1]:method_text:[cuteDeviceTestMethod("".PermissionsTest"", ""testSensorsRelatedPermissionsCannotBeGranted"");    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[scan]:[1]:method_text:[ executeDeviceTestMethod("".PermissionsTest"", ""testSensorsRelatedPermissionsCanBeDenied"");    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[scan]:[2]:method_text:[YSTEM, because     * network rules for this user will affect UID 0.     */    @RequiresDevice   ])', 1), ('([3:/android/security/cts/AdbUtils.java]:[scan]:[3]:method_text:[       assumeTrue(""nfc not available on device"", device.hasFeature(""android.hardware.nfc""));    }}])', 1), ('([15:/android/bluetooth/cts/ScanCallbackTest.java]:[scan]:[15]:method_text:[canner();    private BleScanCallback mMockScanCallback = new BleScanCallback();    @SmallTest   ])', 1), ('([8:/android/bluetooth/cts/ScanCallbackTest.java]:[scan]:[8]:method_text:[kScanner.startScan(new ScanSettings.Builder().build(), mMockScanCallback);    }    @SmallTest   ])', 1), ('([9:/android/bluetooth/cts/ScanCallbackTest.java]:[scan]:[9]:method_text:[N_TYPE_BATCH;        mMockScanner.startScan(settings, mMockScanCallback);    }    @SmallTest   ])', 1), ('([47:/android/bluetooth/cts/ScanCallbackTest.java]:[scan]:[47]:method_text:[ != SCAN_TYPE_FAIL) {                fail(""scan should not fail"");            }        }    }}])', 1), ('([40:/com/android/cts/verifier/bluetooth/BleAdvertiserService.java]:[scan]:[40]:method_text:[uccess(AdvertiseSettings setting) {            if (DEBUG) Log.d(TAG, ""success."");        }    }}])', 1), ('([1:/android/display/cts/BrightnessTest.java]:[scan]:[1]:method_text:[SPLAY_BRIGHTNESS);        revokePermission(Manifest.permission.BRIGHTNESS_SLIDER_USAGE);    }   ])', 1), ('([2:/android/display/cts/BrightnessTest.java]:[scan]:[2]:method_text:[ame + "" values must be "" + condition);            }            prev = values[i];        }    }}])', 1), ('([1:/android/cts/statsdatom/statsd/UidAtomTests.java]:[scan]:[1]:method_text:[atoms logged     * from an isolated process are seen as coming from their host process.     */   ])', 1), ('([10:/android/cts/statsdatom/statsd/UidAtomTests.java]:[scan]:[10]:method_text:[e_package_whitelist %s"",                        origWhitelist));            }        }    }   ])', 1), ('([3:/com/android/compatibility/dalvik/DalvikTestRunner.java]:[scan]:[3]:method_text:[esult) {            iterateTests(test, mIncludes, mExcludes, t -> t.run(result));        }    }}])', 1), ('([1:/android/devicepolicy/cts/DevicePolicyManagerTest.java]:[scan]:[1]:method_text:[kageName -> !systemApps.contains(packageName))                .collect(Collectors.toSet());    }}])', 1), ('([21:/android/net/wifi/cts/ScanResultTest.java]:[scan]:[21]:method_text:[          mMySync.wait(WAIT_MSEC);        return mMySync.expectedState == expectedState;    }   ])', 1), ('([20:/android/net/wifi/cts/ScanResultTest.java]:[scan]:[20]:method_text:[           break;                }            }        }   }    @VirtualDeviceNotSupported   ])', 1), ('([13:/android/net/wifi/cts/ScanResultTest.java]:[scan]:[13]:method_text:[           }        }    }    /** Test that the copy constructor copies fields correctly. */   ])', 1), ('([20:/android/net/wifi/cts/ScanResultTest.java]:[scan]:[20]:method_text:[lTo(TEST_FREQUENCY);        assertThat(scanResult2.timestamp).isEqualTo(TEST_TIMESTAMP);    }   ])', 1), ('([12:/android/net/wifi/cts/ScanResultTest.java]:[scan]:[12]:method_text:[sidQuoted);        assertThat(currentNetwork.frequency).isEqualTo(wifiInfo.getFrequency());    }}])', 1), ('([3:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[scan]:[3]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([1:/android/permission/cts/FileSystemPermissionTest.java]:[scan]:[1]:method_text:[ption {        Os.prctl(OsConstants.PR_SET_DUMPABLE, dumpable, 0, 0, 0);    }    @MediumTest   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[scan]:[2]:method_text:[h (IOException e) {                return false;            }        }    }    @MediumTest   ])', 1), ('([2:/com/android/cts/apicoverage/CtsApiCoverage.java]:[scan]:[2]:method_text:[                 break;            }        } finally {            out.close();        }    }}])', 1), ('([1:/android/content/cts/MockSyncAdapter.java]:[scan]:[1]:method_text:[) {            sSyncAdapter = new MockSyncAdapter();        }        return sSyncAdapter;    }}])', 1), ('([1:/android/alarmmanager/cts/UidCapTests.java]:[scan]:[1]:method_text:[  @After    public void deleteAlarmManagerConstants() {        mConfigHelper.restoreAll();    }}])', 1), ('([4:/com/android/cts/mediastorageapp/MediaStorageTest.java]:[probe]:[4]:method_text:[ntUris.parseId(jpgUri)));        assertTrue(seen.contains(ContentUris.parseId(pdfUri)));    }   ])', 1), ('([2:/com/android/cts/mediastorageapp/MediaStorageTest.java]:[scan]:[2]:method_text:[ntUris.parseId(jpgUri)));        assertTrue(seen.contains(ContentUris.parseId(pdfUri)));    }   ])', 1), ('([2:/com/android/cts/mediastorageapp/MediaStorageTest.java]:[scan]:[2]:method_text:[  TEST_PDF.delete();        assertNull(MediaStore.scanFile(mContentResolver, TEST_PDF));    }   ])', 1), ('([1:/com/android/cts/mediastorageapp/MediaStorageTest.java]:[scan]:[1]:method_text:[eFileAPISupport(File file) throws Exception {        assertThat(file.delete()).isTrue();    }   ])', 1), ('([4:/android/display/cts/VirtualDisplayTest.java]:[scan]:[4]:method_text:[           }            Log.d(TAG, ""- Reporting other."");            return -1;        }    }}])', 1), ('([3:/com/android/cts/verifier/audio/USBAudioPeripheralActivity.java]:[scan]:[3]:method_text:[          updateConnectStatus();        }    }    abstract public void updateConnectStatus();}])', 1), ('([1:/com/android/cts/verifier/bluetooth/BleInsecureClientTestListActivity.java]:[scan]:[1]:method_text:[tClass().getName(),                disabledTest.toArray(new String[disabledTest.size()])));    }}])', 1), ('([3:/android/net/wifi/nl80211/cts/NativeScanResultTest.java]:[scan]:[3]:method_text:[ tests if Wifi is not supported        assumeTrue(WifiFeature.isWifiSupported(context));    }   ])', 1), ('([2:/android/net/wifi/nl80211/cts/NativeScanResultTest.java]:[scan]:[2]:method_text:[Result result = new NativeScanResult();        assertThat(result.isAssociated()).isFalse();    }}])', 1), ('([1:/android/bluetooth/cts/BTAdapterUtils.java]:[scan]:[1]:method_text:[isabled = mAdapterStateDisablinglock.newCondition();        mAdapterVarsInitialized = true;    }])', 1), ('([25:/android/graphics/pdf/cts/PdfRendererTest.java]:[probe]:[25]:method_text:[    assertEquals(Color.BLACK, probes[14]);        assertEquals(Color.BLACK, probes[15]);    }   ])', 1), ('([1:/android/widget/cts/ExpandableListWithHeaders.java]:[scan]:[1]:method_text:[rs)     */    public int getNumOfHeadersAndFooters() {        return HEADER_FOOTER_COUNT;    }}])', 1), ('([1:/android/server/wm/WindowInsetsAnimationUtils.java]:[scan]:[1]:method_text:[              }            }        });        animator.start();        return animator;    }}])', 1), ('([2:/com/android/cts/writeexternalstorageapp/WriteGiftTest.java]:[probe]:[2]:method_text:[obe"").createNewFile();            assertTrue(new File(dir, ""probe"").exists());        }    }   ])', 1), ('([1:/com/android/cts/writeexternalstorageapp/WriteGiftTest.java]:[probe]:[1]:method_text:[aths(getContext())) {            assertFalse(new File(dir, ""probe"").exists());        }    }   ])', 1), ('([4:/android/net/wifi/rtt/cts/WifiRttTest.java]:[scan]:[4]:method_text:[  - Failure ratio < threshold (constant)     *   - Result margin < threshold (constant)     */   ])', 1), ('([4:/android/net/wifi/rtt/cts/WifiRttTest.java]:[scan]:[4]:method_text:[st contains more range operations than allowed (by API) that we     * get an exception.     */   ])', 1), ('([10:/android/net/wifi/rtt/cts/WifiRttTest.java]:[scan]:[10]:method_text:[oo ""                + ""many peers"");    }    /**     * Verify ResponderLocation API     */   ])', 1), ('([4:/android/net/wifi/rtt/cts/WifiRttTest.java]:[scan]:[4]:method_text:[   }    /**     * Verify ranging request with aware peer Mac address and peer handle.     */   ])', 1), ('([1:/android/net/wifi/rtt/cts/WifiRttTest.java]:[scan]:[1]:method_text:[  - Failure ratio < threshold (constant)     *   - Result margin < threshold (constant)     */   ])', 1), ('([4:/android/net/wifi/rtt/cts/WifiRttTest.java]:[scan]:[4]:method_text:[Number of successful measurements is 0"", 0, numSuccessful[i]);                }         */    }}])', 1), ('([4:/android/telecom/cts/BaseTelecomTestWithMockServices.java]:[scan]:[4]:method_text:[                return false;                }            }        }        return true;    }}])', 1), ('([1:/com/android/cts/monkey/MonkeyTest.java]:[scan]:[1]:method_text:[rivate static final String MONKEY = ""@(>.<)@"";    private static final String HUMAN = ""(^_^)"";   ])', 1), ('([2:/com/android/cts/monkey/MonkeyTest.java]:[scan]:[2]:method_text:[           assertTrue(monkeyLogsFound);        } finally {            s.close();        }    }}])', 1), ('([8:/android/net/wifi/cts/app/TriggerScanAndReturnStatusActivity.java]:[scan]:[8]:method_text:[setResult(RESULT_OK, new Intent().putExtra(SCAN_STATUS_EXTRA, succeeded));        finish();    }}])', 1), ('([2:/com/android/cts/verifier/audio/audiolib/TapLatencyAnalyser.java]:[scan]:[2]:method_text:[;            }            previous = output;            peakBuffer[i] = output;        }    }}])', 1), ('([8:/android/security/SELinuxTargetSdkTestBase.java]:[scan]:[8]:method_text:[e int checkNetlinkRouteBind();    private static final native String getFileContext(String path);}])', 1), ('([8:/android/media/cts/AudioTrackSurroundTest.java]:[scan]:[8]:method_text:[++) {            mainBuffer[i] = shortBuffer.get();        }        return mainBuffer;    }   ])', 1), ('([2:/com/android/cts/verifier/bluetooth/BluetoothTestActivity.java]:[scan]:[2]:method_text:[etName(),                disabledTestArray.toArray(new String[disabledTestArray.size()])));    }}])', 1), ('([2:/android/net/wifi/cts/CoexUnsafeChannelTest.java]:[scan]:[2]:method_text:[D_24_GHZ;    final static int TEST_CHANNEL = 6;    final static int TEST_POWER_CAP_DBM = -50;   ])', 1), ('([1:/com/android/cts/verifier/bluetooth/BleSecureClientTestListActivity.java]:[scan]:[1]:method_text:[tClass().getName(),                disabledTest.toArray(new String[disabledTest.size()])));    }}])', 1), ('([2:/android/content/cts/AvailableIntentsTest.java]:[scan]:[2]:method_text:[ assertCanBeHandled(new Intent(""android.settings.LOCATION_SCANNING_SETTINGS""));        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[scan]:[2]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([4:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[4]:method_text:[from its database.        assertThat(getFileRowIdFromDatabase(imageFile)).isEqualTo(-1);    }   ])', 1), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[1]:method_text:[list} uses opendir internally, and that it     * returns {@code null} if opendir fails.     */   ])', 1), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[1]:method_text:[        } finally {            oldFile.delete();            newFile.delete();        }    }   ])', 1), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[1]:method_text:[   }    /**     * Test that basic file path restrictions are enforced on file rename.     */   ])', 1), ('([3:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[3]:method_text:[after renaming file extension updates the right     * MIME type from the file metadata.     */   ])', 1), (""([4:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[4]:method_text:[}    /**     * Test that app without write permission for file can't update the file.     */   ])"", 1), ('([2:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[2]:method_text:[ file.delete();        }    }    /**     * Test that apps can rename a hidden file.     */   ])', 1), ('([2:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[2]:method_text:[/**     * Test that only file manager and app that created the hidden file can list it.     */   ])', 1), ('([3:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[3]:method_text:[     * Test that row ID corresponding to deleted path is restored on subsequent create.     */   ])', 1), ('([2:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[2]:method_text:[     * Test that row ID corresponding to deleted path is restored on subsequent rename.     */   ])', 1), ('([2:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[2]:method_text:[} finally {            imageFile.delete();            temporaryFile.delete();        }    }   ])', 1), (""([2:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[2]:method_text:[        }    }    /**     * Test that we don't allow renaming to top level directory     */   ])"", 1), ('([2:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[2]:method_text:[}    /**     * Test that readdir lists unsupported file types in default directories.     */   ])', 1), ('([4:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[4]:method_text:[   * Test that normal apps cannot access Android/data and Android/obb dirs of other apps     */   ])', 1), (""([2:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[2]:method_text:[}    /**     * b/171768780: Test that scan doesn't skip scanning renamed hidden file.     */   ])"", 1), ('([10:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[10]:method_text:[     } finally {            hiddenFile.delete();            jpgFile.delete();        }    }   ])', 1), ('([6:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[6]:method_text:[ified that "" + imageFilePath + "" was excluded in default query"");            }        }    }   ])', 1), ('([7:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[scan]:[7]:method_text:[""Deleting file "" + file);        deleteFileAs(APP_D_LEGACY_HAS_RW, file.getAbsolutePath());    }}])', 1), ('([1:/android/providerui/cts/MediaStoreUiTest.java]:[scan]:[1]:method_text:[                FileUtils.copy(source, target);            }        }        return file;    }}])', 1), ('([2:/android/mediaprovidertranscode/cts/TranscodeTestUtils.java]:[scan]:[2]:method_text:[DING);        } finally {            uiAutomation.dropShellPermissionIdentity();        }    }}])', 1), ('([2:/android/view/cts/KeyEventTest.java]:[scan]:[2]:method_text:[tEventTime());        assertEquals(mKeyEvent.getCharacters(), keyEvent.getCharacters());    }   ])', 1), ('([5:/android/view/cts/KeyEventTest.java]:[scan]:[5]:method_text:[ent.META_SHIFT_ON, 1, scanCode);        assertEquals(scanCode, mKeyEvent.getScanCode());    }   ])', 1), ('([1:/android/acceleration/AcceleratedView.java]:[scan]:[1]:method_text:[     } catch (InterruptedException e) {            throw new RuntimeException(e);        }    }}])', 1), ('([1:/android/security/cts/CVE_2021_0523.java]:[scan]:[1]:method_text:[;            assertThat(crashPattern, pattern.matcher(logcat).find(), is(false));        }    }}])', 1), ('([1:/android/server/wm/app/KeyguardDismissLoggerCallback.java]:[scan]:[1]:method_text:[tras(mContext, mOwnerName,                extras -> extras.putBoolean(callbackName, true));    }}])', 1), ('([4:/android/text/cts/TextShaperTest.java]:[scan]:[4]:method_text:[    }                });        assertThat(glyphsResult.sameAs(layoutResult)).isTrue();    }   ])', 1), ('([4:/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java]:[probe]:[4]:method_text:[           return;            }        }        fail(""Waited too long for wifi enabled"");    }}])', 1), ('([3:/android/media/tv/cts/TvContractTest.java]:[scan]:[3]:method_text:[enres.isCanonical(Genres.DRAMA));        assertFalse(Genres.isCanonical(""Not a genre""));    }   ])', 1), ('([1:/com/android/cts/verifier/bluetooth/BleSecureServerTestListActivity.java]:[scan]:[1]:method_text:[tClass().getName(),                disabledTest.toArray(new String[disabledTest.size()])));    }}])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[scan]:[1]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 1), ('([8:/android/tests/getinfo/GLESSurfaceView.java]:[scan]:[8]:method_text:[ight) {        }        @Override        public void onDrawFrame(GL10 gl) {        }    }}])', 1), ('([1:/android/systemui/cts/WindowInsetsBehaviorTests.java]:[scan]:[1]:method_text:[ze());        assertEquals(""Action down points."", swipeCount, mActionDownPoints.size());    }   ])', 1), ('([7:/android/server/wm/WindowInsetsAnimationControllerTests.java]:[scan]:[7]:method_text:[dyException(String message, Throwable cause) {            super(message, cause);        }    };}])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[scan]:[1]:method_text:[ Test compatibility requirements of {@link InputMethodService#sendDownUpKeyEvents(int)}.     */   ])', 1), ('([35:/com/android/cts/verifier/bluetooth/BleConnectionPriorityClientService.java]:[scan]:[35]:method_text:[        Intent intent = new Intent(ACTION_FINISH_DISCONNECT);        sendBroadcast(intent);    }}])', 1), ('([2:/android/leanbackjank/app/Utils.java]:[scan]:[2]:method_text:[   return Long.parseLong(mmr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION));    }}])', 1), ('([1:/android/systemui/cts/LightBarTests.java]:[scan]:[1]:method_text:[p, LIGHT_BG_COLOR, 0);            assertStats(bitmap, s, false /* light */);        });    }   ])', 1), ('([1:/com/android/cts/verifier/bluetooth/BleInsecureServerTestListActivity.java]:[scan]:[1]:method_text:[tClass().getName(),                disabledTest.toArray(new String[disabledTest.size()])));    }}])', 1)]"	""	""	"[('scan', 505), ('probe', 29)]"	"[('[com.android.cts.tagging.TaggingBaseTest isChangeEnabled CtsTaggingHostTestCases]', 2), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testWifiUsabilityStatsEntry CtsWifiTestCases]', 2), ('[com.android.cts.mediastorageapp.MediaStorageTest testLegacy None]', 2), ('[com.android.compatibility.testtype.DalvikTest isFile None]', 1), ('[android.dumpsys.cts.BatteryStatsDumpsysTest testBatterystatsOutput CtsDumpsysHostTestCases]', 1), ('[android.os.cts.AsyncTaskTest testCancelWithInterrupt None]', 1), ('[android.os.cts.AsyncTaskTest testCancel None]', 1), ('[android.os.cts.AsyncTaskTest testCancelTooLate None]', 1), ('[com.android.cts.readexternalstorageapp.ReadMultiViewTest testFolderSetup None]', 1), ('[com.android.cts.readexternalstorageapp.ReadMultiViewTest testRWAccess None]', 1), ('[com.android.cts.verifier.audio.MidiNativeTestActivity MidiNativeTestActivity None]', 1), ('[android.view.cts.LongPressBackActivity isCanceled CtsViewTestCases]', 1), ('[android.app.cts.NotificationManagerTest testAutogrouping_autogroupStaysUntilAllNotificationsCanceled CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testNewNotificationsAddedToAutogroup_ifOriginalNotificationsCanceled CtsAppTestCases]', 1), ('[android.bluetooth.cts.ScanRecordTest testParser CtsBluetoothTestCases]', 1), ('[android.scopedstorage.cts.device.BypassDatabaseOperationsTest testSystemGallery_targets30_WithBypassFlag_BypassesDatabase None]', 1), ('[android.hardware.input.cts.tests.NintendoSwitchProTest NintendoSwitchProTest CtsHardwareTestCases]', 1), ('[android.net.wifi.rtt.cts.TestBase isLocationEnabled CtsWifiTestCases]', 1), ('[android.provider.cts.media.MediaStorePendingTest testMutableColumns CtsProviderTestCases]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testSensorsRelatedPermissionsCannotBeGranted None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testSensorsRelatedPermissionsCanBeDenied None]', 1), ('[com.android.cts.deviceandprofileowner.PermissionsTest testStateOfSensorsRelatedPermissionsCannotBeRead None]', 1), ('[com.android.cts.monkey.SeedTest testSeed2 CtsMonkeyTestCases]', 1), ('[android.media.cts.ScannerNotificationReceiver listFiles CtsMediaTestCases]', 1), ('[com.android.cts.storagestatsapp.StorageStatsTest testVerifyStatsExternal None]', 1), ('[android.cts.backup.keyvaluerestoreapp.KeyValueBackupRestoreTest testSharedPreferencesRestore None]', 1), ('[android.cts.backup.keyvaluerestoreapp.KeyValueBackupRestoreTest exists None]', 1), ('[com.android.cts.managedprofile.WifiTest testCannotGetWifiMacAddress None]', 1), ('[android.media.cts.MediaRoute2ProviderServiceTest testOnDiscoveryPreferenceChanged CtsMediaTestCases]', 1), ('[com.android.cts.verifier.bluetooth.ConnectionAccessServerActivity setPassFailButtonClickListeners None]', 1), ('[android.media.cts.MediaScannerConnectionTest currentTimeMillis CtsMediaTestCases]', 1), ('[android.media.cts.MediaScannerConnectionTest testMediaScannerConnection CtsMediaTestCases]', 1), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName CtsPermissionTestCases]', 1), ('[android.display.cts.DisplayTest finish CtsDisplayTestCases]', 1), ('[android.appsecurity.cts.UseProcessTest testInstallUsePackageFailApplication_instant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.UseProcessTest testInstallUsePackageFailActivity_instant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.UseProcessTest testInstallUsePackageFailService_instant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.UseProcessTest testInstallUsePackageFailReceiver_instant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.UseProcessTest testInstallUsePackageFailProvider_instant CtsAppSecurityHostTestCases]', 1), ('[android.cts.statsdatom.wifi.WifiStatsTests testWifiScanLogsScanAtoms CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.wifi.WifiStatsTests testWifiScanLogsStateChangedAtoms CtsStatsdAtomHostTestCases]', 1), ('[android.provider.cts.media.MediaStoreTrashedTest testOwned CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStoreTrashedTest testUnowned CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStoreTrashedTest testAtypical CtsProviderTestCases]', 1), ('[android.print.cts.InterfaceForAppsTest createFirstMockPrinterDiscoverySessionCallbacks CtsPrintTestCases]', 1), ('[android.print.cts.InterfaceForAppsTest isCancelled CtsPrintTestCases]', 1), ('[android.print.cts.InterfaceForAppsTest isFailed CtsPrintTestCases]', 1), ('[android.net.wifi.cts.app.RetrieveScanResultsAndReturnStatusActivity isEmpty None]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest currentTimeMillis CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadVulkan CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugLayerLoadGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testReleaseLayerLoadGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNotEnabledGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugWrongAppGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testDebugNoLayersEnabledGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyEnableGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testSystemPropertyIgnoreGLES CtsGpuToolsHostTestCases]', 1), ('[android.gputools.cts.CtsRootlessGpuDebugHostTest testMultipleExternalApps CtsGpuToolsHostTestCases]', 1), ('[com.android.cts.verifier.bluetooth.DevicePickerActivity PairedDeviceClickListener None]', 1), ('[android.media.cts.MediaScannerNotificationTest testMediaScannerNotification CtsMediaTestCases]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testDvbsFrontendSettings CtsTvTestCases]', 1), ('[android.media.cts.RouteDiscoveryPreferenceTest testGetters CtsMediaTestCases]', 1), ('[android.media.cts.RouteDiscoveryPreferenceTest testBuilderSetPreferredFeatures CtsMediaTestCases]', 1), ('[android.media.cts.RouteDiscoveryPreferenceTest testBuilderSetActiveScan CtsMediaTestCases]', 1), ('[android.media.cts.RouteDiscoveryPreferenceTest testEqualsCreatedWithSameArguments CtsMediaTestCases]', 1), ('[android.media.cts.RouteDiscoveryPreferenceTest testEqualsCreatedWithBuilderCopyConstructor CtsMediaTestCases]', 1), ('[android.media.cts.RouteDiscoveryPreferenceTest testEqualsReturnFalse CtsMediaTestCases]', 1), ('[android.media.cts.RouteDiscoveryPreferenceTest testEqualsReturnFalseWithCopyConstructor CtsMediaTestCases]', 1), ('[android.media.cts.RouteDiscoveryPreferenceTest testParcelingAndUnParceling CtsMediaTestCases]', 1), ('[android.net.wifi.cts.app.RetrieveConnectionInfoAndReturnStatusActivity finish None]', 1), ('[com.android.cts.verifier.bluetooth.BleAdvertiserHardwareScanFilterActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.bluetooth.BleScannerPowerLevelActivity setPassFailButtonClickListeners None]', 1), ('[android.media.cts.DecoderTest testMPEG2ColorAspectsTV CtsMediaTestCases]', 1), ('[android.permission.cts.NearbyDevicesRenouncePermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesRenouncePermissionTest enableTestMode CtsPermissionTestCases]', 1), ('[android.app.cts.DownloadManagerTest testDownload_mediaScanned CtsAppTestCases]', 1), ('[android.app.cts.DownloadManagerTest testDownload_onMediaStoreDownloadsDeleted CtsAppTestCases]', 1), ('[android.mediadrm.cts.Utils isEmpty CtsMediaDrmTestCases]', 1), ('[android.abioverride.cts.AbiOverrideTest testAbiIs32bit CtsAbiOverrideHostTestCases]', 1), ('[android.appsecurity.cts.listeningports.ListeningPortsTest testNoAccessibleListeningPorts None]', 1), ('[android.net.wifi.cts.WifiBackupRestoreTest isNotNull CtsWifiTestCases]', 1), ('[android.provider.cts.media.MediaStore_Images_MediaTest testUpdateAndReplace CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStore_Images_MediaTest testUpsert CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStore_Images_MediaTest testCanonicalize CtsProviderTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.webkit.cts.TestWebServer TestHostnameVerifier None]', 1), ('[com.android.compatibility.common.deviceinfo.GlesStubActivity waitForActivityToFinish None]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testBleScanOpportunistic None]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testBleScanUnoptimized None]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testBleScanResult None]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testBleScanInterrupted None]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testGpsScan None]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testWifiScan None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest isTrue None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testCantAccessExternalStorage None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testReadOnlyExternalStorage_hasR None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testListFiles_hasR None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testInsertHiddenFile None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testCantRename_hasR None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testCantRename_noStoragePermission None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testRenameDoesntInvalidateUri_hasRW None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testCanRenameAFileWithNoDBRow_hasRW None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testInsertWithUnsupportedMimeType None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testLegacySystemGalleryWithoutWESCannotRename None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testLegacyWESCanRenameImagesAndVideosWithDbUpdates_hasW None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testScanUpdatesMetadataForNewlyAddedFile_hasRW None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testOisDataMode CtsCameraTestCases]', 1), ('[com.android.cts.writeexternalstorageapp.WriteExternalStorageTest assertExternalStorageMounted None]', 1), ('[com.android.cts.writeexternalstorageapp.WriteExternalStorageTest testWriteExternalStorageDirs None]', 1), ('[com.android.cts.writeexternalstorageapp.WriteExternalStorageTest testSecondaryMountPoints None]', 1), ('[com.android.cts.writeexternalstorageapp.WriteExternalStorageTest testWriteExternalStorage None]', 1), ('[com.android.cts.writeexternalstorageapp.WriteExternalStorageTest testVerifyNoMediaCreated None]', 1), ('[android.security.cts.CVE_2020_0018 testPocCVE_2020_0018 CtsSecurityBulletinHostTestCases]', 1), ('[android.appwidget.cts.AppWidgetTest testInstantAppsCannotProvideAppWidgets CtsAppWidgetTestCases]', 1), ('[android.appwidget.cts.AppWidgetTest testInstantAppsCannotHostAppWidgets CtsAppWidgetTestCases]', 1), ('[android.carrierapi.cts.NetworkScanApiTest werePreconditionsSatisfied CtsCarrierApiTestCases]', 1), ('[android.carrierapi.cts.NetworkScanApiTest testRequestNetworkScan CtsCarrierApiTestCases]', 1), ('[android.carrierapi.cts.NetworkScanApiTest testRequestNetworkScanLocationOffPass CtsCarrierApiTestCases]', 1), ('[android.carrierapi.cts.NetworkScanApiTest testRequestNetworkScanLocationOffFail CtsCarrierApiTestCases]', 1), ('[android.carrierapi.cts.NetworkScanApiTest testNetworkScanPermission CtsCarrierApiTestCases]', 1), ('[android.carrierapi.cts.NetworkScanApiTest testNetworkScanRequest_constructorAndGetters CtsCarrierApiTestCases]', 1), ('[android.carrierapi.cts.NetworkScanApiTest testNetworkScanRequestParcel_hashCode CtsCarrierApiTestCases]', 1), ('[android.carrierapi.cts.NetworkScanApiTest testNetworkScanRequestParcel_equals CtsCarrierApiTestCases]', 1), ('[android.carrierapi.cts.NetworkScanApiTest testNetworkScanRequestParcel_parcel CtsCarrierApiTestCases]', 1), ('[android.content.cts.ContentProviderClientTest isCanceled CtsContentTestCases]', 1), ('[android.net.wifi.nl80211.cts.WifiNl80211ManagerTest testOemSecurityTypeConstructor CtsWifiTestCases]', 1), ('[com.android.cts.tagging.TaggingSdk30Test testMemoryTagChecksCompatFeatureDisabled CtsTaggingHostTestCases]', 1), ('[com.android.cts.tagging.TaggingSdk30Test testMemoryTagChecksCompatFeatureEnabledNonMTE CtsTaggingHostTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testSessionParametersStateLeak CtsCameraTestCases]', 1), ('[android.view.cts.VerifyInputEventTest testDeviceIdBecomesVirtualForInjectedKeys CtsViewTestCases]', 1), ('[android.view.cts.VerifyInputEventTest testDeviceIdBecomesVirtualForInjectedMotions CtsViewTestCases]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis CtsSustainedPerformanceHostTestCases]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest testShader CtsSustainedPerformanceHostTestCases]', 1), ('[android.scopedstorage.cts.host.ScopedStorageInstantAppHostTest testInstantAppsCantAccessExternalStorage None]', 1), ('[com.android.cts.verifier.sensors.helpers.OpenCVLibrary isLoaded None]', 1), ('[android.net.wifi.cts.WifiNetworkSpecifierTest isNotNull CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSpecifierTest testWifiBandInNetworkCallback CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSpecifierTest testRedact CtsWifiTestCases]', 1), ('[android.bluetooth.cts.ScanSettingsTest testDefaultSettings CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.ScanSettingsTest testDescribeContents CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.ScanSettingsTest testReadWriteParcel CtsBluetoothTestCases]', 1), ('[android.provider.cts.media.MediaStore_FilesTest testInPlaceUpdate_mediaFileWithInvalidRelativePath CtsProviderTestCases]', 1), ('[com.android.cts.verifier.wifi.testcase.NetworkRequestTestCase isEmpty None]', 1), ('[com.android.cts.externalstorageapp.CommonExternalStorageTest testAllPackageDirsWritable None]', 1), ('[com.android.cts.tv.TvInputManagerHostTest testInputUpdated None]', 1), ('[com.android.cts.tagging.TaggingManifestDisabledTest testHeapTaggingCompatFeatureDefault CtsTaggingHostTestCases]', 1), ('[com.android.cts.tagging.TaggingManifestDisabledTest testHeapTaggingCompatFeatureEnabled CtsTaggingHostTestCases]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testSecondaryUsersInaccessible CtsAppSecurityHostTestCases]', 1), ('[android.harmfulappwarning.cts.HarmfulAppWarningTest isEmpty CtsHarmfulAppWarningHostTestCases]', 1), ('[android.mediapc.cts.MultiCodecPerfTestBase isSPerfClass CtsMediaPerformanceClassTestCases]', 1), ('[com.android.cts.verifier.projection.offscreen.ProjectionOffscreenActivity setPassFailButtonClickListeners None]', 1), ('[android.bluetooth.cts.BluetoothLeScanTest isEnabled CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.BluetoothLeScanTest testBasicBleScan CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.BluetoothLeScanTest testScanFilter CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.BluetoothLeScanTest testOpportunisticScan CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.BluetoothLeScanTest testBatchScan CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.BluetoothLeScanTest testStartScanPendingIntent_nullnull CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.BluetoothLeScanTest testStartScanPendingIntent CtsBluetoothTestCases]', 1), ('[com.android.cts.storageapp.StorageTest testBehaviorTombstone None]', 1), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedWrite None]', 1), ('[com.android.cts.verifier.audio.MidiJavaTestActivity MidiJavaTestActivity None]', 1), ('[android.media.cts.MediaSessionTestActivity isKeyguardLocked CtsMediaTestCases]', 1), ('[android.graphics.text.cts.TextRunShaperTest resultTest_IllegalArgument_Y CtsGraphicsTestCases]', 1), ('[android.content.cts.ContentResolverSyncTestCase isDone CtsContentTestCases]', 1), ('[android.content.cts.ContentResolverSyncTestCase testRequestSync CtsContentTestCases]', 1), ('[android.content.cts.ContentResolverSyncTestCase testCancelSync CtsContentTestCases]', 1), ('[android.content.cts.ContentResolverSyncTestCase testCallMultipleAccounts CtsContentTestCases]', 1), ('[android.print.cts.PrintJobStateTransitionsTest createFirstMockPrinterDiscoverySessionCallbacks CtsPrintTestCases]', 1), ('[android.trustedvoice.cts.TrustedVoiceHostTest testUnlock CtsTrustedVoiceHostTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled CtsWifiTestCases]', 1), ('[android.permission.cts.SharedUidPermissionsTest runtimePermissionsCanBeRevokedOnPackageThatDoesNotDeclarePermission CtsPermissionTestCases]', 1), ('[android.permission.cts.SharedUidPermissionsTest runtimePermissionsCanBeGrantedOnPackageThatDoesNotDeclarePermission CtsPermissionTestCases]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testApexTargetingOldDevSdkFailsVerification None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testApexFailsToInstallIfApkInApexFailsToScan_Commit None]', 1), ('[com.android.tests.stagedinstall.StagedInstallTest testApexFailsToInstallIfApkInApexFailsToScan_VerifyPostReboot None]', 1), ('[com.android.compatibility.common.util.CtsKeyEventUtil uptimeMillis None]', 1), ('[com.android.server.cts.device.batterystats.BatteryStatsBgVsFgActions getDefaultDisplay None]', 1), ('[android.os.cts.ProcfsHostTests startTestApp CtsOsHostTestCases]', 1), ('[android.os.cts.ProcfsHostTests testProcTidStat CtsOsHostTestCases]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testAccess_file None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testManageExternalStorageReaddir None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testManageExternalStorageDoesntSkipScanningDirtyNomediaDir None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testScanDoesntSkipDirtySubtree None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testUpdateExternalFilesViaRelativePath None]', 1), ('[android.scopedstorage.cts.ScopedStorageTest testInstantAppsCantAccessExternalStorage None]', 1), ('[android.scopedstorage.cts.device.RedactUriDeviceTest testRedactedUri_single None]', 1), ('[android.scopedstorage.cts.device.RedactUriDeviceTest testRedactedUri_list None]', 1), ('[android.scopedstorage.cts.device.RedactUriDeviceTest testQueryOnRedactionUri None]', 1), ('[android.scopedstorage.cts.device.RedactUriDeviceTest testOpenOnRedactedUri_read None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testApexTargetingOldDevSdkFailsVerification None]', 1), ('[com.android.tests.stagedinstall.host.StagedInstallTest testApexFailsToInstallIfApkInApexFailsToScan None]', 1), ('[android.net.wifi.nl80211.cts.DeviceWiphyCapabilitiesTest isTrue CtsWifiTestCases]', 1), ('[android.net.wifi.nl80211.cts.DeviceWiphyCapabilitiesTest testMappingWifiStandardIntoChannelWidthSupport CtsWifiTestCases]', 1), ('[com.android.cts.cpptools.RunasPermissionsTest testRunasCanConnectToAppsSocket CtsCppToolsTestCases]', 1), ('[android.bluetooth.cts.ScanResultTest testScanResultParceling CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.ScanResultTest testDescribeContents CtsBluetoothTestCases]', 1), ('[android.provider.cts.media.MediaStore_Video_MediaTest testCanonicalize CtsProviderTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigNoMissingPages CtsContentTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest isNotNull CtsWifiTestCases]', 1), ('[android.widget.cts.ListViewTest testAccessItemsCanFocus CtsWidgetTestCases]', 1), ('[android.net.wifi.cts.WifiMigrationTest testWifiMigrationSettingsDataBuilder CtsWifiTestCases]', 1), ('[com.android.cts.releaseparser.TestModuleConfigHandler getTestClassName None]', 1), ('[android.security.NetworkSecurityPolicyTestBase testDownloadManager None]', 1), ('[android.view.cts.input.InputDeviceKeyLayoutMapTest createDeviceRegisterCommand CtsViewTestCases]', 1), ('[android.location.cts.fine.ScanningSettingsTest isTV CtsLocationFineTestCases]', 1), ('[android.location.cts.fine.ScanningSettingsTest testWifiScanningSettings CtsLocationFineTestCases]', 1), ('[android.location.cts.fine.ScanningSettingsTest testBleScanningSettings CtsLocationFineTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest isStaConcurrencyForRestrictedConnectionsSupported CtsWifiTestCases]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testNotUserSelectableAliasCanBeChosenViaPolicy None]', 1), ('[android.media.tv.tuner.cts.TunerTest adoptShellPermissionIdentity CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerTest testScanning CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerTest testShareFrontendFromTuner CtsTvTestCases]', 1), ('[com.android.compatibility.common.util.ShellIdentityUtils adoptShellPermissionIdentity None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest denyListedChangesCanScheduleExactAlarms CtsAlarmManagerTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testIgnored CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testRelated CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDirectory_InsideSandbox CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testRelated_InvalidPath CtsProviderTestCases]', 1), ('[android.permission.cts.NoWifiStatePermissionTest testGetConnectionInfo CtsPermissionTestCases]', 1), ('[android.permission.cts.NoWifiStatePermissionTest testGetScanResults CtsPermissionTestCases]', 1), ('[android.permission.cts.NoWifiStatePermissionTest testPingSupplicant CtsPermissionTestCases]', 1), ('[android.permission.cts.NoWifiStatePermissionTest testStartScan CtsPermissionTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test ArrayList CtsMediaTestCases]', 1), ('[com.android.cts.launcherapps.simpleapp.SimpleActivityStartService KeyguardDismissCallback None]', 1), ('[com.android.cts.verifier.bluetooth.BleCocClientService isEnabled None]', 1), ('[com.android.cts.verifier.bluetooth.BleAdvertiserTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.compatibility.common.deviceinfo.StorageDeviceInfo isExternalStorageEmulated None]', 1), ('[android.text.method.cts.PasswordTransformationMethodTest isFocused CtsTextTestCases]', 1), ('[com.android.cts.verifier.nfc.TagVerifierActivity setPassFailButtonClickListeners None]', 1), ('[android.security.cts.MotionEventTest testActionOutsideDoesNotContainedObscuredInformation CtsSecurityTestCases]', 1), ('[android.acceleration.cts.HardwareAccelerationTest testIsHardwareAccelerated CtsAccelerationTestCases]', 1), ('[android.acceleration.cts.WindowFlagHardwareAccelerationTest testIsHardwareAccelerated CtsAccelerationTestCases]', 1), ('[com.android.cts.verifier.bluetooth.MessageTestActivity setPassFailButtonClickListeners None]', 1), ('[android.net.wifi.cts.SupplicantStateTest testIsValidState CtsWifiTestCases]', 1), ('[com.android.cts.verifier.audio.MidiTestActivityBase MidiTestActivityBase None]', 1), ('[com.android.cts.verifier.managedprovisioning.LocationCheckerActivity hasLocationPermission None]', 1), ('[android.os.cts.BuildTest testCpuAbi_valuesMatchPermitted None]', 1), ('[android.edi.cts.PropertyDeviceInfo isEmpty CtsEdiHostTestCases]', 1), ('[android.telecom.cts.CallTest testCapabilitiesCan CtsTelecomTestCases]', 1), ('[android.server.wm.DragDropTest testSoftwareCanvas CtsWindowManagerDeviceTestCases]', 1), ('[android.security.cts.CVE_2021_0523.PocService getDisplayMetrics None]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest isNotNull CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testScanTriggerNotAllowedForForegroundActivityWithNoLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testScanTriggerAllowedForForegroundActivityWithFineLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testScanTriggerAllowedForBackgroundServiceWithBackgroundLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testScanTriggerNotAllowedForBackgroundServiceWithFineLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testScanResultsRetrievalNotAllowedForForegroundActivityWithNoLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testScanResultsRetrievalAllowedForForegroundActivityWithFineLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testScanResultsRetrievalAllowedForBackgroundServiceWithBackgroundLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testScanResultsRetrievalNotAllowedForBackgroundServiceWithFineLocationPermission CtsWifiTestCases]', 1), ('[android.wifibroadcasts.cts.WifiBroadcastsHostJUnit4Test testCleanLogcat CtsWifiBroadcastsHostTestCases]', 1), ('[android.provider.cts.media.MediaStore_Audio_MediaTest testCanonicalize CtsProviderTestCases]', 1), ('[android.video.cts.VideoEncoderDecoderTest initPerfTest CtsVideoTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardActivity_method_cancelled CtsWindowManagerDeviceTestCases]', 1), ('[android.media.tv.cts.TvInputServiceTest xPrecision CtsTvTestCases]', 1), ('[com.android.cts.verifier.audio.AudioFrequencyActivity testMaxLevel None]', 1), ('[android.autofillservice.cts.dropdown.AuthenticationTest testFillResponseAuthBothFields CtsAutoFillServiceTestCases]', 1), ('[android.tests.getinfo.RootProcessScanner exists None]', 1), ('[android.sample.cts.SampleHostJUnit4Test TestMetrics CtsSampleHostTestCases]', 1), ('[android.sample.cts.SampleHostJUnit4Test testLogcat CtsSampleHostTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleScannerTestActivity setPassFailButtonClickListeners None]', 1), ('[android.net.wifi.cts.TestHelper isEmpty CtsWifiTestCases]', 1), ('[android.security.cts.PackageSignatureTest testPackageSignatures CtsSecurityTestCases]', 1), ('[android.accessibilityservice.cts.utils.ActivityLaunchUtils adoptShellPermissionIdentity CtsAccessibilityServiceTestCases]', 1), ('[com.android.cts.mockime.MockIme shouldDispatchToMainThread None]', 1), ('[android.acceleration.cts.SoftwareAccelerationTest testIsHardwareAccelerated CtsAccelerationTestCases]', 1), ('[com.android.cts.packageaccessapp.PackageAccessTest testPackageAccess_getPackagesCantSeeTiny None]', 1), ('[com.android.cts.packageaccessapp.PackageAccessTest testPackageAccess_getPackagesCanSeeTiny None]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFullRawZSLCapture CtsCameraTestCases]', 1), ('[android.provider.cts.ProviderTestUtils exists CtsProviderTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyWifiNetworkSpecifierTest isStaConcurrencyForLocalOnlyConnectionsSupported CtsWifiTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleScannerHardwareScanFilterActivity setPassFailButtonClickListeners None]', 1), ('[android.bluetooth.cts.HearingAidProfileTest test_getConnectionStateChangedIntent CtsBluetoothTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testContinuedGesture_withLineDisconnect_isCancelled CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testContinuedGesture_nextGestureDoesntContinue_isCancelled CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testContinuingGesture_withNothingToContinue_isCancelled CtsAccessibilityServiceTestCases]', 1), ('[com.android.cts.verifier.audio.USBAudioPeripheralNotificationsTest ConnectListener None]', 1), ('[android.print.cts.PrintJobTest createFirstMockPrinterDiscoverySessionCallbacks CtsPrintTestCases]', 1), ('[android.print.cts.PrintServicesTest waitForPrinterDiscoverySessionCreateCallbackCalled CtsPrintTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest ProvisioningCallback CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testWifiManagerLock CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testWifiManagerScanWhenWifiOffLocationTurnedOn CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testWifiManagerProperties CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testWifiScanTimestamp CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testConvertBetweenChannelFrequencyMhz CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testUpdateWifiUsabilityStatsScorePermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testScreenOffDoesNotTurnOffWifiScanningWhenWifiDisabled CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testScreenOffDoesNotTurnOffWifiScanningWhenWifiEnabled CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testStartTetheredHotspotWithChannelConfigAndSoftApStateAndInfoCallback CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testSave CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testIsPreferredNetworkOffloadSupported CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testPnoScan CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testTrafficStateCallback CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testScanAlwaysAvailable CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testScanThrottleEnabled CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testStartAndStopRestrictingAutoJoinToSubscriptionId CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testIsWifiStandardsSupported CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testSetTdlsEnabled CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testSetTdlsEnabledWithMacAddress CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testGetAllWifiConfigForMatchedNetworkSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testGetMatchingScanResults CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testDisableEphemeralNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testAllowAutojoin CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testAllowAutojoinGlobal CtsWifiTestCases]', 1), ('[com.android.cts.verifier.bluetooth.HidDeviceActivity ServiceListener None]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testNormalProcessCannotAccessOtherAppDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testNormalProcessCannotAccessOtherAppExternalDataDir CtsAppSecurityHostTestCases]', 1), ('[android.media.cts.MediaScannerTest currentTimeMillis CtsMediaTestCases]', 1), ('[android.media.cts.MediaScannerTest testLocalizeRingtoneTitles CtsMediaTestCases]', 1), ('[android.media.cts.MediaScannerTest testMediaScanner CtsMediaTestCases]', 1), ('[android.media.cts.MediaScannerTest testWildcardPaths CtsMediaTestCases]', 1), ('[android.media.cts.MediaScannerTest testCanonicalize CtsMediaTestCases]', 1), ('[android.media.cts.MediaScannerTest testEncodingDetection CtsMediaTestCases]', 1), ('[android.net.wifi.cts.WifiInfoTest isNotNull CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiInfoTest testWifiInfoProperties CtsWifiTestCases]', 1), ('[android.provider.cts.media.MediaStore_DownloadsTest testScannedDownload CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStore_DownloadsTest testScannedMediaDownload CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStore_DownloadsTest testThumbnails CtsProviderTestCases]', 1), ('[util.build.BuildUtilBase exists None]', 1), ('[android.graphics.cts.BitmapTest testCreateBitmapFromColorsScalnlineTooLarge CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapTest testSetPixelsLastScanlineNegative CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapTest testSetPixelsLastScanlineTooBig CtsGraphicsTestCases]', 1), ('[android.permission.cts.SplitPermissionsSystemTest getSplitPermissions CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionsSystemTest getSplitPermission CtsPermissionTestCases]', 1), ('[android.host.multiuser.BaseMultiUserTest TestName CtsMultiUserHostTestCases]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testBgRestrictedForegroundService CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testCantSaveStateLaunchAndBackground CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testCantSaveStateLaunchAndSwitch CtsAppTestCases]', 1), ('[android.media.cts.VideoDecoderPerfTest currentTimeMillis CtsMediaTestCases]', 1), ('[android.app.cts.DialogTest testSetCancelMessage CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetDismissMessage CtsAppTestCases]', 1), ('[com.android.server.cts.ProtoDumpTestCase CollectingTestListener CtsIncidentHostTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes CtsCameraTestCases]', 1), ('[android.widget.cts.util.ListScenario getListView CtsWidgetTestCases]', 1), ('[android.bluetooth.cts.ScanFilterTest testsetNameFilter CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.ScanFilterTest testDeviceAddressFilter CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.ScanFilterTest testsetServiceUuidFilter CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.ScanFilterTest testsetServiceSolicitationUuidFilter CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.ScanFilterTest testsetServiceDataFilter CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.ScanFilterTest testManufacturerSpecificData CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.ScanFilterTest testReadWriteParcel CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.ScanFilterTest testDescribeContents CtsBluetoothTestCases]', 1), ('[android.view.cts.input.InputDeviceMultiDeviceKeyEventTest assertNoKeyEvent CtsViewTestCases]', 1), ('[android.appsecurity.cts.ListeningPortsTest installDeviceTestPkg CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ListeningPortsTest testNoListeningLoopbackUdp6Ports CtsAppSecurityHostTestCases]', 1), ('[android.jobscheduler.cts.TriggerContentTest exists CtsJobSchedulerTestCases]', 1), ('[android.graphics.cts.ImageDecoderTest testConserveMemory CtsGraphicsTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_OnBehalfOfDisavowingApp CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Upgrade CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Downgrade CtsPermissionTestCases]', 1), ('[android.server.wm.AmProfileTests testAmStartStartProfilerSamplingStreaming CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleClientService disconnect None]', 1), ('[com.android.cts.verifier.bluetooth.BleEncryptedClientService disconnect None]', 1), ('[android.cts.statsdatom.bluetooth.BluetoothStatsTests testBleScan CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.bluetooth.BluetoothStatsTests testBleUnoptimizedScan CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.bluetooth.BluetoothStatsTests testBleOpportunisticScan CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.bluetooth.BluetoothStatsTests testBleScanResult CtsStatsdAtomHostTestCases]', 1), ('[com.android.cts.verifier.wifi.testcase.NetworkSuggestionTestCase isEmpty None]', 1), ('[android.webkit.cts.WebViewSslTest testSecureServerRequiringClientCertDoesCancelRequest CtsWebkitTestCases]', 1), ('[android.provider.cts.media.MediaStoreTest testGetMediaScannerUri CtsProviderTestCases]', 1), ('[android.hardware.camera2.cts.helpers.Camera2Focuser createCaptureListener None]', 1), ('[com.android.cts.verifier.audio.AnalogHeadsetAudioActivity ConnectListener None]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testStateOfSensorsRelatedPermissionsCannotBeRead CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.apicoverage.TestModuleConfigHandler getTestClassName None]', 1), ('[android.cts.statsdatom.statsd.AtomTestCase getReportList CtsStatsdAtomHostTestCases]', 1), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 1), ('[android.tests.getinfo.DeviceInfoInstrument DisplayMetrics None]', 1), ('[android.telephony.cts.TelephonyLocationTests testSdk28CellInfoUpdate CtsTelephonyTestCases]', 1), ('[android.media.cts.Utils isEmpty None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testManageExternalStorageDoesntSkipScanningDirtyNomediaDir None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testScanDoesntSkipDirtySubtree None]', 1), ('[android.appsecurity.cts.PackageVisibilityTest testUninstalledPackageVisibility_instant CtsAppSecurityHostTestCases]', 1), ('[android.scopedstorage.cts.host.LegacyStorageHostTest testLegacySystemGalleryWithoutWESCannotRename None]', 1), ('[android.scopedstorage.cts.host.LegacyStorageHostTest testLegacyWESCanRenameImagesAndVideosWithDbUpdates_hasW None]', 1), ('[android.scopedstorage.cts.host.LegacyStorageHostTest testScanUpdatesMetadataForNewlyAddedFile_hasRW None]', 1), ('[com.android.cts.usb.TestUsbTest testInstantAppsCannotReadSerial None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testGrantOfSensorsRelatedPermissions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDenyOfSensorsRelatedPermissions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testStateOfSensorsRelatedPermissionsCannotBeRead CtsDevicePolicyManagerTestCases]', 1), ('[android.security.cts.AdbUtils emptyList CtsSecurityBulletinHostTestCases]', 1), ('[android.bluetooth.cts.ScanCallbackTest testScanSuccess CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.ScanCallbackTest testBatchScans CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.ScanCallbackTest testScanFail CtsBluetoothTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleAdvertiserService getBluetoothLeAdvertiser None]', 1), ('[android.display.cts.BrightnessTest testAtMostOneAppHoldsBrightnessConfigurationPermission CtsDisplayTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.UidAtomTests testGpsScan CtsStatsdAtomHostTestCases]', 1), ('[com.android.compatibility.dalvik.DalvikTestRunner DalvikTestListener None]', 1), ('[android.devicepolicy.cts.DevicePolicyManagerTest isEmpty CtsDevicePolicyTestCases]', 1), ('[android.net.wifi.cts.ScanResultTest isNotNull CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ScanResultTest testScanResultProperties CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ScanResultTest testScanResultTimeStamp CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ScanResultTest testScanResultConstructors CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ScanResultTest testScanResultMatchesWifiInfo CtsWifiTestCases]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[android.permission.cts.FileSystemPermissionTest testProcNetSane CtsPermissionTestCases]', 1), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 1), ('[android.content.cts.MockSyncAdapter isInitialized CtsContentTestCases]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testClearFiles None]', 1), ('[com.android.cts.mediastorageapp.MediaStorageTest testMediaEscalation_RequestWriteFilePathSupport None]', 1), ('[android.display.cts.VirtualDisplayTest testGetHdrCapabilitiesWithUserDisabledFormats CtsDisplayTestCases]', 1), ('[com.android.cts.verifier.audio.USBAudioPeripheralActivity OnBtnClickListener None]', 1), ('[com.android.cts.verifier.bluetooth.BleInsecureClientTestListActivity setPassFailButtonClickListeners None]', 1), ('[android.net.wifi.nl80211.cts.NativeScanResultTest testGetters CtsWifiTestCases]', 1), ('[android.bluetooth.cts.BTAdapterUtils isEnabled None]', 1), ('[android.graphics.pdf.cts.PdfRendererTest testPrintScalePDF16None CtsPdfTestCases]', 1), ('[android.widget.cts.ExpandableListWithHeaders getExpandableListView CtsWidgetTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationUtils WindowInsetsAnimationControlListener None]', 1), ('[com.android.cts.writeexternalstorageapp.WriteGiftTest testClearingWrite None]', 1), ('[com.android.cts.writeexternalstorageapp.WriteGiftTest testClearingRead None]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTest11mcAp CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRequestTooLarge CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTestApWithResponderLocation CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testAwareRttWithPeerHandle CtsWifiTestCases]', 1), ('[android.net.wifi.rtt.cts.WifiRttTest testRangingToTestNon11mcAp CtsWifiTestCases]', 1), ('[android.telecom.cts.BaseTelecomTestWithMockServices disableCarMode CtsTelecomTestCases]', 1), ('[com.android.cts.monkey.MonkeyTest testNotMonkey CtsMonkeyTestCases]', 1), ('[android.net.wifi.cts.app.TriggerScanAndReturnStatusActivity finish None]', 1), ('[android.security.SELinuxTargetSdkTestBase exists None]', 1), ('[android.media.cts.AudioTrackSurroundTest isSink CtsMediaTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BluetoothTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.bluetooth.BleSecureClientTestListActivity setPassFailButtonClickListeners None]', 1), ('[android.content.cts.AvailableIntentsTest testLocationScanningSettings CtsContentTestCases]', 1), ('[android.hardware.camera2.cts.helpers.StaticMetadat getCharacteristics None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testContributeMediaFile None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testDeleteAlreadyUnlinkedFile None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testContentResolverUpdate None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testSystemGalleryCanRenameImagesAndVideos None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testRenameAndReplaceFile None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testScanUpdatesMimeTypeForRenameFileExtension None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testInodeStatConsistency None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testHiddenDirectory_nomedia None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testSystemGalleryCanRenameImageAndVideoDirs None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCreateCanRestoreDeletedRowId None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testRenameCanRestoreDeletedRowId None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testPendingFromFuse None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testNoMediaDoesntHideSpecialDirectories None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testListUnsupportedFileType None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testCantSetAttrOtherAppsFile None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testScanUpdatesMetadataForRenamedHiddenFile None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testDeferredScanHidesPartialDatabaseRows None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testExternalStorageProviderAndDownloadsProvider None]', 1), ('[android.providerui.cts.MediaStoreUiTest testGetMediaUriAccess_MediaDocumentsProvider CtsProviderUiTestCases]', 1), ('[android.mediaprovidertranscode.cts.TranscodeTestUtils exists None]', 1), ('[android.view.cts.KeyEventTest testWriteToParcel CtsViewTestCases]', 1), ('[android.view.cts.KeyEventTest testGetScanCode CtsViewTestCases]', 1), ('[android.acceleration.AcceleratedView isHardwareAccelerated CtsAccelerationTestCases]', 1), ('[android.security.cts.CVE_2021_0523 testPocCVE_2021_0523 CtsSecurityBulletinHostTestCases]', 1), ('[android.server.wm.app.KeyguardDismissLoggerCallback onDismissError None]', 1), ('[android.text.cts.TextShaperTest shapeText_multiStyle CtsTextTestCases]', 1), ('[com.android.cts.deviceowner.WifiNetworkConfigurationWithoutFineLocationPermissionTest testAddAndRetrieveCallerConfiguredNetworks None]', 1), ('[android.media.tv.cts.TvContractTest testGenresIsCanonical CtsTvTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleSecureServerTestListActivity setPassFailButtonClickListeners None]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyChannelsCanBypassDnd CtsMediaTestCases]', 1), ('[android.systemui.cts.WindowInsetsBehaviorTests swipeOutsideLimit_systemUiVisible_allEventsCanceled CtsSystemUiTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationControllerTests testImeControl_isntInterruptedByStartingInput CtsWindowManagerDeviceTestCases]', 1), ('[android.view.inputmethod.cts.InputMethodServiceTest testHandlesConfigChanges CtsInputMethodTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleConnectionPriorityClientService disconnect None]', 1), ('[android.leanbackjank.app.Utils getDefaultDisplay None]', 1), ('[android.systemui.cts.LightBarTests testLegacyFlagsCannotOverwriteAppearance CtsSystemUiTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleInsecureServerTestListActivity setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
