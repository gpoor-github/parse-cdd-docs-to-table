"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"9.5  . Multi"	"9.5"	"C-3-1"	"9.5/C-3-1"	"09050000.670301"	"""C-3-1] MUST only provide access to storage or data that is either already accessible to the parent user profile or is directly owned by this additional user profile."""	""	"multiuser"	"user storage accessible 9.5/C-3-1 additional already access CLONE profile. profile directly data clone re_tag:(?<!/)C\-3\-1 provide 9.5 parent owned multiuser only"	"CLONE multiuser clone"	""	""	""	"[('com.android.cts.multiuserstorageapp.MultiUserStorageTest', 24), ('android.multiuser.cts.UserManagerTest', 14), ('android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest', 11), ('android.host.multiuser.EphemeralTest', 11), ('android.host.multiuser.CreateUsersPermissionTest', 9), ('android.content.pm.cts.shortcut.multiuser.ShortcutManagerSecondaryUserTest', 7), ('com.android.tests.packagemanager.multiuser.host.UninstallExistingPackageTest', 5), ('android.host.multiuser.CreateUsersNoAppCrashesTest', 4), ('android.host.multiuser.SecondaryUsersTest', 4), ('android.host.multiuser.SetUsersRestrictionsTest', 3), ('com.android.tests.packagemanager.multiuser.host.PackageManagerMultiUserTest', 3), ('android.multiuser.cts.SplitSystemUserTest', 3), ('com.android.tests.packagemanager.multiuser.app.PackageManagerMultiUserTest', 2)]"	"[('setUp', 8), ('tearDown', 6), ('getInstrumentation', 6), ('myUid', 4), ('mkdirs', 4), ('getContext', 4), ('AppCrashRetryRule', 2), ('getLastDeviceRunResults', 2), ('getRunMetrics', 2), ('getUiAutomation', 2)]"	"[('CtsMultiUserHostTestCases', 31), ('CtsMultiUserTestCases', 17), ('CtsPackageManagerMultiUserHostTestCases', 8)]"	""	"android.multiuser.cts.SplitSystemUserTest"	"getContext"	"CtsMultiUserTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/MultiUserStorageApp/src/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java', 24), ('/home/gpoor/cts-12-source/cts/tests/tests/multiuser/src/android/multiuser/cts/UserManagerTest.java', 14), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/multiuser/src/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java', 11), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/EphemeralTest.java', 11), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/CreateUsersPermissionTest.java', 9), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/multiuser/src/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/multiuser/src/com/android/tests/packagemanager/multiuser/host/UninstallExistingPackageTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/CreateUsersNoAppCrashesTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/SecondaryUsersTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/SetUsersRestrictionsTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/multiuser/src/com/android/tests/packagemanager/multiuser/host/PackageManagerMultiUserTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/multiuser/src/android/multiuser/cts/SplitSystemUserTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/multiuser/app/src/com/android/tests/packagemanager/multiuser/app/PackageManagerMultiUserTest.java', 2)]"	"[('(46,user,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java)', 1), ('(1,access,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java)', 1), ('(6,profile,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java)', 1), ('(1,multiuser,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java)', 1), ('(19,user,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java)', 1), ('(1,accessible,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java)', 1), ('(1,access,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java)', 1), ('(1,profile,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java)', 1), ('(1,multiuser,/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java)', 1), ('(11,user,/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java)', 1), ('(30,storage,/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java)', 1), ('(6,access,/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java)', 1), ('(1,data,/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java)', 1), ('(2,provide,/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java)', 1), ('(2,parent,/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java)', 1), ('(3,multiuser,/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java)', 1), ('(25,user,/android/host/multiuser/CreateUsersNoAppCrashesTest.java)', 1), ('(3,multiuser,/android/host/multiuser/CreateUsersNoAppCrashesTest.java)', 1), ('(23,user,/android/host/multiuser/SecondaryUsersTest.java)', 1), ('(1,9.5,/android/host/multiuser/SecondaryUsersTest.java)', 1), ('(8,multiuser,/android/host/multiuser/SecondaryUsersTest.java)', 1), ('(113,user,/android/host/multiuser/EphemeralTest.java)', 1), ('(3,directly,/android/host/multiuser/EphemeralTest.java)', 1), ('(8,multiuser,/android/host/multiuser/EphemeralTest.java)', 1), ('(12,user,/android/host/multiuser/SetUsersRestrictionsTest.java)', 1), ('(2,multiuser,/android/host/multiuser/SetUsersRestrictionsTest.java)', 1), ('(46,user,/android/host/multiuser/CreateUsersPermissionTest.java)', 1), ('(1,already,/android/host/multiuser/CreateUsersPermissionTest.java)', 1), ('(1,profile,/android/host/multiuser/CreateUsersPermissionTest.java)', 1), ('(1,9.5,/android/host/multiuser/CreateUsersPermissionTest.java)', 1), ('(8,multiuser,/android/host/multiuser/CreateUsersPermissionTest.java)', 1), ('(13,user,/com/android/tests/packagemanager/multiuser/host/PackageManagerMultiUserTest.java)', 1), ('(3,multiuser,/com/android/tests/packagemanager/multiuser/host/PackageManagerMultiUserTest.java)', 1), ('(44,user,/com/android/tests/packagemanager/multiuser/host/UninstallExistingPackageTest.java)', 1), ('(4,multiuser,/com/android/tests/packagemanager/multiuser/host/UninstallExistingPackageTest.java)', 1), ('(2,only,/com/android/tests/packagemanager/multiuser/host/UninstallExistingPackageTest.java)', 1), ('(2,user,/com/android/tests/packagemanager/multiuser/app/PackageManagerMultiUserTest.java)', 1), ('(2,multiuser,/com/android/tests/packagemanager/multiuser/app/PackageManagerMultiUserTest.java)', 1), ('(69,user,/android/multiuser/cts/UserManagerTest.java)', 1), ('(1,access,/android/multiuser/cts/UserManagerTest.java)', 1), ('(1,CLONE,/android/multiuser/cts/UserManagerTest.java)', 1), ('(6,profile,/android/multiuser/cts/UserManagerTest.java)', 1), ('(10,clone,/android/multiuser/cts/UserManagerTest.java)', 1), ('(1,parent,/android/multiuser/cts/UserManagerTest.java)', 1), ('(2,multiuser,/android/multiuser/cts/UserManagerTest.java)', 1), ('(3,only,/android/multiuser/cts/UserManagerTest.java)', 1), ('(14,user,/android/multiuser/cts/SplitSystemUserTest.java)', 1), ('(2,multiuser,/android/multiuser/cts/SplitSystemUserTest.java)', 1)]"	"[('([1:/android/host/multiuser/EphemeralTest.java]:[directly]:[1]:method_text:[  * <p>Indirectly executed by means of the --set-ephemeral-if-in-use flag     */    @Presubmit   ])', 3), ('([4:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[user]:[4]:method_text:[.util.List;public class ShortcutManagerManagedUserTest extends ShortcutManagerDeviceTestBase {   ])', 1), ('([5:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[user]:[5]:method_text:[ e) {            assertTrue(e.getMessage().contains(""locked or not running""));        }    }   ])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[user]:[1]:method_text:[                        new ComponentName(getContext(), MainActivity.class))).build())));    }   ])', 1), (""([14:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[user]:[14]:method_text:[r);    }    @Suppress // Having a launcher on managed profile is not supported, so don't run.   ])"", 1), ('([22:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[user]:[22]:method_text:[           return user;        }        fail(""Other user not found"");        return null;    }}])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[access]:[1]:method_text:[           return user;        }        fail(""Other user not found"");        return null;    }}])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[profile]:[1]:method_text:[ e) {            assertTrue(e.getMessage().contains(""locked or not running""));        }    }   ])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[profile]:[1]:method_text:[                        new ComponentName(getContext(), MainActivity.class))).build())));    }   ])', 1), (""([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[profile]:[1]:method_text:[r);    }    @Suppress // Having a launcher on managed profile is not supported, so don't run.   ])"", 1), ('([3:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[profile]:[3]:method_text:[           return user;        }        fail(""Other user not found"");        return null;    }}])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[multiuser]:[1]:method_text:[.util.List;public class ShortcutManagerManagedUserTest extends ShortcutManagerDeviceTestBase {   ])', 1), ('([3:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java]:[user]:[3]:method_text:[til.List;public class ShortcutManagerSecondaryUserTest extends ShortcutManagerDeviceTestBase {   ])', 1), ('([6:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java]:[user]:[6]:method_text:[       retryUntil(() -> MainActivity.getLastCreateTime() >= now, ""Activity not started"");    }   ])', 1), ('([10:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java]:[user]:[10]:method_text:[serHandle.class.getMethod(""of"", int.class);        return (UserHandle) of.invoke(null, 0);    }}])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java]:[accessible]:[1]:method_text:[serHandle.class.getMethod(""of"", int.class);        return (UserHandle) of.invoke(null, 0);    }}])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java]:[access]:[1]:method_text:[serHandle.class.getMethod(""of"", int.class);        return (UserHandle) of.invoke(null, 0);    }}])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java]:[profile]:[1]:method_text:[serHandle.class.getMethod(""of"", int.class);        return (UserHandle) of.invoke(null, 0);    }}])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerSecondaryUserTest.java]:[multiuser]:[1]:method_text:[til.List;public class ShortcutManagerSecondaryUserTest extends ShortcutManagerDeviceTestBase {   ])', 1), ('([5:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[user]:[5]:method_text:[     Log.d(TAG, ""Wiping "" + file);                file.delete();            }        }    }   ])', 1), ('([1:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[user]:[1]:method_text:[at "" + path, uid,                    readInt(new File(path, FILE_SINGLETON)));        }    }   ])', 1), (""([1:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[user]:[1]:method_text:[SINGLETON)));    }    /**     * Verify that we can't poke at storage of other users.     */   ])"", 1), ('([1:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[user]:[1]:method_text:[    }    }    /**     * Verify that files cannot be accessed through media provider.     */   ])', 1), ('([3:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[user]:[3]:method_text:[  private static File buildRawPath(String file) {        return new File(""/sdcard/"", file);    }}])', 1), ('([15:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[storage]:[15]:method_text:[     Log.d(TAG, ""Wiping "" + file);                file.delete();            }        }    }   ])', 1), ('([2:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[storage]:[2]:method_text:[ge() throws Exception {        wipeTestFiles(Environment.getExternalStorageDirectory());    }   ])', 1), ('([2:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[storage]:[2]:method_text:[torageState(path));            writeInt(new File(path, FILE_SINGLETON), uid);        }    }   ])', 1), ('([2:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[storage]:[2]:method_text:[at "" + path, uid,                    readInt(new File(path, FILE_SINGLETON)));        }    }   ])', 1), ('([1:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[storage]:[1]:method_text:[testCleanObbStorage() throws Exception {        wipeTestFiles(getContext().getObbDir());    }   ])', 1), ('([1:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[storage]:[1]:method_text:[LETON), OBB_API_VALUE);        writeInt(buildEnvObbPath(FILE_OBB_SINGLETON), OBB_VALUE);    }   ])', 1), (""([2:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[storage]:[2]:method_text:[SINGLETON)));    }    /**     * Verify that we can't poke at storage of other users.     */   ])"", 1), ('([1:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[storage]:[1]:method_text:[    }    }    /**     * Verify that files cannot be accessed through media provider.     */   ])', 1), ('([4:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[storage]:[4]:method_text:[  private static File buildRawPath(String file) {        return new File(""/sdcard/"", file);    }}])', 1), ('([2:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[access]:[2]:method_text:[     Log.d(TAG, ""Wiping "" + file);                file.delete();            }        }    }   ])', 1), ('([1:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[access]:[1]:method_text:[torageState(path));            writeInt(new File(path, FILE_SINGLETON), uid);        }    }   ])', 1), ('([2:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[access]:[2]:method_text:[    }    }    /**     * Verify that files cannot be accessed through media provider.     */   ])', 1), ('([1:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[access]:[1]:method_text:[  private static File buildRawPath(String file) {        return new File(""/sdcard/"", file);    }}])', 1), ('([1:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[data]:[1]:method_text:[  private static File buildRawPath(String file) {        return new File(""/sdcard/"", file);    }}])', 1), ('([1:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[provide]:[1]:method_text:[    }    }    /**     * Verify that files cannot be accessed through media provider.     */   ])', 1), ('([1:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[provide]:[1]:method_text:[  private static File buildRawPath(String file) {        return new File(""/sdcard/"", file);    }}])', 1), ('([1:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[parent]:[1]:method_text:[    }    }    /**     * Verify that files cannot be accessed through media provider.     */   ])', 1), ('([1:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[parent]:[1]:method_text:[  private static File buildRawPath(String file) {        return new File(""/sdcard/"", file);    }}])', 1), ('([3:/com/android/cts/multiuserstorageapp/MultiUserStorageTest.java]:[multiuser]:[3]:method_text:[     Log.d(TAG, ""Wiping "" + file);                file.delete();            }        }    }   ])', 1), ('([7:/android/host/multiuser/CreateUsersNoAppCrashesTest.java]:[user]:[7]:method_text:[e(new SupportsMultiUserRule(this))            .around(new AppCrashRetryRule());    @Presubmit   ])', 1), ('([9:/android/host/multiuser/CreateUsersNoAppCrashesTest.java]:[user]:[9]:method_text:[itchToNewUser(userId);        assertSwitchToUser(userId, mInitialUserId);    }    @Presubmit   ])', 1), ('([9:/android/host/multiuser/CreateUsersNoAppCrashesTest.java]:[user]:[9]:method_text:[;        assertSwitchToNewUser(userId);        assertSwitchToUser(userId, mInitialUserId);    }}])', 1), ('([3:/android/host/multiuser/CreateUsersNoAppCrashesTest.java]:[multiuser]:[3]:method_text:[e(new SupportsMultiUserRule(this))            .around(new AppCrashRetryRule());    @Presubmit   ])', 1), ('([12:/android/host/multiuser/SecondaryUsersTest.java]:[user]:[12]:method_text:[mSupportsMultiUserRule = new SupportsMultiUserRule(this);    @CddTest(requirement=""9.5/A-1-2"")   ])', 1), ('([11:/android/host/multiuser/SecondaryUsersTest.java]:[user]:[11]:method_text:[ch to secondary user before boot complete"")                .that(isUserSecondary).isTrue();    }}])', 1), ('([1:/android/host/multiuser/SecondaryUsersTest.java]:[9.5]:[1]:method_text:[mSupportsMultiUserRule = new SupportsMultiUserRule(this);    @CddTest(requirement=""9.5/A-1-2"")   ])', 1), ('([8:/android/host/multiuser/SecondaryUsersTest.java]:[multiuser]:[8]:method_text:[mSupportsMultiUserRule = new SupportsMultiUserRule(this);    @CddTest(requirement=""9.5/A-1-2"")   ])', 1), ('([11:/android/host/multiuser/EphemeralTest.java]:[user]:[11]:method_text:[/** Test to verify ephemeral user is removed after switch out to another user. */    @Presubmit   ])', 1), ('([13:/android/host/multiuser/EphemeralTest.java]:[user]:[13]:method_text:[UserId);    }    /** Test to verify ephemeral user is removed after reboot. */    @Presubmit   ])', 1), ('([8:/android/host/multiuser/EphemeralTest.java]:[user]:[8]:method_text:[at an ephemeral user, with an account, is safely removed after rebooting     * from it.     */   ])', 1), ('([15:/android/host/multiuser/EphemeralTest.java]:[user]:[15]:method_text:[  * <p>Indirectly executed by means of the --set-ephemeral-if-in-use flag     */    @Presubmit   ])', 1), ('([13:/android/host/multiuser/EphemeralTest.java]:[user]:[13]:method_text:[  * <p>Indirectly executed by means of the --set-ephemeral-if-in-use flag     */    @Presubmit   ])', 1), ('([21:/android/host/multiuser/EphemeralTest.java]:[user]:[21]:method_text:[  * <p>Indirectly executed by means of the --set-ephemeral-if-in-use flag     */    @Presubmit   ])', 1), ('([32:/android/host/multiuser/EphemeralTest.java]:[user]:[32]:method_text:[isGuest=%s, isEphemeral=%s)"",                    name, isGuest, isEphemeral), e);        }    }}])', 1), ('([8:/android/host/multiuser/EphemeralTest.java]:[multiuser]:[8]:method_text:[/** Test to verify ephemeral user is removed after switch out to another user. */    @Presubmit   ])', 1), ('([8:/android/host/multiuser/SetUsersRestrictionsTest.java]:[user]:[8]:method_text:[tiUserTest {    /**     * Tests that set-user-restriction is disabled on user builds.     */   ])', 1), ('([4:/android/host/multiuser/SetUsersRestrictionsTest.java]:[user]:[4]:method_text:[tyException. ""                + ""command output: %s"", output).that(isErrorOutput).isTrue();    }}])', 1), ('([2:/android/host/multiuser/SetUsersRestrictionsTest.java]:[multiuser]:[2]:method_text:[tiUserTest {    /**     * Tests that set-user-restriction is disabled on user builds.     */   ])', 1), ('([9:/android/host/multiuser/CreateUsersPermissionTest.java]:[user]:[9]:method_text:[   public final SupportsMultiUserRule mSupportsMultiUserRule = new SupportsMultiUserRule(this);   ])', 1), ('([3:/android/host/multiuser/CreateUsersPermissionTest.java]:[user]:[3]:method_text:[ted. If so, skip the test.        assumeGuestDoesNotExist();        createGuestUser();    }   ])', 1), ('([3:/android/host/multiuser/CreateUsersPermissionTest.java]:[user]:[3]:method_text:[s() /* name */,                false /* guest */,                true /* ephemeral */);    }   ])', 1), ('([2:/android/host/multiuser/CreateUsersPermissionTest.java]:[user]:[2]:method_text:[ {        createRestrictedProfile(mPrimaryUserId);    }    @CddTest(requirement=""9.5/A-1-3"")   ])', 1), ('([29:/android/host/multiuser/CreateUsersPermissionTest.java]:[user]:[29]:method_text:[ax users due to added guest user"")                .that(userCount).isGreaterThan(maxUsers);    }}])', 1), ('([1:/android/host/multiuser/CreateUsersPermissionTest.java]:[already]:[1]:method_text:[ted. If so, skip the test.        assumeGuestDoesNotExist();        createGuestUser();    }   ])', 1), ('([1:/android/host/multiuser/CreateUsersPermissionTest.java]:[profile]:[1]:method_text:[ {        createRestrictedProfile(mPrimaryUserId);    }    @CddTest(requirement=""9.5/A-1-3"")   ])', 1), ('([1:/android/host/multiuser/CreateUsersPermissionTest.java]:[9.5]:[1]:method_text:[ {        createRestrictedProfile(mPrimaryUserId);    }    @CddTest(requirement=""9.5/A-1-3"")   ])', 1), ('([8:/android/host/multiuser/CreateUsersPermissionTest.java]:[multiuser]:[8]:method_text:[   public final SupportsMultiUserRule mSupportsMultiUserRule = new SupportsMultiUserRule(this);   ])', 1), ('([7:/com/android/tests/packagemanager/multiuser/host/PackageManagerMultiUserTest.java]:[user]:[7]:method_text:[les"");    }    /**     * Tests that all users see the same set of installed modules.     */   ])', 1), ('([6:/com/android/tests/packagemanager/multiuser/host/PackageManagerMultiUserTest.java]:[user]:[6]:method_text:[    String list1 = getInstalledModules(mUserId);        assertThat(list2).isEqualTo(list1);    }}])', 1), ('([3:/com/android/tests/packagemanager/multiuser/host/PackageManagerMultiUserTest.java]:[multiuser]:[3]:method_text:[les"");    }    /**     * Tests that all users see the same set of installed modules.     */   ])', 1), ('([8:/com/android/tests/packagemanager/multiuser/host/UninstallExistingPackageTest.java]:[user]:[8]:method_text:[ue, mUserId);        assertTrue(isPackageInstalledForUser(EMPTY_TEST_APP_PKG, mUserId));    }   ])', 1), ('([22:/com/android/tests/packagemanager/multiuser/host/UninstallExistingPackageTest.java]:[user]:[22]:method_text:[ mUserId));        assertTrue(isPackageInstalledForUser(EMPTY_TEST_APP_PKG, newUserId));    }   ])', 1), ('([14:/com/android/tests/packagemanager/multiuser/host/UninstallExistingPackageTest.java]:[user]:[14]:method_text:[_TEST_APP_PKG));        assertTrue(isPackageInstalledForUser(EMPTY_TEST_APP_PKG, mUserId));    }}])', 1), ('([4:/com/android/tests/packagemanager/multiuser/host/UninstallExistingPackageTest.java]:[multiuser]:[4]:method_text:[ue, mUserId);        assertTrue(isPackageInstalledForUser(EMPTY_TEST_APP_PKG, mUserId));    }   ])', 1), ('([2:/com/android/tests/packagemanager/multiuser/host/UninstallExistingPackageTest.java]:[only]:[2]:method_text:[_TEST_APP_PKG));        assertTrue(isPackageInstalledForUser(EMPTY_TEST_APP_PKG, mUserId));    }}])', 1), ('([2:/com/android/tests/packagemanager/multiuser/app/PackageManagerMultiUserTest.java]:[user]:[2]:method_text:[ry.getInstrumentation().getUiAutomation()                .dropShellPermissionIdentity();    }   ])', 1), ('([2:/com/android/tests/packagemanager/multiuser/app/PackageManagerMultiUserTest.java]:[multiuser]:[2]:method_text:[ry.getInstrumentation().getUiAutomation()                .dropShellPermissionIdentity();    }   ])', 1), ('([14:/android/multiuser/cts/UserManagerTest.java]:[user]:[14]:method_text:[ is     * because apps targeting R no longer have access to package queries by default.     */   ])', 1), ('([4:/android/multiuser/cts/UserManagerTest.java]:[user]:[4]:method_text:[ {        assertWithMessage(""isUserAGoat()"").that(mUserManager.isUserAGoat()).isFalse();    }   ])', 1), ('([5:/android/multiuser/cts/UserManagerTest.java]:[user]:[5]:method_text:[de()"")                .that(UserManager.isHeadlessSystemUserMode()).isEqualTo(expected);    }   ])', 1), ('([10:/android/multiuser/cts/UserManagerTest.java]:[user]:[10]:method_text:[nd_backgroundUser()    // TODO(b/179163496): add testIsUserForeground_ tests for profile users   ])', 1), ('([36:/android/multiuser/cts/UserManagerTest.java]:[user]:[36]:method_text:[e();            mInstrumentation.getUiAutomation().dropShellPermissionIdentity();        }    }}])', 1), ('([1:/android/multiuser/cts/UserManagerTest.java]:[access]:[1]:method_text:[ is     * because apps targeting R no longer have access to package queries by default.     */   ])', 1), ('([10:/android/multiuser/cts/UserManagerTest.java]:[CLONE]:[10]:method_text:[e();            mInstrumentation.getUiAutomation().dropShellPermissionIdentity();        }    }}])', 1), ('([1:/android/multiuser/cts/UserManagerTest.java]:[profile]:[1]:method_text:[nd_backgroundUser()    // TODO(b/179163496): add testIsUserForeground_ tests for profile users   ])', 1), ('([5:/android/multiuser/cts/UserManagerTest.java]:[profile]:[5]:method_text:[e();            mInstrumentation.getUiAutomation().dropShellPermissionIdentity();        }    }}])', 1), ('([10:/android/multiuser/cts/UserManagerTest.java]:[clone]:[10]:method_text:[e();            mInstrumentation.getUiAutomation().dropShellPermissionIdentity();        }    }}])', 1), ('([1:/android/multiuser/cts/UserManagerTest.java]:[parent]:[1]:method_text:[e();            mInstrumentation.getUiAutomation().dropShellPermissionIdentity();        }    }}])', 1), ('([2:/android/multiuser/cts/UserManagerTest.java]:[multiuser]:[2]:method_text:[ is     * because apps targeting R no longer have access to package queries by default.     */   ])', 1), ('([1:/android/multiuser/cts/UserManagerTest.java]:[only]:[1]:method_text:[ is     * because apps targeting R no longer have access to package queries by default.     */   ])', 1), ('([2:/android/multiuser/cts/UserManagerTest.java]:[only]:[2]:method_text:[e();            mInstrumentation.getUiAutomation().dropShellPermissionIdentity();        }    }}])', 1), ('([4:/android/multiuser/cts/SplitSystemUserTest.java]:[user]:[4]:method_text:[st.InstrumentationTestCase;public class SplitSystemUserTest extends InstrumentationTestCase {   ])', 1), ('([10:/android/multiuser/cts/SplitSystemUserTest.java]:[user]:[10]:method_text:[assertFalse(""UserManager.isSplitSystemUser must be false"", UserManager.isSplitSystemUser());    }}])', 1), ('([2:/android/multiuser/cts/SplitSystemUserTest.java]:[multiuser]:[2]:method_text:[st.InstrumentationTestCase;public class SplitSystemUserTest extends InstrumentationTestCase {   ])', 1)]"	""	""	"[('user', 45), ('multiuser', 13), ('storage', 9), ('profile', 8), ('access', 7), ('parent', 3), ('directly', 3), ('only', 3), ('provide', 2), ('9.5', 2), ('accessible', 1), ('data', 1), ('already', 1), ('CLONE', 1), ('clone', 1)]"	"[('[com.android.cts.multiuserstorageapp.MultiUserStorageTest testMediaProviderUserIsolation None]', 6), ('[android.multiuser.cts.UserManagerTest testCloneUser CtsMultiUserTestCases]', 6), ('[com.android.cts.multiuserstorageapp.MultiUserStorageTest testUserIsolation None]', 5), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerSecondaryUserTest testDifferentUserNotAccessible None]', 4), ('[com.android.cts.multiuserstorageapp.MultiUserStorageTest listFiles None]', 4), ('[android.multiuser.cts.UserManagerTest setTestFixtures CtsMultiUserTestCases]', 4), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test05_getAndLaunch_managed None]', 3), ('[android.host.multiuser.CreateUsersPermissionTest testCanCreateRestrictedUser CtsMultiUserHostTestCases]', 3), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test01_managedProfileNotStarted None]', 2), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test04_getAndLaunch_primary None]', 2), ('[com.android.cts.multiuserstorageapp.MultiUserStorageTest testReadIsolatedStorage None]', 2), ('[com.android.cts.multiuserstorageapp.MultiUserStorageTest testReadObbStorage None]', 2), ('[com.android.cts.multiuserstorageapp.MultiUserStorageTest testWriteIsolatedStorage None]', 2), ('[android.host.multiuser.EphemeralTest testRebootAndRemoveEphemeralUser_withAccount CtsMultiUserHostTestCases]', 2), ('[android.host.multiuser.EphemeralTest testRemoveUserOrSetEphemeral_nonRunningUserRemoved CtsMultiUserHostTestCases]', 2), ('[android.host.multiuser.EphemeralTest testRemoveUserOrSetEphemeral_currentUserSetEphemeral_removeAfterSwitch CtsMultiUserHostTestCases]', 2), ('[android.host.multiuser.CreateUsersPermissionTest testCanCreateGuestUser CtsMultiUserHostTestCases]', 2), ('[com.android.tests.packagemanager.multiuser.host.UninstallExistingPackageTest testUninstallExistingPackage_failsIfInstalledInOnlyOneUser CtsPackageManagerMultiUserHostTestCases]', 2), ('[com.android.tests.packagemanager.multiuser.app.PackageManagerMultiUserTest dropShellPermissionIdentity None]', 2), ('[android.multiuser.cts.UserManagerTest testIsUserForeground_currentUser CtsMultiUserTestCases]', 2), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test02_createShortuctsOnPrimaryUser None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test03_createShortuctsOnManagedProfile None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerSecondaryUserTest testCreateAndStart None]', 1), ('[com.android.cts.multiuserstorageapp.MultiUserStorageTest testCleanIsolatedStorage None]', 1), ('[com.android.cts.multiuserstorageapp.MultiUserStorageTest testCleanObbStorage None]', 1), ('[com.android.cts.multiuserstorageapp.MultiUserStorageTest testWriteObbStorage None]', 1), ('[android.host.multiuser.CreateUsersNoAppCrashesTest testCanCreateGuestUser CtsMultiUserHostTestCases]', 1), ('[android.host.multiuser.CreateUsersNoAppCrashesTest testCanCreateSecondaryUser CtsMultiUserHostTestCases]', 1), ('[android.host.multiuser.SecondaryUsersTest testSwitchToSecondaryUserBeforeBootComplete CtsMultiUserHostTestCases]', 1), ('[android.host.multiuser.EphemeralTest testSwitchAndRemoveEphemeralUser CtsMultiUserHostTestCases]', 1), ('[android.host.multiuser.EphemeralTest testRebootAndRemoveEphemeralUser CtsMultiUserHostTestCases]', 1), ('[android.host.multiuser.EphemeralTest testRemoveUserOrSetEphemeral_currentUserSetEphemeral_removeAfterReboot CtsMultiUserHostTestCases]', 1), ('[android.host.multiuser.SetUsersRestrictionsTest testCantSetUserRestriction CtsMultiUserHostTestCases]', 1), ('[android.host.multiuser.CreateUsersPermissionTest testCanCreateEphemeralUser CtsMultiUserHostTestCases]', 1), ('[android.host.multiuser.CreateUsersPermissionTest testCanCreateGuestUserWhenUserLimitReached CtsMultiUserHostTestCases]', 1), ('[com.android.tests.packagemanager.multiuser.host.PackageManagerMultiUserTest testGetInstalledModules CtsPackageManagerMultiUserHostTestCases]', 1), ('[com.android.tests.packagemanager.multiuser.host.UninstallExistingPackageTest testUninstallExistingPackage_succeedsIfInstalledInAnotherUser CtsPackageManagerMultiUserHostTestCases]', 1), ('[android.multiuser.cts.UserManagerTest testUserGoat_api30 CtsMultiUserTestCases]', 1), ('[android.multiuser.cts.UserManagerTest testIsHeadlessSystemUserMode CtsMultiUserTestCases]', 1), ('[android.multiuser.cts.SplitSystemUserTest testSplitSystemUserIsDisabled CtsMultiUserTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
