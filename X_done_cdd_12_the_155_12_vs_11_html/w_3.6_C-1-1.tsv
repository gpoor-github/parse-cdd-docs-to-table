"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"3.6  . API Namespaces"	"3.6"	"C-1-1"	"3.6/C-1-1"	"03060000.670101"	"""C-1-1] MUST NOT be in a NDK library or a library owned by another organization as described here. If a device implementer proposes to improve one of the package namespaces above (such as by adding useful new functionality to an existing API, or adding a new API), the implementer SHOULD visit source.android.com and begin the process for contributing changes and code, according to the information on that site. Note that the restrictions above correspond to standard conventions for naming APIs in the Java programming language; this section simply aims to reinforce those conventions and make them binding through inclusion in this Compatibility Definition. <h3 id=""37_runtime_compatibility"" """	""	""	"NDK"	""	""	""	""	"[('android.media.cts.VideoCodecTest', 17), ('android.media.cts.EncodeDecodeTest', 5), ('android.widget.cts.ListPopupWindowTest', 4), ('android.app.cts.AlertDialog_BuilderTest', 3), ('android.mediav2.cts.ExtractorTest', 3), ('android.widget.cts.ExpandableListViewWithHeadersTest', 2), ('android.hardware.camera2.cts.CameraManagerTest', 2), ('android.widget.cts.ToolbarTest', 1), ('android.keystore.cts.SecretKeyFactoryTest', 1), ('com.android.cts.apicoverage.CtsApiCoverage', 1), ('com.android.cts.verifier.biometrics.BiometricStrongTests', 1), ('android.opengl.cts.EglConfigGLSurfaceView', 1), ('com.android.cts.appdataisolation.appa.AppATests', 1), ('android.view.cts.SearchEventTest', 1), ('android.widget.cts.SearchViewTest', 1), ('android.media.cts.NativeDecoderTest', 1), ('com.android.cts.verifier.managedprovisioning.ByodFlowTestHelper', 1), ('android.jobscheduler.cts.TestAppInterface', 1), ('com.android.compatibility.common.util.ShellUtils', 1), ('android.text.method.cts.NumberKeyListenerTest', 1), ('android.text.method.cts.TimeKeyListenerTest', 1), ('android.mediastress.cts.NativeMediaActivity', 1), ('android.view.inputmethod.cts.util.TestUtils', 1), ('android.app.cts.ActionBarTest', 1), ('android.text.method.cts.DateTimeKeyListenerTest', 1)]"	"[('printUsage', 4), ('println', 4), ('getInstrumentation', 4), ('nativeOrder', 3), ('get', 3), ('asFloatBuffer', 2), ('main', 2), ('setUp', 2), ('getSimpleName', 2), ('getPackageManager', 2), ('FilenameFilter', 1), ('toLowerCase', 1), ('PackageFilter', 1), ('getName', 1), ('ConfigChooser', 1), ('Renderer', 1), ('Renderer20', 1), ('glCreateProgram', 1), ('glGetError', 1), ('eglGetError', 1), ('getMediaDirString', 1), ('setup', 1), ('tearDown', 1), ('runShellCommand', 1), ('trim', 1), ('getWidth', 1), ('getHeight', 1), ('ShellUtils', 1), ('getWindow', 1), ('getIntent', 1), ('onSurfaceCreated', 1), ('Runnable', 1), ('run', 1), ('createEngine', 1), ('setSurfaceForNative', 1), ('getMediaString', 1), ('AtomicBoolean', 1), ('getAsBoolean', 1)]"	"[('CtsMediaTestCases', 23), ('CtsWidgetTestCases', 8), ('CtsAppTestCases', 4), ('CtsMediaV2TestCases', 3), ('CtsTextTestCases', 3), ('CtsCameraTestCases', 2), ('CtsKeystoreTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsViewTestCases', 1), ('CtsJobSchedulerTestCases', 1), ('CtsMediaStressTestCases', 1), ('CtsInputMethodTestCases', 1)]"	""	"android.view.inputmethod.cts.KeyboardVisibilityControlTest"	"show"	"CtsInputMethodTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/DialogTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoCodecTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TextViewTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeDecodeTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/DecoderTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/atrace/AtraceTestApp/src/com/android/cts/atracetestapp/AtraceDeviceTests.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/DigitsKeyListenerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ListPopupWindowTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyEventInjectionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TimePickerTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/app/MediaExtractorTest/src/android/media/cts/MediaExtractorDeviceSideTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/DatasetFilteringTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ExpandableListViewBasicTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/AlertDialogTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/JobThrottlingTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/ExtractorTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/AutoCompleteTextViewTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricCryptoTests.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AuthBoundKeyApp/src/com/android/cts/authboundkey/AuthBoundKeyAppTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/ConnectivityConstraintTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/MetaKeyKeyListenerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/cts/MediaExtractorHostSideTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/AbsListViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AuthBoundKeyTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowFocusTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/BaseKeyListenerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/LoginActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/BuildTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ContentPaneFocusTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/GridViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/atrace/src/android/atrace/cts/AtraceHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SpinnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/InstrumentationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/TextKeyListenerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ListViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tools/release-parser/tests/src/com/android/cts/releaseparser/SoParserTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodServiceTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ExpandableListViewWithHeadersTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/libndkaudio/src/com/android/ndkaudio/AudioPlayer.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/extractnativelibs/src/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/MidiNativeTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/projection/offscreen/ProjectionOffscreenActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlayRoutingNative.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/NumberPickerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/util/TestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ToolbarActionBarTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/ShellUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/AbsSeekBarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsReportParser.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToolbarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/AImageDecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/BackwardNavigationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/DateTimeKeyListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ByodFlowTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/InputSurfaceInterface.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/HdmiCecClientWrapper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/audio/HdmiCecRemoteControlPassThroughTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AppDataIsolationTestApp/AppA/src/com/android/cts/appdataisolation/appa/AppATests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/EditTextTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/LayoutTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/SurfaceTextureRenderer.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/SyncTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/MuxerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/binder_ndk/src/android/binder/cts/JavaClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/mockime/src/com/android/cts/mockime/MockIme.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TabHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/jni/src/android/jni/cts/LinkerNamespacesHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/NdkInputSurface.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoCodecTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecPerformanceTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/mockime/src/com/android/cts/mockime/MockImeSession.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/AuthenticationBoundKeyTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/CommandSession.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/device-info/src/com/android/compatibility/common/deviceinfo/VintfDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/SearchEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/util/src/android/util/cts/ArrayMapTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/library/src_target/com/android/test/usesnativesharedlibrary/LoadTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/View_InitialFocusTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/DateKeyListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorNativeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/CtsKeyEventUtil.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyFactoryTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/NativeMediaActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TooltipTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/DeviceAdminTestReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioRecordRoutingNative.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchView_CursorTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/ScreenLockBoundKeysTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyEventInterceptTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmClearkeyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/tagging/src/com/android/cts/tagging/TaggingBaseTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CtsApiCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/PasswordTransformationMethodTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActionBarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/GTestApiReport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/TestAppInterface.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/atrace/AtraceTestApp/src/com/android/cts/atracetestapp/AtraceNdkMethods.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/libndkaudio/src/com/android/ndkaudio/AudioRecorder.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/RemoteControlPassthrough.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/NdkMediaCodec.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/CodecTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/cts/TvViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/DatePickerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/InputSurface.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/FingerprintBoundKeysTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/NativeDecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/EglConfigGLSurfaceView.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/UserAuthTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyChainTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/BiometricStrongTests.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/NdkApiXmlReport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/LauncherActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/SharedMemoryTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/SurfaceTextureGLSurfaceView.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/ApkNdkApiReport.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SearchViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ByodFlowTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/ActivityManagerTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/NativeMediaDrmClearkeyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ExpandableListTester.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/SecretKeyFactoryTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/biometrics/Utils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/NumberKeyListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/TimeKeyListenerTest.java', 1)]"	"[('(1,NDK,/com/android/ndkaudio/AudioPlayer.java)', 1), ('(3,NDK,/com/android/cts/authboundkey/AuthBoundKeyAppTest.java)', 1), ('(1,NDK,/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestBase.java)', 1), ('(2,NDK,/android/jobscheduler/cts/ConnectivityConstraintTest.java)', 1), ('(21,NDK,/android/widget/cts/TextViewTest.java)', 1), ('(22,NDK,/android/media/cts/EncodeDecodeTest.java)', 1), ('(1,NDK,/com/android/cts/verifier/audio/MidiNativeTestActivity.java)', 1), ('(2,NDK,/com/android/cts/verifier/projection/offscreen/ProjectionOffscreenActivity.java)', 1), ('(2,NDK,/android/media/cts/AudioPlayRoutingNative.java)', 1), ('(2,NDK,/android/widget/cts/NumberPickerTest.java)', 1), ('(1,NDK,/android/view/inputmethod/cts/util/TestUtils.java)', 1), ('(2,NDK,/android/app/cts/ToolbarActionBarTest.java)', 1), ('(1,NDK,/com/android/compatibility/common/util/ShellUtils.java)', 1), ('(1,NDK,/android/webkit/cts/WebViewClientTest.java)', 1), ('(5,NDK,/android/media/cts/MediaExtractorDeviceSideTest.java)', 1), ('(2,NDK,/android/widget/cts/AbsSeekBarTest.java)', 1), ('(1,NDK,/com/android/cts/apicoverage/CtsReportParser.java)', 1), ('(2,NDK,/android/text/method/cts/MetaKeyKeyListenerTest.java)', 1), ('(1,NDK,/android/widget/cts/ToolbarTest.java)', 1), ('(8,NDK,/android/media/cts/MediaActivityTest.java)', 1), ('(22,NDK,/android/app/cts/DialogTest.java)', 1), ('(1,NDK,/android/graphics/cts/AImageDecoderTest.java)', 1), ('(6,NDK,/android/media/cts/MediaExtractorHostSideTest.java)', 1), ('(2,NDK,/android/widget/cts/BackwardNavigationTest.java)', 1), ('(4,NDK,/android/text/method/cts/DateTimeKeyListenerTest.java)', 1), ('(5,NDK,/com/android/cts/verifier/managedprovisioning/ByodFlowTestActivity.java)', 1), ('(4,NDK,/android/widget/cts/AbsListViewTest.java)', 1), ('(6,NDK,/android/appsecurity/cts/AuthBoundKeyTest.java)', 1), ('(6,NDK,/android/server/wm/WindowFocusTests.java)', 1), ('(9,NDK,/android/text/method/cts/BaseKeyListenerTest.java)', 1), ('(1,NDK,/android/media/cts/InputSurfaceInterface.java)', 1), ('(10,NDK,/android/autofillservice/cts/commontests/DatasetFilteringTest.java)', 1), ('(3,NDK,/android/hdmicec/cts/HdmiCecClientWrapper.java)', 1), ('(1,NDK,/android/hdmicec/cts/audio/HdmiCecRemoteControlPassThroughTest.java)', 1), ('(3,NDK,/android/widget/cts/ExpandableListViewBasicTest.java)', 1), ('(1,NDK,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(16,NDK,/android/media/cts/DecoderTest.java)', 1), ('(2,NDK,/android/autofillservice/cts/dropdown/LoginActivityTest.java)', 1), ('(2,NDK,/android/widget/cts/EditTextTest.java)', 1), ('(2,NDK,/android/os/cts/BuildTest.java)', 1), ('(1,NDK,/android/server/wm/LayoutTests.java)', 1), ('(1,NDK,/android/mediastress/cts/SurfaceTextureRenderer.java)', 1), ('(10,NDK,/android/widget/cts/ListPopupWindowTest.java)', 1), ('(1,NDK,/android/graphics/cts/SyncTest.java)', 1), ('(1,NDK,/android/mediav2/cts/MuxerTest.java)', 1), ('(1,NDK,/android/binder/cts/JavaClientTest.java)', 1), ('(2,NDK,/com/android/cts/mockime/MockIme.java)', 1), ('(4,NDK,/android/app/cts/AlertDialogTest.java)', 1), ('(27,NDK,/android/graphics/cts/BitmapTest.java)', 1), ('(23,NDK,/android/media/cts/VideoCodecTest.java)', 1), ('(12,NDK,/android/widget/cts/TabHostTest.java)', 1), ('(8,NDK,/com/android/cts/atracetestapp/AtraceDeviceTests.java)', 1), ('(5,NDK,/android/jni/cts/LinkerNamespacesHelper.java)', 1), ('(4,NDK,/android/media/cts/NdkInputSurface.java)', 1), ('(3,NDK,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(3,NDK,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(10,NDK,/android/media/cts/VideoCodecTestBase.java)', 1), ('(5,NDK,/android/video/cts/CodecPerformanceTestBase.java)', 1), ('(5,NDK,/com/android/cts/mockime/MockImeSession.java)', 1), ('(5,NDK,/android/view/cts/ContentPaneFocusTest.java)', 1), ('(22,NDK,/com/android/cts/verifier/managedprovisioning/AuthenticationBoundKeyTestActivity.java)', 1), ('(1,NDK,/android/server/wm/CommandSession.java)', 1), ('(6,NDK,/com/android/compatibility/common/deviceinfo/VintfDeviceInfo.java)', 1), ('(1,NDK,/android/view/cts/SearchEventTest.java)', 1), ('(2,NDK,/android/util/cts/ArrayMapTest.java)', 1), ('(1,NDK,_target/com/android/test/usesnativesharedlibrary/LoadTest.java)', 1), ('(4,NDK,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(1,NDK,/android/view/cts/View_InitialFocusTest.java)', 1), ('(6,NDK,/android/text/method/cts/DateKeyListenerTest.java)', 1), ('(2,NDK,/android/hardware/cts/SensorNativeTest.java)', 1), ('(2,NDK,/android/view/cts/ASurfaceControlTest.java)', 1), ('(19,NDK,/com/android/compatibility/common/util/CtsKeyEventUtil.java)', 1), ('(6,NDK,/android/view/cts/KeyEventInjectionTest.java)', 1), ('(1,NDK,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(27,NDK,/android/text/method/cts/DigitsKeyListenerTest.java)', 1), ('(1,NDK,/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java)', 1), ('(1,NDK,/android/mediastress/cts/NativeMediaActivity.java)', 1), ('(2,NDK,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(12,NDK,/android/mediav2/cts/ExtractorTest.java)', 1), ('(2,NDK,/android/view/cts/TooltipTest.java)', 1), ('(1,NDK,/com/android/cts/verifier/managedprovisioning/DeviceAdminTestReceiver.java)', 1), ('(14,NDK,/android/widget/cts/AutoCompleteTextViewTest.java)', 1), ('(2,NDK,/android/media/cts/AudioRecordRoutingNative.java)', 1), ('(2,NDK,/android/widget/cts/SearchView_CursorTest.java)', 1), ('(1,NDK,/com/android/cts/verifier/security/ScreenLockBoundKeysTest.java)', 1), ('(12,NDK,/android/widget/cts/GridViewTest.java)', 1), ('(8,NDK,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(2,NDK,/android/view/cts/KeyEventInterceptTest.java)', 1), ('(2,NDK,/android/mediadrm/cts/MediaDrmClearkeyTest.java)', 1), ('(3,NDK,/com/android/cts/tagging/TaggingBaseTest.java)', 1), ('(7,NDK,/android/atrace/cts/AtraceHostTest.java)', 1), ('(25,NDK,/com/android/cts/apicoverage/CtsApiCoverage.java)', 1), ('(2,NDK,/android/text/method/cts/PasswordTransformationMethodTest.java)', 1), ('(2,NDK,/android/app/cts/ActionBarTest.java)', 1), ('(1,NDK,/com/android/cts/apicoverage/GTestApiReport.java)', 1), ('(1,NDK,/android/server/biometrics/Utils.java)', 1), ('(3,NDK,/android/jobscheduler/cts/TestAppInterface.java)', 1), ('(2,NDK,/android/widget/cts/SpinnerTest.java)', 1), ('(4,NDK,/android/app/cts/InstrumentationTest.java)', 1), ('(1,NDK,/com/android/cts/atracetestapp/AtraceNdkMethods.java)', 1), ('(2,NDK,/android/text/method/cts/TextKeyListenerTest.java)', 1), ('(1,NDK,/com/android/ndkaudio/AudioRecorder.java)', 1), ('(1,NDK,/android/hdmicec/cts/RemoteControlPassthrough.java)', 1), ('(25,NDK,/android/view/cts/ViewTest.java)', 1), ('(3,NDK,/android/webkit/cts/WebViewTest.java)', 1), ('(41,NDK,/android/media/cts/NdkMediaCodec.java)', 1), ('(2,NDK,/android/mediav2/cts/CodecTestBase.java)', 1), ('(1,NDK,/android/media/tv/cts/TvViewTest.java)', 1), ('(8,NDK,/android/widget/cts/DatePickerTest.java)', 1), ('(1,NDK,/android/media/cts/InputSurface.java)', 1), ('(4,NDK,/com/android/cts/verifier/security/FingerprintBoundKeysTest.java)', 1), ('(5,NDK,/android/media/cts/NativeDecoderTest.java)', 1), ('(1,NDK,/android/opengl/cts/EglConfigGLSurfaceView.java)', 1), ('(3,NDK,/android/widget/cts/ListViewTest.java)', 1), ('(2,NDK,/android/security/identity/cts/UserAuthTest.java)', 1), ('(5,NDK,/android/keystore/cts/KeyChainTest.java)', 1), ('(1,NDK,/com/android/cts/verifier/biometrics/BiometricStrongTests.java)', 1), ('(6,NDK,/com/android/cts/releaseparser/SoParserTest.java)', 1), ('(4,NDK,/android/view/inputmethod/cts/InputMethodServiceTest.java)', 1), ('(26,NDK,/com/android/cts/apicoverage/NdkApiXmlReport.java)', 1), ('(2,NDK,/android/keystore/cts/CipherTest.java)', 1), ('(1,NDK,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(4,NDK,/android/app/cts/LauncherActivityTest.java)', 1), ('(1,NDK,/android/os/cts/SharedMemoryTest.java)', 1), ('(1,NDK,/android/mediastress/cts/SurfaceTextureGLSurfaceView.java)', 1), ('(9,NDK,/com/android/cts/apicoverage/ApkNdkApiReport.java)', 1), ('(4,NDK,/android/app/cts/AlertDialog_BuilderTest.java)', 1), ('(90,NDK,/android/widget/cts/TimePickerTest.java)', 1), ('(2,NDK,/android/widget/cts/SearchViewTest.java)', 1), ('(1,NDK,/com/android/cts/verifier/managedprovisioning/ByodFlowTestHelper.java)', 1), ('(3,NDK,/android/server/wm/ActivityManagerTestBase.java)', 1), ('(3,NDK,/android/mediadrm/cts/NativeMediaDrmClearkeyTest.java)', 1), ('(1,NDK,/android/widget/cts/ExpandableListTester.java)', 1), ('(2,NDK,/android/widget/cts/ExpandableListViewWithHeadersTest.java)', 1), ('(6,NDK,/android/server/biometrics/BiometricCryptoTests.java)', 1), ('(1,NDK,/android/keystore/cts/SecretKeyFactoryTest.java)', 1), ('(1,NDK,/com/android/cts/verifier/biometrics/Utils.java)', 1), ('(3,NDK,/android/text/method/cts/NumberKeyListenerTest.java)', 1), ('(4,NDK,/android/text/method/cts/TimeKeyListenerTest.java)', 1), ('(2,NDK,/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java)', 1)]"	"[('([2:/android/widget/cts/TextViewTest.java]:[NDK]:[2]:method_text:[ mTextView.getText().toString());        });        mInstrumentation.waitForIdleSync();    }   ])', 2), ('([2:/android/media/cts/EncodeDecodeTest.java]:[NDK]:[2]:method_text:[  * a PersistentSurface and decoded onto a Surface.  The output is checked for validity.     */   ])', 2), ('([2:/android/media/cts/DecoderTest.java]:[NDK]:[2]:method_text:[              true /* useNdk */);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.R)   ])', 2), ('([4:/android/widget/cts/ListPopupWindowTest.java]:[NDK]:[4]:method_text:[ectedListener);        verifyNoMoreInteractions(mPopupWindowBuilder.mOnDismissListener);    }   ])', 2), ('([6:/android/text/method/cts/DigitsKeyListenerTest.java]:[NDK]:[6]:method_text:[ not be accepted,     *     because text view accepts only one decimal point per field.     */   ])', 2), ('([1:/com/android/ndkaudio/AudioPlayer.java]:[NDK]:[1]:method_text:[ proxyObj);    public native long GetLastSLResult();    public native void ClearLastSLResult();}])', 1), ('([2:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[NDK]:[2]:method_text:[inal String KEY_NAME = ""nice_key"";    private static final String KEYSTORE = ""AndroidKeyStore"";   ])', 1), ('([1:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[NDK]:[1]:method_text:[    assertEquals(KeyProperties.AUTH_DEVICE_CREDENTIAL, info.getUserAuthenticationType());    }   ])', 1), ('([1:/android/extractnativelibs/cts/CtsExtractNativeLibsHostTestBase.java]:[NDK]:[1]:method_text:[IG_SUFFIX);        return installPackageIncrementalFromFiles(apkFile, v4SignatureFile, """");    }}])', 1), ('([1:/android/jobscheduler/cts/ConnectivityConstraintTest.java]:[NDK]:[1]:method_text:[quires a network connection, and verify that it runs even     * when if an app is idle.     */   ])', 1), ('([1:/android/jobscheduler/cts/ConnectivityConstraintTest.java]:[NDK]:[1]:method_text:[work connection, and verify that it runs even     * when multiple firewalls are active.     */   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[NDK]:[2]:method_text:[rtEquals(selectionEnd, Selection.getSelectionEnd(mTextView.getText()));    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[NDK]:[1]:method_text:[ngText(text, 1);  // Leave cursor at end.        input.endBatchEdit();    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[NDK]:[1]:method_text:[ mTextView.getText().toString());        });        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[NDK]:[1]:method_text:[ew.onRestoreInstanceState(state);        });        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[NDK]:[2]:method_text:[().toString());        });        mInstrumentation.waitForIdleSync();    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[NDK]:[2]:method_text:[T_LEFT);        assertEquals(""abbcc"", mTextView.getText().toString());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[NDK]:[2]:method_text:[ngth() / 2;        return spannable.getSpans(at, at, type).length > 0;    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[NDK]:[1]:method_text:[xtView, KeyEvent.KEYCODE_DEL);        assertEquals(""a"", mTextView.getText().toString());    }   ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[NDK]:[4]:method_text:[t.setSource(source);        CtsKeyEventUtil.sendKey(instrumentation, targetView, event);    }   ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[NDK]:[1]:method_text:[ForIdleSync();        assertNull(mTextView.getTransformationMethod());    }    @UiThreadTest   ])', 1), ('([1:/android/media/cts/EncodeDecodeTest.java]:[NDK]:[1]:method_text:[byte[] buffers and decoded into ByteBuffers.  The output is checked for     * validity.     */   ])', 1), ('([2:/android/media/cts/EncodeDecodeTest.java]:[NDK]:[2]:method_text:[hrough     * a Surface and decoded onto a Surface.  The output is checked for validity.     */   ])', 1), ('([15:/android/media/cts/EncodeDecodeTest.java]:[NDK]:[15]:method_text:[tePresentationTime(int frameIndex) {        return 132 + frameIndex * 1000000 / FRAME_RATE;    }}])', 1), ('([1:/com/android/cts/verifier/audio/MidiNativeTestActivity.java]:[NDK]:[1]:method_text:[class USBMidiEchoReceiver */    } /* class BTMidiTestModule */} /* class MidiNativeTestActivity */])', 1), ('([2:/com/android/cts/verifier/projection/offscreen/ProjectionOffscreenActivity.java]:[NDK]:[2]:method_text:[ader.acquireLatestImage();        if (image != null) {            image.close();        }    }}])', 1), ('([2:/android/media/cts/AudioPlayRoutingNative.java]:[NDK]:[2]:method_text:[  }    //    // Tests    //    // Test a basic Aquire/Release cycle on the default player.   ])', 1), ('([2:/android/widget/cts/NumberPickerTest.java]:[NDK]:[2]:method_text:[           MotionEvent.ACTION_UP, x, y, 0);        mInstrumentation.sendPointerSync(event);    }}])', 1), ('([1:/android/view/inputmethod/cts/util/TestUtils.java]:[NDK]:[1]:method_text:[sionIdentity(() -> {            runShellCommandOrThrow(""am force-stop "" + pkg);        });    }}])', 1), ('([2:/android/app/cts/ToolbarActionBarTest.java]:[NDK]:[2]:method_text:[e(menuIsVisible[0]);        assertFalse(mActivity.getToolbar().isOverflowMenuShowing());    }   ])', 1), ('([1:/com/android/compatibility/common/util/ShellUtils.java]:[NDK]:[1]:method_text:[nore"";        runShellCommand(""appops set %s SYSTEM_ALERT_WINDOW %s"", packageName, action);    }}])', 1), ('([1:/android/webkit/cts/WebViewClientTest.java]:[NDK]:[1]:method_text:[      return webViewClient.hasOnUnhandledKeyEventCalled();            }        }.run();    }   ])', 1), ('([2:/android/media/cts/MediaExtractorDeviceSideTest.java]:[NDK]:[2]:method_text:[ extractUsingNdkMediaExtractor(mAssetManager, SAMPLE_PATH, /* withAttachedJvm= */ false);    }   ])', 1), ('([2:/android/media/cts/MediaExtractorDeviceSideTest.java]:[NDK]:[2]:method_text:[  extractUsingNdkMediaExtractor(mAssetManager, SAMPLE_PATH, /* withAttachedJvm= */ true);    }   ])', 1), ('([1:/android/media/cts/MediaExtractorDeviceSideTest.java]:[NDK]:[1]:method_text:[MediaExtractor(            AssetManager assetManager, String assetPath, boolean withAttachedJvm);}])', 1), ('([2:/android/widget/cts/AbsSeekBarTest.java]:[NDK]:[2]:method_text:[yEvent);        assertEquals(oldProgress - keyProgressIncrement, seekBar.getProgress());    }   ])', 1), ('([1:/com/android/cts/apicoverage/CtsReportParser.java]:[NDK]:[1]:method_text:[            return null; // Never will happen because printUsage will call exit(1)        }    }}])', 1), ('([1:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[NDK]:[1]:method_text:[      assertEquals(KeyEvent.META_SHIFT_MASK, MetaKeyKeyListener.getMetaState("""", event));    }   ])', 1), ('([1:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[NDK]:[1]:method_text:[eyKeyListener.getMetaState(null, MetaKeyKeyListener.META_SYM_ON,                event));    }   ])', 1), ('([1:/android/widget/cts/ToolbarTest.java]:[NDK]:[1]:method_text:[Equals(0, mActivity.mPrepareMenuCount);        assertEquals(0, mActivity.mCreateMenuCount);    }}])', 1), ('([1:/android/media/cts/MediaActivityTest.java]:[NDK]:[1]:method_text:[hanges a stream volume even after the session is released,     * without being ignored.     */   ])', 1), ('([2:/android/media/cts/MediaActivityTest.java]:[NDK]:[2]:method_text:[yEvent.KEYCODE_VOLUME_UP);            return checkAnyStreamVolumeChanged();        }));    }   ])', 1), ('([1:/android/media/cts/MediaActivityTest.java]:[NDK]:[1]:method_text:[ent(testKeyEvent);        assertTrue(latch.await(WAIT_TIME_MS, TimeUnit.MILLISECONDS));    }   ])', 1), ('([4:/android/media/cts/MediaActivityTest.java]:[NDK]:[4]:method_text:[unexpected InterruptedException"");            }        }        return pollingCount >= 0;    }}])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[vent.KEYCODE_BACK);        PollingCheck.waitFor(() -> mActivity.onCancelListenerCalled);    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[  sendKeys(KeyEvent.KEYCODE_BACK);        assertFalse(mActivity.onCancelListenerCalled);    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[    PollingCheck.waitFor(() -> {            return mActivity.onCancelListenerCalled; });    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[e, defValue),                ta.getInt(R.styleable.TextAppearance_textStyle, defValue));    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[CODE_BACK);        PollingCheck.waitFor(() -> {            return d.isOnStopCalled; });    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[ sendKeys(KeyEvent.KEYCODE_ESCAPE);        PollingCheck.waitFor(() -> d.isOnStopCalled);    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[iew in dialog        assertEquals(d.getWindow().getCurrentFocus(), d.getCurrentFocus());    }   ])', 1), ('([2:/android/app/cts/DialogTest.java]:[NDK]:[2]:method_text:[ssertEquals(KeyEvent.KEYCODE_BACK, d.keyDownCode);        assertTrue(d.onKeyDownReturn);    }   ])', 1), ('([3:/android/app/cts/DialogTest.java]:[NDK]:[3]:method_text:[  * the user canceling the menu with the back/menu button, or when an item is selected).     */   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[lled should be true, see bug 1716918.        assertFalse(d.isOnContextMenuClosedCalled);    }   ])', 1), ('([2:/android/app/cts/DialogTest.java]:[NDK]:[2]:method_text:[        mScenario.onActivity(activity -> {            d.takeKeyEvents(get);        });    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[     sendKeys(KeyEvent.KEYCODE_BACK);        PollingCheck.waitFor(() -> !d.isShowing());    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[isShowing());        sendKeys(KeyEvent.KEYCODE_BACK);        assertTrue(d.isShowing());    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[   sendKeys(KeyEvent.KEYCODE_ESCAPE);        PollingCheck.waitFor(() -> !d.isShowing());    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[. Cancel the dialog.     * 2. Set a listener to be invoked when the dialog is canceled.     */   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[NDK]:[1]:method_text:[    * 2. set onDismissListener to null, it will not changed flag after dialog dismissed.     */   ])', 1), ('([2:/android/app/cts/DialogTest.java]:[NDK]:[2]:method_text:[       isShowContextMenuCalled = true;            return super.showContextMenu();        }    }}])', 1), ('([1:/android/graphics/cts/AImageDecoderTest.java]:[NDK]:[1]:method_text:[ANDROID_BITMAP_FORMAT_A_8 = 8;    private static final int ANDROID_BITMAP_FORMAT_RGBA_F16 = 9;   ])', 1), ('([3:/android/media/cts/MediaExtractorHostSideTest.java]:[NDK]:[3]:method_text:[t())                .isEqualTo(MediametricsMessage.ExtractorData.EntryPoint.NDK_NO_JVM);    }   ])', 1), ('([3:/android/media/cts/MediaExtractorHostSideTest.java]:[NDK]:[3]:method_text:[))                .isEqualTo(MediametricsMessage.ExtractorData.EntryPoint.NDK_WITH_JVM);    }   ])', 1), ('([2:/android/widget/cts/BackwardNavigationTest.java]:[NDK]:[2]:method_text:[vent.KEYCODE_SHIFT_LEFT);            assertTrue(mFocusedViews.get(i).hasFocus());        }    }}])', 1), ('([4:/android/text/method/cts/DateTimeKeyListenerTest.java]:[NDK]:[4]:method_text:[protected char[] getAcceptedChars() {            return super.getAcceptedChars();        }    }}])', 1), ('([5:/com/android/cts/verifier/managedprovisioning/ByodFlowTestActivity.java]:[NDK]:[5]:method_text:[text) {        return context.getSharedPreferences(PROVISIONING_PREFERENCES, MODE_PRIVATE);    }}])', 1), ('([2:/android/widget/cts/AbsListViewTest.java]:[NDK]:[2]:method_text:[mListView.getSelectedItemPosition());        assertTrue(mListView.shouldDrawSelector());    }   ])', 1), ('([2:/android/widget/cts/AbsListViewTest.java]:[NDK]:[2]:method_text:[oid resetIsOnScrollChangedCalled() {            mIsOnScrollChangedCalled = false;        }    }}])', 1), ('([4:/android/appsecurity/cts/AuthBoundKeyTest.java]:[NDK]:[4]:method_text:[    public void tearDown() throws Exception {        getDevice().uninstallPackage(PKG);    }   ])', 1), ('([2:/android/appsecurity/cts/AuthBoundKeyTest.java]:[NDK]:[2]:method_text:[           getDevice().executeShellCommand(""cmd lock_settings clear --old 12345"");        }    }}])', 1), ('([3:/android/server/wm/WindowFocusTests.java]:[NDK]:[3]:method_text:[     * - The window which lost top-focus can receive display-unspecified cancel events.     */   ])', 1), ('([3:/android/server/wm/WindowFocusTests.java]:[NDK]:[3]:method_text:[ Test if a display targeted by a key event can be moved to top in a single-focus system.     */   ])', 1), ('([6:/android/text/method/cts/BaseKeyListenerTest.java]:[NDK]:[6]:method_text:[lectionStart(content));        assertEquals(offset, Selection.getSelectionEnd(content));    }   ])', 1), ('([3:/android/text/method/cts/BaseKeyListenerTest.java]:[NDK]:[3]:method_text:[eyOther never works.//        assertEquals(""13abcd456"", mTextView.getText().toString());    }   ])', 1), ('([1:/android/media/cts/InputSurfaceInterface.java]:[NDK]:[1]:method_text:[configure(NdkMediaCodec codec);    void updateSize(int width, int height);    void release();}])', 1), ('([1:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[NDK]:[1]:method_text:[ence username) {        mActivity.onUsername((v) -> v.setText(username));    }    @Presubmit   ])', 1), ('([7:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[NDK]:[7]:method_text:[UiHiddenEvent(mActivity.getUsername());        mUiBot.assertNoDatasets();    }    @Presubmit   ])', 1), ('([2:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[NDK]:[2]:method_text:[dKeyEvent(""KEYCODE_B"");        mUiBot.assertDatasets(regexPlain, authRegex, kitchnSync);    }   ])', 1), ('([3:/android/hdmicec/cts/HdmiCecClientWrapper.java]:[NDK]:[3]:method_text:[*/            CLog.w(new CecClientWrapperException(ErrorCodes.CecClientStop, e));        }    }}])', 1), ('([1:/android/hdmicec/cts/audio/HdmiCecRemoteControlPassThroughTest.java]:[NDK]:[1]:method_text:[     * [secondKeycode]} before a {@code <User Control Released> [firstKeycode]} is sent.     */   ])', 1), ('([1:/android/widget/cts/ExpandableListViewBasicTest.java]:[NDK]:[1]:method_text:[id not expand"", mExpandableListView.isGroupExpanded(groupPos));        return groupPos;    }   ])', 1), ('([1:/android/widget/cts/ExpandableListViewBasicTest.java]:[NDK]:[1]:method_text:[    assertFalse(""Group did not collapse"", mExpandableListView.isGroupExpanded(groupPos));    }   ])', 1), ('([1:/android/widget/cts/ExpandableListViewBasicTest.java]:[NDK]:[1]:method_text:[as given to the inserted group"",                mExpandableListView.isGroupExpanded(0));    }   ])', 1), ('([1:/com/android/cts/appdataisolation/appa/AppATests.java]:[NDK]:[1]:method_text:[rue;        }        return PropertyUtil.isVendorApiLevelNewerThan(Build.VERSION_CODES.R);    }}])', 1), ('([2:/android/media/cts/DecoderTest.java]:[NDK]:[2]:method_text:[384kbps_32000hz.webm"", 300,                true /* useNdk */);    }    @NonMediaMainlineTest   ])', 1), ('([2:/android/media/cts/DecoderTest.java]:[NDK]:[2]:method_text:[_128kbps_44100hz.mp4"", 300,                true /* useNdk */);    }    @NonMediaMainlineTest   ])', 1), ('([8:/android/media/cts/DecoderTest.java]:[NDK]:[8]:method_text:[ntation());        decoder.stop();        decoder.release();        extractor.release();    }}])', 1), ('([1:/android/autofillservice/cts/dropdown/LoginActivityTest.java]:[NDK]:[1]:method_text:[tends LoginActivityCommonTestCase {    private static final String TAG = ""LoginActivityTest"";   ])', 1), ('([1:/android/autofillservice/cts/dropdown/LoginActivityTest.java]:[NDK]:[1]:method_text:[eck the results.        mActivity.assertAutoFilled();        mUiBot.assertNoDatasets();    }   ])', 1), ('([2:/android/widget/cts/EditTextTest.java]:[NDK]:[2]:method_text:[ivate static final int FRAMEWORK_MAX_LENGTH_FOR_SINGLE_LINE_EDIT_TEXT = 5000;    @UiThreadTest   ])', 1), ('([1:/android/os/cts/BuildTest.java]:[NDK]:[1]:method_text:[ile(""^([0-9A-Za-z._-]+)$"");    /** Tests that check for valid values of constants in Build. */   ])', 1), ('([1:/android/os/cts/BuildTest.java]:[NDK]:[1]:method_text:[rFormatException ignore) {            return Build.VERSION_CODES.CUR_DEVELOPMENT;        }    }}])', 1), ('([1:/android/server/wm/LayoutTests.java]:[NDK]:[1]:method_text:[ (activity) {                return childWindowGotKeyEvent[0];            }        });    }   ])', 1), ('([1:/android/mediastress/cts/SurfaceTextureRenderer.java]:[NDK]:[1]:method_text:[);        }    }    public SurfaceTexture getSurfaceTexture() {        return mSurface;    }}])', 1), ('([1:/android/widget/cts/ListPopupWindowTest.java]:[NDK]:[1]:method_text:[r.mOnDismissListener, never()).onDismiss();        assertTrue(mPopupWindow.isShowing());    }   ])', 1), ('([1:/android/widget/cts/ListPopupWindowTest.java]:[NDK]:[1]:method_text:[mOnDismissListener, times(1)).onDismiss();        assertFalse(mPopupWindow.isShowing());    }   ])', 1), ('([1:/android/graphics/cts/SyncTest.java]:[NDK]:[1]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[NDK]:[1]:method_text:[ate class, like TestNoCSDMux, instead of being part of         * TestSimpleMux?         */       ])', 1), ('([1:/android/binder/cts/JavaClientTest.java]:[NDK]:[1]:method_text:[bleLater(""a""));        assertEquals(""foo"", compatTest.RepeatStringNullableLater(""foo""));    }   ])', 1), ('([2:/com/android/cts/mockime/MockIme.java]:[NDK]:[2]:method_text:[   recordEventInternal(""onInlineSuggestionLongClickedEvent"", runnable, arguments);        }    }}])', 1), ('([2:/android/app/cts/AlertDialogTest.java]:[NDK]:[2]:method_text:[nt(KeyEvent.ACTION_UP, KeyEvent.KEYCODE_0));        assertTrue(mActivity.onKeyUpCalled);    }   ])', 1), ('([1:/android/app/cts/AlertDialogTest.java]:[NDK]:[1]:method_text:[ync(KeyEvent.KEYCODE_BACK);        PollingCheck.waitFor(() -> mActivity.onCancelCalled);    }   ])', 1), ('([1:/android/app/cts/AlertDialogTest.java]:[NDK]:[1]:method_text:[.sendKeyDownUpSync(KeyEvent.KEYCODE_BACK);        assertFalse(mActivity.onCancelCalled);    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[NDK]:[2]:method_text:[t,                nCompress(bitmap, nativeCompressFormat(format), 50, stream, storage));    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[NDK]:[2]:method_text:[    nValidateBitmapInfo(hardware, 10, 20, true);        nValidateNdkAccessFails(bitmap);    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[NDK]:[1]:method_text:[            assertEquals(""Config: "" + pair.config, pair.format, nativeFormat);        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[NDK]:[1]:method_text:[ssertEquals(""Config: "" + pair.config, pair.format, nativeFormat);            }        }    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[NDK]:[2]:method_text:[            new Object[] { Config.RGBA_F16,  ANDROID_BITMAP_FORMAT_RGBA_F16 },        };    }   ])', 1), ('([2:/android/graphics/cts/BitmapTest.java]:[NDK]:[2]:method_text:[Bitmap.recycle();                }                bm.recycle();            }        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[NDK]:[1]:method_text:[            assertEquals(DataSpace.ADATASPACE_SCRGB_LINEAR, nGetDataSpace(bm));        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[NDK]:[1]:method_text:[ssertEquals(DataSpace.ADATASPACE_SRGB_LINEAR, nGetDataSpace(bm));            }        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[NDK]:[1]:method_text:[e.fromColorSpace(colorSpace),                        dataSpace);            }        }    }   ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[NDK]:[1]:method_text:[Space = nGetDataSpace(bm);        assertEquals(DataSpace.ADATASPACE_UNKNOWN, dataSpace);    }   ])', 1), ('([3:/android/graphics/cts/BitmapTest.java]:[NDK]:[3]:method_text:[ paint = new Paint();        paint.setShader(gradient);        canvas.drawPaint(paint);    }   ])', 1), ('([6:/android/graphics/cts/BitmapTest.java]:[NDK]:[6]:method_text:[          + "" at quality "" + quality, matched);                }            }        }    }   ])', 1), ('([4:/android/graphics/cts/BitmapTest.java]:[NDK]:[4]:method_text:[tory.Options();        options.inPreferredConfig = Config.HARDWARE;        return options;    }}])', 1), ('([7:/android/media/cts/VideoCodecTest.java]:[NDK]:[7]:method_text:[                        "" for bitrate "" + TEST_BITRATES_SET[i]);            }        }    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[rows Exception {        internalTestSyncFrame(VP8_MIME, VIDEO_ControlRateConstant, true);    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[ows Exception {        internalTestSyncFrame(VP8_MIME, VIDEO_ControlRateVariable, true);    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[rows Exception {        internalTestSyncFrame(VP9_MIME, VIDEO_ControlRateConstant, true);    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[ows Exception {        internalTestSyncFrame(VP9_MIME, VIDEO_ControlRateVariable, true);    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[rows Exception {        internalTestSyncFrame(AVC_MIME, VIDEO_ControlRateConstant, true);    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[ows Exception {        internalTestSyncFrame(AVC_MIME, VIDEO_ControlRateVariable, true);    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[ows Exception {        internalTestSyncFrame(HEVC_MIME, VIDEO_ControlRateConstant, true);    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[ws Exception {        internalTestSyncFrame(HEVC_MIME, VIDEO_ControlRateVariable, true);    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[ion {        internalTestDynamicBitrateChange(VP8_MIME, VIDEO_ControlRateConstant, true);    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[ion {        internalTestDynamicBitrateChange(VP8_MIME, VIDEO_ControlRateVariable, true);    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[ion {        internalTestDynamicBitrateChange(VP9_MIME, VIDEO_ControlRateConstant, true);    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[ion {        internalTestDynamicBitrateChange(VP9_MIME, VIDEO_ControlRateVariable, true);    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[ion {        internalTestDynamicBitrateChange(AVC_MIME, VIDEO_ControlRateConstant, true);    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[ion {        internalTestDynamicBitrateChange(AVC_MIME, VIDEO_ControlRateVariable, true);    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[on {        internalTestDynamicBitrateChange(HEVC_MIME, VIDEO_ControlRateConstant, true);    }   ])', 1), ('([1:/android/media/cts/VideoCodecTest.java]:[NDK]:[1]:method_text:[n {        internalTestDynamicBitrateChange(HEVC_MIME, VIDEO_ControlRateVariable, true);    }   ])', 1), ('([12:/android/widget/cts/TabHostTest.java]:[NDK]:[12]:method_text:[0,                        KeyEvent.normalizeMetaState(metaState)));            }        }    }}])', 1), ('([1:/com/android/cts/atracetestapp/AtraceDeviceTests.java]:[NDK]:[1]:method_text:[        assertTrue(Trace.isEnabled());        assertTrue(AtraceNdkMethods.isEnabled());    }   ])', 1), ('([1:/com/android/cts/atracetestapp/AtraceDeviceTests.java]:[NDK]:[1]:method_text:[       assertFalse(Trace.isEnabled());        assertFalse(AtraceNdkMethods.isEnabled());    }   ])', 1), ('([2:/com/android/cts/atracetestapp/AtraceDeviceTests.java]:[NDK]:[2]:method_text:[eginEndSection"");        Trace.endSection();        AtraceNdkMethods.beginEndSection();    }   ])', 1), ('([2:/com/android/cts/atracetestapp/AtraceDeviceTests.java]:[NDK]:[2]:method_text:[eDeviceTest::asyncBeginEndSection"", 42);        AtraceNdkMethods.asyncBeginEndSection();    }   ])', 1), ('([2:/com/android/cts/atracetestapp/AtraceDeviceTests.java]:[NDK]:[2]:method_text:[r(""AtraceDeviceTest::counter"", 9223372000000005807L);        AtraceNdkMethods.counter();    }   ])', 1), ('([5:/android/jni/cts/LinkerNamespacesHelper.java]:[NDK]:[5]:method_text:[    }    public static native void incrementGlobal();    public static native int getGlobal();}])', 1), ('([4:/android/media/cts/NdkInputSurface.java]:[NDK]:[4]:method_text:[LDisplay = 0;        mEGLContext = 0;        mEGLSurface = 0;        mNativeWindow = 0;    }}])', 1), ('([1:/android/hardware/camera2/cts/CameraManagerTest.java]:[NDK]:[1]:method_text:[    }    // Test: that properties queried between the Java SDK and the C++ NDK are equivalent.   ])', 1), ('([2:/android/hardware/camera2/cts/CameraManagerTest.java]:[NDK]:[2]:method_text:[t lensFacing);    // Test: that an exception is thrown if an invalid device id is passed down.   ])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[NDK]:[1]:method_text:[ice exited doze"",                mTestAppInterface.awaitJobStart(DEFAULT_WAIT_TIMEOUT));    }   ])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[NDK]:[1]:method_text:[CKGROUND_RESTRICTION,                mTestAppInterface.getLastParams().getStopReason());    }   ])', 1), (""([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[NDK]:[1]:method_text:[tStopReason());    }    @RequiresDevice // Emulators don't always have access to wifi/network   ])"", 1), ('([10:/android/media/cts/VideoCodecTestBase.java]:[NDK]:[10]:method_text:[        referenceStream.close();        decodedStream.close();        return statistics;    }}])', 1), ('([5:/android/video/cts/CodecPerformanceTestBase.java]:[NDK]:[5]:method_text:[SawDecOutputEOS = true;        }        mDecoder.releaseOutputBuffer(bufferIndex, render);    }}])', 1), ('([5:/com/android/cts/mockime/MockImeSession.java]:[NDK]:[5]:method_text:[       return callCommandInternal(""verifyGetGestureDetectorOnDisplayContext"", new Bundle());    }}])', 1), ('([2:/android/view/cts/ContentPaneFocusTest.java]:[NDK]:[2]:method_text:[eens.            mActivityRule.runOnUiThread(() -> assertTrue(v1.hasFocus()));        }    }   ])', 1), ('([3:/android/view/cts/ContentPaneFocusTest.java]:[NDK]:[3]:method_text:[vent.META_META_ON);        mInstrumentation.sendKeySync(keyEvent);        Thread.sleep(2);    }}])', 1), ('([22:/com/android/cts/verifier/managedprovisioning/AuthenticationBoundKeyTestActivity.java]:[NDK]:[22]:method_text:[setMessage(R.string.sec_fp_dialog_message);            return builder.create();        }    }}])', 1), ('([1:/android/server/wm/CommandSession.java]:[NDK]:[1]:method_text:[o[] newArray(int size) {                return new SizeInfo[size];            }        };    }}])', 1), ('([6:/com/android/compatibility/common/deviceinfo/VintfDeviceInfo.java]:[NDK]:[6]:method_text:[.addResult(""platform_sepolicy_version"", VintfObject.getPlatformSepolicyVersion());        }    }}])', 1), ('([1:/android/view/cts/SearchEventTest.java]:[NDK]:[1]:method_text:[e id = se.getInputDevice();        assertNotNull(id);        assertEquals(-1, id.getId());    }}])', 1), ('([2:/android/util/cts/ArrayMapTest.java]:[NDK]:[2]:method_text:[next();            fail();        } catch (NoSuchElementException expected) {        }    }   ])', 1), ('([1:_target/com/android/test/usesnativesharedlibrary/LoadTest.java]:[NDK]:[1]:method_text:[()));    }    /**     * Tests if libs listed in unavailable.txt are all non-loadable     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[NDK]:[1]:method_text:[ck(capabilityCallback);            uiAutomation.dropShellPermissionIdentity();        }    }   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[NDK]:[1]:method_text:[ Verify that startTetheredHotspot with specific channel config.     * @throws Exception     */   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[NDK]:[2]:method_text:[fiManager#connect(int, WifiManager.ActionListener)} to an existing saved     * network.     */   ])', 1), ('([1:/android/view/cts/View_InitialFocusTest.java]:[NDK]:[1]:method_text:[ch-mode        View first = root.findFocus();        return new View[]{initial, first};    }   ])', 1), ('([6:/android/text/method/cts/DateKeyListenerTest.java]:[NDK]:[6]:method_text:[protected char[] getAcceptedChars() {            return super.getAcceptedChars();        }    }}])', 1), ('([2:/android/hardware/cts/SensorNativeTest.java]:[NDK]:[2]:method_text:[de    public void tearDown() throws Exception {        nativeTearDown(mNativeInstance);    }   ])', 1), ('([2:/android/view/cts/ASurfaceControlTest.java]:[NDK]:[2]:method_text:[ +/- 10% error rate. This is based on the error    // rate allowed in the SurfaceViewSyncTests   ])', 1), ('([19:/com/android/compatibility/common/util/CtsKeyEventUtil.java]:[NDK]:[19]:method_text:[                ""This method can not be called from the main application thread"");        }    }}])', 1), ('([1:/android/view/cts/KeyEventInjectionTest.java]:[NDK]:[1]:method_text:[gPress(TEST_KEYCODE);    }    /**     * Long press event can be injected through ADB     */   ])', 1), ('([1:/android/view/cts/KeyEventInjectionTest.java]:[NDK]:[1]:method_text:[ess(TEST_KEYCODE);    }    /**     * Inject a regular key event through UiAutomation     */   ])', 1), ('([1:/android/view/cts/KeyEventInjectionTest.java]:[NDK]:[1]:method_text:[heckKeyPress(TEST_KEYCODE);    }    /**     * Inject a regular key event through ADB     */   ])', 1), ('([3:/android/view/cts/KeyEventInjectionTest.java]:[NDK]:[3]:method_text:[ent(KeyEvent.ACTION_UP, keyCode, 0 /* repeatCount */);        assertLongPressNotReceived();    }}])', 1), ('([1:/android/keystore/cts/KeyFactoryTest.java]:[NDK]:[1]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 1), ('([4:/android/text/method/cts/DigitsKeyListenerTest.java]:[NDK]:[4]:method_text:[ot be accepted,     *     because text view accepts minus sign iff it at the beginning.     */   ])', 1), (""([6:/android/text/method/cts/DigitsKeyListenerTest.java]:[NDK]:[6]:method_text:[ed.     *  5. remove DigitsKeyListener and Press '5' key, this key will not be accepted     */   ])"", 1), ('([5:/android/text/method/cts/DigitsKeyListenerTest.java]:[NDK]:[5]:method_text:[TextView, KeyEvent.KEYCODE_5);        assertEquals(""5"", mTextView.getText().toString());    }   ])', 1), ('([1:/android/hardware/cts/helpers/SensorRatePermissionDirectReportTestHelper.java]:[NDK]:[1]:method_text:[edMemorySize);        eventPool.reset();        byteBuffer.clear();        return events;    }}])', 1), ('([1:/android/mediastress/cts/NativeMediaActivity.java]:[NDK]:[1]:method_text:[ad jni on initialization */    static {         System.loadLibrary(""ctsmediastress_jni"");    }}])', 1), ('([2:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[NDK]:[2]:method_text:[ */);        verify(inputConnection, times(1)).commitContent(inputContentInfo, 0, null);    }   ])', 1), ('([3:/android/mediav2/cts/ExtractorTest.java]:[NDK]:[3]:method_text:[        assertEquals(""SDK and NDK checksums mismatch"", sdkChecksum, ndkChecksum);        }       ])', 1), ('([6:/android/mediav2/cts/ExtractorTest.java]:[NDK]:[6]:method_text:[     }        private native boolean nativeTestDataSource(String srcPath, String srcUrl);       ])', 1), ('([3:/android/mediav2/cts/ExtractorTest.java]:[NDK]:[3]:method_text:[te point for a given         * choice of timestamp and mode.         */        @LargeTest       ])', 1), ('([2:/android/view/cts/TooltipTest.java]:[NDK]:[2]:method_text:[/ 2 + offsetY,                0);        event.setSource(source);        return event;    }   ])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/DeviceAdminTestReceiver.java]:[NDK]:[1]:method_text:[verride        public IBinder onBind(Intent intent) {            return mBinder;        }    }}])', 1), ('([2:/android/widget/cts/AutoCompleteTextViewTest.java]:[NDK]:[2]:method_text:[            PollingCheck.waitFor(() -> STRING_TEST.equals(filter.getResult()));        }    }   ])', 1), ('([10:/android/widget/cts/AutoCompleteTextViewTest.java]:[NDK]:[10]:method_text:[tText().toString());        assertFalse(mAutoCompleteTextView.isPerformingCompletion());    }   ])', 1), ('([2:/android/widget/cts/AutoCompleteTextViewTest.java]:[NDK]:[2]:method_text:[, eq(0), eq(WORDS[1].length()));        verifyNoMoreInteractions(mockItemClickListener);    }   ])', 1), ('([2:/android/media/cts/AudioRecordRoutingNative.java]:[NDK]:[2]:method_text:[}    //    // Tests    //    // Test a basic Aquire/Release cycle on the default recorder.   ])', 1), ('([2:/android/widget/cts/SearchView_CursorTest.java]:[NDK]:[2]:method_text:[, times(2)).onSuggestionClick(0);        verifyNoMoreInteractions(mockSuggestionListener);    }}])', 1), ('([1:/com/android/cts/verifier/security/ScreenLockBoundKeysTest.java]:[NDK]:[1]:method_text:[ failed. Key not accessible after auth"");                    }                }        }    }}])', 1), ('([10:/android/widget/cts/GridViewTest.java]:[NDK]:[10]:method_text:[eq(mGridView), any(View.class),                eq(NUM_COLUMNS), eq((long) NUM_COLUMNS));    }   ])', 1), ('([2:/android/widget/cts/GridViewTest.java]:[NDK]:[2]:method_text:[iew.mOnDetachCount);        assertFalse(theView.isTemporarilyDetached());    }    @LargeTest   ])', 1), ('([8:/android/hardware/camera2/cts/CaptureResultTest.java]:[NDK]:[8]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([2:/android/view/cts/KeyEventInterceptTest.java]:[NDK]:[2]:method_text:[tEquals(keyCode, keyEvent.getKeyCode());        assertEquals(action, keyEvent.getAction());    }}])', 1), ('([2:/android/mediadrm/cts/MediaDrmClearkeyTest.java]:[NDK]:[2]:method_text:[      }    }    /**     * Tests KEY_TYPE_RELEASE for offline license.     */    @Presubmit   ])', 1), ('([3:/com/android/cts/tagging/TaggingBaseTest.java]:[NDK]:[3]:method_text:[mmand(                ""settings put global force_non_debuggable_final_build_for_compat 0"");    }}])', 1), ('([3:/android/atrace/cts/AtraceHostTest.java]:[NDK]:[3]:method_text:[ead.getSlices().get(1);        assertEquals(""ndk::beginEndSection"", ndkSlice.getName());    }   ])', 1), ('([4:/android/atrace/cts/AtraceHostTest.java]:[NDK]:[4]:method_text:[cBeginEndSection"", ndkSlice.getName());        assertEquals(4770, ndkSlice.getCookie());    }   ])', 1), ('([25:/com/android/cts/apicoverage/CtsApiCoverage.java]:[NDK]:[25]:method_text:[                 break;            }        } finally {            out.close();        }    }}])', 1), ('([2:/android/text/method/cts/PasswordTransformationMethodTest.java]:[NDK]:[2]:method_text:[nsformedText.toString()                .equals(""\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022""));    }   ])', 1), ('([2:/android/app/cts/ActionBarTest.java]:[NDK]:[2]:method_text:[owFocusSignal.await(1000, TimeUnit.MILLISECONDS));        assertFalse(menuIsVisible[0]);    }   ])', 1), ('([1:/com/android/cts/apicoverage/GTestApiReport.java]:[NDK]:[1]:method_text:[e {            return null;        }        return new GTestApiReport(testModules, bits);    }}])', 1), ('([1:/android/server/biometrics/Utils.java]:[NDK]:[1]:method_text:[(""Unable to convert testApiStrength: ""                        + testApiStrength);        }    }}])', 1), ('([3:/android/jobscheduler/cts/TestAppInterface.java]:[NDK]:[3]:method_text:[       }    }    private interface Condition {        boolean isTrue() throws Exception;    }}])', 1), ('([1:/android/widget/cts/SpinnerTest.java]:[NDK]:[1]:method_text:[, dropDownBackground.getBounds().height(),                false, Color.YELLOW, 1, true);    }   ])', 1), ('([1:/android/widget/cts/SpinnerTest.java]:[NDK]:[1]:method_text:[erruptedException e) {            fail(""unexpected InterruptedException : ""+ e);        }    }}])', 1), ('([2:/android/app/cts/InstrumentationTest.java]:[NDK]:[2]:method_text:[ls(KeyEvent.KEYCODE_0, mActivity.getKeyDownList().get(0).getKeyCode());    }    @UiThreadTest   ])', 1), ('([2:/android/app/cts/InstrumentationTest.java]:[NDK]:[2]:method_text:[d onCreate() {            super.onCreate();            mIsOnCreateCalled = true;        }    }}])', 1), ('([1:/com/android/cts/atracetestapp/AtraceNdkMethods.java]:[NDK]:[1]:method_text:[();    public static native void asyncBeginEndSection();    public static native void counter();}])', 1), ('([1:/android/text/method/cts/TextKeyListenerTest.java]:[NDK]:[1]:method_text:[ else {            assertEquals("""", text);        }        textKeyListener.release();    }   ])', 1), ('([1:/android/text/method/cts/TextKeyListenerTest.java]:[NDK]:[1]:method_text:[(text, mTextView.getText().toString()); issue 1731439        textKeyListener.release();    }   ])', 1), ('([1:/com/android/ndkaudio/AudioRecorder.java]:[NDK]:[1]:method_text:[] dstBuff);    public native long GetLastSLResult();    public native void ClearLastSLResult();}])', 1), ('([1:/android/hdmicec/cts/RemoteControlPassthrough.java]:[NDK]:[1]:method_text:[               true);        LogHelper.assertLog(device, CLASS, ""Long press KEYCODE_BACK"");    }}])', 1), ('([2:/android/view/cts/ViewTest.java]:[NDK]:[2]:method_text:[  mInstrumentation.sendKeySync(event);        assertTrue(view.hasCalledOnKeyShortcut());    }   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[NDK]:[1]:method_text:[mentation.sendKeySync(event);        assertTrue(view.hasCalledDispatchUnhandledMove());    }   ])', 1), ('([11:/android/view/cts/ViewTest.java]:[NDK]:[11]:method_text:[istener.fired()); // checks that both up and down were received        listener.reset();    }   ])', 1), ('([7:/android/view/cts/ViewTest.java]:[NDK]:[7]:method_text:[r().removeOnPreDrawListener(this);                return true;            }        });    }   ])', 1), ('([3:/android/view/cts/ViewTest.java]:[NDK]:[3]:method_text:[PointerSync(event);        assertTrue(fitWindowsView.isInTouchMode());    }    @UiThreadTest   ])', 1), ('([1:/android/view/cts/ViewTest.java]:[NDK]:[1]:method_text:[view.hasCalledDispatchKeyEventPreIme());        assertTrue(view.hasCalledOnKeyPreIme());    }   ])', 1), ('([2:/android/webkit/cts/WebViewTest.java]:[NDK]:[2]:method_text:[ertEquals(url2, handler.getResultUrl());        mOnUiThread.requestFocusNodeHref(null);    }   ])', 1), ('([1:/android/webkit/cts/WebViewTest.java]:[NDK]:[1]:method_text:[test should be reflected in that test as necessary. See http://go/modifying-webview-cts.     */   ])', 1), ('([41:/android/media/cts/NdkMediaCodec.java]:[NDK]:[41]:method_text:[ toString() {        return String.format(""%s(%s, %x)"", getClass(), mName, mNdkMediaCodec);    }}])', 1), ('([2:/android/mediav2/cts/CodecTestBase.java]:[NDK]:[2]:method_text:[b.mCodec.stop();        cdtb.mCodec.release();        return cdtb.mOutputBuff.getBuffer();    }}])', 1), ('([1:/android/media/tv/cts/TvViewTest.java]:[NDK]:[1]:method_text:[yEvent.getAction());        assertEquals(unhandled.getKeyCode(), keyEvent.getKeyCode());    }   ])', 1), ('([8:/android/widget/cts/DatePickerTest.java]:[NDK]:[8]:method_text:[CalledOnRestoreInstanceState() {            return mCalledOnRestoreInstanceState;        }    }}])', 1), ('([1:/android/media/cts/InputSurface.java]:[NDK]:[1]:method_text:[LES20.glClear(GLES20.GL_COLOR_BUFFER_BIT);        win.swapBuffers();        win.release();    }}])', 1), ('([4:/com/android/cts/verifier/security/FingerprintBoundKeysTest.java]:[NDK]:[4]:method_text:[etMessage(R.string.sec_fp_dialog_message);            return builder.create();        }    }}])', 1), ('([5:/android/media/cts/NativeDecoderTest.java]:[NDK]:[5]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([1:/android/opengl/cts/EglConfigGLSurfaceView.java]:[NDK]:[1]:method_text:[e));                while (egl.eglGetError() != EGL10.EGL_SUCCESS);            }        }    }}])', 1), ('([1:/android/widget/cts/ListViewTest.java]:[NDK]:[1]:method_text:[der.mOnDetachCount);        assertFalse(header.isTemporarilyDetached());    }    @MediumTest   ])', 1), ('([2:/android/widget/cts/ListViewTest.java]:[NDK]:[2]:method_text:[ew.mOnDetachCount);        assertFalse(theView.isTemporarilyDetached());    }    @MediumTest   ])', 1), ('([2:/android/security/identity/cts/UserAuthTest.java]:[NDK]:[2]:method_text:[) {            throw new RuntimeException(""Error creating auth-bound key"", e);        }    }   ])', 1), ('([5:/android/keystore/cts/KeyChainTest.java]:[NDK]:[5]:method_text:[ger();        return (pm != null && pm.hasSystemFeature(""android.software.leanback_only""));    }}])', 1), ('([1:/com/android/cts/verifier/biometrics/BiometricStrongTests.java]:[NDK]:[1]:method_text:[ll tests passed"");                getPassButton().setEnabled(true);            }        }    }}])', 1), ('([3:/com/android/cts/releaseparser/SoParserTest.java]:[NDK]:[3]:method_text:[    /**     * Test {@link SoParser} with an NDK SO file     *     * @throws Exception     */   ])', 1), ('([3:/com/android/cts/releaseparser/SoParserTest.java]:[NDK]:[3]:method_text:[     * Test {@link SoParser} with an CTS GTEST EXE file     *     * @throws Exception     */   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[NDK]:[1]:method_text:[) {                // This is fine.  We actually expect timeout.            }        }    }   ])', 1), ('([3:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[NDK]:[3]:method_text:[putMethodService#onUpdateCursorAnchorInfo(CursorAnchorInfo)}     * will be called back.     */   ])', 1), ('([26:/com/android/cts/apicoverage/NdkApiXmlReport.java]:[NDK]:[26]:method_text:[ot deprecated"");        setAttribute(doc, ele, ""visibility"", ""public"");        return ele;    }}])', 1), ('([1:/android/keystore/cts/CipherTest.java]:[NDK]:[1]:method_text:[red)) {                    assertNotNull(key);                }            }        }    }   ])', 1), ('([1:/android/keystore/cts/CipherTest.java]:[NDK]:[1]:method_text:[atch (KeyStoreException e) {                // Expected behavior            }        }    }   ])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[NDK]:[1]:method_text:[ChannelSecondary = null;        }        freeSharedMemory();        super.tearDown();    }   ])', 1), ('([4:/android/app/cts/LauncherActivityTest.java]:[NDK]:[4]:method_text:[    sendKeys(KeyEvent.KEYCODE_DPAD_CENTER);        assertTrue(mActivity.isOnListItemClick);    }}])', 1), ('([1:/android/os/cts/SharedMemoryTest.java]:[NDK]:[1]:method_text:[sertFalse(nWriteByte(sharedMemory, 0, (byte) 2));        assertEquals(5, buffer.get(0));    }   ])', 1), ('([1:/android/mediastress/cts/SurfaceTextureGLSurfaceView.java]:[NDK]:[1]:method_text:[          mListener.onSurfaceDestroyed();        }        super.surfaceDestroyed(holder);    }}])', 1), ('([9:/com/android/cts/apicoverage/ApkNdkApiReport.java]:[NDK]:[9]:method_text:[ {            return null;        }        return new ApkNdkApiReport(testModules, bits);    }}])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[NDK]:[1]:method_text:[wing                    return showing;                }            }        }.run();    }   ])', 1), ('([2:/android/app/cts/AlertDialog_BuilderTest.java]:[NDK]:[2]:method_text:[     assertEquals(KeyEvent.ACTION_UP, keyEvent1Captor.getAllValues().get(1).getAction());    }   ])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[NDK]:[1]:method_text:[nregisterDataSetObserver(            android.database.DataSetObserver observer) {        }    }}])', 1), ('([18:/android/widget/cts/TimePickerTest.java]:[NDK]:[18]:method_text:[        assertEquals(43, mTimePicker.getMinute());        verifyModeClockMinuteInput();    }   ])', 1), ('([11:/android/widget/cts/TimePickerTest.java]:[NDK]:[11]:method_text:[        assertEquals(43, mTimePicker.getMinute());        verifyModeClockMinuteInput();    }   ])', 1), ('([26:/android/widget/cts/TimePickerTest.java]:[NDK]:[26]:method_text:[(6, mTimePicker.getHour());        assertEquals(initialMinute, mTimePicker.getMinute());    }   ])', 1), ('([35:/android/widget/cts/TimePickerTest.java]:[NDK]:[35]:method_text:[Parcelable onSaveInstanceState() {            return super.onSaveInstanceState();        }    }}])', 1), ('([2:/android/widget/cts/SearchViewTest.java]:[NDK]:[2]:method_text:[nce()).onQueryTextSubmit(""beta"");        verifyNoMoreInteractions(mockQueryTextListener);    }}])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/ByodFlowTestHelper.java]:[NDK]:[1]:method_text:[text, component),                    enabledState, PackageManager.DONT_KILL_APP);        }    }}])', 1), ('([3:/android/server/wm/ActivityManagerTestBase.java]:[NDK]:[3]:method_text:[ public static class ConfigChangeHandlingActivity extends CommandSession.BasicTestActivity {    }}])', 1), ('([3:/android/mediadrm/cts/NativeMediaDrmClearkeyTest.java]:[NDK]:[3]:method_text:[);        buffer.putLong(uuid.getLeastSignificantBits());        return buffer.array();    }   ])', 1), ('([1:/android/widget/cts/ExpandableListTester.java]:[NDK]:[1]:method_text:[ndex, childIndex),                    mExpandableListView.getSelectedPosition());        }    }}])', 1), ('([1:/android/widget/cts/ExpandableListViewWithHeadersTest.java]:[NDK]:[1]:method_text:[View, null);        assertFalse(mExpandableListView.isGroupExpanded(0));    }    @LargeTest   ])', 1), ('([1:/android/widget/cts/ExpandableListViewWithHeadersTest.java]:[NDK]:[1]:method_text:[ mExpandableListView, null);        assertTrue(mExpandableListView.isGroupExpanded(0));    }   ])', 1), ('([1:/android/server/biometrics/BiometricCryptoTests.java]:[NDK]:[1]:method_text:[undKey(""keyBeforeCredentialEnrolled"",                        false /* useStrongBox */));    }   ])', 1), ('([1:/android/server/biometrics/BiometricCryptoTests.java]:[NDK]:[1]:method_text:[foreBiometricEnrolled"",                            false /* useStrongBox */));        }    }   ])', 1), ('([4:/android/server/biometrics/BiometricCryptoTests.java]:[NDK]:[4]:method_text:[);                        }                    }                }            }        }    }}])', 1), ('([1:/android/keystore/cts/SecretKeyFactoryTest.java]:[NDK]:[1]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 1), ('([1:/com/android/cts/verifier/biometrics/Utils.java]:[NDK]:[1]:method_text:[eButtonRes, listener);        AlertDialog dialog = builder.create();        dialog.show();    }}])', 1), ('([3:/android/text/method/cts/NumberKeyListenerTest.java]:[NDK]:[3]:method_text:[k(accept, c);        }        public int getInputType() {            return 0;        }    }}])', 1), ('([4:/android/text/method/cts/TimeKeyListenerTest.java]:[NDK]:[4]:method_text:[protected char[] getAcceptedChars() {            return super.getAcceptedChars();        }    }}])', 1), ('([1:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[NDK]:[1]:method_text:[                  View.GONE, TIMEOUT);            expectImeInvisible(TIMEOUT);        }    }   ])', 1), ('([1:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[NDK]:[1]:method_text:[nsure it.        builder.setNavigationBarColor(navigationBarColor);        return builder;    }}])', 1)]"	""	""	"[('NDK', 272)]"	"[('[com.android.cts.atracetestapp.AtraceDeviceTests isEnabled None]', 3), ('[com.android.cts.authboundkey.AuthBoundKeyAppTest testGenerateAuthBoundKey None]', 1), ('[android.extractnativelibs.cts.CtsExtractNativeLibsHostTestBase isIncrementalInstallSupported CtsExtractNativeLibsHostTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest testCellularConstraintExecutedAndStopped_Foreground CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest testFgExpeditedJobBypassesDataSaver CtsJobSchedulerTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessMovementMethod CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_delete CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_setText CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_saveInstanceState CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_saveInstanceStateEmpty CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCopyAndPaste_byKey CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCopyAndPaste_byCtrlInsert CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCutAndPaste_byKey CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testCutAndPaste_byShiftDelete CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testPressKey CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testKeyNavigation CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewTest testAccessTransformationMethod CtsWidgetTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testEncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[android.media.cts.EncodeDecodeTest testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk CtsMediaTestCases]', 1), ('[com.android.cts.verifier.audio.MidiNativeTestActivity MidiNativeTestActivity None]', 1), ('[com.android.cts.verifier.projection.offscreen.ProjectionOffscreenActivity setPassFailButtonClickListeners None]', 1), ('[android.widget.cts.NumberPickerTest testEnterKey CtsWidgetTestCases]', 1), ('[android.view.inputmethod.cts.util.TestUtils isInteractive CtsInputMethodTestCases]', 1), ('[android.app.cts.ToolbarActionBarTest testOptionsMenuKey CtsAppTestCases]', 1), ('[android.webkit.cts.WebViewClientTest testOnUnhandledKeyEvent CtsWebkitTestCases]', 1), ('[android.media.cts.MediaExtractorDeviceSideTest testEntryPointNdkNoJvm None]', 1), ('[android.media.cts.MediaExtractorDeviceSideTest testEntryPointNdkWithJvm None]', 1), ('[android.media.cts.MediaExtractorDeviceSideTest testLogSessionId None]', 1), ('[android.widget.cts.AbsSeekBarTest testAccessKeyProgressIncrement CtsWidgetTestCases]', 1), ('[com.android.cts.apicoverage.CtsReportParser getTestPackageList None]', 1), ('[android.text.method.cts.MetaKeyKeyListenerTest testGetMetaState_withCharSequenceAndKeyEvent CtsTextTestCases]', 1), ('[android.text.method.cts.MetaKeyKeyListenerTest testGetMetaState_withCharSequenceAndMetaAndKeyEvent CtsTextTestCases]', 1), ('[android.widget.cts.ToolbarTest testKeyShortcuts CtsWidgetTestCases]', 1), ('[android.media.cts.MediaActivityTest testVolumeKey_whileSessionAlive CtsMediaTestCases]', 1), ('[android.media.cts.MediaActivityTest testVolumeKey_afterSessionReleased CtsMediaTestCases]', 1), ('[android.media.cts.MediaActivityTest testMediaKey_whileSessionAlive CtsMediaTestCases]', 1), ('[android.media.cts.MediaActivityTest testMediaKey_whileSessionReleased CtsMediaTestCases]', 1), ('[android.app.cts.DialogTest testConstructor_protectedCancellable CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testConstructor_protectedNotCancellable CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testConstructor_protectedCancellableEsc CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testConstructor_protectedNotCancellableEsc CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testOnStartCreateStop CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testOnStartCreateStopEsc CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testGetCurrentFocus CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testOnKeyDownKeyUp CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testDispatchKeyEvent CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testContextMenu CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testTakeKeyEvents CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetCancellable_true CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetCancellable_false CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetCancellableEsc_true CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetCancellableEsc_false CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetCancelMessage CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetDismissMessage CtsAppTestCases]', 1), ('[android.media.cts.MediaExtractorHostSideTest testMediaMetricsEntryPointNdkNoJvm CtsMediaHostTestCases]', 1), ('[android.media.cts.MediaExtractorHostSideTest testMediaMetricsEntryPointNdkWithJvm CtsMediaHostTestCases]', 1), ('[android.widget.cts.BackwardNavigationTest testBackwardNavigation CtsWidgetTestCases]', 1), ('[android.text.method.cts.DateTimeKeyListenerTest testDateTimeKeyListener CtsTextTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.ByodFlowTestActivity ByodFlowTestActivity None]', 1), ('[android.widget.cts.AbsListViewTest testSelectorOnScreen CtsWidgetTestCases]', 1), ('[android.widget.cts.AbsListViewTest testEnterKey CtsWidgetTestCases]', 1), ('[android.server.wm.WindowFocusTests getDisplayId CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowFocusTests testKeyReceiving CtsWindowManagerDeviceTestCases]', 1), ('[android.text.method.cts.BaseKeyListenerTest testBackspace_withSendKeys CtsTextTestCases]', 1), ('[android.text.method.cts.BaseKeyListenerTest testPressKey CtsTextTestCases]', 1), ('[android.autofillservice.cts.commontests.DatasetFilteringTest DatasetFilteringTest CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.DatasetFilteringTest testFilter_injectingEvents CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.DatasetFilteringTest testFilter_usingKeyboard CtsAutoFillServiceTestCases]', 1), ('[android.hdmicec.cts.HdmiCecClientWrapper ArrayList CtsHdmiCecHostTestCases]', 1), ('[android.widget.cts.ExpandableListViewBasicTest testPreconditions CtsWidgetTestCases]', 1), ('[android.widget.cts.ExpandableListViewBasicTest testCollapseGroup CtsWidgetTestCases]', 1), ('[android.widget.cts.ExpandableListViewBasicTest testExpandedGroupMovement CtsWidgetTestCases]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testOtherUserDirsNotAccessible None]', 1), ('[android.media.cts.DecoderTest testLowLatencyVp9At1280x720 CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTest testLowLatencyVp9At1920x1080 CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTest testLowLatencyVp9At3840x2160 CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTest testLowLatencyAVCAt1280x720 CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTest testLowLatencyHEVCAt480x360 CtsMediaTestCases]', 1), ('[android.autofillservice.cts.dropdown.LoginActivityTest testUiShowOnChangeAfterAutofill CtsAutoFillServiceTestCases]', 1), ('[android.widget.cts.EditTextTest testEnterKey CtsWidgetTestCases]', 1), ('[android.os.cts.BuildTest testCpuAbi_valuesMatchPermitted None]', 1), ('[android.os.cts.BuildTest testIsSecureUserBuild None]', 1), ('[android.server.wm.LayoutTests testChangingFocusableFlag CtsWindowManagerDeviceTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testNoDefaultDismissalWithBackButton CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testCustomDismissalWithBackButton CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testListSelectionWithDPad CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testListSelectionWithDPadEnter CtsWidgetTestCases]', 1), ('[android.mediav2.cts.MuxerTest testSimpleMuxNative CtsMediaV2TestCases]', 1), ('[android.binder.cts.JavaClientTest testRepeatStringNullableLater CtsNdkBinderTestCases]', 1), ('[com.android.cts.mockime.MockIme shouldDispatchToMainThread None]', 1), ('[android.app.cts.AlertDialogTest testCallback CtsAppTestCases]', 1), ('[android.app.cts.AlertDialogTest testAlertDialogCancelable CtsAppTestCases]', 1), ('[android.app.cts.AlertDialogTest testAlertDialogNotCancelable CtsAppTestCases]', 1), ('[android.graphics.cts.BitmapTest testNdkAccessAfterRecycle CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapTest testNdkFormats CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapTest testNdkFormatsHardware CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapTest testNullBitmapNdk CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapTest isPremultiplied CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapTest testNdkDataSpaceF16Extended CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapTest testNdkDataSpaceNonExtended CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapTest testNdkDataSpace CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapTest testNdkDataSpaceAlpha8 CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapTest testNdkDataSpaceNullBitmap CtsGraphicsTestCases]', 1), ('[android.graphics.cts.BitmapTest testNdkCompressBadParameter CtsGraphicsTestCases]', 1), ('[android.media.cts.VideoCodecTest testBasic CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testSyncFrameVP8NdkCBR CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testSyncFrameVP8NdkVBR CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testSyncFrameVP9NdkCBR CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testSyncFrameVP9NdkVBR CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testSyncFrameAVCNdkCBR CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testSyncFrameAVCNdkVBR CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testSyncFrameHEVCNdkCBR CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testSyncFrameHEVCNdkVBR CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testDynamicBitrateChangeVP8NdkCBR CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testDynamicBitrateChangeVP8NdkVBR CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testDynamicBitrateChangeVP9NdkCBR CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testDynamicBitrateChangeVP9NdkVBR CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testDynamicBitrateChangeAVCNdkCBR CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testDynamicBitrateChangeAVCNdkVBR CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testDynamicBitrateChangeHEVCNdkCBR CtsMediaTestCases]', 1), ('[android.media.cts.VideoCodecTest testDynamicBitrateChangeHEVCNdkVBR CtsMediaTestCases]', 1), ('[android.widget.cts.TabHostTest testKeyboardNavigation CtsWidgetTestCases]', 1), ('[com.android.cts.atracetestapp.AtraceDeviceTests assertTracingOn None]', 1), ('[com.android.cts.atracetestapp.AtraceDeviceTests assertTracingOff None]', 1), ('[android.jni.cts.LinkerNamespacesHelper exists CtsJniTestCases]', 1), ('[android.media.cts.NdkInputSurface eglGetDisplay None]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerGetCameraCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraCharacteristicsNdkFromSdk CtsCameraTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testForegroundJobsStartImmediately CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictedJobAllowedWhenUidActive CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictedEJAllowedWhenUidActive CtsJobSchedulerTestCases]', 1), ('[android.media.cts.VideoCodecTestBase isEncoder CtsMediaTestCases]', 1), ('[android.video.cts.CodecPerformanceTestBase isEncoder CtsVideoTestCases]', 1), ('[com.android.cts.mockime.MockImeSession getCurrentInputMethodIdForTesting None]', 1), ('[android.view.cts.ContentPaneFocusTest testAccessActionBar CtsViewTestCases]', 1), ('[android.view.cts.ContentPaneFocusTest testNoFocusablesInContent CtsViewTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.AuthenticationBoundKeyTestActivity AuthenticationBoundKeyTestActivity None]', 1), ('[android.server.wm.CommandSession takeCallbackHistory None]', 1), ('[com.android.compatibility.common.deviceinfo.VintfDeviceInfo emptyList None]', 1), ('[android.view.cts.SearchEventTest testBasics CtsViewTestCases]', 1), ('[android.util.cts.ArrayMapTest testCanNotIteratePastEnd_keySetIterator CtsUtilTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testStartLocalOnlyHotspotWithConfigBssid CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testSetGetSoftApConfigurationAndSoftApCapabilityCallback CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testStartTetheredHotspotWithChannelConfigAndSoftApStateAndInfoCallback CtsWifiTestCases]', 1), ('[android.text.method.cts.DateKeyListenerTest testDateTimeKeyListener CtsTextTestCases]', 1), ('[android.view.cts.ASurfaceControlTest testSurfaceTransaction_apply CtsViewTestCases]', 1), ('[com.android.compatibility.common.util.CtsKeyEventUtil uptimeMillis None]', 1), ('[android.view.cts.KeyEventInjectionTest testLongPressKeyEventInjectedViaInstrumentation CtsViewTestCases]', 1), ('[android.view.cts.KeyEventInjectionTest testLongPressKeyEventInjectedViaAdb CtsViewTestCases]', 1), ('[android.view.cts.KeyEventInjectionTest testKeyEventInjectedViaInstrumentation CtsViewTestCases]', 1), ('[android.view.cts.KeyEventInjectionTest testKeyEventInjectedViaAdb CtsViewTestCases]', 1), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePrivateKeyAndKeyInfoReflectsAllAuthorizations CtsKeystoreTestCases]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener1 CtsTextTestCases]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener2 CtsTextTestCases]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener3 CtsTextTestCases]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener4 CtsTextTestCases]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener5 CtsTextTestCases]', 1), ('[android.hardware.cts.helpers.SensorRatePermissionDirectReportTestHelper toList CtsSensorTestCases]', 1), ('[android.mediastress.cts.NativeMediaActivity exists CtsMediaStressTestCases]', 1), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInputConnectionWrapper CtsInputMethodTestCases]', 1), ('[android.mediav2.cts.ExtractorTest testFileDescriptor CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testUrlDataSource CtsMediaV2TestCases]', 1), ('[android.mediav2.cts.ExtractorTest testExtract CtsMediaV2TestCases]', 1), ('[android.view.cts.TooltipTest getWindowSystemUiVisibility CtsViewTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.DeviceAdminTestReceiver isHeadlessSystemUserMode None]', 1), ('[android.widget.cts.AutoCompleteTextViewTest testPerformFiltering CtsWidgetTestCases]', 1), ('[android.widget.cts.AutoCompleteTextViewTest testPerformCompletionWithDPad CtsWidgetTestCases]', 1), ('[android.widget.cts.AutoCompleteTextViewTest testPerformCompletionExplicit CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchView_CursorTest testSuggestionEnterKey CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.security.ScreenLockBoundKeysTest setPassFailButtonClickListeners None]', 1), ('[android.widget.cts.GridViewTest testPressKey CtsWidgetTestCases]', 1), ('[android.widget.cts.GridViewTest testFullyDetachUnusedViewOnScrollForFocus CtsWidgetTestCases]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps CtsCameraTestCases]', 1), ('[android.view.cts.KeyEventInterceptTest testKeyCodeBackShortcutRightMeta CtsViewTestCases]', 1), ('[android.mediadrm.cts.MediaDrmClearkeyTest MediaDrmClearkeyTest CtsMediaDrmTestCases]', 1), ('[com.android.cts.tagging.TaggingBaseTest isChangeEnabled CtsTaggingHostTestCases]', 1), ('[android.atrace.cts.AtraceHostTest testBeginEndSection CtsAtraceHostTestCases]', 1), ('[android.atrace.cts.AtraceHostTest testAsyncBeginEndSection CtsAtraceHostTestCases]', 1), ('[com.android.cts.apicoverage.CtsApiCoverage isDirectory None]', 1), ('[android.text.method.cts.PasswordTransformationMethodTest testTextChangedCallBacks CtsTextTestCases]', 1), ('[android.app.cts.ActionBarTest testOptionsMenuKey CtsAppTestCases]', 1), ('[com.android.cts.apicoverage.GTestApiReport getTestModules None]', 1), ('[android.server.biometrics.Utils isBusy CtsBiometricsTestCases]', 1), ('[android.jobscheduler.cts.TestAppInterface TestJobState CtsJobSchedulerTestCases]', 1), ('[android.widget.cts.SpinnerTest testDropDownBackgroundDropdownMode CtsWidgetTestCases]', 1), ('[android.widget.cts.SpinnerTest testDropDownBackgroundDialogMode CtsWidgetTestCases]', 1), ('[android.app.cts.InstrumentationTest testSendKeyDownUpSync CtsAppTestCases]', 1), ('[android.app.cts.InstrumentationTest testSendKeySync CtsAppTestCases]', 1), ('[com.android.cts.atracetestapp.AtraceNdkMethods isEnabled None]', 1), ('[android.text.method.cts.TextKeyListenerTest testPressKey CtsTextTestCases]', 1), ('[android.text.method.cts.TextKeyListenerTest testOnKeyOther CtsTextTestCases]', 1), ('[android.view.cts.ViewTest testOnKeyShortcut CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testDispatchUnhandledMove CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testUnhandledKeys CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testOnKeyDownOrUp CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testTouchMode CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testKeyPreIme CtsViewTestCases]', 1), ('[android.webkit.cts.WebViewTest testRequestFocusNodeHref CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebViewTest testStartSafeBrowsingInvokesCallback CtsWebkitTestCases]', 1), ('[android.media.cts.NdkMediaCodec AMediaCodecCreatePersistentInputSurface None]', 1), ('[android.mediav2.cts.CodecTestBase isEmpty CtsMediaV2TestCases]', 1), ('[android.media.tv.cts.TvViewTest testTrackChange CtsTvTestCases]', 1), ('[android.widget.cts.DatePickerTest testEnterKey CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.security.FingerprintBoundKeysTest setPassFailButtonClickListeners None]', 1), ('[android.media.cts.NativeDecoderTest SKIP_testExtractor CtsMediaTestCases]', 1), ('[android.widget.cts.ListViewTest testFullDetachHeaderViewOnScrollForFocus CtsWidgetTestCases]', 1), ('[android.widget.cts.ListViewTest testFullyDetachUnusedViewOnScrollForFocus CtsWidgetTestCases]', 1), ('[android.security.identity.cts.UserAuthTest isDeviceLocked CtsIdentityTestCases]', 1), ('[android.keystore.cts.KeyChainTest testIsBoundKeyAlgorithm_RequiredAlgorithmsSupported CtsKeystoreTestCases]', 1), ('[com.android.cts.verifier.biometrics.BiometricStrongTests isOnPauseAllowed None]', 1), ('[com.android.cts.releaseparser.SoParserTest testNdkSo None]', 1), ('[android.view.inputmethod.cts.InputMethodServiceTest testSendDownUpKeyEvents CtsInputMethodTestCases]', 1), ('[com.android.cts.apicoverage.NdkApiXmlReport isDirectory None]', 1), ('[android.keystore.cts.CipherTest testCanCreateAuthBoundKeyWhenScreenLocked CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testCannotCreateAuthBoundKeyWhenDevicePinNotSet CtsKeystoreTestCases]', 1), ('[android.hardware.cts.SensorDirectReportTest isDirectChannelTypeSupported CtsSensorTestCases]', 1), ('[android.app.cts.LauncherActivityTest testLaunchActivity CtsAppTestCases]', 1), ('[android.os.cts.SharedMemoryTest testNdkInterop None]', 1), ('[com.android.cts.apicoverage.ApkNdkApiReport getTestModules None]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetNeutralButtonWithParamCharSequence CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testSetOnKeyListener CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderTest testShow CtsAppTestCases]', 1), ('[android.widget.cts.TimePickerTest testKeyboardInputModeClockAmPm CtsWidgetTestCases]', 1), ('[android.widget.cts.TimePickerTest testKeyboardInputModeClock24H CtsWidgetTestCases]', 1), ('[android.widget.cts.TimePickerTest testKeyboardInputModeSpinnerAmPm CtsWidgetTestCases]', 1), ('[android.widget.cts.TimePickerTest testKeyboardInputModeSpinner24H CtsWidgetTestCases]', 1), ('[android.widget.cts.SearchViewTest testEnterKey CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.ByodFlowTestHelper isHeadlessSystemUserMode None]', 1), ('[android.server.wm.ActivityManagerTestBase PostAssertionRule None]', 1), ('[android.mediadrm.cts.NativeMediaDrmClearkeyTest isWatchDevice CtsMediaDrmTestCases]', 1), ('[android.widget.cts.ExpandableListTester getExpandableListAdapter CtsWidgetTestCases]', 1), ('[android.widget.cts.ExpandableListViewWithHeadersTest testExpandOnFirstPosition CtsWidgetTestCases]', 1), ('[android.widget.cts.ExpandableListViewWithHeadersTest testExpandOnFirstGroup CtsWidgetTestCases]', 1), ('[android.server.biometrics.BiometricCryptoTests testGenerateKeyWithoutDeviceCredential_throwsException CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricCryptoTests testGenerateKeyWithoutBiometricEnrolled_throwsInvalidAlgorithmParameterException CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricCryptoTests testGenerateKeyWhenCredentialAndBiometricEnrolled CtsBiometricsTestCases]', 1), ('[android.keystore.cts.SecretKeyFactoryTest testGetKeySpecWithKeystoreKeyAndKeyInfoReflectsAllAuthorizations CtsKeystoreTestCases]', 1), ('[android.text.method.cts.NumberKeyListenerTest testPressKey CtsTextTestCases]', 1), ('[android.text.method.cts.TimeKeyListenerTest testTimeKeyListener CtsTextTestCases]', 1), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testFloatingImeHideKeyboardAfterBackPressed CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testRestoreImeVisibility_noRestoreForHiddenWithForwardNav CtsInputMethodTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
