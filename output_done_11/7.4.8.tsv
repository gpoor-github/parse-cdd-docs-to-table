"Section"	"section_id"	"req_id"	"Test Availability"	"class_def"	"method"	"module"	"method_text"	"full_key"	"requirement"	"key_as_number"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"matched_terms"	"search_roots"	"qualified_method"	"max_matches"	"file_name"	"matched_files"	"methods_string"	"urls"	"protected"	"Area"	"Shortened"	"Test Level"
"207:635317) 7.4.8  . Secure Elements"	"7.4.8"	"C-1-2"	""	"[('android.omapi.cts.OmapiTest', 7), ('android.omapi.accesscontrol2.cts.AccessControlTest', 2), ('android.omapi.accesscontrol3.cts.AccessControlTest', 2), ('android.omapi.accesscontrol1.cts.AccessControlTest', 2)]"	"[('Object', 8), ('ServiceConnectionTimerTask', 8)]"	"[('CtsOmapiTestCases', 7), ('CtsSecureElementAccessControlTestCases', 6)]"	""	"7.4.8/C-1-2"	"""C-1-2] MUST declare the correct feature flags via android.hardware.se.omapi.uicc for the device with UICC-based secure elements, android.hardware.se.omapi.ese for the device with eSE-based secure elements and android.hardware.se.omapi.sd for the device with SD-based secure elements. <h3 id="""	"07040800.670102"	"SD android.hardware.se.omapi.sd android.hardware.se.omapi.ese android.hardware.se.omapi.uicc UICC re_tag:SD&UICC"	"SD UICC re_tag:SD&UICC"	""	""	"[('UICC', 8), ('SD', 5)]"	"omapi"	"[('[android.omapi.accesscontrol2.cts.AccessControlTest OnConnectedListener CtsSecureElementAccessControlTestCases]', 2), ('[android.omapi.accesscontrol3.cts.AccessControlTest OnConnectedListener CtsSecureElementAccessControlTestCases]', 2), ('[android.omapi.accesscontrol1.cts.AccessControlTest OnConnectedListener CtsSecureElementAccessControlTestCases]', 2), ('[android.omapi.cts.OmapiTest OnConnectedListener CtsOmapiTestCases]', 2), ('[android.omapi.cts.OmapiTest testGetReaders CtsOmapiTestCases]', 2), ('[android.omapi.cts.OmapiTest testATR CtsOmapiTestCases]', 1), ('[android.omapi.cts.OmapiTest testOpenBasicChannelNullAid CtsOmapiTestCases]', 1), ('[android.omapi.cts.OmapiTest testOpenBasicChannelNonNullAid CtsOmapiTestCases]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/secure_element/omapi/src/android/omapi/cts/OmapiTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp2/src/android/omapi/accesscontrol2/cts/AccessControlTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp3/src/android/omapi/accesscontrol3/cts/AccessControlTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp1/src/android/omapi/accesscontrol1/cts/AccessControlTest.java', 2)]"	"[('(3,SD,/android/omapi/accesscontrol2/cts/AccessControlTest.java)', 1), ('(2,UICC,/android/omapi/accesscontrol2/cts/AccessControlTest.java)', 1), ('(3,SD,/android/omapi/accesscontrol3/cts/AccessControlTest.java)', 1), ('(2,UICC,/android/omapi/accesscontrol3/cts/AccessControlTest.java)', 1), ('(3,SD,/android/omapi/accesscontrol1/cts/AccessControlTest.java)', 1), ('(2,UICC,/android/omapi/accesscontrol1/cts/AccessControlTest.java)', 1), ('(11,SD,/android/omapi/cts/OmapiTest.java)', 1), ('(28,UICC,/android/omapi/cts/OmapiTest.java)', 1)]"	"[('([3:/android/omapi/accesscontrol2/cts/AccessControlTest.java]:[SD]:[3]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 1), ('([2:/android/omapi/accesscontrol2/cts/AccessControlTest.java]:[UICC]:[2]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 1), ('([3:/android/omapi/accesscontrol3/cts/AccessControlTest.java]:[SD]:[3]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 1), ('([2:/android/omapi/accesscontrol3/cts/AccessControlTest.java]:[UICC]:[2]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 1), ('([3:/android/omapi/accesscontrol1/cts/AccessControlTest.java]:[SD]:[3]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 1), ('([2:/android/omapi/accesscontrol1/cts/AccessControlTest.java]:[UICC]:[2]:method_text:[nectionTimer != null) {                connectionTimer.cancel();            }        }    }   ])', 1), ('([5:/android/omapi/cts/OmapiTest.java]:[SD]:[5]:method_text:[        connectionTimer.cancel();            }        }    }    /** Tests getReaders API */   ])', 1), ('([6:/android/omapi/cts/OmapiTest.java]:[SD]:[6]:method_text:[e) {            fail(""Unexpected Exception "" + e);        }    }    /** Tests getATR API */   ])', 1), ('([4:/android/omapi/cts/OmapiTest.java]:[UICC]:[4]:method_text:[        connectionTimer.cancel();            }        }    }    /** Tests getReaders API */   ])', 1), ('([16:/android/omapi/cts/OmapiTest.java]:[UICC]:[16]:method_text:[e) {            fail(""Unexpected Exception "" + e);        }    }    /** Tests getATR API */   ])', 1), ('([4:/android/omapi/cts/OmapiTest.java]:[UICC]:[4]:method_text:[pected Exception "" + e);        }    }    /** Tests OpenBasicChannel API when aid is null */   ])', 1), ('([2:/android/omapi/cts/OmapiTest.java]:[UICC]:[2]:method_text:[ed Exception "" + e);        }    }    /** Tests OpenBasicChannel API when aid is provided */   ])', 1), ('([2:/android/omapi/cts/OmapiTest.java]:[UICC]:[2]:method_text:[e) {            fail(""Unexpected Exception "" + e);        }    }    /** Tests Select API */   ])', 1)]"	""	""	""	""	""
