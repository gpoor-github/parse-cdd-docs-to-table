"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-2-6"	"3.2.3.5/C-2-6"	"03020305.670206"	"""C-2-6] MUST honor the [android.intent.action.SENDTO](https://developer.android.com/reference/android/content/Intent#ACTION_SENDTO) and [android.intent.action.VIEW](https://developer.android.com/reference/android/content/Intent#ACTION_VIEW) intents and provide an activity to send/display SMS messages. """	Test Incomplete, Manually testable	""	""	""	""	""	""	""	""	""	""	"android.telephony.cts.CellBroadcastIntentsTest"	"testGetIntentForBackgroundReceivers"	"CtsTelephonyTestCases"	""	""	""	""	""	""	""	""	""	""	Though the intent is tested. The requirement says an activity should be launched so user should see the SMS message and be able to send an SMS this is not tested. This could be manually tested.	"TBD"	""	""	""	""
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-7-1"	"3.2.3.5/C-7-1"	"03020305.670701"	"""C-7-1] MUST provide a user-accessible mechanism to add and configure third-party input methods in response to the [`android.settings.INPUT_METHOD_SETTINGS`](https://developer.android.com/reference/android/provider/Settings#ACTION_INPUT_METHOD_SETTINGS) intent.  If device implementations support third-party accessibility services, they:  """	Test Incomplete, Manually Testable	""	""	""	""	""	""	""	""	""	""	"android.systemintents.cts.TestSystemIntents"	"getPackageManager"	"CtsSystemIntentTestCases"	""	""	""	""	""	""	""	""	""	""	"Though the intent is tested. The requirement says the user can change to a third party input device. This could be manually tested, but a true end to end test would require a hardware HID."	"TBD"	""	""	""	""
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-9-1"	"3.2.3.5/C-9-1"	"03020305.670901"	"""C-9-1] MUST implement the [Settings#ACTION_PROCESS_WIFI_EASY_CONNECT_URI](https://developer.android.com/reference/android/provider/Settings.html#ACTION_PROCESS_WIFI_EASY_CONNECT_URI) Intent APIs as described in the SDK documentation.  If device implementations provide the data saver mode, they: """	Test Available	""	"Settings.html ACTION_PROCESS_WIFI_EASY_CONNECT_URI"	""	""	""	""	""	""	""	""	"android.content.cts.AvailableIntentsTest"	"testEasyConnectIntent"	"CtsContentTestCases"	"/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java"	""	"public void testEasyConnectIntent() {
        // Android only supports Initiator-... modes right now, which require the device to
        // have a QR-code capture mechanism. Therefore this feature does not make sense on
        // non-handheld devices.
        if (!isHandheld()) {
            return;
        }
        WifiManager manager = mContext.getSystemService(WifiManager.class);

        if (manager.isEasyConnectSupported()) {
            Intent intent = new Intent(Settings.ACTION_PROCESS_WIFI_EASY_CONNECT_URI);
            intent.setData(Uri.parse(QRCODE));
            assertCanBeHandled(intent);
        }
    }"	""	""	"ACTION_PROCESS_WIFI_EASY_CONNECT_URI"	""	""	""	""	""	""	""	""	""	""
3.2.3.5  Conditional Application Intents	3.2.3.5	C-8-1	3.2.3.5/C-8-1	03020305.670801	"""C-8-1] MUST honor the [`android.settings.ACCESSIBILITY_SETTINGS`](https://developer.android.com/reference/android/provider/Settings#ACTION_ACCESSIBILITY_SETTINGS) intent to provide a user-accessible mechanism to enable and disable the third-party accessibility services alongside the preloaded accessibility services.  If device implementations include support for Wi-Fi Easy Connect and expose the functionality to third-party apps, they:  """	Test Available	""	android.settings.ACCESSIBILITY ACCESSIBILITY_SETTINGS ACTION_ACCESSIBILITY_SETTINGS	""	""	""	""	""	""	""	""	android.accessibilityservice.cts.AccessibilitySettingsTest	testAccessibilitySettingsIntentHandled	CtsAccessibilityServiceTestCases	/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilitySettingsTest.java	""	"public void testAccessibilitySettingsIntentHandled() throws Throwable {
        PackageManager packageManager = getContext().getPackageManager();
        Intent intent = new Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS);
        List<ResolveInfo> resolvedActivities = packageManager.queryIntentActivities(intent,
                PackageManager.MATCH_DEFAULT_ONLY);

        // make sure accessibility settings exist
        String message = ""Accessibility settings activity must be launched via Intent "" +
                ""Settings.ACTION_ACCESSIBILITY_SETTINGS"";
        assertTrue(message, !resolvedActivities.isEmpty());
    }
}"	""	""	ACCESSIBILITY_SETTINGS	""	""	""	""	""	""	""	""	""	""
3.2.3.5  Conditional Application Intents	3.2.3.5	C-6-1	3.2.3.5/C-6-1	03020305.670601	"""C-6-1] MUST implement an activity that would respond to the intent [`ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS`](https://developer.android.com/reference/android/provider/Settings#ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS), which for implementations with UI_MODE_TYPE_NORMAL it MUST be an activity where the user can grant or deny the app access to DND policy configurations.  If device implementations allow users to use third-party input methods on the device, they:  """	Test Available, incomplete	""	DND ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS MODE_TYPE_NORMAL	""	DND MODE_TYPE_NORMAL	""	""	""	""	""	""	android.systemintents.cts.TestSystemIntents	testSystemIntents	CtsSystemIntentTestCases	[('/home/gpoor/cts-12-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 1)]	[('(1,ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS,/android/systemintents/cts/TestSystemIntents.java)', 1)]	[('([1:/android/systemintents/cts/TestSystemIntents.java]:[ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS]:[1]:method_text:[etInstrumentation().getContext();        mPackageManager = mContext.getPackageManager();    }   ])', 1)]	https://developer.android.com	""	[('ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS', 1)]	""	""	""	""	Though the intent is tested. The requirement says an activity should be launched so the user can grant or deny the app access to DND policy	""	""	""	""	""