Section	section_id	req_id	full_key	key_as_number	requirement	Test Availability	search_roots	search_terms	manual_search_terms	not_search_terms	not_files	max_matches	class_defs	methods	modules	protected	class_def	method	module	file_name	matched_files	methods_string	urls	method_text	matched_terms	qualified_method	Annotation?	New Req for S?	New CTS for S?	Comment(internal) e.g. why a test is not possible	CTS Bug Id	CDD Bug Id	Area	Shortened	Test Level
2.2.5  . Security Model	9.8	H-1-2	9.8/H-1-2	09080000.720102	"""[9.8/H-1-2] MUST make sure the hotword detection service can only transmit mic audio data or data derived from it to the system server through HotwordDetectionService API, or to ContentCaptureService through ContentCaptureManager API. """	""	""	hotword HotwordDetectionService mic ContentCaptureManager	""	""	""	""	""	""	""	""	android.voiceinteraction.cts.HotwordDetectionServiceBasicTest	testHotwordDetectionService_onDetectFromDsp_rejection	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java	""	"@RequiresDevice
    public void testHotwordDetectionService_onDetectFromDsp_rejection()
            throws Throwable {
        Thread.sleep(CLEAR_CHIP_MS);
        // Create AlwaysOnHotwordDetector and wait the HotwordDetectionService ready
        testHotwordDetection(Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_TEST,
                Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_RESULT_INTENT,
                Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_SUCCESS);

        assertThat(performAndGetDetectionResult(Utils.HOTWORD_DETECTION_SERVICE_DSP_ONREJECT_TEST))
                .isEqualTo(MainHotwordDetectionService.REJECTED_RESULT);
        verifyMicrophoneChip(false);
    }"	""	""	hotword HotwordDetectionService mic	""	""	""	""	""	""	""	""	""	""
2.2.5  . Security Model	9.8	H-1-2	9.8/H-1-2	09080000.720102	"""[9.8/H-1-2] MUST make sure the hotword detection service can only transmit mic audio data or data derived from it to the system server through HotwordDetectionService API, or to ContentCaptureService through ContentCaptureManager API. """	""	""	hotword HotwordDetectionService mic ContentCaptureManager	""	""	""	""	""	""	""	""	android.voiceinteraction.cts.HotwordDetectionServiceBasicTest	testHotwordDetectionService_onDetectFromDsp_success	CtsVoiceInteractionTestCases	/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordDetectionServiceBasicTest.java	""	"@RequiresDevice
    public void testHotwordDetectionService_onDetectFromDsp_success()
            throws Throwable {
        Thread.sleep(CLEAR_CHIP_MS);
        // Create AlwaysOnHotwordDetector and wait the HotwordDetectionService ready
        testHotwordDetection(Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_TEST,
                Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_RESULT_INTENT,
                Utils.HOTWORD_DETECTION_SERVICE_TRIGGER_SUCCESS);

        verifyDetectedResult(
                performAndGetDetectionResult(Utils.HOTWORD_DETECTION_SERVICE_DSP_ONDETECT_TEST),
                MainHotwordDetectionService.DETECTED_RESULT);
        verifyMicrophoneChip(true);
    }"	""	""	hotword HotwordDetectionService mic	""	""	""	""	""	""	""	""	""	""