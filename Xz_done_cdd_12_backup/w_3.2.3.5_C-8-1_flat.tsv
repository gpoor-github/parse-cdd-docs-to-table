"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-8-1"	"3.2.3.5/C-8-1"	"03020305.670801"	"""C-8-1] MUST honor the [`android.settings.ACCESSIBILITY_SETTINGS`](https://developer.android.com/reference/android/provider/Settings#ACTION_ACCESSIBILITY_SETTINGS) intent to provide a user-accessible mechanism to enable and disable the third-party accessibility services alongside the preloaded accessibility services.  If device implementations include support for Wi-Fi Easy Connect and expose the functionality to third-party apps, they:  """	""	""	"android.settings.ACCESSIBILITY ACCESSIBILITY_SETTINGS ACTION_ACCESSIBILITY_SETTINGS"	""	""	""	""	""	""	""	""	"android.content.cts.AvailableIntentsTest"	"testChangePhoneAccounts"	"CtsContentTestCases"	"/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java"	""	"public void testChangePhoneAccounts() {
        PackageManager packageManager = mContext.getPackageManager();
        if (packageManager.hasSystemFeature(PackageManager.FEATURE_TELEPHONY)) {
            Intent intent = new Intent(TelecomManager.ACTION_CHANGE_PHONE_ACCOUNTS);
            assertCanBeHandled(intent);
        }
    }

    /**
     * Test ACTION_SHOW_CALL_ACCESSIBILITY_SETTINGS, it will display the call accessibility preferences.
     */"	""	""	"ACCESSIBILITY_SETTINGS"	""	""	""	""	""	""	""	""	""	""
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-8-1"	"3.2.3.5/C-8-1"	"03020305.670801"	"""C-8-1] MUST honor the [`android.settings.ACCESSIBILITY_SETTINGS`](https://developer.android.com/reference/android/provider/Settings#ACTION_ACCESSIBILITY_SETTINGS) intent to provide a user-accessible mechanism to enable and disable the third-party accessibility services alongside the preloaded accessibility services.  If device implementations include support for Wi-Fi Easy Connect and expose the functionality to third-party apps, they:  """	""	""	"android.settings.ACCESSIBILITY ACCESSIBILITY_SETTINGS ACTION_ACCESSIBILITY_SETTINGS"	""	""	""	""	""	""	""	""	"android.content.cts.AvailableIntentsTest"	"testShowCallAccessibilitySettings"	"CtsContentTestCases"	"/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java"	""	"public void testShowCallAccessibilitySettings() {
        PackageManager packageManager = mContext.getPackageManager();
        if (packageManager.hasSystemFeature(PackageManager.FEATURE_TELEPHONY)) {
            Intent intent = new Intent(TelecomManager.ACTION_SHOW_CALL_ACCESSIBILITY_SETTINGS);
            assertCanBeHandled(intent);
        }
    }

    /**
     * Test ACTION_SHOW_CALL_SETTINGS, it will display the call preferences.
     */"	""	""	"ACCESSIBILITY_SETTINGS"	""	""	""	""	""	""	""	""	""	""
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-8-1"	"3.2.3.5/C-8-1"	"03020305.670801"	"""C-8-1] MUST honor the [`android.settings.ACCESSIBILITY_SETTINGS`](https://developer.android.com/reference/android/provider/Settings#ACTION_ACCESSIBILITY_SETTINGS) intent to provide a user-accessible mechanism to enable and disable the third-party accessibility services alongside the preloaded accessibility services.  If device implementations include support for Wi-Fi Easy Connect and expose the functionality to third-party apps, they:  """	""	""	"android.settings.ACCESSIBILITY ACCESSIBILITY_SETTINGS ACTION_ACCESSIBILITY_SETTINGS"	""	""	""	""	""	""	""	""	"android.accessibilityservice.cts.AccessibilitySettingsTest"	"testAccessibilitySettingsIntentHandled"	"CtsAccessibilityServiceTestCases"	"/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilitySettingsTest.java"	""	"public void testAccessibilitySettingsIntentHandled() throws Throwable {
        PackageManager packageManager = getContext().getPackageManager();
        Intent intent = new Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS);
        List<ResolveInfo> resolvedActivities = packageManager.queryIntentActivities(intent,
                PackageManager.MATCH_DEFAULT_ONLY);

        // make sure accessibility settings exist
        String message = ""Accessibility settings activity must be launched via Intent "" +
                ""Settings.ACTION_ACCESSIBILITY_SETTINGS"";
        assertTrue(message, !resolvedActivities.isEmpty());
    }
}"	""	""	"ACCESSIBILITY_SETTINGS"	""	""	""	""	""	""	""	""	""	""
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-8-1"	"3.2.3.5/C-8-1"	"03020305.670801"	"""C-8-1] MUST honor the [`android.settings.ACCESSIBILITY_SETTINGS`](https://developer.android.com/reference/android/provider/Settings#ACTION_ACCESSIBILITY_SETTINGS) intent to provide a user-accessible mechanism to enable and disable the third-party accessibility services alongside the preloaded accessibility services.  If device implementations include support for Wi-Fi Easy Connect and expose the functionality to third-party apps, they:  """	""	""	"android.settings.ACCESSIBILITY ACCESSIBILITY_SETTINGS ACTION_ACCESSIBILITY_SETTINGS"	""	""	""	""	""	""	""	""	"android.accessibilityservice.cts.AccessibilitySettingsTest"	"testAccessibilitySettingsIntentHandled"	"CtsAccessibilityServiceTestCases"	"/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilitySettingsTest.java"	""	"public void testAccessibilitySettingsIntentHandled() throws Throwable {
        PackageManager packageManager = getContext().getPackageManager();
        Intent intent = new Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS);
        List<ResolveInfo> resolvedActivities = packageManager.queryIntentActivities(intent,
                PackageManager.MATCH_DEFAULT_ONLY);

        // make sure accessibility settings exist
        String message = ""Accessibility settings activity must be launched via Intent "" +
                ""Settings.ACTION_ACCESSIBILITY_SETTINGS"";
        assertTrue(message, !resolvedActivities.isEmpty());
    }
}"	""	""	"ACTION_ACCESSIBILITY_SETTINGS"	""	""	""	""	""	""	""	""	""	""
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-8-1"	"3.2.3.5/C-8-1"	"03020305.670801"	"""C-8-1] MUST honor the [`android.settings.ACCESSIBILITY_SETTINGS`](https://developer.android.com/reference/android/provider/Settings#ACTION_ACCESSIBILITY_SETTINGS) intent to provide a user-accessible mechanism to enable and disable the third-party accessibility services alongside the preloaded accessibility services.  If device implementations include support for Wi-Fi Easy Connect and expose the functionality to third-party apps, they:  """	""	""	"android.settings.ACCESSIBILITY ACCESSIBILITY_SETTINGS ACTION_ACCESSIBILITY_SETTINGS"	""	""	""	""	""	""	""	""	"android.accessibilityservice.cts.AccessibilitySettingsTest"	"testAccessibilitySettingsIntentHandled"	"CtsAccessibilityServiceTestCases"	"/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilitySettingsTest.java"	""	"public void testAccessibilitySettingsIntentHandled() throws Throwable {
        PackageManager packageManager = getContext().getPackageManager();
        Intent intent = new Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS);
        List<ResolveInfo> resolvedActivities = packageManager.queryIntentActivities(intent,
                PackageManager.MATCH_DEFAULT_ONLY);

        // make sure accessibility settings exist
        String message = ""Accessibility settings activity must be launched via Intent "" +
                ""Settings.ACTION_ACCESSIBILITY_SETTINGS"";
        assertTrue(message, !resolvedActivities.isEmpty());
    }
}"	""	""	"ACTION_ACCESSIBILITY_SETTINGS"	""	""	""	""	""	""	""	""	""	""
