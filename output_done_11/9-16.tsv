"Section"	"section_id"	"req_id"	"Test Availability"	"class_def"	"method"	"module"	"method_text"	"full_key"	"requirement"	"key_as_number"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"matched_terms"	"search_roots"	"qualified_method"	"max_matches"	"file_name"	"matched_files"	"methods_string"	"urls"	"protected"	"Area"	"Shortened"	"Test Level"
"274:790271) 9.16  . Application Data Migration"	"9.16"	"C-1-4"	""	"[('com.android.cts.managedprofile.ProvisioningTest', 3), ('android.content.cts.ImageCaptureUriExtraToClipDataTest', 3), ('android.content.cts.ContextTest', 2), ('android.content.cts.ReadableUriExtraToClipDataTest', 2), ('android.media.cts.AudioManagerTest', 1), ('android.hardware.camera2.cts.OfflineSessionTest', 1), ('android.provider.cts.media.MediaStore_Audio_Genres_MembersTest', 1), ('android.cts.statsd.atom.UidAtomTests', 1), ('android.app.cts.WallpaperManagerTest', 1)]"	"[('getInstrumentation', 4), ('getPackageName', 3), ('setUp', 2), ('getResources', 2), ('getSystem', 2), ('getContext', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getPackageManager', 1), ('tearDown', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('getSimpleName', 1)]"	"[('CtsContentTestCases', 7), ('CtsMediaTestCases', 1), ('CtsCameraTestCases', 1), ('CtsProviderTestCases', 1), ('CtsAndroidAppTestCases', 1)]"	""	"9.16/C-1-4"	"""C-1-4] MUST only migrate application data to the same application on the target device, with the same package name AND signing certificate. """	"09160000.670104"	"migrate"	"migrate"	""	""	"[('migrate', 15)]"	""	"[('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput CtsCameraTestCases]', 1), ('[com.android.cts.managedprofile.ProvisioningTest PersistableBundle None]', 1), ('[com.android.cts.managedprofile.ProvisioningTest testAccountExist None]', 1), ('[com.android.cts.managedprofile.ProvisioningTest testAccountNotExist None]', 1), ('[android.provider.cts.media.MediaStore_Audio_Genres_MembersTest testStoreAudioGenresMembersExternal CtsProviderTestCases]', 1), ('[android.content.cts.ImageCaptureUriExtraToClipDataTest testUriExtraOutputMigratedToClipData_imageCaptureIntent CtsContentTestCases]', 1), ('[android.content.cts.ImageCaptureUriExtraToClipDataTest testUriExtraOutputMigratedToClipData_imageCaptureSecureIntent CtsContentTestCases]', 1), ('[android.content.cts.ImageCaptureUriExtraToClipDataTest testUriExtraOutputMigratedToClipData_videoCaptureIntent CtsContentTestCases]', 1), ('[android.content.cts.ContextTest testMoveSharedPreferencesFrom CtsContentTestCases]', 1), ('[android.content.cts.ContextTest testMoveDatabaseFrom CtsContentTestCases]', 1), ('[android.content.cts.ReadableUriExtraToClipDataTest testUriExtraStreamMigratedToClipData_sendIntent CtsContentTestCases]', 1), ('[android.content.cts.ReadableUriExtraToClipDataTest testUriExtraStreamMigratedToClipData_sendMultipleIntent CtsContentTestCases]', 1), ('[android.cts.statsd.atom.UidAtomTests testPictureInPictureState None]', 1), ('[android.app.cts.WallpaperManagerTest invokeOnColorsChangedListenerTest_systemOnly CtsAndroidAppTestCases]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ProvisioningTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ImageCaptureUriExtraToClipDataTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ContextTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ReadableUriExtraToClipDataTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/atom/UidAtomTests.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/WallpaperManagerTest.java', 1)]"	"[('/com/android/cts/managedprofile/ProvisioningTest.java', 4), ('/android/content/cts/ImageCaptureUriExtraToClipDataTest.java', 4), ('/android/content/cts/ContextTest.java', 3), ('/android/content/cts/ReadableUriExtraToClipDataTest.java', 3), ('/android/media/cts/AudioManagerTest.java', 2), ('/android/hardware/camera2/cts/OfflineSessionTest.java', 2), ('/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java', 2), ('/android/cts/statsd/atom/UidAtomTests.java', 2), ('/android/app/cts/WallpaperManagerTest.java', 2)]"	"[('([1:/android/media/cts/AudioManagerTest.java]:[migrate]:[1]:method_text:[      @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")    ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[migrate]:[1]:method_text:[ied about the      * remaining offline requests via the registered offline callback.</p>      */    ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[migrate]:[1]:method_text:[.getTargetContext();         mDpm = mContext.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[migrate]:[1]:method_text:[             return;             }         }         fail(""can\'t find migrated account"");     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[migrate]:[1]:method_text:[ext context) {         return context.getSharedPreferences(SHARED_PREFERENCE_FILE_NAME, 0);     }  }])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java]:[migrate]:[1]:method_text:[ll, null, null);             assertEquals(0, c.getCount());             c.close();         }     } }])', 1), ('([1:/android/content/cts/ImageCaptureUriExtraToClipDataTest.java]:[migrate]:[1]:method_text:[diaStore.ACTION_IMAGE_CAPTURE);         waitForFileReady();         assertFileContents();     }     ])', 1), ('([1:/android/content/cts/ImageCaptureUriExtraToClipDataTest.java]:[migrate]:[1]:method_text:[e.ACTION_IMAGE_CAPTURE_SECURE);         waitForFileReady();         assertFileContents();     }     ])', 1), ('([1:/android/content/cts/ImageCaptureUriExtraToClipDataTest.java]:[migrate]:[1]:method_text:[   String fileContents = new String(buffer);         assertEquals(TEST_INPUT, fileContents);     } }])', 1), ('([3:/android/content/cts/ContextTest.java]:[migrate]:[3]:method_text:[tSharedPreferences(""test"", Context.MODE_PRIVATE)                 .getInt(""question"", 0));     }     ])', 1), ('([3:/android/content/cts/ContextTest.java]:[migrate]:[3]:method_text:[));         assertEquals(""mouse"", c.getString(0));         c.close();         db.close();     }     ])', 1), ('([1:/android/content/cts/ReadableUriExtraToClipDataTest.java]:[migrate]:[1]:method_text:[;          getContext().startActivity(intent);          waitForConfirmationReadSuccess();     }     ])', 1), ('([1:/android/content/cts/ReadableUriExtraToClipDataTest.java]:[migrate]:[1]:method_text:[ONDS));         } catch (InterruptedException e) {             fail(e.toString());         }     } }])', 1), ('([1:/android/cts/statsd/atom/UidAtomTests.java]:[migrate]:[1]:method_text:[fail(""No logging event from PictureInPictureStateChanged nor UiEventReported"");         }     }     ])', 1), ('([1:/android/app/cts/WallpaperManagerTest.java]:[migrate]:[1]:method_text:[ the lock screen.         verifyColorListenerInvoked(WallpaperManager.FLAG_SYSTEM, both);     }     ])', 1)]"	""	""	""	""	""
"274:790271) 9.16  . Application Data Migration"	"9.16"	"C-1-2"	""	"[('com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest', 13), ('com.android.cts.transferowner.DeviceAndProfileOwnerTransferOutgoingTest', 9), ('com.android.cts.transferowner.TransferDeviceOwnerOutgoingTest', 4), ('com.android.cts.transferowner.DeviceAndProfileOwnerTransferIncomingTest', 4), ('com.android.cts.deviceandprofileowner.PersistentIntentResolvingTest', 4), ('com.android.cts.transferowner.TransferProfileOwnerOutgoingTest', 3), ('com.android.cts.transferowner.TransferProfileOwnerIncomingTest', 2), ('com.android.cts.transferowner.TransferDeviceOwnerIncomingTest', 2), ('com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest', 1), ('com.android.cts.deviceowner.AdminActionBookkeepingTest', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest', 1), ('com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest', 1), ('com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest', 1), ('com.android.cts.deviceowner.PrivateDnsPolicyTest', 1), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 1), ('com.android.cts.deviceandprofileowner.LockTaskTest', 1)]"	"[('setUp', 10), ('getMessage', 4), ('getAllowedRestrictions', 3), ('BasicAdminReceiver', 2), ('getTargetContext', 2), ('getName', 2), ('tearDown', 2), ('BasicAdminReceiverNoMetadata', 1), ('getPackageManager', 1), ('myUserHandle', 1), ('assertClearDefaultRestrictions', 1), ('getDefaultEnabledRestrictions', 1), ('getInstrumentation', 1), ('getContext', 1), ('getContentResolver', 1), ('getPackageName', 1), ('IntentFilter', 1), ('ConfirmReceiver', 1)]"	""	""	"9.16/C-1-2"	"""C-1-2] MUST securely confirm the primary authentication on the source device and confirm with the user intent to copy the data on the source device before any data is transferred. """	"09160000.670102"	"authentication securely confirm transfer"	"securely confirm   authentication transfer"	""	""	"[('transfer', 42), ('confirm', 7)]"	"device"	"[('[com.android.cts.transferowner.TransferProfileOwnerOutgoingTest testTransferWithPoliciesOutgoing None]', 1), ('[com.android.cts.transferowner.TransferProfileOwnerOutgoingTest testTransferOwnership None]', 1), ('[com.android.cts.transferowner.TransferDeviceOwnerOutgoingTest testTransferWithPoliciesOutgoing None]', 1), ('[com.android.cts.transferowner.TransferDeviceOwnerOutgoingTest testTransferOwnership None]', 1), ('[com.android.cts.transferowner.TransferDeviceOwnerOutgoingTest testTransferAffiliatedProfileOwnershipCompleteCallbackIsCalled None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.deviceowner.AdminActionBookkeepingTest testRequestBugreport None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.transferowner.DeviceAndProfileOwnerTransferIncomingTest testTransferCompleteCallbackIsCalled None]', 1), ('[com.android.cts.transferowner.DeviceAndProfileOwnerTransferIncomingTest testTransferOwnershipBundleLoaded None]', 1), ('[com.android.cts.transferowner.DeviceAndProfileOwnerTransferIncomingTest testTransferOwnershipEmptyBundleLoaded None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.transferowner.TransferProfileOwnerIncomingTest testTransferPoliciesAreRetainedAfterTransfer None]', 1), ('[com.android.cts.deviceandprofileowner.PersistentIntentResolvingTest testNoPersistentPreferredActivityYieldsResolverActivity None]', 1), ('[com.android.cts.deviceandprofileowner.PersistentIntentResolvingTest testAddPersistentPreferredActivityYieldsReceptionAtTarget None]', 1), ('[com.android.cts.deviceandprofileowner.PersistentIntentResolvingTest testAddAndClearPersistentPreferredActivitiesYieldsResolverActivity None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testCanSetModeDespiteUserRestriction None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testCanOpenCamera None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTransferOwnership None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTransferSameAdmin None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTransferInvalidTarget None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTransferPolicies None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTransferOwnershipChangedBroadcast None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTransferCompleteCallback None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTransferOwnershipNoMetadata None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testIsTransferBundlePersisted None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testGetTransferOwnershipBundleOnlyCalledFromAdmin None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testBundleEmptyAfterTransferWithNullBundle None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testIsBundleNullNoTransfer None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTargetDeviceAdminServiceBound None]', 1), ('[com.android.cts.transferowner.DeviceAndProfileOwnerTransferOutgoingTest testTransferSameAdmin None]', 1), ('[com.android.cts.transferowner.DeviceAndProfileOwnerTransferOutgoingTest testTransferInvalidTarget None]', 1), ('[com.android.cts.transferowner.DeviceAndProfileOwnerTransferOutgoingTest testTransferOwnershipChangedBroadcast None]', 1), ('[com.android.cts.transferowner.DeviceAndProfileOwnerTransferOutgoingTest testTransferOwnershipNullBundle None]', 1), ('[com.android.cts.transferowner.DeviceAndProfileOwnerTransferOutgoingTest testTransferOwnershipNoMetadata None]', 1), ('[com.android.cts.transferowner.DeviceAndProfileOwnerTransferOutgoingTest testTransferOwnershipBundleSaved None]', 1), ('[com.android.cts.transferowner.DeviceAndProfileOwnerTransferOutgoingTest testGetTransferOwnershipBundleOnlyCalledFromAdmin None]', 1), ('[com.android.cts.transferowner.DeviceAndProfileOwnerTransferOutgoingTest testIsBundleNullNoTransfer None]', 1), ('[com.android.cts.transferowner.TransferDeviceOwnerIncomingTest testTransferPoliciesAreRetainedAfterTransfer None]', 1), ('[com.android.cts.deviceandprofileowner.LockTaskTest testActivityOptions_nonWhitelisted None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java', 13), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/TransferOwnerOutgoingApp/src/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java', 9), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/TransferOwnerOutgoingApp/src/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/TransferOwnerIncomingApp/src/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PersistentIntentResolvingTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/TransferOwnerOutgoingApp/src/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/TransferOwnerIncomingApp/src/com/android/cts/transferowner/TransferProfileOwnerIncomingTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/TransferOwnerIncomingApp/src/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PrivateDnsPolicyTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/LockTaskTest.java', 1)]"	"[('/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java', 14), ('/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java', 10), ('/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java', 5), ('/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java', 5), ('/com/android/cts/deviceandprofileowner/PersistentIntentResolvingTest.java', 5), ('/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java', 4), ('/com/android/cts/transferowner/TransferProfileOwnerIncomingTest.java', 3), ('/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java', 3), ('/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java', 2), ('/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 2), ('/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java', 2), ('/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java', 2), ('/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 2), ('/com/android/cts/deviceowner/PrivateDnsPolicyTest.java', 2), ('/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 2), ('/com/android/cts/deviceandprofileowner/LockTaskTest.java', 2)]"	"[('([3:/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java]:[transfer]:[3]:method_text:[r.setUp();         setupTestParameters(DevicePolicyManager.ACTION_PROFILE_OWNER_CHANGED);     }     ])', 1), ('([2:/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java]:[transfer]:[2]:method_text:[evicePolicyManager.transferOwnership(mOutgoingComponentName, INCOMING_COMPONENT_NAME, b);     }     ])', 1), ('([2:/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java]:[transfer]:[2]:method_text:[CrossProfileCallerIdDisabled(mOutgoingComponentName,                     false);         });     } }])', 1), ('([3:/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java]:[transfer]:[3]:method_text:[er.setUp();         setupTestParameters(DevicePolicyManager.ACTION_DEVICE_OWNER_CHANGED);     }     ])', 1), ('([2:/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java]:[transfer]:[2]:method_text:[evicePolicyManager.transferOwnership(mOutgoingComponentName, INCOMING_COMPONENT_NAME, b);     }     ])', 1), ('([2:/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java]:[transfer]:[2]:method_text:[{             mDevicePolicyManager.getSecondaryUsers(mOutgoingComponentName);         });     }     ])', 1), ('([2:/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java]:[transfer]:[2]:method_text:[     assertTrue(getBooleanPref(mContext, KEY_TRANSFER_AFFILIATED_PROFILE_COMPLETED_CALLED));     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java]:[transfer]:[1]:method_text:[e that {@link UserManager} understands that it is applied but not as a base restriction.      */    ])', 1), ('([1:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[confirm]:[1]:method_text:[     /**      * Test: Retrieving network logs should update the corresponding timestamp.      */    ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java]:[transfer]:[1]:method_text:[etting all DO restrictions. Global restrictions should be      * visible on other users.      */    ])', 1), ('([6:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java]:[transfer]:[6]:method_text:[geManager().hasSystemFeature(                 PackageManager.FEATURE_SECURE_LOCK_SCREEN);     }     ])', 1), ('([2:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java]:[transfer]:[2]:method_text:[IsCalled() {         assertTrue(getBooleanPref(mContext, KEY_TRANSFER_COMPLETED_CALLED));     }     ])', 1), ('([2:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java]:[transfer]:[2]:method_text:[      assertNotNull(bundle);         assertTrue(bundle.getBoolean(ARE_PARAMETERS_SAVED));     }     ])', 1), ('([2:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java]:[transfer]:[2]:method_text:[Pref(Context context, String key) {         return getPrefs(context).getBoolean(key, false);     } }])', 1), ('([2:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[transfer]:[2]:method_text:[abledRestrictions();      /**      * Test restrictions that should be enabled by default      */    ])', 1), ('([1:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[transfer]:[1]:method_text:[not used in test.                     // UserManager.DISALLOW_DEBUGGING_FEATURES             );     ])', 1), ('([3:/com/android/cts/transferowner/TransferProfileOwnerIncomingTest.java]:[transfer]:[3]:method_text:[ublic class TransferProfileOwnerIncomingTest extends DeviceAndProfileOwnerTransferIncomingTest {    ])', 1), ('([2:/com/android/cts/transferowner/TransferProfileOwnerIncomingTest.java]:[transfer]:[2]:method_text:[targetParentProfileInstance.getPasswordExpirationTimeout(mIncomingComponentName));         }     } }])', 1), ('([7:/com/android/cts/deviceandprofileowner/PersistentIntentResolvingTest.java]:[confirm]:[7]:method_text:[PACKAGE_NAME);         mContext.unregisterReceiver(mReceiver);          super.tearDown();     }     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/PersistentIntentResolvingTest.java]:[confirm]:[2]:method_text:[eceivedConfirmationFrom1);             assertFalse(mReceivedConfirmationFrom2);         }     }     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/PersistentIntentResolvingTest.java]:[confirm]:[2]:method_text:[ReceivedConfirmationFrom1);             assertTrue(mReceivedConfirmationFrom2);         }     }     ])', 1), ('([7:/com/android/cts/deviceandprofileowner/PersistentIntentResolvingTest.java]:[confirm]:[7]:method_text:[sistentPreferredActivity(ADMIN_RECEIVER_COMPONENT, filter,                 targetComponent);     } }])', 1), ('([1:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[confirm]:[1]:method_text:[ISTIC);         assertThat(mDevicePolicyManager.getGlobalPrivateDnsHost(getWho())).isNull();     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[transfer]:[1]:method_text:[not used in test.                     // UserManager.DISALLOW_DEBUGGING_FEATURES             );     ])', 1), ('([21:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[transfer]:[21]:method_text:[erId;     protected String mOutgoingTestClassName;     protected String mIncomingTestClassName;     ])', 1), ('([6:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[transfer]:[6]:method_text:[etStrings(TRANSFER_OWNER_INCOMING_PKG, expectedManagementType)                 .build());     }     ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[transfer]:[3]:method_text:[               mOutgoingTestClassName,                 ""testTransferSameAdmin"", mUserId);     }     ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[transfer]:[3]:method_text:[           mOutgoingTestClassName,                 ""testTransferInvalidTarget"", mUserId);     }     ])', 1), ('([6:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[transfer]:[6]:method_text:[gTestClassName,                 ""testTransferPoliciesAreRetainedAfterTransfer"", mUserId);     }     ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[transfer]:[3]:method_text:[OutgoingTestClassName,                 ""testTransferOwnershipChangedBroadcast"", mUserId);     }     ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[transfer]:[5]:method_text:[lassName = outgoingTestClassName;         mIncomingTestClassName = incomingTestClassName;     }     ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[transfer]:[3]:method_text:[     mOutgoingTestClassName,                 ""testTransferOwnershipNoMetadata"", mUserId);     }     ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[transfer]:[5]:method_text:[   mIncomingTestClassName,                 ""testTransferOwnershipBundleLoaded"", mUserId);     }     ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[transfer]:[3]:method_text:[ClassName,                 ""testGetTransferOwnershipBundleOnlyCalledFromAdmin"", mUserId);     }     ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[transfer]:[5]:method_text:[ncomingTestClassName,                 ""testTransferOwnershipEmptyBundleLoaded"", mUserId);     }     ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[transfer]:[5]:method_text:[            return -1;         }         startUserAndWait(userId);         return userId;     }     ])', 1), ('([6:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[transfer]:[6]:method_text:[INCOMING_PKG,             testClassName,             ""testIsAffiliationId1"", profileUserId);     } }])', 1), ('([18:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java]:[transfer]:[18]:method_text:[gedBroadcastAction) {         mOwnerChangedBroadcastAction = ownerChangedBroadcastAction;     }     ])', 1), ('([2:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java]:[transfer]:[2]:method_text:[                  mOutgoingComponentName, mOutgoingComponentName, b);                 });     }     ])', 1), ('([2:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java]:[transfer]:[2]:method_text:[ponentName,                             INVALID_TARGET_COMPONENT, b);                 });     }     ])', 1), ('([3:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java]:[transfer]:[3]:method_text:[rQuietly();         }     }      abstract public void testTransferOwnership() throws Throwable;     ])', 1), ('([2:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java]:[transfer]:[2]:method_text:[transferOwnership(mOutgoingComponentName,                 INCOMING_COMPONENT_NAME, null);     }     ])', 1), ('([2:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java]:[transfer]:[2]:method_text:[                             INCOMING_NO_METADATA_COMPONENT_NAME, b);                 });     }     ])', 1), ('([2:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java]:[transfer]:[2]:method_text:[evicePolicyManager.transferOwnership(mOutgoingComponentName, INCOMING_COMPONENT_NAME, b);     }     ])', 1), ('([3:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java]:[transfer]:[3]:method_text:[ assertThrows(SecurityException.class, mDevicePolicyManager::getTransferOwnershipBundle);     }     ])', 1), ('([2:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java]:[transfer]:[2]:method_text:[Pref(Context context, String key) {         return getPrefs(context).getBoolean(key, false);     } }])', 1), ('([3:/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java]:[transfer]:[3]:method_text:[public class TransferDeviceOwnerIncomingTest extends DeviceAndProfileOwnerTransferIncomingTest {    ])', 1), ('([2:/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java]:[transfer]:[2]:method_text:[wStart()                 && policy1.getInstallWindowEnd() == policy2.getInstallWindowEnd());     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/LockTaskTest.java]:[confirm]:[1]:method_text:[        intent.setFlags(newTask ? Intent.FLAG_ACTIVITY_NEW_TASK : 0);         return intent;     } }])', 1)]"	""	""	""	""	""
"274:790271) 9.16  . Application Data Migration"	"9.16"	"C-1-1"	""	"[('com.android.cts.managedprofile.ContactsTest', 39), ('com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest', 17), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 13), ('com.android.cts.devicepolicy.CrossProfileAppsHostSideTest', 12), ('com.android.cts.devicepolicy.ManagedProfileTest', 12), ('com.android.cts.devicepolicy.DeviceOwnerTest', 11), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 8), ('com.android.cts.devicepolicy.LauncherAppsProfileTest', 6), ('com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest', 6), ('com.android.cts.devicepolicy.QuietModeHostsideTest', 6), ('com.android.cts.deviceowner.CreateAndManageUserTest', 5), ('com.android.cts.devicepolicy.MixedDeviceOwnerTest', 5), ('com.android.cts.devicepolicy.ManagedProfilePasswordTest', 4), ('com.android.cts.devicepolicy.CustomDeviceOwnerTest', 4), ('com.android.cts.devicepolicy.UserRestrictionsTest', 4), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTest', 4), ('com.android.cts.deviceandprofileowner.StorageEncryptionTest', 3), ('com.android.cts.devicepolicy.ManagedProfileCrossProfileTest', 3), ('com.android.cts.managedprofile.ProvisioningTest', 3), ('com.android.cts.devicepolicy.LauncherAppsMultiUserTest', 3), ('com.android.cts.devicepolicy.AccountCheckHostSideTest', 3), ('com.android.cts.intent.sender.CopyPasteTest', 3), ('com.android.cts.managedprofile.CrossProfileIntentFilterTest', 3), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest', 3), ('com.android.cts.devicepolicy.AdbProvisioningTests', 3), ('com.android.cts.devicepolicy.ManagedProfileProvisioningTest', 2), ('com.android.cts.devicepolicy.ProfileOwnerTest', 2), ('com.android.cts.devicepolicy.ManagedProfileWipeTest', 2), ('android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest', 2), ('com.android.cts.devicepolicy.ManagedProfileContactsTest', 2), ('com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest', 2), ('com.android.cts.managedprofile.PrimaryUserAdminHelper', 2), ('com.android.cts.devicepolicy.ManagedProfileTimeoutTest', 2), ('com.android.cts.managedprofile.PrimaryUserTest', 2), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi25', 1), ('com.android.cts.managedprofile.DisallowSharingIntoProfileTest', 1), ('com.android.cts.devicepolicy.CustomManagedProfileTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerTest', 1), ('com.android.cts.managedprofile.CrossProfileWidgetPrimaryUserTest', 1), ('com.android.cts.comp.DeviceWideLoggingFeaturesTest', 1), ('com.android.cts.intent.sender.AppLinkTest', 1), ('com.android.cts.devicepolicy.BaseDeviceAdminHostSideTest', 1), ('com.android.cts.managedprofile.BluetoothTest', 1), ('com.android.cts.managedprofile.BluetoothSharingRestrictionPrimaryProfileTest', 1), ('com.android.cts.managedprofile.UserManagerTest', 1), ('com.android.cts.launchertests.LauncherAppsTests', 1)]"	"[('setUp', 48), ('getDevice', 31), ('tearDown', 16), ('getTargetApiVersion', 5), ('waitForBroadcastIdle', 4), ('getAdminReceiverComponent', 3), ('getInstrumentation', 2), ('getContext', 2), ('createAndStartManagedProfile', 2), ('getDeviceAdminApkFileName', 2), ('getDeviceAdminApkPackage', 2), ('getArguments', 1), ('getSimpleName', 1), ('getMaxNumberOfUsersSupported', 1), ('getApiLevel', 1), ('build', 1), ('getPrimaryUser', 1), ('getInstalledPackageNames', 1), ('getTargetContext', 1), ('getPackageName', 1), ('assertNoPhotoUri', 1), ('Intent', 1), ('Connection', 1), ('waitForService', 1), ('getMainLooper', 1), ('getDefaultLauncher', 1), ('getUnprotectedAdminReceiverComponent', 1), ('getDeviceAdminJavaPackage', 1), ('getDefaultAdapter', 1), ('canRequestInteractAcrossProfiles', 1), ('canInteractAcrossProfiles', 1), ('createRequestInteractAcrossProfilesIntent', 1), ('createUser', 1)]"	""	""	"9.16/C-1-1"	"""C-1-1] MUST NOT initiate transfers of application data from devices on which the user has not set a primary authentication as described in 9.11.1 Secure Lock Screen and Authentication. """	"09160000.670101"	"authentication primary migration"	"migration  authentication primary"	""	""	"[('primary', 209), ('migration', 4)]"	"device"	"[('[com.android.cts.deviceandprofileowner.StorageEncryptionTest testSetStorageEncryption_enabled None]', 1), ('[com.android.cts.deviceandprofileowner.StorageEncryptionTest testSetStorageEncryption_disabled None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileProvisioningTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileProvisioningTest testAccountMigration None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testClearPasswordWithTokenBeforeUnlock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testUnlockWorkProfile_deviceWidePassword None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testRebootDevice_unifiedPassword None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testRebootDevice_separatePasswords None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi25 removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileIntentFilters None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testCrossProfileWidgets None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileCrossProfileTest testDisallowSharingIntoPersonalFromProfile None]', 1), ('[com.android.cts.managedprofile.ProvisioningTest PersistableBundle None]', 1), ('[com.android.cts.managedprofile.ProvisioningTest testProvisionManagedProfile_accountCopy None]', 1), ('[com.android.cts.managedprofile.ProvisioningTest testAccountNotExist None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest testGetActivitiesForNonProfileFails None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsMultiUserTest testNoLauncherCallbackPackageAddedSecondaryUser None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testGetActivitiesWithProfile None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testProfileOwnerAppHiddenInPrimaryProfile None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testLauncherCallbackPackageAddedProfile None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testLauncherCallbackPackageRemovedProfile None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testLauncherCallbackPackageChangedProfile None]', 1), ('[com.android.cts.devicepolicy.CustomDeviceOwnerTest testOwnerChangedBroadcast None]', 1), ('[com.android.cts.devicepolicy.CustomDeviceOwnerTest testCannotSetDeviceOwnerWhenSecondaryUserPresent None]', 1), ('[com.android.cts.devicepolicy.CustomDeviceOwnerTest testCannotSetDeviceOwnerWhenAccountPresent None]', 1), ('[com.android.cts.devicepolicy.CustomDeviceOwnerTest testIsProvisioningAllowed None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testCannotAddManagedProfileWithDeviceOwner None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testBindDeviceAdminServiceAsUser_secondaryUser None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testCannotAddProfileIfRestrictionSet None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testNetworkAndSecurityLoggingAvailableIfAffiliated None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testRequestBugreportAvailableIfAffiliated None]', 1), ('[com.android.cts.devicepolicy.ProfileOwnerTest testBackupServiceEnabling None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithReason None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileWipeTest testWipeDataWithoutReason None]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest runCleanupTestOnlyOwnerAllowingFailure None]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest testAccountCheck None]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest testInheritTestOnly None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test02_createShortuctsOnPrimaryUser None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test04_getAndLaunch_primary None]', 1), ('[com.android.cts.intent.sender.CopyPasteTest finish None]', 1), ('[com.android.cts.intent.sender.CopyPasteTest testCanReadAcrossProfiles None]', 1), ('[com.android.cts.intent.sender.CopyPasteTest testCannotReadAcrossProfiles None]', 1), ('[com.android.cts.devicepolicy.CustomManagedProfileTest testIsProvisioningAllowed None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileContactsTest testManagedContactsPolicies None]', 1), ('[com.android.cts.managedprofile.ContactsTest assertPhotoUrisReadable None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfilePhoneAndEmailLookup_insertedAndfound None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileDuplicatedPhoneEmailContact_insertedAndfound None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneLookup_canAccessEnterpriseContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseSipLookup_canAccessEnterpriseContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailLookup_canAccessEnterpriseContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneLookupDuplicated_canAccessPrimaryContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailLookupDuplicated_canAccessPrimaryContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfilePhoneLookup_canNotAccessEnterpriseContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEmailLookup_canNotAccessEnterpriseContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneLookup_canAccessPrimaryContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailLookup_canAccessPrimaryContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testManagedProfileEnterprisePhoneLookup_canNotAccessPrimaryContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testManagedProfileEnterpriseEmailLookup_canNotAccessPrimaryContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testManagedProfilePhoneLookup_canNotAccessPrimaryContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testManagedProfileEmailLookup_canNotAccessPrimaryContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailLookup_canNotAccessEnterpriseContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneLookup_canNotAccessEnterpriseContact None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneLookup_canNotAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailLookup_canNotAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testGetDirectoryListInPrimaryProfile None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailLookup_canAccessPrimaryDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailLookup_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneLookup_canAccessPrimaryDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneLookup_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseCallableFilter_canAccessPrimaryDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseCallableFilter_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseCallableFilter_canNotAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailFilter_canAccessPrimaryDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailFilter_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseEmailFilter_canNotAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseContactFilter_canAccessPrimaryDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseContactFilter_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseContactFilter_canNotAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneFilter_canAccessPrimaryDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneFilter_canAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterprisePhoneFilter_canNotAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testPrimaryProfileEnterpriseDirectories_canNotAccessManagedDirectories None]', 1), ('[com.android.cts.managedprofile.ContactsTest testQuickContact None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testApplicationRestrictions None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testScreenCaptureDisabled_assist None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDelegatedCertInstaller None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testCannotRemoveUserIfRestrictionSet None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testResetPasswordWithToken None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetStorageEncryption None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSecondaryLockscreen None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_SkipSetupWizard None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_Affiliated None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_Ephemeral None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_LeaveAllSystemApps None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testUserAddedOrRemovedBroadcasts None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_fromPersonalProfile_returnsTrue None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_fromWorkProfile_returnsTrue None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_noOtherProfiles_ReturnsFalse None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_packageNotWhitelisted_returnsTrue None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_packageNotInstalled_returnsTrue None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_permissionNotRequested_returnsFalse None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanRequestInteractAcrossProfiles_profileOwner_returnsFalse None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withAppOpEnabled_returnsTrue None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withCrossProfilesPermission_returnsTrue None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withCrossUsersPermission_returnsTrue None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withCrossUsersFullPermission_returnsTrue None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_fromWorkProfile_returnsTrue None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withAppOpDisabled_returnsFalse None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCanInteractAcrossProfiles_withNoOtherProfile_returnsFalse None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCreateRequestInteractAcrossProfilesIntent_canRequestInteraction_returnsIntent None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCreateRequestInteractAcrossProfilesIntent_fromWorkProfile_returnsIntent None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsPermissionHostSideTest testCreateRequestInteractAcrossProfilesIntent_canNotRequestInteraction_throwsSecurityException None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_primaryProfileOwnerOnly None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_layering_profileOwnerNoLeaking None]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_ProfileGlobalRestrictionsAsPo None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testScreenCaptureDisabled_allowedPrimaryUser None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testScreenCaptureDisabled_assist_allowedPrimaryUser None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testAudioRestriction None]', 1), ('[com.android.cts.intent.sender.AppLinkTest testReceivedByAppLinkActivityInPrimary None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest testEXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_NAME None]', 1), ('[com.android.cts.managedprofile.CrossProfileIntentFilterTest CrossProfileIntentFilterTest None]', 1), ('[com.android.cts.managedprofile.CrossProfileIntentFilterTest testClearCrossProfileIntentFilters None]', 1), ('[com.android.cts.managedprofile.CrossProfileIntentFilterTest testAddCrossProfileIntentFilter_primary None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTransferOwnership None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testIsBundleNullNoTransfer None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerHostSideTransferTest testTargetDeviceAdminServiceBound None]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest wakeupAndDismissKeyguard None]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_defaultForegroundLauncher None]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_notForegroundLauncher None]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_notDefaultLauncher None]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testBroadcastManagedProfileAvailable_withCrossProfileAppsOp None]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_noCredentialRequest None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_MaxUsers None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_StartInBackground_MaxRunningUsers None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testWifiConfigLockdown None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCannotSetDeviceOwnerAgain None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testDisallowFactoryReset None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testPackageInstallCache None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testPackageInstallCache_multiUser None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testDefaultSmsApplication None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testNoHiddenActivityFoundTest None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSetUserControlDisabledPackages None]', 1), ('[com.android.cts.devicepolicy.AdbProvisioningTests testAdbDeviceOwnerLogged None]', 1), ('[com.android.cts.devicepolicy.AdbProvisioningTests testAdbProfileOwnerLogged None]', 1), ('[com.android.cts.managedprofile.BluetoothTest isEnabled None]', 1), ('[com.android.cts.managedprofile.UserManagerTest testIsProfileReturnsFalse_runAsPrimary None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testPrimaryUserToPrimaryUser None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testPrimaryUserToManagedProfile None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testManagedProfileToPrimaryUser None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityComponent None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntent None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntentPermissions None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntent_isLogged None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartActivityIntent_sameTaskByDefault None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testPrimaryUserToSecondaryUser None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testStartMainActivity_logged None]', 1), ('[com.android.cts.devicepolicy.CrossProfileAppsHostSideTest testGetTargetUserProfiles_logged None]', 1), ('[com.android.cts.managedprofile.PrimaryUserAdminHelper testClearDeviceAdmin None]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testLockTask_unaffiliatedUser None]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testLockTask_affiliatedSecondaryUser None]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testAdminConfiguredNetworks None]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testLocationPermissionGrantNotifies None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTimeoutTest testWorkProfileTimeoutBackground None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTimeoutTest testWorkProfileTimeoutKeepScreenOnWindow None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testAppLinks_verificationStatus None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCameraPolicy None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testBluetoothSharingRestriction None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest userManagerIsManagedProfileReturnsCorrectValues None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCanGetWorkShortcutIconDrawableFromPersonalProfile None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCanGetPersonalShortcutIconDrawableFromWorkProfile None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCanGetProfiles None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testCanCreateProfile None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testResolverActivityLaunchedFromPersonalProfileWithSelectedWorkTab None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testResolverActivityLaunchedFromWorkProfileWithSelectedPersonalTab None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testChooserActivityLaunchedFromPersonalProfileWithSelectedWorkTab None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testChooserActivityLaunchedFromWorkProfileWithSelectedPersonalTab None]', 1), ('[com.android.cts.launchertests.LauncherAppsTests testAccessPrimaryProfileFromManagedProfile None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCanRelinquishControlOverDevice None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testUserRestrictionsSetOnParentAreNotPersisted None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCameraDisabledOnParentIsEnforced None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testIsDeviceOrganizationOwnedWithManagedProfile None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionNormalApp None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionInstalledApp None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionSms None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPersonalAppsSuspensionIme None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCanRestrictAccountManagementOnParentProfile None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testScreenCaptureDisabled None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testWorkProfileMaximumTimeOff None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testDeviceIdAttestationForProfileOwner None]', 1), ('[com.android.cts.managedprofile.PrimaryUserTest PrimaryUserTest None]', 1), ('[com.android.cts.managedprofile.PrimaryUserTest testAddCrossProfileIntentFilter_primary None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ContactsTest.java', 39), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java', 17), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 13), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java', 12), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 12), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 11), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 8), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/LauncherAppsProfileTest.java', 6), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 6), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/QuietModeHostsideTest.java', 6), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/CreateAndManageUserTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/CustomDeviceOwnerTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ProvisioningTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/AccountCheckHostSideTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/CopyPasteTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileIntentFilterTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/AdbProvisioningTests.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileProvisioningTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ProfileOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileWipeTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/multiuser/src/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileContactsTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/PrimaryUserAdminHelper.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTimeoutTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/PrimaryUserTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/CustomManagedProfileTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileWidgetPrimaryUserTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/DeviceWideLoggingFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/AppLinkTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDeviceAdminHostSideTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/BluetoothTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/BluetoothSharingRestrictionPrimaryProfileTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/UserManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/LauncherTests/src/com/android/cts/launchertests/LauncherAppsTests.java', 1)]"	"[('/com/android/cts/managedprofile/ContactsTest.java', 40), ('/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java', 18), ('/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 14), ('/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java', 13), ('/com/android/cts/devicepolicy/ManagedProfileTest.java', 13), ('/com/android/cts/devicepolicy/DeviceOwnerTest.java', 12), ('/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 9), ('/com/android/cts/devicepolicy/LauncherAppsProfileTest.java', 7), ('/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 7), ('/com/android/cts/devicepolicy/QuietModeHostsideTest.java', 7), ('/com/android/cts/deviceowner/CreateAndManageUserTest.java', 6), ('/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java', 6), ('/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java', 5), ('/com/android/cts/devicepolicy/CustomDeviceOwnerTest.java', 5), ('/com/android/cts/devicepolicy/UserRestrictionsTest.java', 5), ('/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 5), ('/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java', 4), ('/com/android/cts/devicepolicy/ManagedProfileProvisioningTest.java', 4), ('/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java', 4), ('/com/android/cts/managedprofile/ProvisioningTest.java', 4), ('/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java', 4), ('/com/android/cts/devicepolicy/AccountCheckHostSideTest.java', 4), ('/com/android/cts/intent/sender/CopyPasteTest.java', 4), ('/com/android/cts/managedprofile/CrossProfileIntentFilterTest.java', 4), ('/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java', 4), ('/com/android/cts/devicepolicy/AdbProvisioningTests.java', 4), ('/com/android/cts/devicepolicy/ProfileOwnerTest.java', 3), ('/com/android/cts/devicepolicy/ManagedProfileWipeTest.java', 3), ('/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java', 3), ('/com/android/cts/devicepolicy/ManagedProfileContactsTest.java', 3), ('/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java', 3), ('/com/android/cts/managedprofile/PrimaryUserAdminHelper.java', 3), ('/com/android/cts/devicepolicy/ManagedProfileTimeoutTest.java', 3), ('/com/android/cts/managedprofile/PrimaryUserTest.java', 3), ('/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java', 2), ('/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java', 2), ('/com/android/cts/devicepolicy/CustomManagedProfileTest.java', 2), ('/com/android/cts/devicepolicy/MixedProfileOwnerTest.java', 2), ('/com/android/cts/managedprofile/CrossProfileWidgetPrimaryUserTest.java', 2), ('/com/android/cts/comp/DeviceWideLoggingFeaturesTest.java', 2), ('/com/android/cts/intent/sender/AppLinkTest.java', 2), ('/com/android/cts/devicepolicy/BaseDeviceAdminHostSideTest.java', 2), ('/com/android/cts/managedprofile/BluetoothTest.java', 2), ('/com/android/cts/managedprofile/BluetoothSharingRestrictionPrimaryProfileTest.java', 2), ('/com/android/cts/managedprofile/UserManagerTest.java', 2), ('/com/android/cts/launchertests/LauncherAppsTests.java', 2)]"	"[('([1:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[1]:method_text:[                    directoryId);             assertNull(directoryContactInfo);         }     }     ])', 4), ('([4:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[4]:method_text:[actInfo.hasPhotoId());         assertFalse(isEnterpriseContactId(contactInfo.contactId));     }     ])', 3), ('([1:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[1]:method_text:[tactInfo.hasPhotoId());         assertTrue(isEnterpriseContactId(contactInfo.contactId));     }     ])', 3), ('([7:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[7]:method_text:[PrimaryRemoteDirectoryId());         assertPrimaryDirectoryContact(directoryContactInfo);     }     ])', 3), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[primary]:[2]:method_text:[ion_returnsTrue"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 3), ('([1:/com/android/cts/devicepolicy/LauncherAppsProfileTest.java]:[primary]:[1]:method_text:[tUserId, Collections.singletonMap(PARAM_TEST_USER, mProfileSerialNumber));     }      @FlakyTest    ])', 2), ('([3:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[3]:method_text:[actInfo.hasPhotoId());         assertFalse(isEnterpriseContactId(contactInfo.contactId));     }     ])', 2), ('([1:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[1]:method_text:[*isEnterprise*/,                 MANAGED_CONTACT_PHONE);         assertNull(contactInfo);     }     ])', 2), ('([1:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[1]:method_text:[*isEnterprise*/,                 MANAGED_CONTACT_EMAIL);         assertNull(contactInfo);     }     ])', 2), ('([2:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[2]:method_text:[*isEnterprise*/,                 PRIMARY_CONTACT_PHONE);         assertNull(contactInfo);     }     ])', 2), ('([7:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[7]:method_text:[               directoryId);         assertPrimaryDirectoryContact(directoryContactInfo);     }     ])', 2), ('([1:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[1]:method_text:[               directoryId);         assertManagedDirectoryContact(directoryContactInfo);     }     ])', 2), ('([1:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[1]:method_text:[CONTACT_PHONE, directoryId);         assertManagedDirectoryContact(directoryContactInfo);     }     ])', 2), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[primary]:[2]:method_text:[les_returnsTrue"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 2), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[primary]:[2]:method_text:[ed_returnsFalse"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 2), ('([1:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[primary]:[1]:method_text:[                mPrimaryUserId,                 createParams(mProfileId));     }      @LargeTest    ])', 2), ('([4:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[primary]:[4]:method_text:[eSharingTest"",                     ""clearCrossProfileIntents"", mProfileUserId);         }     }     ])', 2), ('([6:/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java]:[primary]:[6]:method_text:[                InstrumentationRegistry.getArguments().getString(IS_PRIMARY_USER_PARAM));     }     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java]:[primary]:[2]:method_text:[tStorageEncryption(ADMIN_RECEIVER_COMPONENT))                 .isEqualTo(mIsPrimaryUser);     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/StorageEncryptionTest.java]:[primary]:[1]:method_text:[  assertThat(mDevicePolicyManager.getStorageEncryption(ADMIN_RECEIVER_COMPONENT)).isFalse();     } }])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileProvisioningTest.java]:[primary]:[1]:method_text:[ANAGED_PROFILE_PKG);         }         super.tearDown();     }     @FlakyTest(bugId = 141747631)    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileProvisioningTest.java]:[migration]:[1]:method_text:[                 ""testAccountNotExist"", mParentUserId);     }      @FlakyTest(bugId = 141747631)    ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[primary]:[2]:method_text:[nified work challenge and the primary user clears      * the device lock.      */     @FlakyTest    ])', 1), ('([3:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[primary]:[3]:method_text:[_PASSWORD, mPrimaryUserId);         }     }      @FlakyTest     @LargeTest     @LockSettingsTest    ])', 1), ('([3:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[primary]:[3]:method_text:[   // end.             pressPowerButton();         }     }      @LargeTest     @LockSettingsTest    ])', 1), ('([7:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[primary]:[7]:method_text:[ng erroneously shown at the             // end.             pressPowerButton();         }     }     ])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java]:[primary]:[1]:method_text:[moveUser(mUserId);         }         super.tearDown();     }      @Override     @PermissionsTest    ])', 1), ('([3:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[primary]:[3]:method_text:[getSystemService(DevicePolicyManager.class);         assertNotNull(mDevicePolicyManager);     }     ])', 1), ('([6:/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java]:[primary]:[6]:method_text:[PrimaryUserTest"", mParentUserId);         // TODO: Test with startActivity     }      @FlakyTest    ])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java]:[primary]:[4]:method_text:[;             getDevice().uninstallPackage(WIDGET_PROVIDER_PKG);         }     }      @FlakyTest    ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java]:[primary]:[2]:method_text:[            "".DisallowSharingIntoProfileTest"", ""testSharingFromProfile"", mProfileUserId);     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[migration]:[1]:method_text:[.getTargetContext();         mDpm = mContext.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[migration]:[1]:method_text:[gIntent()                 .putExtra(EXTRA_PROVISIONING_KEEP_ACCOUNT_ON_MIGRATION, true));     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[migration]:[1]:method_text:[ext context) {         return context.getSharedPreferences(SHARED_PREFERENCE_FILE_NAME, 0);     }  }])', 1), ('([1:/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java]:[primary]:[1]:method_text:[r(mSecondaryUserId);             uninstallTestApps();         }         super.tearDown();     }     ])', 1), ('([2:/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java]:[primary]:[2]:method_text:[,                 Collections.singletonMap(PARAM_TEST_USER, mSecondaryUserSerialNumber));     }     ])', 1), ('([3:/com/android/cts/devicepolicy/LauncherAppsMultiUserTest.java]:[primary]:[3]:method_text:[rId,                 Collections.singletonMap(PARAM_TEST_USER, mSecondaryUserSerialNumber));     } }])', 1), ('([2:/com/android/cts/devicepolicy/LauncherAppsProfileTest.java]:[primary]:[2]:method_text:[allPackage(LAUNCHER_TESTS_HAS_LAUNCHER_ACTIVITY_APK);         }         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/devicepolicy/LauncherAppsProfileTest.java]:[primary]:[1]:method_text:[NCHER_TESTS_CLASS, ""testGetProfiles_fromManagedProfile"",                 mProfileUserId);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/LauncherAppsProfileTest.java]:[primary]:[2]:method_text:[        mParentUserId, Collections.singletonMap(PARAM_TEST_USER, mMainUserSerialNumber));     }     ])', 1), ('([1:/com/android/cts/devicepolicy/LauncherAppsProfileTest.java]:[primary]:[1]:method_text:[         mParentUserId, Collections.singletonMap(PARAM_TEST_USER, mProfileSerialNumber));     }     ])', 1), ('([6:/com/android/cts/devicepolicy/CustomDeviceOwnerTest.java]:[primary]:[6]:method_text:[                    removeAdmin(DEVICE_OWNER_ADMIN_COMPONENT, mPrimaryUserId));         }     }     ])', 1), ('([3:/com/android/cts/devicepolicy/CustomDeviceOwnerTest.java]:[primary]:[3]:method_text:[      removeAdmin(DEVICE_OWNER_ADMIN_COMPONENT, mPrimaryUserId);         }     }      @FlakyTest    ])', 1), ('([6:/com/android/cts/devicepolicy/CustomDeviceOwnerTest.java]:[primary]:[6]:method_text:[UtilsTest"",                     ""testRemoveAccountExplicitly"", mPrimaryUserId);         }     }     ])', 1), ('([1:/com/android/cts/devicepolicy/CustomDeviceOwnerTest.java]:[primary]:[1]:method_text:[);         } finally {             getDevice().uninstallPackage(DEVICE_OWNER_PKG);         }     } }])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[primary]:[5]:method_text:[th device owner and profile are the same package ({@link #COMP_DPC_PKG}).      */     @LargeTest    ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[primary]:[1]:method_text:[  * creating managed profile through ManagedProvisioning like normal flow      */     @FlakyTest    ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[primary]:[1]:method_text:[   verifyBindDeviceAdminServiceAsUser(secondaryUserId);     }      @FlakyTest(bugId = 141161038)    ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[primary]:[1]:method_text:[ "" com.android.cts.comp/.WipeDataReceiver"";         getDevice().executeShellCommand(cmd);     }     ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[primary]:[5]:method_text:[lingNetworkAndSecurityLogging"",                 mPrimaryUserId);         }     }      @FlakyTest    ])', 1), ('([16:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[primary]:[16]:method_text:[              ""testOtherProfilesEqualsBindTargetUsers"",                 otherProfileUserId);     } }])', 1), ('([1:/com/android/cts/devicepolicy/ProfileOwnerTest.java]:[primary]:[1]:method_text:[_OWNER_PKG);                 fail(""Failed to set profile owner"");             }         }     }     ])', 1), ('([1:/com/android/cts/devicepolicy/ProfileOwnerTest.java]:[primary]:[1]:method_text:[s Exception {         runDeviceTestsAsUser(PROFILE_OWNER_PKG, className, testName, mUserId);     } }])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[primary]:[1]:method_text:[ its result is not asserted.         waitUntilUserRemoved(mProfileUserId);     }      @FlakyTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileWipeTest.java]:[primary]:[1]:method_text:[peData() test removes the managed profile, so it needs to be separated from other tests.      */    ])', 1), ('([9:/com/android/cts/devicepolicy/AccountCheckHostSideTest.java]:[primary]:[9]:method_text:[g.i(""# of preconfigured accounts="" + count);          return Integer.parseInt(count) > 0;     }     ])', 1), ('([3:/com/android/cts/devicepolicy/AccountCheckHostSideTest.java]:[primary]:[3]:method_text:[t-only"" flag changes when an app is updated, we still respect      * the original value.      */    ])', 1), ('([4:/com/android/cts/devicepolicy/AccountCheckHostSideTest.java]:[primary]:[4]:method_text:[clean up after a failure: "" + e.getMessage());             }              throw e;         }     } }])', 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[primary]:[1]:method_text:[                        new ComponentName(getContext(), MainActivity.class))).build())));     }     ])', 1), (""([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[primary]:[1]:method_text:[r);     }      @Suppress // Having a launcher on managed profile is not supported, so don't run.    ])"", 1), ('([1:/com/android/cts/intent/sender/CopyPasteTest.java]:[primary]:[1]:method_text:[ void tearDown() throws Exception {         mActivity.finish();         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/intent/sender/CopyPasteTest.java]:[primary]:[1]:method_text:[ProfileReceiverToCopy(NEW_TEXT);          assertEquals(NEW_TEXT, getTextFromClipboard());     }     ])', 1), ('([3:/com/android/cts/intent/sender/CopyPasteTest.java]:[primary]:[3]:method_text:[    }       @Override     public void onPrimaryClipChanged() {         mNotified.release();     }  }])', 1), ('([5:/com/android/cts/devicepolicy/CustomManagedProfileTest.java]:[primary]:[5]:method_text:[      runDeviceTestsAsUser(MANAGED_PROFILE_PKG, "".PreManagedProfileTest"", testName, userId);     } }])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileContactsTest.java]:[primary]:[2]:method_text:[  private static final String SET_CUSTOM_DIRECTORY_PREFIX_METHOD = ""set_prefix"";      @LargeTest    ])', 1), ('([66:/com/android/cts/devicepolicy/ManagedProfileContactsTest.java]:[primary]:[66]:method_text:[seDirectories_canNotAccessManagedDirectories"",                     mParentUserId);         }     } }])', 1), ('([14:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[14]:method_text:[PolicyManager) mContext                 .getSystemService(Context.DEVICE_POLICY_SERVICE);     }     ])', 1), ('([10:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[10]:method_text:[ctInfo.hasPhotoId());         assertFalse(isEnterpriseContactId(contactInfo.contactId));      }     ])', 1), ('([2:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[2]:method_text:[*isEnterprise*/,                 PRIMARY_CONTACT_EMAIL);         assertNull(contactInfo);     }     ])', 1), ('([2:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[2]:method_text:[isEnterprise */,                 PRIMARY_CONTACT_EMAIL);         assertNull(contactInfo);     }     ])', 1), ('([14:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[14]:method_text:[RY_INTERVAL);                 } catch (InterruptedException e) {}             }         }     }     ])', 1), ('([7:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[7]:method_text:[rimaryRemoteDirectoryId());         assertPrimaryDirectoryContact(directoryContactInfo);      }     ])', 1), ('([1:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[1]:method_text:[CONTACT_EMAIL, directoryId);         assertManagedDirectoryContact(directoryContactInfo);     }     ])', 1), ('([1:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[1]:method_text:[_DISPLAY_NAME, directoryId);         assertManagedDirectoryContact(directoryContactInfo);     }     ])', 1), ('([1:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[1]:method_text:[NTACT_DISPLAY_NAME, directoryId);             assertNull(directoryContactInfo);         }     }     ])', 1), ('([1:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[1]:method_text:[AGED_CONTACT_PHONE, directoryId);             assertNull(directoryContactInfo);         }     }     ])', 1), ('([1:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[1]:method_text:[               }             }         } finally {             cursor.close();         }     }      ])', 1), ('([14:/com/android/cts/managedprofile/ContactsTest.java]:[primary]:[14]:method_text:[ArgumentException is not thrown"");         } catch (IllegalArgumentException ex) {         }     } }])', 1), ('([1:/com/android/cts/devicepolicy/MixedProfileOwnerTest.java]:[primary]:[1]:method_text:[R_TEST_CLASS, mUserId));         }         super.tearDown();     }      @Override     @FlakyTest    ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[primary]:[3]:method_text:[ getDevice().executeShellCommand(""input keyevent 3"");         }         super.tearDown();     }     ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[primary]:[3]:method_text:[Delegations} to test that      *    the scope can only be delegatd to one app at a time.      */    ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[primary]:[1]:method_text:[ist(mUserId, false /* disabled */);             clearVoiceInteractionService();         }     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[primary]:[1]:method_text:[aller app is called directly rather than via intents from     // the DelegatedCertinstallerTest.    ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[primary]:[2]:method_text:[_USER, false, mUserId);             assertTrue(getDevice().removeUser(userId));         }     }     ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[primary]:[2]:method_text:[y         // without allowing failures.         executeResetPasswordWithTokenTests(true);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[primary]:[2]:method_text:[                 DEVICE_ADMIN_PKG, STORAGE_ENCRYPTION_TEST_CLASS, null, mUserId, params);     }     ])', 1), ('([7:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[primary]:[7]:method_text:[and(                 restricted ? RESTRICT_BACKGROUND_ON_CMD : RESTRICT_BACKGROUND_OFF_CMD);     } }])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[primary]:[1]:method_text:[IZARD, ""assertSkipSetupWizard"");         PrimaryUserService.assertCrossUserCallArrived();     }     ])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[primary]:[1]:method_text:[    assertTrue(""not ephemeral user"", devicePolicyManager.isEphemeralUser(componentName));     }     ])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[primary]:[1]:method_text:[stalled: "" + uninstalledPackageNames,                 uninstalledPackageNames.isEmpty());     }     ])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[primary]:[1]:method_text:[serHandle;     }      // createAndManageUser should circumvent the DISALLOW_ADD_USER restriction    ])', 1), ('([5:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[primary]:[5]:method_text:[{             return new ComponentName(context, SecondaryUserAdminReceiver.class);         }     } }])', 1), ('([4:/com/android/cts/managedprofile/CrossProfileWidgetPrimaryUserTest.java]:[primary]:[4]:method_text:[ = new Result(Looper.getMainLooper());         mResultMessenger = new Messenger(mResult);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[primary]:[1]:method_text:[rofiles_returnsTrue"",                 mProfileId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[primary]:[2]:method_text:[es_returnsFalse"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([3:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[primary]:[3]:method_text:[les_returnsTrue"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([3:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[primary]:[3]:method_text:[es_returnsFalse"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[primary]:[2]:method_text:[led_returnsTrue"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[primary]:[1]:method_text:[Enabled_returnsTrue"",                 mProfileId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[primary]:[2]:method_text:[le_returnsFalse"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[primary]:[2]:method_text:[n_returnsIntent"",                 mPrimaryUserId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[primary]:[1]:method_text:[ction_returnsIntent"",                 mProfileId,                 Collections.EMPTY_MAP);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsPermissionHostSideTest.java]:[primary]:[2]:method_text:[geName) {         return Collections.singletonMap(PARAM_CROSS_PROFILE_PACKAGE, packageName);     } }])', 1), ('([1:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[primary]:[1]:method_text:[          throws DeviceNotAvailableException {         runTests(className, null, userId);     }     ])', 1), ('([4:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[primary]:[4]:method_text:[, mDeviceOwnerUserId);     }      // Checks restrictions for managed user (NOT managed profile).    ])', 1), ('([1:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[primary]:[1]:method_text:[_APPS), should affect all      * users (not a particularly special case but to be sure).      */    ])', 1), ('([3:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[primary]:[3]:method_text:[throws Exception {         runTests(GLOBAL_RESTRICTIONS_TEST_CLASS, testMethodName, userId);     } }])', 1), (""([1:/com/android/cts/comp/DeviceWideLoggingFeaturesTest.java]:[primary]:[1]:method_text:[ there's one user on the device or      * all secondary users / profiles are affiliated.      */    ])"", 1), ('([2:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[primary]:[2]:method_text:[s in the primary user when the policy      * is set on the profile owner.      */     @LargeTest    ])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[primary]:[1]:method_text:[viceTestMethod("".ScreenCaptureDisabledTest"", ""testScreenCapturePossible"");     }      @FlakyTest    ])', 1), ('([2:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[primary]:[2]:method_text:[tureDisabled_false"");             clearVoiceInteractionService();         }     }      @Override    ])', 1), (""([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[primary]:[1]:method_text:['t require physical device for managed profile, thus overriding. */     @FlakyTest     @Override    ])"", 1), ('([1:/com/android/cts/intent/sender/AppLinkTest.java]:[primary]:[1]:method_text:[tyInPrimary() throws Exception {         checkHttpIntentResult(APP_LINK_ACTIVITY, false);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java]:[primary]:[1]:method_text:[().uninstallPackage(SINGLE_ADMIN_PKG);         }         super.tearDown();     }      @FlakyTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java]:[primary]:[1]:method_text:[ileProvisioning"", mPrimaryUserId);          mProfileUserId = getFirstManagedProfileUserId();     } }])', 1), ('([2:/com/android/cts/managedprofile/CrossProfileIntentFilterTest.java]:[primary]:[2]:method_text:[nager.clearCrossProfileIntentFilters(ADMIN_RECEIVER_COMPONENT);         super.tearDown();     }     ])', 1), ('([3:/com/android/cts/managedprofile/CrossProfileIntentFilterTest.java]:[primary]:[3]:method_text:[ManagedProfileActivity.ACTION);         assertTrue(getActivity().checkActivityStarted());     }     ])', 1), ('([5:/com/android/cts/managedprofile/CrossProfileIntentFilterTest.java]:[primary]:[5]:method_text:[ty(PrimaryUserActivity.ACTION);         assertTrue(getActivity().checkActivityStarted());     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[primary]:[1]:method_text:[etStrings(TRANSFER_OWNER_INCOMING_PKG, expectedManagementType)                 .build());     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[primary]:[1]:method_text:[            return -1;         }         startUserAndWait(userId);         return userId;     }     ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerHostSideTransferTest.java]:[primary]:[2]:method_text:[INCOMING_PKG,             testClassName,             ""testIsAffiliationId1"", profileUserId);     } }])', 1), ('([2:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[primary]:[2]:method_text:[installPackage(TEST_LAUNCHER_PACKAGE);         }         super.tearDown();     }      @LargeTest    ])', 1), ('([3:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[primary]:[3]:method_text:[edential= */ TEST_PASSWORD,                     mPrimaryUserId);         }     }      @LargeTest    ])', 1), ('([2:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[primary]:[2]:method_text:[         return String.format(""%s: onReceive(%s)"", className, actionName);     }      @LargeTest    ])', 1), ('([5:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[primary]:[5]:method_text:[      params.put(PARAM_ORIGINAL_DEFAULT_LAUNCHER, mOriginalLauncher);         return params;     } }])', 1), ('([4:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[primary]:[4]:method_text:[tchUser(USER_SYSTEM);             removeTestUsers();         }          super.tearDown();     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[primary]:[1]:method_text:[eUser.      * {@link android.app.admin.DevicePolicyManager#getSecondaryUsers} is tested.      */    ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[primary]:[1]:method_text:[s on that user.      * {@link android.app.admin.DevicePolicyManager#stopUser} is tested.      */    ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[primary]:[1]:method_text:[         }         }     }      /**      * Execute WifiSetHttpProxyTest as device owner.      */    ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[primary]:[4]:method_text:[D_PROFILE_PKG);         }     }      // Execute HardwarePropertiesManagerTest as a device owner.    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[primary]:[5]:method_text:[e().uninstallPackage(DeviceAdminHelper.getDeviceAdminApkPackage(adminVersion));         }     }     ])', 1), ('([7:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[primary]:[7]:method_text:[ommand);             getDevice().uninstallPackage(TEST_APP_PKG);         }     }      @LargeTest    ])', 1), ('([8:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[primary]:[8]:method_text:[eShellCommand(command);             getDevice().uninstallPackage(TEST_APP_PKG);         }     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[primary]:[1]:method_text:[estSetDefaultSmsApplication"");          getDevice().uninstallPackage(SIMPLE_SMS_APP_PKG);     }     ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[primary]:[5]:method_text:[         getDevice().uninstallPackage(BaseLauncherAppsTest.LAUNCHER_TESTS_APK);         }     }     ])', 1), ('([10:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[primary]:[10]:method_text:[int newUserId = newUsers.get(0);          assertFalse(getDevice().isUserRunning(newUserId));     } }])', 1), ('([1:/com/android/cts/devicepolicy/AdbProvisioningTests.java]:[primary]:[1]:method_text:[      }         super.tearDown();         getDevice().uninstallPackage(DEVICE_ADMIN_PKG);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/AdbProvisioningTests.java]:[primary]:[1]:method_text:[ean(false)                     .setStrings(""device-owner"")                     .build());     }     ])', 1), ('([1:/com/android/cts/devicepolicy/AdbProvisioningTests.java]:[primary]:[1]:method_text:[  .setBoolean(false)                 .setStrings(""profile-owner"")                 .build());     } }])', 1), ('([1:/com/android/cts/devicepolicy/BaseDeviceAdminHostSideTest.java]:[primary]:[1]:method_text:[e, null);     }      /**      * Run all tests in DeviceAdminTest.java (as device admin).      */    ])', 1), ('([2:/com/android/cts/managedprofile/BluetoothTest.java]:[primary]:[2]:method_text:[er.tearDown();     }      /**      * Checks enable(), disable(), getState(), isEnabled()      */    ])', 1), ('([2:/com/android/cts/managedprofile/BluetoothSharingRestrictionPrimaryProfileTest.java]:[primary]:[2]:method_text:[mentationTestCase {     /** Verifies that bluetooth sharing is available in personal profile. */    ])', 1), ('([1:/com/android/cts/managedprofile/UserManagerTest.java]:[primary]:[1]:method_text:[.permission.INTERACT_ACROSS_USERS"");         assertThat(mUserManager.isProfile()).isFalse();     } }])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[primary]:[2]:method_text:[ userId);         installAppAsUser(SIMPLE_APP_APK, userId);     }      @FlakyTest     @LargeTest    ])', 1), ('([4:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[primary]:[4]:method_text:[PrimaryUserId, mPrimaryUserId, NON_TARGET_USER_TEST_CLASS);     }      @FlakyTest     @LargeTest    ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[primary]:[2]:method_text:[fyCrossProfileAppsApi(mPrimaryUserId, mProfileId, TARGET_USER_TEST_CLASS);     }      @LargeTest    ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[primary]:[2]:method_text:[fyCrossProfileAppsApi(mProfileId, mPrimaryUserId, TARGET_USER_TEST_CLASS);     }      @LargeTest    ])', 1), ('([4:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[primary]:[4]:method_text:[_ACTIVITY_TEST_CLASS, ""testCannotStartActivityInOtherPackageByComponent"");     }      @LargeTest    ])', 1), ('([6:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[primary]:[6]:method_text:[ART_ACTIVITY_TEST_CLASS, ""testCannotStartActivityInOtherPackageByIntent"");     }      @LargeTest    ])', 1), ('([4:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[primary]:[4]:method_text:[ASS, ""testCanStartActivityByIntentWithInteractAcrossUsersFullPermission"");     }      @LargeTest    ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[primary]:[1]:method_text:[ .setBoolean(true) // from work profile                         .build());     }      @LargeTest    ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[primary]:[1]:method_text:[   return -1;         }         return Integer.parseInt(matcher.group(1));     }      @LargeTest    ])', 1), ('([2:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[primary]:[2]:method_text:[fileAppsApi(mPrimaryUserId, mSecondaryUserId, NON_TARGET_USER_TEST_CLASS);     }      @LargeTest    ])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[primary]:[1]:method_text:[com.android.cts.crossprofileappstest""})                         .build());     }      @LargeTest    ])', 1), ('([3:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[primary]:[3]:method_text:[romSource(logcatStream);         }         getDevice().startLogcat();         return logcat;     } }])', 1), ('([2:/com/android/cts/managedprofile/PrimaryUserAdminHelper.java]:[primary]:[2]:method_text:[ this test should be executed before the      * device admin package can be uninstalled.      */    ])', 1), ('([1:/com/android/cts/managedprofile/PrimaryUserAdminHelper.java]:[primary]:[1]:method_text:[       }         }         assertFalse(""Clear device admin failed"", mDpm.isAdminActive(cn));     } }])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[primary]:[1]:method_text:[oveAdmin(DEVICE_ADMIN_COMPONENT_FLATTENED, mUserId));         }         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[primary]:[1]:method_text:[redIfUserBecomesUnaffiliated"",                 userId);     }      @FlakyTest(bugId = 127270520)    ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[primary]:[1]:method_text:[Primary(userId);         runDeviceTestsAsUser(DEVICE_ADMIN_PKG, "".LockTaskTest"", userId);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[primary]:[1]:method_text:[  runDeviceTestsAsUser(DEVICE_ADMIN_PKG, "".AdminConfiguredNetworksTest"", mPrimaryUserId);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[primary]:[2]:method_text:[ser(                 DEVICE_ADMIN_PKG, "".AffiliationTest"", ""testSetAffiliationId1"", userId);     } }])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTimeoutTest.java]:[primary]:[1]:method_text:[** Profile should get locked if it is in foreground but with no user activity. */     @LargeTest    ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTimeoutTest.java]:[primary]:[2]:method_text:[%s %s/.TimeoutActivity"",                 profileUserId, keepScreenOn, MANAGED_PROFILE_PKG));     } }])', 1), ('([3:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[primary]:[3]:method_text:[ce.         assertAppLinkResult(""testReceivedByAppLinkActivityInManaged"");     }      @LargeTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[primary]:[1]:method_text:[,                     adminHelperClass, ""testClearDeviceAdmin"", mParentUserId);         }     }     ])', 1), ('([3:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[primary]:[3]:method_text:[enable once profile owner on personal device can no longer access     //identifiers.     @Ignore    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[primary]:[1]:method_text:[ "".UserManagerTest"",                 ""testIsManagedProfileReturnsFalse"", mPrimaryUserId);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[primary]:[1]:method_text:[herAppsTest"",                     ""removeAllDynamicShortcuts"", mProfileUserId);         }     }     ])', 1), ('([3:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[primary]:[3]:method_text:[herAppsTest"",                     ""removeAllDynamicShortcuts"", mPrimaryUserId);         }     }     ])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[primary]:[4]:method_text:[erManagerTest"",                 ""testIsProfileReturnsTrue_runAsProfile"", mProfileUserId);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[primary]:[1]:method_text:[ "".UserManagerTest"",                 ""testCreateProfile_managedProfile"", mPrimaryUserId);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[primary]:[2]:method_text:[eSharingTest"",                     ""clearCrossProfileIntents"", mProfileUserId);         }     }     ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[primary]:[2]:method_text:[ return hasDeviceFeature(FEATURE_TELEPHONY) && hasDeviceFeature(FEATURE_CONNECTION_SERVICE);     } }])', 1), ('([1:/com/android/cts/launchertests/LauncherAppsTests.java]:[primary]:[1]:method_text:[://www.android.com/""));         assertNull(mLauncherApps.resolveActivity(intent, mUser));     }     ])', 1), ('([2:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[primary]:[2]:method_text:[                           mUserId, DEVICE_ADMIN_PKG + ""/"" + ADMIN_RECEIVER_TEST_CLASS));     }     ])', 1), ('([4:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[primary]:[4]:method_text:[D, mPrimaryUserId);             getDevice().uninstallPackage(DEVICE_ADMIN_PKG);         }     }     ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[primary]:[3]:method_text:[              ""testUserRestrictionDisallowConfigDateTimeIsNotPersisted"", mPrimaryUserId);     }     ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[primary]:[3]:method_text:[trictionsParentTest"",                     ""testCanOpenCamera"", mPrimaryUserId);         }     }     ])', 1), ('([2:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[primary]:[2]:method_text:[lingIsOrganizationOwnedWithManagedProfileExpectingTrue"",                 mPrimaryUserId);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[primary]:[1]:method_text:[// Should be launchable again.         assertCanStartPersonalApp(DEVICE_ADMIN_PKG, true);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[primary]:[1]:method_text:[           suspended ? ""testSuspendPersonalApps"" : ""testUnsuspendPersonalApps"", mUserId);     }     ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[primary]:[3]:method_text:[          ""cmd role remove-role-holder --user %d android.app.role.SMS %s"", userId, app));     }     ])', 1), ('([2:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[primary]:[2]:method_text:[ assertCanStartPersonalApp(DUMMY_IME_PKG, true);         setPersonalAppsSuspended(false);     }     ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[primary]:[3]:method_text:[          canStart ? ""testCanStartActivity"" : ""testCannotStartActivity"", mPrimaryUserId);     }     ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[primary]:[3]:method_text:[+ ADMIN_RECEIVER_TEST_CLASS,                         userId, /* expectFailure */ false));     }     ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[primary]:[3]:method_text:[mUserId);         } finally {             setAndStartLauncher(defaultLauncher);         }     }     ])', 1), ('([2:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[primary]:[2]:method_text:[r"", output.contains(""Success""));         executeShellCommand(""am start -W -n "" + component);     } }])', 1), ('([4:/com/android/cts/managedprofile/PrimaryUserTest.java]:[primary]:[4]:method_text:[istry.getInstrumentation());         mPackageManager = getActivity().getPackageManager();     }     ])', 1), ('([3:/com/android/cts/managedprofile/PrimaryUserTest.java]:[primary]:[3]:method_text:[ty(PrimaryUserActivity.ACTION);         assertTrue(getActivity().checkActivityStarted());     }     ])', 1)]"	""	""	""	""	""
"274:790271) 9.16  . Application Data Migration"	"9.16"	"C-1-5"	""	"[('com.android.cts.managedprofile.SettingsIntentsTest', 7), ('com.android.server.cts.device.statsd.AtomTests', 6), ('com.android.cts.devicepolicy.ManagedProfilePasswordTest', 5), ('com.google.android.cts.deviceowner.DeviceOwnerTest', 5), ('com.android.cts.deviceowner.SetTimeTest', 5), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 5), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTest', 5), ('com.android.cts.deviceowner.AirplaneModeRestrictionTest', 4), ('com.android.cts.devicepolicy.ManagedProfileRingtoneTest', 4), ('com.android.cts.managedprofile.ProvisioningTest', 3), ('com.android.cts.deviceandprofileowner.SetSystemSettingTest', 3), ('com.android.cts.deviceowner.AdminActionBookkeepingTest', 2), ('com.android.cts.packageinstaller.ManualPackageInstallTest', 2), ('com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest', 2), ('com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest', 2), ('com.android.cts.deviceandprofileowner.DevicePolicyLoggingTest', 2), ('com.android.cts.deviceowner.CreateAndManageUserTest', 2), ('com.android.cts.passwordcomplexity.GetPasswordComplexityTest', 2), ('com.android.cts.managedprofile.RingtoneSyncTest', 2), ('com.android.cts.intent.sender.SuspendPackageTest', 2), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 2), ('com.android.cts.profileowner.AdminActionBookkeepingTest', 2), ('com.android.cts.deviceandprofileowner.AutofillRestrictionsTest', 2), ('com.android.cts.deviceowner.DevicePolicyLoggingTest', 2), ('com.android.cts.deviceowner.proxy.PacProxyTest', 2), ('com.android.cts.deviceandprofileowner.ContentCaptureRestrictionsTest', 2), ('com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest', 2), ('com.android.cts.devicepolicy.ManagedProfileProvisioningTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1), ('com.android.cts.deviceandprofileowner.systemupdate.InstallUpdateTest', 1), ('com.android.cts.devicepolicy.ManagedProfileContactsTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerTest', 1), ('com.android.cts.deviceandprofileowner.AudioRestrictionTest', 1), ('android.deviceconfig.cts.DeviceConfigApiTests', 1), ('com.android.cts.devicepolicy.PasswordComplexityTest', 1), ('com.android.cts.deviceowner.WifiConfigLockdownTest', 1), ('com.android.cts.devicepolicy.DeviceOwnerTest', 1), ('com.android.cts.deviceandprofileowner.SecondaryLockscreenTest', 1), ('com.android.cts.devicepolicy.ManagedProfileTest', 1), ('com.android.cts.deviceandprofileowner.PolicyTransparencyTest', 1)]"	"[('setUp', 36), ('tearDown', 29), ('getDevice', 28), ('getWho', 12), ('getInstrumentation', 12), ('getContext', 8), ('getName', 6), ('getContentResolver', 5), ('getPackageManager', 4), ('getUiAutomation', 4), ('getSimpleName', 3), ('getPackageName', 3), ('getPasswordComplexity', 3), ('getBytes', 2), ('getPackage', 2), ('getDeviceOwner', 2), ('wakeupDeviceAndPressHome', 2), ('pressHome', 2), ('BroadcastReceiver', 2), ('release', 2), ('clearFreezeRecord', 2), ('clearScreenLock', 2), ('getUserId', 2), ('myUserHandle', 2), ('setOrientationNatural', 1), ('wakeUp', 1), ('pressMenu', 1), ('pressBack', 1), ('launchPrivacyAndCheckWorkPolicyInfo', 1), ('getComponentInfo', 1), ('getComponentName', 1), ('WindowManagerStateHelper', 1), ('getAction', 1), ('IntentFilter', 1), ('now', 1), ('getAirplaneMode', 1), ('setSystemDate', 1), ('saveTime', 1), ('restoreTime', 1), ('countDown', 1), ('call', 1), ('getResources', 1), ('getSystem', 1), ('getPasswordComplexity_pattern4_low', 1), ('getTargetContext', 1), ('Object', 1), ('getCurrentUser', 1), ('startBackgroundThread', 1), ('getConfiguredNetworks', 1), ('myUserId', 1)]"	"[('CtsDeviceConfigTestCases', 1)]"	""	"9.16/C-1-5"	"""C-1-5] MUST show an indication that the source device has had data migrated by a device-to-device data migration in the settings menu. A user SHOULD NOT be able to remove this indication. <h2 id="""	"09160000.670105"	"migration settings"	"migration settings"	""	""	"[('settings', 93), ('migration', 4)]"	"device"	"[('[com.android.cts.devicepolicy.ManagedProfileProvisioningTest testAccountMigration None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testResetPasswordTokenUsableAfterClearingLock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testIsUsingUnifiedPassword None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testUnlockWorkProfile_deviceWidePassword None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testRebootDevice_unifiedPassword None]', 1), ('[com.android.cts.deviceowner.AdminActionBookkeepingTest testIsDefaultInputMethodSet None]', 1), ('[com.android.cts.managedprofile.SettingsIntentsTest SettingsIntentsTest None]', 1), ('[com.android.cts.managedprofile.SettingsIntentsTest testSettings None]', 1), ('[com.android.cts.managedprofile.SettingsIntentsTest testAccounts None]', 1), ('[com.android.cts.managedprofile.SettingsIntentsTest testApps None]', 1), ('[com.android.cts.managedprofile.SettingsIntentsTest testSecurity None]', 1), ('[com.android.cts.managedprofile.SettingsIntentsTest testNfc None]', 1), ('[com.android.cts.managedprofile.SettingsIntentsTest testLocation None]', 1), ('[com.google.android.cts.deviceowner.DeviceOwnerTest disableWorkPolicyInfoActivity None]', 1), ('[com.google.android.cts.deviceowner.DeviceOwnerTest testDeviceOwnerWithInfo None]', 1), ('[com.google.android.cts.deviceowner.DeviceOwnerTest testDeviceOwnerWithoutInfo None]', 1), ('[com.google.android.cts.deviceowner.DeviceOwnerTest testNonDeviceOwnerWithInfo None]', 1), ('[com.google.android.cts.deviceowner.DeviceOwnerTest testNonDeviceOwnerWithoutInfo None]', 1), ('[com.android.cts.managedprofile.ProvisioningTest PersistableBundle None]', 1), ('[com.android.cts.managedprofile.ProvisioningTest testProvisionManagedProfile_accountCopy None]', 1), ('[com.android.cts.managedprofile.ProvisioningTest testAccountNotExist None]', 1), ('[com.android.cts.deviceowner.AirplaneModeRestrictionTest testAirplaneModeTurnedOffWhenRestrictionSet None]', 1), ('[com.android.cts.deviceowner.AirplaneModeRestrictionTest testAirplaneModeCannotBeTurnedOnWithRestrictionOn None]', 1), ('[com.android.cts.deviceowner.AirplaneModeRestrictionTest testAirplaneModeCanBeTurnedOnWithRestrictionOff None]', 1), ('[com.android.cts.packageinstaller.ManualPackageInstallTest testManualInstallBlocked None]', 1), ('[com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest testWriteValidationFailedExceptionToParcel None]', 1), ('[com.android.cts.deviceowner.SetTimeTest currentTimeMillis None]', 1), ('[com.android.cts.deviceowner.SetTimeTest testSetTime None]', 1), ('[com.android.cts.deviceowner.SetTimeTest testSetTimeFailWithAutoTimeOn None]', 1), ('[com.android.cts.deviceowner.SetTimeTest testSetTimeZone None]', 1), ('[com.android.cts.deviceowner.SetTimeTest testSetTimeZoneFailWithAutoTimezoneOn None]', 1), ('[com.android.server.cts.device.statsd.AtomTests testBleScanOpportunistic None]', 1), ('[com.android.server.cts.device.statsd.AtomTests testBleScanUnoptimized None]', 1), ('[com.android.server.cts.device.statsd.AtomTests testBleScanResult None]', 1), ('[com.android.server.cts.device.statsd.AtomTests testBleScanInterrupted None]', 1), ('[com.android.server.cts.device.statsd.AtomTests testBlobStore None]', 1), ('[com.android.cts.deviceandprofileowner.systemupdate.InstallUpdateTest testInstallUpdate_charging_aboveThreshold_passesBatteryCheck None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileContactsTest testManagedContactsPolicies None]', 1), ('[com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest testAddGetAndClearUserRestriction_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.DevicePolicyLoggingTest testSetSecureSettingLogged None]', 1), ('[com.android.cts.devicepolicy.MixedProfileOwnerTest testLockTaskAfterReboot_tryOpeningSettings None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testLockTaskAfterReboot_tryOpeningSettings None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testResetPasswordDeprecated None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testIsDeviceOrganizationOwnedWithManagedProfile None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSecondaryLockscreen None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_MaxUsers None]', 1), ('[com.android.cts.deviceandprofileowner.AudioRestrictionTest isFullVolumeDevice None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest removeTestUsers None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testAlwaysOnVpnUnsupportedPackageReplaced None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testSetSystemSetting None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testLockTaskAfterReboot_tryOpeningSettings None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testProfileOwnerCanGetDeviceIdentifiers None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileRingtoneTest testRingtoneSync None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileRingtoneTest testRingtoneSyncAutoDisableRingtone None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileRingtoneTest testRingtoneSyncAutoDisableNotification None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileRingtoneTest testRingtoneSyncAutoDisableAlarm None]', 1), ('[com.android.cts.managedprofile.RingtoneSyncTest testRingtoneSync None]', 1), ('[com.android.cts.intent.sender.SuspendPackageTest finish None]', 1), ('[com.android.cts.intent.sender.SuspendPackageTest testPackageSuspendedWithPackageManager None]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests isSupported CtsDeviceConfigTestCases]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest dropShellPermissionIdentity None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerProfileUserRestriction_onParent None]', 1), ('[com.android.cts.profileowner.AdminActionBookkeepingTest testIsDefaultInputMethodSet None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_LowStorage None]', 1), ('[com.android.cts.deviceandprofileowner.AutofillRestrictionsTest disableService None]', 1), ('[com.android.cts.deviceandprofileowner.AutofillRestrictionsTest testDisallowAutofill_allowed None]', 1), ('[com.android.cts.deviceandprofileowner.SetSystemSettingTest testSetBrightness None]', 1), ('[com.android.cts.deviceandprofileowner.SetSystemSettingTest testSetSystemSettingsFailsForNonWhitelistedSettings None]', 1), ('[com.android.cts.deviceowner.DevicePolicyLoggingTest testSetGlobalSettingLogged None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testBroadcast None]', 1), ('[com.android.cts.deviceowner.proxy.PacProxyTest testClearBroadcast None]', 1), ('[com.android.cts.deviceandprofileowner.ContentCaptureRestrictionsTest disableService None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest dropShellPermissionIdentity None]', 1), ('[com.android.cts.crossprofileappstest.CrossProfileAppsPermissionToInteractTest testCreateRequestInteractAcrossProfilesIntent_canRequestInteraction_returnsIntent None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testSettingsIntents None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/SettingsIntentsTest.java', 7), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/apps/statsdapp/src/com/android/server/cts/device/statsd/AtomTests.java', 6), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/settings/app/DeviceOwnerApp/src/com/google/android/cts/deviceowner/DeviceOwnerTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/SetTimeTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileRingtoneTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ProvisioningTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SetSystemSettingTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/PackageInstaller/src/com/android/cts/packageinstaller/ManualPackageInstallTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/CreateAndManageUserTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/PasswordComplexity/src/com.android.cts.passwordcomplexity/GetPasswordComplexityTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/RingtoneSyncTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/IntentSender/src/com/android/cts/intent/sender/SuspendPackageTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/AdminActionBookkeepingTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DevicePolicyLoggingTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/proxy/PacProxyTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ContentCaptureRestrictionsTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CrossProfileTestApps/CrossProfileAppsTest/src/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/systemupdate/InstallUpdateTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileContactsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/PasswordComplexityTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/WifiConfigLockdownTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PolicyTransparencyTest.java', 1)]"	"[('/com/android/cts/managedprofile/SettingsIntentsTest.java', 8), ('/com/android/server/cts/device/statsd/AtomTests.java', 7), ('/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java', 6), ('/com/google/android/cts/deviceowner/DeviceOwnerTest.java', 6), ('/com/android/cts/deviceowner/SetTimeTest.java', 6), ('/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 6), ('/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 6), ('/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java', 5), ('/com/android/cts/devicepolicy/ManagedProfileRingtoneTest.java', 5), ('/com/android/cts/managedprofile/ProvisioningTest.java', 4), ('/com/android/cts/deviceandprofileowner/SetSystemSettingTest.java', 4), ('/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 3), ('/com/android/cts/packageinstaller/ManualPackageInstallTest.java', 3), ('/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java', 3), ('/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 3), ('/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java', 3), ('/com/android/cts/deviceowner/CreateAndManageUserTest.java', 3), ('/com.android.cts.passwordcomplexity/GetPasswordComplexityTest.java', 3), ('/com/android/cts/managedprofile/RingtoneSyncTest.java', 3), ('/com/android/cts/intent/sender/SuspendPackageTest.java', 3), ('/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 3), ('/com/android/cts/profileowner/AdminActionBookkeepingTest.java', 3), ('/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java', 3), ('/com/android/cts/deviceowner/DevicePolicyLoggingTest.java', 3), ('/com/android/cts/deviceowner/proxy/PacProxyTest.java', 3), ('/com/android/cts/deviceandprofileowner/ContentCaptureRestrictionsTest.java', 3), ('/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java', 3), ('/com/android/cts/devicepolicy/ManagedProfileProvisioningTest.java', 2), ('/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 2), ('/com/android/cts/deviceandprofileowner/systemupdate/InstallUpdateTest.java', 2), ('/com/android/cts/devicepolicy/ManagedProfileContactsTest.java', 2), ('/com/android/cts/devicepolicy/MixedProfileOwnerTest.java', 2), ('/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java', 2), ('/android/deviceconfig/cts/DeviceConfigApiTests.java', 2), ('/com/android/cts/devicepolicy/PasswordComplexityTest.java', 2), ('/com/android/cts/deviceowner/WifiConfigLockdownTest.java', 2), ('/com/android/cts/devicepolicy/DeviceOwnerTest.java', 2), ('/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java', 2), ('/com/android/cts/devicepolicy/ManagedProfileTest.java', 2), ('/com/android/cts/deviceandprofileowner/PolicyTransparencyTest.java', 2)]"	"[('([1:/com/android/cts/devicepolicy/ManagedProfileProvisioningTest.java]:[migration]:[1]:method_text:[                 ""testAccountNotExist"", mParentUserId);     }      @FlakyTest(bugId = 141747631)    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[settings]:[1]:method_text:[    private static final String RESET_PASSWORD_TEST_DEFAULT_PASSWORD = ""123456"";      @FlakyTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[settings]:[1]:method_text:[    executeShellCommand(""input keyevent KEYCODE_WAKEUP"");         }     }      @LockSettingsTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[settings]:[1]:method_text:[        verifyUnifiedPassword(false);     }      @FlakyTest     @LargeTest     @LockSettingsTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[settings]:[1]:method_text:[_PASSWORD, mPrimaryUserId);         }     }      @FlakyTest     @LargeTest     @LockSettingsTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[settings]:[1]:method_text:[   // end.             pressPowerButton();         }     }      @LargeTest     @LockSettingsTest    ])', 1), ('([1:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[settings]:[1]:method_text:[    /**      * Test: Retrieving security logs should update the corresponding timestamp.      */    ])', 1), ('([4:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[settings]:[4]:method_text:[  * Test: It should be recored whether the Device Owner or the user installed a CA cert.      */    ])', 1), ('([4:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[settings]:[4]:method_text:[ion {         super.setUp();         mPackageManager = getActivity().getPackageManager();     }     ])', 1), ('([3:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[settings]:[3]:method_text:[r.resolveActivity(                 new Intent(Settings.ACTION_SETTINGS), 0 /* flags */));     }     ])', 1), ('([2:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[settings]:[2]:method_text:[olveActivity(                 new Intent(Settings.ACTION_SYNC_SETTINGS), 0 /* flags */));     }     ])', 1), ('([2:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[settings]:[2]:method_text:[ivity(                 new Intent(Settings.ACTION_APPLICATION_SETTINGS), 0 /* flags */));     }     ])', 1), ('([2:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[settings]:[2]:method_text:[Activity(                 new Intent(Settings.ACTION_SECURITY_SETTINGS), 0 /* flags */));     }     ])', 1), ('([2:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[settings]:[2]:method_text:[                     new Intent(Settings.ACTION_NFC_SETTINGS), 0 /* flags */));         }     }     ])', 1), ('([2:/com/android/cts/managedprofile/SettingsIntentsTest.java]:[settings]:[2]:method_text:[vity(                 new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS), 0 /* flags */));     } }])', 1), ('([6:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[settings]:[6]:method_text:[evice owner and has work policy info, then we should have a Privacy      * entry for it.      */    ])', 1), (""([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[settings]:[1]:method_text:[but doesn't have work policy info, then we shouldn't      * have a Privacy entry for it.      */    ])"", 1), ('([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[settings]:[1]:method_text:[ctive device owner, then we should not have a Privacy entry for work      * policy info.      */    ])', 1), ('([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[settings]:[1]:method_text:[e work policy info, then we should      * not have a Privacy entry for work policy info.      */    ])', 1), ('([1:/com/google/android/cts/deviceowner/DeviceOwnerTest.java]:[settings]:[1]:method_text:[ettings entry shouldn\'t be present"",                 launchPrivacyAndCheckWorkPolicyInfo());     } }])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[migration]:[1]:method_text:[.getTargetContext();         mDpm = mContext.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[migration]:[1]:method_text:[gIntent()                 .putExtra(EXTRA_PROVISIONING_KEEP_ACCOUNT_ON_MIGRATION, true));     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[migration]:[1]:method_text:[ext context) {         return context.getSharedPreferences(SHARED_PREFERENCE_FILE_NAME, 0);     }  }])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[settings]:[1]:method_text:[ getDevice().executeShellCommand(""input keyevent 3"");         }         super.tearDown();     }     ])', 1), ('([4:/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java]:[settings]:[4]:method_text:[anager.DISALLOW_AIRPLANE_MODE);         Thread.sleep(SLEEP_MS);         super.tearDown();     }     ])', 1), ('([3:/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java]:[settings]:[3]:method_text:[DE_ON));         } finally {             mContext.unregisterReceiver(receiver);         }     }     ])', 1), ('([2:/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java]:[settings]:[2]:method_text:[ettings.Global.getInt(                 mContext.getContentResolver(), AIRPLANE_MODE_ON));     }     ])', 1), ('([2:/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java]:[settings]:[2]:method_text:[, Settings.Global.getInt(                 mContext.getContentResolver(), AIRPLANE_MODE_ON));     } }])', 1), ('([1:/com/android/cts/packageinstaller/ManualPackageInstallTest.java]:[settings]:[1]:method_text:[ {         super.setUp();         mUiAutomation = getInstrumentation().getUiAutomation();     }     ])', 1), ('([12:/com/android/cts/packageinstaller/ManualPackageInstallTest.java]:[settings]:[12]:method_text:[s(settingsPackageName + "":id/admin_support_icon"")                 .pkg(settingsPackageName);     } }])', 1), ('([6:/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java]:[settings]:[6]:method_text:[alue.             setAirplaneModeAndWaitBroadcast(0);         }         super.tearDown();     }     ])', 1), ('([5:/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java]:[settings]:[5]:method_text:[ finally {             mContext.unregisterReceiver(receiver);         }         return true;     } }])', 1), ('([1:/com/android/cts/deviceowner/SetTimeTest.java]:[settings]:[1]:method_text:[* 1000);         } finally {             mContext.unregisterReceiver(receiver);         }     }     ])', 1), ('([1:/com/android/cts/deviceowner/SetTimeTest.java]:[settings]:[1]:method_text:["");         testSetTimeWithValue(TEST_TIME_1);         testSetTimeWithValue(TEST_TIME_2);     }     ])', 1), ('([1:/com/android/cts/deviceowner/SetTimeTest.java]:[settings]:[1]:method_text:[       }         } finally {             mContext.unregisterReceiver(receiver);         }     }     ])', 1), ('([2:/com/android/cts/deviceowner/SetTimeTest.java]:[settings]:[2]:method_text:[ePolicyManager.setGlobalSetting(getWho(), Settings.Global.AUTO_TIME_ZONE, ""1"");         }     }     ])', 1), ('([3:/com/android/cts/deviceowner/SetTimeTest.java]:[settings]:[3]:method_text:[;          mDevicePolicyManager.setGlobalSetting(getWho(), Settings.Global.AUTO_TIME, ""1"");      } }])', 1), ('([3:/com/android/server/cts/device/statsd/AtomTests.java]:[settings]:[3]:method_text:[NSTALLER, 98);         APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_NO_ISOLATED_STORAGE, 99);     }     ])', 1), ('([5:/com/android/server/cts/device/statsd/AtomTests.java]:[settings]:[5]:method_text:[tings.SCAN_MODE_OPPORTUNISTIC).build();         performBleScan(scanSettings, null,false);     }     ])', 1), ('([5:/com/android/server/cts/device/statsd/AtomTests.java]:[settings]:[5]:method_text:[ttings.SCAN_MODE_LOW_LATENCY).build();         performBleScan(scanSettings, null, false);     }     ])', 1), ('([5:/com/android/server/cts/device/statsd/AtomTests.java]:[settings]:[5]:method_text:[Builder();         performBleScan(scanSettings, Arrays.asList(scanFilter.build()), true);     }     ])', 1), ('([14:/com/android/server/cts/device/statsd/AtomTests.java]:[settings]:[14]:method_text:[   sleep(2_000);             }             bleScanner.stopScan(scanCallback);         });     }     ])', 1), ('([1:/com/android/server/cts/device/statsd/AtomTests.java]:[settings]:[1]:method_text:[   callback.get(BLOB_COMMIT_CALLBACK_TIMEOUT_SEC, TimeUnit.SECONDS)).isEqualTo(0);         }     } }])', 1), ('([3:/com/android/cts/deviceandprofileowner/systemupdate/InstallUpdateTest.java]:[settings]:[3]:method_text:[eviceAB() {         return ""true"".equalsIgnoreCase(SystemProperties.get(AB_DEVICE_KEY, """"));     } }])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileContactsTest.java]:[settings]:[1]:method_text:[seDirectories_canNotAccessManagedDirectories"",                     mParentUserId);         }     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[settings]:[1]:method_text:[not used in test.                     // UserManager.DISALLOW_DEBUGGING_FEATURES             );     ])', 1), ('([4:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[settings]:[4]:method_text:[ns(ADMIN_RECEIVER_COMPONENT);         assertThat(restrictions.get(restriction)).isNull();     }     ])', 1), ('([3:/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java]:[settings]:[3]:method_text:[droid.cts.permissionapp"";     public static final String PARAM_APP_TO_ENABLE = ""app_to_enable"";     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java]:[settings]:[2]:method_text:[MIN_RECEIVER_COMPONENT,                 DEFAULT_INPUT_METHOD, defaultInputMethodInitial);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/MixedProfileOwnerTest.java]:[settings]:[2]:method_text:[LockTaskAfterReboot_tryOpeningSettings();     }      @Override     @FlakyTest(bugId = 140932104)    ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[settings]:[1]:method_text:[ getDevice().executeShellCommand(""input keyevent 3"");         }         super.tearDown();     }     ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[settings]:[4]:method_text:[teDeviceTestMethod("".LockTaskHostDrivenTest"", ""testCleanupLockTask_noAsserts"");         }     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[settings]:[1]:method_text:[iceTestMethod("".ResetPasswordTest"", ""testResetPasswordDeprecated"");     }      @LockSettingsTest    ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[settings]:[1]:method_text:[ ""testCallingIsOrganizationOwnedWithManagedProfileExpectingFalse"");     }      @LockSettingsTest    ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[settings]:[1]:method_text:[and(                 restricted ? RESTRICT_BACKGROUND_ON_CMD : RESTRICT_BACKGROUND_OFF_CMD);     } }])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[settings]:[1]:method_text:[earUserRestriction(getWho(), UserManager.DISALLOW_REMOVE_USER);         super.tearDown();     }     ])', 1), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[settings]:[2]:method_text:[text.getContentResolver(),                         Settings.Secure.USER_SETUP_COMPLETE));     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java]:[settings]:[1]:method_text:[lumeDevice();     }      // Here we test that DISALLOW_ADJUST_VOLUME disallows to unmute volume.    ])', 1), ('([1:/com.android.cts.passwordcomplexity/GetPasswordComplexityTest.java]:[settings]:[1]:method_text:[   }      @After     public void tearDown() throws Exception {         clearScreenLock();     }     ])', 1), ('([4:/com.android.cts.passwordcomplexity/GetPasswordComplexityTest.java]:[settings]:[4]:method_text:[         }         }         assertEquals(expectedComplexity, mDpm.getPasswordComplexity());     } }])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[settings]:[1]:method_text:[s in the primary user when the policy      * is set on the profile owner.      */     @LargeTest    ])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[settings]:[1]:method_text:[   super.testAlwaysOnVpnUnsupportedPackageReplaced();     }      @Override     @LockSettingsTest    ])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[settings]:[1]:method_text:[ // Managed profile owner cannot set currently whitelisted system settings.     }      @Override    ])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[settings]:[1]:method_text:[ngSettings() {         // Managed profiles are not allowed to use lock task     }      @Override    ])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[settings]:[1]:method_text:[wnerCanGetDeviceIdentifiersWithPermission"", mUserId);     }      @Override     @LockSettingsTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileRingtoneTest.java]:[settings]:[1]:method_text:[       ""testRingtoneSync"", mProfileUserId);     }      // Test if setting RINGTONE disables sync    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileRingtoneTest.java]:[settings]:[1]:method_text:[tRingtoneDisableSync"", mProfileUserId);     }      // Test if setting NOTIFICATION disables sync    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileRingtoneTest.java]:[settings]:[1]:method_text:[testNotificationDisableSync"", mProfileUserId);     }      // Test if setting ALARM disables sync    ])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileRingtoneTest.java]:[settings]:[4]:method_text:[  CLog.d(""Output for command "" + command + "": "" + getDevice().executeShellCommand(command));     } }])', 1), ('([3:/com/android/cts/managedprofile/RingtoneSyncTest.java]:[settings]:[3]:method_text:[rofile ringtones, despite the setting being kept in      * another user from the caller.      */    ])', 1), ('([15:/com/android/cts/managedprofile/RingtoneSyncTest.java]:[settings]:[15]:method_text:[ {             Settings.Secure.putInt(mContentResolver, SYNC_PARENT_SOUNDS, 1);         }     }     ])', 1), ('([2:/com/android/cts/intent/sender/SuspendPackageTest.java]:[settings]:[2]:method_text:[ void tearDown() throws Exception {         mActivity.finish();         super.tearDown();     }     ])', 1), ('([12:/com/android/cts/intent/sender/SuspendPackageTest.java]:[settings]:[12]:method_text:[s(settingsPackageName + "":id/admin_support_icon"")                 .pkg(settingsPackageName);     } }])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[settings]:[1]:method_text:[);     }      /**      * Checks that getting property which does not exist returns null.      */    ])', 1), ('([1:/com/android/cts/devicepolicy/PasswordComplexityTest.java]:[settings]:[1]:method_text:[en) {             getDevice().uninstallPackage(PKG);         }          super.tearDown();     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[settings]:[1]:method_text:[ad.sleep(1000);         }         throw new AssertionError(""Failed to get UiAutomation"");     }     ])', 1), ('([5:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[settings]:[5]:method_text:[ISALLOW_CONFIG_DATE_TIME,                     UserManager.DISALLOW_AIRPLANE_MODE             );     ])', 1), ('([1:/com/android/cts/profileowner/AdminActionBookkeepingTest.java]:[settings]:[1]:method_text:[ * Test: It should be recored whether the Profile Owner or the user set the current IME.      */    ])', 1), ('([4:/com/android/cts/profileowner/AdminActionBookkeepingTest.java]:[settings]:[4]:method_text:[ * Test: It should be recored whether the Profile Owner or the user installed a CA cert.      */    ])', 1), ('([3:/com/android/cts/deviceowner/WifiConfigLockdownTest.java]:[settings]:[3]:method_text:[anager.removeNetwork(config.networkId);             }         }         super.tearDown();     }     ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[settings]:[2]:method_text:[                     ""settings delete global sys_storage_threshold_max_bytes"");         }     }     ])', 1), ('([3:/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java]:[settings]:[3]:method_text:[riction(ADMIN_RECEIVER_COMPONENT, DISALLOW_AUTOFILL);         }         super.tearDown();     }     ])', 1), ('([12:/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java]:[settings]:[12]:method_text:[+ mUserId + "": "" + expected                 + ""; actual: "" + actual + "" after 0.5 seconds"");     } }])', 1), ('([5:/com/android/cts/deviceandprofileowner/SetSystemSettingTest.java]:[settings]:[5]:method_text:[ext.getContentResolver(), Settings.System.SCREEN_BRIGHTNESS,         UserHandle.myUserId()));   }   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/SetSystemSettingTest.java]:[settings]:[4]:method_text:[nessWithValue(TEST_BRIGHTNESS_1);        testSetBrightnessWithValue(TEST_BRIGHTNESS_2);     }   }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/SetSystemSettingTest.java]:[settings]:[3]:method_text:[ception."");     } catch (SecurityException e) {       // Should throw SecurityException.     }   } }])', 1), ('([5:/com/android/cts/deviceowner/DevicePolicyLoggingTest.java]:[settings]:[5]:method_text:[is done on the host-side.  */ public class DevicePolicyLoggingTest extends BaseDeviceOwnerTest {    ])', 1), ('([4:/com/android/cts/deviceowner/DevicePolicyLoggingTest.java]:[settings]:[4]:method_text:[                 getWho(), USB_MASS_STORAGE_ENABLED, usbMassStorageOriginalValue);         }     } }])', 1), ('([1:/com/android/cts/deviceowner/proxy/PacProxyTest.java]:[settings]:[1]:method_text:[ /**    * Make sure that we also get a broadcast after we clear the    * PAC proxy settings.    */  ])', 1), ('([2:/com/android/cts/deviceowner/proxy/PacProxyTest.java]:[settings]:[2]:method_text:[ings.  The static settings point to a server that will handle    * the PAC parsing for them.    */  ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ContentCaptureRestrictionsTest.java]:[settings]:[1]:method_text:[ic class ContentCaptureRestrictionsTest extends BaseDeviceAdminTest {      // TODO(b/123540602): use])', 1), ('([1:/com/android/cts/deviceandprofileowner/ContentCaptureRestrictionsTest.java]:[settings]:[1]:method_text:[ervice() {         runShellCommand(""cmd content_capture set temporary-service %d"", mUserId);     } }])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[settings]:[1]:method_text:[ry.getInstrumentation().getUiAutomation()                 .dropShellPermissionIdentity();     }     ])', 1), ('([1:/com/android/cts/crossprofileappstest/CrossProfileAppsPermissionToInteractTest.java]:[settings]:[1]:method_text:[ssertThat(intent.getData().getSchemeSpecificPart()).isEqualTo(mContext.getPackageName());     }     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[settings]:[2]:method_text:[(SecurityException expected) {}         runShellCommand(""locksettings clear --old 1234"");     }     ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[settings]:[2]:method_text:[IntentsTest"",                 mProfileUserId);     }      /** Tests for the API helper class. */    ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PolicyTransparencyTest.java]:[settings]:[1]:method_text:[ extends BaseDeviceAdminTest {      private static final String TAG = ""PolicyTransparencyTest"";     ])', 1)]"	""	""	""	""	""
