"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-17"	"9.9.3/C-1-17"	"09090300.670117"	"""C-1-17] MUST ensure that all encrypted filesystem metadata blocks on persistent storage were encrypted using distinct combinations of encryption key and initialization vector (IV). Have keys protecting CE and DE storage areas which:"""	""	"MixedDeviceOwnerTest"	"encrypted areas using IV persistent distinct encryption C-1-17 filesystem DE combinations blocks which: initialization storage protecting metadata ensure Have vector CE key keys"	""	""	""	""	"[('com.android.cts.devicepolicy.MixedDeviceOwnerTest', 91)]"	"[('setUp', 9), ('getClass', 3), ('getDevice', 3)]"	"[('CtsDevicePolicyManagerTestCases', 91)]"	""	"com.android.cts.devicepolicy.MixedDeviceOwnerTest"	"getDevice"	"CtsDevicePolicyManagerTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java', 91)]"	"[('(1,IV,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(2,persistent,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(5,encryption,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(36,DE,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(5,storage,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(2,ensure,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(28,CE,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(2,key,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1)]"	"[('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[2]:method_text:[for now, re-enable when the code path sets DO as able to grant permissions.    }    @Override   ])', 2), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[1]:method_text:[for now, re-enable when the code path sets DO as able to grant permissions.    }    @Override   ])', 2), ('([5:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[IV]:[5]:method_text:[eDeviceOwnerAdmin(DEVICE_ADMIN_COMPONENT_FLATTENED);        }        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[IV]:[1]:method_text:[   executeDeviceTestMethodOnDeviceOwnerUser("".systemupdate.InstallUpdateTest"", testName);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[IV]:[1]:method_text:[ce().setSetting(""global"", ""stay_on_while_plugged_in"", stayAwake);            }        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[IV]:[1]:method_text:[me, testClassName,                    ""testDisablingSecurityLogging"", userId);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[IV]:[1]:method_text:[testSuspendPackage() throws Exception {        super.testSuspendPackage();    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[IV]:[1]:method_text:[() throws Exception {        super.testSuspendPackageWithPackageManager();    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[IV]:[1]:method_text:[rtIntent() throws Exception {        super.testCreateAdminSupportIntent();    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[IV]:[1]:method_text:[solving() throws Exception {        super.testPersistentIntentResolving();    }    @Override   ])', 1), ('([9:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[IV]:[9]:method_text:[ser(                DEVICE_ADMIN_PKG, "".AffiliationTest"", ""testSetAffiliationId1"", userId);    }}])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[persistent]:[2]:method_text:[solving() throws Exception {        super.testPersistentIntentResolving();    }    @Override   ])', 1), ('([3:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[encryption]:[3]:method_text:[ncryption(ComponentName, boolean)}     * is only allowed for system user.     */    @Override   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[encryption]:[2]:method_text:[me, testClassName,                    ""testDisablingSecurityLogging"", userId);        }    }   ])', 1), ('([47:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[47]:method_text:[eDeviceOwnerAdmin(DEVICE_ADMIN_COMPONENT_FLATTENED);        }        super.tearDown();    }   ])', 1), ('([4:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[4]:method_text:[      ""testSetLockTaskPackagesClearedIfUserBecomesUnaffiliated"",                userId);    }   ])', 1), ('([8:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[8]:method_text:[eKeyPairWithDeviceIdAttestationExpectingSuccess"", mUserId));    }    @FlakyTest    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[1]:method_text:[n {        super.testCaCertManagement();    }    @FlakyTest(bugId = 141161038)    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[1]:method_text:[tion {        super.testCannotRemoveUserIfRestrictionSet();    }    @FlakyTest    @Override   ])', 1), ('([6:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[6]:method_text:[_VALUE)                .setAdminPackageName(DEVICE_ADMIN_PKG)                .build());    }   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[2]:method_text:[Exception {        executeDeviceTestClass("".AdminConfiguredNetworksTest"");    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[1]:method_text:[ApplicationRestrictions() throws Exception {        super.testApplicationRestrictions();    }   ])', 1), ('([6:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[6]:method_text:[   executeDeviceTestMethod("".TimeManagementTest"", ""testSetTime_failWhenAutoTimeEnabled"");    }   ])', 1), ('([27:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[27]:method_text:[new ArrayList<>();        result.add(DELEGATION_NETWORK_LOGGING);        return result;    }   ])', 1), ('([7:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[7]:method_text:[_VALUE)                .setAdminPackageName(DEVICE_ADMIN_PKG)                .build());    }   ])', 1), ('([8:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[8]:method_text:[_VALUE)                .setAdminPackageName(DEVICE_ADMIN_PKG)                .build());    }   ])', 1), ('([3:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[3]:method_text:[ows Exception {        executeDeviceTestClass("".CommonCriteriaModeTest"");    }    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[1]:method_text:[hrows Exception {        executeDeviceTestClass("".systemupdate.SystemUpdatePolicyTest"");    }   ])', 1), ('([5:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[5]:method_text:[teFileToDevice(""wrongSize.zip"");        executeInstallUpdateTest(/* testName= */ null);    }   ])', 1), ('([12:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[12]:method_text:[   executeDeviceTestMethodOnDeviceOwnerUser("".systemupdate.InstallUpdateTest"", testName);    }   ])', 1), ('([13:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[13]:method_text:[ce().setSetting(""global"", ""stay_on_while_plugged_in"", stayAwake);            }        }    }   ])', 1), ('([9:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[9]:method_text:[e(DEVICE_ADMIN_PKG)                    .setBoolean(false)                    .build());    }   ])', 1), ('([4:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[4]:method_text:[xecuteDeviceTestMethod("".SecurityLoggingTest"", ""testDisablingSecurityLogging"");        }    }   ])', 1), ('([25:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[25]:method_text:[ncryption(ComponentName, boolean)}     * is only allowed for system user.     */    @Override   ])', 1), ('([11:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[11]:method_text:[me, testClassName,                    ""testDisablingSecurityLogging"", userId);        }    }   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[2]:method_text:[       ""testPermissionGrantStateGranted_userNotifiedOfLocationPermission"");    }    @Override   ])', 1), ('([6:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[6]:method_text:[rmissionGrantTest"",                ""testAdminCanGrantSensorsPermissions"");    }    @Override   ])', 1), ('([3:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[3]:method_text:[n state.    }    //TODO(b/180413140) Investigate why the test fails on DO mode.    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[1]:method_text:[    public void testPermissionPrompts() throws Exception {    }    @Override    ])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[2]:method_text:[testSuspendPackage() throws Exception {        super.testSuspendPackage();    }    @Override   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[2]:method_text:[() throws Exception {        super.testSuspendPackageWithPackageManager();    }    @Override   ])', 1), ('([5:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[5]:method_text:[dExpiration() throws Exception {        super.testGetPasswordExpiration();    }    @Override   ])', 1), ('([5:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[5]:method_text:[wordExpiration() throws Exception {        super.testPasswordExpiration();    }    @Override   ])', 1), ('([3:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[3]:method_text:[dWithToken() throws Exception {        super.testResetPasswordWithToken();    }    @Override   ])', 1), ('([5:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[5]:method_text:[eprecated() throws Exception {        super.testResetPasswordDeprecated();    }    @Override   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[2]:method_text:[rtIntent() throws Exception {        super.testCreateAdminSupportIntent();    }    @Override   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[2]:method_text:[solving() throws Exception {        super.testPersistentIntentResolving();    }    @Override   ])', 1), ('([39:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[DE]:[39]:method_text:[ser(                DEVICE_ADMIN_PKG, "".AffiliationTest"", ""testSetAffiliationId1"", userId);    }}])', 1), ('([3:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[storage]:[3]:method_text:[ncryption(ComponentName, boolean)}     * is only allowed for system user.     */    @Override   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[storage]:[2]:method_text:[me, testClassName,                    ""testDisablingSecurityLogging"", userId);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[ensure]:[1]:method_text:[ce().setSetting(""global"", ""stay_on_while_plugged_in"", stayAwake);            }        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[ensure]:[1]:method_text:[me, testClassName,                    ""testDisablingSecurityLogging"", userId);        }    }   ])', 1), ('([40:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[40]:method_text:[eDeviceOwnerAdmin(DEVICE_ADMIN_COMPONENT_FLATTENED);        }        super.tearDown();    }   ])', 1), ('([6:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[6]:method_text:[      ""testSetLockTaskPackagesClearedIfUserBecomesUnaffiliated"",                userId);    }   ])', 1), ('([9:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[9]:method_text:[eKeyPairWithDeviceIdAttestationExpectingSuccess"", mUserId));    }    @FlakyTest    @Override   ])', 1), ('([3:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[3]:method_text:[n {        super.testCaCertManagement();    }    @FlakyTest(bugId = 141161038)    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[1]:method_text:[tion {        super.testCannotRemoveUserIfRestrictionSet();    }    @FlakyTest    @Override   ])', 1), ('([3:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[3]:method_text:[ws Exception {        super.testInstallCaCertLogged();    }    @FlakyTest(bugId = 137088260)   ])', 1), ('([6:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[6]:method_text:[_VALUE)                .setAdminPackageName(DEVICE_ADMIN_PKG)                .build());    }   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[2]:method_text:[Exception {        executeDeviceTestClass("".AdminConfiguredNetworksTest"");    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[1]:method_text:[ApplicationRestrictions() throws Exception {        super.testApplicationRestrictions();    }   ])', 1), ('([6:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[6]:method_text:[   executeDeviceTestMethod("".TimeManagementTest"", ""testSetTime_failWhenAutoTimeEnabled"");    }   ])', 1), ('([16:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[16]:method_text:[new ArrayList<>();        result.add(DELEGATION_NETWORK_LOGGING);        return result;    }   ])', 1), ('([7:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[7]:method_text:[_VALUE)                .setAdminPackageName(DEVICE_ADMIN_PKG)                .build());    }   ])', 1), ('([10:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[10]:method_text:[_VALUE)                .setAdminPackageName(DEVICE_ADMIN_PKG)                .build());    }   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[2]:method_text:[ows Exception {        executeDeviceTestClass("".CommonCriteriaModeTest"");    }    @LargeTest   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[2]:method_text:[hrows Exception {        executeDeviceTestClass("".systemupdate.SystemUpdatePolicyTest"");    }   ])', 1), ('([6:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[6]:method_text:[teFileToDevice(""wrongSize.zip"");        executeInstallUpdateTest(/* testName= */ null);    }   ])', 1), ('([12:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[12]:method_text:[   executeDeviceTestMethodOnDeviceOwnerUser("".systemupdate.InstallUpdateTest"", testName);    }   ])', 1), ('([13:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[13]:method_text:[ce().setSetting(""global"", ""stay_on_while_plugged_in"", stayAwake);            }        }    }   ])', 1), ('([8:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[8]:method_text:[e(DEVICE_ADMIN_PKG)                    .setBoolean(false)                    .build());    }   ])', 1), ('([8:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[8]:method_text:[xecuteDeviceTestMethod("".SecurityLoggingTest"", ""testDisablingSecurityLogging"");        }    }   ])', 1), ('([15:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[15]:method_text:[ncryption(ComponentName, boolean)}     * is only allowed for system user.     */    @Override   ])', 1), ('([12:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[12]:method_text:[me, testClassName,                    ""testDisablingSecurityLogging"", userId);        }    }   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[2]:method_text:[       ""testPermissionGrantStateGranted_userNotifiedOfLocationPermission"");    }    @Override   ])', 1), ('([3:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[3]:method_text:[rmissionGrantTest"",                ""testAdminCanGrantSensorsPermissions"");    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[1]:method_text:[n state.    }    //TODO(b/180413140) Investigate why the test fails on DO mode.    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[1]:method_text:[    public void testPermissionPrompts() throws Exception {    }    @Override    ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[1]:method_text:[testSuspendPackage() throws Exception {        super.testSuspendPackage();    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[1]:method_text:[() throws Exception {        super.testSuspendPackageWithPackageManager();    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[1]:method_text:[dExpiration() throws Exception {        super.testGetPasswordExpiration();    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[1]:method_text:[wordExpiration() throws Exception {        super.testPasswordExpiration();    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[1]:method_text:[dWithToken() throws Exception {        super.testResetPasswordWithToken();    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[1]:method_text:[eprecated() throws Exception {        super.testResetPasswordDeprecated();    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[1]:method_text:[rtIntent() throws Exception {        super.testCreateAdminSupportIntent();    }    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[1]:method_text:[solving() throws Exception {        super.testPersistentIntentResolving();    }    @Override   ])', 1), ('([37:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[CE]:[37]:method_text:[ser(                DEVICE_ADMIN_PKG, "".AffiliationTest"", ""testSetAffiliationId1"", userId);    }}])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[key]:[1]:method_text:[eKeyPairWithDeviceIdAttestationExpectingSuccess"", mUserId));    }    @FlakyTest    @Override   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[key]:[1]:method_text:[ser(                DEVICE_ADMIN_PKG, "".AffiliationTest"", ""testSetAffiliationId1"", userId);    }}])', 1)]"	""	""	"[('CE', 37), ('DE', 36), ('IV', 9), ('encryption', 2), ('storage', 2), ('ensure', 2), ('key', 2), ('persistent', 1)]"	"[('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSetStorageEncryption CtsDevicePolicyManagerTestCases]', 6), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSecurityLoggingWithSingleUser CtsDevicePolicyManagerTestCases]', 4), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testPersistentIntentResolving CtsDevicePolicyManagerTestCases]', 4), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testDisallowAutofill_allowed CtsDevicePolicyManagerTestCases]', 4), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSecurityLoggingDelegate CtsDevicePolicyManagerTestCases]', 4), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest isHeadlessSystemUserMode CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testInstallUpdateLogged CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSuspendPackage CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSuspendPackageWithPackageManager CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testCreateAdminSupportIntent CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testDelegatedCertInstallerDeviceIdAttestation CtsDevicePolicyManagerTestCases]', 3), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testLockTask_unaffiliatedUser CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testCaCertManagement CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testCannotRemoveUserIfRestrictionSet CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testWifi CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testAdminConfiguredNetworks CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testApplicationRestrictions CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSetTime CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSetTimeZone CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testLockScreenInfo CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testFactoryResetProtectionPolicy CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testCommonCriteriaMode CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSystemUpdatePolicy CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testInstallUpdate CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSecurityLoggingEnabledLogged CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSecurityLoggingWithTwoUsers CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testLocationPermissionGrantNotifies CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testAdminControlOverSensorPermissionGrantsDefault CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testGrantOfSensorsRelatedPermissions CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testSensorsRelatedPermissionsNotGrantedViaPolicy CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testStateOfSensorsRelatedPermissionsCannotBeRead CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testPermissionPrompts CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testGetPasswordExpiration CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testPasswordExpiration CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testResetPasswordWithToken CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testResetPasswordDeprecated CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testInstallCaCertLogged CtsDevicePolicyManagerTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
