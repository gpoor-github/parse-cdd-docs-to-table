"Section"	"section_id"	"req_id"	"Test Availability"	"class_def"	"method"	"module"	"method_text"	"full_key"	"requirement"	"key_as_number"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"matched_terms"	"search_roots"	"qualified_method"	"max_matches"	"file_name"	"matched_files"	"methods_string"	"urls"	"protected"	"Area"	"Shortened"	"Test Level"
"1:831226) 180  . Introduction"	"180"	""	""	""	""	""	""	"180"	""" <html lang=""en"" dir=""ltr""> <meta name=""google-signin-scope"" content=""profile email https://www.googleapis.com/auth/developerprofiles https://www.googleapis.com/auth/developerprofiles.award""> <link rel=""manifest"" href=""/_pwa/androidsource/manifest.json"" crossorigin=""use-credentials""> <link rel=""search"" type=""application/opensearchdescription+xml"" title=""Android Open Source Project"" href=""https://source.android.com/s/opensearch.xml""> Android 11 Compatibility Definition &nbsp;|&nbsp; Android Open Source Project <body class="""" template=""page"" theme=""androidsource-theme"" type=""article"" layout=""docs"" pending> <button type=""button"" id=""devsite-hamburger-menu"" class=""devsite-header-icon-button button-flat material-icons gc-analytics-event"" data-category=""Site-Wide Custom Events"" data-label=""Navigation menu button"" visually-hidden aria-label=""Open menu""> <a href=""/"" class=""devsite-site-logo-link gc-analytics-event"" data-category=""Site-Wide Custom Events"" data-label=""Site logo"" track-type=""globalNav"" track-name=""androidOpenSourceProject"" track-metadata-position=""nav"" track-metadata-eventDetail=""nav""> <img src=""https://www.gstatic.com/devrel-devsite/prod/v7d29b723aef4d149fe98fb5331f45df163ead31f4cb33149234e59d978e54b1e/androidsource/images/lockup.svg"" class=""devsite-site-logo"" alt=""Android Open Source Project""> <ul class=""devsite-breadcrumb-list"" > <li class=""devsite-breadcrumb-item ""> <tab dropdown active > <a href=""https://source.android.com/docs"" class=""gc-analytics-event "" track-type=""nav"" track-name=""docs"" track-metadata-eventdetail=""https://source.android.com/docs"" track-metadata-position=""nav - docs"" track-metadata-module=""primary nav"" aria-label=""Docs, selected"" data-category=""Site-Wide Custom Events"" data-label=""Tab: Docs"" > Docs <a href=""#"" role=""button"" aria-haspopup=""true"" aria-expanded=""false"" aria-label=""Dropdown menu for Docs"" track-type=""nav"" track-name=""docs"" track-metadata-eventdetail=""https://source.android.com/docs"" track-metadata-position=""nav - docs"" track-metadata-module=""primary nav"" data-category=""Site-Wide Custom Events"" data-label=""Tab: Docs"" class=""devsite-tabs-dropdown-toggle devsite-icon devsite-icon-arrow-drop-down""> <div class=""devsite-tabs-dropdown-column android-source-tabs-dropdown-column-small""> <ul class=""devsite-tabs-dropdown-section ""> Getting Started <a href=""https://source.android.com/setup/intro"" track-type=""nav"" track-name=""about"" track-metadata-eventdetail=""https://source.android.com/setup/intro"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""getting started"" tooltip > About <a href=""https://source.android.com/setup/start"" track-type=""nav"" track-name=""start"" track-metadata-eventdetail=""https://source.android.com/setup/start"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""getting started"" tooltip > Start <a href=""https://source.android.com/setup/develop"" track-type=""nav"" track-name=""download"" track-metadata-eventdetail=""https://source.android.com/setup/develop"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""getting started"" tooltip > Download <a href=""https://source.android.com/setup/build"" track-type=""nav"" track-name=""build"" track-metadata-eventdetail=""https://source.android.com/setup/build"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""getting started"" tooltip > Build <a href=""https://source.android.com/setup/create/coding-tasks"" track-type=""nav"" track-name=""create"" track-metadata-eventdetail=""https://source.android.com/setup/create/coding-tasks"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""getting started"" tooltip > Create <a href=""https://source.android.com/setup/contribute"" track-type=""nav"" track-name=""contribute"" track-metadata-eventdetail=""https://source.android.com/setup/contribute"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""getting started"" tooltip > Contribute <ul class=""devsite-tabs-dropdown-section ""> Security <a href=""https://source.android.com/security/overview"" track-type=""nav"" track-name=""overview"" track-metadata-eventdetail=""https://source.android.com/security/overview"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""getting started"" tooltip > Overview <a href=""https://source.android.com/security/bulletin"" track-type=""nav"" track-name=""bulletins"" track-metadata-eventdetail=""https://source.android.com/security/bulletin"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""getting started"" tooltip > Bulletins <a href=""https://source.android.com/security/features"" track-type=""nav"" track-name=""features"" track-metadata-eventdetail=""https://source.android.com/security/features"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""getting started"" tooltip > Features <a href=""https://source.android.com/devices/tech/debug/fuzz-sanitize"" track-type=""nav"" track-name=""testing"" track-metadata-eventdetail=""https://source.android.com/devices/tech/debug/fuzz-sanitize"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""getting started"" tooltip > Testing <a href=""https://source.android.com/security/best-practices"" track-type=""nav"" track-name=""best practices"" track-metadata-eventdetail=""https://source.android.com/security/best-practices"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""getting started"" tooltip > Best Practices <div class=""devsite-tabs-dropdown-column android-source-tabs-dropdown-column-small""> <ul class=""devsite-tabs-dropdown-section ""> Core Topics <a href=""https://source.android.com/devices/architecture"" track-type=""nav"" track-name=""architecture"" track-metadata-eventdetail=""https://source.android.com/devices/architecture"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Architecture <a href=""https://source.android.com/devices/audio"" track-type=""nav"" track-name=""audio"" track-metadata-eventdetail=""https://source.android.com/devices/audio"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Audio <a href=""https://source.android.com/devices/camera"" track-type=""nav"" track-name=""camera"" track-metadata-eventdetail=""https://source.android.com/devices/camera"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Camera <a href=""https://source.android.com/devices/tech/connect"" track-type=""nav"" track-name=""connectivity"" track-metadata-eventdetail=""https://source.android.com/devices/tech/connect"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Connectivity <a href=""https://source.android.com/devices/tech/datausage"" track-type=""nav"" track-name=""data"" track-metadata-eventdetail=""https://source.android.com/devices/tech/datausage"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Data <a href=""https://source.android.com/devices/tech/display"" track-type=""nav"" track-name=""display"" track-metadata-eventdetail=""https://source.android.com/devices/tech/display"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Display <a href=""https://source.android.com/devices/graphics"" track-type=""nav"" track-name=""graphics"" track-metadata-eventdetail=""https://source.android.com/devices/graphics"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Graphics <a href=""https://source.android.com/devices/interaction"" track-type=""nav"" track-name=""interaction"" track-metadata-eventdetail=""https://source.android.com/devices/interaction"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Interaction <a href=""https://source.android.com/devices/media"" track-type=""nav"" track-name=""media"" track-metadata-eventdetail=""https://source.android.com/devices/media"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Media <a href=""https://source.android.com/devices/tech/perf"" track-type=""nav"" track-name=""performance"" track-metadata-eventdetail=""https://source.android.com/devices/tech/perf"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Performance <a href=""https://source.android.com/devices/tech/config"" track-type=""nav"" track-name=""permissions"" track-metadata-eventdetail=""https://source.android.com/devices/tech/config"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Permissions <a href=""https://source.android.com/devices/tech/power"" track-type=""nav"" track-name=""power"" track-metadata-eventdetail=""https://source.android.com/devices/tech/power"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Power <a href=""https://source.android.com/devices/tech/dalvik"" track-type=""nav"" track-name=""runtime"" track-metadata-eventdetail=""https://source.android.com/devices/tech/dalvik"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Runtime <a href=""https://source.android.com/devices/tech/settings"" track-type=""nav"" track-name=""settings"" track-metadata-eventdetail=""https://source.android.com/devices/tech/settings"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Settings <a href=""https://source.android.com/devices/storage"" track-type=""nav"" track-name=""storage"" track-metadata-eventdetail=""https://source.android.com/devices/storage"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Storage <a href=""https://source.android.com/compatibility/tests"" track-type=""nav"" track-name=""tests"" track-metadata-eventdetail=""https://source.android.com/compatibility/tests"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Tests <a href=""https://source.android.com/devices/tech/ota"" track-type=""nav"" track-name=""updates"" track-metadata-eventdetail=""https://source.android.com/devices/tech/ota"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""core topics"" tooltip > Updates <div class=""devsite-tabs-dropdown-column android-source-tabs-dropdown-column-small""> <ul class=""devsite-tabs-dropdown-section ""> Compatibility <a href=""https://source.android.com/compatibility/cdd"" track-type=""nav"" track-name=""compatibility definition document (cdd)"" track-metadata-eventdetail=""https://source.android.com/compatibility/cdd"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""compatibility"" tooltip > Compatibility Definition Document (CDD) <a href=""https://source.android.com/compatibility/cts"" track-type=""nav"" track-name=""compatibility test suite (cts)"" track-metadata-eventdetail=""https://source.android.com/compatibility/cts"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""compatibility"" tooltip > Compatibility Test Suite (CTS) <ul class=""devsite-tabs-dropdown-section ""> Android Devices <a href=""https://source.android.com/devices/automotive"" track-type=""nav"" track-name=""automotive"" track-metadata-eventdetail=""https://source.android.com/devices/automotive"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""compatibility"" tooltip > Automotive <a href=""https://source.android.com/devices/tech/admin"" track-type=""nav"" track-name=""enterprise"" track-metadata-eventdetail=""https://source.android.com/devices/tech/admin"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""compatibility"" tooltip > Enterprise <a href=""https://source.android.com/devices/tv"" track-type=""nav"" track-name=""tv"" track-metadata-eventdetail=""https://source.android.com/devices/tv"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""compatibility"" tooltip > TV <ul class=""devsite-tabs-dropdown-section ""> Reference <a href=""https://source.android.com/reference/hidl"" track-type=""nav"" track-name=""hidl"" track-metadata-eventdetail=""https://source.android.com/reference/hidl"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""compatibility"" tooltip > HIDL <a href=""https://source.android.com/reference/hal"" track-type=""nav"" track-name=""hal"" track-metadata-eventdetail=""https://source.android.com/reference/hal"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""compatibility"" tooltip > HAL <a href=""https://source.android.com/reference/tradefed/classes"" track-type=""nav"" track-name=""trade federation"" track-metadata-eventdetail=""https://source.android.com/reference/tradefed/classes"" track-metadata-position=""nav - docs"" track-metadata-module=""tertiary nav"" track-metadata-module_headline=""compatibility"" tooltip > Trade Federation <a href=""https://cs.android.com/android/platform/superproject/"" class=""gc-analytics-event "" track-type=""nav"" track-name=""go to code ➚"" track-metadata-eventdetail=""https://cs.android.com/android/platform/superproject/"" track-metadata-position=""nav - go to code ➚"" track-metadata-module=""primary nav"" data-category=""Site-Wide Custom Events"" data-label=""Tab: GO TO CODE ➚"" > GO TO CODE ➚ <devsite-search aria-expanded=""false"" aria-haspopup=""listbox"" enable-signin enable-search enable-suggestions enable-query-completion project-name=""Android Open Source Project"" tenant-name=""Android Open Source Project"" role=""combobox""> <input aria-activedescendant="""" aria-autocomplete=""list"" aria-label=""Search"" aria-haspopup=""false"" aria-multiline=""false"" aria-label=""Search box"" autocomplete=""off"" class=""devsite-search-field devsite-search-query"" name=""q"" placeholder=""Search"" role=""searchbox"" type=""text"" value="""" > <button type=""button"" search-open class=""devsite-search-button devsite-header-icon-button button-flat material-icons"" aria-label=""Open search""> <button type=""button"" search-close class=""devsite-search-button devsite-header-icon-button button-flat material-icons"" aria-label=""Close search""> <select aria-label=""Select your language preference."" class=""devsite-language-selector-select"" name=""language"" track-name=""click"" track-type=""languageSelector""> Language <option value=""en"" lang=""en"" > English <option value=""id"" lang=""id"" > Bahasa Indonesia <option value=""de"" lang=""de"" > Deutsch <option value=""es_419"" lang=""es_419"" > Español – América Latina <option value=""fr"" lang=""fr"" > Français <option value=""it"" lang=""it"" > Italiano <option value=""pl"" lang=""pl"" > Polski <option value=""pt_br"" lang=""pt_br"" > Português – Brasil <option value=""vi"" lang=""vi"" > Tiếng Việt <option value=""tr"" lang=""tr"" > Türkçe <option value=""ru"" lang=""ru"" > Русский <option value=""he"" lang=""he"" > עברית&#39; <option value=""ar"" lang=""ar"" > العربيّة <option value=""fa"" lang=""fa"" > فارسی <option value=""hi"" lang=""hi"" > हिंदी <option value=""bn"" lang=""bn"" > বাংলা <option value=""th"" lang=""th"" > ภาษาไทย <option value=""zh_cn"" lang=""zh_cn"" > 中文 – 简体 <option value=""zh_tw"" lang=""zh_tw"" > 中文 – 繁體 <option value=""ja"" lang=""ja"" > 日本語 <option value=""ko"" lang=""ko"" > 한국어 <devsite-user enable-profiles id=""devsite-user""> <div class=""devsite-collapsible-section ""> <div class=""devsite-product-id-row"" > <ul class=""devsite-breadcrumb-list"" > <li class=""devsite-breadcrumb-item ""> <a href=""https://source.android.com/docs"" class=""devsite-breadcrumb-link gc-analytics-event"" data-category=""Site-Wide Custom Events"" data-label=""Lower Header"" data-value=""1"" track-type=""globalNav"" track-name=""breadcrumb"" track-metadata-position=""1"" track-metadata-eventdetail="""" > Documentation <a href=""https://source.android.com/setup"" class=""gc-analytics-event "" track-type=""nav"" track-name=""getting started"" track-metadata-eventdetail=""https://source.android.com/setup"" track-metadata-position=""nav - getting started"" track-metadata-module=""primary nav"" data-category=""Site-Wide Custom Events"" data-label=""Tab: Getting Started"" > Getting Started <a href=""https://source.android.com/security"" class=""gc-analytics-event "" track-type=""nav"" track-name=""security"" track-metadata-eventdetail=""https://source.android.com/security"" track-metadata-position=""nav - security"" track-metadata-module=""primary nav"" data-category=""Site-Wide Custom Events"" data-label=""Tab: Security"" > Security <a href=""https://source.android.com/core"" class=""gc-analytics-event "" track-type=""nav"" track-name=""core topics"" track-metadata-eventdetail=""https://source.android.com/core"" track-metadata-position=""nav - core topics"" track-metadata-module=""primary nav"" data-category=""Site-Wide Custom Events"" data-label=""Tab: Core Topics"" > Core Topics <a href=""https://source.android.com/compatibility"" class=""gc-analytics-event "" track-type=""nav"" track-name=""compatibility"" track-metadata-eventdetail=""https://source.android.com/compatibility"" track-metadata-position=""nav - compatibility"" track-metadata-module=""primary nav"" aria-label=""Compatibility, selected"" data-category=""Site-Wide Custom Events"" data-label=""Tab: Compatibility"" > Compatibility <a href=""https://source.android.com/devices"" class=""gc-analytics-event "" track-type=""nav"" track-name=""android devices"" track-metadata-eventdetail=""https://source.android.com/devices"" track-metadata-position=""nav - android devices"" track-metadata-module=""primary nav"" data-category=""Site-Wide Custom Events"" data-label=""Tab: Android Devices"" > Android Devices <a href=""https://source.android.com/reference"" class=""gc-analytics-event "" track-type=""nav"" track-name=""reference"" track-metadata-eventdetail=""https://source.android.com/reference"" track-metadata-position=""nav - reference"" track-metadata-module=""primary nav"" data-category=""Site-Wide Custom Events"" data-label=""Tab: Reference"" > Reference <nav class=""devsite-book-nav devsite-nav nocontent"" aria-label=""Side menu""> <button type=""button"" id=""devsite-close-nav"" class=""devsite-header-icon-button button-flat material-icons gc-analytics-event"" data-category=""Site-Wide Custom Events"" data-label=""Close navigation"" aria-label=""Close navigation""> <a href=""/"" class=""devsite-site-logo-link gc-analytics-event"" data-category=""Site-Wide Custom Events"" data-label=""Site logo"" track-type=""globalNav"" track-name=""androidOpenSourceProject"" track-metadata-position=""nav"" track-metadata-eventDetail=""nav""> <ul class=""devsite-breadcrumb-list"" > <li class=""devsite-breadcrumb-item ""> <a href=""/docs"" class=""devsite-nav-title gc-analytics-event devsite-nav-active"" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Docs"" track-type=""globalNav"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""docs""> Docs <ul class=""devsite-nav-responsive-tabs devsite-nav-has-menu ""> <span class=""devsite-nav-title"" tooltip > More <span class=""devsite-nav-icon material-icons"" data-icon=""forward"" menu=""Docs""> <a href=""/setup"" class=""devsite-nav-title gc-analytics-event devsite-nav-has-children "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Getting Started"" track-type=""globalNav"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""gettingStarted""> Getting Started <span class=""devsite-nav-icon material-icons"" data-icon=""forward"" > <a href=""/security"" class=""devsite-nav-title gc-analytics-event devsite-nav-has-children "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Security"" track-type=""globalNav"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""security""> Security <span class=""devsite-nav-icon material-icons"" data-icon=""forward"" > <a href=""/core"" class=""devsite-nav-title gc-analytics-event devsite-nav-has-children "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Core Topics"" track-type=""globalNav"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""coreTopics""> Core Topics <span class=""devsite-nav-icon material-icons"" data-icon=""forward"" > <a href=""/compatibility"" class=""devsite-nav-title gc-analytics-event devsite-nav-has-children devsite-nav-active"" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Compatibility"" track-type=""globalNav"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""compatibility""> Compatibility <span class=""devsite-nav-icon material-icons"" data-icon=""forward"" menu=""_book""> <a href=""/devices"" class=""devsite-nav-title gc-analytics-event devsite-nav-has-children "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Android Devices"" track-type=""globalNav"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""androidDevices""> Android Devices <span class=""devsite-nav-icon material-icons"" data-icon=""forward"" > <a href=""/reference"" class=""devsite-nav-title gc-analytics-event devsite-nav-has-children "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Reference"" track-type=""globalNav"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""reference""> Reference <span class=""devsite-nav-icon material-icons"" data-icon=""forward"" > <a href=""https://cs.android.com/android/platform/superproject/"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: GO TO CODE ➚"" track-type=""globalNav"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""goToCode➚""> GO TO CODE ➚ <a href=""/compatibility"" class=""devsite-nav-title"" >Overview <li class=""devsite-nav-item devsite-nav-expandable devsite-nav-accordion""> Compatibility<a href=""/compatibility/overview"" class=""devsite-nav-title"" >Android Compatibility Program Overview<a href=""/compatibility/cdd"" class=""devsite-nav-title"" >Compatibility Definition Document<li class=""devsite-nav-item devsite-nav-expandable""> CDDs in HTML<a href=""/compatibility/12/android-12-cdd"" class=""devsite-nav-title"" >Android 12 (current)<a href=""/compatibility/11/android-11-cdd"" class=""devsite-nav-title"" >Android 11<a href=""/compatibility/10/android-10-cdd"" class=""devsite-nav-title"" >Android 10<a href=""/compatibility/9/android-9-cdd"" class=""devsite-nav-title"" >Android 9<a href=""/compatibility/8.1/android-8.1-cdd"" class=""devsite-nav-title"" >Android 8.1<a href=""/compatibility/8.0/android-8.0-cdd"" class=""devsite-nav-title"" >Android 8.0<a href=""/compatibility/7.1/android-7.1-cdd"" class=""devsite-nav-title"" >Android 7.1<a href=""/compatibility/7.0/android-7.0-cdd"" class=""devsite-nav-title"" >Android 7.0<a href=""/compatibility/6.0/android-6.0-cdd"" class=""devsite-nav-title"" >Android 6.0<a href=""/compatibility/5.1/android-5.1-cdd"" class=""devsite-nav-title"" >Android 5.1<a href=""/compatibility/5.0/android-5.0-cdd"" class=""devsite-nav-title"" >Android 5.0<a href=""/compatibility/4.4/android-4.4-cdd"" class=""devsite-nav-title"" >Android 4.4<a href=""/compatibility/4.3/android-4.3-cdd"" class=""devsite-nav-title"" >Android 4.3<a href=""/compatibility/4.2/android-4.2-cdd"" class=""devsite-nav-title"" >Android 4.2<a href=""/compatibility/4.1/android-4.1-cdd"" class=""devsite-nav-title"" >Android 4.1<a href=""/compatibility/4.0/android-4.0-cdd"" class=""devsite-nav-title"" >Android 4.0<a href=""/compatibility/2.3/android-2.3-cdd"" class=""devsite-nav-title"" >Android 2.3<a href=""/compatibility/2.2/android-2.2-cdd"" class=""devsite-nav-title"" >Android 2.2<a href=""/compatibility/2.1/android-2.1-cdd"" class=""devsite-nav-title"" >Android 2.1<a href=""/compatibility/1.6/android-1.6-cdd"" class=""devsite-nav-title"" >Android 1.6<li class=""devsite-nav-item devsite-nav-expandable""> CDDs as PDF<a href=""/compatibility/12/android-12-cdd.pdf"" class=""devsite-nav-title"" >Android 12 (current)<a href=""/compatibility/11/android-11-cdd.pdf"" class=""devsite-nav-title"" >Android 11<a href=""/compatibility/10/android-10-cdd.pdf"" class=""devsite-nav-title"" >Android 10<a href=""/compatibility/9/android-9-cdd.pdf"" class=""devsite-nav-title"" >Android 9<a href=""/compatibility/8.1/android-8.1-cdd.pdf"" class=""devsite-nav-title"" >Android 8.1<a href=""/compatibility/8.0/android-8.0-cdd.pdf"" class=""devsite-nav-title"" >Android 8.0<a href=""/compatibility/7.1/android-7.1-cdd.pdf"" class=""devsite-nav-title"" >Android 7.1<a href=""/compatibility/7.0/android-7.0-cdd.pdf"" class=""devsite-nav-title"" >Android 7.0<a href=""/compatibility/6.0/android-6.0-cdd.pdf"" class=""devsite-nav-title"" >Android 6.0<a href=""/compatibility/5.1/android-5.1-cdd.pdf"" class=""devsite-nav-title"" >Android 5.1<a href=""/compatibility/5.0/android-5.0-cdd.pdf"" class=""devsite-nav-title"" >Android 5.0<a href=""/compatibility/4.4/android-4.4-cdd.pdf"" class=""devsite-nav-title"" >Android 4.4<a href=""/compatibility/4.3/android-4.3-cdd.pdf"" class=""devsite-nav-title"" >Android 4.3<a href=""/compatibility/4.2/android-4.2-cdd.pdf"" class=""devsite-nav-title"" >Android 4.2<a href=""/compatibility/4.1/android-4.1-cdd.pdf"" class=""devsite-nav-title"" >Android 4.1<a href=""/compatibility/4.0/android-4.0-cdd.pdf"" class=""devsite-nav-title"" >Android 4.0<a href=""/compatibility/2.3/android-2.3-cdd.pdf"" class=""devsite-nav-title"" >Android 2.3<a href=""/compatibility/2.3/android-2.3.3-cdd.pdf"" class=""devsite-nav-title"" >Android 2.3.3<a href=""/compatibility/2.2/android-2.2-cdd.pdf"" class=""devsite-nav-title"" >Android 2.2<a href=""/compatibility/2.1/android-2.1-cdd.pdf"" class=""devsite-nav-title"" >Android 2.1<a href=""/compatibility/1.6/android-1.6-cdd.pdf"" class=""devsite-nav-title"" >Android 1.6 <li class=""devsite-nav-item devsite-nav-expandable devsite-nav-accordion""> Compatibility Test Suite (CTS)<a href=""/compatibility/cts"" class=""devsite-nav-title"" >Overview<a href=""/compatibility/cts/setup"" class=""devsite-nav-title"" >Set up CTS<li class=""devsite-nav-item devsite-nav-expandable""> Run CTS<a href=""/compatibility/cts/run"" class=""devsite-nav-title"" >Overview<a href=""/compatibility/cts/run-locally"" class=""devsite-nav-title"" >Run Media Tests Locally<a href=""/compatibility/cts/helper-modules"" class=""devsite-nav-title"" >CTS Device Interaction Helper Module<a href=""/compatibility/cts/command-console-v2"" class=""devsite-nav-title"" >CTS v2 Command Console<a href=""/compatibility/cts/command_console"" class=""devsite-nav-title"" >CTS v1 Command Console<a href=""/compatibility/cts/cts-instant"" class=""devsite-nav-title"" >Instant Apps<a href=""/compatibility/cts/secure-element"" class=""devsite-nav-title"" >Secure Element<a href=""/compatibility/cts/cts-faq"" class=""devsite-nav-title"" >CTS FAQs<li class=""devsite-nav-item devsite-nav-expandable""> CTS Verifier<a href=""/compatibility/cts/verifier"" class=""devsite-nav-title"" >Overview<a href=""/compatibility/cts/cts-verifier"" class=""devsite-nav-title"" >CTS-Verifier Test Guidance<a href=""/compatibility/cts/audio-framework"" class=""devsite-nav-title"" >Audio Framework<a href=""/compatibility/cts/near-ultrasound"" class=""devsite-nav-title"" >Near Ultrasound Tests<a href=""/compatibility/cts/rotation-vector"" class=""devsite-nav-title"" >Rotation Vector Crosscheck<a href=""/compatibility/cts/cts-midi"" class=""devsite-nav-title"" >CTS Verifier MIDI Tests<a href=""/compatibility/cts/usb-audio"" class=""devsite-nav-title"" >USB Audio CTS Tests<a href=""/compatibility/cts/verifier-pro-audio"" class=""devsite-nav-title"" >CTS Verifier Pro Audio Test<a href=""/compatibility/cts/verifier-instant-apps"" class=""devsite-nav-title"" >CTS Verifier for Instant Apps<li class=""devsite-nav-item devsite-nav-expandable""> Camera Testing<a href=""/compatibility/cts/camera-hal"" class=""devsite-nav-title"" >Camera HAL Testing<a href=""/compatibility/cts/camera-its-tests"" class=""devsite-nav-title"" >Camera ITS Tests<li class=""devsite-nav-item devsite-nav-expandable""> Camera ITS-in-a-Box<a href=""/compatibility/cts/camera-its-box"" class=""devsite-nav-title"" >Overview<a href=""/compatibility/cts/camera-its-box-assembly"" class=""devsite-nav-title"" >Regular Field-of-View Box<a href=""/compatibility/cts/camera-wfov-box-assembly"" class=""devsite-nav-title"" >Wide Field-of-View Box<li class=""devsite-nav-item devsite-nav-expandable""> Sensor Fusion Box<a href=""/compatibility/cts/sensor-fusion-quick-start"" class=""devsite-nav-title"" >Sensor Fusion Box Quick Start<a href=""/compatibility/cts/sensor-fusion-box-assembly"" class=""devsite-nav-title"" >Sensor Fusion Box Details<a href=""/compatibility/cts/sensor-fusion-rack-mount"" class=""devsite-nav-title"" >Sensor Fusion Controller<li class=""devsite-nav-item devsite-nav-expandable""> Camera ITS Release Notes<li class=""devsite-nav-item devsite-nav-new""><a href=""/compatibility/cts/its-release-notes-12"" class=""devsite-nav-title"" >Android 12 Camera ITS Release Notes<span class=""devsite-nav-icon material-icons"" data-icon=""new"" data-title=""New!"" aria-hidden=""true""><a href=""/compatibility/cts/its-release-notes"" class=""devsite-nav-title"" >Android 11 Camera ITS Release Notes<a href=""/compatibility/cts/interpret"" class=""devsite-nav-title"" >Interpret Results<a href=""/compatibility/cts/development"" class=""devsite-nav-title"" >Develop CTS<a href=""/compatibility/cts/downloads"" class=""devsite-nav-title"" >Downloads<a href=""/compatibility/cts/cts-release-notes"" class=""devsite-nav-title"" >Release Notes <ul class=""devsite-nav-list"" menu=""Docs"" aria-label=""Side menu"" hidden> <span class=""devsite-nav-title"" tooltip > Getting Started <a href=""/setup/intro"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: About"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""about""> About <a href=""/setup/start"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Start"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""start""> Start <a href=""/setup/develop"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Download"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""download""> Download <a href=""/setup/build"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Build"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""build""> Build <a href=""/setup/create/coding-tasks"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Create"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""create""> Create <a href=""/setup/contribute"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Contribute"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""contribute""> Contribute <span class=""devsite-nav-title"" tooltip > Security <a href=""/security/overview"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Overview"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""overview""> Overview <a href=""/security/bulletin"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Bulletins"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""bulletins""> Bulletins <a href=""/security/features"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Features"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""features""> Features <a href=""/devices/tech/debug/fuzz-sanitize"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Testing"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""testing""> Testing <a href=""/security/best-practices"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Best Practices"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""bestPractices""> Best Practices <span class=""devsite-nav-title"" tooltip > Core Topics <a href=""/devices/architecture"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Architecture"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""architecture""> Architecture <a href=""/devices/audio"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Audio"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""audio""> Audio <a href=""/devices/camera"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Camera"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""camera""> Camera <a href=""/devices/tech/connect"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Connectivity"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""connectivity""> Connectivity <a href=""/devices/tech/datausage"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Data"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""data""> Data <a href=""/devices/tech/display"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Display"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""display""> Display <a href=""/devices/graphics"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Graphics"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""graphics""> Graphics <a href=""/devices/interaction"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Interaction"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""interaction""> Interaction <a href=""/devices/media"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Media"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""media""> Media <a href=""/devices/tech/perf"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Performance"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""performance""> Performance <a href=""/devices/tech/config"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Permissions"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""permissions""> Permissions <a href=""/devices/tech/power"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Power"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""power""> Power <a href=""/devices/tech/dalvik"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Runtime"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""runtime""> Runtime <a href=""/devices/tech/settings"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Settings"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""settings""> Settings <a href=""/devices/storage"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Storage"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""storage""> Storage <a href=""/compatibility/tests"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Tests"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""tests""> Tests <a href=""/devices/tech/ota"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Updates"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""updates""> Updates <span class=""devsite-nav-title"" tooltip > Compatibility <a href=""/compatibility/cdd"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Compatibility Definition Document (CDD)"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""compatibilityDefinitionDocument(cdd)""> Compatibility Definition Document (CDD) <a href=""/compatibility/cts"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Compatibility Test Suite (CTS)"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""compatibilityTestSuite(cts)""> Compatibility Test Suite (CTS) <span class=""devsite-nav-title"" tooltip > Android Devices <a href=""/devices/automotive"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Automotive"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""automotive""> Automotive <a href=""/devices/tech/admin"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Enterprise"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""enterprise""> Enterprise <a href=""/devices/tv"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: TV"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""tv""> TV <span class=""devsite-nav-title"" tooltip > Reference <a href=""/reference/hidl"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: HIDL"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""hidl""> HIDL <a href=""/reference/hal"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: HAL"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""hal""> HAL <a href=""/reference/tradefed/classes"" class=""devsite-nav-title gc-analytics-event "" data-category=""Site-Wide Custom Events"" data-label=""Responsive Tab: Trade Federation"" track-type=""navMenu"" track-metadata-eventDetail=""globalMenu"" track-metadata-position=""nav"" track-name=""tradeFederation""> Trade Federation <main role=""main"" class=""devsite-main-content"" has-book-nav has-sidebar> <devsite-toc class=""devsite-nav"" role=""navigation"" aria-label=""On this page"" depth=""2"" scrollbars > <ul class=""devsite-breadcrumb-list"" aria-label=""Breadcrumb""> <li class=""devsite-breadcrumb-item ""> <a href=""https://source.android.com/"" class=""devsite-breadcrumb-link gc-analytics-event"" data-category=""Site-Wide Custom Events"" data-label=""Breadcrumbs"" data-value=""1"" track-type=""globalNav"" track-name=""breadcrumb"" track-metadata-position=""1"" track-metadata-eventdetail=""Android Open Source Project"" > AOSP <li class=""devsite-breadcrumb-item ""> <a href=""https://source.android.com/docs"" class=""devsite-breadcrumb-link gc-analytics-event"" data-category=""Site-Wide Custom Events"" data-label=""Breadcrumbs"" data-value=""2"" track-type=""globalNav"" track-name=""breadcrumb"" track-metadata-position=""2"" track-metadata-eventdetail="""" > Docs <li class=""devsite-breadcrumb-item ""> <a href=""https://source.android.com/compatibility"" class=""devsite-breadcrumb-link gc-analytics-event"" data-category=""Site-Wide Custom Events"" data-label=""Breadcrumbs"" data-value=""3"" track-type=""globalNav"" track-name=""breadcrumb"" track-metadata-position=""3"" track-metadata-eventdetail="""" > Compatibility Android 11 Compatibility Definition <devsite-toc class=""devsite-nav"" depth=""2"" devsite-toc-embedded > <div class=""devsite-article-body clearfix ""> <!-- Copyright 2017 The Android Open Source Project Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --> 1. Introduction This document enumerates the requirements that must be met in order for devices to be compatible with Android 11. The use of “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” is per the IETF standard defined in RFC2119. As used in this document, a “device implementer” or “implementer” is a person or organization developing a hardware/software solution running Android 11. A “device implementation” or “implementation"" is the hardware/software solution so developed. To be considered compatible with Android 11, device implementations MUST meet the requirements presented in this Compatibility Definition, including any documents incorporated via reference. Where this definition or the software tests described in section 10 is silent, ambiguous, or incomplete, it is the responsibility of the device implementer to ensure compatibility with existing implementations. For this reason, the Android Open Source Project is both the reference and preferred implementation of Android. Device implementers are STRONGLY RECOMMENDED to base their implementations to the greatest extent possible on the “upstream” source code available from the Android Open Source Project. While some components can hypothetically be replaced with alternate implementations, it is STRONGLY RECOMMENDED to not follow this practice, as passing the software tests will become substantially more difficult. It is the implementer’s responsibility to ensure full behavioral compatibility with the standard Android implementation, including and beyond the Compatibility Test Suite. Finally, note that certain component substitutions and modifications are explicitly forbidden by this document. Many of the resources linked to in this document are derived directly or indirectly from the Android SDK and will be functionally identical to the information in that SDK’s documentation. In any cases where this Compatibility Definition or the Compatibility Test Suite disagrees with the SDK documentation, the SDK documentation is considered authoritative. Any technical details provided in the linked resources throughout this document are considered by inclusion to be part of this Compatibility Definition. 1.1 Document Structure 1.1.1. Requirements by Device Type Section 2 contains all of the requirements that apply to a specific device type. Each subsection of Section 2 is dedicated to a specific device type. All the other requirements, that universally apply to any Android device implementations, are listed in the sections after Section 2. These requirements are referenced as ""Core Requirements"" in this document. 1.1.2. Requirement ID Requirement ID is assigned for MUST requirements. The ID is assigned for MUST requirements only. STRONGLY RECOMMENDED requirements are marked as [SR] but ID is not assigned. The ID consists of : Device Type ID - Condition ID - Requirement ID (e.g. C-0-1). Each ID is defined as below: Device Type ID (see more in 2. Device Types) C: Core (Requirements that are applied to any Android device implementations) H: Android Handheld device T: Android Television device A: Android Automotive implementation W: Android Watch implementation Tab: Android Tablet implementation Condition ID When the requirement is unconditional, this ID is set as 0. When the requirement is conditional, 1 is assigned for the 1st condition and the number increments by 1 within the same section and the same device type. Requirement ID This ID starts from 1 and increments by 1 within the same section and the same condition. 1.1.3. Requirement ID in Section 2 The Requirement ID in Section 2 starts with the corresponding section ID that is followed by the Requirement ID described above. The ID in Section 2 consists of : Section ID / Device Type ID - Condition ID - Requirement ID (e.g. 7.4.3/A-0-1). 2. Device Types While the Android Open Source Project provides a software stack that can be used for a variety of device types and form factors, there are a few device types that have a relatively better established application distribution ecosystem. This section describes those device types, and additional requirements and recommendations applicable for each device type. All Android device implementations that do not fit into any of the described device types MUST still meet all requirements in the other sections of this Compatibility Definition. 2.1 Device Configurations For the major differences in hardware configuration by device type, see the device-specific requirements that follow in this section. 2.2. Handheld Requirements An Android Handheld device refers to an Android device implementation that is typically used by holding it in the hand, such as an mp3 player, phone, or tablet. Android device implementations are classified as a Handheld if they meet all the following criteria: Have a power source that provides mobility, such as a battery. Have a physical diagonal screen size in the range of 3.3 inches (or 2.5 inches for devices which launched on an API level earlier than Android 11) to 8 inches. The additional requirements in the rest of this section are specific to Android Handheld device implementations. Note: Requirements that do not apply to Android Tablet devices are marked with an *. 2.2.1. Hardware Handheld device implementations: [7.1.1.1/H-0-1] MUST have at least one Android-compatible display that meets all requirements described on this document. [7.1.1.3/H-SR] Are STRONGLY RECOMMENDED to provide users an affordance to change the display size (screen density). If Handheld device implementations support software screen rotation, they: [7.1.1.1/H-1-1]* MUST make the logical screen that is made available for third party applications be at least 2 inches on the short edge(s) and 2.7 inches on the long edge(s). Devices which launched on an API level earlier than that of this document are exempted from this requirement. If Handheld device implementations do not support software screen rotation, they: [7.1.1.1/H-2-1]* MUST make the logical screen that is made available for third party applications be at least 2.7 inches on the short edge(s). Devices which launched on an API level earlier than that of this document are exempted from this requirement. If Handheld device implementations claim support for high dynamic range displays through Configuration.isScreenHdr() , they: [7.1.4.5/H-1-1] MUST advertise support for the EGL_EXT_gl_colorspace_bt2020_pq, EGL_EXT_surface_SMPTE2086_metadata, EGL_EXT_surface_CTA861_3_metadata, VK_EXT_swapchain_colorspace, and VK_EXT_hdr_metadata extensions. Handheld device implementations: [7.1.4.6/H-0-1] MUST report whether the device supports the GPU profiling capability via a system property graphics.gpu.profiler.support. If Handheld device implementations declare support via a system property graphics.gpu.profiler.support, they: [7.1.4.6/H-1-1] MUST report as output a protobuf trace that complies with the schema for GPU counters and GPU renderstages defined in the Perfetto documentation. [7.1.4.6/H-1-2] MUST report conformant values for the device’s GPU counters following the gpu counter trace packet proto. [7.1.4.6/H-1-3] MUST report conformant values for the device’s GPU RenderStages following the render stage trace packet proto. [7.1.4.6/H-1-4] MUST report a GPU Frequency tracepoint as specified by the format: power/gpu_frequency. Handheld device implementations: [7.1.5/H-0-1] MUST include support for legacy application compatibility mode as implemented by the upstream Android open source code. That is, device implementations MUST NOT alter the triggers or thresholds at which compatibility mode is activated, and MUST NOT alter the behavior of the compatibility mode itself. [7.2.1/H-0-1] MUST include support for third-party Input Method Editor (IME) applications. [7.2.3/H-0-3] MUST provide the Home function on all the Android-compatible displays that provide the home screen. [7.2.3/H-0-4] MUST provide the Back function on all the Android-compatible displays and the Recents function on at least one of the Android-compatible displays. [7.2.3/H-0-2] MUST send both the normal and long press event of the Back function (KEYCODE_BACK) to the foreground application. These events MUST NOT be consumed by the system and CAN be triggered by outside of the Android device (e.g. external hardware keyboard connected to the Android device). [7.2.4/H-0-1] MUST support touchscreen input. [7.2.4/H-SR] Are STRONGLY RECOMMENDED to launch the user-selected assist app, in other words the app that implements VoiceInteractionService, or an activity handling the ACTION_ASSIST on long-press of KEYCODE_MEDIA_PLAY_PAUSE or KEYCODE_HEADSETHOOK if the foreground activity does not handle those long-press events. [7.3.1/H-SR] Are STRONGLY RECOMMENDED to include a 3-axis accelerometer. If Handheld device implementations include a 3-axis accelerometer, they: [7.3.1/H-1-1] MUST be able to report events up to a frequency of at least 100 Hz. If Handheld device implementations include a GPS/GNSS receiver and report the capability to applications through the android.hardware.location.gps feature flag, they: [7.3.3/H-2-1] MUST report GNSS measurements, as soon as they are found, even if a location calculated from GPS/GNSS is not yet reported. [7.3.3/H-2-2] MUST report GNSS pseudoranges and pseudorange rates, that, in open-sky conditions after determining the location, while stationary or moving with less than 0.2 meter per second squared of acceleration, are sufficient to calculate position within 20 meters, and speed within 0.2 meters per second, at least 95% of the time. If Handheld device implementations include a 3-axis gyroscope, they: [7.3.4/H-3-1] MUST be able to report events up to a frequency of at least 100 Hz. [7.3.4/H-3-2] MUST be capable of measuring orientation changes up to 1000 degrees per second. Handheld device implementations that can make a voice call and indicate any value other than PHONE_TYPE_NONE in getPhoneType: [7.3.8/H] SHOULD include a proximity sensor. Handheld device implementations: [7.3.11/H-SR] Are RECOMMENDED to support pose sensor with 6 degrees of freedom. [7.4.3/H] SHOULD include support for Bluetooth and Bluetooth LE. If Handheld device implementations include a metered connection, they: [7.4.7/H-1-1] MUST provide the data saver mode. If Handheld device implementations include a logical camera device that lists capabilities using CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_LOGICAL_MULTI_CAMERA, they: [7.5.4/H-1-1] MUST have normal field of view (FOV) by default and it MUST be between 50 and 90 degrees. Handheld device implementations: [7.6.1/H-0-1] MUST have at least 4 GB of non-volatile storage available for application private data (a.k.a. ""/data"" partition). [7.6.1/H-0-2] MUST return “true” for ActivityManager.isLowRamDevice() when there is less than 1GB of memory available to the kernel and userspace. If Handheld device implementations declare support of only a 32-bit ABI: [7.6.1/H-1-1] The memory available to the kernel and userspace MUST be at least 416MB if the default display uses framebuffer resolutions up to qHD (e.g. FWVGA). [7.6.1/H-2-1] The memory available to the kernel and userspace MUST be at least 592MB if the default display uses framebuffer resolutions up to HD+ (e.g. HD, WSVGA). [7.6.1/H-3-1] The memory available to the kernel and userspace MUST be at least 896MB if the default display uses framebuffer resolutions up to FHD (e.g. WSXGA+). [7.6.1/H-4-1] The memory available to the kernel and userspace MUST be at least 1344MB if the default display uses framebuffer resolutions up to QHD (e.g. QWXGA). If Handheld device implementations declare support of 32-bit and 64-bit ABIs: [7.6.1/H-5-1] The memory available to the kernel and userspace MUST be at least 816MB if the default display uses framebuffer resolutions up to qHD (e.g. FWVGA). [7.6.1/H-6-1] The memory available to the kernel and userspace MUST be at least 944MB if the default display uses framebuffer resolutions up to HD+ (e.g. HD, WSVGA). [7.6.1/H-7-1] The memory available to the kernel and userspace MUST be at least 1280MB if the default display uses framebuffer resolutions up to FHD (e.g. WSXGA+). [7.6.1/H-8-1] The memory available to the kernel and userspace MUST be at least 1824MB if the default display uses framebuffer resolutions up to QHD (e.g. QWXGA). Note that the ""memory available to the kernel and userspace"" above refers to the memory space provided in addition to any memory already dedicated to hardware components such as radio, video, and so on that are not under the kernel’s control on device implementations. If Handheld device implementations include less than or equal to 1GB of memory available to the kernel and userspace, they: [7.6.1/H-9-1] MUST declare the feature flag android.hardware.ram.low. [7.6.1/H-9-2] MUST have at least 1.1 GB of non-volatile storage for application private data (a.k.a. ""/data"" partition). If Handheld device implementations include more than 1GB of memory available to the kernel and userspace, they: [7.6.1/H-10-1] MUST have at least 4GB of non-volatile storage available for application private data (a.k.a. ""/data"" partition). SHOULD declare the feature flag android.hardware.ram.normal. Handheld device implementations: [7.6.2/H-0-1] MUST NOT provide an application shared storage smaller than 1 GiB. [7.7.1/H] SHOULD include a USB port supporting peripheral mode. If handheld device implementations include a USB port supporting peripheral mode, they: [7.7.1/H-1-1] MUST implement the Android Open Accessory (AOA) API. If Handheld device implementations include a USB port supporting host mode, they: [7.7.2/H-1-1] MUST implement the USB audio class as documented in the Android SDK documentation. Handheld device implementations: [7.8.1/H-0-1] MUST include a microphone. [7.8.2/H-0-1] MUST have an audio output and declare android.hardware.audio.output. If Handheld device implementations are capable of meeting all the performance requirements for supporting VR mode and include support for it, they: [7.9.1/H-1-1] MUST declare the android.hardware.vr.high_performance feature flag. [7.9.1/H-1-2] MUST include an application implementing android.service.vr.VrListenerService that can be enabled by VR applications via android.app.Activity#setVrModeEnabled. If Handheld device implementations include one or more USB-C port(s) in host mode and implement (USB audio class), in addition to requirements in section 7.7.2, they: [7.8.2.2/H-1-1] MUST provide the following software mapping of HID codes: Function Mappings Context Behavior A HID usage page: 0x0C HID usage: 0x0CD Kernel key: KEY_PLAYPAUSE Android key: KEYCODE_MEDIA_PLAY_PAUSE Media playback Input: Short press Output: Play or pause Input: Long press Output: Launch voice command Sends: android.speech.action.VOICE_SEARCH_HANDS_FREE if the device is locked or its screen is off. Sends android.speech.RecognizerIntent.ACTION_WEB_SEARCH otherwise Incoming call Input: Short press Output: Accept call Input: Long press Output: Reject call Ongoing call Input: Short press Output: End call Input: Long press Output: Mute or unmute microphone B HID usage page: 0x0C HID usage: 0x0E9 Kernel key: KEY_VOLUMEUP Android key: VOLUME_UP Media playback, Ongoing call Input: Short or long press Output: Increases the system or headset volume C HID usage page: 0x0C HID usage: 0x0EA Kernel key: KEY_VOLUMEDOWN Android key: VOLUME_DOWN Media playback, Ongoing call Input: Short or long press Output: Decreases the system or headset volume D HID usage page: 0x0C HID usage: 0x0CF Kernel key: KEY_VOICECOMMAND Android key: KEYCODE_VOICE_ASSIST All. Can be triggered in any instance. Input: Short or long press Output: Launch voice command [7.8.2.2/H-1-2] MUST trigger ACTION_HEADSET_PLUG upon a plug insert, but only after the USB audio interfaces and endpoints have been properly enumerated in order to identify the type of terminal connected. When the USB audio terminal types 0x0302 is detected, they: [7.8.2.2/H-2-1] MUST broadcast Intent ACTION_HEADSET_PLUG with ""microphone"" extra set to 0. When the USB audio terminal types 0x0402 is detected, they: [7.8.2.2/H-3-1] MUST broadcast Intent ACTION_HEADSET_PLUG with ""microphone"" extra set to 1. When API AudioManager.getDevices() is called while the USB peripheral is connected they: [7.8.2.2/H-4-1] MUST list a device of type AudioDeviceInfo.TYPE_USB_HEADSET and role isSink() if the USB audio terminal type field is 0x0302. [7.8.2.2/H-4-2] MUST list a device of type AudioDeviceInfo.TYPE_USB_HEADSET and role isSink() if the USB audio terminal type field is 0x0402. [7.8.2.2/H-4-3] MUST list a device of type AudioDeviceInfo.TYPE_USB_HEADSET and role isSource() if the USB audio terminal type field is 0x0402. [7.8.2.2/H-4-4] MUST list a device of type AudioDeviceInfo.TYPE_USB_DEVICE and role isSink() if the USB audio terminal type field is 0x603. [7.8.2.2/H-4-5] MUST list a device of type AudioDeviceInfo.TYPE_USB_DEVICE and role isSource() if the USB audio terminal type field is 0x604. [7.8.2.2/H-4-6] MUST list a device of type AudioDeviceInfo.TYPE_USB_DEVICE and role isSink() if the USB audio terminal type field is 0x400. [7.8.2.2/H-4-7] MUST list a device of type AudioDeviceInfo.TYPE_USB_DEVICE and role isSource() if the USB audio terminal type field is 0x400. [7.8.2.2/H-SR] Are STRONGLY RECOMMENDED upon connection of a USB-C audio peripheral, to perform enumeration of USB descriptors, identify terminal types and broadcast Intent ACTION_HEADSET_PLUG in less than 1000 milliseconds. If Handheld device implementations include at least one haptic actuator, they: [7.10/H-SR]* Are STRONGLY RECOMMENDED NOT to use an eccentric rotating mass (ERM) haptic actuator(vibrator). [7.10/H]* SHOULD position the placement of the actuator near the location where the device is typically held or touched by hands. [7.10/H-SR]* Are STRONGLY RECOMMENDED to implement all public constants for clear haptics in android.view.HapticFeedbackConstants namely (CLOCK_TICK, CONTEXT_CLICK, KEYBOARD_PRESS, KEYBOARD_RELEASE, KEYBOARD_TAP, LONG_PRESS, TEXT_HANDLE_MOVE, VIRTUAL_KEY, VIRTUAL_KEY_RELEASE, CONFIRM, REJECT, GESTURE_START and GESTURE_END). [7.10/H-SR]* Are STRONGLY RECOMMENDED to implement all public constants for clear haptics in android.os.VibrationEffect namely (EFFECT_TICK, EFFECT_CLICK, EFFECT_HEAVY_CLICK and EFFECT_DOUBLE_CLICK) and all public constants for rich haptics in android.os.VibrationEffect.Composition namely (PRIMITIVE_CLICK and PRIMITIVE_TICK). [7.10/H-SR]* Are STRONGLY RECOMMENDED to use these linked haptic constants mappings. [7.10/H-SR]* Are STRONGLY RECOMMENDED to follow quality assessment for createOneShot() and createWaveform() API's. [7.10/H-SR]* Are STRONGLY RECOMMENDED to verify the capabilities for amplitude scalability by running android.os.Vibrator.hasAmplitudeControl(). Linear resonant actuator (LRA) is a single mass spring system which has a dominant resonant frequency where the mass translates in the direction of desired motion. If Handheld device implementations include at least one linear resonant actuator, they: [7.10/H]* SHOULD move the haptic actuator in the X-axis of portrait orientation. If Handheld device implementations have a haptic actuator which is X-axis Linear resonant actuator (LRA), they: [7.10/H-SR]* Are STRONGLY RECOMMENDED to have the resonant frequency of the X-axis LRA be under 200 Hz. If handheld device implementations follow haptic constants mapping, they: [7.10/H-SR]* Are STRONGLY RECOMMENDED to perform a quality assessment for haptic constants. 2.2.2. Multimedia Handheld device implementations MUST support the following audio encoding and decoding formats and make them available to third-party applications: [5.1/H-0-1] AMR-NB [5.1/H-0-2] AMR-WB [5.1/H-0-3] MPEG-4 AAC Profile (AAC LC) [5.1/H-0-4] MPEG-4 HE AAC Profile (AAC+) [5.1/H-0-5] AAC ELD (enhanced low delay AAC) Handheld device implementations MUST support the following video encoding formats and make them available to third-party applications: [5.2/H-0-1] H.264 AVC [5.2/H-0-2] VP8 Handheld device implementations MUST support the following video decoding formats and make them available to third-party applications: [5.3/H-0-1] H.264 AVC [5.3/H-0-2] H.265 HEVC [5.3/H-0-3] MPEG-4 SP [5.3/H-0-4] VP8 [5.3/H-0-5] VP9 2.2.3. Software Handheld device implementations: [3.2.3.1/H-0-1] MUST have an application that handles the ACTION_GET_CONTENT, ACTION_OPEN_DOCUMENT, ACTION_OPEN_DOCUMENT_TREE, and ACTION_CREATE_DOCUMENT intents as described in the SDK documents, and provide the user affordance to access the document provider data by using DocumentsProvider API. [3.2.3.1/H-0-2]* MUST preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here. [3.2.3.1/H-SR] Are STRONGLY RECOMMENDED to preload an email application which can handle ACTION_SENDTO or ACTION_SEND or ACTION_SEND_MULTIPLE intents to send an email. [3.4.1/H-0-1] MUST provide a complete implementation of the android.webkit.Webview API. [3.4.2/H-0-1] MUST include a standalone Browser application for general user web browsing. [3.8.1/H-SR] Are STRONGLY RECOMMENDED to implement a default launcher that supports in-app pinning of shortcuts, widgets and widgetFeatures. [3.8.1/H-SR] Are STRONGLY RECOMMENDED to implement a default launcher that provides quick access to the additional shortcuts provided by third-party apps through the ShortcutManager API. [3.8.1/H-SR] Are STRONGLY RECOMMENDED to include a default launcher app that shows badges for the app icons. [3.8.2/H-SR] Are STRONGLY RECOMMENDED to support third-party app widgets. [3.8.3/H-0-1] MUST allow third-party apps to notify users of notable events through the Notification and NotificationManager API classes. [3.8.3/H-0-2] MUST support rich notifications. [3.8.3/H-0-3] MUST support heads-up notifications. [3.8.3/H-0-4] MUST include a notification shade, providing the user the ability to directly control (e.g. reply, snooze, dismiss, block) the notifications through user affordance such as action buttons or the control panel as implemented in the AOSP. [3.8.3/H-0-5] MUST display the choices provided through RemoteInput.Builder setChoices() in the notification shade. [3.8.3/H-SR] Are STRONGLY RECOMMENDED to display the first choice provided through RemoteInput.Builder setChoices() in the notification shade without additional user interaction. [3.8.3/H-SR] Are STRONGLY RECOMMENDED to display all the choices provided through RemoteInput.Builder setChoices() in the notification shade when the user expands all notifications in the notification shade. [3.8.3.1/H-SR] Are STRONGLY RECOMMENDED to display actions for which Notification.Action.Builder.setContextual is set as true in-line with the replies displayed by Notification.Remoteinput.Builder.setChoices. [3.8.4/H-SR] Are STRONGLY RECOMMENDED to implement an assistant on the device to handle the Assist action. If Handheld device implementations support Assist action, they: [3.8.4/H-SR] Are STRONGLY RECOMMENDED to use long press on HOME key as the designated interaction to launch the assist app as described in section 7.2.3. MUST launch the user-selected assist app, in other words the app that implements VoiceInteractionService , or an activity handling the ACTION_ASSIST intent. If Handheld device implementations support conversation notifications and group them into a separate section from alerting and silent non-conversation notifications, they: [3.8.4/H-1-1]* MUST display conversation notifications ahead of non conversation notifications with the exception of ongoing foreground service notifications and importance:high notifications. If Android Handheld device implementations support a lock screen, they: [3.8.10/H-1-1] MUST display the Lock screen Notifications including the Media Notification Template. If Handheld device implementations support a secure lock screen, they: [3.9/H-1-1] MUST implement the full range of device administration policies defined in the Android SDK documentation. [3.9/H-1-2] MUST declare the support of managed profiles via the android.software.managed_users feature flag, except when the device is configured so that it would report itself as a low RAM device or so that it allocates internal (non-removable) storage as shared storage. If Handheld device implementations include support for ControlsProviderService and Control APIs and allow third-party applications to publish device controls, then they: [3.8.16/H-1-1] MUST declare the feature flag android.software.controls and set it to true. [3.8.16/H-1-2] MUST provide a user affordance with the ability to add, edit, select, and operate the user’s favorite device controls from the controls registered by the third-party applications through the ControlsProviderService and the Control APIs. [3.8.16/H-1-3] MUST provide access to this user affordance within three interactions from a default Launcher. [3.8.16/H-1-4] MUST accurately render in this user affordance the name and icon of each third-party app that provides controls via the ControlsProviderService API as well as any specified fields provided by the Control APIs. Conversely, If Handheld device implementations do not implement such controls, they: [3.8.16/H-2-1] MUST report null for the ControlsProviderService and the Control APIs. [3.8.16/H-2-2] MUST declare the feature flag android.software.controls and set it to false. Handheld device implementations: [3.10/H-0-1] MUST support third-party accessibility services. [3.10/H-SR] Are STRONGLY RECOMMENDED to preload accessibility services on the device comparable with or exceeding functionality of the Switch Access and TalkBack (for languages supported by the preinstalled Text-to-speech engine) accessibility services as provided in the talkback open source project. [3.11/H-0-1] MUST support installation of third-party TTS engines. [3.11/H-SR] Are STRONGLY RECOMMENDED to include a TTS engine supporting the languages available on the device. [3.13/H-SR] Are STRONGLY RECOMMENDED to include a Quick Settings UI component. If Android handheld device implementations declare FEATURE_BLUETOOTH or FEATURE_WIFI support, they: [3.16/H-1-1] MUST support the companion device pairing feature. If the navigation function is provided as an on-screen, gesture-based action: [7.2.3/H] The gesture recognition zone for the Home function SHOULD be no higher than 32 dp in height from the bottom of the screen. If Handheld device implementations provide a navigation function as a gesture from anywhere on the left and right edges of the screen: [7.2.3/H-0-1] The navigation function's gesture area MUST be less than 40 dp in width on each side. The gesture area SHOULD be 24 dp in width by default. 2.2.4. Performance and Power [8.1/H-0-1] Consistent frame latency. Inconsistent frame latency or a delay to render frames MUST NOT happen more often than 5 frames in a second, and SHOULD be below 1 frames in a second. [8.1/H-0-2] User interface latency. Device implementations MUST ensure low latency user experience by scrolling a list of 10K list entries as defined by the Android Compatibility Test Suite (CTS) in less than 36 secs. [8.1/H-0-3] Task switching. When multiple applications have been launched, re-launching an already-running application after it has been launched MUST take less than 1 second. Handheld device implementations: [8.2/H-0-1] MUST ensure a sequential write performance of at least 5 MB/s. [8.2/H-0-2] MUST ensure a random write performance of at least 0.5 MB/s. [8.2/H-0-3] MUST ensure a sequential read performance of at least 15 MB/s. [8.2/H-0-4] MUST ensure a random read performance of at least 3.5 MB/s. If Handheld device implementations include features to improve device power management that are included in AOSP or extend the features that are included in AOSP, they: [8.3/H-1-1] MUST provide user affordance to enable and disable the battery saver feature. [8.3/H-1-2] MUST provide user affordance to display all apps that are exempted from App Standby and Doze power-saving modes. Handheld device implementations: [8.4/H-0-1] MUST provide a per-component power profile that defines the current consumption value for each hardware component and the approximate battery drain caused by the components over time as documented in the Android Open Source Project site. [8.4/H-0-2] MUST report all power consumption values in milliampere hours (mAh). [8.4/H-0-3] MUST report CPU power consumption per each process's UID. The Android Open Source Project meets the requirement through the uid_cputime kernel module implementation. [8.4/H-0-4] MUST make this power usage available via the adb shell dumpsys batterystats shell command to the app developer. [8.4/H] SHOULD be attributed to the hardware component itself if unable to attribute hardware component power usage to an application. If Handheld device implementations include a screen or video output, they: [8.4/H-1-1] MUST honor the android.intent.action.POWER_USAGE_SUMMARY intent and display a settings menu that shows this power usage. 2.2.5. Security Model Handheld device implementations: [9.1/H-0-1] MUST allow third-party apps to access the usage statistics via the android.permission.PACKAGE_USAGE_STATS permission and provide a user-accessible mechanism to grant or revoke access to such apps in response to the android.settings.ACTION_USAGE_ACCESS_SETTINGS intent. Handheld device implementations (* Not applicable for Tablet): [9.11/H-0-2]* MUST back up the keystore implementation with an isolated execution environment. [9.11/H-0-3]* MUST have implementations of RSA, AES, ECDSA, and HMAC cryptographic algorithms and MD5, SHA1, and SHA-2 family hash functions to properly support the Android Keystore system's supported algorithms in an area that is securely isolated from the code running on the kernel and above. Secure isolation MUST block all potential mechanisms by which kernel or userspace code might access the internal state of the isolated environment, including DMA. The upstream Android Open Source Project (AOSP) meets this requirement by using the Trusty implementation, but another ARM TrustZone-based solution or a third-party reviewed secure implementation of a proper hypervisor-based isolation are alternative options. [9.11/H-0-4]* MUST perform the lock screen authentication in the isolated execution environment and only when successful, allow the authentication-bound keys to be used. Lock screen credentials MUST be stored in a way that allows only the isolated execution environment to perform lock screen authentication. The upstream Android Open Source Project provides the Gatekeeper Hardware Abstraction Layer (HAL) and Trusty, which can be used to satisfy this requirement. [9.11/H-0-5]* MUST support key attestation where the attestation signing key is protected by secure hardware and signing is performed in secure hardware. The attestation signing keys MUST be shared across large enough number of devices to prevent the keys from being used as device identifiers. One way of meeting this requirement is to share the same attestation key unless at least 100,000 units of a given SKU are produced. If more than 100,000 units of an SKU are produced, a different key MAY be used for each 100,000 units. Note that if a device implementation is already launched on an earlier Android version, such a device is exempted from the requirement to have a keystore backed by an isolated execution environment and support the key attestation, unless it declares the android.hardware.fingerprint feature which requires a keystore backed by an isolated execution environment. When Handheld device implementations support a secure lock screen, they: [9.11/H-1-1] MUST allow the user to choose the shortest sleep timeout, that is a transition time from the unlocked to the locked state, as 15 seconds or less. [9.11/H-1-2] MUST provide user affordance to hide notifications and disable all forms of authentication except for the primary authentication described in 9.11.1 Secure Lock Screen. The AOSP meets the requirement as lockdown mode. If Handheld device implementations include multiple users and do not declare the android.hardware.telephony feature flag, they: [9.5/H-2-1] MUST support restricted profiles, a feature that allows device owners to manage additional users and their capabilities on the device. With restricted profiles, device owners can quickly set up separate environments for additional users to work in, with the ability to manage finer-grained restrictions in the apps that are available in those environments. If Handheld device implementations include multiple users and declare the android.hardware.telephony feature flag, they: [9.5/H-3-1] MUST NOT support restricted profiles but MUST align with the AOSP implementation of controls to enable /disable other users from accessing the voice calls and SMS. 2.2.6. Developer Tools and Options Compatibility Handheld device implementations (* Not applicable for Tablet): [6.1/H-0-1]* MUST support the shell command cmd testharness. Handheld device implementations (* Not applicable for Tablet): Perfetto [6.1/H-0-2]* MUST expose a /system/bin/perfetto binary to the shell user which cmdline complies with the perfetto documentation. [6.1/H-0-3]* The perfetto binary MUST accept as input a protobuf config that complies with the schema defined in the perfetto documentation. [6.1/H-0-4]* The perfetto binary MUST write as output a protobuf trace that complies with the schema defined in the perfetto documentation. [6.1/H-0-5]* MUST provide, through the perfetto binary, at least the data sources described in the perfetto documentation. [6.1/H-0-6]* The perfetto traced daemon MUST be enabled by default (system property persist.traced.enable). 2.3. Television Requirements An Android Television device refers to an Android device implementation that is an entertainment interface for consuming digital media, movies, games, apps, and/or live TV for users sitting about ten feet away (a “lean back” or “10-foot user interface”). Android device implementations are classified as a Television if they meet all the following criteria: Have provided a mechanism to remotely control the rendered user interface on the display that might sit ten feet away from the user. Have an embedded screen display with the diagonal length larger than 24 inches OR include a video output port, such as VGA, HDMI, DisplayPort, or a wireless port for display. The additional requirements in the rest of this section are specific to Android Television device implementations. 2.3.1. Hardware Television device implementations: [7.2.2/T-0-1] MUST support D-pad. [7.2.3/T-0-1] MUST provide the Home and Back functions. [7.2.3/T-0-2] MUST send both the normal and long press event of the Back function (KEYCODE_BACK) to the foreground application. [7.2.6.1/T-0-1] MUST include support for game controllers and declare the android.hardware.gamepad feature flag. [7.2.7/T] SHOULD provide a remote control from which users can access non-touch navigation and core navigation keys inputs. If Television device implementations include a 3-axis gyroscope, they: [7.3.4/T-1-1] MUST be able to report events up to a frequency of at least 100 Hz. [7.3.4/T-1-2] MUST be capable of measuring orientation changes up to 1000 degrees per second. Television device implementations: [7.4.3/T-0-1] MUST support Bluetooth and Bluetooth LE. [7.6.1/T-0-1] MUST have at least 4 GB of non-volatile storage available for application private data (a.k.a. ""/data"" partition). If Television device implementations include a USB port that supports host mode, they: [7.5.3/T-1-1] MUST include support for an external camera that connects through this USB port but is not necessarily always connected. If TV device implementations are 32-bit: [7.6.1/T-1-1] The memory available to the kernel and userspace MUST be at least 896MB if any of the following densities are used: 400dpi or higher on small/normal screens xhdpi or higher on large screens tvdpi or higher on extra large screens If TV device implementations are 64-bit: [7.6.1/T-2-1] The memory available to the kernel and userspace MUST be at least 1280MB if any of the following densities are used: 400dpi or higher on small/normal screens xhdpi or higher on large screens tvdpi or higher on extra large screens Note that the ""memory available to the kernel and userspace"" above refers to the memory space provided in addition to any memory already dedicated to hardware components such as radio, video, and so on that are not under the kernel’s control on device implementations. Television device implementations: [7.8.1/T] SHOULD include a microphone. [7.8.2/T-0-1] MUST have an audio output and declare android.hardware.audio.output. 2.3.2. Multimedia Television device implementations MUST support the following audio encoding and decoding formats and make them available to third-party applications: [5.1/T-0-1] MPEG-4 AAC Profile (AAC LC) [5.1/T-0-2] MPEG-4 HE AAC Profile (AAC+) [5.1/T-0-3] AAC ELD (enhanced low delay AAC) Television device implementations MUST support the following video encoding formats and make them available to third-party applications: [5.2/T-0-1] H.264 [5.2/T-0-2] VP8 Television device implementations: [5.2.2/T-SR] Are STRONGLY RECOMMENDED to support H.264 encoding of 720p and 1080p resolution videos at 30 frames per second. Television device implementations MUST support the following video decoding formats and make them available to third-party applications: [5.3.3/T-0-1] MPEG-4 SP [5.3.4/T-0-2] H.264 AVC [5.3.5/T-0-3] H.265 HEVC [5.3.6/T-0-4] VP8 [5.3.7/T-0-5] VP9 [5.3.1/T-0-6] MPEG-2 Television device implementations MUST support MPEG-2 decoding, as detailed in Section 5.3.1, at standard video frame rates and resolutions up to and including: [5.3.1/T-1-1] HD 1080p at 59.94 frames per second with Main Profile High Level. [5.3.1/T-1-2] HD 1080i at 59.94 frames per second with Main Profile High Level. They MUST deinterlace interlaced MPEG-2 video and make it available to third-party applications. Television device implementations MUST support H.264 decoding, as detailed in Section 5.3.4, at standard video frame rates and resolutions up to and including: [5.3.4/T-1-1] HD 1080p at 60 frames per second with Baseline Profile [5.3.4/T-1-2] HD 1080p at 60 frames per second with Main Profile [5.3.4/T-1-3] HD 1080p at 60 frames per second with High Profile Level 4.2 Television device implementations with H.265 hardware decoders MUST support H.265 decoding, as detailed in Section 5.3.5, at standard video frame rates and resolutions up to and including: [5.3.5/T-1-1] HD 1080p at 60 frames per second with Main Profile Level 4.1 If Television device implementations with H.265 hardware decoders support H.265 decoding and the UHD decoding profile, they: [5.3.5/T-2-1] MUST support the UHD decoding profile at 60 frames per second with Main10 Level 5 Main Tier profile Television device implementations MUST support VP8 decoding, as detailed in Section 5.3.6, at standard video frame rates and resolutions up to and including: [5.3.6/T-1-1] HD 1080p at 60 frames per second decoding profile Television device implementations with VP9 hardware decoders MUST support VP9 decoding, as detailed in Section 5.3.7, at standard video frame rates and resolutions up to and including: [5.3.7/T-1-1] HD 1080p at 60 frames per second with profile 0 (8 bit color depth) If Television device implementations with VP9 hardware decoders support VP9 decoding and the UHD decoding profile, they: [5.3.7/T-2-1] MUST support the UHD decoding profile at 60 frames per second with profile 0 (8 bit color depth). [5.3.7/T-2-1] Are STRONGLY RECOMMENDED to support the UHD decoding profile at 60 frames per second with profile 2 (10 bit color depth). Television device implementations: [5.5/T-0-1] MUST include support for system Master Volume and digital audio output volume attenuation on supported outputs, except for compressed audio passthrough output (where no audio decoding is done on the device). If Television device implementations do not have a built in display, but instead support an external display connected via HDMI, they: [5.8/T-0-1] MUST set the HDMI output mode to select the maximum resolution that can be supported with either a 50Hz or 60Hz refresh rate. [5.8/T-SR] Are STRONGLY RECOMMENDED to provide a user configurable HDMI refresh rate selector. [5.8] SHOULD set the HDMI output mode refresh rate to either 50Hz or 60Hz, depending on the video refresh rate for the region the device is sold in. If Television device implementations do not have a built in display, but instead support an external display connected via HDMI, they: [5.8/T-1-1] MUST support HDCP 2.2. If Television device implementations do not support UHD decoding, but instead support an external display connected via HDMI, they: [5.8/T-2-1] MUST support HDCP 1.4 2.3.3. Software Television device implementations: [3/T-0-1] MUST declare the features android.software.leanback and android.hardware.type.television. [3.2.3.1/T-0-1] MUST preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here. [3.4.1/T-0-1] MUST provide a complete implementation of the android.webkit.Webview API. If Android Television device implementations support a lock screen,they: [3.8.10/T-1-1] MUST display the Lock screen Notifications including the Media Notification Template. Television device implementations: [3.8.14/T-SR] Are STRONGLY RECOMMENDED to support picture-in-picture (PIP) mode multi-window. [3.10/T-0-1] MUST support third-party accessibility services. [3.10/T-SR] Are STRONGLY RECOMMENDED to preload accessibility services on the device comparable with or exceeding functionality of the Switch Access and TalkBack (for languages supported by the preinstalled Text-to-speech engine) accessibility services as provided in the talkback open source project. If Television device implementations report the feature android.hardware.audio.output, they: [3.11/T-SR] Are STRONGLY RECOMMENDED to include a TTS engine supporting the languages available on the device. [3.11/T-1-1] MUST support installation of third-party TTS engines. Television device implementations: [3.12/T-0-1] MUST support TV Input Framework. 2.3.4. Performance and Power [8.1/T-0-1] Consistent frame latency. Inconsistent frame latency or a delay to render frames MUST NOT happen more often than 5 frames in a second, and SHOULD be below 1 frames in a second. [8.2/T-0-1] MUST ensure a sequential write performance of at least 5MB/s. [8.2/T-0-2] MUST ensure a random write performance of at least 0.5MB/s. [8.2/T-0-3] MUST ensure a sequential read performance of at least 15MB/s. [8.2/T-0-4] MUST ensure a random read performance of at least 3.5MB/s. If Television device implementations include features to improve device power management that are included in AOSP or extend the features that are included in AOSP, they: [8.3/T-1-1] MUST provide user affordance to enable and disable the battery saver feature. If Television device implementations do not have a battery they: [8.3/T-1-2] MUST register the device as a batteryless device as described in Supporting Batteryless Devices. If Television device implementations have a battery they: [8.3/T-1-3] MUST provide user affordance to display all apps that are exempted from App Standby and Doze power-saving modes. Television device implementations: [8.4/T-0-1] MUST provide a per-component power profile that defines the current consumption value for each hardware component and the approximate battery drain caused by the components over time as documented in the Android Open Source Project site. [8.4/T-0-2] MUST report all power consumption values in milliampere hours (mAh). [8.4/T-0-3] MUST report CPU power consumption per each process's UID. The Android Open Source Project meets the requirement through the uid_cputime kernel module implementation. [8.4/T] SHOULD be attributed to the hardware component itself if unable to attribute hardware component power usage to an application. [8.4/T-0-4] MUST make this power usage available via the adb shell dumpsys batterystats shell command to the app developer. 2.3.5. Security Model Television device implementations: [9.11/T-0-1] MUST back up the keystore implementation with an isolated execution environment. [9.11/T-0-2] MUST have implementations of RSA, AES, ECDSA and HMAC cryptographic algorithms and MD5, SHA1, and SHA-2 family hash functions to properly support the Android Keystore system's supported algorithms in an area that is securely isolated from the code running on the kernel and above. Secure isolation MUST block all potential mechanisms by which kernel or userspace code might access the internal state of the isolated environment, including DMA. The upstream Android Open Source Project (AOSP) meets this requirement by using the Trusty implementation, but another ARM TrustZone-based solution or a third-party reviewed secure implementation of a proper hypervisor-based isolation are alternative options. [9.11/T-0-3] MUST perform the lock screen authentication in the isolated execution environment and only when successful, allow the authentication-bound keys to be used. Lock screen credentials MUST be stored in a way that allows only the isolated execution environment to perform lock screen authentication. The upstream Android Open Source Project provides the Gatekeeper Hardware Abstraction Layer (HAL) and Trusty, which can be used to satisfy this requirement. [9.11/T-0-4] MUST support key attestation where the attestation signing key is protected by secure hardware and signing is performed in secure hardware. The attestation signing keys MUST be shared across large enough number of devices to prevent the keys from being used as device identifiers. One way of meeting this requirement is to share the same attestation key unless at least 100,000 units of a given SKU are produced. If more than 100,000 units of an SKU are produced, a different key MAY be used for each 100,000 units. Note that if a device implementation is already launched on an earlier Android version, such a device is exempted from the requirement to have a keystore backed by an isolated execution environment and support the key attestation, unless it declares the android.hardware.fingerprint feature which requires a keystore backed by an isolated execution environment. If Television device implementations support a secure lock screen, they: [9.11/T-1-1] MUST allow the user to choose the Sleep timeout for transition from the unlocked to the locked state, with a minimum allowable timeout up to 15 seconds or less. If Television device implementations include multiple users and do not declare the android.hardware.telephony feature flag, they: [9.5/T-2-1] MUST support restricted profiles, a feature that allows device owners to manage additional users and their capabilities on the device. With restricted profiles, device owners can quickly set up separate environments for additional users to work in, with the ability to manage finer-grained restrictions in the apps that are available in those environments. If Television device implementations include multiple users and declare the android.hardware.telephony feature flag, they: [9.5/T-3-1] MUST NOT support restricted profiles but MUST align with the AOSP implementation of controls to enable /disable other users from accessing the voice calls and SMS. 2.3.6. Developer Tools and Options Compatibility Television device implementations: Perfetto [6.1/T-0-1] MUST expose a /system/bin/perfetto binary to the shell user which cmdline complies with the perfetto documentation. [6.1/T-0-2] The perfetto binary MUST accept as input a protobuf config that complies with the schema defined in the perfetto documentation. [6.1/T-0-3] The perfetto binary MUST write as output a protobuf trace that complies with the schema defined in the perfetto documentation. [6.1/T-0-4] MUST provide, through the perfetto binary, at least the data sources described in the perfetto documentation. 2.4. Watch Requirements An Android Watch device refers to an Android device implementation intended to be worn on the body, perhaps on the wrist. Android device implementations are classified as a Watch if they meet all the following criteria: Have a screen with the physical diagonal length in the range from 1.1 to 2.5 inches. Have a mechanism provided to be worn on the body. The additional requirements in the rest of this section are specific to Android Watch device implementations. 2.4.1. Hardware Watch device implementations: [7.1.1.1/W-0-1] MUST have a screen with the physical diagonal size in the range from 1.1 to 2.5 inches. [7.2.3/W-0-1] MUST have the Home function available to the user, and the Back function except for when it is in UI_MODE_TYPE_WATCH. [7.2.4/W-0-1] MUST support touchscreen input. [7.3.1/W-SR] Are STRONGLY RECOMMENDED to include a 3-axis accelerometer. If Watch device implementations include a GPS/GNSS receiver and report the capability to applications through the android.hardware.location.gps feature flag, they: [7.3.3/W-1-1] MUST report GNSS measurements, as soon as they are found, even if a location calculated from GPS/GNSS is not yet reported. [7.3.3/W-1-2] MUST report GNSS pseudoranges and pseudorange rates, that, in open-sky conditions after determining the location, while stationary or moving with less than 0.2 meter per second squared of acceleration, are sufficient to calculate position within 20 meters, and speed within 0.2 meters per second, at least 95% of the time. If Watch device implementations include a 3-axis gyroscope, they: [7.3.4/W-2-1] MUST be capable of measuring orientation changes up to 1000 degrees per second. Watch device implementations: [7.4.3/W-0-1] MUST support Bluetooth. [7.6.1/W-0-1] MUST have at least 1 GB of non-volatile storage available for application private data (a.k.a. ""/data"" partition). [7.6.1/W-0-2] MUST have at least 416 MB memory available to the kernel and userspace. [7.8.1/W-0-1] MUST include a microphone. [7.8.2/W] MAY have audio output. 2.4.2. Multimedia No additional requirements. 2.4.3. Software Watch device implementations: [3/W-0-1] MUST declare the feature android.hardware.type.watch. [3/W-0-2] MUST support uiMode = UI_MODE_TYPE_WATCH. [3.2.3.1/W-0-1] MUST preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here. Watch device implementations: [3.8.4/W-SR] Are STRONGLY RECOMMENDED to implement an assistant on the device to handle the Assist action. Watch device implementations that declare the android.hardware.audio.output feature flag: [3.10/W-1-1] MUST support third-party accessibility services. [3.10/W-SR] Are STRONGLY RECOMMENDED to preload accessibility services on the device comparable with or exceeding functionality of the Switch Access and TalkBack (for languages supported by the preinstalled Text-to-speech engine) accessibility services as provided in the talkback open source project. If Watch device implementations report the feature android.hardware.audio.output, they: [3.11/W-SR] Are STRONGLY RECOMMENDED to include a TTS engine supporting the languages available on the device. [3.11/W-0-1] MUST support installation of third-party TTS engines. 2.4.4. Performance and Power If Watch device implementations include features to improve device power management that are included in AOSP or extend the features that are included in AOSP, they: [8.3/W-SR] Are STRONGLY RECOMMENDED to provide user affordance to display all apps that are exempted from App Standby and Doze power-saving modes. [8.3/W-SR] Are STRONGLY RECOMMENDED to provide user affordance to enable and disable the battery saver feature. Watch device implementations: [8.4/W-0-1] MUST provide a per-component power profile that defines the current consumption value for each hardware component and the approximate battery drain caused by the components over time as documented in the Android Open Source Project site. [8.4/W-0-2] MUST report all power consumption values in milliampere hours (mAh). [8.4/W-0-3] MUST report CPU power consumption per each process's UID. The Android Open Source Project meets the requirement through the uid_cputime kernel module implementation. [8.4/W-0-4] MUST make this power usage available via the adb shell dumpsys batterystats shell command to the app developer. [8.4/W] SHOULD be attributed to the hardware component itself if unable to attribute hardware component power usage to an application. 2.4.5. Security Model If Watch device implementations include multiple users and do not declare the android.hardware.telephony feature flag, they: [9.5/W-1-1] MUST support restricted profiles, a feature that allows device owners to manage additional users and their capabilities on the device. With restricted profiles, device owners can quickly set up separate environments for additional users to work in, with the ability to manage finer-grained restrictions in the apps that are available in those environments. If Watch device implementations include multiple users and declare the android.hardware.telephony feature flag, they: [9.5/W-2-1] MUST NOT support restricted profiles but MUST align with the AOSP implementation of controls to enable /disable other users from accessing the voice calls and SMS. 2.5. Automotive Requirements Android Automotive implementation refers to a vehicle head unit running Android as an operating system for part or all of the system and/or infotainment functionality. Android device implementations are classified as an Automotive if they declare the feature android.hardware.type.automotive or meet all the following criteria. Are embedded as part of, or pluggable to, an automotive vehicle. Are using a screen in the driver's seat row as the primary display. The additional requirements in the rest of this section are specific to Android Automotive device implementations. 2.5.1. Hardware Automotive device implementations: [7.1.1.1/A-0-1] MUST have a screen at least 6 inches in physical diagonal size. [7.1.1.1/A-0-2] MUST have a screen size layout of at least 750 dp x 480 dp. [7.2.3/A-0-1] MUST provide the Home function and MAY provide Back and Recent functions. [7.2.3/A-0-2] MUST send both the normal and long press event of the Back function (KEYCODE_BACK) to the foreground application. [7.3/A-0-1] MUST implement and report GEAR_SELECTION, NIGHT_MODE, PERF_VEHICLE_SPEED and PARKING_BRAKE_ON. [7.3/A-0-2] The value of the NIGHT_MODE flag MUST be consistent with dashboard day/night mode and SHOULD be based on ambient light sensor input. The underlying ambient light sensor MAY be the same as Photometer. [7.3/A-0-3] MUST provide sensor additional info field TYPE_SENSOR_PLACEMENT as part of SensorAdditionalInfo for every sensor provided. [7.3/A-0-1] MAY dead reckon Location by fusing GPS/GNSS with additional sensors. If Location is dead reckoned, it is STRONGLY RECOMMENDED to implement and report the corresponding Sensor types and/or Vehicle Property IDs used. [7.3/A-0-2] The Location requested via LocationManager#requestLocationUpdates() MUST NOT be map matched. If Automotive device implementations include a 3-axis accelerometer, they: [7.3.1/A-1-1] MUST be able to report events up to a frequency of at least 100 Hz. [7.3.1/A-1-2] MUST comply with the Android car sensor coordinate system. If Automotive device implementations include a 3-axis gyroscope, they: [7.3.4/A-2-1] MUST be able to report events up to a frequency of at least 100 Hz. [7.3.4/A-2-2] MUST also implement the TYPE_GYROSCOPE_UNCALIBRATED sensor. [7.3.4/A-2-3] MUST be capable of measuring orientation changes up to 250 degrees per second. [7.3.4/A-SR] Are STRONGLY RECOMMENDED to configure the gyroscope’s measurement range to +/-250dps in order to maximize the resolution possible If Automotive device implementations include a GPS/GNSS receiver, but do not include cellular network-based data connectivity, they: [7.3.3/A-3-1] MUST determine location the very first time the GPS/GNSS receiver is turned on or after 4+ days within 60 seconds. [7.3.3/A-3-2] MUST meet the time-to-first-fix criteria as described in 7.3.3/C-1-2 and 7.3.3/C-1-6 for all other location requests (i.e requests which are not the first time ever or after 4+ days). The requirement 7.3.3/C-1-2 is typically met in vehicles without cellular network-based data connectivity, by using GNSS orbit predictions calculated on the receiver, or using the last known vehicle location along with the ability to dead reckon for at least 60 seconds with a position accuracy satisfying 7.3.3/C-1-3, or a combination of both. Automotive device implementations: [7.4.3/A-0-1] MUST support Bluetooth and SHOULD support Bluetooth LE. [7.4.3/A-0-2] Android Automotive implementations MUST support the following Bluetooth profiles: Phone calling over Hands-Free Profile (HFP). Media playback over Audio Distribution Profile (A2DP). Media playback control over Remote Control Profile (AVRCP). Contact sharing using the Phone Book Access Profile (PBAP). [7.4.3/A-SR] Are STRONGLY RECOMMENDED to support Message Access Profile (MAP). [7.4.5/A] SHOULD include support for cellular network-based data connectivity. [7.4.5/A] MAY use the System API NetworkCapabilities#NET_CAPABILITY_OEM_PAID constant for networks that should be available to system apps. An exterior view camera is a camera that images scenes outside of the device implementation, like a dashcam. Automotive device implementations: SHOULD include one or more exterior view cameras. If Automotive device implementations include an exterior view camera, for such a camera, they: [7.5/A-1-1] MUST NOT have exterior view cameras accessible via the Android Camera APIs, unless they comply with camera core requirements. [7.5/A-SR] Are STRONGLY RECOMMENDED not to rotate or horizontally mirror the camera preview. [7.5.5/A-SR] Are STRONGLY RECOMMENDED to be oriented so that the long dimension of the camera aligns with the horizon. [7.5/A-SR] Are STRONGLY RECOMMENDED to have a resolution of at least 1.3 megapixels. SHOULD have either fixed-focus or EDOF (extended depth of field) hardware. SHOULD support Android Synchronization Framework. MAY have either hardware auto-focus or software auto-focus implemented in the camera driver. Automotive device implementations: [7.6.1/A-0-1] MUST have at least 4 GB of non-volatile storage available for application private data (a.k.a. ""/data"" partition). [7.6.1/A] SHOULD format the data partition to offer improved performance and longevity on flash storage, for example using f2fs file-system. If Automotive device implementations provide shared external storage via a portion of the internal non-removable storage, they: [7.6.1/A-SR] Are STRONGLY RECOMMENDED to reduce I/O overhead on operations performed on the external storage, for example by using SDCardFS. If Automotive device implementations are 32-bit: [7.6.1/A-1-1] The memory available to the kernel and userspace MUST be at least 512MB if any of the following densities are used: 280dpi or lower on small/normal screens ldpi or lower on extra large screens mdpi or lower on large screens [7.6.1/A-1-2] The memory available to the kernel and userspace MUST be at least 608MB if any of the following densities are used: xhdpi or higher on small/normal screens hdpi or higher on large screens mdpi or higher on extra large screens [7.6.1/A-1-3] The memory available to the kernel and userspace MUST be at least 896MB if any of the following densities are used: 400dpi or higher on small/normal screens xhdpi or higher on large screens tvdpi or higher on extra large screens [7.6.1/A-1-4] The memory available to the kernel and userspace MUST be at least 1344MB if any of the following densities are used: 560dpi or higher on small/normal screens 400dpi or higher on large screens xhdpi or higher on extra large screens If Automotive device implementations are 64-bit: [7.6.1/A-2-1] The memory available to the kernel and userspace MUST be at least 816MB if any of the following densities are used: 280dpi or lower on small/normal screens ldpi or lower on extra large screens mdpi or lower on large screens [7.6.1/A-2-2] The memory available to the kernel and userspace MUST be at least 944MB if any of the following densities are used: xhdpi or higher on small/normal screens hdpi or higher on large screens mdpi or higher on extra large screens [7.6.1/A-2-3] The memory available to the kernel and userspace MUST be at least 1280MB if any of the following densities are used: 400dpi or higher on small/normal screens xhdpi or higher on large screens tvdpi or higher on extra large screens [7.6.1/A-2-4] The memory available to the kernel and userspace MUST be at least 1824MB if any of the following densities are used: 560dpi or higher on small/normal screens 400dpi or higher on large screens xhdpi or higher on extra large screens Note that the ""memory available to the kernel and userspace"" above refers to the memory space provided in addition to any memory already dedicated to hardware components such as radio, video, and so on that are not under the kernel’s control on device implementations. Automotive device implementations: [7.7.1/A] SHOULD include a USB port supporting peripheral mode. Automotive device implementations: [7.8.1/A-0-1] MUST include a microphone. Automotive device implementations: [7.8.2/A-0-1] MUST have an audio output and declare android.hardware.audio.output. 2.5.2. Multimedia Automotive device implementations MUST support the following audio encoding and decoding formats and make them available to third-party applications: [5.1/A-0-1] MPEG-4 AAC Profile (AAC LC) [5.1/A-0-2] MPEG-4 HE AAC Profile (AAC+) [5.1/A-0-3] AAC ELD (enhanced low delay AAC) Automotive device implementations MUST support the following video encoding formats and make them available to third-party applications: [5.2/A-0-1] H.264 AVC [5.2/A-0-2] VP8 Automotive device implementations MUST support the following video decoding formats and make them available to third-party applications: [5.3/A-0-1] H.264 AVC [5.3/A-0-2] MPEG-4 SP [5.3/A-0-3] VP8 [5.3/A-0-4] VP9 Automotive device implementations are STRONGLY RECOMMENDED to support the following video decoding: [5.3/A-SR] H.265 HEVC 2.5.3. Software Automotive device implementations: [3/A-0-1] MUST declare the feature android.hardware.type.automotive. [3/A-0-2] MUST support uiMode = UI_MODE_TYPE_CAR. [3/A-0-3] MUST support all public APIs in the android.car.* namespace. If Automotive device implementations provide a proprietary API using android.car.CarPropertyManager with android.car.VehiclePropertyIds, they: [3/A-1-1] MUST NOT attach special privileges to system application's use of these properties, or prevent third-party applications from using these properties. [3/A-1-2] MUST NOT replicate a vehicle property that already exists in the SDK. Automotive device implementations: [3.2.1/A-0-1] MUST support and enforce all permissions constants as documented by the Automotive Permission reference page. [3.2.3.1/A-0-1] MUST preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here. [3.4.1/A-0-1] MUST provide a complete implementation of the android.webkit.Webview API. [3.8.3/A-0-1] MUST display notifications that use the Notification.CarExtender API when requested by third-party applications. [3.8.4/A-SR] Are Strongly Recommended to implement an assistant on the device to handle the Assist action. If Automotive device implementations include a push-to-talk button, they: [3.8.4/A-1-1] MUST use a short press of the push-to-talk button as the designated interaction to launch the user-selected assist app, in other words the app that implements VoiceInteractionService. Automotive device implementations: [3.8.3.1/A-0-1] MUST correctly render resources as described in the Notifications on Automotive OS SDK documentation. [3.8.3.1/A-0-2] MUST display PLAY and MUTE for notification actions in the place of those provided through Notification.Builder.addAction() [3.8.3.1/A] SHOULD restrict the use of rich management tasks such as per-notification-channel controls. MAY use UI affordance per application to reduce controls. Automotive device implementations: [3.14/A-0-1] MUST include a UI framework to support third-party apps using the media APIs as described in section 3.14. [3.14/A-0-2] MUST allow the user to safely interact with Media Applications while driving. [3.14/A-0-3] MUST support the CAR_INTENT_ACTION_MEDIA_TEMPLATE implicit Intent action with the CAR_EXTRA_MEDIA_PACKAGE extra. [3.14/A-0-4] MUST provide an affordance to navigate into a Media Application’s preference activity, but MUST only enable it when Car UX Restrictions are not in effect. [3.14/A-0-5] MUST display error messages set by Media Applications, and MUST support the optional extras ERROR_RESOLUTION_ACTION_LABEL and ERROR_RESOLUTION_ACTION_INTENT. [3.14/A-0-6] MUST support an in-app search affordance for apps that support searching. [3.14/A-0-7] MUST respect CONTENT_STYLE_BROWSABLE_HINT and CONTENT_STYLE_PLAYABLE_HINT definitions when displaying the MediaBrowser hierarchy. If Automotive device implementations include a default launcher app, they: [3.14/A-1-1] MUST include media services and open them with the CAR_INTENT_ACTION_MEDIA_TEMPLATE intent. Automotive device implementations: [3.8/A] MAY restrict the application requests to enter a full screen mode as described in immersive documentation. [3.8/A] MAY keep the status bar and the navigation bar visible at all times. [3.8/A] MAY restrict the application requests to change the colors behind the system UI elements, to ensure those elements are clearly visible at all times. 2.5.4. Performance and Power Automotive device implementations: [8.2/A-0-1] MUST report the number of bytes read and written to non-volatile storage per each process's UID so the stats are available to developers through System API android.car.storagemonitoring.CarStorageMonitoringManager. The Android Open Source Project meets the requirement through the uid_sys_stats kernel module. [8.3/A-1-3] MUST support Garage Mode. [8.3/A] SHOULD be in Garage Mode for at least 15 minutes after every drive unless: The battery is drained. No idle jobs are scheduled. The driver exits Garage Mode. [8.4/A-0-1] MUST provide a per-component power profile that defines the current consumption value for each hardware component and the approximate battery drain caused by the components over time as documented in the Android Open Source Project site. [8.4/A-0-2] MUST report all power consumption values in milliampere hours (mAh). [8.4/A-0-3] MUST report CPU power consumption per each process's UID. The Android Open Source Project meets the requirement through the uid_cputime kernel module implementation. [8.4/A] SHOULD be attributed to the hardware component itself if unable to attribute hardware component power usage to an application. "	"18000000.48"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.1.1.1"	"H-0-1"	""	""	""	""	""	"7.1.1.1/H-0-1"	""">7.1.1.1/H-0-1] MUST have at least one Android-compatible display that meets all requirements described on this document. [7.1.1.3/H-SR] Are STRONGLY RECOMMENDED to provide users an affordance to change the display size (screen density). If Handheld device implementations support software screen rotation, they: [<a href=""#7_1_display_and_graphics"""""	"07010101.720001"	"{'H-0-1', '7.1.1.1', 'RECOMMENDED'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.1.1.1"	"H-1-1"	""	""	""	""	""	"7.1.1.1/H-1-1"	""">7.1.1.1/H-1-1]* MUST make the logical screen that is made available for third party applications be at least 2 inches on the short edge(s) and 2.7 inches on the long edge(s). Devices which launched on an API level earlier than that of this document are exempted from this requirement. If Handheld device implementations do not support software screen rotation, they: [<a href=""#7_1_display_and_graphics"""""	"07010101.720101"	"{'7.1.1.1', 'H-1-1', 'edge(s)'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.1.1.1"	"H-2-1"	""	""	""	""	""	"7.1.1.1/H-2-1"	""">7.1.1.1/H-2-1]* MUST make the logical screen that is made available for third party applications be at least 2.7 inches on the short edge(s). Devices which launched on an API level earlier than that of this document are exempted from this requirement. If Handheld device implementations claim support for high dynamic range displays through Configuration.isScreenHdr() , they: [<a href=""#7_1_display-and-graphics"""""	"07010101.720201"	"{'H-2-1', '7.1.1.1', 'edge(s)', 'Configuration.isScreenHdr', 'isScreenHdr()'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.1.4.5"	"H-1-1"	""	""	""	""	""	"7.1.4.5/H-1-1"	""">7.1.4.5/H-1-1] MUST advertise support for the EGL_EXT_gl_colorspace_bt2020_pq, EGL_EXT_surface_SMPTE2086_metadata, EGL_EXT_surface_CTA861_3_metadata, VK_EXT_swapchain_colorspace, and VK_EXT_hdr_metadata extensions. Handheld device implementations: [<a href=""#7_1_display_and_graphics"""""	"07010405.720101"	"{'7.1.4.5', 'SMPTE2086_', 'H-1-1', 'EGL_EXT_', 'CTA861_3_', 'EXT_'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.1.4.6"	"H-0-1"	""	""	""	""	""	"7.1.4.6/H-0-1"	""">7.1.4.6/H-0-1] MUST report whether the device supports the GPU profiling capability via a system property graphics.gpu.profiler.support. If Handheld device implementations declare support via a system property graphics.gpu.profiler.support, they: [<a href=""#7_1_display_and_graphics"""""	"07010406.720001"	"{'graphics.gpu.profiler.support', '7.1.4.6', 'GPU', 'H-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.1.4.6"	"H-1-1"	""	""	""	""	""	"7.1.4.6/H-1-1"	""">7.1.4.6/H-1-1] MUST report as output a protobuf trace that complies with the schema for GPU counters and GPU renderstages defined in the Perfetto documentation. [<a href=""#7_1_display_and_graphics"""""	"07010406.720101"	"{'GPU', '7.1.4.6', 'H-1-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.1.4.6"	"H-1-2"	""	""	""	""	""	"7.1.4.6/H-1-2"	""">7.1.4.6/H-1-2] MUST report conformant values for the device’s GPU counters following the gpu counter trace packet proto. [<a href=""#7_1_display_and_graphics"""""	"07010406.720102"	"{'GPU', '7.1.4.6', 'H-1-2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.1.4.6"	"H-1-3"	""	""	""	""	""	"7.1.4.6/H-1-3"	""">7.1.4.6/H-1-3] MUST report conformant values for the device’s GPU RenderStages following the render stage trace packet proto. [<a href=""#7_1_display_and_graphics"""""	"07010406.720103"	"{'GPU', '7.1.4.6', 'H-1-3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.1.4.6"	"H-1-4"	""	""	""	""	""	"7.1.4.6/H-1-4"	""">7.1.4.6/H-1-4] MUST report a GPU Frequency tracepoint as specified by the format: power/gpu_frequency. Handheld device implementations: [<a href=""#7_1_display_and_graphics"""""	"07010406.720104"	"{'GPU', '7.1.4.6', 'H-1-4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.1.5"	"H-0-1"	""	""	""	""	""	"7.1.5/H-0-1"	""">7.1.5/H-0-1] MUST include support for legacy application compatibility mode as implemented by the upstream Android open source code. That is, device implementations MUST NOT alter the triggers or thresholds at which compatibility mode is activated, and MUST NOT alter the behavior of the compatibility mode itself. [<a href=""#7_2_input_devices"""""	"07010500.720001"	"{'7.1.5', 'H-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.2.1"	"H-0-1"	""	""	""	""	""	"7.2.1/H-0-1"	""">7.2.1/H-0-1] MUST include support for third-party Input Method Editor (IME) applications. [<a href=""#7_2_input_devices"""""	"07020100.720001"	"{'H-0-1', 'IME', '7.2.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.2.3"	"H-0-3"	""	""	""	""	""	"7.2.3/H-0-3"	""">7.2.3/H-0-3] MUST provide the Home function on all the Android-compatible displays that provide the home screen. [<a href=""#7_2_input_devices"""""	"07020300.720003"	"{'7.2.3', 'H-0-3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.2.3"	"H-0-4"	""	""	""	""	""	"7.2.3/H-0-4"	""">7.2.3/H-0-4] MUST provide the Back function on all the Android-compatible displays and the Recents function on at least one of the Android-compatible displays. [<a href=""#7_2_input_devices"""""	"07020300.720004"	"{'7.2.3', 'H-0-4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.2.3"	"H-0-2"	""	""	""	""	""	"7.2.3/H-0-2"	""">7.2.3/H-0-2] MUST send both the normal and long press event of the Back function (KEYCODE_BACK) to the foreground application. These events MUST NOT be consumed by the system and CAN be triggered by outside of the Android device (e.g. external hardware keyboard connected to the Android device). [<a href=""#7_2_input_devices"""""	"07020300.720002"	"{'H-0-2', 'KEYCODE_BACK', '7.2.3', 'CAN'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.2.4"	"H-0-1"	""	""	""	""	""	"7.2.4/H-0-1"	""">7.2.4/H-0-1] MUST support touchscreen input. [7.2.4/H-SR] Are STRONGLY RECOMMENDED to launch the user-selected assist app, in other words the app that implements VoiceInteractionService, or an activity handling the ACTION_ASSIST on long-press of KEYCODE_MEDIA_PLAY_PAUSE or KEYCODE_HEADSETHOOK if the foreground activity does not handle those long-press events. [7.3.1/H-SR] Are STRONGLY RECOMMENDED to include a 3-axis accelerometer. If Handheld device implementations include a 3-axis accelerometer, they: [<a href=""#7_3_sensors"""""	"07020400.720001"	"{'KEYCODE_HEADSETHOOK', 'H-0-1', 'ACTION_ASSIST', 'KEYCODE_MEDIA_PLAY_PAUSE', 'RECOMMENDED', '7.2.4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.1"	"H-1-1"	""	""	""	""	""	"7.3.1/H-1-1"	""">7.3.1/H-1-1] MUST be able to report events up to a frequency of at least 100 Hz. If Handheld device implementations include a GPS/GNSS receiver and report the capability to applications through the android.hardware.location.gps feature flag, they: [<a href=""#7_3_sensors"""""	"07030100.720101"	"{'GPS', 'H-1-1', 'GNSS', 'android.hardware.location.gps', '7.3.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.3"	"H-2-1"	""	""	""	""	""	"7.3.3/H-2-1"	""">7.3.3/H-2-1] MUST report GNSS measurements, as soon as they are found, even if a location calculated from GPS/GNSS is not yet reported. [<a href=""#7_3_sensors"""""	"07030300.720201"	"{'H-2-1', 'GPS', '7.3.3', 'GNSS'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.3"	"H-2-2"	""	""	""	""	""	"7.3.3/H-2-2"	""">7.3.3/H-2-2] MUST report GNSS pseudoranges and pseudorange rates, that, in open-sky conditions after determining the location, while stationary or moving with less than 0.2 meter per second squared of acceleration, are sufficient to calculate position within 20 meters, and speed within 0.2 meters per second, at least 95% of the time. If Handheld device implementations include a 3-axis gyroscope, they: [<a href=""#7_3_sensors"""""	"07030300.720202"	"{'H-2-2', '7.3.3', 'GNSS'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.4"	"H-3-1"	""	""	""	""	""	"7.3.4/H-3-1"	""">7.3.4/H-3-1] MUST be able to report events up to a frequency of at least 100 Hz. [<a href=""#7_3_sensors"""""	"07030400.720301"	"{'H-3-1', '7.3.4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.4"	"H-3-2"	""	""	""	""	""	"7.3.4/H-3-2"	""">7.3.4/H-3-2] MUST be capable of measuring orientation changes up to 1000 degrees per second. Handheld device implementations that can make a voice call and indicate any value other than PHONE_TYPE_NONE in getPhoneType: [7.3.8/H] SHOULD include a proximity sensor. Handheld device implementations: [7.3.11/H-SR] Are RECOMMENDED to support pose sensor with 6 degrees of freedom. [7.4.3/H] SHOULD include support for Bluetooth and Bluetooth LE. If Handheld device implementations include a metered connection, they: [<a href=""#7_4_data_connectivity"""""	"07030400.720302"	"{'H-3-2', '7.3.4', 'RECOMMENDED', 'PHONE_TYPE_NONE'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.4.7"	"H-1-1"	""	""	""	""	""	"7.4.7/H-1-1"	""">7.4.7/H-1-1] MUST provide the data saver mode. If Handheld device implementations include a logical camera device that lists capabilities using CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_LOGICAL_MULTI_CAMERA, they: [<a href=""#7_5_camera"""""	"07040700.720101"	"{'H-1-1', 'MERA', 'CameraMetadata.REQUEST', 'REQUEST_AVAILABLE_CAPABILITIES_LOGICAL_MULTI_CA', '7.4.7'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.5.4"	"H-1-1"	""	""	""	""	""	"7.5.4/H-1-1"	""">7.5.4/H-1-1] MUST have normal field of view (FOV) by default and it MUST be between 50 and 90 degrees. Handheld device implementations: [<a href=""#7_6_memory_and_storage"""""	"07050400.720101"	"{'7.5.4', 'H-1-1', 'FOV'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"H-0-1"	""	""	""	""	""	"7.6.1/H-0-1"	""">7.6.1/H-0-1] MUST have at least 4 GB of non-volatile storage available for application private data (a.k.a. ""/data"" partition). [<a href=""#7_6_memory_and_storage"""""	"07060100.720001"	"{'7.6.1', 'H-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"H-0-2"	""	""	""	""	""	"7.6.1/H-0-2"	""">7.6.1/H-0-2] MUST return “true” for ActivityManager.isLowRamDevice() when there is less than 1GB of memory available to the kernel and userspace. If Handheld device implementations declare support of only a 32-bit ABI: [<a href=""#7_6_memory_and_storage"""""	"07060100.720002"	"{'H-0-2', 'ActivityManager.isLowRamDevice', 'ABI', '7.6.1', 'isLowRamDevice()'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"H-1-1"	""	""	""	""	""	"7.6.1/H-1-1"	""">7.6.1/H-1-1] The memory available to the kernel and userspace MUST be at least 416MB if the default display uses framebuffer resolutions up to qHD (e.g. FWVGA). [<a href=""#7_6_memory_and_storage"""""	"07060100.720101"	"{'FWVGA', '7.6.1', 'H-1-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"H-2-1"	""	""	""	""	""	"7.6.1/H-2-1"	""">7.6.1/H-2-1] The memory available to the kernel and userspace MUST be at least 592MB if the default display uses framebuffer resolutions up to HD+ (e.g. HD, WSVGA). [<a href=""#7_6_memory_and_storage"""""	"07060100.720201"	"{'7.6.1', 'H-2-1', 'WSVGA'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"H-3-1"	""	""	""	""	""	"7.6.1/H-3-1"	""">7.6.1/H-3-1] The memory available to the kernel and userspace MUST be at least 896MB if the default display uses framebuffer resolutions up to FHD (e.g. WSXGA+). [<a href=""#7_6_memory_and_storage"""""	"07060100.720301"	"{'WSXGA', '7.6.1', 'H-3-1', 'FHD'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"H-4-1"	""	""	""	""	""	"7.6.1/H-4-1"	""">7.6.1/H-4-1] The memory available to the kernel and userspace MUST be at least 1344MB if the default display uses framebuffer resolutions up to QHD (e.g. QWXGA). If Handheld device implementations declare support of 32-bit and 64-bit ABIs: [<a href=""#7_6_memory_and_storage"""""	"07060100.720401"	"{'ABI', 'QHD', 'QWXGA', '7.6.1', 'H-4-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"H-5-1"	""	""	""	""	""	"7.6.1/H-5-1"	""">7.6.1/H-5-1] The memory available to the kernel and userspace MUST be at least 816MB if the default display uses framebuffer resolutions up to qHD (e.g. FWVGA). [<a href=""#7_6_memory_and_storage"""""	"07060100.720501"	"{'FWVGA', 'H-5-1', '7.6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"H-6-1"	""	""	""	""	""	"7.6.1/H-6-1"	""">7.6.1/H-6-1] The memory available to the kernel and userspace MUST be at least 944MB if the default display uses framebuffer resolutions up to HD+ (e.g. HD, WSVGA). [<a href=""#7_6_memory_and_storage"""""	"07060100.720601"	"{'H-6-1', '7.6.1', 'WSVGA'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"H-7-1"	""	""	""	""	""	"7.6.1/H-7-1"	""">7.6.1/H-7-1] The memory available to the kernel and userspace MUST be at least 1280MB if the default display uses framebuffer resolutions up to FHD (e.g. WSXGA+). [<a href=""#7_6_memory_and_storage"""""	"07060100.720701"	"{'H-7-1', 'WSXGA', '7.6.1', 'FHD'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"H-8-1"	""	""	""	""	""	"7.6.1/H-8-1"	""">7.6.1/H-8-1] The memory available to the kernel and userspace MUST be at least 1824MB if the default display uses framebuffer resolutions up to QHD (e.g. QWXGA). Note that the ""memory available to the kernel and userspace"" above refers to the memory space provided in addition to any memory already dedicated to hardware components such as radio, video, and so on that are not under the kernel’s control on device implementations. If Handheld device implementations include less than or equal to 1GB of memory available to the kernel and userspace, they: [<a href=""#7_6_memory-and-storage"""""	"07060100.720801"	"{'H-8-1', '7.6.1', 'QHD', 'QWXGA'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"H-9-1"	""	""	""	""	""	"7.6.1/H-9-1"	""">7.6.1/H-9-1] MUST declare the feature flag android.hardware.ram.low. [<a href=""#7_6_memory-and-storage"""""	"07060100.720901"	"{'H-9-1', 'android.hardware.ram.low', '7.6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"H-9-2"	""	""	""	""	""	"7.6.1/H-9-2"	""">7.6.1/H-9-2] MUST have at least 1.1 GB of non-volatile storage for application private data (a.k.a. ""/data"" partition). If Handheld device implementations include more than 1GB of memory available to the kernel and userspace, they: [<a href=""#7_6_memory-and-storage"""""	"07060100.720902"	"{'H-9-2', '7.6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"H-10-1"	""	""	""	""	""	"7.6.1/H-10-1"	""">7.6.1/H-10-1] MUST have at least 4GB of non-volatile storage available for application private data (a.k.a. ""/data"" partition). SHOULD declare the feature flag android.hardware.ram.normal. Handheld device implementations: [<a href=""#7_6_memory_and_storage"""""	"07060100.721001"	"{'android.hardware.ram.normal', '7.6.1', 'H-10-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.2"	"H-0-1"	""	""	""	""	""	"7.6.2/H-0-1"	""">7.6.2/H-0-1] MUST NOT provide an application shared storage smaller than 1 GiB. [7.7.1/H] SHOULD include a USB port supporting peripheral mode. If handheld device implementations include a USB port supporting peripheral mode, they: [<a href=""#7_7_usb"""""	"07060200.720001"	"{'USB', 'H-0-1', '7.6.2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.7.1"	"H-1-1"	""	""	""	""	""	"7.7.1/H-1-1"	""">7.7.1/H-1-1] MUST implement the Android Open Accessory (AOA) API. If Handheld device implementations include a USB port supporting host mode, they: [<a href=""#7_7_usb"""""	"07070100.720101"	"{'AOA', 'USB', '7.7.1', 'H-1-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.7.2"	"H-1-1"	""	""	""	""	""	"7.7.2/H-1-1"	""">7.7.2/H-1-1] MUST implement the USB audio class as documented in the Android SDK documentation. Handheld device implementations: [<a href=""#7_8_audio"""""	"07070200.720101"	"{'USB', 'H-1-1', '7.7.2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.1"	"H-0-1"	""	""	""	""	""	"7.8.1/H-0-1"	""">7.8.1/H-0-1] MUST include a microphone. [<a href=""#7_8_audio"""""	"07080100.720001"	"{'H-0-1', '7.8.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.2"	"H-0-1"	""	""	""	""	""	"7.8.2/H-0-1"	""">7.8.2/H-0-1] MUST have an audio output and declare android.hardware.audio.output. If Handheld device implementations are capable of meeting all the performance requirements for supporting VR mode and include support for it, they: [<a href=""#7_9_virtual_reality"""""	"07080200.720001"	"{'android.hardware.audio.output', '7.8.2', 'H-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.9.1"	"H-1-1"	""	""	""	""	""	"7.9.1/H-1-1"	""">7.9.1/H-1-1] MUST declare the android.hardware.vr.high_performance feature flag. [<a href=""#7_9_virtual_reality"""""	"07090100.720101"	"{'H-1-1', 'android.hardware.vr.high', '7.9.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.9.1"	"H-1-2"	""	""	""	""	""	"7.9.1/H-1-2"	""">7.9.1/H-1-2] MUST include an application implementing android.service.vr.VrListenerService that can be enabled by VR applications via android.app.Activity#setVrModeEnabled. If Handheld device implementations include one or more USB-C port(s) in host mode and implement (USB audio class), in addition to requirements in section 7.7.2, they: [<a href=""#7_8_audio"""""	"07090100.720102"	"{'port(s)', '7.9.1', 'android.service.vr.VrListenerService', 'USB', 'H-1-2', 'android.app.Activity'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.2.2"	"H-1-1"	""	""	""	""	""	"7.8.2.2/H-1-1"	""">7.8.2.2/H-1-1] MUST provide the following software mapping of HID codes: Function Mappings Context Behavior A HID usage page: 0x0C HID usage: 0x0CD Kernel key: KEY_PLAYPAUSE Android key: KEYCODE_MEDIA_PLAY_PAUSE Media playback Input: Short press Output: Play or pause Input: Long press Output: Launch voice command Sends: android.speech.action.VOICE_SEARCH_HANDS_FREE if the device is locked or its screen is off. Sends android.speech.RecognizerIntent.ACTION_WEB_SEARCH otherwise Incoming call Input: Short press Output: Accept call Input: Long press Output: Reject call Ongoing call Input: Short press Output: End call Input: Long press Output: Mute or unmute microphone B HID usage page: 0x0C HID usage: 0x0E9 Kernel key: KEY_VOLUMEUP Android key: VOLUME_UP Media playback, Ongoing call Input: Short or long press Output: Increases the system or headset volume C HID usage page: 0x0C HID usage: 0x0EA Kernel key: KEY_VOLUMEDOWN Android key: VOLUME_DOWN Media playback, Ongoing call Input: Short or long press Output: Decreases the system or headset volume D HID usage page: 0x0C HID usage: 0x0CF Kernel key: KEY_VOICECOMMAND Android key: KEYCODE_VOICE_ASSIST All. Can be triggered in any instance. Input: Short or long press Output: Launch voice command [<a href=""#7_8_audio"""""	"07080202.720101"	"{'KEYCODE_VOICE_ASSIST', 'H-1-1', 'ACTION_WEB_SEARCH', '7.8.2.2', 'KEY_PLAYPAUSE', 'android.speech.action.VOICE', 'HID', 'KEYCODE_MEDIA_PLAY_PAUSE', 'KEY_VOICECOMMAND', 'android.speech.RecognizerIntent.ACTION', 'KEY_VOLUMEUP', 'VOLUME_UP', 'VOICE_SEARCH_HANDS_FREE', 'KEY_VOLUMEDOWN', 'VOLUME_DOWN'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.2.2"	"H-1-2"	""	""	""	""	""	"7.8.2.2/H-1-2"	""">7.8.2.2/H-1-2] MUST trigger ACTION_HEADSET_PLUG upon a plug insert, but only after the USB audio interfaces and endpoints have been properly enumerated in order to identify the type of terminal connected. When the USB audio terminal types 0x0302 is detected, they: [<a href=""#7_8_audio"""""	"07080202.720102"	"{'USB', 'ACTION_HEADSET_PLUG', '7.8.2.2', 'H-1-2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.2.2"	"H-2-1"	""	""	""	""	""	"7.8.2.2/H-2-1"	""">7.8.2.2/H-2-1] MUST broadcast Intent ACTION_HEADSET_PLUG with ""microphone"" extra set to 0. When the USB audio terminal types 0x0402 is detected, they: [<a href=""#7_8_audio"""""	"07080202.720201"	"{'USB', 'H-2-1', 'ACTION_HEADSET_PLUG', '7.8.2.2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.2.2"	"H-3-1"	""	""	""	""	""	"7.8.2.2/H-3-1"	""">7.8.2.2/H-3-1] MUST broadcast Intent ACTION_HEADSET_PLUG with ""microphone"" extra set to 1. When API AudioManager.getDevices() is called while the USB peripheral is connected they: [<a href=""#7_8_audio"""""	"07080202.720301"	"{'ACTION_HEADSET_PLUG', 'USB', 'H-3-1', 'getDevices()', '7.8.2.2', 'AudioManager.getDevices'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.2.2"	"H-4-1"	""	""	""	""	""	"7.8.2.2/H-4-1"	""">7.8.2.2/H-4-1] MUST list a device of type AudioDeviceInfo.TYPE_USB_HEADSET and role isSink() if the USB audio terminal type field is 0x0302. [<a href=""#7_8_audio"""""	"07080202.720401"	"{'TYPE_USB_HEADSET', 'USB', 'AudioDeviceInfo.TYPE', 'H-4-1', 'isSink()', '7.8.2.2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.2.2"	"H-4-2"	""	""	""	""	""	"7.8.2.2/H-4-2"	""">7.8.2.2/H-4-2] MUST list a device of type AudioDeviceInfo.TYPE_USB_HEADSET and role isSink() if the USB audio terminal type field is 0x0402. [<a href=""#7_8_audio"""""	"07080202.720402"	"{'TYPE_USB_HEADSET', 'H-4-2', 'USB', 'AudioDeviceInfo.TYPE', 'isSink()', '7.8.2.2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.2.2"	"H-4-3"	""	""	""	""	""	"7.8.2.2/H-4-3"	""">7.8.2.2/H-4-3] MUST list a device of type AudioDeviceInfo.TYPE_USB_HEADSET and role isSource() if the USB audio terminal type field is 0x0402. [<a href=""#7_8_audio"""""	"07080202.720403"	"{'TYPE_USB_HEADSET', 'H-4-3', 'USB', 'AudioDeviceInfo.TYPE', 'isSource()', '7.8.2.2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.2.2"	"H-4-4"	""	""	""	""	""	"7.8.2.2/H-4-4"	""">7.8.2.2/H-4-4] MUST list a device of type AudioDeviceInfo.TYPE_USB_DEVICE and role isSink() if the USB audio terminal type field is 0x603. [<a href=""#7_8_audio"""""	"07080202.720404"	"{'USB', 'AudioDeviceInfo.TYPE', 'H-4-4', 'TYPE_USB_DEVICE', 'isSink()', '7.8.2.2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.2.2"	"H-4-5"	""	""	""	""	""	"7.8.2.2/H-4-5"	""">7.8.2.2/H-4-5] MUST list a device of type AudioDeviceInfo.TYPE_USB_DEVICE and role isSource() if the USB audio terminal type field is 0x604. [<a href=""#7_8_audio"""""	"07080202.720405"	"{'H-4-5', 'USB', 'isSource()', 'AudioDeviceInfo.TYPE', 'TYPE_USB_DEVICE', '7.8.2.2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.2.2"	"H-4-6"	""	""	""	""	""	"7.8.2.2/H-4-6"	""">7.8.2.2/H-4-6] MUST list a device of type AudioDeviceInfo.TYPE_USB_DEVICE and role isSink() if the USB audio terminal type field is 0x400. [<a href=""#7_8_audio"""""	"07080202.720406"	"{'USB', 'H-4-6', 'AudioDeviceInfo.TYPE', 'TYPE_USB_DEVICE', 'isSink()', '7.8.2.2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.2.2"	"H-4-7"	""	""	""	""	""	"7.8.2.2/H-4-7"	""">7.8.2.2/H-4-7] MUST list a device of type AudioDeviceInfo.TYPE_USB_DEVICE and role isSource() if the USB audio terminal type field is 0x400. [7.8.2.2/H-SR] Are STRONGLY RECOMMENDED upon connection of a USB-C audio peripheral, to perform enumeration of USB descriptors, identify terminal types and broadcast Intent ACTION_HEADSET_PLUG in less than 1000 milliseconds. If Handheld device implementations include at least one haptic actuator, they: [7.10/H-SR]* Are STRONGLY RECOMMENDED NOT to use an eccentric rotating mass (ERM) haptic actuator(vibrator). [7.10/H]* SHOULD position the placement of the actuator near the location where the device is typically held or touched by hands. [7.10/H-SR]* Are STRONGLY RECOMMENDED to implement all public constants for clear haptics in android.view.HapticFeedbackConstants namely (CLOCK_TICK, CONTEXT_CLICK, KEYBOARD_PRESS, KEYBOARD_RELEASE, KEYBOARD_TAP, LONG_PRESS, TEXT_HANDLE_MOVE, VIRTUAL_KEY, VIRTUAL_KEY_RELEASE, CONFIRM, REJECT, GESTURE_START and GESTURE_END). [7.10/H-SR]* Are STRONGLY RECOMMENDED to implement all public constants for clear haptics in android.os.VibrationEffect namely (EFFECT_TICK, EFFECT_CLICK, EFFECT_HEAVY_CLICK and EFFECT_DOUBLE_CLICK) and all public constants for rich haptics in android.os.VibrationEffect.Composition namely (PRIMITIVE_CLICK and PRIMITIVE_TICK). [7.10/H-SR]* Are STRONGLY RECOMMENDED to use these linked haptic constants mappings. [7.10/H-SR]* Are STRONGLY RECOMMENDED to follow quality assessment for createOneShot() and createWaveform() API's. [7.10/H-SR]* Are STRONGLY RECOMMENDED to verify the capabilities for amplitude scalability by running android.os.Vibrator.hasAmplitudeControl(). Linear resonant actuator (LRA) is a single mass spring system which has a dominant resonant frequency where the mass translates in the direction of desired motion. If Handheld device implementations include at least one linear resonant actuator, they: [7.10/H]* SHOULD move the haptic actuator in the X-axis of portrait orientation. If Handheld device implementations have a haptic actuator which is X-axis Linear resonant actuator (LRA), they: [7.10/H-SR]* Are STRONGLY RECOMMENDED to have the resonant frequency of the X-axis LRA be under 200 Hz. If handheld device implementations follow haptic constants mapping, they: [7.10/H-SR]* Are STRONGLY RECOMMENDED to perform a quality assessment for haptic constants. 2.2.2. Multimedia Handheld device implementations MUST support the following audio encoding and decoding formats and make them available to third-party applications: [<a href=""#5_1_media_codecs"""""	"07080202.720407"	"{'PRIMITIVE_CLICK', 'KEYBOARD_PRESS', 'android.os.VibrationEffect', 'LRA', 'EFFECT_TICK', 'H-4-7', 'CONTEXT_CLICK', 'CLOCK_TICK', 'android.os.VibrationEffect.Composition', 'KEYBOARD_RELEASE', '7.8.2.2', 'EFFECT_HEAVY_CLICK', 'PRIMITIVE_TICK', 'createOneShot()', 'GESTURE_START', 'REJECT', 'RECOMMENDED', 'VIRTUAL_KEY', 'hasAmplitudeControl()', 'actuator(vibrator)', 'isSource()', 'GESTURE_END', 'EFFECT_DOUBLE_CLICK', 'ACTION_HEADSET_PLUG', 'CONFIRM', 'ERM', 'VIRTUAL_KEY_RELEASE', 'KEYBOARD_TAP', 'EFFECT_CLICK', 'LONG_PRESS', 'TEXT_HANDLE_MOVE', 'USB', 'android.os.Vibrator.hasAmplitudeControl', 'android.view.HapticFeedbackConstants', 'createWaveform()', 'AudioDeviceInfo.TYPE', 'TYPE_USB_DEVICE'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.1"	"H-0-1"	""	""	""	""	""	"5.1/H-0-1"	""">5.1/H-0-1] AMR-NB [<a href=""#5_1_media_codecs"""""	"05010000.720001"	"{'AMR', '5.1', 'H-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.1"	"H-0-2"	""	""	""	""	""	"5.1/H-0-2"	""">5.1/H-0-2] AMR-WB [<a href=""#5_1_media_codecs"""""	"05010000.720002"	"{'AMR', '5.1', 'H-0-2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.1"	"H-0-3"	""	""	""	""	""	"5.1/H-0-3"	""">5.1/H-0-3] MPEG-4 AAC Profile (AAC LC) [<a href=""#5_1_media_codecs"""""	"05010000.720003"	"{'5.1', 'MPEG', 'H-0-3', 'AAC'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.1"	"H-0-4"	""	""	""	""	""	"5.1/H-0-4"	""">5.1/H-0-4] MPEG-4 HE AAC Profile (AAC+) [<a href=""#5_1_media-codecs"""""	"05010000.720004"	"{'5.1', 'MPEG', 'AAC', 'H-0-4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.1"	"H-0-5"	""	""	""	""	""	"5.1/H-0-5"	""">5.1/H-0-5] AAC ELD (enhanced low delay AAC) Handheld device implementations MUST support the following video encoding formats and make them available to third-party applications: [<a href=""#5_2_video_encoding"""""	"05010000.720005"	"{'5.1', 'ELD', 'H-0-5', 'AAC'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.2"	"H-0-1"	""	""	""	""	""	"5.2/H-0-1"	""">5.2/H-0-1] H.264 AVC [<a href=""#5_2_video_encoding"""""	"05020000.720001"	"{'5.2', 'H-0-1', 'AVC'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.2"	"H-0-2"	""	""	""	""	""	"5.2/H-0-2"	""">5.2/H-0-2] VP8 Handheld device implementations MUST support the following video decoding formats and make them available to third-party applications: [<a href=""#5_3_video_decoding"""""	"05020000.720002"	"{'H-0-2', '5.2', 'VP8'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3"	"H-0-1"	""	""	""	""	""	"5.3/H-0-1"	""">5.3/H-0-1] H.264 AVC [<a href=""#5_3_video_decoding"""""	"05030000.720001"	"{'H-0-1', '5.3', 'AVC'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3"	"H-0-2"	""	""	""	""	""	"5.3/H-0-2"	""">5.3/H-0-2] H.265 HEVC [<a href=""#5_3_video_decoding"""""	"05030000.720002"	"{'H-0-2', 'HEVC', '5.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3"	"H-0-3"	""	""	""	""	""	"5.3/H-0-3"	""">5.3/H-0-3] MPEG-4 SP [<a href=""#5_3_video_decoding"""""	"05030000.720003"	"{'MPEG', 'H-0-3', '5.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3"	"H-0-4"	""	""	""	""	""	"5.3/H-0-4"	""">5.3/H-0-4] VP8 [<a href=""#5_3_video_decoding"""""	"05030000.720004"	"{'VP8', '5.3', 'H-0-4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3"	"H-0-5"	""	""	""	""	""	"5.3/H-0-5"	""">5.3/H-0-5] VP9 2.2.3. Software Handheld device implementations: [<a href=""#3_2_3_1_common_application_intents"""""	"05030000.720005"	"{'VP9', 'H-0-5', '5.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.2.3.1"	"H-0-1"	""	""	""	""	""	"3.2.3.1/H-0-1"	""">3.2.3.1/H-0-1] MUST have an application that handles the ACTION_GET_CONTENT, ACTION_OPEN_DOCUMENT, ACTION_OPEN_DOCUMENT_TREE, and ACTION_CREATE_DOCUMENT intents as described in the SDK documents, and provide the user affordance to access the document provider data by using DocumentsProvider API. [<a href=""#3_2_3_1_common_application_intents"""""	"03020301.720001"	"{'ACTION_CREATE_DOCUMENT', 'ACTION_GET_CONTENT', 'ACTION_OPEN_DOCUMENT_TREE', 'H-0-1', '3.2.3.1', 'ACTION_OPEN_DOCUMENT'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.2.3.1"	"H-0-2"	""	""	""	""	""	"3.2.3.1/H-0-2"	""">3.2.3.1/H-0-2]* MUST preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here. [3.2.3.1/H-SR] Are STRONGLY RECOMMENDED to preload an email application which can handle ACTION_SENDTO or ACTION_SEND or ACTION_SEND_MULTIPLE intents to send an email. [<a href=""#3_4_web_compatibility"""""	"03020301.720002"	"{'H-0-2', 'ACTION_SEND', 'ACTION_SEND_MULTIPLE', '3.2.3.1', 'RECOMMENDED', 'ACTION_SENDTO'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.4.1"	"H-0-1"	""	""	""	""	""	"3.4.1/H-0-1"	""">3.4.1/H-0-1] MUST provide a complete implementation of the android.webkit.Webview API. [<a href=""#3_4_web_compatibility"""""	"03040100.720001"	"{'H-0-1', 'android.webkit.Webview', '3.4.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.4.2"	"H-0-1"	""	""	""	""	""	"3.4.2/H-0-1"	""">3.4.2/H-0-1] MUST include a standalone Browser application for general user web browsing. [3.8.1/H-SR] Are STRONGLY RECOMMENDED to implement a default launcher that supports in-app pinning of shortcuts, widgets and widgetFeatures. [3.8.1/H-SR] Are STRONGLY RECOMMENDED to implement a default launcher that provides quick access to the additional shortcuts provided by third-party apps through the ShortcutManager API. [3.8.1/H-SR] Are STRONGLY RECOMMENDED to include a default launcher app that shows badges for the app icons. [3.8.2/H-SR] Are STRONGLY RECOMMENDED to support third-party app widgets. [<a href=""#3_8_user-interface_compatibility"""""	"03040200.720001"	"{'3.4.2', 'H-0-1', 'RECOMMENDED'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.3"	"H-0-1"	""	""	""	""	""	"3.8.3/H-0-1"	""">3.8.3/H-0-1] MUST allow third-party apps to notify users of notable events through the Notification and NotificationManager API classes. [<a href=""#3_8_user_interface_compatibility"""""	"03080300.720001"	"{'3.8.3', 'H-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.3"	"H-0-2"	""	""	""	""	""	"3.8.3/H-0-2"	""">3.8.3/H-0-2] MUST support rich notifications. [<a href=""#3_8_user_interface_compatibility"""""	"03080300.720002"	"{'H-0-2', '3.8.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.3"	"H-0-3"	""	""	""	""	""	"3.8.3/H-0-3"	""">3.8.3/H-0-3] MUST support heads-up notifications. [<a href=""#3_8_user_interface_compatibility"""""	"03080300.720003"	"{'3.8.3', 'H-0-3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.3"	"H-0-4"	""	""	""	""	""	"3.8.3/H-0-4"	""">3.8.3/H-0-4] MUST include a notification shade, providing the user the ability to directly control (e.g. reply, snooze, dismiss, block) the notifications through user affordance such as action buttons or the control panel as implemented in the AOSP. [<a href=""#3_8_user_interface_compatibility"""""	"03080300.720004"	"{'3.8.3', 'H-0-4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.3"	"H-0-5"	""	""	""	""	""	"3.8.3/H-0-5"	""">3.8.3/H-0-5] MUST display the choices provided through RemoteInput.Builder setChoices() in the notification shade. [3.8.3/H-SR] Are STRONGLY RECOMMENDED to display the first choice provided through RemoteInput.Builder setChoices() in the notification shade without additional user interaction. [3.8.3/H-SR] Are STRONGLY RECOMMENDED to display all the choices provided through RemoteInput.Builder setChoices() in the notification shade when the user expands all notifications in the notification shade. [3.8.3.1/H-SR] Are STRONGLY RECOMMENDED to display actions for which Notification.Action.Builder.setContextual is set as true in-line with the replies displayed by Notification.Remoteinput.Builder.setChoices. [3.8.4/H-SR] Are STRONGLY RECOMMENDED to implement an assistant on the device to handle the Assist action. If Handheld device implementations support Assist action, they: [3.8.4/H-SR] Are STRONGLY RECOMMENDED to use long press on HOME key as the designated interaction to launch the assist app as described in section 7.2.3. MUST launch the user-selected assist app, in other words the app that implements VoiceInteractionService , or an activity handling the ACTION_ASSIST intent. If Handheld device implementations support conversation notifications and group them into a separate section from alerting and silent non-conversation notifications, they: [<a href=""#3_8_user_interface_compatibility"""""	"03080300.720005"	"{'3.8.3', 'HOME', 'Notification.Action.Builder.setContextual', 'Notification.Remoteinput.Builder.setChoices', 'H-0-5', 'setChoices()', 'ACTION_ASSIST', 'RemoteInput.Builder', 'RECOMMENDED'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.4"	"H-1-1"	""	""	""	""	""	"3.8.4/H-1-1"	""">3.8.4/H-1-1]* MUST display conversation notifications ahead of non conversation notifications with the exception of ongoing foreground service notifications and importance:high notifications. If Android Handheld device implementations support a lock screen, they: [<a href=""#3_8_user_interface_compatibility"""""	"03080400.720101"	"{'3.8.4', 'H-1-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.10"	"H-1-1"	""	""	""	""	""	"3.8.10/H-1-1"	""">3.8.10/H-1-1] MUST display the Lock screen Notifications including the Media Notification Template. If Handheld device implementations support a secure lock screen, they: [<a href=""#3_9_device_administration"""""	"03081000.720101"	"{'3.8.10', 'H-1-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.9"	"H-1-1"	""	""	""	""	""	"3.9/H-1-1"	""">3.9/H-1-1] MUST implement the full range of device administration policies defined in the Android SDK documentation. [<a href=""#3_9_device_administration"""""	"03090000.720101"	"{'3.9', 'H-1-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.9"	"H-1-2"	""	""	""	""	""	"3.9/H-1-2"	""">3.9/H-1-2] MUST declare the support of managed profiles via the android.software.managed_users feature flag, except when the device is configured so that it would report itself as a low RAM device or so that it allocates internal (non-removable) storage as shared storage. If Handheld device implementations include support for ControlsProviderService and Control APIs and allow third-party applications to publish device controls, then they: [<a href=""#3_8_user_interface_compatibility"""""	"03090000.720102"	"{'3.9', 'RAM', 'android.software.managed', 'H-1-2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.16"	"H-1-1"	""	""	""	""	""	"3.8.16/H-1-1"	""">3.8.16/H-1-1] MUST declare the feature flag android.software.controls and set it to true. [<a href=""#3_8_user_interface_compatibility"""""	"03081600.720101"	"{'H-1-1', 'android.software.controls', '3.8.16'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.16"	"H-1-2"	""	""	""	""	""	"3.8.16/H-1-2"	""">3.8.16/H-1-2] MUST provide a user affordance with the ability to add, edit, select, and operate the user’s favorite device controls from the controls registered by the third-party applications through the ControlsProviderService and the Control APIs. [<a href=""#3_8_user_interface_compatibility"""""	"03081600.720102"	"{'H-1-2', '3.8.16'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.16"	"H-1-3"	""	""	""	""	""	"3.8.16/H-1-3"	""">3.8.16/H-1-3] MUST provide access to this user affordance within three interactions from a default Launcher. [<a href=""#3_8_user_interface_compatibility"""""	"03081600.720103"	"{'H-1-3', '3.8.16'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.16"	"H-1-4"	""	""	""	""	""	"3.8.16/H-1-4"	""">3.8.16/H-1-4] MUST accurately render in this user affordance the name and icon of each third-party app that provides controls via the ControlsProviderService API as well as any specified fields provided by the Control APIs. Conversely, If Handheld device implementations do not implement such controls, they: [<a href=""#3_8_user_interface_compatibility"""""	"03081600.720104"	"{'H-1-4', '3.8.16'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.16"	"H-2-1"	""	""	""	""	""	"3.8.16/H-2-1"	""">3.8.16/H-2-1] MUST report null for the ControlsProviderService and the Control APIs. [<a href=""#3_8_user_interface_compatibility"""""	"03081600.720201"	"{'H-2-1', '3.8.16'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.16"	"H-2-2"	""	""	""	""	""	"3.8.16/H-2-2"	""">3.8.16/H-2-2] MUST declare the feature flag android.software.controls and set it to false. Handheld device implementations: [<a href=""#3_10_accessibility"""""	"03081600.720202"	"{'H-2-2', 'android.software.controls', '3.8.16'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.10"	"H-0-1"	""	""	""	""	""	"3.10/H-0-1"	""">3.10/H-0-1] MUST support third-party accessibility services. [3.10/H-SR] Are STRONGLY RECOMMENDED to preload accessibility services on the device comparable with or exceeding functionality of the Switch Access and TalkBack (for languages supported by the preinstalled Text-to-speech engine) accessibility services as provided in the talkback open source project. [<a href=""#3_11_text_to_speech"""""	"03100000.720001"	"{'H-0-1', '3.10', 'RECOMMENDED'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.11"	"H-0-1"	""	""	""	""	""	"3.11/H-0-1"	""">3.11/H-0-1] MUST support installation of third-party TTS engines. [3.11/H-SR] Are STRONGLY RECOMMENDED to include a TTS engine supporting the languages available on the device. [3.13/H-SR] Are STRONGLY RECOMMENDED to include a Quick Settings UI component. If Android handheld device implementations declare FEATURE_BLUETOOTH or FEATURE_WIFI support, they: [<a href=""#3_16_companion_device_pairing"""""	"03110000.720001"	"{'FEATURE_BLUETOOTH', 'H-0-1', '3.11', 'FEATURE_WIFI', 'RECOMMENDED', 'TTS'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.16"	"H-1-1"	""	""	""	""	""	"3.16/H-1-1"	""">3.16/H-1-1] MUST support the companion device pairing feature. If the navigation function is provided as an on-screen, gesture-based action: [7.2.3/H] The gesture recognition zone for the Home function SHOULD be no higher than 32 dp in height from the bottom of the screen. If Handheld device implementations provide a navigation function as a gesture from anywhere on the left and right edges of the screen: [<a href=""#7_2_input_devices"""""	"03160000.720101"	"{'3.16', 'H-1-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.2.3"	"H-0-1"	""	""	""	""	""	"7.2.3/H-0-1"	""">7.2.3/H-0-1] The navigation function's gesture area MUST be less than 40 dp in width on each side. The gesture area SHOULD be 24 dp in width by default. 2.2.4. Performance and Power [<a href=""#8_1_user_experience_consistency"""""	"07020300.720001"	"{'7.2.3', 'H-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.1"	"H-0-1"	""	""	""	""	""	"8.1/H-0-1"	""">8.1/H-0-1] Consistent frame latency. Inconsistent frame latency or a delay to render frames MUST NOT happen more often than 5 frames in a second, and SHOULD be below 1 frames in a second. [<a href=""#8_1_user_experience_consistency"""""	"08010000.720001"	"{'H-0-1', '8.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.1"	"H-0-2"	""	""	""	""	""	"8.1/H-0-2"	""">8.1/H-0-2] User interface latency. Device implementations MUST ensure low latency user experience by scrolling a list of 10K list entries as defined by the Android Compatibility Test Suite (CTS) in less than 36 secs. [<a href=""#8_1_user_experience_consistency"""""	"08010000.720002"	"{'H-0-2', 'CTS', '8.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.1"	"H-0-3"	""	""	""	""	""	"8.1/H-0-3"	""">8.1/H-0-3] Task switching. When multiple applications have been launched, re-launching an already-running application after it has been launched MUST take less than 1 second. Handheld device implementations: [<a href=""#8_2_file_io_access_performance"""""	"08010000.720003"	"{'H-0-3', '8.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.2"	"H-0-1"	""	""	""	""	""	"8.2/H-0-1"	""">8.2/H-0-1] MUST ensure a sequential write performance of at least 5 MB/s. [<a href=""#8_2_file_io_access_performance"""""	"08020000.720001"	"{'8.2', 'H-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.2"	"H-0-2"	""	""	""	""	""	"8.2/H-0-2"	""">8.2/H-0-2] MUST ensure a random write performance of at least 0.5 MB/s. [<a href=""#8_2_file_io_access_performance"""""	"08020000.720002"	"{'H-0-2', '8.2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.2"	"H-0-3"	""	""	""	""	""	"8.2/H-0-3"	""">8.2/H-0-3] MUST ensure a sequential read performance of at least 15 MB/s. [<a href=""#8_2_file_io_access_performance"""""	"08020000.720003"	"{'8.2', 'H-0-3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.2"	"H-0-4"	""	""	""	""	""	"8.2/H-0-4"	""">8.2/H-0-4] MUST ensure a random read performance of at least 3.5 MB/s. If Handheld device implementations include features to improve device power management that are included in AOSP or extend the features that are included in AOSP, they: [<a href=""#8_3_power_saving_modes"""""	"08020000.720004"	"{'8.2', 'H-0-4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.3"	"H-1-1"	""	""	""	""	""	"8.3/H-1-1"	""">8.3/H-1-1] MUST provide user affordance to enable and disable the battery saver feature. [<a href=""#8_3_power_saving_modes"""""	"08030000.720101"	"{'H-1-1', '8.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.3"	"H-1-2"	""	""	""	""	""	"8.3/H-1-2"	""">8.3/H-1-2] MUST provide user affordance to display all apps that are exempted from App Standby and Doze power-saving modes. Handheld device implementations: [<a href=""#8_4_power_consumption_accounting"""""	"08030000.720102"	"{'8.3', 'H-1-2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"H-0-1"	""	""	""	""	""	"8.4/H-0-1"	""">8.4/H-0-1] MUST provide a per-component power profile that defines the current consumption value for each hardware component and the approximate battery drain caused by the components over time as documented in the Android Open Source Project site. [<a href=""#8_4_power_consumption_accounting"""""	"08040000.720001"	"{'8.4', 'H-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"H-0-2"	""	""	""	""	""	"8.4/H-0-2"	""">8.4/H-0-2] MUST report all power consumption values in milliampere hours (mAh). [<a href=""#8_4_power_consumption_accounting"""""	"08040000.720002"	"{'H-0-2', '8.4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"H-0-3"	""	""	""	""	""	"8.4/H-0-3"	""">8.4/H-0-3] MUST report CPU power consumption per each process's UID. The Android Open Source Project meets the requirement through the uid_cputime kernel module implementation. [<a href=""#8_4_power_consumption_accounting"""""	"08040000.720003"	"{'CPU', '8.4', 'H-0-3', 'UID'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"H-0-4"	""	""	""	""	""	"8.4/H-0-4"	""">8.4/H-0-4] MUST make this power usage available via the adb shell dumpsys batterystats shell command to the app developer. [8.4/H] SHOULD be attributed to the hardware component itself if unable to attribute hardware component power usage to an application. If Handheld device implementations include a screen or video output, they: [<a href=""#8_4_power_consumption_accounting"""""	"08040000.720004"	"{'8.4', 'H-0-4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"H-1-1"	""	""	""	""	""	"8.4/H-1-1"	""">8.4/H-1-1] MUST honor the android.intent.action.POWER_USAGE_SUMMARY intent and display a settings menu that shows this power usage. 2.2.5. Security Model Handheld device implementations: [<a href=""#9_1_permissions"""""	"08040000.720101"	"{'8.4', 'android.intent.action.POWER', 'H-1-1', 'POWER_USAGE_SUMMARY'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.1"	"H-0-1"	""	""	""	""	""	"9.1/H-0-1"	""">9.1/H-0-1] MUST allow third-party apps to access the usage statistics via the android.permission.PACKAGE_USAGE_STATS permission and provide a user-accessible mechanism to grant or revoke access to such apps in response to the android.settings.ACTION_USAGE_ACCESS_SETTINGS intent. Handheld device implementations (* Not applicable for Tablet): [<a href=""#9_11_permissions"""""	"09010000.720001"	"{'android.settings.ACTION', 'H-0-1', 'android.permission.PACKAGE', 'PACKAGE_USAGE_STATS', 'ACTION_USAGE_ACCESS_SETTINGS', '9.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.11"	"H-0-2"	""	""	""	""	""	"9.11/H-0-2"	""">9.11/H-0-2]* MUST back up the keystore implementation with an isolated execution environment. [<a href=""#9_11_permissions"""""	"09110000.720002"	"{'H-0-2', '9.11'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.11"	"H-0-3"	""	""	""	""	""	"9.11/H-0-3"	""">9.11/H-0-3]* MUST have implementations of RSA, AES, ECDSA, and HMAC cryptographic algorithms and MD5, SHA1, and SHA-2 family hash functions to properly support the Android Keystore system's supported algorithms in an area that is securely isolated from the code running on the kernel and above. Secure isolation MUST block all potential mechanisms by which kernel or userspace code might access the internal state of the isolated environment, including DMA. The upstream Android Open Source Project (AOSP) meets this requirement by using the Trusty implementation, but another ARM TrustZone-based solution or a third-party reviewed secure implementation of a proper hypervisor-based isolation are alternative options. [<a href=""#9_11_permissions"""""	"09110000.720003"	"{'AES', 'MD5', 'ECDSA', 'RSA', 'SHA1', 'SHA', 'H-0-3', 'HMAC', '9.11', 'ARM', 'DMA'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.11"	"H-0-4"	""	""	""	""	""	"9.11/H-0-4"	""">9.11/H-0-4]* MUST perform the lock screen authentication in the isolated execution environment and only when successful, allow the authentication-bound keys to be used. Lock screen credentials MUST be stored in a way that allows only the isolated execution environment to perform lock screen authentication. The upstream Android Open Source Project provides the Gatekeeper Hardware Abstraction Layer (HAL) and Trusty, which can be used to satisfy this requirement. [<a href=""#9_11_permissions"""""	"09110000.720004"	"{'HAL', '9.11', 'H-0-4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.11"	"H-0-5"	""	""	""	""	""	"9.11/H-0-5"	""">9.11/H-0-5]* MUST support key attestation where the attestation signing key is protected by secure hardware and signing is performed in secure hardware. The attestation signing keys MUST be shared across large enough number of devices to prevent the keys from being used as device identifiers. One way of meeting this requirement is to share the same attestation key unless at least 100,000 units of a given SKU are produced. If more than 100,000 units of an SKU are produced, a different key MAY be used for each 100,000 units. Note that if a device implementation is already launched on an earlier Android version, such a device is exempted from the requirement to have a keystore backed by an isolated execution environment and support the key attestation, unless it declares the android.hardware.fingerprint feature which requires a keystore backed by an isolated execution environment. When Handheld device implementations support a secure lock screen, they: [<a href=""#9_11_permissions"""""	"09110000.720005"	"{'SKU', 'H-0-5', '9.11', 'android.hardware.fingerprint'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.11"	"H-1-1"	""	""	""	""	""	"9.11/H-1-1"	""">9.11/H-1-1] MUST allow the user to choose the shortest sleep timeout, that is a transition time from the unlocked to the locked state, as 15 seconds or less. [<a href=""#9_11_permissions"""""	"09110000.720101"	"{'H-1-1', '9.11'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.11"	"H-1-2"	""	""	""	""	""	"9.11/H-1-2"	""">9.11/H-1-2] MUST provide user affordance to hide notifications and disable all forms of authentication except for the primary authentication described in 9.11.1 Secure Lock Screen. The AOSP meets the requirement as lockdown mode. If Handheld device implementations include multiple users and do not declare the android.hardware.telephony feature flag, they: [<a href=""#9_5_multi-user-support"""""	"09110000.720102"	"{'android.hardware.telephony', '9.11', 'H-1-2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.5"	"H-2-1"	""	""	""	""	""	"9.5/H-2-1"	""">9.5/H-2-1] MUST support restricted profiles, a feature that allows device owners to manage additional users and their capabilities on the device. With restricted profiles, device owners can quickly set up separate environments for additional users to work in, with the ability to manage finer-grained restrictions in the apps that are available in those environments. If Handheld device implementations include multiple users and declare the android.hardware.telephony feature flag, they: [<a href=""#9_5_multi-user-support"""""	"09050000.720201"	"{'android.hardware.telephony', 'H-2-1', '9.5'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.5"	"H-3-1"	""	""	""	""	""	"9.5/H-3-1"	""">9.5/H-3-1] MUST NOT support restricted profiles but MUST align with the AOSP implementation of controls to enable /disable other users from accessing the voice calls and SMS. 2.2.6. Developer Tools and Options Compatibility Handheld device implementations (* Not applicable for Tablet): [<a href=""#6_1_developer_tools"""""	"09050000.720301"	"{'H-3-1', '9.5', 'SMS'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"6.1"	"H-0-1"	""	""	""	""	""	"6.1/H-0-1"	""">6.1/H-0-1]* MUST support the shell command cmd testharness. Handheld device implementations (* Not applicable for Tablet): Perfetto [<a href=""#6_1_developer_tools"""""	"06010000.720001"	"{'H-0-1', '6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"6.1"	"H-0-2"	""	""	""	""	""	"6.1/H-0-2"	""">6.1/H-0-2]* MUST expose a /system/bin/perfetto binary to the shell user which cmdline complies with the perfetto documentation. [<a href=""#6_1_developer_tools"""""	"06010000.720002"	"{'H-0-2', '6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"6.1"	"H-0-3"	""	""	""	""	""	"6.1/H-0-3"	""">6.1/H-0-3]* The perfetto binary MUST accept as input a protobuf config that complies with the schema defined in the perfetto documentation. [<a href=""#6_1_developer_tools"""""	"06010000.720003"	"{'H-0-3', '6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"6.1"	"H-0-4"	""	""	""	""	""	"6.1/H-0-4"	""">6.1/H-0-4]* The perfetto binary MUST write as output a protobuf trace that complies with the schema defined in the perfetto documentation. [<a href=""#6_1_developer_tools"""""	"06010000.720004"	"{'H-0-4', '6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"6.1"	"H-0-5"	""	""	""	""	""	"6.1/H-0-5"	""">6.1/H-0-5]* MUST provide, through the perfetto binary, at least the data sources described in the perfetto documentation. [<a href=""#6_1_developer_tools"""""	"06010000.720005"	"{'H-0-5', '6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"6.1"	"H-0-6"	""	""	""	""	""	"6.1/H-0-6"	""">6.1/H-0-6]* The perfetto traced daemon MUST be enabled by default (system property persist.traced.enable). 2.3. Television Requirements An Android Television device refers to an Android device implementation that is an entertainment interface for consuming digital media, movies, games, apps, and/or live TV for users sitting about ten feet away (a “lean back” or “10-foot user interface”). Android device implementations are classified as a Television if they meet all the following criteria: Have provided a mechanism to remotely control the rendered user interface on the display that might sit ten feet away from the user. Have an embedded screen display with the diagonal length larger than 24 inches OR include a video output port, such as VGA, HDMI, DisplayPort, or a wireless port for display. The additional requirements in the rest of this section are specific to Android Television device implementations. 2.3.1. Hardware Television device implementations: [<a href=""#7_2_input_devices"""""	"06010000.720006"	"{'VGA', 'HDMI', '6.1', 'H-0-6', 'persist.traced.enable'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.2.2"	"T-0-1"	""	""	""	""	""	"7.2.2/T-0-1"	""">7.2.2/T-0-1] MUST support D-pad. [<a href=""#7_2_input_devices"""""	"07020200.840001"	"{'7.2.2', 'T-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.2.3"	"T-0-1"	""	""	""	""	""	"7.2.3/T-0-1"	""">7.2.3/T-0-1] MUST provide the Home and Back functions. [<a href=""#7_2_input_devices"""""	"07020300.840001"	"{'7.2.3', 'T-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.2.3"	"T-0-2"	""	""	""	""	""	"7.2.3/T-0-2"	""">7.2.3/T-0-2] MUST send both the normal and long press event of the Back function (KEYCODE_BACK) to the foreground application. [<a href=""#7_2_input_devices"""""	"07020300.840002"	"{'T-0-2', 'KEYCODE_BACK', '7.2.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.2.6.1"	"T-0-1"	""	""	""	""	""	"7.2.6.1/T-0-1"	""">7.2.6.1/T-0-1] MUST include support for game controllers and declare the android.hardware.gamepad feature flag. [7.2.7/T] SHOULD provide a remote control from which users can access non-touch navigation and core navigation keys inputs. If Television device implementations include a 3-axis gyroscope, they: [<a href=""#7_3_sensors"""""	"07020601.840001"	"{'android.hardware.gamepad', '7.2.6.1', 'T-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.4"	"T-1-1"	""	""	""	""	""	"7.3.4/T-1-1"	""">7.3.4/T-1-1] MUST be able to report events up to a frequency of at least 100 Hz. [<a href=""#7_3_sensors"""""	"07030400.840101"	"{'T-1-1', '7.3.4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.4"	"T-1-2"	""	""	""	""	""	"7.3.4/T-1-2"	""">7.3.4/T-1-2] MUST be capable of measuring orientation changes up to 1000 degrees per second. Television device implementations: [<a href=""#7_4_data_connectivity"""""	"07030400.840102"	"{'7.3.4', 'T-1-2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.4.3"	"T-0-1"	""	""	""	""	""	"7.4.3/T-0-1"	""">7.4.3/T-0-1] MUST support Bluetooth and Bluetooth LE. [<a href=""#7_6_memory_and_storage"""""	"07040300.840001"	"{'T-0-1', '7.4.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"T-0-1"	""	""	""	""	""	"7.6.1/T-0-1"	""">7.6.1/T-0-1] MUST have at least 4 GB of non-volatile storage available for application private data (a.k.a. ""/data"" partition). If Television device implementations include a USB port that supports host mode, they: [<a href=""#7_5_camera"""""	"07060100.840001"	"{'USB', '7.6.1', 'T-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.5.3"	"T-1-1"	""	""	""	""	""	"7.5.3/T-1-1"	""">7.5.3/T-1-1] MUST include support for an external camera that connects through this USB port but is not necessarily always connected. If TV device implementations are 32-bit: [<a href=""#7_6_memory_and_storage"""""	"07050300.840101"	"{'USB', '7.5.3', 'T-1-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"T-1-1"	""	""	""	""	""	"7.6.1/T-1-1"	""">7.6.1/T-1-1] The memory available to the kernel and userspace MUST be at least 896MB if any of the following densities are used: 400dpi or higher on small/normal screens xhdpi or higher on large screens tvdpi or higher on extra large screens If TV device implementations are 64-bit: [<a href=""#7_6_memory_and_storage"""""	"07060100.840101"	"{'T-1-1', '7.6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"T-2-1"	""	""	""	""	""	"7.6.1/T-2-1"	""">7.6.1/T-2-1] The memory available to the kernel and userspace MUST be at least 1280MB if any of the following densities are used: 400dpi or higher on small/normal screens xhdpi or higher on large screens tvdpi or higher on extra large screens Note that the ""memory available to the kernel and userspace"" above refers to the memory space provided in addition to any memory already dedicated to hardware components such as radio, video, and so on that are not under the kernel’s control on device implementations. Television device implementations: [7.8.1/T] SHOULD include a microphone. [<a href=""#7_8_audio"""""	"07060100.840201"	"{'T-2-1', '7.6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.2"	"T-0-1"	""	""	""	""	""	"7.8.2/T-0-1"	""">7.8.2/T-0-1] MUST have an audio output and declare android.hardware.audio.output. 2.3.2. Multimedia Television device implementations MUST support the following audio encoding and decoding formats and make them available to third-party applications: [<a href=""#5_1_media_codecs"""""	"07080200.840001"	"{'android.hardware.audio.output', '7.8.2', 'T-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.1"	"T-0-1"	""	""	""	""	""	"5.1/T-0-1"	""">5.1/T-0-1] MPEG-4 AAC Profile (AAC LC) [<a href=""#5_1_media_codecs"""""	"05010000.840001"	"{'5.1', 'MPEG', 'AAC', 'T-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.1"	"T-0-2"	""	""	""	""	""	"5.1/T-0-2"	""">5.1/T-0-2] MPEG-4 HE AAC Profile (AAC+) [<a href=""#5_1_media_codecs"""""	"05010000.840002"	"{'T-0-2', '5.1', 'MPEG', 'AAC'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.1"	"T-0-3"	""	""	""	""	""	"5.1/T-0-3"	""">5.1/T-0-3] AAC ELD (enhanced low delay AAC) Television device implementations MUST support the following video encoding formats and make them available to third-party applications: [<a href=""#5_2_video_encoding"""""	"05010000.840003"	"{'5.1', 'ELD', 'T-0-3', 'AAC'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.2"	"T-0-1"	""	""	""	""	""	"5.2/T-0-1"	""">5.2/T-0-1] H.264 [<a href=""#5_2_video_encoding"""""	"05020000.840001"	"{'5.2', 'T-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.2"	"T-0-2"	""	""	""	""	""	"5.2/T-0-2"	""">5.2/T-0-2] VP8 Television device implementations: [5.2.2/T-SR] Are STRONGLY RECOMMENDED to support H.264 encoding of 720p and 1080p resolution videos at 30 frames per second. Television device implementations MUST support the following video decoding formats and make them available to third-party applications: [<a href=""#5_3_video_decoding"""""	"05020000.840002"	"{'T-0-2', '5.2', 'VP8', 'RECOMMENDED'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.3"	"T-0-1"	""	""	""	""	""	"5.3.3/T-0-1"	""">5.3.3/T-0-1] MPEG-4 SP [<a href=""#5_3_video_decoding"""""	"05030300.840001"	"{'T-0-1', 'MPEG', '5.3.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.4"	"T-0-2"	""	""	""	""	""	"5.3.4/T-0-2"	""">5.3.4/T-0-2] H.264 AVC [<a href=""#5_3_video_decoding"""""	"05030400.840002"	"{'T-0-2', '5.3.4', 'AVC'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.5"	"T-0-3"	""	""	""	""	""	"5.3.5/T-0-3"	""">5.3.5/T-0-3] H.265 HEVC [<a href=""#5_3_video_decoding"""""	"05030500.840003"	"{'HEVC', 'T-0-3', '5.3.5'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.6"	"T-0-4"	""	""	""	""	""	"5.3.6/T-0-4"	""">5.3.6/T-0-4] VP8 [<a href=""#5_3_video_decoding"""""	"05030600.840004"	"{'T-0-4', '5.3.6', 'VP8'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.7"	"T-0-5"	""	""	""	""	""	"5.3.7/T-0-5"	""">5.3.7/T-0-5] VP9 [<a href=""#5_3_video_decoding"""""	"05030700.840005"	"{'T-0-5', '5.3.7', 'VP9'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.1"	"T-0-6"	""	""	""	""	""	"5.3.1/T-0-6"	""">5.3.1/T-0-6] MPEG-2 Television device implementations MUST support MPEG-2 decoding, as detailed in Section 5.3.1, at standard video frame rates and resolutions up to and including: [<a href=""#5_3_video_decoding"""""	"05030100.840006"	"{'5.3.1', 'MPEG', 'T-0-6'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.1"	"T-1-1"	""	""	""	""	""	"5.3.1/T-1-1"	""">5.3.1/T-1-1] HD 1080p at 59.94 frames per second with Main Profile High Level. [<a href=""#5_3_video_decoding"""""	"05030100.840101"	"{'T-1-1', '5.3.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.1"	"T-1-2"	""	""	""	""	""	"5.3.1/T-1-2"	""">5.3.1/T-1-2] HD 1080i at 59.94 frames per second with Main Profile High Level. They MUST deinterlace interlaced MPEG-2 video and make it available to third-party applications. Television device implementations MUST support H.264 decoding, as detailed in Section 5.3.4, at standard video frame rates and resolutions up to and including: [<a href=""#5_3_video_decoding"""""	"05030100.840102"	"{'5.3.1', 'MPEG', 'T-1-2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.4"	"T-1-1"	""	""	""	""	""	"5.3.4/T-1-1"	""">5.3.4/T-1-1] HD 1080p at 60 frames per second with Baseline Profile [<a href=""#5_3_video_decoding"""""	"05030400.840101"	"{'T-1-1', '5.3.4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.4"	"T-1-2"	""	""	""	""	""	"5.3.4/T-1-2"	""">5.3.4/T-1-2] HD 1080p at 60 frames per second with Main Profile [<a href=""#5_3_video_decoding"""""	"05030400.840102"	"{'T-1-2', '5.3.4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.4"	"T-1-3"	""	""	""	""	""	"5.3.4/T-1-3"	""">5.3.4/T-1-3] HD 1080p at 60 frames per second with High Profile Level 4.2 Television device implementations with H.265 hardware decoders MUST support H.265 decoding, as detailed in Section 5.3.5, at standard video frame rates and resolutions up to and including: [<a href=""#5_3_video_decoding"""""	"05030400.840103"	"{'T-1-3', '5.3.4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.5"	"T-1-1"	""	""	""	""	""	"5.3.5/T-1-1"	""">5.3.5/T-1-1] HD 1080p at 60 frames per second with Main Profile Level 4.1 If Television device implementations with H.265 hardware decoders support H.265 decoding and the UHD decoding profile, they: [<a href=""#5_3_video_decoding"""""	"05030500.840101"	"{'T-1-1', '5.3.5', 'UHD'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.5"	"T-2-1"	""	""	""	""	""	"5.3.5/T-2-1"	""">5.3.5/T-2-1] MUST support the UHD decoding profile at 60 frames per second with Main10 Level 5 Main Tier profile Television device implementations MUST support VP8 decoding, as detailed in Section 5.3.6, at standard video frame rates and resolutions up to and including: [<a href=""#5_3_video_decoding"""""	"05030500.840201"	"{'5.3.5', 'T-2-1', 'VP8', 'UHD'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.6"	"T-1-1"	""	""	""	""	""	"5.3.6/T-1-1"	""">5.3.6/T-1-1] HD 1080p at 60 frames per second decoding profile Television device implementations with VP9 hardware decoders MUST support VP9 decoding, as detailed in Section 5.3.7, at standard video frame rates and resolutions up to and including: [<a href=""#5_3_video_decoding"""""	"05030600.840101"	"{'T-1-1', '5.3.6', 'VP9'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.7"	"T-1-1"	""	""	""	""	""	"5.3.7/T-1-1"	""">5.3.7/T-1-1] HD 1080p at 60 frames per second with profile 0 (8 bit color depth) If Television device implementations with VP9 hardware decoders support VP9 decoding and the UHD decoding profile, they: [<a href=""#5_3_video_decoding"""""	"05030700.840101"	"{'T-1-1', '5.3.7', 'VP9', 'UHD'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3.7"	"T-2-1"	""	""	""	""	""	"5.3.7/T-2-1"	""">5.3.7/T-2-1] MUST support the UHD decoding profile at 60 frames per second with profile 0 (8 bit color depth). [<a href=""#5_3_video_decoding"" && >5.3.7/T-2-1] MUST support the UHD decoding profile at 60 frames per second with profile 0 (8 bit color depth). [<a href=""#5_3_video_decoding"" | >5.3.7/T-2-1] Are STRONGLY RECOMMENDED to support the UHD decoding profile at 60 frames per second with profile 2 (10 bit color depth). Television device implementations: [<a href=""#5_5_audio_playback"""""	"05030700.840201"	"{'T-2-1', '5.3.7', 'UHD', 'RECOMMENDED'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.5"	"T-0-1"	""	""	""	""	""	"5.5/T-0-1"	""">5.5/T-0-1] MUST include support for system Master Volume and digital audio output volume attenuation on supported outputs, except for compressed audio passthrough output (where no audio decoding is done on the device). If Television device implementations do not have a built in display, but instead support an external display connected via HDMI, they: [<a href=""#5_8_secure_media"""""	"05050000.840001"	"{'5.5', 'HDMI', 'T-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.8"	"T-0-1"	""	""	""	""	""	"5.8/T-0-1"	""">5.8/T-0-1] MUST set the HDMI output mode to select the maximum resolution that can be supported with either a 50Hz or 60Hz refresh rate. [5.8/T-SR] Are STRONGLY RECOMMENDED to provide a user configurable HDMI refresh rate selector. [5.8] SHOULD set the HDMI output mode refresh rate to either 50Hz or 60Hz, depending on the video refresh rate for the region the device is sold in. If Television device implementations do not have a built in display, but instead support an external display connected via HDMI, they: [<a href=""#5_8_secure_media"""""	"05080000.840001"	"{'T-0-1', 'RECOMMENDED', 'HDMI', '5.8'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.8"	"T-1-1"	""	""	""	""	""	"5.8/T-1-1"	""">5.8/T-1-1] MUST support HDCP 2.2. If Television device implementations do not support UHD decoding, but instead support an external display connected via HDMI, they: [<a href=""#5_8_secure_media"""""	"05080000.840101"	"{'HDMI', 'HDCP', 'T-1-1', 'UHD', '5.8'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.8"	"T-2-1"	""	""	""	""	""	"5.8/T-2-1"	""">5.8/T-2-1] MUST support HDCP 1.4 2.3.3. Software Television device implementations: [<a href=""#3_0_intro"""""	"05080000.840201"	"{'HDCP', 'T-2-1', '5.8'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3"	"T-0-1"	""	""	""	""	""	"3/T-0-1"	""">3/T-0-1] MUST declare the features android.software.leanback and android.hardware.type.television. [<a href=""#3_2_3_1_common_application_intents"""""	"03000000.840001"	"{'android.hardware.type.television', 'android.software.leanback', '3', 'T-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.2.3.1"	"T-0-1"	""	""	""	""	""	"3.2.3.1/T-0-1"	""">3.2.3.1/T-0-1] MUST preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here. [<a href=""#3_4_web_compatibility"""""	"03020301.840001"	"{'3.2.3.1', 'T-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.4.1"	"T-0-1"	""	""	""	""	""	"3.4.1/T-0-1"	""">3.4.1/T-0-1] MUST provide a complete implementation of the android.webkit.Webview API. If Android Television device implementations support a lock screen,they: [<a href=""#3_8_user_interface_compatibility"""""	"03040100.840001"	"{'T-0-1', 'android.webkit.Webview', '3.4.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.10"	"T-1-1"	""	""	""	""	""	"3.8.10/T-1-1"	""">3.8.10/T-1-1] MUST display the Lock screen Notifications including the Media Notification Template. Television device implementations: [3.8.14/T-SR] Are STRONGLY RECOMMENDED to support picture-in-picture (PIP) mode multi-window. [<a href=""#3_10_accessibility"""""	"03081000.840101"	"{'T-1-1', '3.8.10', 'PIP', 'RECOMMENDED'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.10"	"T-0-1"	""	""	""	""	""	"3.10/T-0-1"	""">3.10/T-0-1] MUST support third-party accessibility services. [3.10/T-SR] Are STRONGLY RECOMMENDED to preload accessibility services on the device comparable with or exceeding functionality of the Switch Access and TalkBack (for languages supported by the preinstalled Text-to-speech engine) accessibility services as provided in the talkback open source project. If Television device implementations report the feature android.hardware.audio.output, they: [3.11/T-SR] Are STRONGLY RECOMMENDED to include a TTS engine supporting the languages available on the device. [<a href=""#3_11_text_to_speech"""""	"03100000.840001"	"{'android.hardware.audio.output', 'TTS', 'RECOMMENDED', '3.10', 'T-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.11"	"T-1-1"	""	""	""	""	""	"3.11/T-1-1"	""">3.11/T-1-1] MUST support installation of third-party TTS engines. Television device implementations: [<a href=""#3_12_tv_input_framework"""""	"03110000.840101"	"{'T-1-1', '3.11', 'TTS'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.12"	"T-0-1"	""	""	""	""	""	"3.12/T-0-1"	""">3.12/T-0-1] MUST support TV Input Framework. 2.3.4. Performance and Power [<a href=""#8_1_user_experience_consistency"""""	"03120000.840001"	"{'3.12', 'T-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.1"	"T-0-1"	""	""	""	""	""	"8.1/T-0-1"	""">8.1/T-0-1] Consistent frame latency. Inconsistent frame latency or a delay to render frames MUST NOT happen more often than 5 frames in a second, and SHOULD be below 1 frames in a second. [<a href=""#8_2_file_io_access_performance"""""	"08010000.840001"	"{'T-0-1', '8.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.2"	"T-0-1"	""	""	""	""	""	"8.2/T-0-1"	""">8.2/T-0-1] MUST ensure a sequential write performance of at least 5MB/s. [<a href=""#8_2_file_io_access_performance"""""	"08020000.840001"	"{'8.2', 'T-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.2"	"T-0-2"	""	""	""	""	""	"8.2/T-0-2"	""">8.2/T-0-2] MUST ensure a random write performance of at least 0.5MB/s. [<a href=""#8_2_file_io_access_performance"""""	"08020000.840002"	"{'T-0-2', '8.2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.2"	"T-0-3"	""	""	""	""	""	"8.2/T-0-3"	""">8.2/T-0-3] MUST ensure a sequential read performance of at least 15MB/s. [<a href=""#8_2_file_io_access_performance"""""	"08020000.840003"	"{'8.2', 'T-0-3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.2"	"T-0-4"	""	""	""	""	""	"8.2/T-0-4"	""">8.2/T-0-4] MUST ensure a random read performance of at least 3.5MB/s. If Television device implementations include features to improve device power management that are included in AOSP or extend the features that are included in AOSP, they: [<a href=""#8_3_power_saving_modes"""""	"08020000.840004"	"{'T-0-4', '8.2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.3"	"T-1-1"	""	""	""	""	""	"8.3/T-1-1"	""">8.3/T-1-1] MUST provide user affordance to enable and disable the battery saver feature. If Television device implementations do not have a battery they: [<a href=""#8_3_power_saving_modes"""""	"08030000.840101"	"{'T-1-1', '8.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.3"	"T-1-2"	""	""	""	""	""	"8.3/T-1-2"	""">8.3/T-1-2] MUST register the device as a batteryless device as described in Supporting Batteryless Devices. If Television device implementations have a battery they: [<a href=""#8_3_power_saving_modes"""""	"08030000.840102"	"{'T-1-2', '8.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.3"	"T-1-3"	""	""	""	""	""	"8.3/T-1-3"	""">8.3/T-1-3] MUST provide user affordance to display all apps that are exempted from App Standby and Doze power-saving modes. Television device implementations: [<a href=""#8_4_power_consumption_accounting"""""	"08030000.840103"	"{'T-1-3', '8.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"T-0-1"	""	""	""	""	""	"8.4/T-0-1"	""">8.4/T-0-1] MUST provide a per-component power profile that defines the current consumption value for each hardware component and the approximate battery drain caused by the components over time as documented in the Android Open Source Project site. [<a href=""#8_4_power_consumption_accounting"""""	"08040000.840001"	"{'8.4', 'T-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"T-0-2"	""	""	""	""	""	"8.4/T-0-2"	""">8.4/T-0-2] MUST report all power consumption values in milliampere hours (mAh). [<a href=""#8_4_power_consumption_accounting"""""	"08040000.840002"	"{'T-0-2', '8.4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"T-0-3"	""	""	""	""	""	"8.4/T-0-3"	""">8.4/T-0-3] MUST report CPU power consumption per each process's UID. The Android Open Source Project meets the requirement through the uid_cputime kernel module implementation. [8.4/T] SHOULD be attributed to the hardware component itself if unable to attribute hardware component power usage to an application. [<a href=""#8_4_power_consumption_accounting"""""	"08040000.840003"	"{'CPU', '8.4', 'T-0-3', 'UID'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"T-0-4"	""	""	""	""	""	"8.4/T-0-4"	""">8.4/T-0-4] MUST make this power usage available via the adb shell dumpsys batterystats shell command to the app developer. 2.3.5. Security Model Television device implementations: [<a href=""#9_11_permissions"""""	"08040000.840004"	"{'T-0-4', '8.4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.11"	"T-0-1"	""	""	""	""	""	"9.11/T-0-1"	""">9.11/T-0-1] MUST back up the keystore implementation with an isolated execution environment. [<a href=""#9_11_permissions"""""	"09110000.840001"	"{'9.11', 'T-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.11"	"T-0-2"	""	""	""	""	""	"9.11/T-0-2"	""">9.11/T-0-2] MUST have implementations of RSA, AES, ECDSA and HMAC cryptographic algorithms and MD5, SHA1, and SHA-2 family hash functions to properly support the Android Keystore system's supported algorithms in an area that is securely isolated from the code running on the kernel and above. Secure isolation MUST block all potential mechanisms by which kernel or userspace code might access the internal state of the isolated environment, including DMA. The upstream Android Open Source Project (AOSP) meets this requirement by using the Trusty implementation, but another ARM TrustZone-based solution or a third-party reviewed secure implementation of a proper hypervisor-based isolation are alternative options. [<a href=""#9_11_permissions"""""	"09110000.840002"	"{'AES', 'T-0-2', 'MD5', 'ECDSA', 'RSA', 'SHA1', 'SHA', 'HMAC', '9.11', 'ARM', 'DMA'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.11"	"T-0-3"	""	""	""	""	""	"9.11/T-0-3"	""">9.11/T-0-3] MUST perform the lock screen authentication in the isolated execution environment and only when successful, allow the authentication-bound keys to be used. Lock screen credentials MUST be stored in a way that allows only the isolated execution environment to perform lock screen authentication. The upstream Android Open Source Project provides the Gatekeeper Hardware Abstraction Layer (HAL) and Trusty, which can be used to satisfy this requirement. [<a href=""#9_11_permissions"""""	"09110000.840003"	"{'HAL', 'T-0-3', '9.11'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.11"	"T-0-4"	""	""	""	""	""	"9.11/T-0-4"	""">9.11/T-0-4] MUST support key attestation where the attestation signing key is protected by secure hardware and signing is performed in secure hardware. The attestation signing keys MUST be shared across large enough number of devices to prevent the keys from being used as device identifiers. One way of meeting this requirement is to share the same attestation key unless at least 100,000 units of a given SKU are produced. If more than 100,000 units of an SKU are produced, a different key MAY be used for each 100,000 units. Note that if a device implementation is already launched on an earlier Android version, such a device is exempted from the requirement to have a keystore backed by an isolated execution environment and support the key attestation, unless it declares the android.hardware.fingerprint feature which requires a keystore backed by an isolated execution environment. If Television device implementations support a secure lock screen, they: [<a href=""#9_11_permissions"""""	"09110000.840004"	"{'T-0-4', 'SKU', '9.11', 'android.hardware.fingerprint'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.11"	"T-1-1"	""	""	""	""	""	"9.11/T-1-1"	""">9.11/T-1-1] MUST allow the user to choose the Sleep timeout for transition from the unlocked to the locked state, with a minimum allowable timeout up to 15 seconds or less. If Television device implementations include multiple users and do not declare the android.hardware.telephony feature flag, they: [<a href=""#9_5_multi-user-support"""""	"09110000.840101"	"{'android.hardware.telephony', 'T-1-1', '9.11'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.5"	"T-2-1"	""	""	""	""	""	"9.5/T-2-1"	""">9.5/T-2-1] MUST support restricted profiles, a feature that allows device owners to manage additional users and their capabilities on the device. With restricted profiles, device owners can quickly set up separate environments for additional users to work in, with the ability to manage finer-grained restrictions in the apps that are available in those environments. If Television device implementations include multiple users and declare the android.hardware.telephony feature flag, they: [<a href=""#9_5_multi-user-support"" && >9.5/T-2-1] MUST support restricted profiles, a feature that allows device owners to manage additional users and their capabilities on the device. With restricted profiles, device owners can quickly set up separate environments for additional users to work in, with the ability to manage finer-grained restrictions in the apps that are available in those environments. If Television device implementations include multiple users and declare the android.hardware.telephony feature flag, they: [<a href=""#9_5_multi-user-support"" | >9.5/T-2-1] MUST NOT support restricted profiles but MUST align with the AOSP implementation of controls to enable /disable other users from accessing the voice calls and SMS. 2.6.2. Software [<a href=""#3_2_3_1_common_application_intents"""""	"09050000.840201"	"{'android.hardware.telephony', 'T-2-1', '9.5', 'SMS'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.5"	"T-3-1"	""	""	""	""	""	"9.5/T-3-1"	""">9.5/T-3-1] MUST NOT support restricted profiles but MUST align with the AOSP implementation of controls to enable /disable other users from accessing the voice calls and SMS. 2.3.6. Developer Tools and Options Compatibility Television device implementations: Perfetto [<a href=""#6_1_developer_tools"""""	"09050000.840301"	"{'9.5', 'T-3-1', 'SMS'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"6.1"	"T-0-1"	""	""	""	""	""	"6.1/T-0-1"	""">6.1/T-0-1] MUST expose a /system/bin/perfetto binary to the shell user which cmdline complies with the perfetto documentation. [<a href=""#6_1_developer_tools"""""	"06010000.840001"	"{'T-0-1', '6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"6.1"	"T-0-2"	""	""	""	""	""	"6.1/T-0-2"	""">6.1/T-0-2] The perfetto binary MUST accept as input a protobuf config that complies with the schema defined in the perfetto documentation. [<a href=""#6_1_developer_tools"""""	"06010000.840002"	"{'T-0-2', '6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"6.1"	"T-0-3"	""	""	""	""	""	"6.1/T-0-3"	""">6.1/T-0-3] The perfetto binary MUST write as output a protobuf trace that complies with the schema defined in the perfetto documentation. [<a href=""#6_1_developer_tools"""""	"06010000.840003"	"{'T-0-3', '6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"6.1"	"T-0-4"	""	""	""	""	""	"6.1/T-0-4"	""">6.1/T-0-4] MUST provide, through the perfetto binary, at least the data sources described in the perfetto documentation. 2.4. Watch Requirements An Android Watch device refers to an Android device implementation intended to be worn on the body, perhaps on the wrist. Android device implementations are classified as a Watch if they meet all the following criteria: Have a screen with the physical diagonal length in the range from 1.1 to 2.5 inches. Have a mechanism provided to be worn on the body. The additional requirements in the rest of this section are specific to Android Watch device implementations. 2.4.1. Hardware Watch device implementations: [<a href=""#7_1_display_and_graphics"""""	"06010000.840004"	"{'T-0-4', '6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.1.1.1"	"W-0-1"	""	""	""	""	""	"7.1.1.1/W-0-1"	""">7.1.1.1/W-0-1] MUST have a screen with the physical diagonal size in the range from 1.1 to 2.5 inches. [<a href=""#7_2_input_devices"""""	"07010101.870001"	"{'7.1.1.1', 'W-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.2.3"	"W-0-1"	""	""	""	""	""	"7.2.3/W-0-1"	""">7.2.3/W-0-1] MUST have the Home function available to the user, and the Back function except for when it is in UI_MODE_TYPE_WATCH. [<a href=""#7_2_input_devices"""""	"07020300.870001"	"{'MODE_TYPE_WATCH', '7.2.3', 'W-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.2.4"	"W-0-1"	""	""	""	""	""	"7.2.4/W-0-1"	""">7.2.4/W-0-1] MUST support touchscreen input. [7.3.1/W-SR] Are STRONGLY RECOMMENDED to include a 3-axis accelerometer. If Watch device implementations include a GPS/GNSS receiver and report the capability to applications through the android.hardware.location.gps feature flag, they: [<a href=""#7_3_sensors"""""	"07020400.870001"	"{'GPS', 'GNSS', 'android.hardware.location.gps', 'W-0-1', 'RECOMMENDED', '7.2.4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.3"	"W-1-1"	""	""	""	""	""	"7.3.3/W-1-1"	""">7.3.3/W-1-1] MUST report GNSS measurements, as soon as they are found, even if a location calculated from GPS/GNSS is not yet reported. [<a href=""#7_3_sensors"""""	"07030300.870101"	"{'GPS', '7.3.3', 'GNSS', 'W-1-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.3"	"W-1-2"	""	""	""	""	""	"7.3.3/W-1-2"	""">7.3.3/W-1-2] MUST report GNSS pseudoranges and pseudorange rates, that, in open-sky conditions after determining the location, while stationary or moving with less than 0.2 meter per second squared of acceleration, are sufficient to calculate position within 20 meters, and speed within 0.2 meters per second, at least 95% of the time. If Watch device implementations include a 3-axis gyroscope, they: [<a href=""#7_3_sensors"""""	"07030300.870102"	"{'W-1-2', '7.3.3', 'GNSS'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.4"	"W-2-1"	""	""	""	""	""	"7.3.4/W-2-1"	""">7.3.4/W-2-1] MUST be capable of measuring orientation changes up to 1000 degrees per second. Watch device implementations: [<a href=""#7_4_data_connectivity"""""	"07030400.870201"	"{'W-2-1', '7.3.4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.4.3"	"W-0-1"	""	""	""	""	""	"7.4.3/W-0-1"	""">7.4.3/W-0-1] MUST support Bluetooth. [<a href=""#7_6_memory_and_storage"""""	"07040300.870001"	"{'W-0-1', '7.4.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"W-0-1"	""	""	""	""	""	"7.6.1/W-0-1"	""">7.6.1/W-0-1] MUST have at least 1 GB of non-volatile storage available for application private data (a.k.a. ""/data"" partition). [<a href=""#7_6_memory_and_storage"""""	"07060100.870001"	"{'7.6.1', 'W-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"W-0-2"	""	""	""	""	""	"7.6.1/W-0-2"	""">7.6.1/W-0-2] MUST have at least 416 MB memory available to the kernel and userspace. [<a href=""#7_8_audio"""""	"07060100.870002"	"{'W-0-2', '7.6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.1"	"W-0-1"	""	""	""	""	""	"7.8.1/W-0-1"	""">7.8.1/W-0-1] MUST include a microphone. [7.8.2/W] MAY have audio output. 2.4.2. Multimedia No additional requirements. 2.4.3. Software Watch device implementations: [<a href=""#3_0_intro"""""	"07080100.870001"	"{'W-0-1', '7.8.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3"	"W-0-1"	""	""	""	""	""	"3/W-0-1"	""">3/W-0-1] MUST declare the feature android.hardware.type.watch. [<a href=""#3_0_intro"""""	"03000000.870001"	"{'android.hardware.type.watch', 'W-0-1', '3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3"	"W-0-2"	""	""	""	""	""	"3/W-0-2"	""">3/W-0-2] MUST support uiMode = UI_MODE_TYPE_WATCH. [<a href=""#3_2_3_1_common_application_intents"""""	"03000000.870002"	"{'MODE_TYPE_WATCH', 'W-0-2', '3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.2.3.1"	"W-0-1"	""	""	""	""	""	"3.2.3.1/W-0-1"	""">3.2.3.1/W-0-1] MUST preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here. Watch device implementations: [3.8.4/W-SR] Are STRONGLY RECOMMENDED to implement an assistant on the device to handle the Assist action. Watch device implementations that declare the android.hardware.audio.output feature flag: [<a href=""#3_10_accessibility"""""	"03020301.870001"	"{'android.hardware.audio.output', '3.2.3.1', 'W-0-1', 'RECOMMENDED'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.10"	"W-1-1"	""	""	""	""	""	"3.10/W-1-1"	""">3.10/W-1-1] MUST support third-party accessibility services. [3.10/W-SR] Are STRONGLY RECOMMENDED to preload accessibility services on the device comparable with or exceeding functionality of the Switch Access and TalkBack (for languages supported by the preinstalled Text-to-speech engine) accessibility services as provided in the talkback open source project. If Watch device implementations report the feature android.hardware.audio.output, they: [3.11/W-SR] Are STRONGLY RECOMMENDED to include a TTS engine supporting the languages available on the device. [<a href=""#3_11_text_to_speech"""""	"03100000.870101"	"{'android.hardware.audio.output', 'TTS', 'RECOMMENDED', '3.10', 'W-1-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.11"	"W-0-1"	""	""	""	""	""	"3.11/W-0-1"	""">3.11/W-0-1] MUST support installation of third-party TTS engines. 2.4.4. Performance and Power If Watch device implementations include features to improve device power management that are included in AOSP or extend the features that are included in AOSP, they: [8.3/W-SR] Are STRONGLY RECOMMENDED to provide user affordance to display all apps that are exempted from App Standby and Doze power-saving modes. [8.3/W-SR] Are STRONGLY RECOMMENDED to provide user affordance to enable and disable the battery saver feature. Watch device implementations: [<a href=""#8_4_power_consumption_accounting"""""	"03110000.870001"	"{'TTS', '3.11', 'W-0-1', 'RECOMMENDED'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"W-0-1"	""	""	""	""	""	"8.4/W-0-1"	""">8.4/W-0-1] MUST provide a per-component power profile that defines the current consumption value for each hardware component and the approximate battery drain caused by the components over time as documented in the Android Open Source Project site. [<a href=""#8_4_power_consumption_accounting"""""	"08040000.870001"	"{'8.4', 'W-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"W-0-2"	""	""	""	""	""	"8.4/W-0-2"	""">8.4/W-0-2] MUST report all power consumption values in milliampere hours (mAh). [<a href=""#8_4_power_consumption_accounting"""""	"08040000.870002"	"{'8.4', 'W-0-2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"W-0-3"	""	""	""	""	""	"8.4/W-0-3"	""">8.4/W-0-3] MUST report CPU power consumption per each process's UID. The Android Open Source Project meets the requirement through the uid_cputime kernel module implementation. [<a href=""#8_4_power_consumption_accounting"""""	"08040000.870003"	"{'CPU', '8.4', 'W-0-3', 'UID'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"W-0-4"	""	""	""	""	""	"8.4/W-0-4"	""">8.4/W-0-4] MUST make this power usage available via the adb shell dumpsys batterystats shell command to the app developer. [8.4/W] SHOULD be attributed to the hardware component itself if unable to attribute hardware component power usage to an application. 2.4.5. Security Model If Watch device implementations include multiple users and do not declare the android.hardware.telephony feature flag, they: [<a href=""#9_5_multi-user-support"""""	"08040000.870004"	"{'android.hardware.telephony', '8.4', 'W-0-4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.5"	"W-1-1"	""	""	""	""	""	"9.5/W-1-1"	""">9.5/W-1-1] MUST support restricted profiles, a feature that allows device owners to manage additional users and their capabilities on the device. With restricted profiles, device owners can quickly set up separate environments for additional users to work in, with the ability to manage finer-grained restrictions in the apps that are available in those environments. If Watch device implementations include multiple users and declare the android.hardware.telephony feature flag, they: [<a href=""#9_5_multi-user-support"""""	"09050000.870101"	"{'android.hardware.telephony', '9.5', 'W-1-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.5"	"W-2-1"	""	""	""	""	""	"9.5/W-2-1"	""">9.5/W-2-1] MUST NOT support restricted profiles but MUST align with the AOSP implementation of controls to enable /disable other users from accessing the voice calls and SMS. 2.5. Automotive Requirements Android Automotive implementation refers to a vehicle head unit running Android as an operating system for part or all of the system and/or infotainment functionality. Android device implementations are classified as an Automotive if they declare the feature android.hardware.type.automotive or meet all the following criteria. Are embedded as part of, or pluggable to, an automotive vehicle. Are using a screen in the driver's seat row as the primary display. The additional requirements in the rest of this section are specific to Android Automotive device implementations. 2.5.1. Hardware Automotive device implementations: [<a href=""#7_1_display_and-graphics"""""	"09050000.870201"	"{'W-2-1', 'android.hardware.type.automotive', '9.5', 'SMS'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.1.1.1"	"A-0-1"	""	""	""	""	""	"7.1.1.1/A-0-1"	""">7.1.1.1/A-0-1] MUST have a screen at least 6 inches in physical diagonal size. [<a href=""#7_1_display_and_graphics"""""	"07010101.650001"	"{'7.1.1.1', 'A-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.1.1.1"	"A-0-2"	""	""	""	""	""	"7.1.1.1/A-0-2"	""">7.1.1.1/A-0-2] MUST have a screen size layout of at least 750 dp x 480 dp. [<a href=""#7_2_input_devices"""""	"07010101.650002"	"{'A-0-2', '7.1.1.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.2.3"	"A-0-1"	""	""	""	""	""	"7.2.3/A-0-1"	""">7.2.3/A-0-1] MUST provide the Home function and MAY provide Back and Recent functions. [<a href=""#7_2_input_devices"""""	"07020300.650001"	"{'7.2.3', 'A-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.2.3"	"A-0-2"	""	""	""	""	""	"7.2.3/A-0-2"	""">7.2.3/A-0-2] MUST send both the normal and long press event of the Back function (KEYCODE_BACK) to the foreground application. [<a href=""#7_3_sensors"""""	"07020300.650002"	"{'A-0-2', 'KEYCODE_BACK', '7.2.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3"	"A-0-1"	""	""	""	""	""	"7.3/A-0-1"	""">7.3/A-0-1] MUST implement and report GEAR_SELECTION, NIGHT_MODE, PERF_VEHICLE_SPEED and PARKING_BRAKE_ON. [<a href=""#7_3_sensors"" && >7.3/A-0-1] MUST implement and report GEAR_SELECTION, NIGHT_MODE, PERF_VEHICLE_SPEED and PARKING_BRAKE_ON. [<a href=""#7_3_sensors"" | >7.3/A-0-1] MAY dead reckon Location by fusing GPS/GNSS with additional sensors. If Location is dead reckoned, it is STRONGLY RECOMMENDED to implement and report the corresponding Sensor types and/or Vehicle Property IDs used. [<a href=""#7_3_sensors"""""	"07030000.650001"	"{'PERF_VEHICLE_SPEED', 'GPS', 'GNSS', 'GEAR_SELECTION', 'NIGHT_MODE', 'RECOMMENDED', 'A-0-1', '7.3', 'PARKING_BRAKE_ON'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3"	"A-0-2"	""	""	""	""	""	"7.3/A-0-2"	""">7.3/A-0-2] The value of the NIGHT_MODE flag MUST be consistent with dashboard day/night mode and SHOULD be based on ambient light sensor input. The underlying ambient light sensor MAY be the same as Photometer. [<a href=""#7_3_sensors"" && >7.3/A-0-2] The value of the NIGHT_MODE flag MUST be consistent with dashboard day/night mode and SHOULD be based on ambient light sensor input. The underlying ambient light sensor MAY be the same as Photometer. [<a href=""#7_3_sensors"" | >7.3/A-0-2] The Location requested via LocationManager#requestLocationUpdates() MUST NOT be map matched. If Automotive device implementations include a 3-axis accelerometer, they: [<a href=""#7_3_sensors"""""	"07030000.650002"	"{'A-0-2', 'requestLocationUpdates()', 'NIGHT_MODE', '7.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3"	"A-0-3"	""	""	""	""	""	"7.3/A-0-3"	""">7.3/A-0-3] MUST provide sensor additional info field TYPE_SENSOR_PLACEMENT as part of SensorAdditionalInfo for every sensor provided. [<a href=""#7_3_sensors"""""	"07030000.650003"	"{'7.3', 'A-0-3', 'TYPE_SENSOR_PLACEMENT'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.1"	"A-1-1"	""	""	""	""	""	"7.3.1/A-1-1"	""">7.3.1/A-1-1] MUST be able to report events up to a frequency of at least 100 Hz. [<a href=""#7_3_sensors"""""	"07030100.650101"	"{'A-1-1', '7.3.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.1"	"A-1-2"	""	""	""	""	""	"7.3.1/A-1-2"	""">7.3.1/A-1-2] MUST comply with the Android car sensor coordinate system. If Automotive device implementations include a 3-axis gyroscope, they: [<a href=""#7_3_sensors"""""	"07030100.650102"	"{'A-1-2', '7.3.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.4"	"A-2-1"	""	""	""	""	""	"7.3.4/A-2-1"	""">7.3.4/A-2-1] MUST be able to report events up to a frequency of at least 100 Hz. [<a href=""#7_3_sensors"""""	"07030400.650201"	"{'A-2-1', '7.3.4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.4"	"A-2-2"	""	""	""	""	""	"7.3.4/A-2-2"	""">7.3.4/A-2-2] MUST also implement the TYPE_GYROSCOPE_UNCALIBRATED sensor. [<a href=""#7_3_sensors"""""	"07030400.650202"	"{'7.3.4', 'A-2-2', 'TYPE_GYROSCOPE_UNCALIBRATED'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.4"	"A-2-3"	""	""	""	""	""	"7.3.4/A-2-3"	""">7.3.4/A-2-3] MUST be capable of measuring orientation changes up to 250 degrees per second. [7.3.4/A-SR] Are STRONGLY RECOMMENDED to configure the gyroscope’s measurement range to +/-250dps in order to maximize the resolution possible If Automotive device implementations include a GPS/GNSS receiver, but do not include cellular network-based data connectivity, they: [<a href=""#7_3_sensors"""""	"07030400.650203"	"{'GPS', 'GNSS', 'A-2-3', '7.3.4', 'RECOMMENDED'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.3"	"A-3-1"	""	""	""	""	""	"7.3.3/A-3-1"	""">7.3.3/A-3-1] MUST determine location the very first time the GPS/GNSS receiver is turned on or after 4+ days within 60 seconds. [<a href=""#7_3_sensors"""""	"07030300.650301"	"{'GPS', '7.3.3', 'GNSS', 'A-3-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.3"	"A-3-2"	""	""	""	""	""	"7.3.3/A-3-2"	""">7.3.3/A-3-2] MUST meet the time-to-first-fix criteria as described in <a href=""#7_3_3_gps"""""	"07030300.650302"	"{'7.3.3', 'A-3-2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.3"	"C-1-2"	""	""	""	""	""	"7.3.3/C-1-2"	""">7.3.3/C-1-2 and <a href=""#7_3_3_gps"" && >7.3.3/C-1-2 and <a href=""#7_3_3_gps"" | >7.3.3/C-1-2 is typically met in vehicles without cellular network-based data connectivity, by using GNSS orbit predictions calculated on the receiver, or using the last known vehicle location along with the ability to dead reckon for at least 60 seconds with a position accuracy satisfying <a href=""#7_3_3_gps"""""	"07030300.670102"	"{'7.3.3', 'GNSS', 'C-1-2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.3"	"C-1-6"	""	""	""	""	""	"7.3.3/C-1-6"	""">7.3.3/C-1-6 for all other location requests (i.e requests which are not the first time ever or after 4+ days). The requirement <a href=""#7_3_3_gps"""""	"07030300.670106"	"{'7.3.3', 'C-1-6'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.3"	"C-1-3"	""	""	""	""	""	"7.3.3/C-1-3"	""">7.3.3/C-1-3, or a combination of both. Automotive device implementations: [<a href=""#7_4_data_connectivity"""""	"07030300.670103"	"{'C-1-3', '7.3.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.4.3"	"A-0-1"	""	""	""	""	""	"7.4.3/A-0-1"	""">7.4.3/A-0-1] MUST support Bluetooth and SHOULD support Bluetooth LE. [<a href=""#7_4_data_connectivity"""""	"07040300.650001"	"{'A-0-1', '7.4.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.4.3"	"A-0-2"	""	""	""	""	""	"7.4.3/A-0-2"	""">7.4.3/A-0-2] Android Automotive implementations MUST support the following Bluetooth profiles: Phone calling over Hands-Free Profile (HFP). Media playback over Audio Distribution Profile (A2DP). Media playback control over Remote Control Profile (AVRCP). Contact sharing using the Phone Book Access Profile (PBAP). [7.4.3/A-SR] Are STRONGLY RECOMMENDED to support Message Access Profile (MAP). [7.4.5/A] SHOULD include support for cellular network-based data connectivity. [7.4.5/A] MAY use the System API NetworkCapabilities#NET_CAPABILITY_OEM_PAID constant for networks that should be available to system apps. An exterior view camera is a camera that images scenes outside of the device implementation, like a dashcam. Automotive device implementations: SHOULD include one or more exterior view cameras. If Automotive device implementations include an exterior view camera, for such a camera, they: [<a href=""#7_5_cameras"""""	"07040300.650002"	"{'A2DP', 'NET_CAPABILITY_OEM_PAID', 'HFP', '7.4.3', 'PBAP', 'AVRCP', 'RECOMMENDED', 'A-0-2', 'MAP'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.5"	"A-1-1"	""	""	""	""	""	"7.5/A-1-1"	""">7.5/A-1-1] MUST NOT have exterior view cameras accessible via the Android Camera APIs, unless they comply with camera core requirements. [7.5/A-SR] Are STRONGLY RECOMMENDED not to rotate or horizontally mirror the camera preview. [7.5.5/A-SR] Are STRONGLY RECOMMENDED to be oriented so that the long dimension of the camera aligns with the horizon. [7.5/A-SR] Are STRONGLY RECOMMENDED to have a resolution of at least 1.3 megapixels. SHOULD have either fixed-focus or EDOF (extended depth of field) hardware. SHOULD support Android Synchronization Framework. MAY have either hardware auto-focus or software auto-focus implemented in the camera driver. Automotive device implementations: [<a href=""#7_6_memory_and_storage"""""	"07050000.650101"	"{'EDOF', 'A-1-1', '7.5', 'RECOMMENDED'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"A-0-1"	""	""	""	""	""	"7.6.1/A-0-1"	""">7.6.1/A-0-1] MUST have at least 4 GB of non-volatile storage available for application private data (a.k.a. ""/data"" partition). [7.6.1/A] SHOULD format the data partition to offer improved performance and longevity on flash storage, for example using f2fs file-system. If Automotive device implementations provide shared external storage via a portion of the internal non-removable storage, they: [7.6.1/A-SR] Are STRONGLY RECOMMENDED to reduce I/O overhead on operations performed on the external storage, for example by using SDCardFS. If Automotive device implementations are 32-bit: [<a href=""#7_6_memory_and_storage"""""	"07060100.650001"	"{'7.6.1', 'SDC', 'RECOMMENDED', 'A-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"A-1-1"	""	""	""	""	""	"7.6.1/A-1-1"	""">7.6.1/A-1-1] The memory available to the kernel and userspace MUST be at least 512MB if any of the following densities are used: 280dpi or lower on small/normal screens ldpi or lower on extra large screens mdpi or lower on large screens [<a href=""#7_6_memory_and_storage"""""	"07060100.650101"	"{'A-1-1', '7.6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"A-1-2"	""	""	""	""	""	"7.6.1/A-1-2"	""">7.6.1/A-1-2] The memory available to the kernel and userspace MUST be at least 608MB if any of the following densities are used: xhdpi or higher on small/normal screens hdpi or higher on large screens mdpi or higher on extra large screens [<a href=""#7_6_memory_and_storage"""""	"07060100.650102"	"{'7.6.1', 'A-1-2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"A-1-3"	""	""	""	""	""	"7.6.1/A-1-3"	""">7.6.1/A-1-3] The memory available to the kernel and userspace MUST be at least 896MB if any of the following densities are used: 400dpi or higher on small/normal screens xhdpi or higher on large screens tvdpi or higher on extra large screens [<a href=""#7_6_memory_and_storage"""""	"07060100.650103"	"{'7.6.1', 'A-1-3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"A-1-4"	""	""	""	""	""	"7.6.1/A-1-4"	""">7.6.1/A-1-4] The memory available to the kernel and userspace MUST be at least 1344MB if any of the following densities are used: 560dpi or higher on small/normal screens 400dpi or higher on large screens xhdpi or higher on extra large screens If Automotive device implementations are 64-bit: [<a href=""#7_6_memory_and_storage"""""	"07060100.650104"	"{'A-1-4', '7.6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"A-2-1"	""	""	""	""	""	"7.6.1/A-2-1"	""">7.6.1/A-2-1] The memory available to the kernel and userspace MUST be at least 816MB if any of the following densities are used: 280dpi or lower on small/normal screens ldpi or lower on extra large screens mdpi or lower on large screens [<a href=""#7_6_memory_and_storage"""""	"07060100.650201"	"{'7.6.1', 'A-2-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"A-2-2"	""	""	""	""	""	"7.6.1/A-2-2"	""">7.6.1/A-2-2] The memory available to the kernel and userspace MUST be at least 944MB if any of the following densities are used: xhdpi or higher on small/normal screens hdpi or higher on large screens mdpi or higher on extra large screens [<a href=""#7_6_memory_and_storage"""""	"07060100.650202"	"{'A-2-2', '7.6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"A-2-3"	""	""	""	""	""	"7.6.1/A-2-3"	""">7.6.1/A-2-3] The memory available to the kernel and userspace MUST be at least 1280MB if any of the following densities are used: 400dpi or higher on small/normal screens xhdpi or higher on large screens tvdpi or higher on extra large screens [<a href=""#7_6_memory_and_storage"""""	"07060100.650203"	"{'A-2-3', '7.6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.6.1"	"A-2-4"	""	""	""	""	""	"7.6.1/A-2-4"	""">7.6.1/A-2-4] The memory available to the kernel and userspace MUST be at least 1824MB if any of the following densities are used: 560dpi or higher on small/normal screens 400dpi or higher on large screens xhdpi or higher on extra large screens Note that the ""memory available to the kernel and userspace"" above refers to the memory space provided in addition to any memory already dedicated to hardware components such as radio, video, and so on that are not under the kernel’s control on device implementations. Automotive device implementations: [7.7.1/A] SHOULD include a USB port supporting peripheral mode. Automotive device implementations: [<a href=""#7_8_audio"""""	"07060100.650204"	"{'A-2-4', 'USB', '7.6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.1"	"A-0-1"	""	""	""	""	""	"7.8.1/A-0-1"	""">7.8.1/A-0-1] MUST include a microphone. Automotive device implementations: [<a href=""#7_8_audio"""""	"07080100.650001"	"{'A-0-1', '7.8.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.8.2"	"A-0-1"	""	""	""	""	""	"7.8.2/A-0-1"	""">7.8.2/A-0-1] MUST have an audio output and declare android.hardware.audio.output. 2.5.2. Multimedia Automotive device implementations MUST support the following audio encoding and decoding formats and make them available to third-party applications: [<a href=""#5_1_media_codecs"""""	"07080200.650001"	"{'android.hardware.audio.output', '7.8.2', 'A-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.1"	"A-0-1"	""	""	""	""	""	"5.1/A-0-1"	""">5.1/A-0-1] MPEG-4 AAC Profile (AAC LC) [<a href=""#5_1_media_codecs"""""	"05010000.650001"	"{'5.1', 'MPEG', 'AAC', 'A-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.1"	"A-0-2"	""	""	""	""	""	"5.1/A-0-2"	""">5.1/A-0-2] MPEG-4 HE AAC Profile (AAC+) [<a href=""#5_1_media_codecs"""""	"05010000.650002"	"{'A-0-2', '5.1', 'MPEG', 'AAC'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.1"	"A-0-3"	""	""	""	""	""	"5.1/A-0-3"	""">5.1/A-0-3] AAC ELD (enhanced low delay AAC) Automotive device implementations MUST support the following video encoding formats and make them available to third-party applications: [<a href=""#5_2_video_encoding"""""	"05010000.650003"	"{'5.1', 'ELD', 'A-0-3', 'AAC'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.2"	"A-0-1"	""	""	""	""	""	"5.2/A-0-1"	""">5.2/A-0-1] H.264 AVC [<a href=""#5_2_video_encoding"""""	"05020000.650001"	"{'5.2', 'A-0-1', 'AVC'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.2"	"A-0-2"	""	""	""	""	""	"5.2/A-0-2"	""">5.2/A-0-2] VP8 Automotive device implementations MUST support the following video decoding formats and make them available to third-party applications: [<a href=""#5_3_video_decoding"""""	"05020000.650002"	"{'A-0-2', '5.2', 'VP8'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3"	"A-0-1"	""	""	""	""	""	"5.3/A-0-1"	""">5.3/A-0-1] H.264 AVC [<a href=""#5_3_video_decoding"""""	"05030000.650001"	"{'A-0-1', '5.3', 'AVC'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3"	"A-0-2"	""	""	""	""	""	"5.3/A-0-2"	""">5.3/A-0-2] MPEG-4 SP [<a href=""#5_3_video_decoding"""""	"05030000.650002"	"{'A-0-2', 'MPEG', '5.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3"	"A-0-3"	""	""	""	""	""	"5.3/A-0-3"	""">5.3/A-0-3] VP8 [<a href=""#5_3_video_decoding"""""	"05030000.650003"	"{'VP8', 'A-0-3', '5.3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"5.3"	"A-0-4"	""	""	""	""	""	"5.3/A-0-4"	""">5.3/A-0-4] VP9 Automotive device implementations are STRONGLY RECOMMENDED to support the following video decoding: [5.3/A-SR] H.265 HEVC 2.5.3. Software Automotive device implementations: [<a href=""#3_0_intro"""""	"05030000.650004"	"{'HEVC', 'A-0-4', 'VP9', '5.3', 'RECOMMENDED'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3"	"A-0-1"	""	""	""	""	""	"3/A-0-1"	""">3/A-0-1] MUST declare the feature android.hardware.type.automotive. [<a href=""#3_0_intro"""""	"03000000.650001"	"{'android.hardware.type.automotive', '3', 'A-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3"	"A-0-2"	""	""	""	""	""	"3/A-0-2"	""">3/A-0-2] MUST support uiMode = UI_MODE_TYPE_CAR. [<a href=""#3_0_intro"""""	"03000000.650002"	"{'A-0-2', 'MODE_TYPE_CAR', '3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3"	"A-0-3"	""	""	""	""	""	"3/A-0-3"	""">3/A-0-3] MUST support all public APIs in the android.car.* namespace. If Automotive device implementations provide a proprietary API using android.car.CarPropertyManager with android.car.VehiclePropertyIds, they: [<a href=""#3_0_intro"""""	"03000000.650003"	"{'android.car.VehiclePropertyIds', '3', 'android.car', 'android.car.CarPropertyManager', 'A-0-3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3"	"A-1-1"	""	""	""	""	""	"3/A-1-1"	""">3/A-1-1] MUST NOT attach special privileges to system application's use of these properties, or prevent third-party applications from using these properties. [<a href=""#3_0_intro"""""	"03000000.650101"	"{'A-1-1', '3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3"	"A-1-2"	""	""	""	""	""	"3/A-1-2"	""">3/A-1-2] MUST NOT replicate a vehicle property that already exists in the SDK. Automotive device implementations: [<a href=""#3_2_soft_api_compatibility"""""	"03000000.650102"	"{'A-1-2', '3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.2.1"	"A-0-1"	""	""	""	""	""	"3.2.1/A-0-1"	""">3.2.1/A-0-1] MUST support and enforce all permissions constants as documented by the Automotive Permission reference page. [<a href=""#3_2_3_1_common_application_intents"""""	"03020100.650001"	"{'A-0-1', '3.2.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.2.3.1"	"A-0-1"	""	""	""	""	""	"3.2.3.1/A-0-1"	""">3.2.3.1/A-0-1] MUST preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here. [<a href=""#3_4_web_compatibility"""""	"03020301.650001"	"{'3.2.3.1', 'A-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.4.1"	"A-0-1"	""	""	""	""	""	"3.4.1/A-0-1"	""">3.4.1/A-0-1] MUST provide a complete implementation of the android.webkit.Webview API. [<a href=""#3_8_user_interface_compatibility"""""	"03040100.650001"	"{'A-0-1', 'android.webkit.Webview', '3.4.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.3"	"A-0-1"	""	""	""	""	""	"3.8.3/A-0-1"	""">3.8.3/A-0-1] MUST display notifications that use the Notification.CarExtender API when requested by third-party applications. [3.8.4/A-SR] Are Strongly Recommended to implement an assistant on the device to handle the Assist action. If Automotive device implementations include a push-to-talk button, they: [<a href=""#3_8_user_interface_compatibility"""""	"03080300.650001"	"{'3.8.3', 'Notification.CarExtender', 'A-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.4"	"A-1-1"	""	""	""	""	""	"3.8.4/A-1-1"	""">3.8.4/A-1-1] MUST use a short press of the push-to-talk button as the designated interaction to launch the user-selected assist app, in other words the app that implements VoiceInteractionService. Automotive device implementations: [<a href=""#3_8_3_1_presentation_of_notifications"""""	"03080400.650101"	"{'3.8.4', 'A-1-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.3.1"	"A-0-1"	""	""	""	""	""	"3.8.3.1/A-0-1"	""">3.8.3.1/A-0-1] MUST correctly render resources as described in the Notifications on Automotive OS SDK documentation. [<a href=""#3_8_3_1_presentation_of_notifications"""""	"03080301.650001"	"{'3.8.3.1', 'A-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.8.3.1"	"A-0-2"	""	""	""	""	""	"3.8.3.1/A-0-2"	""">3.8.3.1/A-0-2] MUST display PLAY and MUTE for notification actions in the place of those provided through Notification.Builder.addAction() [3.8.3.1/A] SHOULD restrict the use of rich management tasks such as per-notification-channel controls. MAY use UI affordance per application to reduce controls. Automotive device implementations: [<a href=""#3_14_media_ui"""""	"03080301.650002"	"{'PLAY', 'MUTE', '3.8.3.1', 'Notification.Builder.addAction', 'addAction()', 'A-0-2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.14"	"A-0-1"	""	""	""	""	""	"3.14/A-0-1"	""">3.14/A-0-1] MUST include a UI framework to support third-party apps using the media APIs as described in section 3.14. [<a href=""#3_14_media_ui"""""	"03140000.650001"	"{'3.14', 'A-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.14"	"A-0-2"	""	""	""	""	""	"3.14/A-0-2"	""">3.14/A-0-2] MUST allow the user to safely interact with Media Applications while driving. [<a href=""#3_14_media_ui"""""	"03140000.650002"	"{'A-0-2', '3.14'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.14"	"A-0-3"	""	""	""	""	""	"3.14/A-0-3"	""">3.14/A-0-3] MUST support the CAR_INTENT_ACTION_MEDIA_TEMPLATE implicit Intent action with the CAR_EXTRA_MEDIA_PACKAGE extra. [<a href=""#3_14_media_ui"""""	"03140000.650003"	"{'CAR_EXTRA_MEDIA_PACKAGE', 'CAR_INTENT_ACTION_MEDIA_TEMPLATE', '3.14', 'A-0-3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.14"	"A-0-4"	""	""	""	""	""	"3.14/A-0-4"	""">3.14/A-0-4] MUST provide an affordance to navigate into a Media Application’s preference activity, but MUST only enable it when Car UX Restrictions are not in effect. [<a href=""#3_14_media_ui"""""	"03140000.650004"	"{'3.14', 'A-0-4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.14"	"A-0-5"	""	""	""	""	""	"3.14/A-0-5"	""">3.14/A-0-5] MUST display error messages set by Media Applications, and MUST support the optional extras ERROR_RESOLUTION_ACTION_LABEL and ERROR_RESOLUTION_ACTION_INTENT. [<a href=""#3_14_media_ui"""""	"03140000.650005"	"{'A-0-5', '3.14', 'ERROR_RESOLUTION_ACTION_INTENT', 'ERROR_RESOLUTION_ACTION_LABEL'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.14"	"A-0-6"	""	""	""	""	""	"3.14/A-0-6"	""">3.14/A-0-6] MUST support an in-app search affordance for apps that support searching. [<a href=""#3_14_media_ui"""""	"03140000.650006"	"{'A-0-6', '3.14'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.14"	"A-0-7"	""	""	""	""	""	"3.14/A-0-7"	""">3.14/A-0-7] MUST respect CONTENT_STYLE_BROWSABLE_HINT and CONTENT_STYLE_PLAYABLE_HINT definitions when displaying the MediaBrowser hierarchy. If Automotive device implementations include a default launcher app, they: [<a href=""#3_14_media_ui"""""	"03140000.650007"	"{'3.14', 'CONTENT_STYLE_BROWSABLE_HINT', 'CONTENT_STYLE_PLAYABLE_HINT', 'A-0-7'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.14"	"A-1-1"	""	""	""	""	""	"3.14/A-1-1"	""">3.14/A-1-1] MUST include media services and open them with the CAR_INTENT_ACTION_MEDIA_TEMPLATE intent. Automotive device implementations: [3.8/A] MAY restrict the application requests to enter a full screen mode as described in immersive documentation. [3.8/A] MAY keep the status bar and the navigation bar visible at all times. [3.8/A] MAY restrict the application requests to change the colors behind the system UI elements, to ensure those elements are clearly visible at all times. 2.5.4. Performance and Power Automotive device implementations: [<a href=""#8_2_file_i/o_access_performance"""""	"03140000.650101"	"{'A-1-1', 'CAR_INTENT_ACTION_MEDIA_TEMPLATE', '3.14'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.2"	"A-0-1"	""	""	""	""	""	"8.2/A-0-1"	""">8.2/A-0-1] MUST report the number of bytes read and written to non-volatile storage per each process's UID so the stats are available to developers through System API android.car.storagemonitoring.CarStorageMonitoringManager. The Android Open Source Project meets the requirement through the uid_sys_stats kernel module. [<a href=""#8_3_power_saving_modes"""""	"08020000.650001"	"{'UID', 'android.car.storagemonitoring.CarStorageMonitoringManager', '8.2', 'A-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.3"	"A-1-3"	""	""	""	""	""	"8.3/A-1-3"	""">8.3/A-1-3] MUST support Garage Mode. [8.3/A] SHOULD be in Garage Mode for at least 15 minutes after every drive unless: The battery is drained. No idle jobs are scheduled. The driver exits Garage Mode. [<a href=""#8_4_power_consumption_accounting"""""	"08030000.650103"	"{'8.3', 'A-1-3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"A-0-1"	""	""	""	""	""	"8.4/A-0-1"	""">8.4/A-0-1] MUST provide a per-component power profile that defines the current consumption value for each hardware component and the approximate battery drain caused by the components over time as documented in the Android Open Source Project site. [<a href=""#8_4_power_consumption_accounting"""""	"08040000.650001"	"{'8.4', 'A-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"A-0-2"	""	""	""	""	""	"8.4/A-0-2"	""">8.4/A-0-2] MUST report all power consumption values in milliampere hours (mAh). [<a href=""#8_4_power_consumption_accounting"""""	"08040000.650002"	"{'A-0-2', '8.4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"A-0-3"	""	""	""	""	""	"8.4/A-0-3"	""">8.4/A-0-3] MUST report CPU power consumption per each process's UID. The Android Open Source Project meets the requirement through the uid_cputime kernel module implementation. [8.4/A] SHOULD be attributed to the hardware component itself if unable to attribute hardware component power usage to an application. [<a href=""#8_4_power_consumption_accounting"""""	"08040000.650003"	"{'CPU', '8.4', 'A-0-3', 'UID'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"8.4"	"A-0-4"	""	""	""	""	""	"8.4/A-0-4"	""">8.4/A-0-4] MUST make this power usage available via the adb shell dumpsys batterystats shell command to the app developer. 2.5.5. Security Model If Automotive device implementations support multiple users, they: [<a href=""#9_5_multi-user_support"""""	"08040000.650004"	"{'8.4', 'A-0-4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.5"	"A-1-1"	""	""	""	""	""	"9.5/A-1-1"	""">9.5/A-1-1] MUST NOT allow users to interact with nor switch into the Headless System User, except for device provisioning. [<a href=""#9_5_multi-user_support"""""	"09050000.650101"	"{'A-1-1', '9.5'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.5"	"A-1-2"	""	""	""	""	""	"9.5/A-1-2"	""">9.5/A-1-2] MUST switch into a Secondary User before BOOT_COMPLETED. [<a href=""#9_5_multi-user_support"""""	"09050000.650102"	"{'BOOT_COMPLETED', '9.5', 'A-1-2'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.5"	"A-1-3"	""	""	""	""	""	"9.5/A-1-3"	""">9.5/A-1-3] MUST support the ability to create a Guest User even when the maximum number of Users on a device has been reached. Automotive device implementations: [<a href=""#9_11_permissions"""""	"09050000.650103"	"{'9.5', 'A-1-3'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.11"	"A-0-1"	""	""	""	""	""	"9.11/A-0-1"	""">9.11/A-0-1] MUST back up the keystore implementation with an isolated execution environment. [<a href=""#9_11_permissions"""""	"09110000.650001"	"{'9.11', 'A-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.11"	"A-0-2"	""	""	""	""	""	"9.11/A-0-2"	""">9.11/A-0-2] MUST have implementations of RSA, AES, ECDSA and HMAC cryptographic algorithms and MD5, SHA1, and SHA-2 family hash functions to properly support the Android Keystore system's supported algorithms in an area that is securely isolated from the code running on the kernel and above. Secure isolation MUST block all potential mechanisms by which kernel or userspace code might access the internal state of the isolated environment, including DMA. The upstream Android Open Source Project (AOSP) meets this requirement by using the Trusty implementation, but another ARM TrustZone-based solution or a third-party reviewed secure implementation of a proper hypervisor-based isolation are alternative options. [<a href=""#9_11_permissions"""""	"09110000.650002"	"{'AES', 'MD5', 'ECDSA', 'RSA', 'SHA1', 'SHA', 'HMAC', '9.11', 'A-0-2', 'ARM', 'DMA'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.11"	"A-0-3"	""	""	""	""	""	"9.11/A-0-3"	""">9.11/A-0-3] MUST perform the lock screen authentication in the isolated execution environment and only when successful, allow the authentication-bound keys to be used. Lock screen credentials MUST be stored in a way that allows only the isolated execution environment to perform lock screen authentication. The upstream Android Open Source Project provides the Gatekeeper Hardware Abstraction Layer (HAL) and Trusty, which can be used to satisfy this requirement. [<a href=""#9_11_permissions"""""	"09110000.650003"	"{'HAL', 'A-0-3', '9.11'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.11"	"A-0-4"	""	""	""	""	""	"9.11/A-0-4"	""">9.11/A-0-4] MUST support key attestation where the attestation signing key is protected by secure hardware and signing is performed in secure hardware. The attestation signing keys MUST be shared across large enough number of devices to prevent the keys from being used as device identifiers. One way of meeting this requirement is to share the same attestation key unless at least 100,000 units of a given SKU are produced. If more than 100,000 units of an SKU are produced, a different key MAY be used for each 100,000 units. Note that if a device implementation is already launched on an earlier Android version, such a device is exempted from the requirement to have a keystore backed by an isolated execution environment and support the key attestation, unless it declares the android.hardware.fingerprint feature which requires a keystore backed by an isolated execution environment. Automotive device implementations: [<a href=""#9_14_automotive_system_isolation"""""	"09110000.650004"	"{'A-0-4', 'SKU', '9.11', 'android.hardware.fingerprint'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.14"	"A-0-1"	""	""	""	""	""	"9.14/A-0-1"	""">9.14/A-0-1] MUST gatekeep messages from Android framework vehicle subsystems, e.g., whitelisting permitted message types and message sources. [<a href=""#9_14_automotive_system_isolation"""""	"09140000.650001"	"{'9.14', 'A-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.14"	"A-0-2"	""	""	""	""	""	"9.14/A-0-2"	""">9.14/A-0-2] MUST watchdog against denial of service attacks from the Android framework or third-party apps. This guards against malicious software flooding the vehicle network with traffic, which may lead to malfunctioning vehicle subsystems. 2.5.6. Developer Tools and Options Compatibility Automotive device implementations: Perfetto [<a href=""#6_1_developer_tools"""""	"09140000.650002"	"{'A-0-2', '9.14'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"6.1"	"A-0-1"	""	""	""	""	""	"6.1/A-0-1"	""">6.1/A-0-1] MUST expose a /system/bin/perfetto binary to the shell user which cmdline complies with the perfetto documentation. [<a href=""#6_1_developer_tools"""""	"06010000.650001"	"{'A-0-1', '6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"6.1"	"A-0-2"	""	""	""	""	""	"6.1/A-0-2"	""">6.1/A-0-2] The perfetto binary MUST accept as input a protobuf config that complies with the schema defined in the perfetto documentation. [<a href=""#6_1_developer_tools"""""	"06010000.650002"	"{'A-0-2', '6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"6.1"	"A-0-3"	""	""	""	""	""	"6.1/A-0-3"	""">6.1/A-0-3] The perfetto binary MUST write as output a protobuf trace that complies with the schema defined in the perfetto documentation. [<a href=""#6_1_developer_tools"""""	"06010000.650003"	"{'A-0-3', '6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"6.1"	"A-0-4"	""	""	""	""	""	"6.1/A-0-4"	""">6.1/A-0-4] MUST provide, through the perfetto binary, at least the data sources described in the perfetto documentation. 2.6. Tablet Requirements An Android Tablet device refers to an Android device implementation that typically meets all the following criteria: Used by holding in both hands. Does not have a clamshell or convertible configuration. Physical keyboard implementations used with the device connect by means of a standard connection (e.g. USB, Bluetooth). Has a power source that provides mobility, such as a battery. Has a physical diagonal screen size in the range of 7 to 18 inches. Tablet device implementations have similar requirements to handheld device implementations. The exceptions are indicated by an * in that section and noted for reference in this section. 2.6.1. Hardware Screen Size [<a href=""#7_1_display_and_graphics"""""	"06010000.650004"	"{'USB', 'A-0-4', '6.1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.1.1.1"	"Tab-0-1"	""	""	""	""	""	"7.1.1.1/Tab-0-1"	""">7.1.1.1/Tab-0-1] MUST have a screen in the range of 7 to 18 inches. Gyroscope If Tablet device implementations include a 3-axis gyroscope, they: [<a href=""#7_3_sensors"""""	"07010101.980001"	"{'7.1.1.1', 'Tab-0-1'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"7.3.4"	"Tab-1-1"	""	""	""	""	""	"7.3.4/Tab-1-1"	""">7.3.4/Tab-1-1] MUST be capable of measuring orientation changes up to 1000 degrees per second. Minimum Memory and Storage (Section 7.6.1) The screen densities listed for small/normal screens in the handheld requirements are not applicable to tablets. USB peripheral mode (Section 7.7.1) If tablet device implementations include a USB port supporting peripheral mode, they: [7.7.1/Tab] MAY implement the Android Open Accessory (AOA) API. Virtual Reality Mode (Section 7.9.1) Virtual Reality High Performance (Section 7.9.2) Virtual reality requirements are not applicable to tablets. 2.6.2. Security Model Keys and Credentials (Section 9.11) Refer to Section [9.11]. If Tablet device implementations include multiple users and do not declare the android.hardware.telephony feature flag, they: [<a href=""#9_5_multi-user-support"""""	"07030400.980101"	"{'Tab-1-1', 'AOA', 'android.hardware.telephony', 'USB', '7.3.4'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"9.5"	"T-1-1"	""	""	""	""	""	"9.5/T-1-1"	""">9.5/T-1-1] MUST support restricted profiles, a feature that allows device owners to manage additional users and their capabilities on the device. With restricted profiles, device owners can quickly set up separate environments for additional users to work in, with the ability to manage finer-grained restrictions in the apps that are available in those environments. If Tablet device implementations include multiple users and declare the android.hardware.telephony feature flag, they: [<a href=""#9_5_multi-user-support"""""	"09050000.840101"	"{'android.hardware.telephony', 'T-1-1', '9.5'}"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.2.3.1"	"Tab-0-1"	""	""	""	""	""	"3.2.3.1/Tab-0-1"	""">3.2.3.1/Tab-0-1] MUST preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here. 3. Software 3.1. Managed API Compatibility The managed Dalvik bytecode execution environment is the primary vehicle for Android applications. The Android application programming interface (API) is the set of Android platform interfaces exposed to applications running in the managed runtime environment. Device implementations: [C-0-1] MUST provide complete implementations, including all documented behaviors, of any documented API exposed by the Android SDK or any API decorated with the “@SystemApi” marker in the upstream Android source code. [C-0-2] MUST support/preserve all classes, methods, and associated elements marked by the TestApi annotation (@TestApi). [C-0-3] MUST NOT omit any managed APIs, alter API interfaces or signatures, deviate from the documented behavior, or include no-ops, except where specifically allowed by this Compatibility Definition. [C-0-4] MUST still keep the APIs present and behave in a reasonable way, even when some hardware features for which Android includes APIs are omitted. See section 7 for specific requirements for this scenario. [C-0-5] MUST NOT allow third-party apps to use non-SDK interfaces, which are defined as methods and fields in the Java language packages that are in the boot classpath in AOSP, and that do not form part of the public SDK. This includes APIs decorated with the @hide annotation but not with a @SystemAPI, as described in the SDK documents and private and package-private class members. [C-0-6] MUST ship with each and every non-SDK interface on the same restricted lists as provided via the greylist, greylist-max-o, greylist-max-p, and blacklist flags in prebuilts/runtime/appcompat/hiddenapi-flags.csv path for the appropriate API level branch in the AOSP. [C-0-7] MUST support the signed config dynamic update mechanism to remove non-SDK interfaces from a restricted list by embedding signed configuration in any APK, using the existing public keys present in AOSP. However they: MAY, if a hidden API is absent or implemented differently on the device implementation, move the hidden API into the blacklist or omit it from all restricted lists (i.e. light-grey, dark-grey, black). MAY, if a hidden API does not already exist in the AOSP, add the hidden API to any of the restricted lists (i.e. light-grey, dark-grey, black). 3.1.1. Android Extensions Android supports extending the managed API surface of a particular API level by updating the extension version for that API level. The android.os.ext.SdkExtensions.getExtensionVersion(int apiLevel) API returns the extension version of the provided apiLevel, if there are extensions for that API level. Android device implementations: [C-0-1] MUST preload the AOSP implementation of both the shared library ExtShared and services ExtServices with versions greater than or equal to the minimum versions allowed per each API level. For example, Android 7.0 device implementations, running API level 24 MUST include at least version 1. [C-0-2] MUST only return valid extension version number that have been defined by the AOSP. [C-0-3] MUST support all the APIs defined by the extension versions returned by android.os.ext.SdkExtensions.getExtensionVersion(int apiLevel) in the same manner as other managed APIs are supported, following the requirements in section 3.1. 3.1.2. Android Library Due to Apache HTTP client deprecation, device implementations: [C-0-1] MUST NOT place the org.apache.http.legacy library in the bootclasspath. [C-0-2] MUST add the org.apache.http.legacy library to the application classpath only when the app satisfies one of the following conditions: Targets API level 28 or lower. Declares in its manifest that it needs the library by setting the android:name attribute of &lt;uses-library&gt; to org.apache.http.legacy. The AOSP implementation meets these requirements. 3.2. Soft API Compatibility In addition to the managed APIs from section 3.1, Android also includes a significant runtime-only “soft” API, in the form of such things as intents, permissions, and similar aspects of Android applications that cannot be enforced at application compile time. 3.2.1. Permissions [C-0-1] Device implementers MUST support and enforce all permission constants as documented by the Permission reference page. Note that section 9 lists additional requirements related to the Android security model. 3.2.2. Build Parameters The Android APIs include a number of constants on the android.os.Build class that are intended to describe the current device. [C-0-1] To provide consistent, meaningful values across device implementations, the table below includes additional restrictions on the formats of these values to which device implementations MUST conform. Parameter Details VERSION.RELEASE The version of the currently-executing Android system, in human-readable format. This field MUST have one of the string values defined in 11. VERSION.SDK The version of the currently-executing Android system, in a format accessible to third-party application code. For Android 11, this field MUST have the integer value 11_INT. VERSION.SDK_INT The version of the currently-executing Android system, in a format accessible to third-party application code. For Android 11, this field MUST have the integer value 11_INT. VERSION.INCREMENTAL A value chosen by the device implementer designating the specific build of the currently-executing Android system, in human-readable format. This value MUST NOT be reused for different builds made available to end users. A typical use of this field is to indicate which build number or source-control change identifier was used to generate the build. The value of this field MUST be encodable as printable 7-bit ASCII and match the regular expression “^[^ :\/~]+$”. BOARD A value chosen by the device implementer identifying the specific internal hardware used by the device, in human-readable format. A possible use of this field is to indicate the specific revision of the board powering the device. The value of this field MUST be encodable as 7-bit ASCII and match the regular expression “^[a-zA-Z0-9_-]+$”. BRAND A value reflecting the brand name associated with the device as known to the end users. MUST be in human-readable format and SHOULD represent the manufacturer of the device or the company brand under which the device is marketed. The value of this field MUST be encodable as 7-bit ASCII and match the regular expression “^[a-zA-Z0-9_-]+$”. SUPPORTED_ABIS The name of the instruction set (CPU type + ABI convention) of native code. See section 3.3. Native API Compatibility. SUPPORTED_32_BIT_ABIS The name of the instruction set (CPU type + ABI convention) of native code. See section 3.3. Native API Compatibility. SUPPORTED_64_BIT_ABIS The name of the second instruction set (CPU type + ABI convention) of native code. See section 3.3. Native API Compatibility. CPU_ABI The name of the instruction set (CPU type + ABI convention) of native code. See section 3.3. Native API Compatibility. CPU_ABI2 The name of the second instruction set (CPU type + ABI convention) of native code. See section 3.3. Native API Compatibility. DEVICE A value chosen by the device implementer containing the development name or code name identifying the configuration of the hardware features and industrial design of the device. The value of this field MUST be encodable as 7-bit ASCII and match the regular expression “^[a-zA-Z0-9_-]+$”. This device name MUST NOT change during the lifetime of the product. FINGERPRINT A string that uniquely identifies this build. It SHOULD be reasonably human-readable. It MUST follow this template: $(BRAND)/$(PRODUCT)/ &nbsp;&nbsp;&nbsp;&nbsp;$(DEVICE):$(VERSION.RELEASE)/$(ID)/$(VERSION.INCREMENTAL):$(TYPE)/$(TAGS) For example: acme/myproduct/ &nbsp;&nbsp;&nbsp;&nbsp;mydevice:11/LMYXX/3359:userdebug/test-keys The fingerprint MUST NOT include whitespace characters. The value of this field MUST be encodable as 7-bit ASCII. HARDWARE The name of the hardware (from the kernel command line or /proc). It SHOULD be reasonably human-readable. The value of this field MUST be encodable as 7-bit ASCII and match the regular expression “^[a-zA-Z0-9_-]+$”. HOST A string that uniquely identifies the host the build was built on, in human-readable format. There are no requirements on the specific format of this field, except that it MUST NOT be null or the empty string (""""). ID An identifier chosen by the device implementer to refer to a specific release, in human-readable format. This field can be the same as android.os.Build.VERSION.INCREMENTAL, but SHOULD be a value sufficiently meaningful for end users to distinguish between software builds. The value of this field MUST be encodable as 7-bit ASCII and match the regular expression “^[a-zA-Z0-9._-]+$”. MANUFACTURER The trade name of the Original Equipment Manufacturer (OEM) of the product. There are no requirements on the specific format of this field, except that it MUST NOT be null or the empty string (""""). This field MUST NOT change during the lifetime of the product. MODEL A value chosen by the device implementer containing the name of the device as known to the end user. This SHOULD be the same name under which the device is marketed and sold to end users. There are no requirements on the specific format of this field, except that it MUST NOT be null or the empty string (""""). This field MUST NOT change during the lifetime of the product. PRODUCT A value chosen by the device implementer containing the development name or code name of the specific product (SKU) that MUST be unique within the same brand. MUST be human-readable, but is not necessarily intended for view by end users. The value of this field MUST be encodable as 7-bit ASCII and match the regular expression “^[a-zA-Z0-9_-]+$”. This product name MUST NOT change during the lifetime of the product. SERIAL MUST return ""UNKNOWN"". TAGS A comma-separated list of tags chosen by the device implementer that further distinguishes the build. The tags MUST be encodable as 7-bit ASCII and match the regular expression “^[a-zA-Z0-9._-]+” and MUST have one of the values corresponding to the three typical Android platform signing configurations: release-keys, dev-keys, and test-keys. TIME A value representing the timestamp of when the build occurred. TYPE A value chosen by the device implementer specifying the runtime configuration of the build. This field MUST have one of the values corresponding to the three typical Android runtime configurations: user, userdebug, or eng. USER A name or user ID of the user (or automated user) that generated the build. There are no requirements on the specific format of this field, except that it MUST NOT be null or the empty string (""""). VERSION.SECURITY_PATCH A value indicating the security patch level of a build. It MUST signify that the build is not in any way vulnerable to any of the issues described up through the designated Android Public Security Bulletin. It MUST be in the format [YYYY-MM-DD], matching a defined string documented in the Android Public Security Bulletin or in the Android Security Advisory, for example ""2015-11-01"". VERSION.BASE_OS A value representing the FINGERPRINT parameter of the build that is otherwise identical to this build except for the patches provided in the Android Public Security Bulletin. It MUST report the correct value and if such a build does not exist, report an empty string (""""). BOOTLOADER A value chosen by the device implementer identifying the specific internal bootloader version used in the device, in human-readable format. The value of this field MUST be encodable as 7-bit ASCII and match the regular expression “^[a-zA-Z0-9._-]+$”. getRadioVersion() MUST (be or return) a value chosen by the device implementer identifying the specific internal radio/modem version used in the device, in human-readable format. If a device does not have any internal radio/modem it MUST return NULL. The value of this field MUST be encodable as 7-bit ASCII and match the regular expression “^[a-zA-Z0-9._-,]+$”. getSerial() MUST (be or return) a hardware serial number, which MUST be available and unique across devices with the same MODEL and MANUFACTURER. The value of this field MUST be encodable as 7-bit ASCII and match the regular expression “^[a-zA-Z0-9._-,]+$”. 3.2.3. Intent Compatibility 3.2.3.1. Common Application Intents Android intents allow application components to request functionality from other Android components. The Android upstream project includes a list of applications which implement several intent patterns to perform common actions. Device implementations: [C-SR] Are STRONGLY RECOMMENDED to preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here and provide fulfillment i.e meet with the developer expectation for these common application intents as described in the SDK. Please refer to Section 2 for mandatory application intents for each device type. 3.2.3.2. Intent Resolution [C-0-1] As Android is an extensible platform, device implementations MUST allow each intent pattern referenced in section 3.2.3.1 , except for Settings, to be overridden by third-party applications. The upstream Android open source implementation allows this by default. [C-0-2] Device implementers MUST NOT attach special privileges to system applications' use of these intent patterns, or prevent third-party applications from binding to and assuming control of these patterns. This prohibition specifically includes but is not limited to disabling the “Chooser” user interface that allows the user to select between multiple applications that all handle the same intent pattern. [C-0-3] Device implementations MUST provide a user interface for users to modify the default activity for intents. However, device implementations MAY provide default activities for specific URI patterns (e.g. http://play.google.com) when the default activity provides a more specific attribute for the data URI. For example, an intent filter pattern specifying the data URI “http://www.android.com” is more specific than the browser's core intent pattern for “http://”. Android also includes a mechanism for third-party apps to declare an authoritative default app linking behavior for certain types of web URI intents. When such authoritative declarations are defined in an app's intent filter patterns, device implementations: [C-0-4] MUST attempt to validate any intent filters by performing the validation steps defined in the Digital Asset Links specification as implemented by the Package Manager in the upstream Android Open Source Project. [C-0-5] MUST attempt validation of the intent filters during the installation of the application and set all successfully validated URI intent filters as default app handlers for their URIs. MAY set specific URI intent filters as default app handlers for their URIs, if they are successfully verified but other candidate URI filters fail verification. If a device implementation does this, it MUST provide the user appropriate per-URI pattern overrides in the settings menu. MUST provide the user with per-app App Links controls in Settings as follows: [C-0-6] The user MUST be able to override holistically the default app links behavior for an app to be: always open, always ask, or never open, which must apply to all candidate URI intent filters equally. [C-0-7] The user MUST be able to see a list of the candidate URI intent filters. The device implementation MAY provide the user with the ability to override specific candidate URI intent filters that were successfully verified, on a per-intent filter basis. [C-0-8] The device implementation MUST provide users with the ability to view and override specific candidate URI intent filters if the device implementation lets some candidate URI intent filters succeed verification while some others can fail. 3.2.3.3. Intent Namespaces [C-0-1] Device implementations MUST NOT include any Android component that honors any new intent or broadcast intent patterns using an ACTION, CATEGORY, or other key string in the android. or com.android. namespace. [C-0-2] Device implementers MUST NOT include any Android components that honor any new intent or broadcast intent patterns using an ACTION, CATEGORY, or other key string in a package space belonging to another organization. [C-0-3] Device implementers MUST NOT alter or extend any of the intent patterns listed in section 3.2.3.1. Device implementations MAY include intent patterns using namespaces clearly and obviously associated with their own organization. This prohibition is analogous to that specified for Java language classes in section 3.6. 3.2.3.4. Broadcast Intents Third-party applications rely on the platform to broadcast certain intents to notify them of changes in the hardware or software environment. Device implementations: [C-0-1] MUST broadcast the public broadcast intents listed here in response to appropriate system events as described in the SDK documentation. Note that this requirement is not conflicting with section 3.5 as the limitation for background applications are also described in the SDK documentation. Also certain broadcast intents are conditional upon hardware support, if the device supports the necessary hardware they MUST broadcast the intents and provide the behavior inline with SDK documentation. 3.2.3.5. Conditional Application Intents Android includes settings that provide users an easy way to select their default applications, for example for Home screen or SMS. Where it makes sense, device implementations MUST provide a similar settings menu and be compatible with the intent filter pattern and API methods described in the SDK documentation as below. If device implementations report android.software.home_screen, they: [C-1-1] MUST honor the android.settings.HOME_SETTINGS intent to show a default app settings menu for Home Screen. If device implementations report android.hardware.telephony, they: [C-2-1] MUST provide a settings menu that will call the android.provider.Telephony.ACTION_CHANGE_DEFAULT intent to show a dialog to change the default SMS application. [C-2-2] MUST honor the android.telecom.action.CHANGE_DEFAULT_DIALER intent to show a dialog to allow the user to change the default Phone application. MUST use the user-selected default Phone app's UI for incoming and outgoing calls except for emergency calls, which would use the preinstalled Phone app. [C-2-3] MUST honor the android.telecom.action.CHANGE_PHONE_ACCOUNTS intent to provide user affordance to configure the ConnectionServices associated with the PhoneAccounts, as well as a default PhoneAccount that the telecommunications service provider will use to place outgoing calls. The AOSP implementation meets this requirement by including a ""Calling Accounts option"" menu within the ""Calls"" settings menu. [C-2-4] MUST allow android.telecom.CallRedirectionService for an app that holds the android.app.role.CALL_REDIRECTION role. [C-2-5] MUST provide the user affordance to choose an app that holds the android.app.role.CALL_REDIRECTION role. [C-2-6] MUST honor the android.intent.action.SENDTO and android.intent.action.VIEW intents and provide an activity to send/display SMS messages. [C-SR] Are Strongly Recommended to honor android.intent.action.ANSWER, android.intent.action.CALL, android.intent.action.CALL_BUTTON, android.intent.action.VIEW & android.intent.action.DIAL intents with a preloaded dialer application which can handle these intents and provide fulfillment as described in the SDK. If device implementations report android.hardware.nfc.hce, they: [C-3-1] MUST honor the android.settings.NFC_PAYMENT_SETTINGS intent to show a default app settings menu for Contactless payment. [C-3-2] MUST honor android.nfc.cardemulation.action.ACTION_CHANGE_DEFAULT intent to show an activity which opens a dialog to ask the user to change the default card emulation service for a certain category as described in the SDK. If device implementations report android.hardware.nfc, they: [C-4-1] MUST honor these intents android.nfc.action.NDEF_DISCOVERED, android.nfc.action.TAG_DISCOVERED & android.nfc.action.TECH_DISCOVERED, to show an activity which fulfils developer expectations for these intents as described in the SDK. If device implementations support the VoiceInteractionService and have more than one application using this API installed at a time, they: [C-4-1] MUST honor the android.settings.ACTION_VOICE_INPUT_SETTINGS intent to show a default app settings menu for voice input and assist. If device implementations report android.hardware.bluetooth, they: [C-5-1] MUST honor the ‘android.bluetooth.adapter.action.REQUEST_ENABLE’ intent and show a system activity to allow the user to turn on Bluetooth. [C-5-2] MUST honor the ‘android.bluetooth.adapter.action.REQUEST_DISCOVERABLE’ intent and show a system activity that requests discoverable mode. If device implementations support the DND feature, they: [C-6-1] MUST implement an activity that would respond to the intent ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS, which for implementations with UI_MODE_TYPE_NORMAL it MUST be an activity where the user can grant or deny the app access to DND policy configurations. If device implementations allow users to use third-party input methods on the device, they: [C-7-1] MUST provide a user-accessible mechanism to add and configure third-party input methods in response to the android.settings.INPUT_METHOD_SETTINGS intent. If device implementations support third-party accessibility services, they: [C-8-1] MUST honor the android.settings.ACCESSIBILITY_SETTINGS intent to provide a user-accessible mechanism to enable and disable the third-party accessibility services alongside the preloaded accessibility services. If device implementations include support for Wi-Fi Easy Connect and expose the functionality to third-party apps, they: [C-9-1] MUST implement the Settings#ACTION_PROCESS_WIFI_EASY_CONNECT_URI Intent APIs as described in the SDK documentation. If device implementations provide the data saver mode, they: * [C-10-1] MUST provide a user interface in the settings, that handles the Settings.ACTION_IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS intent, allowing users to add applications to or remove applications from the allow list. If device implementations do not provide the data saver mode, they: [C-11-1] MUST have an activity that handles the Settings.ACTION_IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS intent but MAY implement it as a no-op. If device implementations declare the support for camera via android.hardware.camera.any they: [C-12-1] MUST honor the android.media.action.STILL_IMAGE_CAMERA and android.media.action.STILL_IMAGE_CAMERA_SECURE intent and launch the camera in still image mode as described in the SDK. [C-12-2] MUST honor the android.media.action.VIDEO_CAMERA intent to launch the camera in video mode as described in the SDK. [C-12-3] MUST honor only allow preinstalled Android applications to handle the following intents MediaStore.ACTION_IMAGE_CAPTURE, MediaStore.ACTION_IMAGE_CAPTURE_SECURE, and MediaStore.ACTION_VIDEO_CAPTURE as described in the SDK document. If device implementations report android.software.device_admin, they: [C-13-1] MUST honor the intent android.app.action.ADD_DEVICE_ADMIN to invoke a UI to bring the user through adding the device administrator to the system (or allowing them to reject it). [C-13-2] MUST honor the intents android.app.action.ADMIN_POLICY_COMPLIANCE, android.app.action.GET_PROVISIONING_MODE, android.app.action.PROVISIONING_SUCCESSFUL, android.app.action.PROVISION_MANAGED_DEVICE, android.app.action.PROVISION_MANAGED_PROFILE, android.app.action.SET_NEW_PARENT_PROFILE_PASSWORD, android.app.action.SET_NEW_PASSWORD & android.app.action.START_ENCRYPTION and have an activity to provide fulfillment for these intents as described in SDK here. If device implementations declare the android.software.autofill feature flag, they: [C-14-1] MUST fully implement the AutofillService and AutofillManager APIs and honor the android.settings.REQUEST_SET_AUTOFILL_SERVICE intent to show a default app settings menu to enable and disable autofill and change the default autofill service for the user. If device implementations include a pre-installed app or wish to allow third-party apps to access the usage statistics, they: [C-SR] are STRONGLY RECOMMENDED provide user-accessible mechanism to grant or revoke access to the usage stats in response to the android.settings.ACTION_USAGE_ACCESS_SETTINGS intent for apps that declare the android.permission.PACKAGE_USAGE_STATS permission. If device implementations intend to disallow any apps, including pre-installed apps, from accessing the usage statistics, they: [C-15-1] MUST still have an activity that handles the android.settings.ACTION_USAGE_ACCESS_SETTINGS intent pattern but MUST implement it as a no-op, that is to have an equivalent behavior as when the user is declined for access. If device implementations report the feature android.hardware.audio.output, they: [C-SR] Are Strongly Recommended to honor android.intent.action.TTS_SERVICE, android.speech.tts.engine.INSTALL_TTS_DATA & android.speech.tts.engine.GET_SAMPLE_TEXT intents have an activity to provide fulfillment for these intents as described in SDK here. Android includes support for interactive screensavers, previously referred to as Dreams. Screen Savers allow users to interact with applications when a device connected to a power source is idle or docked in a desk dock. Device Implementations: SHOULD include support for screen savers and provide a settings option for users to configure screen savers in response to the android.settings.DREAM_SETTINGS intent. 3.2.4. Activities on secondary/multiple displays If device implementations allow launching normal Android Activities on more than one display, they: [C-1-1] MUST set the android.software.activities_on_secondary_displays feature flag. [C-1-2] MUST guarantee API compatibility similar to an activity running on the primary display. [C-1-3] MUST land the new activity on the same display as the activity that launched it, when the new activity is launched without specifying a target display via the ActivityOptions.setLaunchDisplayId() API. [C-1-4] MUST destroy all activities, when a display with the Display.FLAG_PRIVATE flag is removed. [C-1-5] MUST securely hide content on all screens when the device is locked with a secure lock screen, unless the app opts in to show on top of lock screen using Activity#setShowWhenLocked() API. SHOULD have android.content.res.Configuration which corresponds to that display in order to be displayed, operate correctly, and maintain compatibility if an activity is launched on secondary display. If device implementations allow launching normal Android Activities on secondary displays and a secondary display has the android.view.Display.FLAG_PRIVATE flag: [C-3-1] Only the owner of that display, system, and activities that are already on that display MUST be able to launch to it. Everyone can launch to a display that has android.view.Display.FLAG_PUBLIC flag. 3.3. Native API Compatibility Native code compatibility is challenging. For this reason, device implementers are: [SR] STRONGLY RECOMMENDED to use the implementations of the libraries listed below from the upstream Android Open Source Project. 3.3.1. Application Binary Interfaces Managed Dalvik bytecode can call into native code provided in the application .apk file as an ELF .so file compiled for the appropriate device hardware architecture. As native code is highly dependent on the underlying processor technology, Android defines a number of Application Binary Interfaces (ABIs) in the Android NDK. Device implementations: [C-0-1] MUST be compatible with one or more defined Android NDK ABIs. [C-0-2] MUST include support for code running in the managed environment to call into native code, using the standard Java Native Interface (JNI) semantics. [C-0-3] MUST be source-compatible (i.e. header-compatible) and binary-compatible (for the ABI) with each required library in the list below. [C-0-5] MUST accurately report the native Application Binary Interface (ABI) supported by the device, via the android.os.Build.SUPPORTED_ABIS, android.os.Build.SUPPORTED_32_BIT_ABIS, and android.os.Build.SUPPORTED_64_BIT_ABIS parameters, each a comma separated list of ABIs ordered from the most to the least preferred one. [C-0-6] MUST report, via the above parameters, a subset of the following list of ABIs and MUST NOT report any ABI not on the list. armeabi (no longer supported as a target by the NDK) armeabi-v7a arm64-v8a x86 x86-64 [C-0-7] MUST make all the following libraries, providing native APIs, available to apps that include native code: libaaudio.so (AAudio native audio support) libamidi.so (native MIDI support, if feature android.software.midi is claimed as described in Section 5.9) libandroid.so (native Android activity support) libc (C library) libcamera2ndk.so libdl (dynamic linker) libEGL.so (native OpenGL surface management) libGLESv1_CM.so (OpenGL ES 1.x) libGLESv2.so (OpenGL ES 2.0) libGLESv3.so (OpenGL ES 3.x) libicui18n.so libicuuc.so libjnigraphics.so liblog (Android logging) libmediandk.so (native media APIs support) libm (math library) libneuralnetworks.so (Neural Networks API) libOpenMAXAL.so (OpenMAX AL 1.0.1 support) libOpenSLES.so (OpenSL ES 1.0.1 audio support) libRS.so libstdc++ (Minimal support for C++) libvulkan.so (Vulkan) libz (Zlib compression) JNI interface [C-0-8] MUST NOT add or remove the public functions for the native libraries listed above. [C-0-9] MUST list additional non-AOSP libraries exposed directly to third-party apps in /vendor/etc/public.libraries.txt. [C-0-10] MUST NOT expose any other native libraries, implemented and provided in AOSP as system libraries, to third-party apps targeting API level 24 or higher as they are reserved. [C-0-11] MUST export all the OpenGL ES 3.1 and Android Extension Pack function symbols, as defined in the NDK, through the libGLESv3.so library. Note that while all the symbols MUST be present, section 7.1.4.1 describes in more detail the requirements for when the full implementation of each corresponding functions are expected. [C-0-12] MUST export function symbols for the core Vulkan 1.0 function symbols, as well as the VK_KHR_surface, VK_KHR_android_surface, VK_KHR_swapchain, VK_KHR_maintenance1, and VK_KHR_get_physical_device_properties2 extensions through the libvulkan.so library. Note that while all the symbols MUST be present, section 7.1.4.2 describes in more detail the requirements for when the full implementation of each corresponding functions are expected. SHOULD be built using the source code and header files available in the upstream Android Open Source Project Note that future releases of Android may introduce support for additional ABIs. 3.3.2. 32-bit ARM Native Code Compatibility If device implementations report the support of the armeabi ABI, they: [C-3-1] MUST also support armeabi-v7a and report its support, as armeabi is only for backwards compatibility with older apps. If device implementations report the support of the armeabi-v7a ABI, for apps using this ABI, they: [C-2-1] MUST include the following lines in /proc/cpuinfo, and SHOULD NOT alter the values on the same device, even when they are read by other ABIs. Features:, followed by a list of any optional ARMv7 CPU features supported by the device. CPU architecture:, followed by an integer describing the device's highest supported ARM architecture (e.g., ""8"" for ARMv8 devices). [C-2-2] MUST always keep the following operations available, even in the case where the ABI is implemented on an ARMv8 architecture, either through native CPU support or through software emulation: SWP and SWPB instructions. SETEND instruction. CP15ISB, CP15DSB, and CP15DMB barrier operations. [C-2-3] MUST include support for the Advanced SIMD (a.k.a. NEON) extension. 3.4. Web Compatibility 3.4.1. WebView Compatibility If device implementations provide a complete implementation of the android.webkit.Webview API, they: [C-1-1] MUST report android.software.webview. [C-1-2] MUST use the Chromium Project build from the upstream Android Open Source Project on the Android 11 branch for the implementation of the android.webkit.WebView API. [C-1-3] The user agent string reported by the WebView MUST be in this format: Mozilla/5.0 (Linux; Android $(VERSION); [$(MODEL)] [Build/$(BUILD)]; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 $(CHROMIUM_VER) Mobile Safari/537.36 The value of the $(VERSION) string MUST be the same as the value for android.os.Build.VERSION.RELEASE. The $(MODEL) string MAY be empty, but if it is not empty it MUST have the same value as android.os.Build.MODEL. ""Build/$(BUILD)"" MAY be omitted, but if it is present the $(BUILD) string MUST be the same as the value for android.os.Build.ID. The value of the $(CHROMIUM_VER) string MUST be the version of Chromium in the upstream Android Open Source Project. Device implementations MAY omit Mobile in the user agent string. The WebView component SHOULD include support for as many HTML5 features as possible and if it supports the feature SHOULD conform to the HTML5 specification. [C-1-3] MUST render the provided content or remote URL content in a process that is distinct from the application that instantiates the WebView. Specifically the separate renderer process MUST hold lower privilege, run as a separate user ID, have no access to the app's data directory, have no direct network access, and only have access to the minimum-required system services over Binder. The AOSP implementation of WebView meets this requirement. Note that if device implementations are 32-bit or declare the feature flag android.hardware.ram.low, they are exempted from C-1-3. 3.4.2. Browser Compatibility If device implementations include a standalone Browser application for general web browsing, they: [C-1-1] MUST support each of these APIs associated with HTML5: application cache/offline operation &lt;video&gt; tag geolocation [C-1-2] MUST support the HTML5/W3C webstorage API and SHOULD support the HTML5/W3C IndexedDB API. Note that as the web development standards bodies are transitioning to favor IndexedDB over webstorage, IndexedDB is expected to become a required component in a future version of Android. MAY ship a custom user agent string in the standalone Browser application. SHOULD implement support for as much of HTML5 as possible on the standalone Browser application (whether based on the upstream WebKit Browser application or a third-party replacement). However, If device implementations do not include a standalone Browser application, they: [C-2-1] MUST still support the public intent patterns as described in section 3.2.3.1. 3.5. API Behavioral Compatibility Device implementations: [C-0-9] MUST ensure that API behavioral compatibility is applied for all installed apps unless they are restricted as described in Section 3.5.1. [C-0-10] MUST NOT implement the whitelisting approach that ensures API behavioral compatibility only for apps that are selected by device implementers. The behaviors of each of the API types (managed, soft, native, and web) must be consistent with the preferred implementation of the upstream Android Open Source Project. Some specific areas of compatibility are: [C-0-1] Devices MUST NOT change the behavior or semantics of a standard intent. [C-0-2] Devices MUST NOT alter the lifecycle or lifecycle semantics of a particular type of system component (such as Service, Activity, ContentProvider, etc.). [C-0-3] Devices MUST NOT change the semantics of a standard permission. Devices MUST NOT alter the limitations enforced on background applications. More specifically, for background apps: [C-0-4] they MUST stop executing callbacks that are registered by the app to receive outputs from the GnssMeasurement and GnssNavigationMessage. [C-0-5] they MUST rate-limit the frequency of updates that are provided to the app through the LocationManager API class or the WifiManager.startScan() method. [C-0-6] if the app is targeting API level 25 or higher, they MUST NOT allow to register broadcast receivers for the implicit broadcasts of standard Android intents in the app's manifest, unless the broadcast intent requires a ""signature"" or ""signatureOrSystem"" protectionLevel permission or are on the exemption list . [C-0-7] if the app is targeting API level 25 or higher, they MUST stop the app's background services, just as if the app had called the services'stopSelf() method, unless the app is placed on a temporary whitelist to handle a task that's visible to the user. [C-0-8] if the app is targeting API level 25 or higher, they MUST release the wakelocks the app holds. [C-0-9] Devices MUST return the following security providers as the first seven array values from the Security.getProviders() method, in the given order and with the given names (as returned by Provider.getName()) and classes, unless the app has modified the list via insertProviderAt() or removeProvider(). Devices MAY return additional providers after the specified list of providers below. AndroidNSSP - android.security.net.config.NetworkSecurityConfigProvider AndroidOpenSSL - com.android.org.conscrypt.OpenSSLProvider CertPathProvider - sun.security.provider.CertPathProvider AndroidKeyStoreBCWorkaround - android.security.keystore.AndroidKeyStoreBCWorkaroundProvider BC - com.android.org.bouncycastle.jce.provider.BouncyCastleProvider HarmonyJSSE - com.android.org.conscrypt.JSSEProvider AndroidKeyStore - android.security.keystore.AndroidKeyStoreProvider The above list is not comprehensive. The Compatibility Test Suite (CTS) tests significant portions of the platform for behavioral compatibility, but not all. It is the responsibility of the implementer to ensure behavioral compatibility with the Android Open Source Project. For this reason, device implementers SHOULD use the source code available via the Android Open Source Project where possible, rather than re-implement significant parts of the system. 3.5.1. Application Restriction If device implementations implement a proprietary mechanism to restrict apps and that mechanism is more restrictive than the Rare App Standby Bucket, they: [C-1-1] MUST provide user affordance where the user can see the list of restricted apps. [C-1-2] MUST provide user affordance to turn on / off the restrictions on each app. [C-1-3] MUST not automatically apply restrictions without evidence of poor system health behavior, but MAY apply the restrictions on apps upon detection of poor system health behavior like stuck wakelocks, long running services, and other criteria. The criteria MAY be determined by device implementers but MUST be related to the app’s impact on the system health. Other criteria that are not purely related to the system health, such as the app’s lack of popularity in the market, MUST NOT be used as criteria. [C-1-4] MUST not automatically apply app restrictions for apps when a user has turned off app restrictions manually, and MAY suggest the user to apply app restrictions. [C-1-5] MUST inform users if app restrictions are applied to an app automatically. Such information MUST be provided within 24 hours of when the restrictions are applied. [C-1-6] MUST return true for ActivityManager.isBackgroundRestricted() when the restricted app calls this API. [C-1-7] MUST NOT restrict the top foreground app that is explicitly used by the user. [C-1-8] MUST suspend restrictions on an app that becomes the top foreground application when the user explicitly starts to use the app that used to be restricted. 3.6. API Namespaces Android follows the package and class namespace conventions defined by the Java programming language. To ensure compatibility with third-party applications, device implementers MUST NOT make any prohibited modifications (see below) to these package namespaces: java.* javax.* sun.* android.* androidx.* com.android.* That is, they: [C-0-1] MUST NOT modify the publicly exposed APIs on the Android platform by changing any method or class signatures, or by removing classes or class fields. [C-0-2] MUST NOT add any publicly exposed elements (such as classes or interfaces, or fields or methods to existing classes or interfaces) or Test or System APIs to the APIs in the above namespaces. A “publicly exposed element” is any construct that is not decorated with the “@hide” marker as used in the upstream Android source code. Device implementers MAY modify the underlying implementation of the APIs, but such modifications: [C-0-3] MUST NOT impact the stated behavior and Java-language signature of any publicly exposed APIs. [C-0-4] MUST NOT be advertised or otherwise exposed to developers. However, device implementers MAY add custom APIs outside the standard Android namespace, but the custom APIs: [C-0-5] MUST NOT be in a namespace owned by or referring to another organization. For instance, device implementers MUST NOT add APIs to the com.google.* or similar namespace: only Google may do so. Similarly, Google MUST NOT add APIs to other companies' namespaces. [C-0-6] MUST be packaged in an Android shared library so that only apps that explicitly use them (via the &lt;uses-library&gt; mechanism) are affected by the increased memory usage of such APIs. If a device implementer proposes to improve one of the package namespaces above (such as by adding useful new functionality to an existing API, or adding a new API), the implementer SHOULD visit source.android.com and begin the process for contributing changes and code, according to the information on that site. Note that the restrictions above correspond to standard conventions for naming APIs in the Java programming language; this section simply aims to reinforce those conventions and make them binding through inclusion in this Compatibility Definition. 3.7. Runtime Compatibility Device implementations: [C-0-1] MUST support the full Dalvik Executable (DEX) format and Dalvik bytecode specification and semantics. [C-0-2] MUST configure Dalvik runtimes to allocate memory in accordance with the upstream Android platform, and as specified by the following table. (See section 7.1.1 for screen size and screen density definitions.) SHOULD use Android RunTime (ART), the reference upstream implementation of the Dalvik Executable Format, and the reference implementation’s package management system. SHOULD run fuzz tests under various modes of execution and target architectures to assure the stability of the runtime. Refer to JFuzz and DexFuzz in the Android Open Source Project website. Note that memory values specified below are considered minimum values and device implementations MAY allocate more memory per application. Screen Layout Screen Density Minimum Application Memory Android Watch 120 dpi (ldpi) 32MB 140 dpi (140dpi) 160 dpi (mdpi) 180 dpi (180dpi) 200 dpi (200dpi) 213 dpi (tvdpi) 220 dpi (220dpi) 36MB 240 dpi (hdpi) 280 dpi (280dpi) 320 dpi (xhdpi) 48MB 360 dpi (360dpi) 400 dpi (400dpi) 56MB 420 dpi (420dpi) 64MB 480 dpi (xxhdpi) 88MB 560 dpi (560dpi) 112MB 640 dpi (xxxhdpi) 154MB small/normal 120 dpi (ldpi) 32MB 140 dpi (140dpi) 160 dpi (mdpi) 180 dpi (180dpi) 48MB 200 dpi (200dpi) 213 dpi (tvdpi) 220 dpi (220dpi) 240 dpi (hdpi) 280 dpi (280dpi) 320 dpi (xhdpi) 80MB 360 dpi (360dpi) 400 dpi (400dpi) 96MB 420 dpi (420dpi) 112MB 480 dpi (xxhdpi) 128MB 560 dpi (560dpi) 192MB 640 dpi (xxxhdpi) 256MB large 120 dpi (ldpi) 32MB 140 dpi (140dpi) 48MB 160 dpi (mdpi) 180 dpi (180dpi) 80MB 200 dpi (200dpi) 213 dpi (tvdpi) 220 dpi (220dpi) 240 dpi (hdpi) 280 dpi (280dpi) 96MB 320 dpi (xhdpi) 128MB 360 dpi (360dpi) 160MB 400 dpi (400dpi) 192MB 420 dpi (420dpi) 228MB 480 dpi (xxhdpi) 256MB 560 dpi (560dpi) 384MB 640 dpi (xxxhdpi) 512MB xlarge 120 dpi (ldpi) 48MB 140 dpi (140dpi) 80MB 160 dpi (mdpi) 180 dpi (180dpi) 96MB 200 dpi (200dpi) 213 dpi (tvdpi) 220 dpi (220dpi) 240 dpi (hdpi) 280 dpi (280dpi) 144MB 320 dpi (xhdpi) 192MB 360 dpi (360dpi) 240MB 400 dpi (400dpi) 288MB 420 dpi (420dpi) 336MB 480 dpi (xxhdpi) 384MB 560 dpi (560dpi) 576MB 640 dpi (xxxhdpi) 768MB 3.8. User Interface Compatibility 3.8.1. Launcher (Home Screen) Android includes a launcher application (home screen) and support for third-party applications to replace the device launcher (home screen). If device implementations allow third-party applications to replace the device home screen, they: [C-1-1] MUST declare the platform feature android.software.home_screen. [C-1-2] MUST return the AdaptiveIconDrawable object when the third-party application use &lt;adaptive-icon&gt; tag to provide their icon, and the PackageManager methods to retrieve icons are called. If device implementations include a default launcher that supports in-app pinning of shortcuts, they: [C-2-1] MUST report true for ShortcutManager.isRequestPinShortcutSupported(). [C-2-2] MUST have user affordance asking the user before adding a shortcut requested by apps via the ShortcutManager.requestPinShortcut() API method. [C-2-3] MUST support pinned shortcuts and dynamic and static shortcuts as documented on the App Shortcuts page. Conversely, if device implementations do not support in-app pinning of shortcuts, they: [C-3-1] MUST report false for ShortcutManager.isRequestPinShortcutSupported(). If device implementations implement a default launcher that provides quick access to the additional shortcuts provided by third-party apps through the ShortcutManager API, they: [C-4-1] MUST support all documented shortcut features (e.g. static and dynamic shortcuts, pinning shortcuts) and fully implement the APIs of the ShortcutManager API class. If device implementations include a default launcher app that shows badges for the app icons, they: [C-5-1] MUST respect the NotificationChannel.setShowBadge() API method. In other words, show a visual affordance associated with the app icon if the value is set as true, and do not show any app icon badging scheme when all of the app's notification channels have set the value as false. MAY override the app icon badges with their proprietary badging scheme when third-party applications indicate support of the proprietary badging scheme through the use of proprietary APIs, but SHOULD use the resources and values provided through the notification badges APIs described in the SDK , such as the Notification.Builder.setNumber() and the Notification.Builder.setBadgeIconType() API. 3.8.2. Widgets Android supports third-party app widgets by defining a component type and corresponding API and lifecycle that allows applications to expose an “AppWidget” to the end user. If device implementations support third-party app widgets, they: [C-1-1] MUST declare support for platform feature android.software.app_widgets. [C-1-2] MUST include built-in support for AppWidgets and expose user interface affordances to add, configure, view, and remove AppWidgets directly within the Launcher. [C-1-3] MUST be capable of rendering widgets that are 4 x 4 in the standard grid size. See the App Widget DesignGuidelines in the Android SDK documentation for details. MAY support application widgets on the lock screen. If device implementations support third-party app widgets and in-app pinning of shortcuts, they: [C-2-1] MUST report true for AppWidgetManager.html.isRequestPinAppWidgetSupported(). [C-2-2] MUST have user affordance asking the user before adding a shortcut requested by apps via the AppWidgetManager.requestPinAppWidget() API method. 3.8.3. Notifications Android includes Notification and NotificationManager APIs that allow third-party app developers to notify users of notable events and attract users' attention using the hardware components (e.g. sound, vibration and light) and software features (e.g. notification shade, system bar) of the device. 3.8.3.1. Presentation of Notifications If device implementations allow third-party apps to notify users of notable events, they: [C-1-1] MUST support notifications that use hardware features, as described in the SDK documentation, and to the extent possible with the device implementation hardware. For instance, if a device implementation includes a vibrator, it MUST correctly implement the vibration APIs. If a device implementation lacks hardware, the corresponding APIs MUST be implemented as no-ops. This behavior is further detailed in section 7. [C-1-2] MUST correctly render all resources (icons, animation files, etc.) provided for in the APIs, or in the Status/System Bar icon style guide, although they MAY provide an alternative user experience for notifications than that provided by the reference Android Open Source implementation. [C-1-3] MUST honor and implement properly the behaviors described for the APIs to update, remove and group notifications. [C-1-4] MUST provide the full behavior of the NotificationChannel API documented in the SDK. [C-1-5] MUST provide a user affordance to block and modify a certain third-party app's notification per each channel and app package level. [C-1-6] MUST also provide a user affordance to display deleted notification channels. [C-1-7] MUST correctly render all resources (images, stickers, icons, etc.) provided through Notification.MessagingStyle alongside the notification text without additional user interaction. For example, MUST show all resources including icons provided through android.app.Person in a group conversation that is set through setGroupConversation. [C-SR] Are STRONGLY RECOMMENDED to automatically surface a user affordance to block a certain third-party app's notification per each channel and app package level after the user dismisses that notification multiple times. SHOULD support rich notifications. SHOULD present some higher priority notifications as heads-up notifications. SHOULD have a user affordance to snooze notifications. MAY only manage the visibility and timing of when third-party apps can notify users of notable events to mitigate safety issues such as driver distraction. Android 11 introduces support for conversation notifications, which are notifications that use MessagingStyle and provides a published People Shortcut ID. Device implementations: [C-SR] Are STRONGLY RECOMMENDED to group and display conversation notifications ahead of non conversation notifications with the exception of ongoing foreground service notifications and importance:high notifications. If device implementations support conversation notifications and the app provides the required data for bubbles, they: [C-SR] Are STRONGLY RECOMMENDED to display this conversation as a bubble. The AOSP implementation meets these requirements with the default System UI, Settings, and Launcher. If device implementations support rich notifications, they: [C-2-1] MUST use the exact resources as provided through the Notification.Style API class and its subclasses for the presented resource elements. SHOULD present each and every resource element (e.g. icon, title and summary text) defined in the Notification.Style API class and its subclasses. If device implementations support heads-up notifications: they: [C-3-1] MUST use the heads-up notification view and resources as described in the Notification.Builder API class when heads-up notifications are presented. [C-3-2] MUST display the actions provided through Notification.Builder.addAction() together with the notification content without additional user interaction as described in the SDK. 3.8.3.2. Notification Listener Service Android includes the NotificationListenerService APIs that allow apps (once explicitly enabled by the user) to receive a copy of all notifications as they are posted or updated. Device implementations: [C-0-1] MUST correctly and promptly update notifications in their entirety to all such installed and user-enabled listener services, including any and all metadata attached to the Notification object. [C-0-2] MUST respect the snoozeNotification() API call, and dismiss the notification and make a callback after the snooze duration that is set in the API call. If device implementations have a user affordance to snooze notifications, they: [C-1-1] MUST reflect the snoozed notification status properly through the standard APIs such as NotificationListenerService.getSnoozedNotifications(). [C-1-2] MUST make this user affordance available to snooze notifications from each installed third-party app's, unless they are from persistent/foreground services. 3.8.3.3. DND (Do not Disturb) If device implementations support the DND feature, they: [C-1-1] MUST, for when the device implementation has provided a means for the user to grant or deny third-party apps to access the DND policy configuration, display Automatic DND rules created by applications alongside the user-created and pre-defined rules. [C-1-3] MUST honor the suppressedVisualEffects values passed along the NotificationManager.Policy and if an app has set any of the SUPPRESSED_EFFECT_SCREEN_OFF or SUPPRESSED_EFFECT_SCREEN_ON flags, it SHOULD indicate to the user that the visual effects are suppressed in the DND settings menu. 3.8.4. Search Android includes APIs that allow developers to incorporate search into their applications and expose their application’s data into the global system search. Generally speaking, this functionality consists of a single, system-wide user interface that allows users to enter queries, displays suggestions as users type, and displays results. The Android APIs allow developers to reuse this interface to provide search within their own apps and allow developers to supply results to the common global search user interface. Android device implementations SHOULD include global search, a single, shared, system-wide search user interface capable of real-time suggestions in response to user input. If device implementations implement the global search interface, they: [C-1-1] MUST implement the APIs that allow third-party applications to add suggestions to the search box when it is run in global search mode. If no third-party applications are installed that make use of the global search: The default behavior SHOULD be to display web search engine results and suggestions. Android also includes the Assist APIs to allow applications to elect how much information of the current context is shared with the assistant on the device. If device implementations support the Assist action, they: [C-2-1] MUST indicate clearly to the end user when the context is shared, by either: Each time the assist app accesses the context, displaying a white light around the edges of the screen that meet or exceed the duration and brightness of the Android Open Source Project implementation. For the preinstalled assist app, providing a user affordance less than two navigations away from the default voice input and assistant app settings menu, and only sharing the context when the assist app is explicitly invoked by the user through a hotword or assist navigation key input. [C-2-2] The designated interaction to launch the assist app as described in section 7.2.3 MUST launch the user-selected assist app, in other words the app that implements VoiceInteractionService, or an activity handling the ACTION_ASSIST intent. 3.8.5. Alerts and Toasts Applications can use the Toast API to display short non-modal strings to the end user that disappear after a brief period of time, and use the TYPE_APPLICATION_OVERLAY window type API to display alert windows as an overlay over other apps. If device implementations include a screen or video output, they: [C-1-1] MUST provide a user affordance to block an app from displaying alert windows that use the TYPE_APPLICATION_OVERLAY . The AOSP implementation meets this requirement by having controls in the notification shade. [C-1-2] MUST honor the Toast API and display Toasts from applications to end users in some highly visible manner. 3.8.6. Themes Android provides “themes” as a mechanism for applications to apply styles across an entire Activity or application. Android includes a “Holo” and ""Material"" theme family as a set of defined styles for application developers to use if they want to match the Holo theme look and feel as defined by the Android SDK. If device implementations include a screen or video output, they: [C-1-1] MUST NOT alter any of the Holo theme attributes exposed to applications. [C-1-2] MUST support the “Material” theme family and MUST NOT alter any of the Material theme attributes or their assets exposed to applications. [C-1-3] MUST either set the ""sans-serif"" font family to Roboto version 2.x for the languages that Roboto supports, or provide a user affordance to change the font used for the ""sans-serif"" font family to Roboto version 2.x for the languages that Roboto supports. Android also includes a “Device Default” theme family as a set of defined styles for application developers to use if they want to match the look and feel of the device theme as defined by the device implementer. Device implementations MAY modify the Device Default theme attributes exposed to applications. Android supports a variant theme with translucent system bars, which allows application developers to fill the area behind the status and navigation bar with their app content. To enable a consistent developer experience in this configuration, it is important the status bar icon style is maintained across different device implementations. If device implementations include a system status bar, they: [C-2-1] MUST use white for system status icons (such as signal strength and battery level) and notifications issued by the system, unless the icon is indicating a problematic status or an app requests a light status bar using the SYSTEM_UI_FLAG_LIGHT_STATUS_BAR flag. [C-2-2] Android device implementations MUST change the color of the system status icons to black (for details, refer to R.style) when an app requests a light status bar. 3.8.7. Live Wallpapers Android defines a component type and corresponding API and lifecycle that allows applications to expose one or more “Live Wallpapers” to the end user. Live wallpapers are animations, patterns, or similar images with limited input capabilities that display as a wallpaper, behind other applications. Hardware is considered capable of reliably running live wallpapers if it can run all live wallpapers, with no limitations on functionality, at a reasonable frame rate with no adverse effects on other applications. If limitations in the hardware cause wallpapers and/or applications to crash, malfunction, consume excessive CPU or battery power, or run at unacceptably low frame rates, the hardware is considered incapable of running live wallpaper. As an example, some live wallpapers may use an OpenGL 2.0 or 3.x context to render their content. Live wallpaper will not run reliably on hardware that does not support multiple OpenGL contexts because the live wallpaper use of an OpenGL context may conflict with other applications that also use an OpenGL context. Device implementations capable of running live wallpapers reliably as described above SHOULD implement live wallpapers. If device implementations implement live wallpapers, they: [C-1-1] MUST report the platform feature flag android.software.live_wallpaper. 3.8.8. Activity Switching The upstream Android source code includes the overview screen, a system-level user interface for task switching and displaying recently accessed activities and tasks using a thumbnail image of the application’s graphical state at the moment the user last left the application. Device implementations including the recents function navigation key as detailed in section 7.2.3 MAY alter the interface. If device implementations including the recents function navigation key as detailed in section 7.2.3 alter the interface, they: [C-1-1] MUST support at least up to 7 displayed activities. SHOULD at least display the title of 4 activities at a time. [C-1-2] MUST implement the screen pinning behavior and provide the user with a settings menu to toggle the feature. SHOULD display highlight color, icon, screen title in recents. SHOULD display a closing affordance (""x"") but MAY delay this until user interacts with screens. SHOULD implement a shortcut to switch easily to the previous activity. SHOULD trigger the fast-switch action between the two most recently used apps, when the recents function key is tapped twice. SHOULD trigger the split-screen multiwindow-mode, if supported, when the recents functions key is long pressed. MAY display affiliated recents as a group that moves together. [SR] Are STRONGLY RECOMMENDED to use the upstream Android user interface (or a similar thumbnail-based interface) for the overview screen. 3.8.9. Input Management Android includes support for Input Management and support for third-party input method editors. If device implementations allow users to use third-party input methods on the device, they: [C-1-1] MUST declare the platform feature android.software.input_methods and support IME APIs as defined in the Android SDK documentation. 3.8.10. Lock Screen Media Control The Remote Control Client API is deprecated from Android 5.0 in favor of the Media Notification Template that allows media applications to integrate with playback controls that are displayed on the lock screen. 3.8.11. Screen savers (previously Dreams) See section 3.2.3.5 for settings intent to congfigure screen savers. 3.8.12. Location If device implementations include a hardware sensor (e.g. GPS) that is capable of providing the location coordinates, they [C-1-2] MUST display the current status of location in the Location menu within Settings. [C-1-3] MUST NOT display location modes in the Location menu within Settings. 3.8.13. Unicode and Font Android includes support for the emoji characters defined in Unicode 10.0. If device implementations include a screen or video output, they: [C-1-1] MUST be capable of rendering these emoji characters in color glyph. [C-1-2] MUST include support for: Roboto 2 font with different weights—sans-serif-thin, sans-serif-light, sans-serif-medium, sans-serif-black, sans-serif-condensed, sans-serif-condensed-light for the languages available on the device. Full Unicode 7.0 coverage of Latin, Greek, and Cyrillic, including the Latin Extended A, B, C, and D ranges, and all glyphs in the currency symbols block of Unicode 7.0. SHOULD support the skin tone and diverse family emojis as specified in the Unicode Technical Report #51. If device implementations include an IME, they: SHOULD provide an input method to the user for these emoji characters. Android includes support to render Myanmar fonts. Myanmar has several non-Unicode compliant fonts, commonly known as “Zawgyi,” for rendering Myanmar languages. If device implementations include support for Burmese, they: * [C-2-1] MUST render text with Unicode compliant font as default; non-Unicode compliant font MUST NOT be set as default font unless the user chooses it in the language picker. * [C-2-2] MUST support a Unicode font and a non-Unicode compliant font if a non-Unicode compliant font is supported on the device. Non-Unicode compliant font MUST NOT remove or overwrite the Unicode font. * [C-2-3] MUST render text with non-Unicode compliant font ONLY IF a language code with [script code Qaag]( http://unicode.org/reports/tr35/#unicode_script_subtag_validity) is specified (e.g. my-Qaag). No other ISO language or region codes (whether assigned, unassigned, or reserved) can be used to refer to non-Unicode compliant font for Myanmar. App developers and web page authors can specify my-Qaag as the designated language code as they would for any other language. 3.8.14. Multi-windows If device implementations have the capability to display multiple activities at the same time, they: [C-1-1] MUST implement such multi-window mode(s) in accordance with the application behaviors and APIs described in the Android SDK multi-window mode support documentation and meet the following requirements: [C-1-2] MUST honor android:resizeableActivity that is set by an app in the AndroidManifest.xml file as described in this SDK. [C-1-3] MUST NOT offer split-screen or freeform mode if the screen height is less than 440 dp and the screen width is less than 440 dp. [C-1-4] An activity MUST NOT be resized to a size smaller than 220dp in multi-window modes other than Picture-in-Picture. Device implementations with screen size xlarge SHOULD support freeform mode. If device implementations support multi-window mode(s), and the split screen mode, they: [C-2-1] MUST preload a resizeable launcher as the default. [C-2-2] MUST crop the docked activity of a split-screen multi-window but SHOULD show some content of it, if the Launcher app is the focused window. [C-2-3] MUST honor the declared AndroidManifestLayout_minWidth and AndroidManifestLayout_minHeight values of the third-party launcher application and not override these values in the course of showing some content of the docked activity. If device implementations support multi-window mode(s) and Picture-in-Picture multi-window mode, they: [C-3-1] MUST launch activities in picture-in-picture multi-window mode when the app is: * Targeting API level 26 or higher and declares android:supportsPictureInPicture * Targeting API level 25 or lower and declares both android:resizeableActivity and android:supportsPictureInPicture. [C-3-2] MUST expose the actions in their SystemUI as specified by the current PIP activity through the setActions() API. [C-3-3] MUST support aspect ratios greater than or equal to 1:2.39 and less than or equal to 2.39:1, as specified by the PIP activity through the setAspectRatio() API. [C-3-4] MUST use KeyEvent.KEYCODE_WINDOW to control the PIP window; if PIP mode is not implemented, the key MUST be available to the foreground activity. [C-3-5] MUST provide a user affordance to block an app from displaying in PIP mode; the AOSP implementation meets this requirement by having controls in the notification shade. [C-3-6] MUST allocate the following minimum width and height for the PIP window when an application does not declare any value for AndroidManifestLayout_minWidth and AndroidManifestLayout_minHeight: Devices with the Configuration.uiMode that is set other than UI_MODE_TYPE_TELEVISION MUST allocate a minimum width and height of 108 dp. Devices with the Configuration.uiMode that is set to UI_MODE_TYPE_TELEVISION MUST allocate a minimum width of 240 dp and a minimum height of 135 dp. 3.8.15. Display Cutout Android supports a Display Cutout as described in the SDK document. The DisplayCutout API defines an area on the edge of the display that may not be functional for an application due to a display cutout or curved display on the edge(s). If device implementations include display cutout(s), they: [C-1-5] MUST NOT have cutout(s) if the device's aspect ratio is 1.0(1:1). [C-1-2] MUST NOT have more than one cutout per edge. [C-1-3] MUST honor the display cutout flags set by the app through the WindowManager.LayoutParams API as described in the SDK. [C-1-4] MUST report correct values for all cutout metrics defined in the DisplayCutout API. 3.8.16. Device Controls Android includes ControlsProviderService and Control APIs to allow third-party applications to publish device controls for quick status and action for users. See Section 2_2_3 for device-specific requirements. 3.9. Device Administration Android includes features that allow security-aware applications to perform device administration functions at the system level, such as enforcing password policies or performing remote wipe, through the Android Device Administration API. If device implementations implement the full range of device administration policies defined in the Android SDK documentation, they: [C-1-1] MUST declare android.software.device_admin. [C-1-2] MUST support device owner provisioning as described in section 3.9.1 and section 3.9.1.1. 3.9.1 Device Provisioning 3.9.1.1 Device owner provisioning If device implementations declare android.software.device_admin, they: [C-1-1] MUST support enrolling a Device Policy Client (DPC) as a Device Owner app as described below: When the device implementation has no user data yet, it: [C-1-3] MUST report true for DevicePolicyManager.isProvisioningAllowed(ACTION_PROVISION_MANAGED_DEVICE). [C-1-4] MUST enroll the DPC application as the Device Owner app in response to the intent action android.app.action.PROVISION_MANAGED_DEVICE. [C-1-5] MUST enroll the DPC application as the Device Owner app if the device declares Near-Field Communications (NFC) support via the feature flag android.hardware.nfc and receives an NFC message containing a record with MIME type MIME_TYPE_PROVISIONING_NFC. When the device implementation has user data, it: [C-1-6] MUST report false for the DevicePolicyManager.isProvisioningAllowed(ACTION_PROVISION_MANAGED_DEVICE). [C-1-7] MUST not enroll any DPC application as the Device Owner App any more. [C-1-2] MUST require some affirmative action before or during the provisioning process to consent to the app being set as Device Owner. Consent can be via user action or by some programmatic means but appropriate disclosure notice (as referenced in AOSP) MUST be shown before device owner provisioning is initiated. Also, the programmatic device owner consent mechanism used (by enterprises) for device owner provisioning MUST NOT interfere with the Out-Of-Box Experience for non-enterprise use. [C-1-3] MUST NOT hard code the consent or prevent the use of other device owner apps. If device implementations declare android.software.device_admin, but also include a proprietary Device Owner management solution and provide a mechanism to promote an application configured in their solution as a ""Device Owner equivalent"" to the standard ""Device Owner"" as recognized by the standard Android DevicePolicyManager APIs, they: [C-2-1] MUST have a process in place to verify that the specific app being promoted belongs to a legitimate enterprise device management solution and it has been already configured in the proprietary solution to have the rights equivalent as a ""Device Owner"". [C-2-2] MUST show the same AOSP Device Owner consent disclosure as the flow initiated by android.app.action.PROVISION_MANAGED_DEVICE prior to enrolling the DPC application as ""Device Owner"". MAY have user data on the device prior to enrolling the DPC application as ""Device Owner"". 3.9.1.2 Managed profile provisioning If device implementations declare android.software.managed_users, they: [C-1-1] MUST implement the APIs allowing a Device Policy Controller (DPC) application to become the owner of a new Managed Profile. [C-1-2] The managed profile provisioning process (the flow initiated by android.app.action.PROVISION_MANAGED_PROFILE) users experience MUST align with the AOSP implementation. [C-1-3] MUST provide the following user affordances within the Settings to indicate to the user when a particular system function has been disabled by the Device Policy Controller (DPC): A consistent icon or other user affordance (for example the upstream AOSP info icon) to represent when a particular setting is restricted by a Device Admin. A short explanation message, as provided by the Device Admin via the setShortSupportMessage. The DPC application’s icon. 3.9.2 Managed Profile Support If device implementations declare android.software.managed_users, they: [C-1-1] MUST support managed profiles via the android.app.admin.DevicePolicyManager APIs. [C-1-2] MUST allow one and only one managed profile to be created. [C-1-3] MUST use an icon badge (similar to the AOSP upstream work badge) to represent the managed applications and widgets and other badged UI elements like Recents & Notifications. [C-1-4] MUST display a notification icon (similar to the AOSP upstream work badge) to indicate when user is within a managed profile application. [C-1-5] MUST display a toast indicating that the user is in the managed profile if and when the device wakes up (ACTION_USER_PRESENT) and the foreground application is within the managed profile. [C-1-6] Where a managed profile exists, MUST show a visual affordance in the Intent 'Chooser' to allow the user to forward the intent from the managed profile to the primary user or vice versa, if enabled by the Device Policy Controller. [C-1-7] Where a managed profile exists, MUST expose the following user affordances for both the primary user and the managed profile: Separate accounting for battery, location, mobile data and storage usage for the primary user and managed profile. Independent management of VPN Applications installed within the primary user or managed profile. Independent management of applications installed within the primary user or managed profile. Independent management of accounts within the primary user or managed profile. [C-1-8] MUST ensure the preinstalled dialer, contacts and messaging applications can search for and look up caller information from the managed profile (if one exists) alongside those from the primary profile, if the Device Policy Controller permits it. [C-1-9] MUST ensure that it satisfies all the security requirements applicable for a device with multiple users enabled (see section 9.5), even though the managed profile is not counted as another user in addition to the primary user. If device implementations declare android.software.managed_users and android.software.secure_lock_screen, they: [C-2-1] MUST support the ability to specify a separate lock screen meeting the following requirements to grant access to apps running in a managed profile only. Device implementations MUST honor the DevicePolicyManager.ACTION_SET_NEW_PASSWORD intent and show an interface to configure a separate lock screen credential for the managed profile. The lock screen credentials of the managed profile MUST use the same credential storage and management mechanisms as the parent profile, as documented on the Android Open Source Project Site. The DPC password policies MUST apply to only the managed profile's lock screen credentials unless called upon the DevicePolicyManager instance returned by getParentProfileInstance. When contacts from the managed profile are displayed in the preinstalled call log, in-call UI, in-progress and missed-call notifications, contacts and messaging apps they SHOULD be badged with the same badge used to indicate managed profile applications. 3.9.3 Managed User Support If device implementations declare android.software.managed_users, they: [C-1-1] MUST provide a user affordance to logout from the current user and switch back to the primary user in multiple-user session when isLogoutEnabled returns true. The user affordance MUST be accessible from the lockscreen without unlocking the device. 3.10. Accessibility Android provides an accessibility layer that helps users with disabilities to navigate their devices more easily. In addition, Android provides platform APIs that enable accessibility service implementations to receive callbacks for user and system events and generate alternate feedback mechanisms, such as text-to-speech, haptic feedback, and trackball/d-pad navigation. If device implementations support third-party accessibility services, they: [C-1-1] MUST provide an implementation of the Android accessibility framework as described in the accessibility APIs SDK documentation. [C-1-2] MUST generate accessibility events and deliver the appropriate AccessibilityEvent to all registered AccessibilityService implementations as documented in the SDK. [C-1-4] MUST add a button in the system's navigation bar allowing the user to control the accessibility service when the enabled accessibility services declare the AccessibilityServiceInfo.FLAG_REQUEST_ACCESSIBILITY_BUTTON . Note that for device implementations with no system navigation bar, this requirement is not applicable, but device implementations SHOULD provide a user affordance to control these accessibility services. If device implementations include preinstalled accessibility services, they: [C-2-1] MUST implement these preinstalled accessibility services as Direct Boot Aware apps when the data storage is encrypted with File Based Encryption (FBE). SHOULD provide a mechanism in the out-of-box setup flow for users to enable relevant accessibility services, as well as options to adjust the font size, display size and magnification gestures. 3.11. Text-to-Speech Android includes APIs that allow applications to make use of text-to-speech (TTS) services and allows service providers to provide implementations of TTS services. If device implementations reporting the feature android.hardware.audio.output, they: [C-1-1] MUST support the Android TTS framework APIs. If device implementations support installation of third-party TTS engines, they: [C-2-1] MUST provide user affordance to allow the user to select a TTS engine for use at system level. 3.12. TV Input Framework The Android Television Input Framework (TIF) simplifies the delivery of live content to Android Television devices. TIF provides a standard API to create input modules that control Android Television devices. If device implementations support TIF, they: [C-1-1] MUST declare the platform feature android.software.live_tv. [C-1-2] MUST support all TIF APIs such that an application which uses these APIs and the third-party TIF-based inputs service can be installed and used on the device. 3.13. Quick Settings Android provides a Quick Settings UI component that allows quick access to frequently used or urgently needed actions. If device implementations include a Quick Settings UI component and support third-party Quick Settings, they: [C-1-1] MUST allow the user to add or remove the tiles provided through the quicksettings APIs from a third-party app. [C-1-2] MUST NOT automatically add a tile from a third-party app directly to the Quick Settings. [C-1-3] MUST display all the user-added tiles from third-party apps alongside the system-provided quick setting tiles. 3.14. Media UI If device implementations include non-voice-activated applications (the Apps) that interact with third-party applications through MediaBrowser or MediaSession, the Apps: [C-1-2] MUST clearly display icons obtained via getIconBitmap() or getIconUri() and titles obtained via getTitle() as described in MediaDescription. May shorten titles to comply with safety regulations (e.g. driver distraction). [C-1-3] MUST show the third-party application icon whenever displaying content provided by this third-party application. [C-1-4] MUST allow the user to interact with the entire MediaBrowser hierarchy. MAY restrict the access to part of the hierarchy to comply with safety regulations (e.g. driver distraction), but MUST NOT give preferential treatment based on content or content provider. [C-1-5] MUST consider double tap of KEYCODE_HEADSETHOOK or KEYCODE_MEDIA_PLAY_PAUSE as KEYCODE_MEDIA_NEXT for MediaSession.Callback#onMediaButtonEvent. 3.15. Instant Apps Device implementations MUST satisfy the following requirements: [C-0-1] Instant Apps MUST only be granted permissions that have the android:protectionLevel set to ""instant"". [C-0-2] Instant Apps MUST NOT interact with installed apps via implicit intents unless one of the following is true: The component's intent pattern filter is exposed and has CATEGORY_BROWSABLE The action is one of ACTION_SEND, ACTION_SENDTO, ACTION_SEND_MULTIPLE The target is explicitly exposed with android:visibleToInstantApps [C-0-3] Instant Apps MUST NOT interact explicitly with installed apps unless the component is exposed via android:visibleToInstantApps. [C-0-4] Installed Apps MUST NOT see details about Instant Apps on the device unless the Instant App explicitly connects to the installed application. If device implementations support instant apps, then they: [C-1-1] MUST provide the following user affordances for interacting with Instant Apps. The AOSP meets the requirements with the default System UI, Settings, and Launcher. [C-1-2] MUST provide a user affordance to view and delete Instant Apps locally cached for each individual app package. [C-1-3] MUST provide a persistent user notification that can be collapsed while an Instant App is running in the foreground. This user notification MUST include that Instant Apps do not require installation and provide a user affordance that directs the user to the application info screen in Settings. For Instant Apps launched via web intents, as defined by using an intent with action set to Intent.ACTION_VIEW and with a scheme of ""http"" or ""https"", an additional user affordance SHOULD allow the user not to launch the Instant App and launch the associated link with the configured web browser, if a browser is available on the device. [C-1-4] MUST allow running Instant Apps to be accessed from the Recents function if the Recents function is available on the device. [C-1-5] MUST preload one or more applications or service components with an intent handler for the intents listed in the SDK here and make the intents visible for Instant Apps. 3.16. Companion Device Pairing Android includes support for companion device pairing to more effectively manage association with companion devices and provides the CompanionDeviceManager API for apps to access this feature. If device implementations support the companion device pairing feature, they: [C-1-1] MUST declare the feature flag FEATURE_COMPANION_DEVICE_SETUP . [C-1-2] MUST ensure the APIs in the android.companion package is fully implemented. [C-1-3] MUST provide user affordances for the user to select/confirm a companion device is present and operational. 3.17. Heavyweight Apps If device implementations declare the feature FEATURE_CANT_SAVE_STATE, then they: [C-1-1] MUST have only one installed app that specifies cantSaveState running in the system at a time. If the user leaves such an app without explicitly exiting it (for example by pressing home while leaving an active activity the system, instead of pressing back with no remaining active activities in the system), then device implementations MUST prioritize that app in RAM as they do for other things that are expected to remain running, such as foreground services. While such an app is in the background, the system can still apply power management features to it, such as limiting CPU and network access. [C-1-2] MUST provide a UI affordance to chose the app that won't participate in the normal state save/restore mechanism once the user launches a second app declared with cantSaveState attribute. [C-1-3] MUST NOT apply other changes in policy to apps that specify cantSaveState, such as changing CPU performance or changing scheduling prioritization. If device implementations don't declare the feature FEATURE_CANT_SAVE_STATE, then they: [C-1-1] MUST ignore the cantSaveState attribute set by apps and MUST NOT change the app behavior based on that attribute. 3.18. Contacts Android includes Contacts Provider APIs to allow applications to manage contact information stored on the device. Contact data that is entered directly into the device is typically synchronized with a web service, but the data MAY also only reside locally on the device. Contacts that are only stored on the device are referred to as local contacts. RawContacts are ""associated with"" or ""stored in"" an Account when the ACCOUNT_NAME, and ACCOUNT_TYPE, columns for the raw contacts match the corresponding Account.name and Account.type fields of the account. Default local account: an account for raw contacts that are only stored on the device and not associated with an Account in the AccountManager, which are created with null values for the ACCOUNT_NAME, and ACCOUNT_TYPE, columns. Custom local account: an account for raw contacts that are only stored on the device and not associated with an Account in the AccountManager, which are created with at least one non-null value for the ACCOUNT_NAME, and ACCOUNT_TYPE, columns. Device implementations: [C-SR] Are STRONGLY RECOMMENDED to not create custom local accounts. If device implementations use a custom local account: [C-1-1] The ACCOUNT_NAME, of the custom local account MUST be returned by ContactsContract.RawContacts.getLocalAccountName [C-1-2] The ACCOUNT_TYPE, of the custom local account MUST be returned by ContactsContract.RawContacts.getLocalAccountType [C-1-3] Raw contacts that are inserted by third party applications with the default local account (i.e. by setting null values for ACCOUNT_NAME and ACCOUNT_TYPE) MUST be inserted to the custom local account. [C-1-4] Raw contacts inserted into the custom local account MUST not be removed when accounts are added or removed. [C-1-5] Delete operations performed against the custom local account MUST result in raw contacts being purged immediately (as if the CALLER_IS_SYNCADAPTER param was set to true), even if the CALLER\_IS\_SYNCADAPTER param was set to false or not specified. 4. Application Packaging Compatibility Devices implementations: [C-0-1] MUST be capable of installing and running Android “.apk” files as generated by the “aapt” tool included in the official Android SDK. As the above requirement may be challenging, device implementations are RECOMMENDED to use the AOSP reference implementation's package management system. Device implementations: [C-0-2] MUST support verifying “.apk” files using the APK Signature Scheme v3 , APK Signature Scheme v2 and JAR signing. [C-0-3] MUST NOT extend either the .apk, Android Manifest, Dalvik bytecode, or RenderScript bytecode formats in such a way that would prevent those files from installing and running correctly on other compatible devices. [C-0-4] MUST NOT allow apps other than the current ""installer of record"" for the package to silently uninstall the app without any user confirmation, as documented in the SDK for the DELETE_PACKAGE permission. The only exceptions are the system package verifier app handling PACKAGE_NEEDS_VERIFICATION intent and the storage manager app handling ACTION_MANAGE_STORAGE intent. [C-0-5] MUST have an activity that handles the android.settings.MANAGE_UNKNOWN_APP_SOURCES intent. [C-0-6] MUST NOT install application packages from unknown sources, unless the app that requests the installation meets all the following requirements: It MUST declare the REQUEST_INSTALL_PACKAGES permission or have the android:targetSdkVersion set at 24 or lower. It MUST have been granted permission by the user to install apps from unknown sources. SHOULD provide a user affordance to grant/revoke the permission to install apps from unknown sources per application, but MAY choose to implement this as a no-op and return RESULT_CANCELED for startActivityForResult(), if the device implementation does not want to allow users to have this choice. However, even in such cases, they SHOULD indicate to the user why there is no such choice presented. [C-0-7] MUST display a warning dialog with the warning string that is provided through the system API PackageManager.setHarmfulAppWarning to the user before launching an activity in an application that has been marked by the same system API PackageManager.setHarmfulAppWarning as potentially harmful. SHOULD provide a user affordance to choose to uninstall or launch an application on the warning dialog. [C-0-8] MUST implement support for Incremental File System as documented here. [C-0-9] MUST support verifying .apk files using the APK Signature Scheme v4. If device implementations are already launched on an earlier Android version and cannot meet the requirements [C-0-8] and [C-0-9] through a system software update, they MAY be exempted from these requirements. 5. Multimedia Compatibility Device implementations: [C-0-1] MUST support the media formats, encoders, decoders, file types, and container formats defined in section 5.1 for each and every codec declared by MediaCodecList. [C-0-2] MUST declare and report support of the encoders, decoders available to third-party applications via MediaCodecList. [C-0-3] MUST be able to properly decode and make available to third-party apps all the formats it can encode. This includes all bitstreams that its encoders generate and the profiles reported in its CamcorderProfile. Device implementations: SHOULD aim for minimum codec latency, in others words, they SHOULD NOT consume and store input buffers and return input buffers only once processed. SHOULD NOT hold onto decoded buffers for longer than as specified by the standard (e.g. SPS). SHOULD NOT hold onto encoded buffers longer than required by the GOP structure. All of the codecs listed in the section below are provided as software implementations in the preferred Android implementation from the Android Open Source Project. Please note that neither Google nor the Open Handset Alliance make any representation that these codecs are free from third-party patents. Those intending to use this source code in hardware or software products are advised that implementations of this code, including in open source software or shareware, may require patent licenses from the relevant patent holders. 5.1. Media Codecs 5.1.1. Audio Encoding See more details in 5.1.3. Audio Codecs Details. If device implementations declare android.hardware.microphone, they MUST support encoding the following audio formats and make them available to third-party apps: [C-1-1] PCM/WAVE [C-1-2] FLAC [C-1-3] Opus All audio encoders MUST support: [C-3-1] PCM 16-bit native byte order audio frames via the android.media.MediaCodec API. 5.1.2. Audio Decoding See more details in 5.1.3. Audio Codecs Details. If device implementations declare support for the android.hardware.audio.output feature, they must support decoding the following audio formats: [C-1-1] MPEG-4 AAC Profile (AAC LC) [C-1-2] MPEG-4 HE AAC Profile (AAC+) [C-1-3] MPEG-4 HE AACv2 Profile (enhanced AAC+) [C-1-4] AAC ELD (enhanced low delay AAC) [C-1-11] xHE-AAC (ISO/IEC 23003-3 Extended HE AAC Profile, which includes the USAC Baseline Profile, and ISO/IEC 23003-4 Dynamic Range Control Profile) [C-1-5] FLAC [C-1-6] MP3 [C-1-7] MIDI [C-1-8] Vorbis [C-1-9] PCM/WAVE including high-resolution audio formats up to 24 bits, 192 kHz sample rate, and 8 channels. Note that this requirement is for decoding only, and that a device is permitted to downsample and downmix during the playback phase. [C-1-10] Opus If device implementations support the decoding of AAC input buffers of multichannel streams (i.e. more than two channels) to PCM through the default AAC audio decoder in the android.media.MediaCodec API, the following MUST be supported: [C-2-1] Decoding MUST be performed without downmixing (e.g. a 5.0 AAC stream must be decoded to five channels of PCM, a 5.1 AAC stream must be decoded to six channels of PCM). [C-2-2] Dynamic range metadata MUST be as defined in ""Dynamic Range Control (DRC)"" in ISO/IEC 14496-3, and the android.media.MediaFormat DRC keys to configure the dynamic range-related behaviors of the audio decoder. The AAC DRC keys were introduced in API 21, and are: KEY_AAC_DRC_ATTENUATION_FACTOR, KEY_AAC_DRC_BOOST_FACTOR, KEY_AAC_DRC_HEAVY_COMPRESSION, KEY_AAC_DRC_TARGET_REFERENCE_LEVEL and KEY_AAC_ENCODED_TARGET_LEVEL. [SR] It is STRONGLY RECOMMENDED that requirements C-2-1 and C-2-2 above are satisfied by all AAC audio decoders. When decoding USAC audio, MPEG-D (ISO/IEC 23003-4): [C-3-1] Loudness and DRC metadata MUST be interpreted and applied according to MPEG-D DRC Dynamic Range Control Profile Level 1. [C-3-2] The decoder MUST behave according to the configuration set with the following android.media.MediaFormat keys: KEY_AAC_DRC_TARGET_REFERENCE_LEVEL and KEY_AAC_DRC_EFFECT_TYPE. MPEG-4 AAC, HE AAC, and HE AACv2 profile decoders: MAY support loudness and dynamic range control using ISO/IEC 23003-4 Dynamic Range Control Profile. If ISO/IEC 23003-4 is supported and if both ISO/IEC 23003-4 and ISO/IEC 14496-3 metadata are present in a decoded bitstream, then: ISO/IEC 23003-4 metadata SHALL take precedence. All audio decoders MUST support outputting: [C-6-1] PCM 16-bit native byte order audio frames via the android.media.MediaCodec API. 5.1.3. Audio Codecs Details Format/Codec Details File Types/Container Formats to be supported MPEG-4 AAC Profile (AAC LC) Support for mono/stereo/5.0/5.1 content with standard sampling rates from 8 to 48 kHz. 3GPP (.3gp) MPEG-4 (.mp4, .m4a) ADTS raw AAC (.aac, ADIF not supported) MPEG-TS (.ts, not seekable, decode only) Matroska (.mkv, decode only) MPEG-4 HE AAC Profile (AAC+) Support for mono/stereo/5.0/5.1 content with standard sampling rates from 16 to 48 kHz. 3GPP (.3gp) MPEG-4 (.mp4, .m4a) MPEG-4 HE AACv2 Profile (enhanced AAC+) Support for mono/stereo/5.0/5.1 content with standard sampling rates from 16 to 48 kHz. 3GPP (.3gp) MPEG-4 (.mp4, .m4a) AAC ELD (enhanced low delay AAC) Support for mono/stereo content with standard sampling rates from 16 to 48 kHz. 3GPP (.3gp) MPEG-4 (.mp4, .m4a) USAC Support for mono/stereo content with standard sampling rates from 7.35 to 48 kHz. MPEG-4 (.mp4, .m4a) AMR-NB 4.75 to 12.2 kbps sampled @ 8 kHz 3GPP (.3gp) AMR-WB 9 rates from 6.60 kbit/s to 23.85 kbit/s sampled @ 16 kHz, as defined at AMR-WB, Adaptive Multi-Rate - Wideband Speech Codec 3GPP (.3gp) FLAC For both encoder and decoder: at least Mono and Stereo modes MUST be supported. Sample rates up to 192 kHz MUST be supported; 16-bit and 24-bit resolution MUST be supported. FLAC 24-bit audio data handling MUST be available with floating point audio configuration. FLAC (.flac) MPEG-4 (.mp4, .m4a, decode only) Matroska (.mkv, decode only) MP3 Mono/Stereo 8-320Kbps constant (CBR) or variable bitrate (VBR) MP3 (.mp3) MPEG-4 (.mp4, .m4a, decode only) Matroska (.mkv, decode only) MIDI MIDI Type 0 and 1. DLS Version 1 and 2. XMF and Mobile XMF. Support for ringtone formats RTTTL/RTX, OTA, and iMelody Type 0 and 1 (.mid, .xmf, .mxmf) RTTTL/RTX (.rtttl, .rtx) iMelody (.imy) Vorbis Ogg (.ogg) MPEG-4 (.mp4, .m4a, decode only) Matroska (.mkv) Webm (.webm) PCM/WAVE PCM codec MUST support 16-bit linear PCM and 16-bit float. WAVE extractor must support 16-bit, 24-bit, 32-bit linear PCM and 32-bit float (rates up to limit of hardware). Sampling rates MUST be supported from 8 kHz to 192 kHz. WAVE (.wav) Opus Decoding: Support for mono, stereo, 5.0 and 5.1 content with sampling rates of 8000, 12000, 16000, 24000, and 48000 Hz. Encoding: Support for mono and stereo content with sampling rates of 8000, 12000, 16000, 24000, and 48000 Hz. Ogg (.ogg) MPEG-4 (.mp4, .m4a, decode only) Matroska (.mkv) Webm (.webm) 5.1.4. Image Encoding See more details in 5.1.6. Image Codecs Details. Device implementations MUST support encoding the following image encoding: [C-0-1] JPEG [C-0-2] PNG [C-0-3] WebP If device implementations support HEIC encoding via android.media.MediaCodec for media type MIMETYPE_IMAGE_ANDROID_HEIC, they: [C-1-1] MUST provide a hardware-accelerated HEVC encoder codec that supports BITRATE_MODE_CQ bitrate control mode, HEVCProfileMainStill profile and 512 x 512 px frame size. 5.1.5. Image Decoding See more details in 5.1.6. Image Codecs Details. Device implementations MUST support decoding the following image encoding: [C-0-1] JPEG [C-0-2] GIF [C-0-3] PNG [C-0-4] BMP [C-0-5] WebP [C-0-6] Raw If device implementations support HEVC video decoding, they: * [C-1-1] MUST support HEIF (HEIC) image decoding. Image decoders that support a high bit-depth format (9+ bits per channel): [C-2-1] MUST support outputting an 8-bit equivalent format if requested by the application, for example, via the ARGB_8888 config of android.graphics.Bitmap. 5.1.6. Image Codecs Details Format/Codec Details Supported File Types/Container Formats JPEG Base+progressive JPEG (.jpg) GIF GIF (.gif) PNG PNG (.png) BMP BMP (.bmp) WebP WebP (.webp) Raw ARW (.arw), CR2 (.cr2), DNG (.dng), NEF (.nef), NRW (.nrw), ORF (.orf), PEF (.pef), RAF (.raf), RW2 (.rw2), SRW (.srw) HEIF Image, Image collection, Image sequence HEIF (.heif), HEIC (.heic) Image encoder and decoders exposed through the MediaCodec API [C-1-1] MUST support YUV420 8:8:8 flexible color format (COLOR_FormatYUV420Flexible) through CodecCapabilities. [SR] STRONGLY RECOMMENDED to support RGB888 color format for input Surface mode. [C-1-3] MUST support at least one of a planar or semiplanar YUV420 8:8:8 color format: COLOR_FormatYUV420PackedPlanar (equivalent to COLOR_FormatYUV420Planar) or COLOR_FormatYUV420PackedSemiPlanar (equivalent to COLOR_FormatYUV420SemiPlanar). They are STRONGLY RECOMMENDED to support both. 5.1.7. Video Codecs For acceptable quality of web video streaming and video-conference services, device implementations SHOULD use a hardware VP8 codec that meets the requirements. If device implementations include a video decoder or encoder: [C-1-1] Video codecs MUST support output and input bytebuffer sizes that accommodate the largest feasible compressed and uncompressed frame as dictated by the standard and configuration but also not overallocate. [C-1-2] Video encoders and decoders MUST support YUV420 8:8:8 flexible color formats (COLOR_FormatYUV420Flexible) through CodecCapabilities. [C-1-3] Video encoders and decoders MUST support at least one of a planar or semiplanar YUV420 8:8:8 color format: COLOR_FormatYUV420PackedPlanar (equivalent to COLOR_FormatYUV420Planar) or COLOR_FormatYUV420PackedSemiPlanar (equivalent to COLOR_FormatYUV420SemiPlanar). They are STRONGLY RECOMMENDED to support both. [SR] Video encoders and decoders are STRONGLY RECOMMENDED to support at least one of a hardware optimized planar or semiplanar YUV420 8:8:8 color format (YV12, NV12, NV21 or equivalent vendor optimized format.) [C-1-5] Video decoders that support a high bit-depth format (9+ bits per channel) MUST support outputting an 8-bit equivalent format if requested by the application. This MUST be reflected by supporting an YUV420 8:8:8 color format via android.media.MediaCodecInfo. If device implementations advertise HDR profile support through Display.HdrCapabilities, they: [C-2-1] MUST support HDR static metadata parsing and handling. If device implementations advertise intra refresh support through FEATURE_IntraRefresh in the MediaCodecInfo.CodecCapabilities class, they: [C-3-1] MUST support the refresh periods in the range of 10 - 60 frames and accurately operate within 20% of configured refresh period. Unless the application specifies otherwise using the KEY_COLOR_FORMAT format key, video decoder implementations: [C-4-1] MUST default to the color format optimized for hardware display if configured using Surface output. [C-4-2] MUST default to a YUV420 8:8:8 color format optimized for CPU reading if configured to not use Surface output. 5.1.8. Video Codecs List Format/Codec Details File Types/Container Formats to be supported H.263 3GPP (.3gp) MPEG-4 (.mp4) Matroska (.mkv, decode only) H.264 AVC See section 5.2 and 5.3 for details 3GPP (.3gp) MPEG-4 (.mp4) MPEG-2 TS (.ts, not seekable) Matroska (.mkv, decode only) H.265 HEVC See section 5.3 for details MPEG-4 (.mp4) Matroska (.mkv, decode only) MPEG-2 Main Profile MPEG2-TS (.ts, not seekable) MPEG-4 (.mp4, decode only) Matroska (.mkv, decode only) MPEG-4 SP 3GPP (.3gp) MPEG-4 (.mp4) Matroska (.mkv, decode only) VP8 See section 5.2 and 5.3 for details WebM (.webm) Matroska (.mkv) VP9 See section 5.3 for details WebM (.webm) Matroska (.mkv) 5.1.9. Media Codec Security Device implementations MUST ensure compliance with media codec security features as described below. Android includes support for OMX, a cross-platform multimedia acceleration API, as well as Codec 2.0, a low-overhead multimedia acceleration API. If device implementations support multimedia, they: [C-1-1] MUST provide support for media codecs either via OMX or Codec 2.0 APIs (or both) as in the Android Open Source Project and not disable or circumvent the security protections. This specifically does not mean that every codec MUST use either the OMX or Codec 2.0 API, only that support for at least one of these APIs MUST be available, and support for the available APIs MUST include the security protections present. [C-SR] Are STRONGLY RECOMMENDED to include support for Codec 2.0 API. If device implementations do not support the Codec 2.0 API, they: [C-2-1] MUST include the corresponding OMX software codec from the Android Open Source Project (if it is available) for each media format and type (encoder or decoder) supported by the device. [C-2-2] Codecs that have names starting with ""OMX.google."" MUST be based on their Android Open Source Project source code. [C-SR] Are STRONGLY RECOMMENDED that the OMX software codecs run in a codec process that does not have access to hardware drivers other than memory mappers. If device implementations support Codec 2.0 API, they: [C-3-1] MUST include the corresponding Codec 2.0 software codec from the Android Open Source Project (if it is available) for each media format and type (encoder or decoder) supported by the device. [C-3-2] MUST house the Codec 2.0 software codecs in the software codec process as provided in the Android Open Source Project to make it possible to more narrowly grant access to software codecs. [C-3-3] Codecs that have names starting with ""c2.android."" MUST be based on their Android Open Source Project source code. 5.1.10. Media Codec Characterization If device implementations support media codecs, they: [C-1-1] MUST return correct values of media codec characterization via the MediaCodecInfo API. In particular: [C-1-2] Codecs with names starting with ""OMX."" MUST use the OMX APIs and have names that conform to OMX IL naming guidelines. [C-1-3] Codecs with names starting with ""c2."" MUST use the Codec 2.0 API and have names that conform to Codec 2.0 naming guidelines for Android. [C-1-4] Codecs with names starting with ""OMX.google."" or ""c2.android."" MUST NOT be characterized as vendor or as hardware-accelerated. [C-1-5] Codecs that run in a codec process (vendor or system) that have access to hardware drivers other than memory allocators and mappers MUST NOT be characterized as software-only. [C-1-6] Codecs not present in the Android Open Source Project or not based on the source code in that project MUST be characterized as vendor. [C-1-7] Codecs that utilize hardware acceleration MUST be characterized as hardware accelerated. [C-1-8] Codec names MUST NOT be misleading. For example, codecs named ""decoders"" MUST support decoding, and those named ""encoders"" MUST support encoding. Codecs with names containing media formats MUST support those formats. If device implementations support video codecs: [C-2-1] All video codecs MUST publish achievable frame rate data for the following sizes if supported by the codec: SD (low quality) SD (high quality) HD 720p HD 1080p UHD Video resolution 176 x 144 px (H263, MPEG2, MPEG4) 352 x 288 px (MPEG4 encoder, H263, MPEG2) 320 x 180 px (VP8, VP8) 320 x 240 px (other) 704 x 576 px (H263) 640 x 360 px (VP8, VP9) 640 x 480 px (MPEG4 encoder) 720 x 480 px (other) 1408 x 1152 px (H263) 1280 x 720 px (other) 1920 x 1080 px (other than MPEG4) 3840 x 2160 px (HEVC, VP9) [C-2-2] Video codecs that are characterized as hardware accelerated MUST publish performance points information. They MUST each list all supported standard performance points (listed in PerformancePoint API), unless they are covered by another supported standard performance point. Additionally they SHOULD publish extended performance points if they support sustained video performance other than one of the standard ones listed. 5.2. Video Encoding If device implementations support any video encoder and make it available to third-party apps, they: SHOULD NOT be, over two sliding windows, more than 15% over the bitrate between intraframe (I-frame) intervals. SHOULD NOT be more than 100% over the bitrate over a sliding window of 1 second. If device implementations include an embedded screen display with the diagonal length of at least 2.5 inches or include a video output port or declare the support of a camera via the android.hardware.camera.any feature flag, they: [C-1-1] MUST include the support of at least one of the VP8 or H.264 video encoders, and make it available for third-party applications. SHOULD support both VP8 and H.264 video encoders, and make it available for third-party applications. If device implementations support any of the H.264, VP8, VP9 or HEVC video encoders and make it available to third-party applications, they: [C-2-1] MUST support dynamically configurable bitrates. SHOULD support variable frame rates, where video encoder SHOULD determine instantaneous frame duration based on the timestamps of input buffers, and allocate its bit bucket based on that frame duration. If device implementations support the MPEG-4 SP video encoder and make it available to third-party apps, they: SHOULD support dynamically configurable bitrates for the supported encoder. If device implementations provide hardware accelerated video or image encoders, and support one or more attached or pluggable hardware camera(s) exposed through the android.camera APIs: [C-4-1] all hardware accelerated video and image encoders MUST support encoding frames from the hardware camera(s). SHOULD support encoding frames from the hardware camera(s) through all video or image encoders. 5.2.1. H.263 If device implementations support H.263 encoders and make it available to third-party apps, they: [C-1-1] MUST support Baseline Profile Level 45. SHOULD support dynamically configurable bitrates for the supported encoder. 5.2.2. H.264 If device implementations support H.264 codec, they: [C-1-1] MUST support Baseline Profile Level 3. However, support for ASO (Arbitrary Slice Ordering), FMO (Flexible Macroblock Ordering) and RS (Redundant Slices) is OPTIONAL. Moreover, to maintain compatibility with other Android devices, it is RECOMMENDED that ASO, FMO and RS are not used for Baseline Profile by encoders. [C-1-2] MUST support the SD (Standard Definition) video encoding profiles in the following table. SHOULD support Main Profile Level 4. SHOULD support the HD (High Definition) video encoding profiles as indicated in the following table. If device implementations report support of H.264 encoding for 720p or 1080p resolution videos through the media APIs, they: [C-2-1] MUST support the encoding profiles in the following table. SD (Low quality) SD (High quality) HD 720p HD 1080p Video resolution 320 x 240 px 720 x 480 px 1280 x 720 px 1920 x 1080 px Video frame rate 20 fps 30 fps 30 fps 30 fps Video bitrate 384 Kbps 2 Mbps 4 Mbps 10 Mbps 5.2.3. VP8 If device implementations support VP8 codec, they: [C-1-1] MUST support the SD video encoding profiles. SHOULD support the following HD (High Definition) video encoding profiles. [C-1-2] MUST support writing Matroska WebM files. SHOULD provide a hardware VP8 codec that meets the WebM project RTC hardware coding requirements, to ensure acceptable quality of web video streaming and video-conference services. If device implementations report support of VP8 encoding for 720p or 1080p resolution videos through the media APIs, they: [C-2-1] MUST support the encoding profiles in the following table. SD (Low quality) SD (High quality) HD 720p HD 1080p Video resolution 320 x 180 px 640 x 360 px 1280 x 720 px 1920 x 1080 px Video frame rate 30 fps 30 fps 30 fps 30 fps Video bitrate 800 Kbps 2 Mbps 4 Mbps 10 Mbps 5.2.4. VP9 If device implementations support VP9 codec, they: [C-1-2] MUST support Profile 0 Level 3. [C-1-1] MUST support writing Matroska WebM files. [C-1-3] MUST generate CodecPrivate data. SHOULD support the HD decoding profiles as indicated in the following table. [SR] are STRONGLY RECOMMENDED to support the HD decoding profiles as indicated in the following table if there is a hardware encoder. SD HD 720p HD 1080p UHD Video resolution 720 x 480 px 1280 x 720 px 1920 x 1080 px 3840 x 2160 px Video frame rate 30 fps 30 fps 30 fps 30 fps Video bitrate 1.6 Mbps 4 Mbps 5 Mbps 20 Mbps If device implementations claim to support Profile 2 or Profile 3 through the Media APIs: Support for 12-bit format is OPTIONAL. 5.2.5. H.265 If device implementations support H.265 codec, they: [C-1-1] MUST support Main Profile Level 3. SHOULD support the HD encoding profiles as indicated in the following table. [SR] are STRONGLY RECOMMENDED to support the HD encoding profiles as indicated in the following table if there is a hardware encoder. SD HD 720p HD 1080p UHD Video resolution 720 x 480 px 1280 x 720 px 1920 x 1080 px 3840 x 2160 px Video frame rate 30 fps 30 fps 30 fps 30 fps Video bitrate 1.6 Mbps 4 Mbps 5 Mbps 20 Mbps 5.3. Video Decoding If device implementations support VP8, VP9, H.264, or H.265 codecs, they: [C-1-1] MUST support dynamic video resolution and frame rate switching through the standard Android APIs within the same stream for all VP8, VP9, H.264, and H.265 codecs in real time and up to the maximum resolution supported by each codec on the device. 5.3.1. MPEG-2 If device implementations support MPEG-2 decoders, they: [C-1-1] MUST support the Main Profile High Level. 5.3.2. H.263 If device implementations support H.263 decoders, they: [C-1-1] MUST support Baseline Profile Level 30 and Level 45. 5.3.3. MPEG-4 If device implementations with MPEG-4 decoders, they: [C-1-1] MUST support Simple Profile Level 3. 5.3.4. H.264 If device implementations support H.264 decoders, they: [C-1-1] MUST support Main Profile Level 3.1 and Baseline Profile. Support for ASO (Arbitrary Slice Ordering), FMO (Flexible Macroblock Ordering) an"	"03020301.980001"	"{'DevicePolicyManager.ACTION', 'getSensorList()', 'HOME', 'android.software.vulkan.deqp.level', 'MODEL', 'BSI', 'KHR_', 'display(s)', 'BOOTLOADER', 'SUPPRESSED_EFFECT_SCREEN_OFF', 'setBadgeIconType()', 'android.os.Build.VERSION.INCREMENTAL', 'getMandatorySystemGestureInsets()', 'android.hardware.Camera.setParameters', 'REQUEST_AVAILABLE_CAPABILITIES_LOGICAL_MULTI_CA', 'READ_PHONE_STATE', 'isAdbWifiQrSupported()', 'android.media.ImageReader', 'ACTION_SEND', 'SCENE_MODE_HDR', 'getTitle()', 'IMSI', 'EGL_ANDROID_', 'RGB', 'Notification.Builder.setNumber', 'BFS', 'startScan()', 'SWP', 'CPU_ABI', 'android.net.LinkProperties.getPrivateDnsServerName', 'JAR', 'UNPROCESSED', 'org.apache.http.legacy', 'SYSTEM_UI_FLAG_LIGHT_STATUS_BAR', 'getMasterSyncAutomatically()', 'AcousticEchoCanceler.isAvailable', 'FBE', 'SYNC_FD', 'android.media.action.STILL', 'setLaunchDisplayId()', 'android.camera', 'AXIS_RZ', 'SKU', 'MotionEvent.ACTION', 'KEYCODE_BUTTON_L1', 'getIconBitmap()', 'android.intent.action.HEADSET', 'KEY_AAC_DRC_ATTENUATION_FACTOR', 'VOICE_RECOGNITION', 'STILL_IMAGE_CAMERA', 'setShowBadge()', 'setSustainedPerformanceMode()', 'ANQP', 'JSSE', 'AVRCP', 'VERSION.SDK', 'createManageBlockedNumbersIntent()', 'android.hardware.biometrics.BiometricPrompt', 'setPasswordQuality()', 'ActivityManager.isBackgroundRestricted', 'getDefaultSensor(SENSOR_TYPE_HINGE_ANGLE)', 'ShortcutManager.requestPinShortcut', 'EFFECT_TYPE_BASS_BOOST', 'BOARD', 'CONFIG_CFI_CLANG', 'SENSOR_TILT_DETECTORS', 'ACTION_ASSIST', 'android.hardware.Camera.Parameters.setPreviewFormat', 'KEYCODE_HOME', 'CONFIG_ARM64_SW_TTBR0_PAN', 'favicon.png', 'ACTION_SENDTO', 'Notification.Style', 'KEY_AAC_ENCODED_TARGET_LEVEL', 'android.software.live', 'android.intent.action.VIEW', 'BASE_OS', 'ContactsContract.RawContacts.getLocalAccountType', 'DREAM_SETTINGS', 'GPS', 'TIME', 'SET_NEW_PARENT_PROFILE_PASSWORD', 'HDMI', 'createWifiLock()', 'android.security.net.config.NetworkSecurityConfigProvider', 'RELEASE', 'canAuthenticate(int)', 'android.software.webview', 'libGLESv2.so', 'PROVISION_MANAGED_DEVICE', 'WifiManager.WifiLock.acquire', 'android.hardware.se.omapi.sd', 'android.hardware.nfc', 'PEF', 'STREAM_NOTIFICATION', 'IPV6_PKTINFO', 'wipeData()', 'APPLICATION_DEVELOPMENT_SETTINGS', 'AV1', 'Account.name', 'AudioRecord.getTimestamp', 'APK', 'UNSPECIFIED', 'CPU_ABI2', 'android.app.action.PROVISIONING', 'KEYCODE_BUTTON_THUMBL', 'ACTION_CREATE_DOCUMENT', 'HTTP(S)', 'hasSystemFeature()', 'ASCII', 'EEI8', 'ADMIN_POLICY_COMPLIANCE', 'TDLS', 'CDP', 'TECH_DISCOVERED', 'NotificationListenerService.getSnoozedNotifications', 'INT', 'A2DP', 'android.hardware.faketouch.multitouch.jazzhand', 'AES', 'FEATURE_STRONGBOX_KEYSTORE', 'PowerManager.isSustainedPerformanceModeSupported', 'SensorManager.getSensorList', 'android.content.pm.PackageManager', 'libOpenMAXAL.so', 'android.speech.tts.engine.INSTALL', 'fonts.googleapis.com', 'AudioRecord.getActiveMicrophones', 'isRunningInUserTestHarness()', 'twitter.com', 'FLAG_PRIVATE', 'getSupportedModes()', 'android.nfc.action.TAG', 'FLASH_LOCK_UNKNOWN', 'ACTION_VIDEO_CAPTURE', 'KEYCODE_BACK', 'ERROR_UNSUPPORTED', 'TrustAgentService.addEscrowToken', 'IEC', 'JPEG', 'SYSTEM_UI_FLAG_IMMERSIVE_STICKY', 'android.hardware.faketouch.multitouch.distinct', 'android.os.Build.VERSION.RELEASE', 'RFC', 'OTA', 'android.software.midi', 'GLES10.getString', 'libaaudio.so', 'RTTTL', 'W3C', 'FLAG_REQUEST_ACCESSIBILITY_BUTTON', 'Configuration.smallestScreenWidthDp', 'Tab-0-1', 'DNG', 'CATEGORY', 'REQUIRE', 'libamidi.so', 'NRW', 'DMA', 'CAMCORDER', 'CALLER', 'TSYNC', 'CVE', 'android.hardware.Camera.setDisplayOrientation', 'TYPE_GRAVITY', 'GPIO', 'Window.setSustainedPerformanceMode', 'path(s)', 'RTT', 'MEID', 'ART', 'setKeyguardDisabledFeatures(KEYGUARD_DISABLE_TRUST_AGENTS)', 'TAG_DISCOVERED', 'YYYY', 'QVGA', 'android.settings.ACCESSIBILITY', 'TYPE_GEOMAGNETIC_ROTATION_VECTOR', 'android.max', 'GUG7XP0', 'H263', 'CHANGE_PHONE_ACCOUNTS', 'EDGE', 'ACTION_MANAGE_OVERLAY_PERMISSION', 'snoozeNotification()', 'ACTION_NEW_VIDEO', 'ELF', 'TYPE_POSE_6DOF', 'AXIS_RTRIGGER', 'SES', 'AHARDWAREBUFFER_FORMAT_R10G10B10A2_UNORM', 'android.hardware.ImageFormat.JPEG', 'MERA', 'android.hardware.audio.pro', 'libGLESv3.so', 'NFC', 'BLE', 'CONFIG_PAGE_TABLE_ISOLATION', 'PowerManager.isPowerSaveMode', 'KEYCODE_BUTTON_B', 'screen(s)', 'VERSION.BASE', 'OMX', 'setLocationSettingsIgnored()', 'FLAG_PUBLIC', 'startActivityForResult()', 'ActivityManager.isRunningInUserTestHarness', 'android.content.res.Configuration.orientation', 'RSA', 'KEYGUARD_DISABLE_TRUST_AGENTS', 'HEARING_AID', 'Camera.SCENE', 'android.hardware.wifi.rtt', 'com.android.org.conscrypt.JSSEProvider', 'UserManager.DISALLOW', 'GIF', 'INSTALL_TTS_DATA', 'HDOP', 'CAN', 'SDP', 'acquire()', 'android.hardware.camera.any', 'Display.FLAG', 'Connection.onDisconnect', 'android.os.Build.ID', 'android.nfc.NdefMessage', 'DEVICE', 'ASO', 'android.hardware.camera', 'android.media.AudioManager', 'allowPackageAccess()', 'BUILD', 'MediaCodecInfo.CodecCapabilities', 'getElementsByTagName(v)', 'SERIAL', 'Display.HdrCapabilities', 'android.telecom', 'libandroid.so', 'CONFIG_INIT_ON_ALLOC_DEFAULT_ON', 'android.permission.ACCESS', 'VP8', 'android.hardware.screen.portrait', 'TYPE_MAGNETIC_FIELD', 'TYPE_STEP_DETECTOR', 'libmediandk.so', 'android.settings.APPLICATION', 'SENSOR_TYPE_AMBIENT_TEMPERATURE', 'android.hardware.audio.low', 'DIAL', 'AID', 'ACTION_RESTRICT_BACKGROUND_CHANGED', 'RECOVER_KEYSTORE', 'PAR', 'Port(CDP)', 'TYPE_GAME_ROTATION_VECTOR', 'requestPinAppWidget()', 'android.intent.action.DIAL', 'android.webkit.WebView', 'Notification.Builder.setBadgeIconType', 'Configuration.uiMode', 'EXCLUSIVE', 'PROTECTION_FLAG_PRIVILEGED', 'DevicePolicyManager.setPasswordQuality', 'FMO', 'parentNode.insertBefore', 'ACTION_HEADSET_PLUG', 'TYPE_APPLICATION_OVERLAY', 'CFI', 'libicuuc.so', 'HardwarePropertiesManager.getDeviceTemperatures', 'SECURITY_PATCH', 'AAudioStream_getPerformanceMode()', 'android.hardware.camera2.CaptureRequest', 'RW2', 'URLC', 'SRW', 'SDK_INT', 'android.app.action.ADMIN', 'isSupported()', 'HSPA', 'AVA_VAN', 'MIDI', 'allowSameSignatureAccess()', 'HDCP', 'MJPEG', 'RTSP', 'FEATURE_CANT_SAVE_STATE', 'YUV420S', 'TYPE_MEMORY_FILE', 'BluetoothAdapter.isOffloadedFilteringSupported', 'android.app.action.START', 'SHA512', 'BMP', 'MediaSession.Callback', 'MAC', 'SubscriptionManager.setSubscriptionOverrideCongested', 'cable(s)', 'android.media.AudioManager.getProperty', 'android.telecom.CallRedirectionService', 'ACTION_PROVISION_MANAGED_DEVICE', 'android.app.action.SET', 'android.hardware.se.omapi.ese', 'MANAGE_UNKNOWN_APP_SOURCES', 'AHARDWAREBUFFER_FORMAT_R16G16B16A16_FLOAT', 'TYPE_PROXIMITY', 'MD5', 'isEasyConnectSupported()', 'android.hardware.nfc.hcef', 'android.software.activities', 'GOOGLE_', 'KEY_HDR_STATIC_INFO', 'MMAP', 'removeProvider()', 'ACCESS_BACKGROUND_LOCATION', 'FINGERPRINT', 'android.car.CarAudioManager', 'setAllowedAuthenticators(int)', 'HTML5', 'android.app.admin.DevicePolicyManager', 'MP4V', 'edge(s)', 'LMK_KILL_OCCURRED_FIELD_NUMBER', 'Display.getSupportedModes', 'KR4F', 'AudioManager.PROPERTY', 'EGL', 'getSerial()', 'gravity(4g)', 'FLAG_SECURE', 'EDOF', 'createElement(v)', 'GNSS', 'SSL', 'setPreviewFormat(int)', 'BluetoothAdapter.isMultipleAdvertisementSupported', 'LocationRequest.setLocationSettingsIgnored', 'SHA', 'XTS', 'Sensor.getResolution', 'android.os.ext.SdkExtensions.getExtensionVersion', 'PersistentDataBlockManager.getFlashLockState', 'KEY_AAC_DRC_TARGET_REFERENCE_LEVEL', 'SystemClock.elapsedRealtimeNano', 'PROPERTY_OUTPUT_FRAMES_PER_BUFFER', 'vkEnumeratePhysicalDevices()', 'android.settings.MANAGE', 'CDMA', 'NULL', 'DevicePolicyManager.wipeData', 'EFFECT_TYPE_DYNAMICS_PROCESSING', 'BSSID', 'HDR10P', 'RPA', 'android.media.AudioRecord', 'AHARDWAREBUFFER_USAGE_GPU_COLOR_OUTPUT', 'android.util.DisplayMetrics', 'AEC', 'LAUNCHER', 'AXIS_HAT_Y4', 'KEY_AAC_DRC_HEAVY_COMPRESSION', 'Configuration.screenLayout', 'libOpenSLES.so', 'unicode.org', 'MediaRecorder.getActiveMicrophones', 'REMOTE_SUBMIX', 'camera.any', 'CBR', 'EFI_RNG_PROTOCOL', 'sun.security.provider.CertPathProvider', 'camera(s)', 'UHD', 'SubscriptionManager.setSubscriptionPlans', 'UTC', 'PRODUCT', 'android.settings.NFC', 'c2.android', 'com.android.org.bouncycastle.jce.provider.BouncyCastleProvider', 'android.webkit.Webview', 'TYPE_STEP_COUNTER', 'SETEND', 'SUPPORTED_ABIS', 'CP15DMB', 'android.security.identity', 'libjnigraphics.so', 'android.hardware.vulkan.version', 'KEYCODE_MEDIA_PLAY_PAUSE', 'ACTION_NEW_PICTURE', 'issuetracker.google.com', 'FEATURE_COMPANION_DEVICE_SETUP', 'Settings.ACTION', 'android.hardware.ram.low', 'PROVISION_MANAGED_PROFILE', 'QUEUE_GRAPHICS_BIT', 'allowPublicAccess()', 'android.settings.INPUT', 'Camera.PreviewCallback', 'getMicrophones()', 'devsite_app_module.js', 'android.hardware.faketouch', 'setSubscriptionOverrideCongested()', 'ACTION_CAPTIVE_PORTAL_SIGN_IN', 'ORF', 'RAF', 'android.media.MediaFormat', 'CBC', 'agent(s)', 'ACTION_IMAGE_CAPTURE_SECURE', 'AccessibilityServiceInfo.FLAG', 'android.provider.MediaStore', 'setSubscriptionPlans()', 'android.provider.Telephony.ACTION', 'SIM', 'android.app.action.PROVISION', 'WifiManager.enableNetwork', 'EGL_EXT_', 'DENSITY_DEVICE_STABLE', 'android.content.res.Configuration', 'TTS', 'View.setSystemUiVisibility', 'ConnectivityManager.getRestrictBackgroundStatus', 'RAM', 'GATT', 'TYPE_HINGLE_ANGLE', 'getRestrictBackgroundStatus()', 'STREAM_ALARM', 'getOrientation()', 'Try.SNK', 'getString()', 'PARTIAL_WAKE_LOCK', 'BluetoothAdapter.getProfileProxy', 'DND', 'ACCESS_FINE_LOCATION', 'security.googleblog.com', 'CALL_REDIRECTION', 'LDAC', 'CAPTURE_AUDIO_OUTPUT', 'VTT', 'FLAG_KEEP_SCREEN_ON', 'AudioTrack.getTimestamp', 'MIME', 'libicui18n.so', 'ConnectivityManager.reportNetworkConnectivity', 'ACTION_MANAGE_STORAGE', 'STILL_IMAGE_CAMERA_SECURE', 'AudioManager.getProperty', 'ELD', 'KEYCODE_VOICE_ASSIST', 'NFCF', 'DevicePolicyManager.setPasswordExpirationTimeout', 'AAUDIO_PERFORMANCE_MODE_LOW_LATENCY', 'Notification.Builder.addAction', 'android.software.verified', 'Sensor.html', 'ACTION_USER_PRESENT', 'getIconUri()', 'OBEX', 'reportNetworkConnectivity()', 'GET_PROVISIONING_MODE', 'FAT', 'ACTION_SET_NEW_PASSWORD', 'android.hardware.Camera.PreviewCallback', 'android.telecom.action.CHANGE', 'android.software.input', 'EFFECT_TYPE_PRESET_REVERB', 'LATM', 'android.security.keystore.AndroidKeyStoreBCWorkaroundProvider', 'TYPE_GEOMAGNETIC_FIELD', 'MIMETYPE_IMAGE_ANDROID_HEIC', 'NFC_PAYMENT_SETTINGS', 'RGBA_8888', 'TEE', 'NV21', 'android.hardware.ImageFormat.YUV', 'TYPE_SIGNIFICANT_MOTION', 'com.nxp.mifare', 'android.hardware.camera.external', 'NV12', 'AXIS_Z', 'YV12', 'port(s)', 'CALL_BUTTON', 'AndroidManifest.xml', 'BRAND', 'MODE_TYPE_TELEVISION', 'View.SYSTEM', 'manifest.json', 'ACTION', 'PASSWORD_QUALITY_BIOMETRIC_WEAK', 'android.hardware.nfc.hce', 'SHALL', 'UVC', 'android.software.managed', 'android.permission.RECOVER', 'AVC', 'ACTION_LOCKED_BOOT_COMPLETED', 'flags.csv', 'RESTRICT_BACKGROUND_STATUS_DISABLED', 'XIT', 'EXT_', 'WifiManager.isTdlsSupported', 'android.software.app', 'HTTP', 'VP9P', 'SEL', 'MIME_TYPE_PROVISIONING_NFC', 'getResolution()', 'setSystemGestureExclusionRects()', 'isOffloadedFilteringSupported()', 'SMS', 'TIF', 'MAIN', 'AudioEffect.Descriptor.uuid', 'AMR', 'android.hardware.vr.high', 'NotificationManager.Policy', 'android.info.supportedHardwareLevel', 'android.view.Display.getOrientation', 'isRequestPinAppWidgetSupported()', 'CIE', 'ECDSA', 'android.hardware.camera.front', 'addEscrowToken()', 'android.os.Build.SERIAL', 'ACCESS_MEDIA_LOCATION', 'android.googlesource.com', 'READ_PRIVILEGED_PHONE_STATE', 'VERSION.INCREMENTAL', 'vkEnumerateDeviceLayerProperties()', 'android.hardware.screen.landscape', 'HEVC', 'TOUCHSCREEN_NOTOUCH', 'PASSWORD_QUALITY_SOMETHING', 'android.software.device', 'WifiManager.createWifiLock', 'STREAM_RING', 'VIDEO_CAMERA', 'WAVE', 'TILT_DETECTOR', 'setDisplayOrientation()', 'YUV420', 'setConfirmationRequired(boolean)', 'DVD', 'PACKAGE_USAGE_STATS', 'ACTION_SEND_MULTIPLE', 'TYPE_VEC3_CALIBRATION', 'PIP', 'isAdbWifiSupported()', 'setKeyguardDisabledFeatures()', 'PackageManager.setHarmfulAppWarning', 'ANDROID_RECORDING_PRESET_UNPROCESSED', 'TYPE_ROTATION_VECTOR', 'IEEE', 'PASSWORD_QUALITY_UNSPECIFIED', 'com.google', 'ACTION_BIOMETRIC_ENROLL', 'android.hardware.Camera', 'latencymark.fixed.little', 'SUPPRESSED_EFFECT_SCREEN_ON', 'KEYCODE_HEADSETHOOK', 'RGB888', 'android.hardware.telephony', 'VOICE_COMMUNICATION', 'Configuration.touchscreen', 'android.content.pm.PackageManager.hasSystemFeature', 'HDR_TYPE_DOLBY_VISION', 'ConnectivityManager.ACTION', 'DRC', 'isRequestPinShortcutSupported()', 'android.provider.Settings.ACTION', 'CTIA', 'android.security.keystore.AndroidKeyStoreProvider', 'ACTION_CANCEL', 'REQUEST_AVAILABLE_CAPABILITIES_BACKWARD_COMPATI', 'SENSOR_TYPE_STEP_DETECTOR', 'getRadioVersion()', 'android.bluetooth', 'CONFIG_SHADOW_CALL_STACK', 'KEYCODE_BUTTON_X', 'HEVCP', 'NDEF', 'setNumber()', 'FLAC', 'OMTP', 'android.software.autofill', 'SERVICE_META_DATA_SUPPORTS_ALWAYS_ON', 'NIST', 'android.graphics.Bitmap', 'getProperty(PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED)', 'AudioManager.STREAM', 'RTX', 'WifiManager.html', 'MP4A', 'OES_EGL_', 'KEYGUARD_DISABLE_BIOMETRICS', 'TOUCHSCREEN_FINGER', 'HEIF', 'AXIS_Y', 'Notification.MessagingStyle', 'OEM', 'android.media.MediaCodec', 'ARM', 'ACPI', 'libEGL.so', 'SNR', 'HCE', 'libRS.so', 'CHROMIUM_VER', 'isMultipleAdvertisementSupported()', 'android.settings.REQUEST', 'NSSP', 'HID', 'CLOCK_MONOTONIC', 'USER', 'RECOMMEND', 'REQUEST_ENABLE', 'TYPE_ACCELEROMETER', 'setPasswordExpirationTimeout()', 'android.intent.action.SENDTO', 'INET6', 'hasSystemFeature(String)', 'REQUIRED', 'CR2', 'SUPPORTED_64_BIT_ABIS', 'getActiveMicrophones()', 'ACTION_USAGE_ACCESS_SETTINGS', 'NEF', 'DCI', 'isAvailable()', 'ADD_DEVICE_ADMIN', 'CONFIG_UNMAP_KERNEL_AT_EL0', 'CONFIG_RANDOMIZE_BASE', 'DEST_AUTOMATIC', 'HEADSET_PLUG', 'android.app.Person', 'android.hardware.touchscreen', 'LEANBACK_LAUNCHER', 'KEYCODE_VOLUME_UP', 'VERSION', 'android.os.Build.MODEL', 'GET_SAMPLE_TEXT', 'isBleScanAlwaysAvailable()', 'Process.getExclusiveCores', 'requestPinShortcut()', 'GnssStatus.Callback', 'setParameters()', 'BluetoothAdapter.isBleScanAlwaysAvailable', 'ShortcutManager.isRequestPinShortcutSupported', 'ACTION_VOICE_INPUT_SETTINGS', 'android.content.res.Configuration.navigation', 'ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS', 'COLOR_F', 'HDR', 'STRONGLY_RECOMMENDED', 'ACTION_USER_UNLOCKED', 'ARW', 'MP3', 'Camera.ACTION', 'android.hardware.bluetooth', 'RTC', 'KEYGUARD_DISABLE_IRIS', 'RESULT_CANCELED', 'android.media.action.VIDEO', 'CATEGORY_BROWSABLE', 'vkEnumerateInstanceLayerProperties()', 'android.hardware.usb.host', 'AHARDWAREBUFFER_USAGE_PROTECTED_CONTENT', 'HOME_SETTINGS', 'android.request.availableCapabilities', 'AHARDWAREBUFFER_FORMAT_R5G6B5_UNORM', 'android.hardware.usb.accessory', 'HAL', 'SWPB', 'TYPE_PRESSURE', 'android.media.audiofx.NoiseSuppressor', 'vkCreateInstance()', 'REQUEST_DISCOVERABLE', 'onDisconnect()', 'RMS', 'isBackgroundRestricted()', 'android.speech.tts.engine.GET', 'SET_NEW_PASSWORD', 'RTP', 'SENSOR_TYPE_HINGE_ANGLE', 'BCW', 'IAR', 'EJB', 'DLS', 'FLASH_MODE_AUTO', 'EGL_IMG_', 'ACTION_PROCESS_WIFI_EASY_CONNECT_URI', 'YUV420P', 'MODE_TYPE_WATCH', 'layer(s)', 'HEIC', 'getReaders()', 'TTS_SERVICE', 'Reference(s)', 'KGDR5O3A', 'SNK', 'getProperty(String)', 'TelecomManager.createManageBlockedNumbersIntent', 'AXIS_X', 'ConnectivityManager.registerDefaultNetworkCallback', 'AudioSource.VOICE', 'EAL', 'view.Display', 'KeyEvent.KEYCODE', 'ISO', 'android.nfc.action.NDEF', 'android.view.Display.FLAG', 'NDK', 'ACTION_IGNORE_BACKGROUND_DATA_RESTRICTIONS_SET', 'Configuration.isScreenWideColorGamut', 'android.intent.action.CALL', 'AHARDWAREBUFFER_USAGE_GPU_DATA_BUFFER', 'libneuralnetworks.so', 'onAnswer()', 'KEYCODE_BUTTON_A', 'android.nfc.action.TECH', 'android.hardware.touchscreen.multitouch.distinct', 'android.media.MediaRecorder.AudioSource.VOICE', 'KEYCODE_BUTTON_THUMBR', 'isPowerSaveMode()', 'android.hardware.audio.output', 'cutout(s)', 'UID', 'elapsedRealtimeNano()', 'Account.type', 'FLASH_MODE_ON', 'PACKAGE_NEEDS_VERIFICATION', 'SYSTEM_UI_FLAG_IMMERSIVE', 'android.hardware.biometrics.BiometricManager', 'ACCOUNT_TYPE', 'OPTIONAL', 'THD', 'TYPE_GYROSCOPE', 'TINGS', 'CP15ISB', 'URL', 'AAC', 'NEON', 'android.content.res.Configuration.keyboard', 'android.permission.CONTROL', 'android.intent.action.ANSWER', 'java.net.URLConnection', 'URI', 'KEYGUARD_DISABLE_FINGERPRINT', 'YUV_420_888', 'NONE', 'VERSION.SECURITY', 'TAGS', 'setAspectRatio()', 'setAlwaysOnVpnPackage()', 'AppWidgetManager.requestPinAppWidget', 'TYPE_GYROSCOPE_UNCALIBRATED', 'onPreviewFrame()', 'PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED', 'MPEG', 'USAC', 'addAction()', 'android.permission.PACKAGE', 'android.hardware.gamepad', 'GSM', '3.2.3.1', 'KEYCODE_BUTTON_R1', 'FEATURE_I', 'android.nfc.cardemulation.action.ACTION', 'BITRATE_MODE_CQ', 'CHANGE_DEFAULT_DIALER', 'TYPE', 'VPN', 'AHARDWAREBUFFER_FORMAT_R8G8B8A8_UNORM', 'prod.appspot.com', 'ANDROID_', 'LOW_LATENCY', 'VP9', 'android.os.Build.SUPPORTED', 'SHA1', 'setSystemUiVisibility()', 'SHARED', 'android.os.Build', 'android.hardware.opengles.aep', 'REQUEST_SET_AUTOFILL_SERVICE', 'PNG', 'EGL_KHR_', 'getSystemAvailableFeatures()', 'BPF', 'SYNCADAPTER', 'ACTION_VIEW', 'NotificationChannel.setShowBadge', 'android.hardware.Camera.Parameters', 'android.media.MediaRecorder.AudioSource.UNPROCESSED', 'android.app.action.GET', 'android.media.MediaCodecInfo', 'DEX', 'CONFIG_INIT_STACK_ALL_ZERO', 'android.intent.action.TTS', 'TYPE_MAGNETIC_FIELD_UNCALIBRATED', 'AudioManager.getMicrophones', 'UICC', 'android.hardware.Camera.AutoFocusCallback', 'PAN', 'CAPABILITY_SUPPORT_HOLD', 'mode(s)', 'getProviders()', 'android.hardware.microphone', 'TYPE_ACCELEROMETER_UNCALIBRATED', 'CALLER_IS_SYNCADAPTER', 'android.hardware', 'AOA', 'BIOMETRIC_ACQUIRED_GOOD', 'DevicePolicymanager.KEYGUARD', 'github.com', 'www.gstatic.com', 'ICCID', 'QWERTY', 'Notification.Builder', 'getExclusiveCores()', 'UNKNOWN', 'EFFECT_TYPE_LOUDNESS_ENHANCER', 'android.media.MediaRecorder.AudioSource', 'VBR', 'enableNetwork()', 'java.net.Socket', 'PIN', 'MAXAL', 'HARDWARE', 'NDEF_DISCOVERED', 'XMF', 'AXIS_HAT_X4', 'DevicePolicyManager.KEYGUARD', 'WifiManager.isScanAlwaysAvailable', 'BUGREPORT_MODE_TELEPHONY', 'DRAM', 'Provider.getName', 'connect()', 'GLES', 'DPC', 'android.hardware.wifi', 'CP15DSB', 'VGA', 'MPEG2', 'IMEI', 'DELETE_PACKAGE', 'REQUEST_INSTALL_PACKAGES', 'ACTION_DOWN', 'MediaStore.ACTION', 'ACTION_IMAGE_CAPTURE', 'EXTRA_LOG_SELF_MANAGED_CALLS', 'MIFARE', 'BlobStoreManager.session', 'android.settings.HOME', 'RAPPOR', 'M9T1', 'android.net.LinkProperties.isPrivateDnsActive', 'lockup.svg', 'android.app.action.ADD', 'android.hardware.se.omapi.uicc', 'libcamera2ndk.so', 'INCREMENTAL', 'KEY_AAC_DRC_BOOST_FACTOR', 'YUV420F', 'H264', 'SENSOR_TYPE_STEP_COUNTER', 'TYPE_HARDWARE_BUFFER', 'play.google.com', 'android.bluetooth.adapter.action.REQUEST', 'com.android.org.conscrypt.OpenSSLProvider', 'RECOMMENDED', 'groups.google.com', 'EGL_ANDROID_GLES_', 'ACCOUNT_NAME', 'MP2T', 'JSSEP', 'TRRS', 'CONFIG_CC_STACKPROTECTOR_STRONG', 'CPU', 'GAS', 'MODE_TYPE_NORMAL', 'KHTML', 'MANUFACTURER', 'getSnoozedNotifications()', 'WifiManager.startScan', 'latencymark.dynamic.little', 'ADIF', 'KEYGUARD_DISABLE_FACE', 'codes.xml', 'isProvisioningAllowed(ACTION_PROVISION_MANAGED_DEVICE)', 'SSID', 'BIOMETRIC_STRONG', 'SSLP', 'android.companion', 'android.hardware.touchscreen.multitouch', 'ACTION_CHANGE_DEFAULT', 'DPP', 'CDD', 'PROVISIONING_SUCCESSFUL', 'OVR_', 'setShowWhenLocked()', 'SENDTO', 'EQP', 'PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND', 'android.hardware.location.gps', 'android.graphics.ImageFormat.YV', 'CONTROL_VPN', 'onReject()', 'AudioSource.CAMCORDER', 'ACTION_OPEN_DOCUMENT', 'BluetoothProfile.HEARING', 'SPL', 'AAudioStream_getFramesPerBurst()', 'KEY_HDR10_PLUS_INFO', 'MTP', 'UKEY2', 'ACTION_GET_CONTENT', 'DD.txt', 'ADTS', 'www.android.com', 'ISO14443', 'android.settings.ACTION', 'DevicePolicyManager.isProvisioningAllowed', 'ACCESSIBILITY_SETTINGS', 'SIMD', 'QUEUE_COMPUTE_BIT', 'PXN', 'SBAS', 'SPS', 'WIFI_MODE_FULL_HIGH_PERF', 'PCM', 'GPP', 'policies.google.com', 'TYPE_TILT_DETECTOR', 'CONFIG_HARDENED_USERCOPY', 'SCS', 'DevicePolicyManager.setAlwaysOnVpnPackage', 'android.hardware.wifi.aware', 'KEYCODE_VOLUME_DOWN', 'isSustainedPerformanceModeSupported()', 'android.nfc.NdefRecord', 'android.app.role.CALL', 'ConnectivityManager.getActiveNetwork', 'DISALLOW_SAFE_BOOT', 'CONFIG_STRICT_KERNEL_RWX', 'OMX.google', 'android.hardware.vulkan.level', 'isScreenWideColorGamut()', 'STA', 'STACKPROTECTOR_REGULAR', 'libvulkan.so', 'SLES', 'GLES10', 'SAF', 'Connection.onAnswer', 'ContactsContract.RawContacts.getLocalAccountName', 'CameraMetadata.REQUEST', 'ANSWER', 'android.software.home', 'android.software.secure', 'LMYXX', 'public.libraries.txt', 'EFFECT_TYPE_ENV_REVERB', 'HKDF', 'blog.google', 'stackoverflow.com', 'ABI', 'USB', 'SENSOR_TYPE_SIGNIFICANT_MOTION', 'android.hardware.fingerprint', 'android.hardware.touchscreen.multitouch.jazzhand', 'AGC', 'JIS', 'android.hardware.PixelFormat.YCbCr', 'GPU', 'getsockname()', 'app_loader.js', 'RATE_VERY_FAST', 'EXT_EGL_', 'android.hardware.sensor.hifi', 'android.github.io', 'AHARDWAREBUFFER_USAGE_GPU_SAMPLED_IMAGE', 'android.settings.DREAM', 'android.hardware.wifi.direct', 'JNI', 'EFFECT_TYPE_VIRTUALIZER', 'INPUT_METHOD_SETTINGS', 'PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND', 'getInstance()', 'READ_EXTERNAL_STORAGE', 'KEYCODE_BUTTON_Y', 'getFlashLockState()', 'ActivityOptions.setLaunchDisplayId', 'TYPE_LINEAR_ACCELERATION', 'LSB', 'support.google.com', 'createEphemeralKeyPair()', 'Security.getProviders', 'KEYCODE_WINDOW', 'android.se.omapi.SEService.getReaders', 'MPEG4', 'CALL', 'VERSION.RELEASE', 'DevicePolicyManager.setKeyguardDisabledFeatures', 'EFFECT_TYPE_EQUALIZER', 'VERY', 'SP800', 'developers.google.com', 'CONFIG_CPU_SW_DOMAIN_PAN', 'HOST', 'CONFIG_HARDEN_BRANCH_PREDICTOR', 'Connection.onReject', 'ConfirmationPrompt.isSupported', 'Camera.Parameters', 'insertProviderAt()', 'IME', 'HFP', 'setActions()', 'AppWidgetManager.html.isRequestPinAppWidgetSupported', 'WindowManager.LayoutParams', 'CONFIG_INIT_STACK_ALL', 'SCREENLAYOUT_SIZE_MASK', 'START_ENCRYPTION', 'DNS', 'KEY_COLOR_FORMAT', 'libGLESv1_CM.so', 'stopSelf()', 'CTS', 'KEYCODE_MEDIA_NEXT', 'KEY_AAC_DRC_EFFECT_TYPE', 'STRING_TYPE_ACCELEROMETER_UNCALIBRATED', 'placeholder.svg', 'VIEW', 'AXIS_LTRIGGER', 'AHARDWAREBUFFER_USAGE_SENSOR_DIRECT_DATA', 'android.hardware.hifi', 'ARGB_8888', 'SUPPORTED_32_BIT_ABIS', 'GOP', 'CONFIG_DEBUG_RODATA', 'HMAC', 'Intent.ACTION', 'WIFI_MODE_FULL_LOW_LATENCY'}"	""	""	""	""	""	""	""	""	""	""	"https://androidsource-dot-devsite-v2-prod.appspot.com http://www.android.com https://developer.android.com http://unicode.org https://source.android.com https://github.com http://play.google.com https://www.gstatic.com https://fonts.googleapis.com"	""	""	""	""
