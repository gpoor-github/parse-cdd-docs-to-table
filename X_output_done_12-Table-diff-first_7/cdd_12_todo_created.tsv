"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"Area"	"Shortened"	"Test Level"	"class_def"	"method"	"module"	"class_defs"	"methods"	"modules"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"
""	"7.1.4.2"	"C-1-11"	"7.1.4.2/C-1-11"	"07010402.670111"	"""C-1-11] MUST NOT enumerate support for the VK_KHR_video_queue,     VK_KHR_video_decode_queue, or VK_KHR_video_encode_queue extensions. """	""	""	"KHR_"	""	""	""	""	"[('android.opengl.cts.OpenGlEsVersionTest', 4), ('android.graphics.cts.VulkanFeaturesTest', 2), ('android.graphics.cts.ASurfaceTextureTest', 1), ('android.graphics.cts.ANativeWindowTest', 1), ('android.graphics.cts.EGL15Test', 1), ('android.graphics.cts.EGL14Test', 1)]"	"[('eglGetError', 15), ('getSimpleName', 4), ('setup', 4), ('teardown', 2)]"	"[('CtsGraphicsTestCases', 6), ('CtsOpenGLTestCases', 4)]"	""	""	""	""	"android.graphics.cts.EGL14Test"	"eglGetError"	"CtsGraphicsTestCases"	""	""	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ASurfaceTextureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/ANativeWindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL15Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/EGL14Test.java', 1)]"	"[('(2,KHR_,/android/graphics/cts/ASurfaceTextureTest.java)', 1), ('(16,KHR_,/android/opengl/cts/OpenGlEsVersionTest.java)', 1), ('(2,KHR_,/android/graphics/cts/ANativeWindowTest.java)', 1), ('(2,KHR_,/android/graphics/cts/EGL15Test.java)', 1), ('(9,KHR_,/android/graphics/cts/VulkanFeaturesTest.java)', 1), ('(2,KHR_,/android/graphics/cts/EGL14Test.java)', 1)]"	"[('([2:/android/graphics/cts/ASurfaceTextureTest.java]:[KHR_]:[2]:method_text:[mEglPbuffer, mEglContext)) {      throw new RuntimeException(""eglMakeCurrent failed"");    }  } ])', 1), ('([2:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[2]:method_text:[s, es31RequiredList[i]));        }    }    @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[3]:method_text:[ns, requiredExtension));            }        }    }    @CddTest(requirement=""7.1.4.1/C-6-1"")   ])', 1), ('([7:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[7]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/H-1-1"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[KHR_]:[4]:method_text:[ager();        return pm.hasSystemFeature(PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE);    }}])', 1), ('([2:/android/graphics/cts/ANativeWindowTest.java]:[KHR_]:[2]:method_text:[EglContext)) {            throw new RuntimeException(""eglMakeCurrent failed"");        }    }   ])', 1), ('([2:/android/graphics/cts/EGL15Test.java]:[KHR_]:[2]:method_text:[er    public void teardown() throws Throwable {        EGL14.eglTerminate(mEglDisplay);    }   ])', 1), ('([4:/android/graphics/cts/VulkanFeaturesTest.java]:[KHR_]:[4]:method_text:[viceExtension(""VK_KHR_incremental_present"", 1);    }    @CddTest(requirement = ""7.9.2/C-1-5"")   ])', 1), ('([5:/android/graphics/cts/VulkanFeaturesTest.java]:[KHR_]:[5]:method_text:[ {            devices[i] = devicesArray.getJSONObject(i);        }        return devices;    }}])', 1), ('([2:/android/graphics/cts/EGL14Test.java]:[KHR_]:[2]:method_text:[Exception(""eglDestroyContext failed"");        }        EGL14.eglTerminate(mEglDisplay);    }   ])', 1)]"	""	""	"[('KHR_', 10)]"	"[('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensionsForVrHighPerformance CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForWideColorDisplay CtsOpenGLTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanRequiredExtensions CtsGraphicsTestCases]', 1), ('[android.graphics.cts.VulkanFeaturesTest testVulkanBlockedExtensions CtsGraphicsTestCases]', 1)]"
"4_application-packaging"	"4"	"C-0-1"	"4/C-0-1"	"04000000.670001"	"""C-0-1] MUST be capable of installing and running Android “.apk” files as generated by the “aapt” tool included in the [official Android SDK]( http://developer.android.com/tools/help/index.html).    *   As the above requirement may be challenging, device implementations are    RECOMMENDED to use the AOSP reference implementation's package management    system.  Device implementations:  """	""	""	"RECOMMENDED index.html"	""	""	""	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 3), ('android.widget.cts.ToastTest', 2), ('android.media.cts.CamcorderProfileTest', 1), ('android.view.cts.ViewConfigurationTest', 1), ('android.text.style.cts.TtsSpanTest', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('android.widget.cts29.ToastTest', 1), ('android.webkit.cts.MimeTypeMapTest', 1), ('android.os.cts.HwBinderTest', 1), ('android.video.cts.CodecEncoderPerformanceTest', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.view.accessibility.cts.AccessibilityManagerTest', 1), ('android.webkit.cts.ServiceWorkerClientTest', 1)]"	"[('getMediaType', 14), ('getCodec', 4), ('getProfile', 3), ('getBitrate', 2), ('getWidth', 2), ('getHeight', 2), ('setUp', 2), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getAudioProfiles', 1), ('getSampleRate', 1), ('getChannels', 1), ('hasProfile', 1), ('getName', 1), ('getSimpleName', 1), ('input', 1), ('size', 1), ('getMimesOfAvailableHardwareVideoEncoders', 1)]"	"[('CtsCameraTestCases', 4), ('CtsWidgetTestCases', 3), ('CtsMediaTestCases', 2), ('CtsWebkitTestCases', 2), ('CtsViewTestCases', 1), ('CtsTextTestCases', 1), ('CtsVideoTestCases', 1), ('CtsAdminTestCases', 1), ('CtsAccessibilityTestCases', 1)]"	""	""	""	""	"android.webkit.cts.ServiceWorkerClientTest"	"setUp"	"CtsWebkitTestCases"	""	""	""	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/style/cts/TtsSpanTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/MimeTypeMapTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecEncoderPerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/ServiceWorkerClientTest.java', 1)]"	"[('(1,RECOMMENDED,/android/media/cts/CamcorderProfileTest.java)', 1), ('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 1), ('(2,index.html,/android/text/style/cts/TtsSpanTest.java)', 1), ('(1,RECOMMENDED,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(7,RECOMMENDED,/android/widget/cts/ToastTest.java)', 1), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 1), ('(1,index.html,/android/webkit/cts/MimeTypeMapTest.java)', 1), ('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 1), ('(1,RECOMMENDED,/android/video/cts/CodecEncoderPerformanceTest.java)', 1), ('(3,RECOMMENDED,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,RECOMMENDED,/android/media/cts/AudioTrackTest.java)', 1), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(18,RECOMMENDED,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 1), ('(1,index.html,/android/webkit/cts/ServiceWorkerClientTest.java)', 1)]"	"[('([1:/android/media/cts/CamcorderProfileTest.java]:[RECOMMENDED]:[1]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 1), ('([2:/android/text/style/cts/TtsSpanTest.java]:[index.html]:[2]:method_text:[));            assertEquals(""password"", args.getString(TtsSpan.ARG_PASSWORD));        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[RECOMMENDED]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([1:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[1]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);        }    }   ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/android/webkit/cts/MimeTypeMapTest.java]:[index.html]:[1]:method_text:[on        //assertEquals("""", MimeTypeMap.getFileExtensionFromUrl(""http://www.example.com""));}   ])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([1:/android/video/cts/CodecEncoderPerformanceTest.java]:[RECOMMENDED]:[1]:method_text:[  /**     * Validates performance of hardware accelerated video encoders     */    @LargeTest   ])', 1), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[RECOMMENDED]:[3]:method_text:[h (SecurityException e) {            assertDeviceOwnerMessage(e.getMessage());        }    }   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[RECOMMENDED]:[1]:method_text:[wn when setBufferSizeInBytes""                  + "" is excluded from builder"");        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 1), ('([18:/android/view/accessibility/cts/AccessibilityManagerTest.java]:[RECOMMENDED]:[18]:method_text:[;        } catch (IOException e) {            fail(""Fail to run shell command"");        }    }}])', 1), ('([1:/android/webkit/cts/ServiceWorkerClientTest.java]:[index.html]:[1]:method_text:[bview-cts.     */    // Test correct invocation of shouldInterceptRequest for Service Workers.   ])', 1)]"	"http://developer.android.com"	""	"[('RECOMMENDED', 14), ('index.html', 3)]"	"[('[android.view.cts.ViewConfigurationTest testInstanceValues CtsViewTestCases]', 1), ('[android.text.style.cts.TtsSpanTest testElectronicBuilder CtsTextTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.webkit.cts.MimeTypeMapTest testGetFileExtensionFromUrl CtsWebkitTestCases]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRecommendedGlobalProxy_failIfNotDeviceOwner CtsAdminTestCases]', 1), ('[android.media.cts.AudioTrackTest testAc3BuilderNoBufferSize CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations CtsCameraTestCases]', 1), ('[android.view.accessibility.cts.AccessibilityManagerTest testGetRecommendedTimeoutMillis CtsAccessibilityTestCases]', 1), ('[android.webkit.cts.ServiceWorkerClientTest registrationSuccess CtsWebkitTestCases]', 1)]"
"4_application-packaging"	"4"	"C-0-2"	"4/C-0-2"	"04000000.670002"	"""C-0-2] MUST support verifying “.apk” files using the [APK Signature Scheme v3](https://source.android.com/security/apksigning/v3.html) , [APK Signature Scheme v2](https://source.android.com/security/apksigning/v2.html) and [JAR signing]( https://source.android.com/security/apksigning/v2.html#v1-verification). """	""	""	"v3.html v2.html JAR APK"	""	""	""	""	"[('android.permission.cts.SplitPermissionTest', 29), ('android.appsecurity.cts.KeySetHostTest', 19), ('android.appsecurity.cts.AppDataIsolationTests', 13), ('android.appsecurity.cts.ApplicationVisibilityTest', 11), ('android.media.session.cts.MediaSessionManagerHostTest', 10), ('android.appsecurity.cts.AppSecurityTests', 9), ('com.android.cts.devicepolicy.BaseDeviceAdminHostSideTest', 3), ('com.android.server.cts.PackageIncidentTest', 3), ('android.appsecurity.cts.LocationPolicyTest', 2), ('android.wifibroadcasts.cts.WifiBroadcastsHostJUnit4Test', 2), ('android.dumpsys.cts.GfxInfoDumpsysTest', 2), ('android.packageinstaller.uninstall.cts.UninstallTest', 2), ('android.hdmicec.cts.common.HdmiCecInvalidMessagesTest', 2), ('android.jdwpsecurity.cts.JdwpSecurityHostTest', 2), ('android.content.pm.cts.shortcut.upgrade.ShortcutManagerPostUpgradeTest', 1), ('android.telecom.cts.ThirdPartyCallScreeningServiceTest', 1), ('android.media.cts.bitstreams.MediaBitstreamsTest', 1), ('android.signature.cts.api.SignatureMultiLibsTest', 1), ('android.jdwptunnel.cts.JdwpTunnelTest', 1), ('android.hdmicec.cts.audio.HdmiCecInvalidMessagesTest', 1), ('com.android.cts.rollback.host.app2.HostTestHelper', 1), ('com.android.tests.loadingprogress.host.NonIncrementalLoadingProgressTest', 1), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi25', 1), ('android.media.cts.MediaExtractorHostSideTest', 1), ('android.scopedstorage.cts.legacy.LegacyStorageTest', 1), ('android.security.cts.CVE_2021_0523', 1), ('android.sample.cts.SampleHostJUnit4DeviceTest', 1)]"	"[('getDevice', 33), ('setUp', 16), ('tearDown', 12), ('getTargetApiVersion', 5), ('getDeviceScriptFilepath', 5), ('now', 4), ('getAdminReceiverComponent', 3), ('stream', 3), ('getDeviceAdminApkFileName', 2), ('getDeviceAdminApkPackage', 2), ('getDefaultBitstreamsDir', 2), ('getSimpleName', 2), ('getBuild', 2), ('moveToHomeScreen', 2), ('name', 2), ('findFirst', 2), ('trim', 2), ('setup', 2), ('getInstrumentation', 2), ('getDeviceJarFilepath', 2), ('getUnprotectedAdminReceiverComponent', 1), ('getDeviceAdminJavaPackage', 1), ('clear', 1), ('toString', 1), ('getDefaultMediaDir', 1), ('FileFilter', 1), ('setUpPackage', 1), ('virtualMachineManager', 1), ('attachingConnectors', 1), ('transport', 1), ('defaultArguments', 1), ('eventRequestManager', 1), ('suspend', 1), ('allClasses', 1), ('createClassPrepareRequest', 1), ('enable', 1), ('resume', 1), ('eventQueue', 1), ('remove', 1), ('request', 1), ('referenceType', 1), ('getTargetContext', 1), ('hashCode', 1), ('removeConfig', 1), ('createAndUploadConfig', 1), ('getName', 1), ('getRunFailureMessage', 1), ('getContext', 1), ('getPackageName', 1), ('nanoTime', 1), ('getUiAutomation', 1), ('nonInheritedStateHighTargetSDK', 1), ('nonInheritedStateHighLowTargetSDKPreM', 1), ('nonInheritedStateLowTargetSDK', 1), ('nonInheritedStateLowTargetSDKPreM', 1), ('inheritFlagsPreM', 1), ('inheritFlags', 1), ('getTargetLogicalAddress', 1), ('cect_12_2_DirectlyAddressedReceivedAsBroadcast_userControlPressed', 1), ('createScriptTempFile', 1), ('delete', 1)]"	"[('CtsAppSecurityHostTestCases', 54), ('CtsPermissionTestCases', 29), ('CtsMediaHostTestCases', 11), ('CtsDevicePolicyManagerTestCases', 4), ('CtsHdmiCecHostTestCases', 3), ('CtsIncidentHostTestCases', 3), ('CtsWifiBroadcastsHostTestCases', 2), ('CtsDumpsysHostTestCases', 2), ('CtsPackageUninstallTestCases', 2), ('CtsJdwpSecurityHostTestCases', 2), ('CtsTelecomTestCases', 1), ('CtsMediaBitstreamsTestCases', 1), ('CtsSharedLibsApiSignatureTestCases', 1), ('CtsJdwpTunnelHostTestCases', 1), ('CtsSecurityBulletinHostTestCases', 1), ('CtsSampleHostTestCases', 1)]"	""	""	""	""	"android.jdwpsecurity.cts.JdwpSecurityHostTest"	"tearDown"	"CtsJdwpSecurityHostTestCases"	""	""	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/SplitPermissionTest.java', 29), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/KeySetHostTest.java', 19), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 13), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApplicationVisibilityTest.java', 11), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/session/cts/MediaSessionManagerHostTest.java', 10), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppSecurityTests.java', 9), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDeviceAdminHostSideTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/PackageIncidentTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/LocationPolicyTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/wifibroadcasts/src/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/dumpsys/src/android/dumpsys/cts/GfxInfoDumpsysTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/uninstall/src/android/packageinstaller/uninstall/cts/UninstallTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/dynamic_linker/com/android/dynamiclinker/DynamicLinkerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/common/HdmiCecInvalidMessagesTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwpsecurity/src/android/jdwpsecurity/cts/JdwpSecurityHostTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/upgrade/src/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPostUpgradeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/ThirdPartyCallScreeningServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/src/android/media/cts/bitstreams/MediaBitstreamsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/shared-libs-api/src/android/signature/cts/api/SignatureMultiLibsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/audio/HdmiCecInvalidMessagesTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/rollback/app2/src/com/android/cts/rollback/host/app2/HostTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/installedloadingprogess/hostside/src/com/android/tests/loadingprogress/host/NonIncrementalLoadingProgressTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/cts/MediaExtractorHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/legacy/src/android/scopedstorage/cts/legacy/LegacyStorageTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/CVE_2021_0523.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sample/src/android/sample/cts/SampleHostJUnit4DeviceTest.java', 1)]"	"[('(1,APK,/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPostUpgradeTest.java)', 1), ('(12,APK,/com/android/cts/devicepolicy/BaseDeviceAdminHostSideTest.java)', 1), ('(3,APK,/android/appsecurity/cts/LocationPolicyTest.java)', 1), ('(5,APK,/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java)', 1), ('(18,APK,/android/media/session/cts/MediaSessionManagerHostTest.java)', 1), ('(2,APK,/android/telecom/cts/ThirdPartyCallScreeningServiceTest.java)', 1), ('(1,APK,/android/media/cts/bitstreams/MediaBitstreamsTest.java)', 1), ('(1,APK,/android/signature/cts/api/SignatureMultiLibsTest.java)', 1), ('(24,APK,/android/appsecurity/cts/ApplicationVisibilityTest.java)', 1), ('(39,APK,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(3,APK,/android/jdwptunnel/cts/JdwpTunnelTest.java)', 1), ('(2,APK,/android/hdmicec/cts/audio/HdmiCecInvalidMessagesTest.java)', 1), ('(3,APK,/android/dumpsys/cts/GfxInfoDumpsysTest.java)', 1), ('(3,APK,/android/packageinstaller/uninstall/cts/UninstallTest.java)', 1), ('(1,APK,/com/android/cts/rollback/host/app2/HostTestHelper.java)', 1), ('(6,APK,/com/android/tests/loadingprogress/host/NonIncrementalLoadingProgressTest.java)', 1), ('(1,JAR,/com/android/server/cts/PackageIncidentTest.java)', 1), ('(5,APK,/com/android/server/cts/PackageIncidentTest.java)', 1), ('(1,APK,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java)', 1), ('(4,APK,/android/media/cts/MediaExtractorHostSideTest.java)', 1), ('(72,APK,/android/appsecurity/cts/KeySetHostTest.java)', 1), ('(7,APK,)', 1), ('(2,APK,/android/scopedstorage/cts/legacy/LegacyStorageTest.java)', 1), ('(34,APK,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(4,APK,/android/security/cts/CVE_2021_0523.java)', 1), ('(72,APK,/android/permission/cts/SplitPermissionTest.java)', 1), ('(3,APK,/android/hdmicec/cts/common/HdmiCecInvalidMessagesTest.java)', 1), ('(2,APK,/android/sample/cts/SampleHostJUnit4DeviceTest.java)', 1), ('(15,JAR,/android/jdwpsecurity/cts/JdwpSecurityHostTest.java)', 1)]"	"[('([1:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[1]:method_text:[;        runDeviceTests(APPA_PKG, APPA_CLASS, APPA_METHOD_CHECK_REF_PROFILE_ACCESSIBLE);    }   ])', 2), ('([2:/android/permission/cts/SplitPermissionTest.java]:[APK]:[2]:method_text:[ission should inherit the     * revoked state.     *     * <p>(Pre-M version of test)     */   ])', 2), ('([1:/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPostUpgradeTest.java]:[APK]:[1]:method_text:[sertionFailedError expected) {            // okay        }        assertFalse(notThrown);    }}])', 1), ('([10:/com/android/cts/devicepolicy/BaseDeviceAdminHostSideTest.java]:[APK]:[10]:method_text:[e, null);    }    /**     * Run all tests in DeviceAdminTest.java (as device admin).     */   ])', 1), ('([1:/com/android/cts/devicepolicy/BaseDeviceAdminHostSideTest.java]:[APK]:[1]:method_text:[est() throws Exception {        runTests(getDeviceAdminApkPackage(), ""DeviceAdminTest"");    }   ])', 1), ('([1:/com/android/cts/devicepolicy/BaseDeviceAdminHostSideTest.java]:[APK]:[1]:method_text:[ackage(), ""DeviceAdminPasswordTest"",                        ""testResetPasswordDeprecated"");    }}])', 1), ('([2:/android/appsecurity/cts/LocationPolicyTest.java]:[APK]:[2]:method_text:[public void tearDown() throws Exception {        getDevice().uninstallPackage(TEST_PKG);    }   ])', 1), ('([1:/android/appsecurity/cts/LocationPolicyTest.java]:[APK]:[1]:method_text:[            getDevice(), TEST_PKG, "".LocationPolicyTest"", ""testLocationPolicyPermissions"");    }}])', 1), ('([4:/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java]:[APK]:[4]:method_text:[s the string was not logged to Logcat from the activity.     *     * @throws Exception     */   ])', 1), ('([1:/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java]:[APK]:[1]:method_text:[s part of CTS Pre-conditions        device.executeShellCommand(""svc wifi enable; sleep 1"");    }}])', 1), ('([5:/android/media/session/cts/MediaSessionManagerHostTest.java]:[APK]:[5]:method_text:[anager#getActiveSessions} with the primary user.     */    @AppModeInstant    @RequiresDevice   ])', 1), ('([2:/android/media/session/cts/MediaSessionManagerHostTest.java]:[APK]:[2]:method_text:[anager#getActiveSessions} with additional users.     */    @AppModeInstant    @RequiresDevice   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[APK]:[1]:method_text:[ger#getActiveSessions} with restricted profiles.     */    @AppModeInstant    @RequiresDevice   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[APK]:[1]:method_text:[anager#getActiveSessions} with managed profiles.     */    @AppModeInstant    @RequiresDevice   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[APK]:[1]:method_text:[ediaSession"", newUser);        removeUser(newUser);    }    @AppModeFull    @RequiresDevice   ])', 1), ('([2:/android/media/session/cts/MediaSessionManagerHostTest.java]:[APK]:[2]:method_text:[Sessions_noMediaSessionFromMediaSessionTestHelper"");    }    @AppModeFull    @RequiresDevice   ])', 1), ('([2:/android/media/session/cts/MediaSessionManagerHostTest.java]:[APK]:[2]:method_text:[essions_hasMediaSessionFromMediaSessionTestHelper"");    }    @AppModeFull    @RequiresDevice   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[APK]:[1]:method_text:[unTest(""testOnMediaKeyEventSessionChangedListener"");    }    @AppModeFull    @RequiresDevice   ])', 1), ('([2:/android/media/session/cts/MediaSessionManagerHostTest.java]:[APK]:[2]:method_text:[nTestAsUser(""testIsTrusted_returnsTrue"", newUserId);    }    @AppModeFull    @RequiresDevice   ])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[APK]:[1]:method_text:[     executeShellCommand(MediaSessionTestHelperConstants.buildControlCommand(userId, flag));    }}])', 1), ('([2:/android/telecom/cts/ThirdPartyCallScreeningServiceTest.java]:[APK]:[2]:method_text:[D_CONTACTS, TEST_APP_PACKAGE)                        == PackageManager.PERMISSION_GRANTED);    }}])', 1), ('([1:/android/media/cts/bitstreams/MediaBitstreamsTest.java]:[APK]:[1]:method_text:[            CLog.e(e);                return false;            }        }    }    @Ignore   ])', 1), ('([1:/android/signature/cts/api/SignatureMultiLibsTest.java]:[APK]:[1]:method_text:[  * <p/>     * Will check the entire API, and then report the complete list of failures     */   ])', 1), ('([4:/android/appsecurity/cts/ApplicationVisibilityTest.java]:[APK]:[4]:method_text:[mand(""settings put global package_verifier_enable ""                + mOldVerifierValue);    }   ])', 1), ('([2:/android/appsecurity/cts/ApplicationVisibilityTest.java]:[APK]:[2]:method_text:[              ""testPackageVisibility_anyUserCrossUserGrant"",                testUserId);    }   ])', 1), ('([2:/android/appsecurity/cts/ApplicationVisibilityTest.java]:[APK]:[2]:method_text:[            ""testPackageVisibility_anyUserCrossUserNoGrant"",                testUserId);    }   ])', 1), ('([2:/android/appsecurity/cts/ApplicationVisibilityTest.java]:[APK]:[2]:method_text:[PackageVisibility_otherUserGrant"",                testUserId,                testArgs);    }   ])', 1), ('([2:/android/appsecurity/cts/ApplicationVisibilityTest.java]:[APK]:[2]:method_text:[ckageVisibility_otherUserNoGrant"",                testUserId,                testArgs);    }   ])', 1), ('([2:/android/appsecurity/cts/ApplicationVisibilityTest.java]:[APK]:[2]:method_text:[          ""testApplicationVisibility_anyUserCrossUserGrant"",                testUserId);    }   ])', 1), ('([2:/android/appsecurity/cts/ApplicationVisibilityTest.java]:[APK]:[2]:method_text:[        ""testApplicationVisibility_anyUserCrossUserNoGrant"",                testUserId);    }   ])', 1), ('([2:/android/appsecurity/cts/ApplicationVisibilityTest.java]:[APK]:[2]:method_text:[icationVisibility_otherUserGrant"",                testUserId,                testArgs);    }   ])', 1), ('([2:/android/appsecurity/cts/ApplicationVisibilityTest.java]:[APK]:[2]:method_text:[ationVisibility_otherUserNoGrant"",                testUserId,                testArgs);    }   ])', 1), ('([2:/android/appsecurity/cts/ApplicationVisibilityTest.java]:[APK]:[2]:method_text:[""testGetPackagesForUidVisibility_anotherUserCrossUserGrant"",                testUserId);    }   ])', 1), ('([2:/android/appsecurity/cts/ApplicationVisibilityTest.java]:[APK]:[2]:method_text:[        return mUsers[0];    }    private int getTestUserId() {        return mUsers[1];    }}])', 1), ('([20:/android/appsecurity/cts/AppSecurityTests.java]:[APK]:[20]:method_text:[pdate cannot be installed over an existing app if it has a different     * certificate.     */   ])', 1), (""([4:/android/appsecurity/cts/AppSecurityTests.java]:[APK]:[4]:method_text:[      }    }    /**     * Test that an app cannot access another app's private data.     */   ])"", 1), ('([2:/android/appsecurity/cts/AppSecurityTests.java]:[APK]:[2]:method_text:[        }    }    /**     * Test that uninstall of an app removes its private data.     */   ])', 1), ('([2:/android/appsecurity/cts/AppSecurityTests.java]:[APK]:[2]:method_text:[d, but JUnit4TestNotRun reports the test will not be run because    // the method does not have the])', 1), ('([2:/android/appsecurity/cts/AppSecurityTests.java]:[APK]:[2]:method_text:[is signed with a different     * certificate than the app that declared the permission.     */   ])', 1), ('([3:/android/appsecurity/cts/AppSecurityTests.java]:[APK]:[3]:method_text:[at an app cannot set the installer package for an app with a different     * signature.     */   ])', 1), ('([3:/android/appsecurity/cts/AppSecurityTests.java]:[APK]:[3]:method_text:[    /**     * Test what happens if an app tried to take a permission away from another     */   ])', 1), (""([2:/android/appsecurity/cts/AppSecurityTests.java]:[APK]:[2]:method_text:[    /**     * Tests that an arbitrary file cannot be installed using the 'cmd' command.     */   ])"", 1), ('([1:/android/appsecurity/cts/AppSecurityTests.java]:[APK]:[1]:method_text:[nd(                    ""appops get "" + pkgName + "" android:system_alert_window"");        }    }}])', 1), ('([3:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[APK]:[3]:method_text:[of the activity     * class and put and wait for a breakpoint on the onCreate function.     */   ])', 1), ('([2:/android/hdmicec/cts/audio/HdmiCecInvalidMessagesTest.java]:[APK]:[2]:method_text:[directly addressed message <GIVE_AUDIO_STATUS> if received as     * a broadcast message     */   ])', 1), ('([2:/android/dumpsys/cts/GfxInfoDumpsysTest.java]:[APK]:[2]:method_text:[     * Tests the output of ""dumpsys gfxinfo framestats"".     *     * @throws Exception     */   ])', 1), ('([1:/android/dumpsys/cts/GfxInfoDumpsysTest.java]:[APK]:[1]:method_text:[  foundAtLeastOneRow = true;            }        }        assertTrue(foundAtLeastOneRow);    }}])', 1), ('([2:/android/packageinstaller/uninstall/cts/UninstallTest.java]:[APK]:[2]:method_text:[AG_ACTIVITY_CLEAR_TASK | FLAG_ACTIVITY_NEW_TASK);        mContext.startActivity(intent);    }   ])', 1), ('([1:/android/packageinstaller/uninstall/cts/UninstallTest.java]:[APK]:[1]:method_text:[ build"",                mContext.getPackageManager().hasSystemFeature(FEATURE_AUTOMOTIVE));    }}])', 1), ('([1:/com/android/cts/rollback/host/app2/HostTestHelper.java]:[APK]:[1]:method_text:[ installer.        // assertThat(InstallUtils.getInstalledVersion(TestApp.A)).isEqualTo(2);    }}])', 1), ('([6:/com/android/tests/loadingprogress/host/NonIncrementalLoadingProgressTest.java]:[APK]:[6]:method_text:[ACKAGE_NAME);        assertFalse(getDevice().isPackageInstalled(TEST_APP_PACKAGE_NAME));    }   ])', 1), ('([1:/com/android/server/cts/PackageIncidentTest.java]:[JAR]:[1]:method_text:[dump.getMessagesList()) {                assertTrue(msg.isEmpty());            }        }    }}])', 1), ('([3:/com/android/server/cts/PackageIncidentTest.java]:[APK]:[3]:method_text:[    /** Parse the output of ""dumpsys package --proto"" and make sure the values are probable. */   ])', 1), ('([2:/com/android/server/cts/PackageIncidentTest.java]:[APK]:[2]:method_text:[dump.getMessagesList()) {                assertTrue(msg.isEmpty());            }        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi25.java]:[APK]:[1]:method_text:[       removeUser(mUserId);        super.tearDown();    }    @Override    @PermissionsTest   ])', 1), ('([4:/android/media/cts/MediaExtractorHostSideTest.java]:[APK]:[4]:method_text:[eConfig();        getDevice().uninstallPackage(DEVICE_SIDE_TEST_PACKAGE);    }    // Tests.   ])', 1), ('([35:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[35]:method_text:[k which does not specify an upgrade-key-set may be upgraded     * to an apk which does.     */   ])', 1), ('([2:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[2]:method_text:[k which does specify an upgrade-key-set may be upgraded     * to an apk which does not.     */   ])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[1]:method_text:[* Check if an apk signed by a key other than the upgrade keyset can update     * an app     */   ])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[1]:method_text:[n apk signed by its signing key, which is not an upgrade key,     * can upgrade an app.     */   ])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[1]:method_text:[ apk signed by its upgrade key, which is not its signing key,     * can upgrade an app.     */   ])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[1]:method_text:[f an apk signed by its upgrade key, which is its signing key, can     * upgrade an app.     */   ])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[1]:method_text:[apk signed by multiple keys, one of which is its upgrade key,     * can upgrade an app.     */   ])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[1]:method_text:[ keys, its signing keys,     * but none of which is an upgrade key, can upgrade an app.     */   ])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[1]:method_text:[if an apk which defines multiple (two) upgrade keysets is     * upgrade-able by either.     */   ])', 1), ('([14:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[14]:method_text:[sion after changing to a new     * signature, for which a permission should be granted.     */   ])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[1]:method_text:[nging to a new     * signature, from one for which a permission was previously granted.     */   ])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[1]:method_text:[gnature-level permission after the app defining     * it rotates to the same signature.     */   ])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[1]:method_text:[ture-level permission after the app defining     * it rotates to a different signature.     */   ])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[1]:method_text:[a sharedUserId and defines an     * upgrade keyset is allowed to rotate to that keyset.     */   ])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[1]:method_text:[that an apk with an upgrade key represented by a bad public key     * fails to install.     */   ])', 1), ('([2:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[2]:method_text:[heck that an apk with an upgrade keyset that includes a bad public key fails to install.     */   ])', 1), ('([2:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[2]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.     */   ])', 1), ('([3:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[3]:method_text:[    /*     * Check if an apk signed by RSA pub key can upgrade to apk signed by EC key.     */   ])', 1), ('([2:/android/appsecurity/cts/KeySetHostTest.java]:[APK]:[2]:method_text:[    /*     * Check if an apk signed by EC pub key can upgrade to apk signed by RSA key.     */   ])', 1), ('([1:]:[APK]:[1]:method_text:[e() {    System.loadLibrary(""dynamiclinker_native_lib_a"");    assertEquals(1, functionA());  } ])', 1), (""([6:]:[APK]:[6]:method_text:['t know which lib to load on this arch.      return;    }    assertEquals(1, functionB());  } ])"", 1), ('([2:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[APK]:[2]:method_text:[DEO};    /**     * This method needs to be called once before running the whole test.     */   ])', 1), ('([12:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[12]:method_text:[  getDevice().uninstallPackage(APPA_PKG);        getDevice().uninstallPackage(APPB_PKG);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[          }                getDevice().waitForDeviceAvailable();            }        }    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[      runDeviceTests(APPA_PKG, APPA_CLASS, APPA_METHOD_CHECK_EXTERNAL_DIRS_DO_NOT_EXIST);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[un();        runDeviceTests(APPB_PKG, APPB_CLASS, APPB_METHOD_CAN_NOT_ACCESS_APPA_DIR);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[K).run();        runDeviceTests(APPB_PKG, APPB_CLASS, APPB_METHOD_CAN_ACCESS_APPA_DIR);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[     runDeviceTests(APPB_PKG, APPB_CLASS, APPB_METHOD_CAN_NOT_ACCESS_APPA_EXTERNAL_DIRS);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[        runDeviceTests(APPB_PKG, APPB_CLASS, APPB_METHOD_CAN_ACCESS_APPA_EXTERNAL_DIRS);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[).run();        runDeviceTests(APPA_PKG, APPA_CLASS, APPA_METHOD_TEST_ISOLATED_PROCESS);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[      runDeviceTests(APPA_PKG, APPA_CLASS, APPA_METHOD_TEST_APP_ZYGOTE_ISOLATED_PROCESS);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[ETHOD_TEST_OTHER_USER_DIRS_NOT_PRESENT,                makeOtherUserIdArgs(mOtherUser));    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[APK]:[2]:method_text:[    return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }}])', 1), ('([4:/android/security/cts/CVE_2021_0523.java]:[APK]:[4]:method_text:[;            assertThat(crashPattern, pattern.matcher(logcat).find(), is(false));        }    }}])', 1), ('([29:/android/permission/cts/SplitPermissionTest.java]:[APK]:[29]:method_text:[ after the split should <u>not</u> have been added implicitly the new     * permission.     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[APK]:[1]:method_text:[een added implicitly the new     * permission.     *     * <p>(Pre-M version of test)     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[APK]:[1]:method_text:[ with a targetSDK before the split should have been added implicitly the new permission.     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[APK]:[1]:method_text:[ have been added implicitly the new permission.     *     * <p>(Pre-M version of test)     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[APK]:[1]:method_text:[READ_CALL_LOG);    }    /**     * Permissions are revoked by default for post-M apps     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[APK]:[1]:method_text:[OARSE_LOCATION);    }    /**     * Permissions are granted by default for pre-M apps     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[APK]:[1]:method_text:[for post-M apps. This also applies to permissions added     * implicitly due to splits.     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[APK]:[1]:method_text:[ for pre-M apps. This also applies to permissions added     * implicitly due to splits.     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[APK]:[1]:method_text:[ }    /**     * The background location permission granted by default for pre-M apps.     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[APK]:[1]:method_text:[ew permission should inherit the     * granted state.     */    @FlakyTest(bugId = 152580253)   ])', 1), ('([2:/android/permission/cts/SplitPermissionTest.java]:[APK]:[2]:method_text:[mission should inherit the     * granted state.     *     * <p>App using a shared uid     */   ])', 1), ('([2:/android/permission/cts/SplitPermissionTest.java]:[APK]:[2]:method_text:[     * flags.     *     * <p>(Pre-M version of test)     */    @FlakyTest(bugId = 152580253)   ])', 1), ('([2:/android/permission/cts/SplitPermissionTest.java]:[APK]:[2]:method_text:[s, the new permission should inherit the     * flags.     */    @FlakyTest(bugId = 152580253)   ])', 1), ('([2:/android/permission/cts/SplitPermissionTest.java]:[APK]:[2]:method_text:[ission should inherit the     * granted state.     *     * <p>(Pre-M version of test)     */   ])', 1), ('([2:/android/permission/cts/SplitPermissionTest.java]:[APK]:[2]:method_text:[ /**     * It should be possible to grant a permission implicitly added due to a split.     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[APK]:[1]:method_text:[t a permission implicitly added due to a split.     *     * <p>(Pre-M version of test)     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[APK]:[1]:method_text:[/**     * It should be possible to revoke a permission implicitly added due to a split.     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[APK]:[1]:method_text:[e a permission implicitly added due to a split.     *     * <p>(Pre-M version of test)     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[APK]:[1]:method_text:[ion should get revoked when the app gets updated and now requests the     * permission.     */   ])', 1), ('([2:/android/permission/cts/SplitPermissionTest.java]:[APK]:[2]:method_text:[ackground permission should have changed the app-op of     * the foreground permission.     */   ])', 1), ('([2:/android/permission/cts/SplitPermissionTest.java]:[APK]:[2]:method_text:[his even happens if the app is not targeting the SDK the permission was split     * in.     */   ])', 1), ('([2:/android/permission/cts/SplitPermissionTest.java]:[APK]:[2]:method_text:[annot deal with revoked permissions. Hence only the user should ever explicitly do that.     */   ])', 1), ('([2:/android/permission/cts/SplitPermissionTest.java]:[APK]:[2]:method_text:[    * When a requested permission was granted before upgrade it should still be granted.     */   ])', 1), ('([2:/android/permission/cts/SplitPermissionTest.java]:[APK]:[2]:method_text:[nted before upgrade it should still be granted.     *     * <p>(Pre-M version of test)     */   ])', 1), ('([2:/android/permission/cts/SplitPermissionTest.java]:[APK]:[2]:method_text:[    * When a requested permission was revoked before upgrade it should still be revoked.     */   ])', 1), ('([2:/android/permission/cts/SplitPermissionTest.java]:[APK]:[2]:method_text:[oked before upgrade it should still be revoked.     *     * <p>(Pre-M version of test)     */   ])', 1), ('([2:/android/permission/cts/SplitPermissionTest.java]:[APK]:[2]:method_text:[        install(APK_CONTACTS_CALLLOG_16);        assertPermissionRevoked(READ_CONTACTS);    }}])', 1), ('([2:/android/hdmicec/cts/common/HdmiCecInvalidMessagesTest.java]:[APK]:[2]:method_text:[vice ignores every broadcast only message that is received as directly     * addressed.     */   ])', 1), (""([1:/android/hdmicec/cts/common/HdmiCecInvalidMessagesTest.java]:[APK]:[1]:method_text:[     * if received as a broadcast message and its source is the device's logical address     */   ])"", 1), ('([2:/android/sample/cts/SampleHostJUnit4DeviceTest.java]:[APK]:[2]:method_text:[  public void setUp() throws Exception {        uninstallPackage(getDevice(), TEST_PKG);    }   ])', 1), ('([12:/android/jdwpsecurity/cts/JdwpSecurityHostTest.java]:[JAR]:[12]:method_text:[it has no JDWP connection and cannot be     * debugged.     *     * @throws Exception     */   ])', 1), ('([3:/android/jdwpsecurity/cts/JdwpSecurityHostTest.java]:[JAR]:[3]:method_text:[rmat(""mkdir %s"", remoteFilePath));        return getDevice().doesFileExist(remoteFilePath);    }}])', 1)]"	"https://source.android.com"	""	"[('APK', 121), ('JAR', 3)]"	"[('[com.android.server.cts.PackageIncidentTest testPackageServiceDump CtsIncidentHostTestCases]', 2), ('[android.content.pm.cts.shortcut.upgrade.ShortcutManagerPostUpgradeTest testPostUpgrade None]', 1), ('[com.android.cts.devicepolicy.BaseDeviceAdminHostSideTest testRunDeviceAdminTest CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.BaseDeviceAdminHostSideTest testResetPasswordDeprecated CtsDevicePolicyManagerTestCases]', 1), ('[android.appsecurity.cts.LocationPolicyTest testLocationPolicyPermissions CtsAppSecurityHostTestCases]', 1), ('[android.wifibroadcasts.cts.WifiBroadcastsHostJUnit4Test testCleanLogcat CtsWifiBroadcastsHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsFull_primaryUser CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsFull_additionalUser CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsFull_restrictedProfiles CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsFull_managedProfiles CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessions_noSession2 CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessions_withSession2 CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testOnMediaKeyEventSessionChangedListener CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testOnMediaKeyEventSessionChangedListener_whenSessionIsReleased CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testIsTrusted_withoutEnabledNotificationListener_returnsFalse CtsMediaHostTestCases]', 1), ('[android.telecom.cts.ThirdPartyCallScreeningServiceTest testNoPostCallActivityForIncomingEmergencyCall CtsTelecomTestCases]', 1), ('[android.media.cts.bitstreams.MediaBitstreamsTest isDirectory CtsMediaBitstreamsTestCases]', 1), ('[android.appsecurity.cts.ApplicationVisibilityTest testPackageListCrossUserGrant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApplicationVisibilityTest testPackageListCrossUserNoGrant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApplicationVisibilityTest testPackageListOtherUserCrossUserGrant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApplicationVisibilityTest testPackageListOtherUserCrossUserNoGrant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApplicationVisibilityTest testApplicationListCrossUserGrant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApplicationVisibilityTest testApplicationListCrossUserNoGrant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApplicationVisibilityTest testApplicationListOtherUserCrossUserGrant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApplicationVisibilityTest testApplicationListOtherUserCrossUserNoGrant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApplicationVisibilityTest testGetPackagesForUidCrossUserGrant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApplicationVisibilityTest testGetPackagesForUidCrossUserNoGrant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests testAppUpgradeDifferentCerts_instant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests testAppFailAccessPrivateData_instant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests testUninstallRemovesData_instant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests testInstrumentationDiffCert_instant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests testPermissionDiffCert CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests testCrossPackageDiffCertSetInstaller CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests rebootWithDuplicatePermission CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests testAdbInstallFile_instant CtsAppSecurityHostTestCases]', 1), ('[android.jdwptunnel.cts.JdwpTunnelTest disable CtsJdwpTunnelHostTestCases]', 1), ('[android.hdmicec.cts.audio.HdmiCecInvalidMessagesTest HdmiCecInvalidMessagesTest CtsHdmiCecHostTestCases]', 1), ('[android.dumpsys.cts.GfxInfoDumpsysTest testGfxinfoFramestats CtsDumpsysHostTestCases]', 1), ('[android.packageinstaller.uninstall.cts.UninstallTest isScreenOn CtsPackageUninstallTestCases]', 1), ('[android.packageinstaller.uninstall.cts.UninstallTest testUninstall CtsPackageUninstallTestCases]', 1), ('[com.android.cts.rollback.host.app2.HostTestHelper testApkRollbackByAnotherInstaller_Phase2_SecondInstaller None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi25 removeTestUsers CtsDevicePolicyManagerTestCases]', 1), ('[android.media.cts.MediaExtractorHostSideTest getAndClearReportList CtsMediaHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest isRunFailure CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testNoKSToUpgradeKS CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testUpgradeKSToNoKS CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testUpgradeKSWithWrongKey CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testUpgradeKSWithWrongSigningKey CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testUpgradeKSWithUpgradeKey CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testUpgradeKSWithSigningUpgradeKey CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testMultipleUpgradeKSWithUpgradeKey CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testMultipleUpgradeKSWithSigningKey CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testUpgradeKSWithMultipleUpgradeKeySetsFirstKey CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testUpgradeSigPermGained CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testUpgradeSigPermLost CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testUpgradeDefinerSigPermGained CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testUpgradeDefinerSigPermLost CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testUpgradeSharedUser CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testBadUpgradeBadPubKey CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testBadUpgradeMissingPubKey CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testBadUpgradeNoPubKey CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.KeySetHostTest testUpgradeKSRsaToEC CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppAbleToAccessItsDataAfterForceStop CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppAbleToAccessItsDataAfterReboot CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testDirectBootModeWorks CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppNotAbleToAccessItsDataAfterReinstall CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testNormalProcessCannotAccessOtherAppDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testSharedAppAbleToAccessOtherAppDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testNormalProcessCannotAccessOtherAppExternalDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testSharedAppAbleToAccessOtherAppExternalDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testIsolatedProcess CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppZygoteIsolatedProcess CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDir CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDirApi29 CtsAppSecurityHostTestCases]', 1), ('[android.security.cts.CVE_2021_0523 testPocCVE_2021_0523 CtsSecurityBulletinHostTestCases]', 1), ('[android.permission.cts.SplitPermissionTest isTrue CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest permissionsDoNotSplitWithHighTargetSDK CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest permissionsDoNotSplitWithHighTargetSDKPreM CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest permissionsSplitWithLowTargetSDK CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest permissionsSplitWithLowTargetSDKPreM CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest backgroundLocationPermissionDefaultGrantPreM CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest inheritGrantedPermissionState CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest inheritGrantedPermissionStateSharedUidApp CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest inheritGrantedPermissionStatePreM CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest inheritRevokedPermissionState CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest inheritRevokedPermissionStatePreM CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest grantNewSplitPermissionState CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest grantNewSplitPermissionStatePreM CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest revokeNewSplitPermissionState CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest revokeNewSplitPermissionStatePreM CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest newPermissionGetRevokedOnUpgrade CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest newBackgroundPermissionGetRevokedOnUpgrade CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest newPermissionGetRevokedOnUpgradeBeforeSplitSDK CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest newPermissionGetRevokedOnUpgradePreM CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest oldPermissionStaysGrantedOnUpgrade CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest oldPermissionStaysGrantedOnUpgradePreM CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest oldPermissionStaysRevokedOnUpgrade CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest oldPermissionStaysRevokedOnUpgradePreM CtsPermissionTestCases]', 1), ('[android.jdwpsecurity.cts.JdwpSecurityHostTest testNonZygoteProgramIsNotDebuggable CtsJdwpSecurityHostTestCases]', 1)]"
"4_application-packaging"	"4"	"C-0-3"	"4/C-0-3"	"04000000.670003"	"""C-0-3] MUST NOT extend either the [.apk](http://developer.android.com/guide/components/fundamentals.html), [Android Manifest]( http://developer.android.com/guide/topics/manifest/manifest-intro.html), [Dalvik bytecode](https://android.googlesource.com/platform/dalvik/), or RenderScript bytecode formats in such a way that would prevent those files from installing and running correctly on other compatible devices. """	""	""	"intro.html fundamentals.html android.googlesource.com"	""	""	""	""	"[('android.security.cts.ActivityManagerTest', 1), ('android.security.cts.RunningAppProcessInfoTest', 1), ('android.adb.cts.AdbHostTest', 1)]"	"[('flush', 1), ('close', 1), ('deleteOnExit', 1)]"	"[('CtsSecurityTestCases', 2), ('CtsAdbHostTestCases', 1)]"	""	""	""	""	"android.adb.cts.AdbHostTest"	"deleteOnExit"	"CtsAdbHostTestCases"	""	""	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/ActivityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/RunningAppProcessInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adb/src/android/adb/cts/AdbHostTest.java', 1)]"	"[('(1,android.googlesource.com,/android/security/cts/ActivityManagerTest.java)', 1), ('(1,android.googlesource.com,/android/security/cts/RunningAppProcessInfoTest.java)', 1), ('(1,android.googlesource.com,/android/adb/cts/AdbHostTest.java)', 1)]"	"[('([1:/android/security/cts/ActivityManagerTest.java]:[android.googlesource.com]:[1]:method_text:[ow this exception        }    }    // b/144285917    @AsbSecurityTest(cveBugId = 144285917)   ])', 1), ('([1:/android/security/cts/RunningAppProcessInfoTest.java]:[android.googlesource.com]:[1]:method_text:[se/+"" +                ""/aaa0fee0d7a8da347a0c47cef5249c70efee209e"", (appList.size() == 1));    }}])', 1), ('([1:/android/adb/cts/AdbHostTest.java]:[android.googlesource.com]:[1]:method_text:[c7c6d5edcbe04454eb9a40f947ac0a3045f64eb    // for the patch that enabled this on Pixel devices.   ])', 1)]"	"http://developer.android.com https://android.googlesource.com"	""	"[('android.googlesource.com', 3)]"	"[('[android.security.cts.ActivityManagerTest testActivityManager_injectInputEvents CtsSecurityTestCases]', 1), ('[android.security.cts.RunningAppProcessInfoTest testRunningAppProcessInfo CtsSecurityTestCases]', 1)]"
""	"7.1.4.2"	"C-1-4"	"7.1.4.2/C-1-4"	"07010402.670104"	"""C-1-4] MUST enumerate layers, contained in native libraries named as     `libVkLayer*.so` in the application package’s native library directory,     through the Vulkan native APIs [`vkEnumerateInstanceLayerProperties()`](     https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkEnumerateInstanceLayerProperties.html)     and [`vkEnumerateDeviceLayerProperties()`](     https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkEnumerateDeviceLayerProperties.html)     . """	""	""	"vkEnumerateInstanceLayerProperties.html vkEnumerateDeviceLayerProperties() www.khronos.org vkEnumerateDeviceLayerProperties.html vkEnumerateInstanceLayerProperties()"	""	""	""	""	"[('android.vr.cts.VrExtensionBehaviorTest', 2), ('android.view.cts.TextureViewTest', 1)]"	""	"[('CtsVrTestCases', 2), ('CtsViewTestCases', 1)]"	""	""	""	""	"android.vr.cts.VrExtensionBehaviorTest"	""	"CtsVrTestCases"	""	""	""	"[('/home/gpoor/cts-12-source/cts/tests/vr/src/android/vr/cts/VrExtensionBehaviorTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TextureViewTest.java', 1)]"	"[('(1,www.khronos.org,/android/view/cts/TextureViewTest.java)', 1), ('(2,www.khronos.org,/android/vr/cts/VrExtensionBehaviorTest.java)', 1)]"	"[('([1:/android/view/cts/TextureViewTest.java]:[www.khronos.org]:[1]:method_text:[NDED_SRGB), true,                true, new FP16Compare(ColorSpace.Named.EXTENDED_SRGB));    }   ])', 1), ('([1:/android/vr/cts/VrExtensionBehaviorTest.java]:[www.khronos.org]:[1]:method_text:[c:     * https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_EGL_image_array.txt     */   ])', 1), ('([1:/android/vr/cts/VrExtensionBehaviorTest.java]:[www.khronos.org]:[1]:method_text:[c:     * https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_external_buffer.txt     */   ])', 1)]"	"https://www.khronos.org"	""	"[('www.khronos.org', 3)]"	"[('[android.view.cts.TextureViewTest testGetBitmap_FP16_ExtendedSRGB CtsViewTestCases]', 1), ('[android.vr.cts.VrExtensionBehaviorTest testMutableRenderBuffer CtsVrTestCases]', 1), ('[android.vr.cts.VrExtensionBehaviorTest testEglImageArray CtsVrTestCases]', 1)]"
""	"7.1.4.2"	"C-1-5"	"7.1.4.2/C-1-5"	"07010402.670105"	"""C-1-5] MUST NOT enumerate layers provided by libraries outside of the     application package, or provide other ways of tracing or intercepting the     Vulkan API, unless the application has the `android:debuggable` attribute     set as `true`. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
""	"3.2.3.5"	"C-11-1"	"3.2.3.5/C-11-1"	"03020305.671101"	"""C-11-1] MUST have an activity that handles the [`Settings.ACTION_IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS`](https://developer.android.com/reference/android/provider/Settings#ACTION_IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS) intent but MAY implement it as a no-op.  If device implementations declare the support for camera via `android.hardware.camera.any` they:  """	""	""	"android.hardware.camera.any TINGS Settings.ACTION ACTION_IGNORE_BACKGROUND_DATA_RESTRICTIONS_SET"	""	""	""	""	"[('android.media.tv.tuner.cts.TunerFrontendTest', 12), ('android.hardware.hdmi.cts.HdmiControlManagerTest', 10), ('android.media.cts.RatingTest', 7), ('android.content.syncmanager.cts.CtsSyncManagerTest', 5), ('android.text.style.cts.TextAppearanceSpanTest', 5), ('android.bluetooth.cts.AdvertiseSettingsTest', 5), ('android.autofillservice.cts.servicebehavior.SettingsIntentTest', 4), ('android.jobscheduler.cts.ConnectivityConstraintTest', 4), ('android.webkit.cts.WebViewZoomTest', 4), ('android.hardware.camera2.cts.BurstCaptureTest', 4), ('android.os.cts.InattentiveSleepTests', 4), ('android.telephony.cts.TelephonyManagerTest', 3), ('android.view.inputmethod.cts.InputMethodStartInputLifecycleTest', 3), ('android.autofillservice.cts.dropdown.VirtualContainerActivityCompatModeTest', 3), ('android.voicesettings.cts.BatterySaverModeTest', 3), ('android.text.style.cts.CharacterStyleTest', 3), ('android.location.cts.coarse.LocationManagerCoarseTest', 2), ('android.media.cts.SystemMediaRouter2Test', 2), ('android.view.inputmethod.cts.EditTextImeSupportTest', 2), ('android.app.cts.NotificationChannelTest', 2), ('android.voiceinteraction.cts.VoiceInteractionRoleTest', 2), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 2), ('android.app.cts.ActivityManagerAppExitInfoTest', 2), ('com.android.server.cts.UsbIncidentTest', 2), ('android.bluetooth.cts.AdvertiseCallbackTest', 2), ('android.media.cts.EnvReverbTest', 1), ('android.media.cts.EqualizerTest', 1), ('android.appsecurity.cts.ApplicationVisibilityTest', 1), ('com.android.server.cts.IncidentdTest', 1), ('android.media.cts.AudioSystemTest', 1), ('android.app.cts.ActivityManagerApi29Test', 1), ('com.android.cts.deviceowner.WifiConfigLockdownTest', 1), ('android.contentcaptureservice.cts.CanaryTest', 1), ('android.os.cts.batterysaving.ActionChargingTest', 1), ('com.android.server.cts.device.statsdatom.Checkers', 1), ('android.graphics.text.cts.TextRunShaperTest', 1), ('android.appsecurity.cts.AppDataIsolationTests', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('android.media.cts.ResourceManagerStubActivity', 1), ('android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest', 1), ('android.graphics.drawable.cts.VectorDrawableTest', 1), ('android.media.cts.MediaControllerTest', 1), ('android.media.cts.BassBoostTest', 1), ('android.server.wm.intent.IntentGenerationTests', 1), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1), ('android.appsecurity.cts.ExternalStorageHostTest', 1), ('android.host.accounts.AccountManagerHostSideTest', 1)]"	"[('getDevice', 19), ('setUp', 17), ('tearDown', 11), ('getContext', 9), ('getInstrumentation', 6), ('getPackageManager', 5), ('getTargetContext', 5), ('getContentResolver', 4), ('newBuilder', 4), ('build', 3), ('resetSyncConfig', 2), ('getSyncDumpsys', 2), ('waitForBroadcastIdle', 2), ('getWho', 2), ('getBuffer', 2), ('getTtcIndex', 2), ('trim', 2), ('getUiAutomation', 2), ('customSetup', 2), ('setup', 2), ('getArguments', 2), ('wakeUp', 2), ('RouteCallback', 1), ('setUpPackage', 1), ('UnlockScreenRule', 1), ('BroadcastRpc', 1), ('runDumpsysBatteryUnplug', 1), ('runDumpsysBatteryReset', 1), ('removeAllAccounts', 1), ('size', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('getActivity', 1), ('killSettings', 1), ('hashCode', 1), ('Intent', 1), ('getConfiguredNetworks', 1), ('assertHasService', 1), ('get', 1), ('getAction', 1), ('checkWifiEnhancedPowerReportingSupported', 1), ('shapeText_FontCreateFromNative', 1), ('Paint', 1), ('getAssets', 1), ('getAxes', 1), ('getTag', 1), ('getStyleValue', 1), ('getStdout', 1), ('Object', 1), ('notify', 1), ('oneTimeSetup', 1), ('getApplicationContext', 1), ('getResources', 1), ('startBackgroundThread', 1), ('getSimpleName', 1), ('myUid', 1), ('myUserHandle', 1), ('supportsMultipleUsers', 1), ('start', 1), ('getLooper', 1), ('countDown', 1), ('generate', 1), ('verifySingle', 1), ('Cases', 1), ('createFlagParsingTable', 1), ('getExternalCacheDir', 1), ('getCurrentUser', 1), ('getWarningDurationConfig', 1), ('wakeUpToHome', 1), ('startKeepScreenOnActivity', 1)]"	"[('CtsMediaTestCases', 15), ('CtsTvTestCases', 12), ('CtsHardwareTestCases', 10), ('CtsTextTestCases', 8), ('CtsAutoFillServiceTestCases', 7), ('CtsBluetoothTestCases', 7), ('CtsInputMethodTestCases', 5), ('CtsCameraTestCases', 5), ('CtsJobSchedulerTestCases', 4), ('CtsWebkitTestCases', 4), ('CtsOsHostTestCases', 4), ('CtsAppSecurityHostTestCases', 3), ('CtsIncidentHostTestCases', 3), ('CtsAppTestCases', 3), ('CtsTelephonyTestCases', 3), ('CtsVoiceSettingsTestCases', 3), ('CtsLocationCoarseTestCases', 2), ('CtsGraphicsTestCases', 2), ('CtsVoiceInteractionTestCases', 2), ('CtsAppExitTestCases', 2), ('CtsContentCaptureServiceTestCases', 1), ('CtsBatterySavingTestCases', 1), ('CtsAdbManagerHostTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsDevicePolicyManagerTestCases', 1), ('CtsAccountsHostTestCases', 1)]"	""	""	""	""	"android.os.cts.InattentiveSleepTests"	"startKeepScreenOnActivity"	"CtsOsHostTestCases"	""	""	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/hdmi/cts/HdmiControlManagerTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/RatingTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/syncmanager/src/android/content/syncmanager/cts/CtsSyncManagerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/style/cts/TextAppearanceSpanTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/AdvertiseSettingsTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/ConnectivityConstraintTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewZoomTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/os/src/android/os/cts/InattentiveSleepTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/VirtualContainerActivityCompatModeTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/voicesettings/src/android/voicesettings/cts/BatterySaverModeTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/style/cts/CharacterStyleTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/location/location_coarse/src/android/location/cts/coarse/LocationManagerCoarseTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/SystemMediaRouter2Test.java', 2), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/EditTextImeSupportTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/NotificationChannelTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/VoiceInteractionRoleTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/AppExitTest/src/android/app/cts/ActivityManagerAppExitInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/UsbIncidentTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/AdvertiseCallbackTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EnvReverbTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EqualizerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApplicationVisibilityTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/IncidentdTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioSystemTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityManagerApi29Test.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/WifiConfigLockdownTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/CanaryTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/batterysaving/src/android/os/cts/batterysaving/ActionChargingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/Checkers.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/text/cts/TextRunShaperTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/ResourceManagerStubActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/VectorDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaControllerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/BassBoostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/intent/IntentGenerationTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ExternalStorageHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/AccountManagerHostSideTest.java', 1)]"	"[('(11,TINGS,/android/media/cts/EnvReverbTest.java)', 1), ('(13,TINGS,/android/media/cts/EqualizerTest.java)', 1), ('(4,TINGS,/android/location/cts/coarse/LocationManagerCoarseTest.java)', 1), ('(2,TINGS,/android/media/cts/SystemMediaRouter2Test.java)', 1), ('(3,TINGS,/android/appsecurity/cts/ApplicationVisibilityTest.java)', 1), ('(2,TINGS,/android/view/inputmethod/cts/EditTextImeSupportTest.java)', 1), ('(5,TINGS,/android/content/syncmanager/cts/CtsSyncManagerTest.java)', 1), ('(3,TINGS,/com/android/server/cts/IncidentdTest.java)', 1), ('(13,TINGS,/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java)', 1), ('(1,Settings.ACTION,/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java)', 1), ('(1,TINGS,/android/media/cts/AudioSystemTest.java)', 1), ('(27,TINGS,/android/media/cts/RatingTest.java)', 1), ('(12,TINGS,/android/jobscheduler/cts/ConnectivityConstraintTest.java)', 1), ('(11,TINGS,/android/app/cts/ActivityManagerApi29Test.java)', 1), ('(3,TINGS,/com/android/cts/deviceowner/WifiConfigLockdownTest.java)', 1), ('(2,TINGS,/android/app/cts/NotificationChannelTest.java)', 1), ('(5,TINGS,/android/contentcaptureservice/cts/CanaryTest.java)', 1), ('(5,TINGS,/android/os/cts/batterysaving/ActionChargingTest.java)', 1), ('(2,TINGS,/com/android/server/cts/device/statsdatom/Checkers.java)', 1), ('(23,TINGS,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(12,TINGS,/android/hardware/hdmi/cts/HdmiControlManagerTest.java)', 1), ('(3,TINGS,/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java)', 1), ('(8,TINGS,/android/autofillservice/cts/dropdown/VirtualContainerActivityCompatModeTest.java)', 1), ('(18,TINGS,/android/webkit/cts/WebViewZoomTest.java)', 1), ('(2,TINGS,/android/graphics/text/cts/TextRunShaperTest.java)', 1), ('(18,TINGS,/android/text/style/cts/TextAppearanceSpanTest.java)', 1), ('(7,TINGS,/android/appsecurity/cts/AppDataIsolationTests.java)', 1), ('(1,android.hardware.camera.any,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1), ('(4,TINGS,/android/media/cts/ResourceManagerStubActivity.java)', 1), ('(369,TINGS,/android/media/tv/tuner/cts/TunerFrontendTest.java)', 1), ('(3,TINGS,/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java)', 1), ('(6,TINGS,/android/voicesettings/cts/BatterySaverModeTest.java)', 1), ('(1,Settings.ACTION,/android/voicesettings/cts/BatterySaverModeTest.java)', 1), ('(14,TINGS,/android/text/style/cts/CharacterStyleTest.java)', 1), ('(8,TINGS,/android/voiceinteraction/cts/VoiceInteractionRoleTest.java)', 1), ('(2,TINGS,/android/graphics/drawable/cts/VectorDrawableTest.java)', 1), ('(2,TINGS,/android/media/cts/MediaControllerTest.java)', 1), ('(6,TINGS,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(27,TINGS,/android/app/cts/ActivityManagerAppExitInfoTest.java)', 1), ('(11,TINGS,/android/media/cts/BassBoostTest.java)', 1), ('(15,TINGS,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(1,TINGS,/android/server/wm/intent/IntentGenerationTests.java)', 1), ('(34,TINGS,/android/bluetooth/cts/AdvertiseSettingsTest.java)', 1), ('(11,TINGS,/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java)', 1), ('(13,TINGS,/com/android/server/cts/UsbIncidentTest.java)', 1), ('(1,TINGS,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(1,TINGS,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1), ('(3,TINGS,/android/bluetooth/cts/AdvertiseCallbackTest.java)', 1), ('(3,TINGS,/android/host/accounts/AccountManagerHostSideTest.java)', 1), ('(13,TINGS,/android/os/cts/InattentiveSleepTests.java)', 1)]"	"[('([1:/android/hardware/hdmi/cts/HdmiControlManagerTest.java]:[TINGS]:[1]:method_text:[  assertThat(mHdmiControlManager.getHdmiCecEnabled()).isEqualTo(originalValue);        }    }   ])', 3), ('([1:/android/content/syncmanager/cts/CtsSyncManagerTest.java]:[TINGS]:[1]:method_text:[    Log.i(TAG, ""NumSyncInvocations="" + calls);            return calls == 1;        });    }   ])', 2), ('([32:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[32]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 2), ('([30:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[30]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 2), ('([11:/android/media/cts/EnvReverbTest.java]:[TINGS]:[11]:method_text:[------------------------    //Test case 2.0: test setEnabled() and getEnabled() in valid state   ])', 1), ('([13:/android/media/cts/EqualizerTest.java]:[TINGS]:[13]:method_text:[izer();        }    }    //Test case 1.4: test setBandLevel() throws exception after release   ])', 1), ('([3:/android/location/cts/coarse/LocationManagerCoarseTest.java]:[TINGS]:[3]:method_text:[ockLocationProvider(InstrumentationRegistry.getInstrumentation(),                false);    }   ])', 1), ('([1:/android/location/cts/coarse/LocationManagerCoarseTest.java]:[TINGS]:[1]:method_text:[_M,                MIN_COARSE_FUDGE_DISTANCE_M)).isAtLeast(MIN_COARSE_FUDGE_DISTANCE_M);    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[TINGS]:[1]:method_text:[callbacks        clearCallbacks();        mUiAutomation.dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/media/cts/SystemMediaRouter2Test.java]:[TINGS]:[1]:method_text:[r (RoutingController controller : controllers) {            controller.release();        }    }}])', 1), ('([3:/android/appsecurity/cts/ApplicationVisibilityTest.java]:[TINGS]:[3]:method_text:[mand(""settings put global package_verifier_enable ""                + mOldVerifierValue);    }   ])', 1), ('([1:/android/view/inputmethod/cts/EditTextImeSupportTest.java]:[TINGS]:[1]:method_text:[    return editTextRef.get();    }    /**     * A regression test for Bug 161330778.     */   ])', 1), ('([1:/android/view/inputmethod/cts/EditTextImeSupportTest.java]:[TINGS]:[1]:method_text:[+ "" but was null"");        }        assertEquals(expected.toString(), actual.toString());    }}])', 1), ('([1:/android/content/syncmanager/cts/CtsSyncManagerTest.java]:[TINGS]:[1]:method_text:[       24 * 60 * 60, ContentResolver.getPeriodicSyncs(account, authority).get(0).period);    }   ])', 1), ('([1:/android/content/syncmanager/cts/CtsSyncManagerTest.java]:[TINGS]:[1]:method_text:[tions="" + calls);            return calls > 4; // Arbitrarily bigger than 4.        });    }   ])', 1), ('([1:/android/content/syncmanager/cts/CtsSyncManagerTest.java]:[TINGS]:[1]:method_text:[ue(""# of syncs must be equal or less than 5, but was "" + calls, calls <= 5);//        });//    }}])', 1), ('([3:/com/android/server/cts/IncidentdTest.java]:[TINGS]:[3]:method_text:[Level);        }    }    // Splitting these into separate methods to make debugging easier.   ])', 1), ('([6:/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java]:[TINGS]:[6]:method_text:[    } else {            runShellCommand(""am force-stop com.android.settings"");        }    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java]:[TINGS]:[2]:method_text:[lt.        mUiBot.pressBack();        mActivity.assertResult(Activity.RESULT_CANCELED);    }   ])', 1), ('([5:/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java]:[TINGS]:[5]:method_text:[FLAG_ACTIVITY_NEW_TASK)                .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));    }}])', 1), ('([1:/android/autofillservice/cts/servicebehavior/SettingsIntentTest.java]:[Settings.ACTION]:[1]:method_text:[FLAG_ACTIVITY_NEW_TASK)                .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));    }}])', 1), ('([1:/android/media/cts/AudioSystemTest.java]:[TINGS]:[1]:method_text:[System.setMasterBalance and AudioSystem.getMasterBalance     *     * @throws Exception     */   ])', 1), ('([10:/android/media/cts/RatingTest.java]:[TINGS]:[10]:method_text:[ = Rating.newUnratedRating(invalidRatingStyle);            assertNull(rating);        }    }   ])', 1), ('([2:/android/media/cts/RatingTest.java]:[TINGS]:[2]:method_text:[rtFalse(ratingWithoutHeart.hasHeart());        assertTrue(ratingWithoutHeart.isRated());    }   ])', 1), ('([2:/android/media/cts/RatingTest.java]:[TINGS]:[2]:method_text:[ assertFalse(ratingThumbDown.isThumbUp());        assertTrue(ratingThumbDown.isRated());    }   ])', 1), ('([4:/android/media/cts/RatingTest.java]:[TINGS]:[4]:method_text:[yles) {            assertNull(Rating.newStarRating(nonStarRatingStyle, 1.0f));        }    }   ])', 1), ('([6:/android/media/cts/RatingTest.java]:[TINGS]:[6]:method_text:[.getStarRating(), /*delta=*/ 0f);            assertTrue(starRating.isRated());        }    }   ])', 1), ('([1:/android/media/cts/RatingTest.java]:[TINGS]:[1]:method_text:[ntRating(), /*delta=*/ 0f);            assertTrue(percentageRating.isRated());        }    }   ])', 1), ('([2:/android/media/cts/RatingTest.java]:[TINGS]:[2]:method_text:[ngFromParcel.getStarRating(), 0f);        } finally {            p.recycle();        }    }   ])', 1), ('([5:/android/jobscheduler/cts/ConnectivityConstraintTest.java]:[TINGS]:[5]:method_text:[ device     * is connected to WiFi. This will fail if a wifi connection is unavailable.     */   ])', 1), ('([2:/android/jobscheduler/cts/ConnectivityConstraintTest.java]:[TINGS]:[2]:method_text:[ires a network connection, and verify that it runs even     * when Battery Saver is on.     */   ])', 1), ('([2:/android/jobscheduler/cts/ConnectivityConstraintTest.java]:[TINGS]:[2]:method_text:[executes     * on a mobile data connection and is stopped when Data Saver is turned on.     */   ])', 1), ('([3:/android/jobscheduler/cts/ConnectivityConstraintTest.java]:[TINGS]:[3]:method_text:[ptyMessageDelayed(MSG_CHECK_ACTIVE_NETWORK, 5000);                }            }        }    }}])', 1), ('([11:/android/app/cts/ActivityManagerApi29Test.java]:[TINGS]:[11]:method_text:[ * , even its capability is zero, it still has location access.     * @throws Exception     */   ])', 1), ('([3:/com/android/cts/deviceowner/WifiConfigLockdownTest.java]:[TINGS]:[3]:method_text:[anager.removeNetwork(config.networkId);            }        }        super.tearDown();    }   ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[TINGS]:[1]:method_text:[ase {    @Override    protected void setUp() throws Exception {        super.setUp();    }   ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[TINGS]:[1]:method_text:[        assertFalse(channel.isDemoted());        assertFalse(channel.isConversation());    }   ])', 1), ('([5:/android/contentcaptureservice/cts/CanaryTest.java]:[TINGS]:[5]:method_text:[ty (settings=\'%s\')"",                serviceName, enableSettings).that(hasService).isTrue();    }}])', 1), ('([5:/android/os/cts/batterysaving/ActionChargingTest.java]:[TINGS]:[5]:method_text:[eryManager.class);    }    @After    public void tearDown() {        resetSetting();    }   ])', 1), ('([2:/com/android/server/cts/device/statsdatom/Checkers.java]:[TINGS]:[2]:method_text:[ice(WifiManager.class);        assertThat(wm.isEnhancedPowerReportingSupported()).isTrue();    }}])', 1), ('([11:/android/telephony/cts/TelephonyManagerTest.java]:[TINGS]:[11]:method_text:[          callWaitingStatusResult.poll(TIMEOUT_FOR_NETWORK_OPS, TimeUnit.MILLISECONDS)));    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[TINGS]:[1]:method_text:[                        validCallWaitingErrors.contains(result));            }        }    }   ])', 1), ('([11:/android/telephony/cts/TelephonyManagerTest.java]:[TINGS]:[11]:method_text:[isDataEnabled(),                        5 /*times*/, TOLERANCE/5 /*timeout per poll*/));    }   ])', 1), ('([1:/android/hardware/hdmi/cts/HdmiControlManagerTest.java]:[TINGS]:[1]:method_text:[  assertThat(mHdmiControlManager.getHdmiCecVersion()).isEqualTo(originalValue);        }    }   ])', 1), ('([1:/android/hardware/hdmi/cts/HdmiControlManagerTest.java]:[TINGS]:[1]:method_text:[etHdmiCecVolumeControlEnabled()).isEqualTo(                    originalValue);        }    }   ])', 1), ('([2:/android/hardware/hdmi/cts/HdmiControlManagerTest.java]:[TINGS]:[2]:method_text:[assertThat(mHdmiControlManager.getPowerControlMode()).isEqualTo(originalValue);        }    }   ])', 1), ('([2:/android/hardware/hdmi/cts/HdmiControlManagerTest.java]:[TINGS]:[2]:method_text:[StateChangeOnActiveSourceLost()).isEqualTo(                    originalValue);        }    }   ])', 1), ('([1:/android/hardware/hdmi/cts/HdmiControlManagerTest.java]:[TINGS]:[1]:method_text:[tThat(mHdmiControlManager.getSystemAudioModeMuting()).isEqualTo(originalValue);        }    }   ])', 1), ('([1:/android/hardware/hdmi/cts/HdmiControlManagerTest.java]:[TINGS]:[1]:method_text:[nager.getTvWakeOnOneTouchPlay()).isEqualTo(                    originalValue);        }    }   ])', 1), ('([1:/android/hardware/hdmi/cts/HdmiControlManagerTest.java]:[TINGS]:[1]:method_text:[lManager.getTvSendStandbyOnSleep()).isEqualTo(                    originalValue);        }    }}])', 1), ('([1:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[TINGS]:[1]:method_text:[S.toMillis(5);    @AppModeFull(reason = ""KeyguardManager is not accessible from instant apps"")   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[TINGS]:[1]:method_text:[able window hosted by a different process     * temporarily becomes the focused window.     */   ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[TINGS]:[1]:method_text:[Matcher() {        return event -> TextUtils.equals(""onFinishInput"", event.getEventName());    }}])', 1), ('([6:/android/autofillservice/cts/dropdown/VirtualContainerActivityCompatModeTest.java]:[TINGS]:[6]:method_text:[o(""dev.null"");        assertThat(urlBar.getWebScheme()).isEqualTo(""ftp"");    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/dropdown/VirtualContainerActivityCompatModeTest.java]:[TINGS]:[1]:method_text:[odeByResourceId(request.structure, ID_URL_BAR);        assertUrlBarIsSanitized(urlBar);    }   ])', 1), ('([1:/android/autofillservice/cts/dropdown/VirtualContainerActivityCompatModeTest.java]:[TINGS]:[1]:method_text:[_BAR2);        assertUrlBarIsSanitized(urlBar);        assertTextIsSanitized(urlBar2);    }   ])', 1), ('([1:/android/webkit/cts/WebViewZoomTest.java]:[TINGS]:[1]:method_text:[rver.getAssetUrl(TestHtmlConstants.HELLO_WORLD_URL));        pollingCheckForCanZoomIn();    }   ])', 1), ('([6:/android/webkit/cts/WebViewZoomTest.java]:[TINGS]:[6]:method_text:[             WebkitUtils.onMainThreadSync(() -> { return mWebView.getZoomControls(); }));    }   ])', 1), ('([4:/android/webkit/cts/WebViewZoomTest.java]:[TINGS]:[4]:method_text:[    setUpPage();        WebkitUtils.onMainThreadSync(() -> mWebView.invokeZoomPicker());    }   ])', 1), ('([7:/android/webkit/cts/WebViewZoomTest.java]:[TINGS]:[7]:method_text:[     mOnUiThread.zoomOut());        currScale = mWebViewClient.expectZoomOut(currScale);    }   ])', 1), ('([2:/android/graphics/text/cts/TextRunShaperTest.java]:[TINGS]:[2]:method_text:[getTag()).isEqualTo(""wght"");        assertThat(axes[0].getStyleValue()).isEqualTo(250f);    }   ])', 1), ('([4:/android/text/style/cts/TextAppearanceSpanTest.java]:[TINGS]:[4]:method_text:[thNoAttributes);        assertEquals(null, textAppearanceSpan.getFontFeatureSettings());    }   ])', 1), ('([4:/android/text/style/cts/TextAppearanceSpanTest.java]:[TINGS]:[4]:method_text:[NoAttributes);        assertEquals(null, textAppearanceSpan.getFontVariationSettings());    }   ])', 1), ('([3:/android/text/style/cts/TextAppearanceSpanTest.java]:[TINGS]:[3]:method_text:[ span.updateDrawState(tp);        assertEquals(""\\""smcp\\"""", tp.getFontFeatureSettings());    }   ])', 1), ('([3:/android/text/style/cts/TextAppearanceSpanTest.java]:[TINGS]:[3]:method_text:[n.updateDrawState(tp);        assertEquals(""\'wdth\' 150"", tp.getFontVariationSettings());    }   ])', 1), ('([4:/android/text/style/cts/TextAppearanceSpanTest.java]:[TINGS]:[4]:method_text:[;        assertEquals(span.isElegantTextHeight(), unparceledSpan.isElegantTextHeight());    }   ])', 1), ('([7:/android/appsecurity/cts/AppDataIsolationTests.java]:[TINGS]:[7]:method_text:[          }                getDevice().waitForDeviceAvailable();            }        }    }   ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.camera.any]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 1), ('([4:/android/media/cts/ResourceManagerStubActivity.java]:[TINGS]:[4]:method_text:[chronized (mFinishEvent) {                mFinishEvent.notify();            }        }    }   ])', 1), ('([12:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[12]:method_text:[       if (mTuner != null) {          mTuner.close();          mTuner = null;        }    }   ])', 1), ('([47:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[47]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 1), ('([19:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[19]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 1), ('([36:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[36]:method_text:[ssertEquals(DvbcFrontendSettings.BANDWIDTH_UNDEFINED, settings.getBandwidth());        }    }   ])', 1), ('([43:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[43]:method_text:[ls(false, cr.isShortFrameEnabled());        assertEquals(55, cr.getBitsPer1000Symbol());    }   ])', 1), ('([51:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[51]:method_text:[rtEquals(Tuner.INVALID_FRONTEND_SETTING_FREQUENCY, settings.getEndFrequency());        }    }   ])', 1), ('([26:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[26]:method_text:[tendSettings.GUARD_INTERVAL_PN_945_VARIOUS,                settings.getGuardInterval());    }   ])', 1), ('([11:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[TINGS]:[11]:method_text:[{        return mContext.getPackageManager().hasSystemFeature(""android.hardware.tv.tuner"");    }}])', 1), ('([3:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[TINGS]:[3]:method_text:[     }        public Size getExpectedSize() {            return mExpectedSize;        }    }}])', 1), ('([5:/android/voicesettings/cts/BatterySaverModeTest.java]:[TINGS]:[5]:method_text:[  mHasFeature = mContext.getPackageManager().hasSystemFeature(FEATURE_VOICE_RECOGNIZERS);    }   ])', 1), ('([1:/android/voicesettings/cts/BatterySaverModeTest.java]:[TINGS]:[1]:method_text:[text.getSystemService(Context.POWER_SERVICE);        return powerManager.isPowerSaveMode();    }}])', 1), ('([1:/android/voicesettings/cts/BatterySaverModeTest.java]:[Settings.ACTION]:[1]:method_text:[  mHasFeature = mContext.getPackageManager().hasSystemFeature(FEATURE_VOICE_RECOGNIZERS);    }   ])', 1), ('([1:/android/text/style/cts/CharacterStyleTest.java]:[TINGS]:[1]:method_text:[unit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class CharacterStyleTest {   ])', 1), ('([8:/android/text/style/cts/CharacterStyleTest.java]:[TINGS]:[8]:method_text:[ll);        assertNotNull(result);        assertTrue(result instanceof CharacterStyle);    }   ])', 1), ('([5:/android/text/style/cts/CharacterStyleTest.java]:[TINGS]:[5]:method_text:[acterStyle {        @Override        public void updateDrawState(TextPaint tp) {        }    }}])', 1), ('([1:/android/voiceinteraction/cts/VoiceInteractionRoleTest.java]:[TINGS]:[1]:method_text:[is singleton role            addAssistRoleHolder(mOriginalRoleHolders.get(0));        }    }   ])', 1), ('([7:/android/voiceinteraction/cts/VoiceInteractionRoleTest.java]:[TINGS]:[7]:method_text:[g.i(TAG, mMethodName + "" result "" + successful);            complete(successful);        }    }}])', 1), ('([2:/android/graphics/drawable/cts/VectorDrawableTest.java]:[TINGS]:[2]:method_text:[InstrumentationRegistry.getTargetContext();        mResources = mContext.getResources();    }   ])', 1), ('([2:/android/media/cts/MediaControllerTest.java]:[TINGS]:[2]:method_text:[    // callback method, but no controller is sending any command.            }        }    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[TINGS]:[1]:method_text:[ad.sleep(1000);        }        throw new AssertionError(""Failed to get UiAutomation"");    }   ])', 1), ('([5:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[TINGS]:[5]:method_text:[ISALLOW_CONFIG_DATE_TIME,                    UserManager.DISALLOW_AIRPLANE_MODE            );   ])', 1), ('([25:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[TINGS]:[25]:method_text:[Manager.class);        return am.getHistoricalProcessExitReasons(packageName, pid, max);    }   ])', 1), ('([2:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[TINGS]:[2]:method_text:[f(trace) >= 0);        monitor.finish();        mContext.unregisterReceiver(receiver);    }   ])', 1), ('([11:/android/media/cts/BassBoostTest.java]:[TINGS]:[11]:method_text:[Boost();        }    }    //Test case 1.2: test setStrength() throws exception after release   ])', 1), ('([2:/android/hardware/camera2/cts/BurstCaptureTest.java]:[TINGS]:[2]:method_text:[ol.     * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.     */   ])', 1), ('([2:/android/hardware/camera2/cts/BurstCaptureTest.java]:[TINGS]:[2]:method_text:[is test uses STILL_CAPTURE intent, and exercises path where     * enableZsl is enabled.     */   ])', 1), ('([2:/android/hardware/camera2/cts/BurstCaptureTest.java]:[TINGS]:[2]:method_text:[de.     * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.     */   ])', 1), ('([9:/android/hardware/camera2/cts/BurstCaptureTest.java]:[TINGS]:[9]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([1:/android/server/wm/intent/IntentGenerationTests.java]:[TINGS]:[1]:method_text:[vate Context mTargetContext = getInstrumentation().getTargetContext();    //20 minute timeout.   ])', 1), ('([3:/android/bluetooth/cts/AdvertiseSettingsTest.java]:[TINGS]:[3]:method_text:[rtiseSettings}. */public class AdvertiseSettingsTest extends AndroidTestCase {    @SmallTest   ])', 1), ('([10:/android/bluetooth/cts/AdvertiseSettingsTest.java]:[TINGS]:[10]:method_text:[s(0, settings.getTimeout());        assertTrue(settings.isConnectable());    }    @SmallTest   ])', 1), ('([4:/android/bluetooth/cts/AdvertiseSettingsTest.java]:[TINGS]:[4]:method_text:[s.Builder().build();        assertEquals(0, settings.describeContents());    }    @SmallTest   ])', 1), ('([15:/android/bluetooth/cts/AdvertiseSettingsTest.java]:[TINGS]:[15]:method_text:[gsFromParcel.getTimeout());        assertFalse(settings.isConnectable());    }    @SmallTest   ])', 1), ('([2:/android/bluetooth/cts/AdvertiseSettingsTest.java]:[TINGS]:[2]:method_text:[s"");        } catch (IllegalArgumentException e) {            // nothing to do.        }    }}])', 1), ('([11:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[TINGS]:[11]:method_text:[(out);            out.flush();        } finally {            out.close();        }    }   ])', 1), ('([3:/com/android/server/cts/UsbIncidentTest.java]:[TINGS]:[3]:method_text:[= device.hasFeature(FEATURE_USB_ACCESSORY);        return hasUsbHost || hasUsbAccessory;    }   ])', 1), ('([10:/com/android/server/cts/UsbIncidentTest.java]:[TINGS]:[10]:method_text:[Level == PRIVACY_AUTO) {            assertTrue(udfp.getSerialNumber().isEmpty());        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[TINGS]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([1:/android/appsecurity/cts/ExternalStorageHostTest.java]:[TINGS]:[1]:method_text:[should use the {@code content} shell     * tool to read/write files in those locations.     */   ])', 1), ('([1:/android/bluetooth/cts/AdvertiseCallbackTest.java]:[TINGS]:[1]:method_text:[vate final BleAdvertiseCallback mAdvertiseCallback = new BleAdvertiseCallback();    @SmallTest   ])', 1), ('([2:/android/bluetooth/cts/AdvertiseCallbackTest.java]:[TINGS]:[2]:method_text:[rtEquals(AdvertiseCallback.ADVERTISE_FAILED_ALREADY_STARTED, error);            }        }    }}])', 1), ('([3:/android/host/accounts/AccountManagerHostSideTest.java]:[TINGS]:[3]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([7:/android/os/cts/InattentiveSleepTests.java]:[TINGS]:[7]:method_text:[        mDevice.executeShellCommand(String.format(CMD_SET_TIMEOUT_TEMPLATE, timeoutMs));    }   ])', 1), ('([1:/android/os/cts/InattentiveSleepTests.java]:[TINGS]:[1]:method_text:["", TIME_BEFORE_WARNING_MS,                () -> getWakefulness() == WAKEFULNESS_ASLEEP);    }   ])', 1), ('([1:/android/os/cts/InattentiveSleepTests.java]:[TINGS]:[1]:method_text:[leep after timeout"", 1000,                () -> getWakefulness() == WAKEFULNESS_ASLEEP);    }   ])', 1), ('([4:/android/os/cts/InattentiveSleepTests.java]:[TINGS]:[4]:method_text:[ timeout) throws Exception {        PollingCheck.waitFor(timeout, () -> !isWarningShown());    }}])', 1)]"	"https://developer.android.com"	""	"[('TINGS', 117), ('Settings.ACTION', 2), ('android.hardware.camera.any', 1)]"	"[('[android.autofillservice.cts.servicebehavior.SettingsIntentTest testWarningShown_userRejectsByTappingBack CtsAutoFillServiceTestCases]', 2), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityCompatModeTest testMultipleUrlBars_firstDoesNotExist CtsAutoFillServiceTestCases]', 2), ('[android.media.cts.EnvReverbTest test1_5Properties CtsMediaTestCases]', 1), ('[android.media.cts.EqualizerTest test1_3Properties CtsMediaTestCases]', 1), ('[android.location.cts.coarse.LocationManagerCoarseTest currentTimeMillis CtsLocationCoarseTestCases]', 1), ('[android.location.cts.coarse.LocationManagerCoarseTest testMinCoarseLocationDistance CtsLocationCoarseTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test ArrayList CtsMediaTestCases]', 1), ('[android.media.cts.SystemMediaRouter2Test testRoutingControllerRelease CtsMediaTestCases]', 1), ('[android.view.inputmethod.cts.EditTextImeSupportTest getTestMarker CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.EditTextImeSupportTest testSetTextTriggersRestartInput CtsInputMethodTestCases]', 1), ('[android.content.syncmanager.cts.CtsSyncManagerTest testSoftErrorRetriesActiveApp None]', 1), ('[android.content.syncmanager.cts.CtsSyncManagerTest testExpeditedJobSync None]', 1), ('[android.content.syncmanager.cts.CtsSyncManagerTest testExpeditedJobSync_InDoze None]', 1), ('[android.content.syncmanager.cts.CtsSyncManagerTest testSoftErrorRetriesFrequentApp None]', 1), ('[com.android.server.cts.IncidentdTest isEmpty CtsIncidentHostTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.SettingsIntentTest isAutomotive CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.SettingsIntentTest testMultipleServicesShown CtsAutoFillServiceTestCases]', 1), ('[android.media.cts.RatingTest testNewUnratedRating CtsMediaTestCases]', 1), ('[android.media.cts.RatingTest testHeartRating CtsMediaTestCases]', 1), ('[android.media.cts.RatingTest testThumbRating CtsMediaTestCases]', 1), ('[android.media.cts.RatingTest testNewStarRatingWithInvalidStylesReturnsNull CtsMediaTestCases]', 1), ('[android.media.cts.RatingTest testStarRating CtsMediaTestCases]', 1), ('[android.media.cts.RatingTest testPercentageRating CtsMediaTestCases]', 1), ('[android.media.cts.RatingTest testParcelization CtsMediaTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest isWifiEnabled CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest testExpeditedJobExecutes_IdleApp CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest testExpeditedJobBypassesSimultaneousFirewalls_noDataSaver CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest testExpeditedJobDoesNotBypassSimultaneousFirewalls_withDataSaver CtsJobSchedulerTestCases]', 1), ('[android.app.cts.ActivityManagerApi29Test clearHistory CtsAppTestCases]', 1), ('[android.app.cts.NotificationChannelTest testConstructor CtsAppTestCases]', 1), ('[android.contentcaptureservice.cts.CanaryTest isTrue CtsContentCaptureServiceTestCases]', 1), ('[android.os.cts.batterysaving.ActionChargingTest uptimeMillis CtsBatterySavingTestCases]', 1), ('[com.android.server.cts.device.statsdatom.Checkers isEnhancedPowerReportingSupported None]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetCallWaitingStatus CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testSetCallWaitingStatus CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testResetSettings CtsTelephonyTestCases]', 1), ('[android.hardware.hdmi.cts.HdmiControlManagerTest testHdmiCecConfig_HdmiCecEnabled CtsHardwareTestCases]', 1), ('[android.hardware.hdmi.cts.HdmiControlManagerTest testHdmiCecConfig_HdmiCecEnabled_ListenerWithCustomExecutor CtsHardwareTestCases]', 1), ('[android.hardware.hdmi.cts.HdmiControlManagerTest testHdmiCecConfig_HdmiCecEnabled_Listener CtsHardwareTestCases]', 1), ('[android.hardware.hdmi.cts.HdmiControlManagerTest testHdmiCecConfig_HdmiCecVersion CtsHardwareTestCases]', 1), ('[android.hardware.hdmi.cts.HdmiControlManagerTest testHdmiCecConfig_HdmiCecVolumeControlEnabled CtsHardwareTestCases]', 1), ('[android.hardware.hdmi.cts.HdmiControlManagerTest testHdmiCecConfig_PowerControlMode CtsHardwareTestCases]', 1), ('[android.hardware.hdmi.cts.HdmiControlManagerTest testHdmiCecConfig_PowerStateChangeOnActiveSourceLost CtsHardwareTestCases]', 1), ('[android.hardware.hdmi.cts.HdmiControlManagerTest testHdmiCecConfig_SystemAudioModeMuting CtsHardwareTestCases]', 1), ('[android.hardware.hdmi.cts.HdmiControlManagerTest testHdmiCecConfig_TvWakeOnOneTouchPlay CtsHardwareTestCases]', 1), ('[android.hardware.hdmi.cts.HdmiControlManagerTest testHdmiCecConfig_TvTvSendStandbyOnSleep CtsHardwareTestCases]', 1), ('[android.view.inputmethod.cts.InputMethodStartInputLifecycleTest DisableScreenDozeRule CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.InputMethodStartInputLifecycleTest testInputConnectionStateWhenScreenStateChanges CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.InputMethodStartInputLifecycleTest testNoStartNewInputWhileOtherProcessHasWindowFocus CtsInputMethodTestCases]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityCompatModeTest VirtualContainerActivityCompatModeTest CtsAutoFillServiceTestCases]', 1), ('[android.webkit.cts.WebViewZoomTest WebViewZoomTest CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebViewZoomTest testGetZoomControls CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebViewZoomTest testInvokeZoomPicker CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebViewZoomTest testCanZoomWhileZoomSupportedFalse CtsWebkitTestCases]', 1), ('[android.text.style.cts.TextAppearanceSpanTest testGetFontFeatureSettings CtsTextTestCases]', 1), ('[android.text.style.cts.TextAppearanceSpanTest testGetFontVariationSettings CtsTextTestCases]', 1), ('[android.text.style.cts.TextAppearanceSpanTest testCreateFromStyle_FontFeatureSettings CtsTextTestCases]', 1), ('[android.text.style.cts.TextAppearanceSpanTest testCreateFromStyle_FontVariationSettings CtsTextTestCases]', 1), ('[android.text.style.cts.TextAppearanceSpanTest testWriteReadParcel_WithAllAttributes CtsTextTestCases]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testDirectBootModeWorks CtsAppSecurityHostTestCases]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest adoptShellPermissionIdentity CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAnalogFrontendSettings CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtsc3FrontendSettings CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtscFrontendSettings CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testDvbcFrontendSettings CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testDvbsFrontendSettings CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testDvbtFrontendSettings CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testIsdbs3FrontendSettings CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testIsdbsFrontendSettings CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testIsdbtFrontendSettings CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testDtmbFrontendSettings CtsTvTestCases]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testFrontendInfo CtsTvTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionMandatoryStreamCombinationTest CtsCameraTestCases]', 1), ('[android.voicesettings.cts.BatterySaverModeTest testAll CtsVoiceSettingsTestCases]', 1), ('[android.text.style.cts.CharacterStyleTest testWrap CtsTextTestCases]', 1), ('[android.text.style.cts.CharacterStyleTest testGetUnderlying CtsTextTestCases]', 1), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest getAssistRoleHolders CtsVoiceInteractionTestCases]', 1), ('[android.voiceinteraction.cts.VoiceInteractionRoleTest testAssistRole_noRecognitionService CtsVoiceInteractionTestCases]', 1), ('[android.media.cts.MediaControllerTest testTransportControlsAndMediaSessionCallback CtsMediaTestCases]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest dropShellPermissionIdentity None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerProfileUserRestriction_onParent None]', 1), ('[android.app.cts.ActivityManagerAppExitInfoTest finish CtsAppExitTestCases]', 1), ('[android.app.cts.ActivityManagerAppExitInfoTest testAnr CtsAppExitTestCases]', 1), ('[android.media.cts.BassBoostTest test1_1Properties CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testJpegBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 1), ('[android.bluetooth.cts.AdvertiseSettingsTest testDefaultSettings CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.AdvertiseSettingsTest testDescribeContents CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.AdvertiseSettingsTest testReadWriteParcel CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.AdvertiseSettingsTest testIllegalTimeout CtsBluetoothTestCases]', 1), ('[android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest isDebuggerConnected None]', 1), ('[com.android.server.cts.UsbIncidentTest testUsbServiceDump CtsIncidentHostTestCases]', 1), ('[android.appsecurity.cts.ExternalStorageHostTest testExternalStorageReadDefaultUris CtsAppSecurityHostTestCases]', 1), ('[android.bluetooth.cts.AdvertiseCallbackTest MockAdvertiser CtsBluetoothTestCases]', 1), ('[android.bluetooth.cts.AdvertiseCallbackTest testAdvertiseFailure CtsBluetoothTestCases]', 1), ('[android.os.cts.InattentiveSleepTests testInattentiveSleep_goesToSleepAfterTimeout CtsOsHostTestCases]', 1), ('[android.os.cts.InattentiveSleepTests testInattentiveSleep_goesToSleepAfterTimeoutWithWakeLock CtsOsHostTestCases]', 1), ('[android.os.cts.InattentiveSleepTests testInattentiveSleep_warningTiming CtsOsHostTestCases]', 1)]"
