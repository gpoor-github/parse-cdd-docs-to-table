"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"Area"	"Shortened"	"Test Level"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"
"4_application-packaging"	"4"	"C-0-3"	"4/C-0-3"	"04000000.670003"	"""C-0-3] MUST NOT extend either the [.apk](http://developer.android.com/guide/components/fundamentals.html), [Android Manifest]( http://developer.android.com/guide/topics/manifest/manifest-intro.html), [Dalvik bytecode](https://android.googlesource.com/platform/dalvik/), or RenderScript bytecode formats in such a way that would prevent those files from installing and running correctly on other compatible devices. """	"Not testable. Requires code inspection and or manual testing across a set of undefined devices."	""	"intro.html android.googlesource.com fundamentals.html"	""	""	""	""	"[('android.security.cts.ActivityManagerTest', 1), ('android.security.cts.RunningAppProcessInfoTest', 1), ('android.adb.cts.AdbHostTest', 1)]"	"[('flush', 1), ('close', 1), ('deleteOnExit', 1)]"	"[('CtsSecurityTestCases', 2), ('CtsAdbHostTestCases', 1)]"	""	""	""	""	"android.adb.cts.AdbHostTest"	"deleteOnExit"	"CtsAdbHostTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/RunningAppProcessInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/ActivityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adb/src/android/adb/cts/AdbHostTest.java', 1)]"	"[('(1,android.googlesource.com,/android/security/cts/RunningAppProcessInfoTest.java)', 1), ('(1,android.googlesource.com,/android/security/cts/ActivityManagerTest.java)', 1), ('(1,android.googlesource.com,/android/adb/cts/AdbHostTest.java)', 1)]"	"[('([1:/android/security/cts/RunningAppProcessInfoTest.java]:[android.googlesource.com]:[1]:method_text:[se/+"" +                ""/aaa0fee0d7a8da347a0c47cef5249c70efee209e"", (appList.size() == 1));    }}])', 1), ('([1:/android/security/cts/ActivityManagerTest.java]:[android.googlesource.com]:[1]:method_text:[ow this exception        }    }    // b/144285917    @AsbSecurityTest(cveBugId = 144285917)   ])', 1), ('([1:/android/adb/cts/AdbHostTest.java]:[android.googlesource.com]:[1]:method_text:[c7c6d5edcbe04454eb9a40f947ac0a3045f64eb    // for the patch that enabled this on Pixel devices.   ])', 1)]"	"https://android.googlesource.com http://developer.android.com"	""	"[('android.googlesource.com', 3)]"	"[('[android.security.cts.RunningAppProcessInfoTest testRunningAppProcessInfo CtsSecurityTestCases]', 1), ('[android.security.cts.ActivityManagerTest testActivityManager_injectInputEvents CtsSecurityTestCases]', 1)]"
"4_application-packaging"	"4"	"C-0-2"	"4/C-0-2"	"04000000.670002"	"""C-0-2] MUST support verifying “.apk” files using the [APK Signature Scheme v3](https://source.android.com/security/apksigning/v3.html) , [APK Signature Scheme v2](https://source.android.com/security/apksigning/v2.html) and [JAR signing]( https://source.android.com/security/apksigning/v2.html#v1-verification). """	""	"PkgInstallSignatureVerificationTest"	"v2.html v3.html JAR APK"	"509 v3"	"APK "	""	""	"[('android.appsecurity.cts.PkgInstallSignatureVerificationTest', 75)]"	"[('setUp', 2), ('getDevice', 1), ('uninstallPackage', 1), ('uninstallCompanionPackages', 1)]"	"[('CtsAppSecurityHostTestCases', 75)]"	""	""	""	""	"android.appsecurity.cts.PkgInstallSignatureVerificationTest"	"uninstallCompanionPackages"	"CtsAppSecurityHostTestCases"	""	""	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java', 75)]"	"[('(2,JAR,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(4,509,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(191,v3,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1)]"	"[('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[  Utils.runDeviceTests(getDevice(), DEVICE_TESTS_PKG, DEVICE_TESTS_CLASS, ""testHasPerm"");    }   ])', 4), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[Utils.runDeviceTests(getDevice(), DEVICE_TESTS_PKG, DEVICE_TESTS_CLASS, ""testHasNoPerm"");    }   ])', 4), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[2]:method_text:[  Utils.runDeviceTests(getDevice(), DEVICE_TESTS_PKG, DEVICE_TESTS_CLASS, ""testHasPerm"");    }   ])', 2), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[JAR]:[2]:method_text:[  assertInstallSucceeds(""v1-with-apk-sig-block-but-without-apk-sig-scheme-v2-block.apk"");    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[509]:[2]:method_text:[     assertInstallFailsWithError(""v1-only-with-rsa-1024.apk"", ""signatures do not match"");    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[509]:[2]:method_text:[or(                ""v2-only-with-rsa-pkcs1-sha256-1024.apk"", ""signatures do not match"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[AvailableException ignored) {        } finally {            super.tearDown();        }    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[ly-negative-modulus.apk"");        assertInstallSucceeds(""v3-only-negative-modulus.apk"");    }   ])', 1), ('([4:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[4]:method_text:[;        assertInstallSucceeds(""v3-rsa-pkcs1-sha256-2048-2-with-por_1_2-full-caps.apk"");    }   ])', 1), ('([4:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[4]:method_text:[th-por_1_2-full-caps.apk"");        assertInstallFails(""v3-rsa-pkcs1-sha256-2048-1.apk"");    }   ])', 1), ('([4:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[4]:method_text:[ull-and-roll-caps.apk"");        assertInstallSucceeds(""v3-rsa-pkcs1-sha256-2048-1.apk"");    }   ])', 1), ('([4:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[4]:method_text:[        assertInstallSucceeds(""v3-rsa-pkcs1-sha256-2048-3-with-por_1_2_3-full-caps.apk"");    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[2]:method_text:[tall        assertInstallFails(""v3-rsa-pkcs1-sha256-2048-3-with-por_1_2-full-caps.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[k"");        assertInstallFails(""v3-rsa-pkcs1-sha256-2048-3-with-por_2_3-full-caps.apk"");    }   ])', 1), ('([4:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[4]:method_text:[            ""v3-rsa-pkcs1-sha256-2048-2-with-por_1_2-full-caps-sharedUid-companion.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[mpanion.apk"");        assertInstallSucceeds(""v3-rsa-pkcs1-sha256-2048-1-sharedUid.apk"");    }   ])', 1), ('([4:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[4]:method_text:[         ""v3-rsa-pkcs1-sha256-2048-2-with-por_1_2-no-shUid-cap-sharedUid-companion.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[-companion.apk"");        assertInstallFails(""v3-rsa-pkcs1-sha256-2048-1-sharedUid.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[mpanion.apk"");        assertInstallSucceeds(""v3-rsa-pkcs1-sha256-2048-2-sharedUid.apk"");    }   ])', 1), ('([4:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[4]:method_text:[dUid.apk"");        assertInstallFromBuildFails(""v3-ec-p256-1-sharedUid-companion2.apk"");    }   ])', 1), ('([5:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[5]:method_text:[       assertInstallFromBuildFails(""v3-ec-p256-with-por_1_2-no-shUid-cap-sharedUid.apk"");    }   ])', 1), ('([4:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[4]:method_text:[d.apk"");        assertInstallFromBuildSucceeds(""v3-ec-p256-1-sharedUid-companion2.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[    assertInstallFromBuildSucceeds(""v3-ec-p256-with-por_1_2-no-shUid-cap-sharedUid.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[        assertInstallFromBuildFails(""v3-por_Z_1_2-default-caps-sharedUid-companion.apk"");    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[2]:method_text:[_TEST_PKG, SERVICE_TEST_CLASS,                ""verifySignatures_withRotation_succeeds"");    }   ])', 1), ('([4:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[4]:method_text:[  Utils.runDeviceTests(getDevice(), DEVICE_TESTS_PKG, DEVICE_TESTS_CLASS, ""testHasPerm"");    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[2]:method_text:[Utils.runDeviceTests(getDevice(), DEVICE_TESTS_PKG, DEVICE_TESTS_CLASS, ""testHasNoPerm"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[  assertInstallSucceeds(""v3-rsa-pkcs1-sha256-2048-2-with_por_1_2-permdef-companion.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[companion.apk"");        assertInstallSucceeds(""v3-rsa-pkcs1-sha256-2048-1-permdef.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[            ""v3-rsa-pkcs1-sha256-2048-2-with_por_1_2-no-perm-cap-permdef-companion.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[ef-companion.apk"");        assertInstallFails(""v3-rsa-pkcs1-sha256-2048-1-permdef.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[companion.apk"");        assertInstallSucceeds(""v3-rsa-pkcs1-sha256-2048-2-permdef.apk"");    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[2]:method_text:[         getDevice(), DEVICE_TESTS_PKG, DEVICE_TESTS_CLASS, ""testGetSignaturesShowsOld"");    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[2]:method_text:[ICE_TESTS_PKG, DEVICE_TESTS_CLASS,                ""testGetSigningCertificatesShowsAll"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[_TESTS_PKG, DEVICE_TESTS_CLASS,                ""testGetApkContentsSignersShowsCurrent"");    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[2]:method_text:[ce(), DEVICE_TESTS_PKG, DEVICE_TESTS_CLASS,                ""testHasSigningCertificate"");    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[2]:method_text:[DEVICE_TESTS_PKG, DEVICE_TESTS_CLASS,                ""testHasSigningCertificateSha256"");    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[2]:method_text:[ DEVICE_TESTS_PKG, DEVICE_TESTS_CLASS,                ""testHasSigningCertificateByUid"");    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[2]:method_text:[E_TESTS_PKG, DEVICE_TESTS_CLASS,                ""testHasSigningCertificateByUidSha256"");    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[2]:method_text:[e.        assertInstallFails(""v3-rsa-pkcs1-sha256-2048-2-with-por_1_2_2-full-caps.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[g v3 signature scheme        assertInstallFails(""v3-rsa-pkcs1-sha256-2048-1_and_2.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[/ versions        assertInstallSucceeds(""v3-rsa-pkcs1-sha256-2048-1_P_and_2_Qplus.apk"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[g-enabled false --v4-signing-enabled        assertInstallV4Succeeds(""v4-digest-v2.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[ng-enabled true --v4-signing-enabled        assertInstallV4Succeeds(""v4-digest-v3.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[-enabled true --v4-signing-enabled        assertInstallV4Succeeds(""v4-digest-v2v3.apk"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[hEC.apk"");        assertInstallV4SucceedsAndUninstall(""v4-digest-v2-Sha512withRSA.apk"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:["");        assertInstallV4SucceedsAndUninstall(""v4-digest-v2-Sha256withRSA-Verity.apk"");    }   ])', 1), ('([7:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[7]:method_text:[hEC.apk"");        assertInstallV4SucceedsAndUninstall(""v4-digest-v3-Sha512withRSA.apk"");    }   ])', 1), ('([5:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[5]:method_text:["");        assertInstallV4SucceedsAndUninstall(""v4-digest-v3-Sha256withRSA-Verity.apk"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[        assertInstallV4FailsWithError(""v4-digest-v2-badv2digest.apk"", ""did not verify"");    }   ])', 1), ('([5:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[5]:method_text:[        assertInstallV4FailsWithError(""v4-digest-v3-badv3digest.apk"", ""did not verify"");    }   ])', 1), ('([5:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[5]:method_text:[     assertInstallV4FailsWithError(""v4-digest-v2v3-badv2v3digest.apk"", ""did not verify"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[ 128 bytes.        assertInstallV4Succeeds(""v4-digest-v3-128bytes-additional-data.apk"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[ytes-additional-data.apk"",                ""additionalData has to be at most 128 bytes"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[V4FailsWithError(""v4-digest-v3-10mbytes-additional-data.apk"",                ""Failure"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[lV4FailsWithError(""v4-digest-v3-wrong-block-size.apk"",                ""did not verify"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[-merkle-tree-different-block-size.apk"",                ""Unsupported log2BlockSize: 11"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[        assertInstallV4FailsWithError(""v4-digest-v3-wrong-raw-root-hash.apk"", ""Failure"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[llV4FailsWithError(""v4-digest-v3-wrong-sig-bytes.apk"",                ""did not verify"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[tallV4FailsWithError(""v4-digest-v3-wrong-sig-bytes-size.apk"",                ""Failure"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[ertInstallV4FailsWithError(""v4-digest-v3-no-merkle-tree.apk"",                ""Failure"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[lsWithError(""v4-digest-v3-merkle-tree-1mb-trailing-data.apk"",                ""Failure"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[WithError(""v4-digest-v3-merkle-tree-bit-flipped.apk"",                ""Failed to parse"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[ith the same key.        assertInstallSucceeds(""v4-inc-to-v3-noninc-ec-p256-appv2.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[p384-appv2.apk"",                ""signatures do not match previously installed version"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[.        assertInstallSucceeds(""v4-inc-to-v3-noninc-ec-p384-rotated-ec-p256-appv2.apk"");    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[3]:method_text:[p256-appv2.apk"",                ""signatures do not match previously installed version"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[v3]:[1]:method_text:[mpanionPackages();        uninstallDeviceTestPackage();        uninstallServicePackages();    }}])', 1)]"	"https://source.android.com"
"4_application-packaging"	"4"	"C-0-1"	"4/C-0-1"	"04000000.670001"	"""C-0-1] MUST be capable of installing and running Android “.apk” files as generated by the “aapt” tool included in the [official Android SDK]( http://developer.android.com/tools/help/index.html).    *   As the above requirement may be challenging, device implementations are    RECOMMENDED to use the AOSP reference implementation's package management    system.  Device implementations:  """	""	""	"aapt"	"aapt install apk run"	""	""	""	"[('android.appsecurity.cts.EphemeralTest', 61), ('com.android.cts.rollback.host.RollbackManagerHostTest', 33), ('android.appsecurity.cts.ReadableSettingsFieldsTest', 22), ('android.appsecurity.cts.InstantCookieHostTest', 18), ('dot.junit.opcodes.rem_int.Test_rem_int', 13), ('dot.junit.opcodes.if_ne.Test_if_ne', 11), ('dot.junit.opcodes.shr_int_2addr.Test_shr_int_2addr', 9), ('dot.junit.opcodes.if_le.Test_if_le', 8), ('android.jni.cts.JniStaticTest', 6), ('android.app.cts.ActivityManagerApi29Test', 5), ('android.widget.cts.FrameLayoutTest', 4), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest', 4), ('android.app.cts.AlertDialog_BuilderCursorTest', 4), ('android.cts.backup.BackupTransportHostSideTest', 4), ('android.telecom.cts.CallRedirectionServiceTest', 3), ('android.signature.cts.api.SignatureMultiLibsTest', 3), ('test.java.com.android.eventlib.premade.EventLibActivityTest', 3), ('android.location.cts.privileged.GnssMeasurementRegistrationTest', 2), ('android.server.wm.lifecycle.ActivityLifecycleLegacySplitScreenTests', 2), ('android.cts.backup.restoresessionapp.RestoreSessionTest', 2), ('android.view.animation.cts.AnimationUtilsTest', 2), ('android.autofillservice.cts.commontests.FillEventHistoryCommonTestCase', 2), ('java.android.signature.cts.api.HiddenApiTest', 2), ('com.android.cts.deviceandprofileowner.EnrollmentSpecificIdTest', 2), ('android.cts.backup.profileserialnumberapp.ProfileSerialNumberTest', 2), ('com.android.cts.isolatedsplitapp.SplitAppTest', 2), ('android.print.cts.PrintAttributesTest', 1), ('android.hardware.camera2.cts.FastBasicsTest', 1), ('android.telephony.ims.cts.ImsReasonInfoTest', 1), ('android.autofillservice.cts.unittests.BatchUpdatesTest', 1), ('com.android.preconditions.cts.PreconditionsTest', 1), ('android.renderscript.cts.generated.TestNativeAtanpi', 1), ('com.android.cts.deviceowner.WifiNetworkConfigurationWithoutFineLocationPermissionTest', 1), ('com.android.cts.extractnativelibs.app.extract.ExtractNativeLibsTrueDeviceTest', 1), ('android.app.usage.cts.FragmentTest', 1), ('android.renderscript.cts.ImageProcessingTest', 1), ('android.adb.cts.AdbHostTest', 1), ('android.transition.cts.ArcMotionTest', 1), ('android.app.cts.PictureInPictureParamsBuilderTest', 1), ('android.voiceinteraction.cts.HotwordRejectedResultTest', 1), ('android.cts.environment.EnvironmentTest', 1), ('android.text.method.cts.MetaKeyKeyListenerTest', 1), ('android.media.cts.MediaScannerConnectionTest', 1), ('android.security.cts.EncryptionTest', 1), ('android.app.notification.legacy29.cts.NotificationManager29Test', 1), ('android.renderscript.cts.generated.TestMad', 1), ('android.provider.cts.contacts.ContactsContract_ProviderStatus', 1), ('android.renderscript.cts.generated.TestNativeLog10', 1), ('android.app.notification.legacy28.cts.NotificationManager28Test', 1), ('android.view.cts.KeyEventInterceptTest', 1), ('android.view.cts.receivecontent.ContentInfoTest', 1), ('android.graphics.pdf.cts.PdfRendererTransformTest', 1), ('android.media.cts.HapticGeneratorTest', 1)]"	"[('destroy', 96), ('toString', 72), ('setUp', 36), ('StringBuilder', 24), ('tearDown', 18), ('getDevice', 15), ('length', 9), ('ArgumentsFloatFloat', 8), ('ArgumentsHalfHalf', 8), ('getInstrumentation', 7), ('clearAppCookieData', 6), ('getPackageName', 6), ('Builder', 5), ('getContext', 5), ('build', 4), ('setup', 4), ('countDown', 4), ('getTargetContext', 4), ('ArgumentsFloatFloatFloatFloat', 4), ('ArgumentsHalfHalfHalfHalf', 4), ('getSimpleName', 3), ('getName', 3), ('getActivity', 3), ('Intent', 3), ('getContentResolver', 3), ('uninstall_userInstalledApp_shouldBeUserInitiated', 3), ('uninstall_pruneInstantApp_shouldNotBeUserInitiated', 3), ('InstallMultiple', 3), ('run', 3), ('reset', 2), ('getPackage', 2), ('supportsSplitScreenMultiWindow', 2), ('getUiAutomation', 2), ('resetLogs', 2), ('whereActivity', 2), ('activityClass', 2), ('poll', 2), ('getMock', 1), ('getSession', 1), ('getPrinters', 1), ('getMainLooper', 1), ('setupControlBinder', 1), ('rememberPreviousCallRedirectionApp', 1), ('checkNativeAtanpiFloatFloat', 1), ('checkNativeAtanpiFloat2Float2', 1), ('checkNativeAtanpiFloat3Float3', 1), ('checkNativeAtanpiFloat4Float4', 1), ('checkNativeAtanpiHalfHalf', 1), ('checkNativeAtanpiHalf2Half2', 1), ('checkNativeAtanpiHalf3Half3', 1), ('checkNativeAtanpiHalf4Half4', 1), ('RestoreObserver', 1), ('size', 1), ('create', 1), ('flush', 1), ('close', 1), ('deleteOnExit', 1), ('pauseEventLibActivity_logsActivityPausedEvent', 1), ('pauseEventLibActivity_withGeneratedActivityClass_logsActivityPausedEventWithCorrectClassName', 1), ('className', 1), ('init', 1), ('loadFilters', 1), ('getUserId', 1), ('checkMadFloatFloatFloatFloat', 1), ('checkMadFloat2Float2Float2Float2', 1), ('checkMadFloat3Float3Float3Float3', 1), ('checkMadFloat4Float4Float4Float4', 1), ('checkMadHalfHalfHalfHalf', 1), ('checkMadHalf2Half2Half2Half2', 1), ('checkMadHalf3Half3Half3Half3', 1), ('checkMadHalf4Half4Half4Half4', 1), ('cleanup', 1), ('checkNativeLog10FloatFloat', 1), ('checkNativeLog10Float2Float2', 1), ('checkNativeLog10Float3Float3', 1), ('checkNativeLog10Float4Float4', 1), ('checkNativeLog10HalfHalf', 1), ('checkNativeLog10Half2Half2', 1), ('checkNativeLog10Half3Half3', 1), ('checkNativeLog10Half4Half4', 1), ('getPackageManager', 1), ('Configuration', 1), ('launchActivity', 1), ('ContentValues', 1), ('requery', 1), ('getParameters', 1), ('Matrix', 1)]"	"[('CtsAppSecurityHostTestCases', 101), ('CtsAppTestCases', 9), ('CtsJniTestCases', 6), ('CtsRenderscriptTestCases', 4), ('CtsWidgetTestCases', 4), ('CtsShortcutManagerTestCases', 4), ('CtsBackupHostTestCases', 4), ('CtsAutoFillServiceTestCases', 3), ('CtsTelecomTestCases', 3), ('CtsViewTestCases', 3), ('CtsSharedLibsApiSignatureTestCases', 3), ('CtsLocationPrivilegedTestCases', 2), ('CtsWindowManagerDeviceTestCases', 2), ('CtsMediaTestCases', 2), ('CtsPrintTestCases', 1), ('CtsCameraTestCases', 1), ('CtsTelephonyTestCases', 1), ('CtsUsageStatsTestCases', 1), ('CtsAdbHostTestCases', 1), ('CtsTransitionTestCases', 1), ('CtsAndroidAppTestCases', 1), ('CtsVoiceInteractionTestCases', 1), ('CtsTextTestCases', 1), ('CtsSecurityTestCases', 1), ('CtsLegacyNotification29TestCases', 1), ('CtsContactsProviderTestCases', 1), ('CtsLegacyNotification28TestCases', 1), ('CtsViewReceiveContentTestCases', 1), ('CtsPdfTestCases', 1)]"	""	""	""	""	"android.appsecurity.cts.ReadableSettingsFieldsTest"	"getDevice"	"CtsAppSecurityHostTestCases"	""	""	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/EphemeralTest.java', 61), ('/home/gpoor/cts-12-source/cts/hostsidetests/rollback/src/com/android/cts/rollback/host/RollbackManagerHostTest.java', 33), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ReadableSettingsFieldsTest.java', 22), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/InstantCookieHostTest.java', 18), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/rem_int/Test_rem_int.java', 13), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/if_ne/Test_if_ne.java', 11), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/shr_int_2addr/Test_shr_int_2addr.java', 9), ('/home/gpoor/cts-12-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/if_le/Test_if_le.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/jni/src/android/jni/cts/JniStaticTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityManagerApi29Test.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/FrameLayoutTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderCursorTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/BackupTransportHostSideTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/CallRedirectionServiceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/shared-libs-api/src/android/signature/cts/api/SignatureMultiLibsTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/eventlib/src/test/java/com/android/eventlib/premade/EventLibActivityTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssMeasurementRegistrationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleLegacySplitScreenTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/RestoreSessionTest/src/android/cts/backup/restoresessionapp/RestoreSessionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/animation/cts/AnimationUtilsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/src/java/android/signature/cts/api/HiddenApiTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/ProfileSerialNumberApp/src/android/cts/backup/profileserialnumberapp/ProfileSerialNumberTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/src/com/android/cts/isolatedsplitapp/SplitAppTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrintAttributesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/FastBasicsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsReasonInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/BatchUpdatesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-preconditions/src/com/android/preconditions/cts/PreconditionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeAtanpi.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/extractnativelibs/apps/app_extract/src/com/android/cts/extractnativelibs/app/extract/ExtractNativeLibsTrueDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/FragmentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/ImageProcessingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/adb/src/android/adb/cts/AdbHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ArcMotionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app/src/android/app/cts/PictureInPictureParamsBuilderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordRejectedResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/os/test-apps/EnvironmentTestApp/src/android/cts/environment/EnvironmentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/MetaKeyKeyListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaScannerConnectionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/EncryptionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy29/src/android/app/notification/legacy29/cts/NotificationManager29Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestMad.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_ProviderStatus.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeLog10.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy28/src/android/app/notification/legacy28/cts/NotificationManager28Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyEventInterceptTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/receivecontent/src/android/view/cts/receivecontent/ContentInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/pdf/src/android/graphics/pdf/cts/PdfRendererTransformTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/HapticGeneratorTest.java', 1)]"	"[('(4,run,/android/print/cts/PrintAttributesTest.java)', 1), ('(6,run,/android/hardware/camera2/cts/FastBasicsTest.java)', 1), ('(4,run,/android/telephony/ims/cts/ImsReasonInfoTest.java)', 1), ('(4,run,/android/autofillservice/cts/unittests/BatchUpdatesTest.java)', 1), ('(49,run,/com/android/cts/rollback/host/RollbackManagerHostTest.java)', 1), ('(35,install,/com/android/cts/rollback/host/RollbackManagerHostTest.java)', 1), ('(25,apk,/com/android/cts/rollback/host/RollbackManagerHostTest.java)', 1), ('(2,run,/android/location/cts/privileged/GnssMeasurementRegistrationTest.java)', 1), ('(2,run,/com/android/preconditions/cts/PreconditionsTest.java)', 1), ('(11,run,/dot/junit/opcodes/if_ne/Test_if_ne.java)', 1), ('(5,run,/android/telecom/cts/CallRedirectionServiceTest.java)', 1), ('(1,apk,/android/telecom/cts/CallRedirectionServiceTest.java)', 1), ('(17,run,/android/renderscript/cts/generated/TestNativeAtanpi.java)', 1), ('(1,run,/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java)', 1), ('(10,run,/android/widget/cts/FrameLayoutTest.java)', 1), ('(4,run,/com/android/cts/extractnativelibs/app/extract/ExtractNativeLibsTrueDeviceTest.java)', 1), ('(15,run,/android/app/usage/cts/FragmentTest.java)', 1), ('(14,run,/android/appsecurity/cts/InstantCookieHostTest.java)', 1), ('(25,install,/android/appsecurity/cts/InstantCookieHostTest.java)', 1), ('(15,apk,/android/appsecurity/cts/InstantCookieHostTest.java)', 1), ('(1,run,/android/server/wm/lifecycle/ActivityLifecycleLegacySplitScreenTests.java)', 1), ('(1,install,/android/server/wm/lifecycle/ActivityLifecycleLegacySplitScreenTests.java)', 1), ('(12,run,/android/cts/backup/restoresessionapp/RestoreSessionTest.java)', 1), ('(1,run,/android/renderscript/cts/ImageProcessingTest.java)', 1), ('(1,install,/android/adb/cts/AdbHostTest.java)', 1), ('(6,run,/android/jni/cts/JniStaticTest.java)', 1), ('(4,run,/android/view/animation/cts/AnimationUtilsTest.java)', 1), ('(2,apk,/android/view/animation/cts/AnimationUtilsTest.java)', 1), ('(4,run,/android/transition/cts/ArcMotionTest.java)', 1), ('(4,run,/android/app/cts/PictureInPictureParamsBuilderTest.java)', 1), ('(2,run,/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java)', 1), ('(13,run,/dot/junit/opcodes/rem_int/Test_rem_int.java)', 1), ('(5,run,/android/signature/cts/api/SignatureMultiLibsTest.java)', 1), ('(1,apk,/android/signature/cts/api/SignatureMultiLibsTest.java)', 1), ('(6,run,/test/java/com/android/eventlib/premade/EventLibActivityTest.java)', 1), ('(4,run,/android/voiceinteraction/cts/HotwordRejectedResultTest.java)', 1), ('(4,run,/android/cts/environment/EnvironmentTest.java)', 1), ('(2,run,/java/android/signature/cts/api/HiddenApiTest.java)', 1), ('(4,run,/android/text/method/cts/MetaKeyKeyListenerTest.java)', 1), ('(3,run,/android/media/cts/MediaScannerConnectionTest.java)', 1), ('(8,run,/dot/junit/opcodes/if_le/Test_if_le.java)', 1), ('(9,run,/dot/junit/opcodes/shr_int_2addr/Test_shr_int_2addr.java)', 1), ('(6,run,/android/security/cts/EncryptionTest.java)', 1), ('(6,run,/android/app/notification/legacy29/cts/NotificationManager29Test.java)', 1), ('(17,run,/android/renderscript/cts/generated/TestMad.java)', 1), ('(1,install,/android/provider/cts/contacts/ContactsContract_ProviderStatus.java)', 1), ('(4,run,/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java)', 1), ('(59,run,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(63,install,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(34,apk,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(5,run,/android/cts/backup/profileserialnumberapp/ProfileSerialNumberTest.java)', 1), ('(17,run,/android/renderscript/cts/generated/TestNativeLog10.java)', 1), ('(39,run,/android/app/cts/ActivityManagerApi29Test.java)', 1), ('(4,run,/android/app/notification/legacy28/cts/NotificationManager28Test.java)', 1), ('(5,run,/android/view/cts/KeyEventInterceptTest.java)', 1), ('(5,run,/android/view/cts/receivecontent/ContentInfoTest.java)', 1), ('(9,run,/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java)', 1), ('(7,run,/com/android/cts/isolatedsplitapp/SplitAppTest.java)', 1), ('(5,run,/android/app/cts/AlertDialog_BuilderCursorTest.java)', 1), ('(1,run,/android/cts/backup/BackupTransportHostSideTest.java)', 1), ('(2,install,/android/cts/backup/BackupTransportHostSideTest.java)', 1), ('(3,apk,/android/cts/backup/BackupTransportHostSideTest.java)', 1), ('(6,run,/android/graphics/pdf/cts/PdfRendererTransformTest.java)', 1), ('(2,run,/android/media/cts/HapticGeneratorTest.java)', 1), ('(23,run,/android/appsecurity/cts/ReadableSettingsFieldsTest.java)', 1), ('(6,install,/android/appsecurity/cts/ReadableSettingsFieldsTest.java)', 1), ('(14,apk,/android/appsecurity/cts/ReadableSettingsFieldsTest.java)', 1)]"	"[('([1:/android/app/cts/AlertDialog_BuilderCursorTest.java]:[run]:[1]:method_text:[tener, times(1)).onClick(mDialog, 0);        verifyNoMoreInteractions(mOnClickListener);    }   ])', 2), ('([4:/android/print/cts/PrintAttributesTest.java]:[run]:[4]:method_text:[ibutes to the first selection.     *     * @throws Exception If anything is unexpected     */   ])', 1), ('([6:/android/hardware/camera2/cts/FastBasicsTest.java]:[run]:[6]:method_text:[IMEOUT_MS = 8000;    private static final int FRAMES_TO_WAIT_FOR_CAPTURE = 100;    @Presubmit   ])', 1), ('([4:/android/telephony/ims/cts/ImsReasonInfoTest.java]:[run]:[4]:method_text:[.CODE_LOCAL_IMS_SERVICE_DOWN;    int mExtraCode = ImsReasonInfo.EXTRA_CODE_CALL_RETRY_NORMAL;   ])', 1), ('([4:/android/autofillservice/cts/unittests/BatchUpdatesTest.java]:[run]:[4]:method_text:[tchUpdatesTest {    private final BatchUpdates.Builder mBuilder = new BatchUpdates.Builder();   ])', 1), ('([13:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[run]:[13]:method_text:[ShimApexIfNecessary();    }    /**     * Tests staged rollbacks involving only apks.     */   ])', 1), ('([3:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[run]:[3]:method_text:[e3_Confirm"");    }    /**     * Tests multiple staged rollbacks involving only apks.     */   ])', 1), ('([3:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[run]:[3]:method_text:[rm"");    }    /**     * Tests multiple staged partial rollbacks involving only apks.     */   ])', 1), ('([3:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[run]:[3]:method_text:[back_Phase3_Confirm"");    }    /**     * Tests staged rollbacks involving only apex.     */   ])', 1), ('([4:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[run]:[4]:method_text:[m"");    }    /**     * Tests staged rollbacks to system version involving only apex.     */   ])', 1), ('([3:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[run]:[3]:method_text:[k_Phase3_Confirm"");    }    /**     * Tests staged rollbacks involving apex and apk.     */   ])', 1), ('([4:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[run]:[4]:method_text:[;    }    /**     * Tests that apex update expires existing rollbacks for that apex.     */   ])', 1), ('([3:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[run]:[3]:method_text:[onfirm"");    }    /**     * Tests staged rollbacks involving apex with rotated keys.     */   ])', 1), ('([3:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[run]:[3]:method_text:[firm"");    }    /**     * Tests installer B can\'t rollback a package installed by A.     */   ])', 1), ('([2:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[run]:[2]:method_text:[    /**     * Tests that existing staged sessions are failed when rollback is committed     */   ])', 1), ('([3:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[run]:[3]:method_text:[    * Tests that simultaneous rollbacks both succeed - neither causes the other to fail.     */   ])', 1), ('([3:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[run]:[3]:method_text:["");    }    /**     * Tests that rollbacks are invalidated upon fingerprint changes.     */   ])', 1), ('([2:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[run]:[2]:method_text:[         getDevice().executeShellCommand(""setprop persist.pm.mock-upgrade false"");        }    }}])', 1), ('([14:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[install]:[14]:method_text:[ShimApexIfNecessary();    }    /**     * Tests staged rollbacks involving only apks.     */   ])', 1), ('([1:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[install]:[1]:method_text:[e3_Confirm"");    }    /**     * Tests multiple staged rollbacks involving only apks.     */   ])', 1), ('([1:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[install]:[1]:method_text:[rm"");    }    /**     * Tests multiple staged partial rollbacks involving only apks.     */   ])', 1), ('([1:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[install]:[1]:method_text:[back_Phase3_Confirm"");    }    /**     * Tests staged rollbacks involving only apex.     */   ])', 1), ('([2:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[install]:[2]:method_text:[m"");    }    /**     * Tests staged rollbacks to system version involving only apex.     */   ])', 1), ('([1:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[install]:[1]:method_text:[k_Phase3_Confirm"");    }    /**     * Tests staged rollbacks involving apex and apk.     */   ])', 1), ('([2:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[install]:[2]:method_text:[;    }    /**     * Tests that apex update expires existing rollbacks for that apex.     */   ])', 1), ('([2:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[install]:[2]:method_text:[onfirm"");    }    /**     * Tests staged rollbacks involving apex with rotated keys.     */   ])', 1), ('([3:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[install]:[3]:method_text:[firm"");    }    /**     * Tests installer B can\'t rollback a package installed by A.     */   ])', 1), ('([5:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[install]:[5]:method_text:[    /**     * Tests that existing staged sessions are failed when rollback is committed     */   ])', 1), ('([1:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[install]:[1]:method_text:[    * Tests that simultaneous rollbacks both succeed - neither causes the other to fail.     */   ])', 1), ('([1:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[install]:[1]:method_text:["");    }    /**     * Tests that rollbacks are invalidated upon fingerprint changes.     */   ])', 1), ('([1:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[install]:[1]:method_text:[         getDevice().executeShellCommand(""setprop persist.pm.mock-upgrade false"");        }    }}])', 1), ('([2:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[apk]:[2]:method_text:[ShimApexIfNecessary();    }    /**     * Tests staged rollbacks involving only apks.     */   ])', 1), ('([5:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[apk]:[5]:method_text:[e3_Confirm"");    }    /**     * Tests multiple staged rollbacks involving only apks.     */   ])', 1), ('([5:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[apk]:[5]:method_text:[rm"");    }    /**     * Tests multiple staged partial rollbacks involving only apks.     */   ])', 1), ('([4:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[apk]:[4]:method_text:[back_Phase3_Confirm"");    }    /**     * Tests staged rollbacks involving only apex.     */   ])', 1), ('([1:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[apk]:[1]:method_text:[k_Phase3_Confirm"");    }    /**     * Tests staged rollbacks involving apex and apk.     */   ])', 1), ('([5:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[apk]:[5]:method_text:[;    }    /**     * Tests that apex update expires existing rollbacks for that apex.     */   ])', 1), ('([3:/com/android/cts/rollback/host/RollbackManagerHostTest.java]:[apk]:[3]:method_text:[    /**     * Tests that existing staged sessions are failed when rollback is committed     */   ])', 1), ('([1:/android/location/cts/privileged/GnssMeasurementRegistrationTest.java]:[run]:[1]:method_text:[   /**     * Test GPS measurements registration with correlation vector outputs enabled     */   ])', 1), ('([1:/android/location/cts/privileged/GnssMeasurementRegistrationTest.java]:[run]:[1]:method_text:[ents.  Retry outdoors?"",                !events.isEmpty());        softAssert.assertAll();    }}])', 1), ('([2:/com/android/preconditions/cts/PreconditionsTest.java]:[run]:[2]:method_text:[e in order to run CTS"",                ExternalStorageHelper.isExternalStorageWritable());    }}])', 1), ('([1:/dot/junit/opcodes/if_ne/Test_if_ne.java]:[run]:[1]:method_text:[tEquals(1, t.run(5, 6));    }    /**     * @title Arguments = 0x0f0e0d0c, 0x0f0e0d0c     */   ])', 1), ('([1:/dot/junit/opcodes/if_ne/Test_if_ne.java]:[run]:[1]:method_text:[als(1234, t.run(0x0f0e0d0c, 0x0f0e0d0c));    }    /**     * @title Arguments = 5, -5     */   ])', 1), ('([1:/dot/junit/opcodes/if_ne/Test_if_ne.java]:[run]:[1]:method_text:[sertEquals(1, t.run(5, -5));    }    /**     * @title Arguments = 0x01001234, 0x1234     */   ])', 1), ('([1:/dot/junit/opcodes/if_ne/Test_if_ne.java]:[run]:[1]:method_text:[quals(1, t.run(0x01001234, 0x1234));    }        /**     * @title compare references     */   ])', 1), ('([1:/dot/junit/opcodes/if_ne/Test_if_ne.java]:[run]:[1]:method_text:["";        assertEquals(1, t.run(a, b));    }    /**     * @title compare references     */   ])', 1), ('([1:/dot/junit/opcodes/if_ne/Test_if_ne.java]:[run]:[1]:method_text:[un(a, a));    }    /**     * @title Arguments = Integer.MAX_VALUE, Integer.MAX_VALUE     */   ])', 1), ('([1:/dot/junit/opcodes/if_ne/Test_if_ne.java]:[run]:[1]:method_text:[X_VALUE));    }    /**     * @title Arguments = Integer.MIN_VALUE, Integer.MIN_VALUE     */   ])', 1), ('([1:/dot/junit/opcodes/if_ne/Test_if_ne.java]:[run]:[1]:method_text:[eger.MIN_VALUE, Integer.MIN_VALUE));    }    /**     * @title Arguments = 0, 1234567     */   ])', 1), ('([1:/dot/junit/opcodes/if_ne/Test_if_ne.java]:[run]:[1]:method_text:[       assertEquals(1, t.run(0, 1234567));    }    /**     * @title Arguments = 0, 0     */   ])', 1), ('([1:/dot/junit/opcodes/if_ne/Test_if_ne.java]:[run]:[1]:method_text:[     assertEquals(1234, t.run(0, 0));    }        /**     * @title Compare with null     */   ])', 1), ('([1:/dot/junit/opcodes/if_ne/Test_if_ne.java]:[run]:[1]:method_text:[(null, a));    }        /**     * @constraint A23      * @title number of registers     */   ])', 1), ('([1:/android/telecom/cts/CallRedirectionServiceTest.java]:[run]:[1]:method_text:[         addRoleHolder(ROLE_CALL_REDIRECTION, mPreviousCallRedirectionPackage);        }    }   ])', 1), ('([4:/android/telecom/cts/CallRedirectionServiceTest.java]:[run]:[4]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);        assertTrue(result);    }}])', 1), ('([1:/android/telecom/cts/CallRedirectionServiceTest.java]:[apk]:[1]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);        assertTrue(result);    }}])', 1), ('([17:/android/renderscript/cts/generated/TestNativeAtanpi.java]:[run]:[17]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java]:[run]:[1]:method_text:[WifiEnabled();            Log.d(TAG, ""Done: "" + mWifiManager.isWifiEnabled());        }    }   ])', 1), ('([4:/android/widget/cts/FrameLayoutTest.java]:[run]:[4]:method_text:[ctivity();        mFrameLayout = (FrameLayout) mActivity.findViewById(R.id.framelayout);    }   ])', 1), ('([2:/android/widget/cts/FrameLayoutTest.java]:[run]:[2]:method_text:[h(), rect2.right - rect2.left);        assertCenterAligned(mFrameLayout, newForeground);    }   ])', 1), ('([2:/android/widget/cts/FrameLayoutTest.java]:[run]:[2]:method_text:[oreground.getBounds());        assertTrue(mFrameLayout.gatherTransparentRegion(region));    }   ])', 1), ('([2:/android/widget/cts/FrameLayoutTest.java]:[run]:[2]:method_text:[ht());        assertEquals(textView.getMeasuredWidth(), frameLayout.getMeasuredWidth());    }   ])', 1), ('([4:/com/android/cts/extractnativelibs/app/extract/ExtractNativeLibsTrueDeviceTest.java]:[run]:[4]:method_text:[t();    /** Test that the native lib dir exists and has an native lib file extracted in it. */   ])', 1), ('([15:/android/app/usage/cts/FragmentTest.java]:[run]:[15]:method_text:[ate) {            return inflater.inflate(R.layout.fragment_b, container, false);        }    }}])', 1), ('([5:/android/appsecurity/cts/InstantCookieHostTest.java]:[run]:[5]:method_text:[ception {        uninstallPackage(INSTANT_COOKIE_APP_PKG);        clearAppCookieData();    }   ])', 1), ('([1:/android/appsecurity/cts/InstantCookieHostTest.java]:[run]:[1]:method_text:[P_PKG, ""test.instant.cookie.CookieTest"",                ""testCookieUpdateAndRetrieval"");    }   ])', 1), ('([2:/android/appsecurity/cts/InstantCookieHostTest.java]:[run]:[2]:method_text:[instant.cookie.CookieTest"",                ""testCookiePersistedAcrossInstantInstalls2"");    }   ])', 1), ('([2:/android/appsecurity/cts/InstantCookieHostTest.java]:[run]:[2]:method_text:[st.instant.cookie.CookieTest"",                ""testCookiePersistedUpgradeFromInstant2"");    }   ])', 1), ('([2:/android/appsecurity/cts/InstantCookieHostTest.java]:[run]:[2]:method_text:[est.instant.cookie.CookieTest"",                ""testCookieResetOnNonInstantReinstall2"");    }   ])', 1), ('([2:/android/appsecurity/cts/InstantCookieHostTest.java]:[run]:[2]:method_text:[s Exception {        getDevice().executeShellCommand(""pm clear "" + INSTANT_COOKIE_APP_PKG);    }}])', 1), ('([3:/android/appsecurity/cts/InstantCookieHostTest.java]:[install]:[3]:method_text:[ception {        uninstallPackage(INSTANT_COOKIE_APP_PKG);        clearAppCookieData();    }   ])', 1), ('([1:/android/appsecurity/cts/InstantCookieHostTest.java]:[install]:[1]:method_text:[P_PKG, ""test.instant.cookie.CookieTest"",                ""testCookieUpdateAndRetrieval"");    }   ])', 1), ('([6:/android/appsecurity/cts/InstantCookieHostTest.java]:[install]:[6]:method_text:[instant.cookie.CookieTest"",                ""testCookiePersistedAcrossInstantInstalls2"");    }   ])', 1), ('([2:/android/appsecurity/cts/InstantCookieHostTest.java]:[install]:[2]:method_text:[st.instant.cookie.CookieTest"",                ""testCookiePersistedUpgradeFromInstant2"");    }   ])', 1), ('([6:/android/appsecurity/cts/InstantCookieHostTest.java]:[install]:[6]:method_text:[est.instant.cookie.CookieTest"",                ""testCookieResetOnNonInstantReinstall2"");    }   ])', 1), ('([7:/android/appsecurity/cts/InstantCookieHostTest.java]:[install]:[7]:method_text:[s Exception {        getDevice().executeShellCommand(""pm clear "" + INSTANT_COOKIE_APP_PKG);    }}])', 1), ('([4:/android/appsecurity/cts/InstantCookieHostTest.java]:[apk]:[4]:method_text:[ception {        uninstallPackage(INSTANT_COOKIE_APP_PKG);        clearAppCookieData();    }   ])', 1), ('([1:/android/appsecurity/cts/InstantCookieHostTest.java]:[apk]:[1]:method_text:[P_PKG, ""test.instant.cookie.CookieTest"",                ""testCookieUpdateAndRetrieval"");    }   ])', 1), ('([2:/android/appsecurity/cts/InstantCookieHostTest.java]:[apk]:[2]:method_text:[instant.cookie.CookieTest"",                ""testCookiePersistedAcrossInstantInstalls2"");    }   ])', 1), ('([2:/android/appsecurity/cts/InstantCookieHostTest.java]:[apk]:[2]:method_text:[st.instant.cookie.CookieTest"",                ""testCookiePersistedUpgradeFromInstant2"");    }   ])', 1), ('([2:/android/appsecurity/cts/InstantCookieHostTest.java]:[apk]:[2]:method_text:[est.instant.cookie.CookieTest"",                ""testCookieResetOnNonInstantReinstall2"");    }   ])', 1), ('([4:/android/appsecurity/cts/InstantCookieHostTest.java]:[apk]:[4]:method_text:[s Exception {        getDevice().executeShellCommand(""pm clear "" + INSTANT_COOKIE_APP_PKG);    }}])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleLegacySplitScreenTests.java]:[run]:[1]:method_text:[ Exception {        super.setUp();        assumeTrue(supportsSplitScreenMultiWindow());    }   ])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleLegacySplitScreenTests.java]:[install]:[1]:method_text:[ Exception {        super.setUp();        assumeTrue(supportsSplitScreenMultiWindow());    }   ])', 1), ('([4:/android/cts/backup/restoresessionapp/RestoreSessionTest.java]:[run]:[4]:method_text:[ are restored. Use     * {@link RestoreSession#restorePackage(String, RestoreObserver)}     */   ])', 1), ('([8:/android/cts/backup/restoresessionapp/RestoreSessionTest.java]:[run]:[8]:method_text:[eRunner {        void runRestore(BackupManagerMonitor monitor) throws InterruptedException;    }}])', 1), ('([1:/android/renderscript/cts/ImageProcessingTest.java]:[run]:[1]:method_text:[ throws Exception {        a1.destroy();        a2.destroy();        super.tearDown();    }   ])', 1), ('([1:/android/adb/cts/AdbHostTest.java]:[install]:[1]:method_text:[c7c6d5edcbe04454eb9a40f947ac0a3045f64eb    // for the patch that enabled this on Pixel devices.   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[run]:[1]:method_text:[r.runAccessibilityTest();        if (error != null) {            fail(error);        }    }   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[run]:[1]:method_text:[nClassLoaderNamespaces();        if (error != null) {            fail(error);        }    }   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[run]:[1]:method_text:[    }    /**     * Test that accessing classes true JNI works as expected. b/19382130     */   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[run]:[1]:method_text:[Helper.run());    }    /**     * Test a simple no-op and void-returning method call.     */   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[run]:[1]:method_text:[    *     * This test ensures that dlopen fail with a target version SDK of Q or above.     */   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[run]:[1]:method_text:[e system, ""                + ""but dlopen("" + f + "", RTLD_NOW) succeeds."", error);        }    }}])', 1), ('([4:/android/view/animation/cts/AnimationUtilsTest.java]:[run]:[4]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([2:/android/view/animation/cts/AnimationUtilsTest.java]:[apk]:[2]:method_text:[getAnimation().getDuration());        assertEquals(0.1f, controller.getDelay(), 0.001f);    }   ])', 1), ('([4:/android/transition/cts/ArcMotionTest.java]:[run]:[4]:method_text:[h;@SmallTest@RunWith(AndroidJUnit4.class)public class ArcMotionTest extends PathMotionTest {   ])', 1), ('([4:/android/app/cts/PictureInPictureParamsBuilderTest.java]:[run]:[4]:method_text:[. */@SmallTest@RunWith(AndroidJUnit4.class)public class PictureInPictureParamsBuilderTest {   ])', 1), ('([1:/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java]:[run]:[1]:method_text:[vents.get(3), NULL_DATASET_ID,                    ""clientStateKey"", ""Value2"");        }    }   ])', 1), ('([1:/android/autofillservice/cts/commontests/FillEventHistoryCommonTestCase.java]:[run]:[1]:method_text:[own(finalSelection.getEvents().get(0), NULL_DATASET_ID, ""activity"",                ""A"");    }   ])', 1), ('([1:/dot/junit/opcodes/rem_int/Test_rem_int.java]:[run]:[1]:method_text:[    assertEquals(0, t.run(8, 4));    }    /**     * @title Arguments = 1073741823, 4     */   ])', 1), ('([1:/dot/junit/opcodes/rem_int/Test_rem_int.java]:[run]:[1]:method_text:[        assertEquals(3, t.run(1073741823, 4));    }    /**     * @title Dividend = 0     */   ])', 1), ('([1:/dot/junit/opcodes/rem_int/Test_rem_int.java]:[run]:[1]:method_text:[        assertEquals(0, t.run(0, 4));    }    /**     * @title Dividend is negative     */   ])', 1), ('([1:/dot/junit/opcodes/rem_int/Test_rem_int.java]:[run]:[1]:method_text:[       assertEquals(-1, t.run(-10, 3));    }    /**     * @title Divisor is negative     */   ])', 1), ('([1:/dot/junit/opcodes/rem_int/Test_rem_int.java]:[run]:[1]:method_text:[un(1073741824, -3));    }    /**     * @title Both Dividend and divisor are negative     */   ])', 1), ('([1:/dot/junit/opcodes/rem_int/Test_rem_int.java]:[run]:[1]:method_text:[t.run(-17895697, -3000));    }    /**     * @title Arguments = Integer.MIN_VALUE, -1     */   ])', 1), ('([1:/dot/junit/opcodes/rem_int/Test_rem_int.java]:[run]:[1]:method_text:[n(Integer.MIN_VALUE, -1));    }    /**     * @title Arguments = Integer.MIN_VALUE, 1     */   ])', 1), ('([1:/dot/junit/opcodes/rem_int/Test_rem_int.java]:[run]:[1]:method_text:[un(Integer.MIN_VALUE, 1));    }    /**     * @title Arguments = Integer.MAX_VALUE, 1     */   ])', 1), ('([1:/dot/junit/opcodes/rem_int/Test_rem_int.java]:[run]:[1]:method_text:[ALUE, 1));    }    /**     * @title Arguments = Integer.MIN_VALUE, Integer.MAX_VALUE     */   ])', 1), ('([1:/dot/junit/opcodes/rem_int/Test_rem_int.java]:[run]:[1]:method_text:[ALUE, Integer.MAX_VALUE));    }    /**     * @title Arguments = 1, Integer.MAX_VALUE     */   ])', 1), ('([1:/dot/junit/opcodes/rem_int/Test_rem_int.java]:[run]:[1]:method_text:[un(1, Integer.MAX_VALUE));    }    /**     * @title Arguments = 1, Integer.MIN_VALUE     */   ])', 1), ('([1:/dot/junit/opcodes/rem_int/Test_rem_int.java]:[run]:[1]:method_text:[ assertEquals(1, t.run(1, Integer.MIN_VALUE));    }    /**     * @title Divisor is 0     */   ])', 1), ('([1:/dot/junit/opcodes/rem_int/Test_rem_int.java]:[run]:[1]:method_text:[n.class, 1, 0);    }    /**     * @constraint A23      * @title number of registers     */   ])', 1), ('([2:/android/signature/cts/api/SignatureMultiLibsTest.java]:[run]:[2]:method_text:[  * <p/>     * Will check the entire API, and then report the complete list of failures     */   ])', 1), ('([3:/android/signature/cts/api/SignatureMultiLibsTest.java]:[run]:[3]:method_text:[raries.        return super.getZipEntryFiles(path).filter(p -> checkLibrary(p.toString()));    }}])', 1), ('([1:/android/signature/cts/api/SignatureMultiLibsTest.java]:[apk]:[1]:method_text:[  * <p/>     * Will check the entire API, and then report the complete list of failures     */   ])', 1), ('([4:/test/java/com/android/eventlib/premade/EventLibActivityTest.java]:[run]:[4]:method_text:[trumentedContext();    @Before    public void setUp() {        EventLogs.resetLogs();    }   ])', 1), ('([1:/test/java/com/android/eventlib/premade/EventLibActivityTest.java]:[run]:[1]:method_text:[.isSameClassAs(EventLibActivity.class);        assertThat(eventLogs.poll()).isNotNull();    }   ])', 1), ('([1:/test/java/com/android/eventlib/premade/EventLibActivityTest.java]:[run]:[1]:method_text:[EqualTo(GENERATED_ACTIVITY_CLASS_NAME);        assertThat(eventLogs.poll()).isNotNull();    }   ])', 1), ('([4:/android/voiceinteraction/cts/HotwordRejectedResultTest.java]:[run]:[4]:method_text:[g.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class HotwordRejectedResultTest {   ])', 1), ('([4:/android/cts/environment/EnvironmentTest.java]:[run]:[4]:method_text:[t;import org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class EnvironmentTest { ])', 1), ('([1:/java/android/signature/cts/api/HiddenApiTest.java]:[run]:[1]:method_text:[c Predicate<DexMember> FIELD_FILTER =            dexMember -> (dexMember instanceof DexField);   ])', 1), ('([1:/java/android/signature/cts/api/HiddenApiTest.java]:[run]:[1]:method_text:[              }                filterFileLine = reader.readLine();            }        }    }}])', 1), ('([4:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[run]:[4]:method_text:[@RunWith(AndroidJUnit4.class)public class MetaKeyKeyListenerTest extends KeyListenerTestCase {   ])', 1), ('([3:/android/media/cts/MediaScannerConnectionTest.java]:[run]:[3]:method_text:[th;            if (uri != null) {                mediaUri = uri;            }        }    }}])', 1), ('([1:/dot/junit/opcodes/if_le/Test_if_le.java]:[run]:[1]:method_text:[assertEquals(1, t.run(5, 6));    }    /**     * @title Case: 0x0f0e0d0c = 0x0f0e0d0c     */   ])', 1), ('([1:/dot/junit/opcodes/if_le/Test_if_le.java]:[run]:[1]:method_text:[ssertEquals(1, t.run(0x0f0e0d0c, 0x0f0e0d0c));    }    /**     * @title Case: 5 > -5     */   ])', 1), ('([1:/dot/junit/opcodes/if_le/Test_if_le.java]:[run]:[1]:method_text:[n(5, -5));    }    /**     * @title Arguments = Integer.MAX_VALUE, Integer.MAX_VALUE     */   ])', 1), ('([1:/dot/junit/opcodes/if_le/Test_if_le.java]:[run]:[1]:method_text:[X_VALUE));    }    /**     * @title Arguments = Integer.MIN_VALUE, Integer.MAX_VALUE     */   ])', 1), ('([1:/dot/junit/opcodes/if_le/Test_if_le.java]:[run]:[1]:method_text:[LUE));    }        /**     * @title Arguments = Integer.MAX_VALUE, Integer.MIN_VALUE     */   ])', 1), ('([1:/dot/junit/opcodes/if_le/Test_if_le.java]:[run]:[1]:method_text:[ALUE, Integer.MIN_VALUE));    }    /**     * @title Arguments = 0, Integer.MIN_VALUE     */   ])', 1), ('([1:/dot/junit/opcodes/if_le/Test_if_le.java]:[run]:[1]:method_text:[Equals(1234, t.run(0, Integer.MIN_VALUE));    }    /**     * @title Arguments = 0, 0     */   ])', 1), ('([1:/dot/junit/opcodes/if_le/Test_if_le.java]:[run]:[1]:method_text:[run(0, 0));    }        /**     * @constraint A23      * @title number of registers     */   ])', 1), ('([1:/dot/junit/opcodes/shr_int_2addr/Test_shr_int_2addr.java]:[run]:[1]:method_text:[t_2addr_1();        assertEquals(7, t.run(15, 1));    }    /**     * @title 33 >> 2     */   ])', 1), ('([1:/dot/junit/opcodes/shr_int_2addr/Test_shr_int_2addr.java]:[run]:[1]:method_text:[_2addr_1();        assertEquals(8, t.run(33, 2));    }    /**     * @title -15 >> 1     */   ])', 1), ('([1:/dot/junit/opcodes/shr_int_2addr/Test_shr_int_2addr.java]:[run]:[1]:method_text:[        assertEquals(-8, t.run(-15, 1));    }    /**     * @title Arguments = 1 & -1     */   ])', 1), ('([1:/dot/junit/opcodes/shr_int_2addr/Test_shr_int_2addr.java]:[run]:[1]:method_text:[);    }    /**     * @title Verify that shift distance is actually in range 0 to 32.     */   ])', 1), ('([1:/dot/junit/opcodes/shr_int_2addr/Test_shr_int_2addr.java]:[run]:[1]:method_text:[      assertEquals(16, t.run(33, 33));    }    /**     * @title Arguments = 0 & -1     */   ])', 1), ('([1:/dot/junit/opcodes/shr_int_2addr/Test_shr_int_2addr.java]:[run]:[1]:method_text:[tEquals(0, t.run(0, -1));    }    /**     * @title Arguments = Integer.MAX_VALUE & 1     */   ])', 1), ('([1:/dot/junit/opcodes/shr_int_2addr/Test_shr_int_2addr.java]:[run]:[1]:method_text:[n(Integer.MAX_VALUE, 1));    }    /**     * @title Arguments = Integer.MIN_VALUE & 1     */   ])', 1), ('([1:/dot/junit/opcodes/shr_int_2addr/Test_shr_int_2addr.java]:[run]:[1]:method_text:[0xc0000000, t.run(Integer.MIN_VALUE, 1));    }    /**     * @title Arguments = 1 & 0     */   ])', 1), ('([1:/dot/junit/opcodes/shr_int_2addr/Test_shr_int_2addr.java]:[run]:[1]:method_text:[, t.run(1, 0));    }    /**     * @constraint A23      * @title number of registers     */   ])', 1), ('([6:/android/security/cts/EncryptionTest.java]:[run]:[6]:method_text:[able    // to instant apps    @AppModeFull    @CddTest(requirement=""9.9.2/C-0-1,C-0-2,C-0-3"")   ])', 1), ('([6:/android/app/notification/legacy29/cts/NotificationManager29Test.java]:[run]:[6]:method_text:[ontext, 0, new Intent(mContext, this.getClass()), PendingIntent.FLAG_MUTABLE_UNAUDITED);    }   ])', 1), ('([17:/android/renderscript/cts/generated/TestMad.java]:[run]:[17]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_ProviderStatus.java]:[install]:[1]:method_text:[ void tearDown() throws Exception {        super.tearDown();        mBuilder.cleanup();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java]:[run]:[1]:method_text:[ {        super.setUp();        mUiAutomation = getInstrumentation().getUiAutomation();    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/EnrollmentSpecificIdTest.java]:[run]:[3]:method_text:[      encoded[--index] = alphabet[group];        }        return String.valueOf(encoded);    }}])', 1), ('([5:/android/appsecurity/cts/EphemeralTest.java]:[run]:[5]:method_text:[f (mIsUnsupportedDevice) {            return;        }        uninstallTestPackages();    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[     Utils.runDeviceTestsAsCurrentUser(getDevice(), NORMAL_PKG, TEST_CLASS, ""testQuery"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[tils.runDeviceTestsAsCurrentUser(getDevice(), NORMAL_PKG, TEST_CLASS, ""testStartNormal"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[AsCurrentUser(getDevice(), NORMAL_PKG, TEST_CLASS,                ""testStartEphemeral"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[Utils.runDeviceTestsAsCurrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS, ""testQuery"");    }   ])', 1), (""([2:/android/appsecurity/cts/EphemeralTest.java]:[run]:[2]:method_text:[sed to a component, it's    // exposed until the device restarts or the instant app is removed.   ])"", 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testStartExposed01"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testStartExposed02"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testStartExposed03"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testStartExposed04"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testStartExposed05"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testStartExposed06"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testStartExposed07"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testStartExposed08"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testStartExposed09"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testStartExposed10"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[rentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testStartExposed11"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[rentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testStartEphemeral"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testGetInstaller01"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testGetInstaller02"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[rentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testGetInstaller03"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[e {                CLog.w(""Skip intent; "" + dumpArgs(testArgs));            }        }    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[User(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testBuildSerialUnknown"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[CurrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testPackageInfo"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[urrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testActivityInfo"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[er(getDevice(), EPHEMERAL_1_PKG, WEBVIEW_TEST_CLASS,                ""testWebViewLoads"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[evice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testInstallPermissionNotGranted"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[etDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testInstallPermissionGranted"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[MERAL_1_PKG, TEST_CLASS,                ""testInstallPermissionNotGrantedInPackageInfo"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[tedInPackageInfo"");    }    /** Test for android.permission.INSTANT_APP_FOREGROUND_SERVICE */   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[       ""testStartForegroundService"");    }    /** Test for android.permission.RECORD_AUDIO */   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[              ""testRecordAudioPermission"");    }    /** Test for android.permission.CAMERA */   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[       ""testCameraPermission"");    }    /** Test for android.permission.READ_PHONE_NUMBERS */   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[adPhoneNumbersPermission"");    }    /** Test for android.permission.ACCESS_COARSE_LOCATION */   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[    ""testAccessCoarseLocationPermission"");    }    /** Test for android.permission.NETWORK */   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[                ""testInternetPermission"");    }    /** Test for android.permission.VIBRATE */   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[               ""testVibratePermission"");    }    /** Test for android.permission.WAKE_LOCK */   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[TEST_CLASS,                ""testWakeLockPermission"");    }    /** Test for search manager */   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[              ""testGetSearchableInfo"");    }    /** Test for upgrade from instant --> full */   ])', 1), ('([4:/android/appsecurity/cts/EphemeralTest.java]:[run]:[4]:method_text:[er(getDevice(), UPGRADED_PKG, TEST_CLASS,                ""testFullApplicationReadFile"");    }   ])', 1), ('([2:/android/appsecurity/cts/EphemeralTest.java]:[run]:[2]:method_text:[User(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testGetChangedPackages"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[run]:[1]:method_text:[MAL_PKG, TEST_CLASS,                ""uninstall_userInstalledApp_shouldBeUserInitiated"");    }   ])', 1), ('([8:/android/appsecurity/cts/EphemeralTest.java]:[run]:[8]:method_text:[L_1_PKG);        uninstallPackage(EPHEMERAL_2_PKG);        uninstallPackage(UPGRADED_PKG);    }}])', 1), ('([9:/android/appsecurity/cts/EphemeralTest.java]:[install]:[9]:method_text:[f (mIsUnsupportedDevice) {            return;        }        uninstallTestPackages();    }   ])', 1), ('([3:/android/appsecurity/cts/EphemeralTest.java]:[install]:[3]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testGetInstaller01"");    }   ])', 1), ('([4:/android/appsecurity/cts/EphemeralTest.java]:[install]:[4]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testGetInstaller02"");    }   ])', 1), ('([3:/android/appsecurity/cts/EphemeralTest.java]:[install]:[3]:method_text:[rentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testGetInstaller03"");    }   ])', 1), ('([2:/android/appsecurity/cts/EphemeralTest.java]:[install]:[2]:method_text:[evice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testInstallPermissionNotGranted"");    }   ])', 1), ('([2:/android/appsecurity/cts/EphemeralTest.java]:[install]:[2]:method_text:[etDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testInstallPermissionGranted"");    }   ])', 1), ('([2:/android/appsecurity/cts/EphemeralTest.java]:[install]:[2]:method_text:[MERAL_1_PKG, TEST_CLASS,                ""testInstallPermissionNotGrantedInPackageInfo"");    }   ])', 1), ('([2:/android/appsecurity/cts/EphemeralTest.java]:[install]:[2]:method_text:[tedInPackageInfo"");    }    /** Test for android.permission.INSTANT_APP_FOREGROUND_SERVICE */   ])', 1), ('([2:/android/appsecurity/cts/EphemeralTest.java]:[install]:[2]:method_text:[er(getDevice(), UPGRADED_PKG, TEST_CLASS,                ""testFullApplicationReadFile"");    }   ])', 1), ('([5:/android/appsecurity/cts/EphemeralTest.java]:[install]:[5]:method_text:[MAL_PKG, TEST_CLASS,                ""uninstall_userInstalledApp_shouldBeUserInitiated"");    }   ])', 1), ('([29:/android/appsecurity/cts/EphemeralTest.java]:[install]:[29]:method_text:[L_1_PKG);        uninstallPackage(EPHEMERAL_2_PKG);        uninstallPackage(UPGRADED_PKG);    }}])', 1), ('([12:/android/appsecurity/cts/EphemeralTest.java]:[apk]:[12]:method_text:[f (mIsUnsupportedDevice) {            return;        }        uninstallTestPackages();    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[apk]:[1]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testGetInstaller01"");    }   ])', 1), ('([2:/android/appsecurity/cts/EphemeralTest.java]:[apk]:[2]:method_text:[rrentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testGetInstaller02"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[apk]:[1]:method_text:[rentUser(getDevice(), EPHEMERAL_1_PKG, TEST_CLASS,                ""testGetInstaller03"");    }   ])', 1), ('([2:/android/appsecurity/cts/EphemeralTest.java]:[apk]:[2]:method_text:[er(getDevice(), UPGRADED_PKG, TEST_CLASS,                ""testFullApplicationReadFile"");    }   ])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[apk]:[1]:method_text:[MAL_PKG, TEST_CLASS,                ""uninstall_userInstalledApp_shouldBeUserInitiated"");    }   ])', 1), ('([15:/android/appsecurity/cts/EphemeralTest.java]:[apk]:[15]:method_text:[L_1_PKG);        uninstallPackage(EPHEMERAL_2_PKG);        uninstallPackage(UPGRADED_PKG);    }}])', 1), ('([4:/android/cts/backup/profileserialnumberapp/ProfileSerialNumberTest.java]:[run]:[4]:method_text:[on {        mBackupManager = new BackupManager(getInstrumentation().getTargetContext());    }   ])', 1), ('([1:/android/cts/backup/profileserialnumberapp/ProfileSerialNumberTest.java]:[run]:[1]:method_text:[e(),                mBackupManager.getUserForAncestralSerialNumber(USER_SERIAL_NUMBER));    }   ])', 1), ('([17:/android/renderscript/cts/generated/TestNativeLog10.java]:[run]:[17]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([11:/android/app/cts/ActivityManagerApi29Test.java]:[run]:[11]:method_text:[ * , even its capability is zero, it still has location access.     * @throws Exception     */   ])', 1), ('([4:/android/app/cts/ActivityManagerApi29Test.java]:[run]:[4]:method_text:[pp.cts.activitymanager.api29"" package\'s targetSdkVersion is 29.     * @throws Exception     */   ])', 1), ('([8:/android/app/cts/ActivityManagerApi29Test.java]:[run]:[8]:method_text:[ access count and reject count     * in HistoricalOps.      *     * @throws Exception     */   ])', 1), ('([8:/android/app/cts/ActivityManagerApi29Test.java]:[run]:[8]:method_text:[ FGS started by TOP app can have OP_CAMERA and OP_RECORD_AUDIO.     * @throws Exception     */   ])', 1), ('([8:/android/app/cts/ActivityManagerApi29Test.java]:[run]:[8]:method_text:[        () -> sAppOps.noteOp(opStr, sUid, PACKAGE_NAME,                        opStr, """"));    }}])', 1), ('([4:/android/app/notification/legacy28/cts/NotificationManager28Test.java]:[run]:[4]:method_text:[               NOTIFICATION_CHANNEL_ID, ""name"", NotificationManager.IMPORTANCE_DEFAULT));    }   ])', 1), ('([5:/android/view/cts/KeyEventInterceptTest.java]:[run]:[5]:method_text:[     mActivity = mActivityRule.getActivity();        WindowUtil.waitForFocus(mActivity);    }   ])', 1), ('([5:/android/view/cts/receivecontent/ContentInfoTest.java]:[run]:[5]:method_text:[nfoTest} */@Presubmit@SmallTest@RunWith(AndroidJUnit4.class)public class ContentInfoTest {   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[run]:[1]:method_text:[d();        });    }    /**     * Manifest shortcuts are included in the count too.     */   ])', 1), ('([4:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[run]:[4]:method_text:[          .haveIds(makeIds(""s"", 1, 13))                    .areAllEnabled();        });    }   ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[run]:[1]:method_text:["")                    .areAllDynamic()                    .areAllEnabled();        });    }   ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[run]:[3]:method_text:[))                    .areAllEnabled()                    .areAllNotDynamic();        });    }}])', 1), ('([6:/com/android/cts/isolatedsplitapp/SplitAppTest.java]:[run]:[6]:method_text:[   @Before    public void setUp() {        BaseActivity.setOverrideConfiguration(null);    }   ])', 1), ('([1:/com/android/cts/isolatedsplitapp/SplitAppTest.java]:[run]:[1]:method_text:[  };        }        public Context getContext() {            return mContext;        }    }}])', 1), ('([1:/android/app/cts/AlertDialog_BuilderCursorTest.java]:[run]:[1]:method_text:[eFile != null) {            mDatabaseFile.delete();        }        super.tearDown();    }   ])', 1), ('([2:/android/app/cts/AlertDialog_BuilderCursorTest.java]:[run]:[2]:method_text:[rtFalse(checkedTracker[3]);        verifyNoMoreInteractions(mockMultiChoiceClickListener);    }}])', 1), ('([1:/android/cts/backup/BackupTransportHostSideTest.java]:[run]:[1]:method_text:[APK);        assertTrue(runDeviceTests(PACKAGE, CLASS));        uninstallPackage(PACKAGE);    }}])', 1), ('([2:/android/cts/backup/BackupTransportHostSideTest.java]:[install]:[2]:method_text:[APK);        assertTrue(runDeviceTests(PACKAGE, CLASS));        uninstallPackage(PACKAGE);    }}])', 1), ('([2:/android/cts/backup/BackupTransportHostSideTest.java]:[apk]:[2]:method_text:[GE + "".BackupTransportTest"";    private static final String APK = ""CtsBackupTransportApp.apk"";   ])', 1), ('([1:/android/cts/backup/BackupTransportHostSideTest.java]:[apk]:[1]:method_text:[APK);        assertTrue(runDeviceTests(PACKAGE, CLASS));        uninstallPackage(PACKAGE);    }}])', 1), ('([6:/android/graphics/pdf/cts/PdfRendererTransformTest.java]:[run]:[6]:method_text:[o the ""size"" of each individual parameterized run,    // and not the ""full"" run.    @SmallTest   ])', 1), ('([2:/android/media/cts/HapticGeneratorTest.java]:[run]:[2]:method_text:[ion e) {            fail(""Unexpected run time error: "" + e);        }        return null;    }}])', 1), ('([7:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[run]:[7]:method_text:[ic void tearDown() throws Exception {        getDevice().uninstallPackage(TEST_PACKAGE);    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[run]:[1]:method_text:[  runDeviceTests(TEST_PACKAGE, TEST_CLASS, ""testSecureNonHiddenSettingsKeysAreReadable"");    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[run]:[1]:method_text:[  runDeviceTests(TEST_PACKAGE, TEST_CLASS, ""testSystemNonHiddenSettingsKeysAreReadable"");    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[run]:[1]:method_text:[  runDeviceTests(TEST_PACKAGE, TEST_CLASS, ""testGlobalNonHiddenSettingsKeysAreReadable"");    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[run]:[1]:method_text:[ runDeviceTests(TEST_PACKAGE, TEST_CLASS, ""testSecureSomeHiddenSettingsKeysAreReadable"");    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[run]:[1]:method_text:[ runDeviceTests(TEST_PACKAGE, TEST_CLASS, ""testSystemSomeHiddenSettingsKeysAreReadable"");    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[run]:[1]:method_text:[ runDeviceTests(TEST_PACKAGE, TEST_CLASS, ""testGlobalSomeHiddenSettingsKeysAreReadable"");    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[run]:[1]:method_text:[ TEST_CLASS,                ""testGlobalHiddenSettingsKeyNotReadableWithoutPermissions"");    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[run]:[1]:method_text:[ TEST_CLASS,                ""testSecureHiddenSettingsKeysNotReadableWithoutAnnotation"");    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[run]:[1]:method_text:[ TEST_CLASS,                ""testSystemHiddenSettingsKeysNotReadableWithoutAnnotation"");    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[run]:[1]:method_text:[ TEST_CLASS,                ""testGlobalHiddenSettingsKeysNotReadableWithoutAnnotation"");    }   ])', 1), ('([2:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[run]:[2]:method_text:[GE, TEST_CLASS,                ""testSecureHiddenSettingsKeysReadableWithoutAnnotation"");    }   ])', 1), ('([2:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[run]:[2]:method_text:[GE, TEST_CLASS,                ""testSystemHiddenSettingsKeysReadableWithoutAnnotation"");    }   ])', 1), ('([2:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[run]:[2]:method_text:[CKAGE, TEST_CLASS,                ""testGlobalHiddenSettingsKeysReadableWithoutAnnotation"");    }}])', 1), ('([3:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[install]:[3]:method_text:[ic void tearDown() throws Exception {        getDevice().uninstallPackage(TEST_PACKAGE);    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[install]:[1]:method_text:[GE, TEST_CLASS,                ""testSecureHiddenSettingsKeysReadableWithoutAnnotation"");    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[install]:[1]:method_text:[GE, TEST_CLASS,                ""testSystemHiddenSettingsKeysReadableWithoutAnnotation"");    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[install]:[1]:method_text:[CKAGE, TEST_CLASS,                ""testGlobalHiddenSettingsKeysReadableWithoutAnnotation"");    }}])', 1), ('([11:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[apk]:[11]:method_text:[ic void tearDown() throws Exception {        getDevice().uninstallPackage(TEST_PACKAGE);    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[apk]:[1]:method_text:[GE, TEST_CLASS,                ""testSecureHiddenSettingsKeysReadableWithoutAnnotation"");    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[apk]:[1]:method_text:[GE, TEST_CLASS,                ""testSystemHiddenSettingsKeysReadableWithoutAnnotation"");    }   ])', 1), ('([1:/android/appsecurity/cts/ReadableSettingsFieldsTest.java]:[apk]:[1]:method_text:[CKAGE, TEST_CLASS,                ""testGlobalHiddenSettingsKeysReadableWithoutAnnotation"");    }}])', 1)]"	"http://developer.android.com"
