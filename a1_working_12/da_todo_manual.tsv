"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"9.8.6  . Content Capture and App Search"	"9.8.6"	"C-0-7"	"9.8.6/C-0-7"	"09080600.670007"	"""C-0-7] MUST provide a user affordance to opt-out of the data, collected via AppSearch or proprietary means from being shown in android platform e.g launcher."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-2-2"	"8.2/H-2-2"	"08020000.720202"	"""[8.2/H-2-2] MUST ensure a random write performance of at least 10 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-4-1"	"9.1/C-4-1"	"09010000.670401"	"""C-4-1] MUST fulfill all requirements outlined for device implementations in section &quot;9.8.6 Content Capture&quot;."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-3-3"	"9.5/C-3-3"	"09050000.670303"	"""C-3-3] MUST have isolated private app data directories from the parent user account."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-2-3"	"8.2/H-2-3"	"08020000.720203"	"""[8.2/H-2-3] MUST ensure a sequential read performance of at least 250 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-2"	"9.8/H-1-2"	"09080000.720102"	"""[9.8/H-1-2] MUST make sure the hotword detection service can only transmit mic audio data or data derived from it to the system server through HotwordDetectionService API, or to ContentCaptureService through ContentCaptureManager API. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-0-15"	"9.1/C-0-15"	"09010000.670015"	"""C-0-15] MUST not define roles that are duplicates or superset functionality of roles defined by the platform. If devices report android.software.managed_users, they:"""	""	""	"android.software.managed"	""	""	""	""	"[('android.host.accounts.BaseMultiUserTest', 1), ('main.java.com.android.bedstead.harrier.DeviceState', 1), ('android.content.pm.cts.shortcuthost.BaseShortcutManagerHostTest', 1), ('android.media.session.cts.MediaSessionManagerHostTest', 1), ('android.inputmethodservice.cts.hostside.MultiUserTest', 1), ('android.content.cts.ContextCrossProfileHostTest', 1), ('com.android.cts.devicepolicy.CrossProfileAppsHostSideTest', 1), ('com.android.cts.webkit.WebViewHostSideMultipleProfileTest', 1), ('android.appsecurity.cts.ResumeOnRebootHostTest', 1), ('com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule', 1)]"	"[('getDevice', 7), ('setUp', 4), ('waitForBroadcastIdle', 2), ('getMaxNumberOfUsersSupported', 1), ('getCurrentUser', 1), ('getPrimaryUserId', 1), ('getApplicationContext', 1), ('getBuild', 1), ('canRequestInteractAcrossProfiles', 1), ('canInteractAcrossProfiles', 1), ('createRequestInteractAcrossProfilesIntent', 1), ('createAndStartManagedProfile', 1), ('createUser', 1), ('resumeOnReboot_ManagedProfile_Success', 1), ('Statement', 1), ('evaluate', 1), ('getApiLevel', 1)]"	"[('CtsDevicePolicyManagerTestCases', 2), ('CtsAccountsHostTestCases', 1), ('CtsShortcutHostTestCases', 1), ('CtsMediaHostTestCases', 1), ('CtsInputMethodServiceHostTestCases', 1), ('CtsSyncContentHostTestCases', 1), ('CtsAppSecurityHostTestCases', 1)]"	""	"com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule"	"getApiLevel"	"CtsDevicePolicyManagerTestCases"	"[('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/main/java/com/android/bedstead/harrier/DeviceState.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/hostside/src/android/content/pm/cts/shortcuthost/BaseShortcutManagerHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/session/cts/MediaSessionManagerHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/inputmethodservice/hostside/src/android/inputmethodservice/cts/hostside/MultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/content/src/android/content/cts/ContextCrossProfileHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/webkit/src/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ResumeOnRebootHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java', 1)]"	"[('(1,android.software.managed,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(2,android.software.managed,/main/java/com/android/bedstead/harrier/DeviceState.java)', 1), ('(1,android.software.managed,/android/content/pm/cts/shortcuthost/BaseShortcutManagerHostTest.java)', 1), ('(1,android.software.managed,/android/media/session/cts/MediaSessionManagerHostTest.java)', 1), ('(1,android.software.managed,/android/inputmethodservice/cts/hostside/MultiUserTest.java)', 1), ('(1,android.software.managed,/android/content/cts/ContextCrossProfileHostTest.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java)', 1), ('(1,android.software.managed,/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java)', 1), ('(1,android.software.managed,/android/appsecurity/cts/ResumeOnRebootHostTest.java)', 1), ('(1,android.software.managed,/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java)', 1)]"	"[('([1:/android/host/accounts/BaseMultiUserTest.java]:[android.software.managed]:[1]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([2:/main/java/com/android/bedstead/harrier/DeviceState.java]:[android.software.managed]:[2]:method_text:[    ""This test requires INTERACT_ACROSS_USERS_FULL which can only be used on Q+"");        }    }}])', 1), ('([1:/android/content/pm/cts/shortcuthost/BaseShortcutManagerHostTest.java]:[android.software.managed]:[1]:method_text:[                   + "" \\"""" + expectedOutputPattern + ""\\"""");        }        return output;    }}])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[android.software.managed]:[1]:method_text:[ediaSession"", newUser);        removeUser(newUser);    }    @AppModeFull    @RequiresDevice   ])', 1), ('([1:/android/inputmethodservice/cts/hostside/MultiUserTest.java]:[android.software.managed]:[1]:method_text:[                .setTestMethodName(testInfo.testMethod)                .setUserId(userId));    }}])', 1), ('([1:/android/content/cts/ContextCrossProfileHostTest.java]:[android.software.managed]:[1]:method_text:[ers"");        } catch (DeviceNotAvailableException e) {            return false;        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/CrossProfileAppsHostSideTest.java]:[android.software.managed]:[1]:method_text:[ userId);        installAppAsUser(SIMPLE_APP_APK, userId);    }    @FlakyTest    @LargeTest   ])', 1), ('([1:/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java]:[android.software.managed]:[1]:method_text:[st-side test if the device-side test fails.                        .setCheckResults(true));    }}])', 1), ('([1:/android/appsecurity/cts/ResumeOnRebootHostTest.java]:[android.software.managed]:[1]:method_text:[();            } finally {                removeTestPackages();            }        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAdminFeaturesCheckerRule.java]:[android.software.managed]:[1]:method_text:[HOD})    public static @interface IgnoreOnHeadlessSystemUserMode {        String reason();    }}])', 1)]"	""	""	"[('android.software.managed', 10)]"	"[('[android.host.accounts.BaseMultiUserTest listUsers CtsAccountsHostTestCases]', 1), ('[main.java.com.android.bedstead.harrier.DeviceState TestApis None]', 1), ('[android.content.pm.cts.shortcuthost.BaseShortcutManagerHostTest isMultiUserSupported CtsShortcutHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsFull_managedProfiles CtsMediaHostTestCases]', 1), ('[android.inputmethodservice.cts.hostside.MultiUserTest testProfileUserInstant CtsInputMethodServiceHostTestCases]', 1), ('[android.content.cts.ContextCrossProfileHostTest testCreateContextAsUser_sameProfileGroup_withInteractAcrossUsersPermission_createsContext CtsSyncContentHostTestCases]', 1), ('[com.android.cts.webkit.WebViewHostSideMultipleProfileTest testManagedProfile None]', 1), ('[android.appsecurity.cts.ResumeOnRebootHostTest isSupportedDevice CtsAppSecurityHostTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAdminFeaturesCheckerRule getDisplayName CtsDevicePolicyManagerTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.3.5  . Security Model"	"9.8.2"	"T-4-2"	"9.8.2/T-4-2"	"09080200.840402"	"""[9.8.2/T-4-2] MUST not hide the microphone indicator for system apps that have visible user interfaces or direct user interaction. If Television device implementations declare android.hardware.camera.any, they: ["""	""	""	"android.hardware.camera.any"	""	""	""	""	"[('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('com.android.cts.verifier.features.FeatureSummaryActivity', 1)]"	"[('hashCode', 2), ('getDevice', 1), ('getStdout', 1), ('trim', 1)]"	"[('CtsAdbManagerHostTestCases', 1)]"	""	"com.android.cts.verifier.features.FeatureSummaryActivity"	"hashCode"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/features/FeatureSummaryActivity.java', 1)]"	"[('(1,android.hardware.camera.any,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1), ('(1,android.hardware.camera.any,/com/android/cts/verifier/features/FeatureSummaryActivity.java)', 1)]"	"[('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.camera.any]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 1), ('([1:/com/android/cts/verifier/features/FeatureSummaryActivity.java]:[android.hardware.camera.any]:[1]:method_text:[lse {            ((TextView) (findViewById(R.id.fs_warnings))).setText(warnings);        }    }}])', 1)]"	""	""	"[('android.hardware.camera.any', 2)]"	"[('[com.android.cts.verifier.features.FeatureSummaryActivity setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-1-4"	"8.2/H-1-4"	"08020000.720104"	"""[8.2/H-1-4] MUST ensure a random read performance of at least 25 MB/s. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they: """	""	""	"android.os.Build.VERSION android.os.Build.VERSION_CODES.MEDIA VERSION_CODES MEDIA_PERFORMANCE_CLASS"	""	""	""	""	"[('test.java.com.android.bedstead.nene.permissions.PermissionsTest', 8), ('android.app.cts.NotificationManagerTest', 6), ('android.location.cts.privileged.PrivilegedLocationPermissionTest', 3), ('com.android.cts.verifier.wifiaware.testcase.DataPathInBandTestCase', 2), ('main.java.com.android.bedstead.nene.utils.ShellCommandUtils', 2), ('android.media.cts.AudioFocusTest', 2), ('com.android.cts.dexmetadata.InstallDexMetadataTest', 2), ('android.media.mediaparser.cts.MediaParserTest', 2), ('com.android.cts.verifier.camera.its.ItsService', 2), ('android.jni.cts.JniStaticTest', 1), ('com.android.cts.verifier.bluetooth.BleCocClientService', 1), ('android.hardware.cts.helpers.sensorverification.EventBasicVerification', 1), ('android.permission.cts.NearbyDevicesPermissionTest', 1), ('com.android.cts.deviceadmin.DeviceAdminTest', 1), ('main.java.com.android.bedstead.nene.packages.AdbPackageParser26', 1), ('android.media.cts.PlaybackStateTest', 1), ('android.hardware.camera2.cts.CameraManagerTest', 1), ('com.android.cts.rolesecuritytest.DeviceTest', 1), ('android.provider.cts.media.MediaStore_Audio_ArtistsTest', 1), ('android.permission2.cts.RestrictedStoragePermissionSharedUidTest', 1), ('android.provider.cts.media.MediaStoreUtils', 1), ('com.android.server.cts.device.statsdatom.StatsdCtsForegroundService', 1), ('com.android.cts.verifier.sensors.SensorSynchronizationTestActivity', 1), ('android.net.wifi.cts.CoexUnsafeChannelTest', 1), ('android.mediapc.cts.MultiEncoderPairPerfTest', 1), ('android.provider.cts.media.MediaStore_Audio_AlbumsTest', 1), ('android.mediadrm.cts.MediaDrmExtractorTest', 1), ('android.media.cts.EncodeVirtualDisplayTest', 1), ('main.java.com.android.bedstead.nene.utils.Versions', 1), ('android.hardware.camera2.cts.ZoomCaptureTest', 1), ('android.provider.cts.media.MediaStoreNotificationTest', 1), ('android.media.cts.CodecState', 1), ('android.accessibilityservice.cts.AccessibilityButtonTest', 1), ('com.android.compatibility.common.deviceinfo.GenericDeviceInfo', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('android.hardware.camera2.cts.CaptureResultTest', 1)]"	"[('start', 15), ('AtomicInteger', 14), ('setUp', 12), ('clear', 10), ('getLooper', 9), ('getBytes', 8), ('Object', 8), ('close', 8), ('capacity', 8), ('getInstrumentation', 7), ('quitSafely', 6), ('run', 6), ('getOutputStream', 6), ('onCreate', 5), ('getName', 4), ('tearDown', 4), ('getUiAutomation', 4), ('closeCameraDevice', 4), ('take', 4), ('checkAndStartThread', 4), ('getState', 4), ('getClass', 3), ('trim', 3), ('getApplicationContext', 3), ('data', 3), ('getSharedVolumeNames', 3), ('getTargetContext', 3), ('getContentResolver', 3), ('build', 3), ('getSimpleName', 3), ('getAdapter', 2), ('getSensor', 2), ('getContext', 2), ('install', 2), ('getTargetSDK', 2), ('release', 2), ('BlockingStateCallback', 2), ('SerializerRunnable', 2), ('SocketRunnable', 2), ('getId', 2), ('onDestroy', 2), ('quit', 2), ('size', 2), ('getWidth', 2), ('getHeight', 2), ('getPhysicalCameraIds', 2), ('JSONObject', 2), ('hasArray', 2), ('array', 2), ('flush', 2), ('peek', 2), ('removeFirst', 2), ('accept', 2), ('getInputStream', 2), ('readLine', 2), ('getDefault', 2), ('stopSelf', 2), ('doGetProps', 2), ('doStartSensorEvents', 2), ('getBluetoothLeScanner', 1), ('Handler', 1), ('getExpectedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('getFifoReservedEventCount', 1), ('max', 1), ('getFifoMaxEventCount', 1), ('getAllowedSensorStartDelay', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('NullPointerException', 1), ('ParseResult', 1), ('packageName', 1), ('MutablePackage', 1), ('find', 1), ('users', 1), ('MutableUserPackage', 1), ('cannotGetSmsRoleHolderForAnotherUser', 1), ('getPackageManager', 1), ('myUserId', 1), ('printStackTrace', 1), ('checkExceptedStorageStateForAppsSharingUid', 1), ('currentThread', 1), ('interrupt', 1), ('obtainMessage', 1), ('getMediaDirString', 1), ('MediaExtractor', 1), ('getStatSize', 1), ('getMainLooper', 1), ('setupEncoderParameters', 1), ('Versions', 1), ('getFields', 1), ('getModifiers', 1), ('getType', 1), ('stop', 1), ('getSerial', 1)]"	"[('CtsAppTestCases', 6), ('CtsMediaTestCases', 4), ('CtsProviderTestCases', 4), ('CtsCameraTestCases', 3), ('CtsLocationPrivilegedTestCases', 3), ('CtsMediaParserTestCases', 2), ('CtsJniTestCases', 1), ('CtsSensorTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsPermission2TestCases', 1), ('CtsWifiTestCases', 1), ('CtsMediaPerformanceClassTestCases', 1), ('CtsMediaDrmTestCases', 1), ('CtsAccessibilityServiceTestCases', 1)]"	""	"com.android.cts.verifier.camera.its.ItsService"	"doStartSensorEvents"	""	"[('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/PrivilegedLocationPermissionTest.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/utils/ShellCommandUtils.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioFocusTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/dexmetadata/app/src/com/android/cts/dexmetadata/InstallDexMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/jni/src/android/jni/cts/JniStaticTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleCocClientService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/DeviceAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/packages/AdbPackageParser26.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/PlaybackStateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/RoleSecurityTestApp/src/com/android/cts/rolesecuritytest/DeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedStoragePermissionSharedUidTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/StatsdCtsForegroundService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/SensorSynchronizationTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/CoexUnsafeChannelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPairPerfTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediadrm/src/android/mediadrm/cts/MediaDrmExtractorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/EncodeVirtualDisplayTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/utils/Versions.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreNotificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/CodecState.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityButtonTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/device-info/src/com/android/compatibility/common/deviceinfo/GenericDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 1)]"	"[('(1,VERSION_CODES,/android/jni/cts/JniStaticTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/bluetooth/BleCocClientService.java)', 1), ('(1,VERSION_CODES,/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java)', 1), ('(9,VERSION_CODES,/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java)', 1), ('(1,VERSION_CODES,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,VERSION_CODES,/com.android.cts.deviceadmin/DeviceAdminTest.java)', 1), ('(1,VERSION_CODES,/main/java/com/android/bedstead/nene/packages/AdbPackageParser26.java)', 1), ('(1,VERSION_CODES,/android/media/cts/PlaybackStateTest.java)', 1), ('(7,VERSION_CODES,/android/app/cts/NotificationManagerTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(2,VERSION_CODES,/com/android/cts/rolesecuritytest/DeviceTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java)', 1), ('(2,VERSION_CODES,/android/permission2/cts/RestrictedStoragePermissionSharedUidTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStoreUtils.java)', 1), ('(3,android.os.Build.VERSION,/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java)', 1), ('(2,VERSION_CODES,/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java)', 1), ('(1,android.os.Build.VERSION,/main/java/com/android/bedstead/nene/utils/ShellCommandUtils.java)', 1), ('(1,VERSION_CODES,/main/java/com/android/bedstead/nene/utils/ShellCommandUtils.java)', 1), ('(1,VERSION_CODES,/com/android/server/cts/device/statsdatom/StatsdCtsForegroundService.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/sensors/SensorSynchronizationTestActivity.java)', 1), ('(1,VERSION_CODES,/android/net/wifi/cts/CoexUnsafeChannelTest.java)', 1), ('(1,VERSION_CODES,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java)', 1), ('(1,VERSION_CODES,/android/mediadrm/cts/MediaDrmExtractorTest.java)', 1), ('(2,VERSION_CODES,/android/media/cts/EncodeVirtualDisplayTest.java)', 1), ('(2,VERSION_CODES,/android/media/cts/AudioFocusTest.java)', 1), ('(3,VERSION_CODES,/main/java/com/android/bedstead/nene/utils/Versions.java)', 1), ('(1,android.os.Build.VERSION,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 1), ('(2,VERSION_CODES,/com/android/cts/dexmetadata/InstallDexMetadataTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(1,VERSION_CODES,/android/provider/cts/media/MediaStoreNotificationTest.java)', 1), ('(4,VERSION_CODES,/android/media/cts/CodecState.java)', 1), ('(2,android.os.Build.VERSION,/android/location/cts/privileged/PrivilegedLocationPermissionTest.java)', 1), ('(2,VERSION_CODES,/android/location/cts/privileged/PrivilegedLocationPermissionTest.java)', 1), ('(2,VERSION_CODES,/android/media/mediaparser/cts/MediaParserTest.java)', 1), ('(1,VERSION_CODES,/android/accessibilityservice/cts/AccessibilityButtonTest.java)', 1), ('(5,VERSION_CODES,/com/android/compatibility/common/deviceinfo/GenericDeviceInfo.java)', 1), ('(1,VERSION_CODES,/com/android/cts/deviceandprofileowner/ResetPasswordTest.java)', 1), ('(1,VERSION_CODES,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(2,VERSION_CODES,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(2,MEDIA_PERFORMANCE_CLASS,/com/android/cts/verifier/camera/its/ItsService.java)', 1)]"	"[('([1:/android/app/cts/NotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[} finally {            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 4), ('([1:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[VERSION_CODES]:[1]:method_text:[(PERMISSION_HELD_BY_SHELL))                    .isEqualTo(PERMISSION_GRANTED);        }    }   ])', 2), ('([1:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[VERSION_CODES]:[1]:method_text:[withoutPermission(                        DECLARED_PERMISSION_NOT_HELD_BY_SHELL_PRE_S));    }   ])', 2), ('([1:/android/jni/cts/JniStaticTest.java]:[VERSION_CODES]:[1]:method_text:[    *     * This test ensures that dlopen fail with a target version SDK of Q or above.     */   ])', 1), ('([1:/com/android/cts/verifier/bluetooth/BleCocClientService.java]:[VERSION_CODES]:[1]:method_text:[ait for next state                        break;                }            }        }    };}])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java]:[VERSION_CODES]:[1]:method_text:[           ++mNumEvent;        } else {            mWrongSensorObserved = true;        }    }}])', 1), ('([1:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[VERSION_CODES]:[1]:method_text:[n(PERMISSION_HELD_BY_SHELL))                    .isEqualTo(PERMISSION_DENIED);        }    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[VERSION_CODES]:[1]:method_text:[ss,                () -> sTestApis.permissions().withoutPermission(INSTALL_PERMISSION));    }   ])', 1), ('([2:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[VERSION_CODES]:[2]:method_text:[ON_NOT_HELD_BY_SHELL_PRE_S))                    .isEqualTo(PERMISSION_DENIED);        }    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[VERSION_CODES]:[1]:method_text:[all the testapp without granting all runtime    //  permissions, add a test that this works pre-Q}])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[VERSION_CODES]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/com.android.cts.deviceadmin/DeviceAdminTest.java]:[VERSION_CODES]:[1]:method_text:[             Build.VERSION_CODES.CUR_DEVELOPMENT == pi.applicationInfo.targetSdkVersion);    }   ])', 1), ('([1:/main/java/com/android/bedstead/nene/packages/AdbPackageParser26.java]:[VERSION_CODES]:[1]:method_text:[            throw new AdbParseException(""Error parsing user section"", section, e);        }    }}])', 1), ('([1:/android/media/cts/PlaybackStateTest.java]:[VERSION_CODES]:[1]:method_text:[st(Build.VERSION_CODES.S);    /**     * Test default values of {@link PlaybackState}.     */   ])', 1), ('([2:/android/app/cts/NotificationManagerTest.java]:[VERSION_CODES]:[2]:method_text:[alFilter);            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[VERSION_CODES]:[1]:method_text:[lse)) {            fail(""Failed to cancel notification id="" + notificationId);        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraManagerTest.java]:[VERSION_CODES]:[1]:method_text:[  hardwareLevel != CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY);        }    }   ])', 1), ('([2:/com/android/cts/rolesecuritytest/DeviceTest.java]:[VERSION_CODES]:[2]:method_text:[;    }    private Instrumentation getInstrumentation() {        return mInstrumentation;    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([2:/android/permission2/cts/RestrictedStoragePermissionSharedUidTest.java]:[VERSION_CODES]:[2]:method_text:[public void uninstallAllTestPackages() {        app1.uninstall();        app2.uninstall();    }}])', 1), ('([1:/android/provider/cts/media/MediaStoreUtils.java]:[VERSION_CODES]:[1]:method_text:[SdkSuppress;@SdkSuppress(minSdkVersion = Build.VERSION_CODES.R)public class MediaStoreUtils {   ])', 1), ('([3:/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java]:[android.os.Build.VERSION]:[3]:method_text:[    + ""finish"");                return false;            }        }        return true;    }}])', 1), ('([2:/com/android/cts/verifier/wifiaware/testcase/DataPathInBandTestCase.java]:[VERSION_CODES]:[2]:method_text:[    + ""finish"");                return false;            }        }        return true;    }}])', 1), ('([1:/main/java/com/android/bedstead/nene/utils/ShellCommandUtils.java]:[android.os.Build.VERSION]:[1]:method_text:[utomation() {        return InstrumentationRegistry.getInstrumentation().getUiAutomation();    }}])', 1), ('([1:/main/java/com/android/bedstead/nene/utils/ShellCommandUtils.java]:[VERSION_CODES]:[1]:method_text:[utomation() {        return InstrumentationRegistry.getInstrumentation().getUiAutomation();    }}])', 1), ('([1:/com/android/server/cts/device/statsdatom/StatsdCtsForegroundService.java]:[VERSION_CODES]:[1]:method_text:[           notificationManager.deleteNotificationChannel(NOTIFICATION_CHANNEL_ID);        }    }}])', 1), ('([1:/com/android/cts/verifier/sensors/SensorSynchronizationTestActivity.java]:[VERSION_CODES]:[1]:method_text:[ent));    }    @Override    public void onAccuracyChanged(Sensor sensor, int accuracy) {    }}])', 1), ('([1:/android/net/wifi/cts/CoexUnsafeChannelTest.java]:[VERSION_CODES]:[1]:method_text:[D_24_GHZ;    final static int TEST_CHANNEL = 6;    final static int TEST_POWER_CAP_DBM = -50;   ])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[VERSION_CODES]:[1]:method_text:[tUnit.NONE);            log.submit(InstrumentationRegistry.getInstrumentation());        }    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java]:[VERSION_CODES]:[1]:method_text:[lver = mContext.getContentResolver();        Log.d(TAG, ""Using volume "" + mVolumeName);    }   ])', 1), ('([1:/android/mediadrm/cts/MediaDrmExtractorTest.java]:[VERSION_CODES]:[1]:method_text:[urce ds = getDataSourceFor(res);        mExtractor.setDataSource(ds);        return ds;    }   ])', 1), ('([2:/android/media/cts/EncodeVirtualDisplayTest.java]:[VERSION_CODES]:[2]:method_text:[upEncoderParameters();    }    /**     * Basic test.     *     * @throws Exception     */   ])', 1), ('([1:/android/media/cts/AudioFocusTest.java]:[VERSION_CODES]:[1]:method_text:[ * @throws Exception     */    @AppModeFull(reason = ""Instant apps cannot access the SD card"")   ])', 1), ('([1:/android/media/cts/AudioFocusTest.java]:[VERSION_CODES]:[1]:method_text:[  synchronized (mLock) {                mFocusChange = focusChange;            }        }    }}])', 1), ('([3:/main/java/com/android/bedstead/nene/utils/Versions.java]:[VERSION_CODES]:[3]:method_text:[ && max < Build.VERSION.SDK_INT) {            return false;        }        return true;    }}])', 1), ('([1:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[android.os.Build.VERSION]:[1]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 1), ('([2:/com/android/cts/dexmetadata/InstallDexMetadataTest.java]:[VERSION_CODES]:[2]:method_text:[  }    /**     * Verify that we installed the .dm files for base (no split install).     */   ])', 1), ('([1:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[VERSION_CODES]:[1]:method_text:[ fail(""wait for image available timed out after "" + timeout + ""ms"");            }        }    }}])', 1), ('([1:/android/provider/cts/media/MediaStoreNotificationTest.java]:[VERSION_CODES]:[1]:method_text:[NAL);        mGenericFiles = MediaStore.Files.getContentUri(MediaStore.VOLUME_EXTERNAL);    }   ])', 1), ('([4:/android/media/cts/CodecState.java]:[VERSION_CODES]:[4]:method_text:[ek. */    public boolean isFirstTunnelFrameReady() {        return mFirstTunnelFrameReady;    }}])', 1), ('([2:/android/location/cts/privileged/PrivilegedLocationPermissionTest.java]:[android.os.Build.VERSION]:[2]:method_text:[ry.getInstrumentation().getUiAutomation()                .dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/location/cts/privileged/PrivilegedLocationPermissionTest.java]:[VERSION_CODES]:[1]:method_text:[ry.getInstrumentation().getUiAutomation()                .dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/location/cts/privileged/PrivilegedLocationPermissionTest.java]:[VERSION_CODES]:[1]:method_text:[;        mLocationManager.setExtraLocationControllerPackageEnabled(originalPackageEnabeld);    }}])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[VERSION_CODES]:[1]:method_text:[public void setUp() {        assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.R);    }   ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[VERSION_CODES]:[1]:method_text:[aParser.getLogSessionId()).isSameInstanceAs(logSessionId);        mediaParser.release();    }   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityButtonTest.java]:[VERSION_CODES]:[1]:method_text:[REQUEST_ACCESSIBILITY_BUTTON)                        == FLAG_REQUEST_ACCESSIBILITY_BUTTON);    }}])', 1), ('([5:/com/android/compatibility/common/deviceinfo/GenericDeviceInfo.java]:[VERSION_CODES]:[5]:method_text:[                    SystemProperties.get(""ro.build.version.security_patch"", """"));        }    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[VERSION_CODES]:[1]:method_text:[l() {        return mContext.getApplicationContext().getApplicationInfo().targetSdkVersion;    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[VERSION_CODES]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([2:/com/android/cts/verifier/camera/its/ItsService.java]:[VERSION_CODES]:[2]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([2:/com/android/cts/verifier/camera/its/ItsService.java]:[MEDIA_PERFORMANCE_CLASS]:[2]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1)]"	""	""	"[('VERSION_CODES', 51), ('android.os.Build.VERSION', 4), ('MEDIA_PERFORMANCE_CLASS', 1)]"	"[('[com.android.cts.verifier.wifiaware.testcase.DataPathInBandTestCase executeTest None]', 2), ('[main.java.com.android.bedstead.nene.utils.ShellCommandUtils TestApis None]', 2), ('[android.location.cts.privileged.PrivilegedLocationPermissionTest dropShellPermissionIdentity CtsLocationPrivilegedTestCases]', 2), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 2), ('[android.jni.cts.JniStaticTest test_dlopenPublicLibraries CtsJniTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleCocClientService isEnabled None]', 1), ('[android.hardware.cts.helpers.sensorverification.EventBasicVerification isIntegrationTest CtsSensorTestCases]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest withPermission_shellPermission_permissionIsGranted None]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest withoutPermission_alreadyGranted_androidPreQ_throwsException None]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest withoutPermission_permissionIsNotGranted None]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest autoclose_withoutPermission_permissionIsGrantedAgain None]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest withoutPermission_installPermission_androidPreQ_throwsException None]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest withoutPermission_permissionIsAlreadyGrantedInInstrumentedApp_permissionIsNotGranted None]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest withoutPermission_permissionIsAlreadyGrantedInInstrumentedApp_androidPreQ_throwsException None]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest withoutPermission_androidSAndAbove_restoresPreviousPermissionContext None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled CtsPermissionTestCases]', 1), ('[com.android.cts.deviceadmin.DeviceAdminTest testTargetApiLevel None]', 1), ('[android.app.cts.NotificationManagerTest testPostPCanToggleAlarmsMediaSystemTest CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testGetSuppressedVisualEffects_ranking CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setOldFields CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setNewFields CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setOldNewFields CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testNotificationListener_cancelNotifications CtsAppTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testNoLegacyOnQ CtsCameraTestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionSharedUidTest uninstallAllTestPackages CtsPermission2TestCases]', 1), ('[com.android.cts.verifier.sensors.SensorSynchronizationTestActivity SensorSynchronizationTestActivity None]', 1), ('[android.mediapc.cts.MultiEncoderPairPerfTest test720p CtsMediaPerformanceClassTestCases]', 1), ('[android.media.cts.AudioFocusTest testAudioFocusRequestMediaGainLossWithPlayer CtsMediaTestCases]', 1), ('[android.media.cts.AudioFocusTest testAudioFocusRequestMediaGainLossWithPauseOnDuckFocusRequest CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture CtsCameraTestCases]', 1), ('[android.media.cts.CodecState releaseFrameListeners None]', 1), ('[android.location.cts.privileged.PrivilegedLocationPermissionTest testExtraLocationControllerPackage CtsLocationPrivilegedTestCases]', 1), ('[android.media.mediaparser.cts.MediaParserTest testLogSessionId CtsMediaParserTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityButtonTest testUpdateRequestAccessibilityButtonFlag_targetSdkGreaterThanQ_ignoresUpdate CtsAccessibilityServiceTestCases]', 1), ('[com.android.cts.deviceandprofileowner.ResetPasswordTest testResetPasswordDeprecated None]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps CtsCameraTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-8"	"9.8/H-1-8"	"09080000.720108"	"""[9.8/H-1-8] MUST only allow transmission of data out of the hotword detection service on a hotword validation request from the system server. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-1-1"	"8.2/H-1-1"	"08020000.720101"	"""[8.2/H-1-1] MUST ensure a sequential write performance of at least 100 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-7"	"9.8/H-1-7"	"09080000.720107"	"""[9.8/H-1-7] MUST NOT allow more than 5 bits of data to be transmitted out of the hotword detection service on each negative hotword result. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-13"	"9.8/H-1-13"	"09080000.720113"	"""[9.8/H-1-13] MUST restart the process hosting the hotword detection service at least once every hour or every 30 hardware-trigger events, whichever comes first. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-5"	"9.8/H-1-5"	"09080000.720105"	"""[9.8/H-1-5] MUST NOT supply buffered mic audio older than 30 seconds to the voice interaction service or similar entity. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-1"	"7.5/H-1-1"	"07050000.720101"	"""[7.5/H-1-1] MUST have a primary rear facing camera with a resolution of at least 12 megapixels supporting video capture at 4k@30fps. The primary rear-facing camera is the rear-facing camera with the lowest camera ID.  | [7.5/H-1-1] MUST have a primary rear facing camera with a resolution of at least 12 megapixels supporting video capture at 4k@30fps. The primary rear-facing camera is the rear-facing camera with the lowest camera ID. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-10"	"9.8/H-1-10"	"09080000.720110"	"""[9.8/H-1-10] MUST NOT surface in the UI quantitative data about mic usage by the hotword detection service. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-0-14"	"9.1/C-0-14"	"09010000.670014"	"""C-0-14] MUST only assign roles to applications with functionalities that meet the role requirements."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-4"	"9.8/H-1-4"	"09080000.720104"	"""[9.8/H-1-4] MUST NOT supply buffered mic audio older than 8 seconds for an individual request to the hotword detection service. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-4"	"7.5/H-1-4"	"07050000.720104"	"""[7.5/H-1-4] MUST support CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME for both primary cameras.  | [7.5/H-1-4] MUST support CameraMetadata.SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME for both primary cameras. """	""	""	"CameraMetadata.SENSOR SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME"	""	""	""	""	"[('android.hardware.camera2.cts.RobustnessTest', 3), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2), ('android.hardware.camera2.cts.rs.RawConverter', 1), ('android.hardware.camera2.cts.DngCreatorTest', 1)]"	"[('floatValue', 10), ('getColumnCount', 2), ('getRowCount', 2), ('create', 2), ('SparseIntArray', 1), ('getConfig', 1), ('getWidth', 1), ('getHeight', 1), ('getGainFactorCount', 1)]"	"[('CtsCameraTestCases', 7)]"	""	"android.hardware.camera2.cts.DngCreatorTest"	"floatValue"	"CtsCameraTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/RawConverter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 1)]"	"[('(5,CameraMetadata.SENSOR,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(1,CameraMetadata.SENSOR,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(19,CameraMetadata.SENSOR,/android/hardware/camera2/cts/rs/RawConverter.java)', 1), ('(1,CameraMetadata.SENSOR,/android/hardware/camera2/cts/DngCreatorTest.java)', 1)]"	"[('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[CameraMetadata.SENSOR]:[2]:method_text:[nput/output combinations for each hardware     * level and capability work as expected.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[CameraMetadata.SENSOR]:[1]:method_text:[  if (inputWriter != null) {                inputWriter.close();            }        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[CameraMetadata.SENSOR]:[2]:method_text:[ll expected mandatory stream combinations are present and     * advertised accordingly.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[CameraMetadata.SENSOR]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([19:/android/hardware/camera2/cts/rs/RawConverter.java]:[CameraMetadata.SENSOR]:[19]:method_text:[ D50_XYZ[1], 0, 0, 0, D50_XYZ[2]};        multiply(m2, intermediate, /*out*/forwardMatrix);    }}])', 1), ('([1:/android/hardware/camera2/cts/DngCreatorTest.java]:[CameraMetadata.SENSOR]:[1]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1)]"	""	""	"[('CameraMetadata.SENSOR', 6), ('SENSOR_INFO_TIMESTAMP_SOURCE_REALTIME', 1)]"	"[('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraPerfClassCharacteristics CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionOutputCombinations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionReprocessConfigurations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testOisDataMode CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testDngRenderingByBitmapFactor CtsCameraTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-4-1"	"9.8.2/H-4-1"	"09080200.720401"	"""[9.8.2/H-4-1] MUST display the microphone indicator when an app is accessing audio data from the microphone, but not when the microphone is only accessed by HotwordDetectionService, SOURCE_HOTWORD, ContentCaptureService or apps holding the roles called out in section 9.1 with CDD identifier [C-4-X]. . """	""	""	"CDD SOURCE_HOTWORD"	""	""	""	""	"[('android.permission.cts.NearbyDevicesPermissionTest', 11), ('android.opengl.cts.OpenGlEsVersionTest', 10), ('android.security.cts.KernelConfigTest', 7), ('android.appwidget.cts.RequestPinAppWidgetTest', 2), ('android.mediapc.cts.MultiEncoderPairPerfTest', 2), ('android.telephony.cts.TelephonyManagerTest', 2), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 2), ('android.location.cts.gnss.GnssPseudorangeVerificationTest', 2), ('android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest', 2), ('android.server.wm.CompatChangeTests', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('com.android.cts.verifier.companion.CompanionDeviceTestActivity', 1), ('com.android.cts.verifier.widget.WidgetTestActivity', 1), ('com.android.cts.verifier.audio.MidiTestActivityBase', 1), ('android.renderscript.cts.generated.TestAcosh', 1), ('com.android.cts.verifier.security.IdentityCredentialAuthentication', 1), ('android.database.cts.MergeCursorTest', 1), ('com.android.cts.apicoverage.HtmlReport', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('com.android.cts.verifier.audio.AudioOutColdStartLatencyActivity', 1), ('com.android.cts.apicoverage.CddCoverage', 1), ('android.host.accounts.BaseMultiUserTest', 1), ('android.location.cts.common.TestMeasurementUtil', 1)]"	"[('toString', 27), ('destroy', 26), ('getContext', 15), ('setUp', 12), ('StringBuilder', 9), ('start', 8), ('size', 7), ('tearDown', 7), ('AtomicInteger', 7), ('getDevice', 6), ('getInstrumentation', 5), ('Object', 5), ('close', 5), ('ArgumentsFloatFloat', 4), ('ArgumentsHalfHalf', 4), ('run', 4), ('getLooper', 4), ('capacity', 4), ('getState', 4), ('clear', 4), ('getSimpleName', 3), ('quitSafely', 3), ('getOutputStream', 3), ('getPseudorangeRateUncertaintyMetersPerSecond', 3), ('getCn0DbHz', 3), ('getCarrierPhase', 3), ('getMultipathIndicator', 3), ('getSnrInDb', 3), ('getAutomaticGainControlLevelDb', 3), ('getConstellationType', 3), ('BlockingBroadcastReceiver', 2), ('await', 2), ('getExtras', 2), ('getPackageManager', 2), ('saveAllowedNetworkTypesForAllReasons', 2), ('recoverAllowedNetworkType', 2), ('hasCellular', 2), ('build', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getRequirementId', 2), ('hashCode', 2), ('getFullBiasNanos', 2), ('getClock', 2), ('getReceivedSvTimeUncertaintyNanos', 2), ('getTimeOffsetNanos', 2), ('hasCarrierFrequencyHz', 2), ('getCarrierFrequencyHz', 2), ('getCarrierPhaseUncertainty', 2), ('getFrequencyOffsetMetersPerSecond', 2), ('getSamplingWidthMeters', 2), ('getSvid', 2), ('getReceivedSvTimeNanos', 2), ('getType', 2), ('getSubmessageId', 2), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('PlatformCompatChangeRule', 1), ('setUpLauncher', 1), ('getDefaultLauncher', 1), ('tearDownLauncher', 1), ('Bundle', 1), ('getFirstWidgetComponent', 1), ('getMaxSupportedInstances', 1), ('getSupportedPerformancePoints', 1), ('inputParams', 1), ('getAction', 1), ('countDown', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('getPackageName', 1), ('getDefaultSubscriptionId', 1), ('getRadioHalVersion', 1), ('getUiAutomation', 1), ('keySet', 1), ('toByteArray', 1), ('getPhoneCount', 1), ('getBuild', 1), ('assumeSecurityModelCompat', 1), ('Exception', 1), ('deleteOnExit', 1), ('lines', 1), ('checkAcoshFloatFloat', 1), ('checkAcoshFloat2Float2', 1), ('checkAcoshFloat3Float3', 1), ('checkAcoshFloat4Float4', 1), ('checkAcoshHalfHalf', 1), ('checkAcoshHalf2Half2', 1), ('checkAcoshHalf3Half3', 1), ('checkAcoshHalf4Half4', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('PipedOutputStream', 1), ('Runnable', 1), ('printStackTrace', 1), ('newInstance', 1), ('getContentResolver', 1), ('onCreate', 1), ('BlockingStateCallback', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('onDestroy', 1), ('quit', 1), ('getWidth', 1), ('getHeight', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('AudioTimestamp', 1), ('getCddRequirements', 1), ('values', 1), ('getMaxNumberOfUsersSupported', 1), ('getCurrentUser', 1), ('getPrimaryUserId', 1), ('builder', 1), ('getLocationManager', 1), ('hasFullBiasNanos', 1), ('hasBiasUncertaintyNanos', 1), ('getBiasUncertaintyNanos', 1), ('getTimeNanos', 1), ('entrySet', 1), ('getKey', 1), ('getValue', 1), ('hasCarrierPhase', 1), ('hasCarrierPhaseUncertainty', 1), ('hasSnrInDb', 1), ('hasAutomaticGainControlLevelDb', 1), ('hasCorrelationVectors', 1), ('hasSatellitePvt', 1), ('getCorrelationVectors', 1), ('getMagnitude', 1), ('getAccumulatedDeltaRangeState', 1), ('getAccumulatedDeltaRangeMeters', 1), ('getAccumulatedDeltaRangeUncertaintyMeters', 1), ('getCodeType', 1), ('getGnssNavMessageTypes', 1), ('getMessageId', 1), ('getData', 1), ('setup', 1), ('getActivity', 1)]"	"[('CtsPermissionTestCases', 11), ('CtsOpenGLTestCases', 10), ('CtsSecurityHostTestCases', 7), ('CtsAppWidgetTestCases', 2), ('CtsMediaPerformanceClassTestCases', 2), ('CtsTelephonyTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsLocationGnssTestCases', 2), ('CtsWindowManagerDeviceTestCases', 1), ('CtsSustainedPerformanceHostTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsDatabaseTestCases', 1), ('CtsAccountsHostTestCases', 1)]"	""	"android.opengl.cts.OpenGlEsVersionTest"	"getActivity"	"CtsOpenGLTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 10), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/KernelConfigTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPairPerfTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssPseudorangeVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarPowertrain/src/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CompatChangeTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/widget/WidgetTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/MidiTestActivityBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestAcosh.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/IdentityCredentialAuthentication.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/MergeCursorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/HtmlReport.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioOutColdStartLatencyActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CddCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/common/src/android/location/cts/common/TestMeasurementUtil.java', 1)]"	"[('(11,CDD,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,CDD,/android/server/wm/CompatChangeTests.java)', 1), ('(2,CDD,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java)', 1), ('(2,CDD,/com/android/cts/verifier/widget/WidgetTestActivity.java)', 1), ('(3,CDD,/android/appwidget/cts/RequestPinAppWidgetTest.java)', 1), ('(1,CDD,/com/android/cts/verifier/audio/MidiTestActivityBase.java)', 1), ('(3,CDD,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(2,CDD,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(9,CDD,/android/security/cts/KernelConfigTest.java)', 1), ('(3,CDD,/android/renderscript/cts/generated/TestAcosh.java)', 1), ('(2,CDD,/com/android/cts/verifier/security/IdentityCredentialAuthentication.java)', 1), ('(1,CDD,/android/database/cts/MergeCursorTest.java)', 1), ('(3,CDD,/com/android/cts/apicoverage/HtmlReport.java)', 1), ('(2,CDD,/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java)', 1), ('(1,CDD,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(2,CDD,/com/android/cts/verifier/audio/AudioOutColdStartLatencyActivity.java)', 1), ('(20,CDD,/com/android/cts/apicoverage/CddCoverage.java)', 1), ('(1,CDD,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(3,CDD,/android/location/cts/gnss/GnssPseudorangeVerificationTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java)', 1), ('(1,CDD,/android/location/cts/common/TestMeasurementUtil.java)', 1), ('(21,CDD,/android/opengl/cts/OpenGlEsVersionTest.java)', 1)]"	"[('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ble {        install(APK_BLUETOOTH_30);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[{        install(APK_BLUETOOTH_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ermission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PK_BLUETOOTH_NEVER_FOR_LOCATION_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/server/wm/CompatChangeTests.java]:[CDD]:[1]:method_text:[-resizeable portrait activity enters size compat mode after resizing the     * display.     */   ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[CDD]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([2:/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java]:[CDD]:[2]:method_text:[(true);            }        } else super.onActivityResult(requestCode, resultCode, data);    }}])', 1), ('([2:/com/android/cts/verifier/widget/WidgetTestActivity.java]:[CDD]:[2]:method_text:[er.onPause();    }    @Override    protected void onResume() {        super.onResume();    }}])', 1), ('([2:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[2]:method_text:[he extras        assertEquals(""dummy-2"", resultReceiver.result.getStringExtra(""dummy""));    }   ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[1]:method_text:[                AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());    }   ])', 1), ('([1:/com/android/cts/verifier/audio/MidiTestActivityBase.java]:[CDD]:[1]:method_text:[      }            };            mTimeoutTimer.schedule(task, TEST_TIMEOUT_MS);        }    }}])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CDD]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([2:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CDD]:[2]:method_text:[tUnit.NONE);            log.submit(InstrumentationRegistry.getInstrumentation());        }    }}])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[CDD]:[1]:method_text:[ckageManager.FEATURE_TELEPHONY)                && mTelephonyManager.getPhoneCount() > 0;    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[CDD]:[1]:method_text:[mOnPhoneCapabilityChanged = true;                mLock.notify();            }        }    }   ])', 1), ('([3:/android/security/cts/KernelConfigTest.java]:[CDD]:[3]:method_text:[rotector Strong enabled.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[ data is non-executable.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[-space and kernel-space.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[ectures that support it.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[wn to not be vulnerable.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[h to a whitelisted path.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[l enables fs-verity and its built-in signature support.     */    @CddTest(requirement=""9.10"")   ])', 1), ('([3:/android/renderscript/cts/generated/TestAcosh.java]:[CDD]:[3]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/com/android/cts/verifier/security/IdentityCredentialAuthentication.java]:[CDD]:[2]:method_text:[ RuntimeException(""Error encoding CBOR"", e);        }        return baos.toByteArray();    }}])', 1), ('([1:/android/database/cts/MergeCursorTest.java]:[CDD]:[1]:method_text:[tString(columnString));            assertTrue(mergeCursor.isNull(columnBlob));        }    }   ])', 1), ('([3:/com/android/cts/apicoverage/HtmlReport.java]:[CDD]:[3]:method_text:[reamResult result = new StreamResult(out);        transformer.transform(xmlSource, result);    }}])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[IM_SLOT_0);            SimContacts.removeSimAccounts(mResolver, SIM_SLOT_1);        });    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[ut this should not be done for the local account.     */    @CddTest(requirement=""3.18/C-1-4"")   ])', 1), ('([1:/com/android/cts/verifier/camera/its/ItsService.java]:[CDD]:[1]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([2:/com/android/cts/verifier/audio/AudioOutColdStartLatencyActivity.java]:[CDD]:[2]:method_text:[   }        mPlayer.stopStream();        mIsTestRunning = false;        stopOutTimer();    }}])', 1), ('([20:/com/android/cts/apicoverage/CddCoverage.java]:[CDD]:[20]:method_text:[           return String.format(""%s %s#%s"", mTestModule, mTestClass, mTestMethod);        }    }}])', 1), ('([1:/android/host/accounts/BaseMultiUserTest.java]:[CDD]:[1]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([2:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[2]:method_text:[d.   * This tests uses actual data retrieved from Gnss HAL.   */  @CddTest(requirement=""7.3.3"") ])', 1), ('([1:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[1]:method_text:[instant mode"")    @RequiresDevice  // emulated devices do not support real measurements so far.   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[     PERMISSION_CAR_POWERTRAIN_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/location/cts/common/TestMeasurementUtil.java]:[CDD]:[1]:method_text:[      && measurement.hasCodeType()                && ""Q"".equals(measurement.getCodeType());    }}])', 1), ('([2:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[2]:method_text:[       mActivity = mActivityRule.getActivity();    }    @CddTest(requirement=""7.1.4.1/C-0-1"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[3, getMinorVersion(reportedVersion));        }    }    @CddTest(requirement=""7.1.4.1/C-2-2"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[s, es31RequiredList[i]));        }    }    @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[st."",            hasAepFeature, hasAepExtension);    }    @CddTest(requirement=""7.9.2/C-1-4"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[  (major == 3 && minor >= 2) || major > 3);    }    @CddTest(requirement=""7.9.2/C-1-6,C-1-8"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[ns, requiredExtension));            }        }    }    @CddTest(requirement=""7.1.4.1/C-6-1"")   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[3]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/H-1-1"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[4]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/C-1-4"")   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[3]:method_text:[        2 == getMinorVersion(reportedVersion));    }    @CddTest(requirement=""7.1.4.5/C-1-5"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[4]:method_text:[ager();        return pm.hasSystemFeature(PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE);    }}])', 1)]"	""	""	"[('CDD', 54)]"	"[('[android.permission.cts.NearbyDevicesPermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.server.wm.CompatChangeTests createManagedConstrainDisplayApisFlagsSession CtsWindowManagerDeviceTestCases]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis CtsSustainedPerformanceHostTestCases]', 1), ('[com.android.cts.verifier.companion.CompanionDeviceTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.widget.WidgetTestActivity setPassFailButtonClickListeners None]', 1), ('[android.appwidget.cts.RequestPinAppWidgetTest testPinWidget_launcher2 CtsAppWidgetTestCases]', 1), ('[com.android.cts.verifier.audio.MidiTestActivityBase MidiTestActivityBase None]', 1), ('[android.mediapc.cts.MultiEncoderPairPerfTest test720p CtsMediaPerformanceClassTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testIWlanServiceState CtsTelephonyTestCases]', 1), ('[android.security.cts.KernelConfigTest toList CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigStackProtectorStrong CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigROData CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigHardenedUsercopy CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigPAN CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigHardwareMitigations CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigDisableUsermodehelper CtsSecurityHostTestCases]', 1), ('[com.android.cts.verifier.security.IdentityCredentialAuthentication setPassFailButtonClickListeners None]', 1), ('[android.database.cts.MergeCursorTest testGetValues CtsDatabaseTestCases]', 1), ('[android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest testAccountRemovalWithMergedContact_deletesContacts CtsContactsProviderTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[com.android.cts.verifier.audio.AudioOutColdStartLatencyActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.apicoverage.CddCoverage getTestMethods None]', 1), ('[android.host.accounts.BaseMultiUserTest listUsers CtsAccountsHostTestCases]', 1), ('[android.location.cts.gnss.GnssPseudorangeVerificationTest testPseudorangeValue CtsLocationGnssTestCases]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest isNotNull None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest testPermissionCarPowertrainGranted None]', 1), ('[android.location.cts.common.TestMeasurementUtil assertAll None]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testOpenGlEsVersion CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testExtensionPack CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testOpenGlEsVersionForVrHighPerformance CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensionsForVrHighPerformance CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForHdrCapableDisplay CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredGLESVersion CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForWideColorDisplay CtsOpenGLTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-5-3"	"9.8.2/H-5-3"	"09080200.720503"	"""[9.8.2/H-5-3] MUST not hide the camera indicator for system apps that have visible user interfaces or direct user interaction. <h4 id=""226_developer_tools_and_options_compatibility"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-11"	"9.8/H-1-11"	"09080000.720111"	"""[9.8/H-1-11] MUST log the number of bytes included in every transmission from the hotword detection service to allow inspectability for security researchers. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-2-1"	"9.5/C-2-1"	"09050000.670201"	"""C-2-1] MUST have separate and isolated shared application storage (a.k.a. /sdcard) directories for each user instance."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-1-3"	"8.2/H-1-3"	"08020000.720103"	"""[8.2/H-1-3] MUST ensure a sequential read performance of at least 200 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-5-2"	"9.8.2/H-5-2"	"09080200.720502"	"""[9.8.2/H-5-2] MUST display Recent and Active apps using camera as returned from PermissionManager.getIndicatorAppOpUsageData(), along with any attribution messages associated with them. """	""	""	"PermissionManager.getIndicatorAppOpUsageData getIndicatorAppOpUsageData()"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-2-1"	"9.8/H-2-1"	"09080000.720201"	"""[9.8/H-2-1] MUST provide explicit notice to the user for each hotword phrase supported. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-10"	"9.9.3/C-1-10"	"09090300.670110"	"""C-1-10] MUST be unique and distinct, in other words no user&#39;s CE or DE key matches any other user&#39;s CE or DE keys."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-4-4"	"9.8.2/H-4-4"	"09080200.720404"	"""[9.8.2/H-4-4] MUST display the list of Recent and Active apps using the microphone as returned from PermissionManager.getIndicatorAppOpUsageData(), along with any attribution messages associated with them. If Handheld device implementations declare android.hardware.camera.any, they: """	""	""	"PermissionManager.getIndicatorAppOpUsageData getIndicatorAppOpUsageData() android.hardware.camera.any"	""	""	""	""	"[('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('com.android.cts.verifier.features.FeatureSummaryActivity', 1)]"	"[('hashCode', 2), ('getDevice', 1), ('getStdout', 1), ('trim', 1)]"	"[('CtsAdbManagerHostTestCases', 1)]"	""	"com.android.cts.verifier.features.FeatureSummaryActivity"	"hashCode"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/features/FeatureSummaryActivity.java', 1)]"	"[('(1,android.hardware.camera.any,/android/adbmanager/cts/AdbManagerHostDeviceTest.java)', 1), ('(1,android.hardware.camera.any,/com/android/cts/verifier/features/FeatureSummaryActivity.java)', 1)]"	"[('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.camera.any]:[1]:method_text:[has-feature "" + feature);        return Boolean.parseBoolean(result.getStdout().trim());    }   ])', 1), ('([1:/com/android/cts/verifier/features/FeatureSummaryActivity.java]:[android.hardware.camera.any]:[1]:method_text:[lse {            ((TextView) (findViewById(R.id.fs_warnings))).setText(warnings);        }    }}])', 1)]"	""	""	"[('android.hardware.camera.any', 2)]"	"[('[com.android.cts.verifier.features.FeatureSummaryActivity setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-6"	"9.8/H-1-6"	"09080000.720106"	"""[9.8/H-1-6] MUST NOT allow more than 100 bytes of data to be transmitted out of the hotword detection service on each successful hotword result. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-2"	"7.5/H-1-2"	"07050000.720102"	"""[7.5/H-1-2] MUST have a primary front facing camera with a resolution of at least 4 megapixels supporting video capture at 1080p@30fps. The primary front-facing camera is the front-facing camera with the lowest camera ID.  | [7.5/H-1-2] MUST have a primary front facing camera with a resolution of at least 5 megapixels and support video capture at 1080p@30fps. The primary front-facing camera is the front-facing camera with the lowest camera ID. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-3-4"	"9.5/C-3-4"	"09050000.670304"	"""C-3-4] MUST NOT allow the additional user profile to be created if there is a Device Owner provisioned (see section 3.9.1) or allow a Device Owner to be provisioned without removing the additional user profile first. <h3 id=""96_premium_sms_warning"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Application Data Migration"	"9.1"	"C-1-1"	"9.1/C-1-1"	"09010000.670101"	"""C-1-1] MUST NOT have the following permissions silently granted by the admin: Location (ACCESS_BACKGROUND_LOCATION, ACCESS_COARSE_LOCATION, ACCESS_FINE_LOCATION). Camera (CAMERA) Microphone (RECORD_AUDIO) Body sensor (BODY_SENSORS) Physical activity (ACTIVITY_RECOGNITION) If device implementations provide a user affordance to choose which apps can draw on top of other apps with an activity that handles the ACTION_MANAGE_OVERLAY_PERMISSION intent, they: | C-1-1] MUST declare the platform feature flag android.software.verified_boot. | C-1-1] MUST back up the keystore implementation with an isolated execution environment. | C-1-1] MUST provide the user an option to enter Safe Boot Mode in such a way that is uninterruptible from third-party apps installed on the device, except when the third-party app is a Device Policy Controller and has set the UserManager.DISALLOW_SAFE_BOOT flag as true. | C-1-1] MUST NOT initiate transfers of application data from devices on which the user has not set a primary authentication as described in 9.11.1 Secure Lock Screen and Authentication."""	""	""	"ACCESS_FINE_LOCATION UserManager.DISALLOW ACTION_MANAGE_OVERLAY_PERMISSION DISALLOW_SAFE_BOOT ACCESS_COARSE_LOCATION CAMERA RECORD_AUDIO ACCESS_BACKGROUND_LOCATION android.software.verified ACTIVITY_RECOGNITION BODY_SENSORS"	""	""	""	""	"[('android.permission.cts.NearbyDevicesPermissionTest', 16), ('android.hardware.camera2.cts.CameraManagerTest', 12), ('android.permission2.cts.RestrictedPermissionsTest', 10), ('com.android.cts.devicepolicy.PermissionUtils', 5), ('com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest', 5), ('com.android.cts.managedprofile.DisallowSharingIntoProfileTest', 3), ('android.uirendering.cts.testclasses.CameraTests', 2), ('com.android.cts.verifier.sensors.sixdof.Renderer.RenderUtils.ModelMatrixCalculator', 1), ('android.jobscheduler.cts.TriggerContentTest', 1)]"	"[('getContext', 43), ('waitForBroadcast', 15), ('getPackageManager', 11), ('getName', 10), ('getInstrumentation', 8), ('Intent', 5), ('click', 5), ('myUserHandle', 4), ('setUp', 4), ('getRequiredTranslations', 2), ('enableBluetooth', 2), ('supportsBluetooth', 2), ('getAdapter', 2), ('myPid', 2), ('tearDown', 2), ('build', 2), ('setUpOnce', 2), ('CommandBroadcastReceiver', 2), ('IntentFilter', 2), ('tearDownOnce', 2), ('shareUidBetweenRestrictedAndNotRestrictedApp', 2), ('getModelMatrix', 1), ('hashCode', 1), ('getPathSegments', 1), ('getPath', 1), ('toString', 1), ('getScannedPath', 1), ('getScannedUri', 1), ('countDown', 1), ('getContentResolver', 1), ('delete', 1), ('makePhotosJobInfo', 1)]"	"[('CtsPermissionTestCases', 16), ('CtsCameraTestCases', 12), ('CtsPermission2TestCases', 10), ('CtsUiRenderingTestCases', 2), ('CtsJobSchedulerTestCases', 1)]"	""	"android.permission2.cts.RestrictedPermissionsTest"	"shareUidBetweenRestrictedAndNotRestrictedApp"	"CtsPermission2TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 10), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/common/src/com/android/cts/devicepolicy/PermissionUtils.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/CameraTests.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/ModelMatrixCalculator.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/TriggerContentTest.java', 1)]"	"[('(10,CAMERA,/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/ModelMatrixCalculator.java)', 1), ('(1,ACCESS_FINE_LOCATION,/com/android/cts/devicepolicy/PermissionUtils.java)', 1), ('(1,ACCESS_COARSE_LOCATION,/com/android/cts/devicepolicy/PermissionUtils.java)', 1), ('(2,CAMERA,/com/android/cts/devicepolicy/PermissionUtils.java)', 1), ('(2,RECORD_AUDIO,/com/android/cts/devicepolicy/PermissionUtils.java)', 1), ('(1,ACCESS_BACKGROUND_LOCATION,/com/android/cts/devicepolicy/PermissionUtils.java)', 1), ('(8,ACCESS_FINE_LOCATION,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(8,ACCESS_BACKGROUND_LOCATION,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(58,UserManager.DISALLOW,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(2,DISALLOW_SAFE_BOOT,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(2,CAMERA,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(1,RECORD_AUDIO,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(2,UserManager.DISALLOW,/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java)', 1), ('(7,CAMERA,/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java)', 1), ('(7,CAMERA,/android/uirendering/cts/testclasses/CameraTests.java)', 1), ('(471,CAMERA,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(1,CAMERA,/android/jobscheduler/cts/TriggerContentTest.java)', 1), ('(6,ACCESS_FINE_LOCATION,/android/permission2/cts/RestrictedPermissionsTest.java)', 1), ('(4,ACCESS_BACKGROUND_LOCATION,/android/permission2/cts/RestrictedPermissionsTest.java)', 1)]"	"[('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[       ACCESS_BACKGROUND_LOCATION)));        assertAllRestrictedPermissionWhitelisted();    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ions.singleton(ACCESS_FINE_LOCATION));        assertNoRestrictedPermissionWhitelisted();    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[       ACCESS_BACKGROUND_LOCATION)));        assertAllRestrictedPermissionWhitelisted();    }   ])', 2), ('([10:/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/ModelMatrixCalculator.java]:[CAMERA]:[10]:method_text:[ protected float[] getRequiredTranslations() {        return new float[]{0.0f, 0.0f, 0.0f};    }}])', 1), ('([1:/com/android/cts/devicepolicy/PermissionUtils.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[break;            }        }        assertTrue(""Couldn\'t find any button"", foundButton);    }}])', 1), ('([1:/com/android/cts/devicepolicy/PermissionUtils.java]:[ACCESS_COARSE_LOCATION]:[1]:method_text:[break;            }        }        assertTrue(""Couldn\'t find any button"", foundButton);    }}])', 1), ('([2:/com/android/cts/devicepolicy/PermissionUtils.java]:[CAMERA]:[2]:method_text:[break;            }        }        assertTrue(""Couldn\'t find any button"", foundButton);    }}])', 1), ('([2:/com/android/cts/devicepolicy/PermissionUtils.java]:[RECORD_AUDIO]:[2]:method_text:[break;            }        }        assertTrue(""Couldn\'t find any button"", foundButton);    }}])', 1), ('([1:/com/android/cts/devicepolicy/PermissionUtils.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[break;            }        }        assertTrue(""Couldn\'t find any button"", foundButton);    }}])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), (""([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[uetooth     * scan results; they'd always need to involve the user to gain permissions.     */   ])"", 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[               + "" com.android.bluetooth/.btservice.AdapterService set-test-mode disabled"");    }}])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), (""([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[uetooth     * scan results; they'd always need to involve the user to gain permissions.     */   ])"", 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[               + "" com.android.bluetooth/.btservice.AdapterService set-test-mode disabled"");    }}])', 1), ('([57:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[UserManager.DISALLOW]:[57]:method_text:[abledRestrictions();    /**     * Test restrictions that should be enabled by default     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[UserManager.DISALLOW]:[1]:method_text:[;        mDevicePolicyManager.clearUserRestriction(ADMIN_RECEIVER_COMPONENT, restriction);    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[DISALLOW_SAFE_BOOT]:[2]:method_text:[abledRestrictions();    /**     * Test restrictions that should be enabled by default     */   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[CAMERA]:[2]:method_text:[abledRestrictions();    /**     * Test restrictions that should be enabled by default     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[RECORD_AUDIO]:[1]:method_text:[abledRestrictions();    /**     * Test restrictions that should be enabled by default     */   ])', 1), ('([2:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[UserManager.DISALLOW]:[2]:method_text:[vityInfo.name)) {                return true;            }        }        return false;    }}])', 1), ('([5:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[CAMERA]:[5]:method_text:[getSystemService(DevicePolicyManager.class);        assertNotNull(mDevicePolicyManager);    }   ])', 1), ('([2:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[CAMERA]:[2]:method_text:[     * {@link #DisallowSharingIntoProfileTest} class for the mechanism behind this test.     */   ])', 1), ('([2:/android/uirendering/cts/testclasses/CameraTests.java]:[CAMERA]:[2]:method_text:[;@MediumTest@RunWith(AndroidJUnit4.class)public class CameraTests extends ActivityTestBase {   ])', 1), ('([5:/android/uirendering/cts/testclasses/CameraTests.java]:[CAMERA]:[5]:method_text:[new RectVerifier(Color.WHITE, Color.BLUE,                        new Rect(0, 0, 100, 50)));    }}])', 1), ('([50:/android/hardware/camera2/cts/CameraManagerTest.java]:[CAMERA]:[50]:method_text:[fail(""Invalid CameraAccessException code: "" + reason);        return -1; // unreachable    }   ])', 1), ('([53:/android/hardware/camera2/cts/CameraManagerTest.java]:[CAMERA]:[53]:method_text:[      }    }    // Test: that properties can be queried from each device, without exceptions.   ])', 1), ('([7:/android/hardware/camera2/cts/CameraManagerTest.java]:[CAMERA]:[7]:method_text:[    }    // Test: that properties queried between the Java SDK and the C++ NDK are equivalent.   ])', 1), ('([13:/android/hardware/camera2/cts/CameraManagerTest.java]:[CAMERA]:[13]:method_text:[t lensFacing);    // Test: that an exception is thrown if an invalid device id is passed down.   ])', 1), ('([6:/android/hardware/camera2/cts/CameraManagerTest.java]:[CAMERA]:[6]:method_text:[       }    }    // Test: that each camera device can be opened one at a time, several times.   ])', 1), (""([27:/android/hardware/camera2/cts/CameraManagerTest.java]:[CAMERA]:[27]:method_text:[ be open at the same time, or the right error state     * is set if this can't be done.     */   ])"", 1), ('([98:/android/hardware/camera2/cts/CameraManagerTest.java]:[CAMERA]:[98]:method_text:[pening the same device multiple times and make sure the right     * error state is set.     */   ])', 1), (""([37:/android/hardware/camera2/cts/CameraManagerTest.java]:[CAMERA]:[37]:method_text:[effect, and unregistering     * a listener that isn't registered should have no effect.     */   ])"", 1), ('([10:/android/hardware/camera2/cts/CameraManagerTest.java]:[CAMERA]:[10]:method_text:[Listener);    }    /**     * Test that the availability callbacks fire when expected     */   ])', 1), ('([148:/android/hardware/camera2/cts/CameraManagerTest.java]:[CAMERA]:[148]:method_text:[    // Verify no LEGACY-level devices appear on devices first launched in the Q release or newer   ])', 1), ('([8:/android/hardware/camera2/cts/CameraManagerTest.java]:[CAMERA]:[8]:method_text:[  hardwareLevel != CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY);        }    }   ])', 1), ('([14:/android/hardware/camera2/cts/CameraManagerTest.java]:[CAMERA]:[14]:method_text:[        throw new IOException(""Could not read stdout of command:\xa0"" + command, e);        }    }}])', 1), ('([1:/android/jobscheduler/cts/TriggerContentTest.java]:[CAMERA]:[1]:method_text:[ize(); i++) {            assertEquals(expectedPath.get(i), actualPath.get(i));        }    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[c static void tearDownOnce() {        getContext().unregisterReceiver(sCommandReceiver);    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[c static void tearDownOnce() {        getContext().unregisterReceiver(sCommandReceiver);    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_BACKGROUND_LOCATION]:[1]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 1)]"	""	""	"[('CAMERA', 20), ('ACCESS_FINE_LOCATION', 15), ('ACCESS_BACKGROUND_LOCATION', 13), ('UserManager.DISALLOW', 3), ('RECORD_AUDIO', 2), ('ACCESS_COARSE_LOCATION', 1), ('DISALLOW_SAFE_BOOT', 1)]"	"[('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest assertClearDefaultRestrictions None]', 4), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled CtsPermissionTestCases]', 2), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation CtsPermissionTestCases]', 2), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation CtsPermissionTestCases]', 2), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation CtsPermissionTestCases]', 2), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation CtsPermissionTestCases]', 2), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation CtsPermissionTestCases]', 2), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Upgrade CtsPermissionTestCases]', 2), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Downgrade CtsPermissionTestCases]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall29 CtsPermission2TestCases]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall22 CtsPermission2TestCases]', 2), ('[android.permission2.cts.RestrictedPermissionsTest isTrue CtsPermission2TestCases]', 2), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest testBroadcast None]', 1), ('[com.android.cts.managedprofile.DisallowSharingIntoProfileTest testDisableSharingIntoProfile None]', 1), ('[com.android.cts.managedprofile.DisallowSharingIntoProfileTest testSetUp None]', 1), ('[android.uirendering.cts.testclasses.CameraTests testBasicTranslate CtsUiRenderingTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest NoopCameraListener CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerGetDeviceIdList CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerGetCameraCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraCharacteristicsNdkFromSdk CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerInvalidDevice CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerOpenCamerasSerially CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerOpenAllCameras CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerOpenCameraTwice CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerListener CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerListenerCallbacks CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testNoLegacyOnQ CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerWithDnD CtsCameraTestCases]', 1), ('[android.jobscheduler.cts.TriggerContentTest exists CtsJobSchedulerTestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall22 CtsPermission2TestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-1-2"	"8.2/H-1-2"	"08020000.720102"	"""[8.2/H-1-2] MUST ensure a random write performance of at least 10 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-6"	"7.5/H-1-6"	"07050000.720106"	"""[7.5/H-1-6] MUST have camera2 startup latency (open camera to first preview frame) &lt; 600ms as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. If Handheld device implementations return android.os.Build.VERSION_CODES.S for android.os.Build.VERSION_CODES.MEDIA_PERFORMANCE_CLASS, then they:  | [7.5/H-1-6] MUST have camera2 startup latency (open camera to first preview frame) &lt; 500 ms as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. """	""	""	"ITS android.os.Build.VERSION android.os.Build.VERSION_CODES.MEDIA VERSION_CODES CTS MEDIA_PERFORMANCE_CLASS"	""	""	""	""	"[('android.widget.cts.ListPopupWindowTest', 8), ('test.java.com.android.bedstead.nene.permissions.PermissionsTest', 8), ('android.jni.cts.JniStaticTest', 3), ('android.media.cts.bitstreams.HevcYuv444BitstreamsFullTest', 3), ('android.view.cts.ViewGroupOverlayTest', 3), ('com.android.server.cts.FingerprintIncidentTest', 2), ('android.location.cts.gnss.asn1.supl2.ulp_components.NMR', 2), ('com.android.cts.verifier.bluetooth.BleCocClientService', 2), ('android.content.cts.util.XmlUtils', 2), ('android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.SessionCapabilities', 2), ('android.location.cts.gnss.asn1.supl2.ver2_ulp_components.MCC_MNC_Digit', 2), ('android.hardware.cts.helpers.sensorverification.EventBasicVerification', 2), ('android.appsecurity.cts.MatcherUtils', 2), ('android.telephony.cts.util.CarrierPrivilegeUtils', 1), ('android.widget.cts.util.TestUtilsMatchers', 1), ('android.appwidget.cts.DarkTextThemeTest', 1), ('android.widget.cts.ResourceCursorTreeAdapterTest', 1), ('android.app.usage.cts.test1.SomeActivity', 1), ('com.android.cts.host.blob.StatsdBlobStoreAtomTest', 1), ('android.autofillservice.cts.unittests.SavedDatasetsInfoTest', 1), ('android.opengl.cts.RendererTenShaderTest', 1), ('android.hardware.input.cts.tests.GameviceGv186Test', 1), ('android.server.wm.DisplayTests', 1), ('android.text.method.cts.DialerKeyListenerTest', 1), ('android.keystore.cts.performance.AesCipherPerformanceTest', 1), ('android.content.cts.ClipDataTest', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.RenderUtils.ModelMatrixCalculator', 1), ('com.android.cts.releaseparser.XmlParser', 1), ('com.android.tests.atomicinstall.SessionAbandonBehaviorTest', 1), ('android.content.cts.ContextTestBase', 1), ('android.telephony.cts.CellBroadcastIntentsTest', 1), ('com.android.cts.devicepolicy.PermissionUtils', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.RenderUtils.DrawParameters', 1), ('android.widget.cts.ViewFlipperTest', 1), ('android.text.cts.PrecomputedTextTest', 1), ('android.assist.cts.LifecycleTest', 1), ('android.cts.install.SessionRule', 1), ('RestoreAnyVersionBackupAgent', 1), ('android.autofillservice.cts.inline.DatasetFilteringInlineTest', 1), ('android.compat.hiddenapi.cts.HiddenApiUsedActivity', 1), ('android.jobscheduler.cts.BaseJobSchedulerTest', 1), ('android.widget.cts.SwitchCtsActivity', 1), ('android.widget.cts.RatingBarTest', 1), ('com.android.cts.verifier.managedprovisioning.KeyguardDisabledFeaturesActivity', 1), ('android.view.accessibility.cts.AccessibilityServiceInfoTest', 1), ('java.android.signature.cts.api.HiddenApiTest', 1), ('android.autofillservice.cts.activities.PasswordOnlyActivity', 1), ('android.service.resolver.cts.ResolverTargetTest', 1), ('android.os.cts.DeadObjectExceptionTest', 1), ('android.database.cts.CursorJoinerTest', 1)]"	"[('getContext', 11), ('setUp', 8), ('super', 6), ('getTag', 6), ('getInstrumentation', 6), ('onCreate', 6), ('getPackageManager', 5), ('setup', 5), ('toString', 5), ('getDevice', 4), ('getName', 4), ('getDepth', 4), ('length', 4), ('getSensor', 4), ('countDown', 3), ('tearDown', 3), ('waitForBroadcast', 3), ('getActivity', 3), ('close', 2), ('bitstreams', 2), ('getRequiredTranslations', 2), ('NMR', 2), ('getAdapter', 2), ('getBluetoothLeScanner', 2), ('Handler', 2), ('getClass', 2), ('next', 2), ('decode', 2), ('readMapXml', 2), ('FastXmlSerializer', 2), ('name', 2), ('endDocument', 2), ('SessionCapabilities', 2), ('retrieveSessionId', 2), ('MCC_MNC_Digit', 2), ('getExpectedSamplingPeriodUs', 2), ('getMaxReportLatencyUs', 2), ('getFifoReservedEventCount', 2), ('max', 2), ('getFifoMaxEventCount', 2), ('getAllowedSensorStartDelay', 2), ('getContentView', 2), ('login', 2), ('getIntent', 2), ('MatcherUtils', 2), ('notNullValue', 2), ('run', 2), ('getSimpleName', 1), ('getAction', 1), ('waitForCarrierPrivilegeChanged', 1), ('hasCarrierPrivileges', 1), ('getOpPackageName', 1), ('toByteArray', 1), ('inAscendingOrder', 1), ('size', 1), ('hasAppWidgets', 1), ('getTargetContext', 1), ('getWindow', 1), ('glCreateProgram', 1), ('glGetError', 1), ('getModelMatrix', 1), ('getType', 1), ('setAdditionalInfo', 1), ('getBytes', 1), ('getUiAutomation', 1), ('getApplicationContext', 1), ('Intent', 1), ('click', 1), ('getOverlay', 1), ('getViewMatrix', 1), ('getProjectionMatrix', 1), ('getLight', 1), ('TextPaint', 1), ('customSetup', 1), ('SessionRule', 1), ('getFilesDir', 1), ('before', 1), ('createNewFile', 1), ('cleanUp', 1), ('toPath', 1), ('readLine', 1), ('retrieveSessionInfo', 1), ('getPackageInstaller', 1), ('getSessionInfo', 1), ('AccessibilityDumpOnFailureRule', 1), ('init', 1), ('loadFilters', 1), ('focusOnPassword', 1), ('requestFocus', 1), ('getText', 1), ('setupDatabase', 1), ('delete', 1)]"	"[('CtsWidgetTestCases', 13), ('CtsLocationGnssTestCases', 6), ('CtsContentTestCases', 4), ('CtsAutoFillServiceTestCases', 3), ('CtsJniTestCases', 3), ('CtsMediaBitstreamsTestCases', 3), ('CtsViewTestCases', 3), ('CtsTelephonyTestCases', 2), ('CtsIncidentHostTestCases', 2), ('CtsTextTestCases', 2), ('CtsSensorTestCases', 2), ('CtsAppSecurityHostTestCases', 2), ('CtsAppWidgetTestCases', 1), ('CtsBlobStoreHostTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsHardwareTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsAtomicInstallTestCases', 1), ('CtsAssistTestCases', 1), ('CtsJobSchedulerTestCases', 1), ('CtsAccessibilityTestCases', 1), ('CtsResolverServiceTestCases', 1), ('CtsDatabaseTestCases', 1)]"	""	"test.java.com.android.bedstead.nene.permissions.PermissionsTest"	"tearDown"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ListPopupWindowTest.java', 8), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/jni/src/android/jni/cts/JniStaticTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/src/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewGroupOverlayTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/FingerprintIncidentTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_components/NMR.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleCocClientService.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/util/XmlUtils.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/SessionCapabilities.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/MCC_MNC_Digit.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/MajorVersionApp/src-common/com/android/cts/majorversion/VersionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/MatcherUtils.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/util/CarrierPrivilegeUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/util/TestUtilsMatchers.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/DarkTextThemeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ResourceCursorTreeAdapterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/TestApp1/src/android/app/usage/cts/test1/SomeActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/blobstore/src/com/android/cts/host/blob/StatsdBlobStoreAtomTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/SavedDatasetsInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/RendererTenShaderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/GameviceGv186Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/DialerKeyListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/AesCipherPerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ClipDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/ModelMatrixCalculator.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/XmlParser.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/atomicinstall/src/com/android/tests/atomicinstall/SessionAbandonBehaviorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContextTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellBroadcastIntentsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/common/src/com/android/cts/devicepolicy/PermissionUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ViewFlipperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/PrecomputedTextTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/assist/src/android/assist/cts/LifecycleTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/install/app/src/android/cts/install/SessionRule.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/RestoreAnyVersion/src/RestoreAnyVersionBackupAgent.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/DatasetFilteringInlineTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appcompat/hiddenapi/app/src/android/compat/hiddenapi/cts/HiddenApiUsedActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/BaseJobSchedulerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SwitchCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RatingBarTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/KeyguardDisabledFeaturesActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityServiceInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/src/java/android/signature/cts/api/HiddenApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/activities/PasswordOnlyActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/resolverservice/src/android/service/resolver/cts/ResolverTargetTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/DeadObjectExceptionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/CursorJoinerTest.java', 1)]"	"[('(1,CTS,/android/telephony/cts/util/CarrierPrivilegeUtils.java)', 1), ('(1,CTS,/android/widget/cts/util/TestUtilsMatchers.java)', 1), ('(3,CTS,/android/appwidget/cts/DarkTextThemeTest.java)', 1), ('(1,CTS,/android/widget/cts/ResourceCursorTreeAdapterTest.java)', 1), ('(1,ITS,/com/android/server/cts/FingerprintIncidentTest.java)', 1), ('(1,CTS,/com/android/server/cts/FingerprintIncidentTest.java)', 1), ('(1,CTS,/android/app/usage/cts/test1/SomeActivity.java)', 1), ('(4,CTS,/com/android/cts/host/blob/StatsdBlobStoreAtomTest.java)', 1), ('(1,CTS,/android/autofillservice/cts/unittests/SavedDatasetsInfoTest.java)', 1), ('(6,ITS,/android/widget/cts/ListPopupWindowTest.java)', 1), ('(15,CTS,/android/widget/cts/ListPopupWindowTest.java)', 1), ('(1,CTS,/android/opengl/cts/RendererTenShaderTest.java)', 1), ('(2,CTS,/android/hardware/input/cts/tests/GameviceGv186Test.java)', 1), ('(1,ITS,/android/jni/cts/JniStaticTest.java)', 1), ('(1,VERSION_CODES,/android/jni/cts/JniStaticTest.java)', 1), ('(1,CTS,/android/jni/cts/JniStaticTest.java)', 1), ('(1,CTS,/android/server/wm/DisplayTests.java)', 1), ('(1,CTS,/android/text/method/cts/DialerKeyListenerTest.java)', 1), ('(12,ITS,/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java)', 1), ('(3,CTS,/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java)', 1), ('(2,CTS,/android/keystore/cts/performance/AesCipherPerformanceTest.java)', 1), ('(1,CTS,/android/content/cts/ClipDataTest.java)', 1), ('(6,CTS,/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/ModelMatrixCalculator.java)', 1), ('(2,CTS,/com/android/cts/releaseparser/XmlParser.java)', 1), ('(8,ITS,/android/location/cts/gnss/asn1/supl2/ulp_components/NMR.java)', 1), ('(6,CTS,/android/location/cts/gnss/asn1/supl2/ulp_components/NMR.java)', 1), ('(5,CTS,/com/android/tests/atomicinstall/SessionAbandonBehaviorTest.java)', 1), ('(1,VERSION_CODES,/com/android/cts/verifier/bluetooth/BleCocClientService.java)', 1), ('(30,CTS,/com/android/cts/verifier/bluetooth/BleCocClientService.java)', 1), ('(3,ITS,/android/content/cts/util/XmlUtils.java)', 1), ('(1,CTS,/android/content/cts/util/XmlUtils.java)', 1), ('(1,CTS,/android/content/cts/ContextTestBase.java)', 1), ('(1,CTS,/android/telephony/cts/CellBroadcastIntentsTest.java)', 1), ('(4,CTS,/com/android/cts/devicepolicy/PermissionUtils.java)', 1), ('(2,ITS,/android/view/cts/ViewGroupOverlayTest.java)', 1), ('(6,CTS,/android/view/cts/ViewGroupOverlayTest.java)', 1), ('(2,CTS,/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java)', 1), ('(3,CTS,/android/widget/cts/ViewFlipperTest.java)', 1), ('(26,ITS,/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/SessionCapabilities.java)', 1), ('(9,CTS,/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/SessionCapabilities.java)', 1), ('(1,CTS,/android/text/cts/PrecomputedTextTest.java)', 1), ('(1,CTS,/android/assist/cts/LifecycleTest.java)', 1), ('(3,CTS,/android/cts/install/SessionRule.java)', 1), ('(1,CTS,/RestoreAnyVersionBackupAgent.java)', 1), ('(8,ITS,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/MCC_MNC_Digit.java)', 1), ('(5,CTS,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/MCC_MNC_Digit.java)', 1), ('(1,VERSION_CODES,/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java)', 1), ('(6,CTS,/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java)', 1), ('(6,CTS,/android/autofillservice/cts/inline/DatasetFilteringInlineTest.java)', 1), ('(1,CTS,/android/compat/hiddenapi/cts/HiddenApiUsedActivity.java)', 1), ('(5,CTS,/android/jobscheduler/cts/BaseJobSchedulerTest.java)', 1), ('(3,CTS,/android/widget/cts/SwitchCtsActivity.java)', 1), ('(4,CTS,/android/widget/cts/RatingBarTest.java)', 1), ('(4,CTS,/com/android/cts/verifier/managedprovisioning/KeyguardDisabledFeaturesActivity.java)', 1), ('(4,CTS,/android/view/accessibility/cts/AccessibilityServiceInfoTest.java)', 1), ('(2,CTS,-common/com/android/cts/majorversion/VersionTest.java)', 1), ('(8,CTS,/java/android/signature/cts/api/HiddenApiTest.java)', 1), ('(2,CTS,/android/autofillservice/cts/activities/PasswordOnlyActivity.java)', 1), ('(1,CTS,/android/service/resolver/cts/ResolverTargetTest.java)', 1), ('(1,ITS,/android/appsecurity/cts/MatcherUtils.java)', 1), ('(1,CTS,/android/appsecurity/cts/MatcherUtils.java)', 1), ('(1,CTS,/android/os/cts/DeadObjectExceptionTest.java)', 1), ('(1,CTS,/android/database/cts/CursorJoinerTest.java)', 1), ('(9,VERSION_CODES,/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java)', 1)]"	"[('([4:/android/widget/cts/ListPopupWindowTest.java]:[CTS]:[4]:method_text:[ectedListener);        verifyNoMoreInteractions(mPopupWindowBuilder.mOnDismissListener);    }   ])', 2), ('([1:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[VERSION_CODES]:[1]:method_text:[(PERMISSION_HELD_BY_SHELL))                    .isEqualTo(PERMISSION_GRANTED);        }    }   ])', 2), ('([1:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[VERSION_CODES]:[1]:method_text:[withoutPermission(                        DECLARED_PERMISSION_NOT_HELD_BY_SHELL_PRE_S));    }   ])', 2), ('([1:/android/telephony/cts/util/CarrierPrivilegeUtils.java]:[CTS]:[1]:method_text:[         changeCarrierPrivileges(c, subId, false /* lose */, false /* isShell */);        }    }}])', 1), ('([1:/android/widget/cts/util/TestUtilsMatchers.java]:[CTS]:[1]:method_text:[                  }                }                return true;            }        };    }}])', 1), ('([3:/android/appwidget/cts/DarkTextThemeTest.java]:[CTS]:[3]:method_text:[ivity, mAppWidgetId, providerInfo);        mActivity.setContentView(mAppWidgetHostView);    }   ])', 1), ('([1:/android/widget/cts/ResourceCursorTreeAdapterTest.java]:[CTS]:[1]:method_text:[ (ViewGroup) layoutInflater.inflate(R.layout.cursoradapter_host, null);    }    @UiThreadTest   ])', 1), ('([1:/com/android/server/cts/FingerprintIncidentTest.java]:[ITS]:[1]:method_text:[rly outputs its dump state. */public class FingerprintIncidentTest extends ProtoDumpTestCase {   ])', 1), ('([1:/com/android/server/cts/FingerprintIncidentTest.java]:[CTS]:[1]:method_text:[rly outputs its dump state. */public class FingerprintIncidentTest extends ProtoDumpTestCase {   ])', 1), ('([1:/android/app/usage/cts/test1/SomeActivity.java]:[CTS]:[1]:method_text:[nstanceState);        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);    }}])', 1), ('([4:/com/android/cts/host/blob/StatsdBlobStoreAtomTest.java]:[CTS]:[4]:method_text:[());        ReportUtils.clearReports(getDevice());        uninstallPackage(TARGET_PKG);    }   ])', 1), ('([1:/android/autofillservice/cts/unittests/SavedDatasetsInfoTest.java]:[CTS]:[1]:method_text:[link SavedDatasetsInfo}. */@RunWith(AndroidJUnit4.class)public class SavedDatasetsInfoTest {   ])', 1), ('([2:/android/widget/cts/ListPopupWindowTest.java]:[ITS]:[2]:method_text:[  verify(mockContainerClickListener, times(setupAsModal ? 0 : 1)).onClick(mainContainer);    }   ])', 1), ('([1:/android/widget/cts/ListPopupWindowTest.java]:[ITS]:[1]:method_text:[r.mOnDismissListener, never()).onDismiss();        assertTrue(mPopupWindow.isShowing());    }   ])', 1), ('([3:/android/widget/cts/ListPopupWindowTest.java]:[ITS]:[3]:method_text:[pupWindow.isShowing())                return;            mPopupWindow.dismiss();        }    }}])', 1), ('([5:/android/widget/cts/ListPopupWindowTest.java]:[CTS]:[5]:method_text:[ch (Throwable t) {                throw new RuntimeException(t);            }        }    }   ])', 1), ('([1:/android/widget/cts/ListPopupWindowTest.java]:[CTS]:[1]:method_text:[  verify(mockContainerClickListener, times(setupAsModal ? 0 : 1)).onClick(mainContainer);    }   ])', 1), ('([1:/android/widget/cts/ListPopupWindowTest.java]:[CTS]:[1]:method_text:[pupWindow.isShowing())                return;            mPopupWindow.dismiss();        }    }}])', 1), ('([1:/android/opengl/cts/RendererTenShaderTest.java]:[CTS]:[1]:method_text:[.glLinkProgram(mProgram);        mError = GLES20.glGetError();        mLatch.countDown();    }}])', 1), ('([2:/android/hardware/input/cts/tests/GameviceGv186Test.java]:[CTS]:[2]:method_text:[  expectedEvent.getAxisValue(axis), actualEvent.getAxisValue(axis), TOLERANCE);        }    }   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[ITS]:[1]:method_text:[sibility. Internal platform libraries should not     * be accessible from the jni code.     */   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[VERSION_CODES]:[1]:method_text:[    *     * This test ensures that dlopen fail with a target version SDK of Q or above.     */   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[CTS]:[1]:method_text:[sibility. Internal platform libraries should not     * be accessible from the jni code.     */   ])', 1), (""([1:/android/server/wm/DisplayTests.java]:[CTS]:[1]:method_text:[ that the global configuration is equal to the default display's override configuration.     */   ])"", 1), ('([1:/android/text/method/cts/DialerKeyListenerTest.java]:[CTS]:[1]:method_text:[t@RunWith(AndroidJUnit4.class)public class DialerKeyListenerTest extends KeyListenerTestCase {   ])', 1), ('([10:/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java]:[ITS]:[10]:method_text:[packageToRun, boolean enforce) {        super(prefix, path, pkg, packageToRun, enforce);    }   ])', 1), ('([2:/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java]:[ITS]:[2]:method_text:[age    public void testBitstreamsConformance() {        super.testBitstreamsConformance();    }}])', 1), ('([3:/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java]:[CTS]:[3]:method_text:[packageToRun, boolean enforce) {        super(prefix, path, pkg, packageToRun, enforce);    }   ])', 1), ('([2:/android/keystore/cts/performance/AesCipherPerformanceTest.java]:[CTS]:[2]:method_text:[ED_AES_KEY_SIZES = {128, 256};    final int[] TEST_MESSAGE_SIZES = {1 << 6, 1 << 10, 1 << 17};   ])', 1), ('([1:/android/content/cts/ClipDataTest.java]:[CTS]:[1]:method_text:[t4.class)public class ClipDataTest {    private static final String LOG_TAG = ""ClipDataTest"";   ])', 1), ('([6:/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/ModelMatrixCalculator.java]:[CTS]:[6]:method_text:[ protected float[] getRequiredTranslations() {        return new float[]{0.0f, 0.0f, 0.0f};    }}])', 1), ('([2:/com/android/cts/releaseparser/XmlParser.java]:[CTS]:[2]:method_text:[tatic Logger getLogger() {        return Logger.getLogger(XmlParser.class.getSimpleName());    }}])', 1), ('([8:/android/location/cts/gnss/asn1/supl2/ulp_components/NMR.java]:[ITS]:[8]:method_text:[ernalIndent));    }    builder.append(indent).append(""];\\n"");    return builder.toString();  }}])', 1), ('([6:/android/location/cts/gnss/asn1/supl2/ulp_components/NMR.java]:[CTS]:[6]:method_text:[ernalIndent));    }    builder.append(indent).append(""];\\n"");    return builder.toString();  }}])', 1), ('([5:/com/android/tests/atomicinstall/SessionAbandonBehaviorTest.java]:[CTS]:[5]:method_text:[ public void setUp() throws Exception {        Uninstall.packages(TestApp.A, TestApp.B);    }   ])', 1), ('([1:/com/android/cts/verifier/bluetooth/BleCocClientService.java]:[VERSION_CODES]:[1]:method_text:[ait for next state                        break;                }            }        }    };}])', 1), ('([30:/com/android/cts/verifier/bluetooth/BleCocClientService.java]:[CTS]:[30]:method_text:[ait for next state                        break;                }            }        }    };}])', 1), ('([3:/android/content/cts/util/XmlUtils.java]:[ITS]:[3]:method_text:[ml(XmlPullParser in, String tag)                throws XmlPullParserException, IOException;    }}])', 1), ('([1:/android/content/cts/util/XmlUtils.java]:[CTS]:[1]:method_text:[ml(XmlPullParser in, String tag)                throws XmlPullParserException, IOException;    }}])', 1), ('([1:/android/content/cts/ContextTestBase.java]:[CTS]:[1]:method_text:[le.bindService(intent);        return ((MockService.MockBinder) serviceToken).getService();    }}])', 1), ('([1:/android/telephony/cts/CellBroadcastIntentsTest.java]:[CTS]:[1]:method_text:[getPackageManager()                .hasSystemFeature(PackageManager.FEATURE_TELEPHONY));    }   ])', 1), ('([4:/com/android/cts/devicepolicy/PermissionUtils.java]:[CTS]:[4]:method_text:[break;            }        }        assertTrue(""Couldn\'t find any button"", foundButton);    }}])', 1), ('([2:/android/view/cts/ViewGroupOverlayTest.java]:[ITS]:[2]:method_text:[e adding grandchild"",                mViewGroupWithOverlay, Color.WHITE, colorRectangles);    }}])', 1), ('([5:/android/view/cts/ViewGroupOverlayTest.java]:[CTS]:[5]:method_text:[_overlay);        mViewGroupOverlay = mViewGroupWithOverlay.getOverlay();    }    @Presubmit   ])', 1), ('([1:/android/view/cts/ViewGroupOverlayTest.java]:[CTS]:[1]:method_text:[ed        verify(mockClickListener, never()).onClick(any(View.class));    }    @UiThreadTest   ])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java]:[CTS]:[2]:method_text:[       return mProjectionMatrix;    }    public Light getLight() {        return mLight;    }}])', 1), ('([3:/android/widget/cts/ViewFlipperTest.java]:[CTS]:[3]:method_text:[ public void setup() {        mActivity = mActivityRule.getActivity();    }    @UiThreadTest   ])', 1), ('([26:/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/SessionCapabilities.java]:[ITS]:[26]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([9:/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/SessionCapabilities.java]:[CTS]:[9]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/android/text/cts/PrecomputedTextTest.java]:[CTS]:[1]:method_text:[IVE);        SPANNED = ssb;    }    private static final TextPaint PAINT = new TextPaint();   ])', 1), ('([1:/android/assist/cts/LifecycleTest.java]:[CTS]:[1]:method_text:[Activity failed to destroy in "" + Utils.ACTIVITY_ONRESUME_TIMEOUT_MS + ""msec"");        }    }   ])', 1), ('([3:/android/cts/install/SessionRule.java]:[CTS]:[3]:method_text:[AssertionError(                        ""Expecting to find session with getSessionInfo()""));    }}])', 1), ('([1:/RestoreAnyVersionBackupAgent.java]:[CTS]:[1]:method_text:[P_TEST_PREFS_PREFIX,                new SharedPreferencesBackupHelper(this, TEST_PREFS_1));    }}])', 1), ('([8:/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/MCC_MNC_Digit.java]:[ITS]:[8]:method_text:[String toIndentedString(String indent) {    return ""MCC_MNC_Digit = "" + getInteger() + "";\\n"";  }}])', 1), ('([5:/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/MCC_MNC_Digit.java]:[CTS]:[5]:method_text:[String toIndentedString(String indent) {    return ""MCC_MNC_Digit = "" + getInteger() + "";\\n"";  }}])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java]:[VERSION_CODES]:[1]:method_text:[           ++mNumEvent;        } else {            mWrongSensorObserved = true;        }    }}])', 1), ('([6:/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java]:[CTS]:[6]:method_text:[           ++mNumEvent;        } else {            mWrongSensorObserved = true;        }    }}])', 1), ('([6:/android/autofillservice/cts/inline/DatasetFilteringInlineTest.java]:[CTS]:[6]:method_text:[ted void enableService() {        Helper.enableAutofillService(getContext(), SERVICE_NAME);    }}])', 1), ('([1:/android/compat/hiddenapi/cts/HiddenApiUsedActivity.java]:[CTS]:[1]:method_text:[hFieldException e) {        } catch(IllegalAccessException e) {        }        finish();    }])', 1), ('([5:/android/jobscheduler/cts/BaseJobSchedulerTest.java]:[CTS]:[5]:method_text:[               + "" "" + kJobServiceComponent.getPackageName()                + "" "" + jobId);    }}])', 1), ('([3:/android/widget/cts/SwitchCtsActivity.java]:[CTS]:[3]:method_text:[        super.onCreate(savedInstanceState);        setContentView(R.layout.switch_layout);    }}])', 1), ('([4:/android/widget/cts/RatingBarTest.java]:[CTS]:[4]:method_text:[y();        mRatingBar = (RatingBar) mActivity.findViewById(R.id.ratingbar_constructor);    }   ])', 1), (""([4:/com/android/cts/verifier/managedprovisioning/KeyguardDisabledFeaturesActivity.java]:[CTS]:[4]:method_text:[      // User shouldn't run this test before work profile is set up.            }        }    }}])"", 1), ('([4:/android/view/accessibility/cts/AccessibilityServiceInfoTest.java]:[CTS]:[4]:method_text:[can retrieve     * window content.     */    @MediumTest    @SuppressWarnings(""deprecation"")   ])', 1), ('([1:-common/com/android/cts/majorversion/VersionTest.java]:[CTS]:[1]:method_text:[Test;import org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class VersionTest {   ])', 1), ('([1:-common/com/android/cts/majorversion/VersionTest.java]:[CTS]:[1]:method_text:[ageName());        assertEquals(VersionConstants.PACKAGE_VERSION, pi.getLongVersionCode());    }}])', 1), ('([8:/java/android/signature/cts/api/HiddenApiTest.java]:[CTS]:[8]:method_text:[c Predicate<DexMember> FIELD_FILTER =            dexMember -> (dexMember instanceof DexField);   ])', 1), ('([2:/android/autofillservice/cts/activities/PasswordOnlyActivity.java]:[CTS]:[2]:method_text:[.toString();        Log.i(TAG, ""Login as "" + mUsername + ""/"" + password);        finish();    }}])', 1), ('([1:/android/service/resolver/cts/ResolverTargetTest.java]:[CTS]:[1]:method_text:[sts {@link ResolverTarget}. */@RunWith(AndroidJUnit4.class)public class ResolverTargetTest {   ])', 1), ('([1:/android/appsecurity/cts/MatcherUtils.java]:[ITS]:[1]:method_text:[ssertionError err) {            throw ExceptionUtils.appendCause(err, exception);        }    }}])', 1), ('([1:/android/appsecurity/cts/MatcherUtils.java]:[CTS]:[1]:method_text:[ssertionError err) {            throw ExceptionUtils.appendCause(err, exception);        }    }}])', 1), ('([1:/android/os/cts/DeadObjectExceptionTest.java]:[CTS]:[1]:method_text:[import android.os.DeadObjectException;public class DeadObjectExceptionTest extends TestCase {   ])', 1), ('([1:/android/database/cts/CursorJoinerTest.java]:[CTS]:[1]:method_text:[on {        mDatabase.close();        mDatabaseFile.delete();        super.tearDown();    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[VERSION_CODES]:[1]:method_text:[n(PERMISSION_HELD_BY_SHELL))                    .isEqualTo(PERMISSION_DENIED);        }    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[VERSION_CODES]:[1]:method_text:[ss,                () -> sTestApis.permissions().withoutPermission(INSTALL_PERMISSION));    }   ])', 1), ('([2:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[VERSION_CODES]:[2]:method_text:[ON_NOT_HELD_BY_SHELL_PRE_S))                    .isEqualTo(PERMISSION_DENIED);        }    }   ])', 1), ('([1:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[VERSION_CODES]:[1]:method_text:[all the testapp without granting all runtime    //  permissions, add a test that this works pre-Q}])', 1)]"	""	""	"[('CTS', 56), ('ITS', 13), ('VERSION_CODES', 11)]"	"[('[android.widget.cts.ListPopupWindowTest testAccessSoftInputMethodMode CtsWidgetTestCases]', 2), ('[android.widget.cts.ListPopupWindowTest testCreateOnDragListener CtsWidgetTestCases]', 2), ('[android.jni.cts.JniStaticTest isCpuAbiNone CtsJniTestCases]', 2), ('[android.location.cts.gnss.asn1.supl2.ulp_components.NMR isTagImplicit CtsLocationGnssTestCases]', 2), ('[com.android.cts.verifier.bluetooth.BleCocClientService isEnabled None]', 2), ('[android.content.cts.util.XmlUtils readListXml CtsContentTestCases]', 2), ('[android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.SessionCapabilities isTagImplicit CtsLocationGnssTestCases]', 2), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.MCC_MNC_Digit isTagImplicit CtsLocationGnssTestCases]', 2), ('[android.hardware.cts.helpers.sensorverification.EventBasicVerification isIntegrationTest CtsSensorTestCases]', 2), ('[android.telephony.cts.util.CarrierPrivilegeUtils PersistableBundle CtsTelephonyTestCases]', 1), ('[android.appwidget.cts.DarkTextThemeTest grantBindAppWidgetPermission CtsAppWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testNoDefaultDismissalWithBackButton CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest dismiss CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testListSelectionWithDPad CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testListSelectionWithDPadEnter CtsWidgetTestCases]', 1), ('[android.hardware.input.cts.tests.GameviceGv186Test GameviceGv186Test CtsHardwareTestCases]', 1), ('[android.jni.cts.JniStaticTest test_dlopenPublicLibraries CtsJniTestCases]', 1), ('[android.media.cts.bitstreams.HevcYuv444BitstreamsFullTest testBitstreamsConformance CtsMediaBitstreamsTestCases]', 1), ('[com.android.cts.releaseparser.XmlParser getPermissions None]', 1), ('[com.android.tests.atomicinstall.SessionAbandonBehaviorTest TestName CtsAtomicInstallTestCases]', 1), ('[android.content.cts.ContextTestBase createSecondaryDisplay CtsContentTestCases]', 1), ('[android.view.cts.ViewGroupOverlayTest testOverlayReparenting CtsViewTestCases]', 1), ('[android.view.cts.ViewGroupOverlayTest testOverlayViewNoClicks CtsViewTestCases]', 1), ('[android.assist.cts.LifecycleTest LifecycleTestReceiver CtsAssistTestCases]', 1), ('[android.autofillservice.cts.inline.DatasetFilteringInlineTest DatasetFilteringInlineTest CtsAutoFillServiceTestCases]', 1), ('[android.compat.hiddenapi.cts.HiddenApiUsedActivity finish None]', 1), ('[android.jobscheduler.cts.BaseJobSchedulerTest getTestEnvironment CtsJobSchedulerTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.KeyguardDisabledFeaturesActivity KeyguardDisabledFeaturesActivity None]', 1), ('[android.autofillservice.cts.activities.PasswordOnlyActivity finish CtsAutoFillServiceTestCases]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest withPermission_shellPermission_permissionIsGranted None]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest withoutPermission_alreadyGranted_androidPreQ_throwsException None]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest withoutPermission_permissionIsNotGranted None]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest autoclose_withoutPermission_permissionIsGrantedAgain None]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest withoutPermission_installPermission_androidPreQ_throwsException None]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest withoutPermission_permissionIsAlreadyGrantedInInstrumentedApp_permissionIsNotGranted None]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest withoutPermission_permissionIsAlreadyGrantedInInstrumentedApp_androidPreQ_throwsException None]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest withoutPermission_androidSAndAbove_restoresPreviousPermissionContext None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.3.5  . Security Model"	"9.8.2"	"T-4-1"	"9.8.2/T-4-1"	"09080200.840401"	"""[9.8.2/T-4-1] MUST display the microphone indicator when an app is accessing audio data from the microphone, but not when the microphone is only accessed by HotwordDetectionService, SOURCE_HOTWORD, ContentCaptureService, or apps holding the roles called out in Section 9.1 Permissions with CDD identifier C-3-X]. ["""	""	""	"CDD SOURCE_HOTWORD"	""	""	""	""	"[('android.permission.cts.NearbyDevicesPermissionTest', 11), ('android.opengl.cts.OpenGlEsVersionTest', 10), ('android.security.cts.KernelConfigTest', 7), ('android.appwidget.cts.RequestPinAppWidgetTest', 2), ('android.mediapc.cts.MultiEncoderPairPerfTest', 2), ('android.telephony.cts.TelephonyManagerTest', 2), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 2), ('android.location.cts.gnss.GnssPseudorangeVerificationTest', 2), ('android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest', 2), ('android.server.wm.CompatChangeTests', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('com.android.cts.verifier.companion.CompanionDeviceTestActivity', 1), ('com.android.cts.verifier.widget.WidgetTestActivity', 1), ('com.android.cts.verifier.audio.MidiTestActivityBase', 1), ('android.renderscript.cts.generated.TestAcosh', 1), ('com.android.cts.verifier.security.IdentityCredentialAuthentication', 1), ('android.database.cts.MergeCursorTest', 1), ('com.android.cts.apicoverage.HtmlReport', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('com.android.cts.verifier.audio.AudioOutColdStartLatencyActivity', 1), ('com.android.cts.apicoverage.CddCoverage', 1), ('android.host.accounts.BaseMultiUserTest', 1), ('android.location.cts.common.TestMeasurementUtil', 1)]"	"[('toString', 27), ('destroy', 26), ('getContext', 15), ('setUp', 12), ('StringBuilder', 9), ('start', 8), ('size', 7), ('tearDown', 7), ('AtomicInteger', 7), ('getDevice', 6), ('getInstrumentation', 5), ('Object', 5), ('close', 5), ('ArgumentsFloatFloat', 4), ('ArgumentsHalfHalf', 4), ('run', 4), ('getLooper', 4), ('capacity', 4), ('getState', 4), ('clear', 4), ('getSimpleName', 3), ('quitSafely', 3), ('getOutputStream', 3), ('getPseudorangeRateUncertaintyMetersPerSecond', 3), ('getCn0DbHz', 3), ('getCarrierPhase', 3), ('getMultipathIndicator', 3), ('getSnrInDb', 3), ('getAutomaticGainControlLevelDb', 3), ('getConstellationType', 3), ('BlockingBroadcastReceiver', 2), ('await', 2), ('getExtras', 2), ('getPackageManager', 2), ('saveAllowedNetworkTypesForAllReasons', 2), ('recoverAllowedNetworkType', 2), ('hasCellular', 2), ('build', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getRequirementId', 2), ('hashCode', 2), ('getFullBiasNanos', 2), ('getClock', 2), ('getReceivedSvTimeUncertaintyNanos', 2), ('getTimeOffsetNanos', 2), ('hasCarrierFrequencyHz', 2), ('getCarrierFrequencyHz', 2), ('getCarrierPhaseUncertainty', 2), ('getFrequencyOffsetMetersPerSecond', 2), ('getSamplingWidthMeters', 2), ('getSvid', 2), ('getReceivedSvTimeNanos', 2), ('getType', 2), ('getSubmessageId', 2), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('PlatformCompatChangeRule', 1), ('setUpLauncher', 1), ('getDefaultLauncher', 1), ('tearDownLauncher', 1), ('Bundle', 1), ('getFirstWidgetComponent', 1), ('getMaxSupportedInstances', 1), ('getSupportedPerformancePoints', 1), ('inputParams', 1), ('getAction', 1), ('countDown', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('getPackageName', 1), ('getDefaultSubscriptionId', 1), ('getRadioHalVersion', 1), ('getUiAutomation', 1), ('keySet', 1), ('toByteArray', 1), ('getPhoneCount', 1), ('getBuild', 1), ('assumeSecurityModelCompat', 1), ('Exception', 1), ('deleteOnExit', 1), ('lines', 1), ('checkAcoshFloatFloat', 1), ('checkAcoshFloat2Float2', 1), ('checkAcoshFloat3Float3', 1), ('checkAcoshFloat4Float4', 1), ('checkAcoshHalfHalf', 1), ('checkAcoshHalf2Half2', 1), ('checkAcoshHalf3Half3', 1), ('checkAcoshHalf4Half4', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('PipedOutputStream', 1), ('Runnable', 1), ('printStackTrace', 1), ('newInstance', 1), ('getContentResolver', 1), ('onCreate', 1), ('BlockingStateCallback', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('onDestroy', 1), ('quit', 1), ('getWidth', 1), ('getHeight', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('AudioTimestamp', 1), ('getCddRequirements', 1), ('values', 1), ('getMaxNumberOfUsersSupported', 1), ('getCurrentUser', 1), ('getPrimaryUserId', 1), ('builder', 1), ('getLocationManager', 1), ('hasFullBiasNanos', 1), ('hasBiasUncertaintyNanos', 1), ('getBiasUncertaintyNanos', 1), ('getTimeNanos', 1), ('entrySet', 1), ('getKey', 1), ('getValue', 1), ('hasCarrierPhase', 1), ('hasCarrierPhaseUncertainty', 1), ('hasSnrInDb', 1), ('hasAutomaticGainControlLevelDb', 1), ('hasCorrelationVectors', 1), ('hasSatellitePvt', 1), ('getCorrelationVectors', 1), ('getMagnitude', 1), ('getAccumulatedDeltaRangeState', 1), ('getAccumulatedDeltaRangeMeters', 1), ('getAccumulatedDeltaRangeUncertaintyMeters', 1), ('getCodeType', 1), ('getGnssNavMessageTypes', 1), ('getMessageId', 1), ('getData', 1), ('setup', 1), ('getActivity', 1)]"	"[('CtsPermissionTestCases', 11), ('CtsOpenGLTestCases', 10), ('CtsSecurityHostTestCases', 7), ('CtsAppWidgetTestCases', 2), ('CtsMediaPerformanceClassTestCases', 2), ('CtsTelephonyTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsLocationGnssTestCases', 2), ('CtsWindowManagerDeviceTestCases', 1), ('CtsSustainedPerformanceHostTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsDatabaseTestCases', 1), ('CtsAccountsHostTestCases', 1)]"	""	"android.opengl.cts.OpenGlEsVersionTest"	"getActivity"	"CtsOpenGLTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 10), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/KernelConfigTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPairPerfTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssPseudorangeVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarPowertrain/src/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CompatChangeTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/widget/WidgetTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/MidiTestActivityBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestAcosh.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/IdentityCredentialAuthentication.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/MergeCursorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/HtmlReport.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioOutColdStartLatencyActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CddCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/common/src/android/location/cts/common/TestMeasurementUtil.java', 1)]"	"[('(11,CDD,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,CDD,/android/server/wm/CompatChangeTests.java)', 1), ('(2,CDD,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java)', 1), ('(2,CDD,/com/android/cts/verifier/widget/WidgetTestActivity.java)', 1), ('(3,CDD,/android/appwidget/cts/RequestPinAppWidgetTest.java)', 1), ('(1,CDD,/com/android/cts/verifier/audio/MidiTestActivityBase.java)', 1), ('(3,CDD,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(2,CDD,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(9,CDD,/android/security/cts/KernelConfigTest.java)', 1), ('(3,CDD,/android/renderscript/cts/generated/TestAcosh.java)', 1), ('(2,CDD,/com/android/cts/verifier/security/IdentityCredentialAuthentication.java)', 1), ('(1,CDD,/android/database/cts/MergeCursorTest.java)', 1), ('(3,CDD,/com/android/cts/apicoverage/HtmlReport.java)', 1), ('(2,CDD,/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java)', 1), ('(1,CDD,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(2,CDD,/com/android/cts/verifier/audio/AudioOutColdStartLatencyActivity.java)', 1), ('(20,CDD,/com/android/cts/apicoverage/CddCoverage.java)', 1), ('(1,CDD,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(3,CDD,/android/location/cts/gnss/GnssPseudorangeVerificationTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java)', 1), ('(1,CDD,/android/location/cts/common/TestMeasurementUtil.java)', 1), ('(21,CDD,/android/opengl/cts/OpenGlEsVersionTest.java)', 1)]"	"[('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ble {        install(APK_BLUETOOTH_30);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[{        install(APK_BLUETOOTH_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ermission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PK_BLUETOOTH_NEVER_FOR_LOCATION_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/server/wm/CompatChangeTests.java]:[CDD]:[1]:method_text:[-resizeable portrait activity enters size compat mode after resizing the     * display.     */   ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[CDD]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([2:/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java]:[CDD]:[2]:method_text:[(true);            }        } else super.onActivityResult(requestCode, resultCode, data);    }}])', 1), ('([2:/com/android/cts/verifier/widget/WidgetTestActivity.java]:[CDD]:[2]:method_text:[er.onPause();    }    @Override    protected void onResume() {        super.onResume();    }}])', 1), ('([2:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[2]:method_text:[he extras        assertEquals(""dummy-2"", resultReceiver.result.getStringExtra(""dummy""));    }   ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[1]:method_text:[                AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());    }   ])', 1), ('([1:/com/android/cts/verifier/audio/MidiTestActivityBase.java]:[CDD]:[1]:method_text:[      }            };            mTimeoutTimer.schedule(task, TEST_TIMEOUT_MS);        }    }}])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CDD]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([2:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CDD]:[2]:method_text:[tUnit.NONE);            log.submit(InstrumentationRegistry.getInstrumentation());        }    }}])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[CDD]:[1]:method_text:[ckageManager.FEATURE_TELEPHONY)                && mTelephonyManager.getPhoneCount() > 0;    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[CDD]:[1]:method_text:[mOnPhoneCapabilityChanged = true;                mLock.notify();            }        }    }   ])', 1), ('([3:/android/security/cts/KernelConfigTest.java]:[CDD]:[3]:method_text:[rotector Strong enabled.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[ data is non-executable.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[-space and kernel-space.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[ectures that support it.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[wn to not be vulnerable.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[h to a whitelisted path.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[l enables fs-verity and its built-in signature support.     */    @CddTest(requirement=""9.10"")   ])', 1), ('([3:/android/renderscript/cts/generated/TestAcosh.java]:[CDD]:[3]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/com/android/cts/verifier/security/IdentityCredentialAuthentication.java]:[CDD]:[2]:method_text:[ RuntimeException(""Error encoding CBOR"", e);        }        return baos.toByteArray();    }}])', 1), ('([1:/android/database/cts/MergeCursorTest.java]:[CDD]:[1]:method_text:[tString(columnString));            assertTrue(mergeCursor.isNull(columnBlob));        }    }   ])', 1), ('([3:/com/android/cts/apicoverage/HtmlReport.java]:[CDD]:[3]:method_text:[reamResult result = new StreamResult(out);        transformer.transform(xmlSource, result);    }}])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[IM_SLOT_0);            SimContacts.removeSimAccounts(mResolver, SIM_SLOT_1);        });    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[ut this should not be done for the local account.     */    @CddTest(requirement=""3.18/C-1-4"")   ])', 1), ('([1:/com/android/cts/verifier/camera/its/ItsService.java]:[CDD]:[1]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([2:/com/android/cts/verifier/audio/AudioOutColdStartLatencyActivity.java]:[CDD]:[2]:method_text:[   }        mPlayer.stopStream();        mIsTestRunning = false;        stopOutTimer();    }}])', 1), ('([20:/com/android/cts/apicoverage/CddCoverage.java]:[CDD]:[20]:method_text:[           return String.format(""%s %s#%s"", mTestModule, mTestClass, mTestMethod);        }    }}])', 1), ('([1:/android/host/accounts/BaseMultiUserTest.java]:[CDD]:[1]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([2:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[2]:method_text:[d.   * This tests uses actual data retrieved from Gnss HAL.   */  @CddTest(requirement=""7.3.3"") ])', 1), ('([1:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[1]:method_text:[instant mode"")    @RequiresDevice  // emulated devices do not support real measurements so far.   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[     PERMISSION_CAR_POWERTRAIN_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/location/cts/common/TestMeasurementUtil.java]:[CDD]:[1]:method_text:[      && measurement.hasCodeType()                && ""Q"".equals(measurement.getCodeType());    }}])', 1), ('([2:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[2]:method_text:[       mActivity = mActivityRule.getActivity();    }    @CddTest(requirement=""7.1.4.1/C-0-1"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[3, getMinorVersion(reportedVersion));        }    }    @CddTest(requirement=""7.1.4.1/C-2-2"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[s, es31RequiredList[i]));        }    }    @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[st."",            hasAepFeature, hasAepExtension);    }    @CddTest(requirement=""7.9.2/C-1-4"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[  (major == 3 && minor >= 2) || major > 3);    }    @CddTest(requirement=""7.9.2/C-1-6,C-1-8"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[ns, requiredExtension));            }        }    }    @CddTest(requirement=""7.1.4.1/C-6-1"")   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[3]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/H-1-1"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[4]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/C-1-4"")   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[3]:method_text:[        2 == getMinorVersion(reportedVersion));    }    @CddTest(requirement=""7.1.4.5/C-1-5"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[4]:method_text:[ager();        return pm.hasSystemFeature(PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE);    }}])', 1)]"	""	""	"[('CDD', 54)]"	"[('[android.permission.cts.NearbyDevicesPermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.server.wm.CompatChangeTests createManagedConstrainDisplayApisFlagsSession CtsWindowManagerDeviceTestCases]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis CtsSustainedPerformanceHostTestCases]', 1), ('[com.android.cts.verifier.companion.CompanionDeviceTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.widget.WidgetTestActivity setPassFailButtonClickListeners None]', 1), ('[android.appwidget.cts.RequestPinAppWidgetTest testPinWidget_launcher2 CtsAppWidgetTestCases]', 1), ('[com.android.cts.verifier.audio.MidiTestActivityBase MidiTestActivityBase None]', 1), ('[android.mediapc.cts.MultiEncoderPairPerfTest test720p CtsMediaPerformanceClassTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testIWlanServiceState CtsTelephonyTestCases]', 1), ('[android.security.cts.KernelConfigTest toList CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigStackProtectorStrong CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigROData CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigHardenedUsercopy CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigPAN CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigHardwareMitigations CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigDisableUsermodehelper CtsSecurityHostTestCases]', 1), ('[com.android.cts.verifier.security.IdentityCredentialAuthentication setPassFailButtonClickListeners None]', 1), ('[android.database.cts.MergeCursorTest testGetValues CtsDatabaseTestCases]', 1), ('[android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest testAccountRemovalWithMergedContact_deletesContacts CtsContactsProviderTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[com.android.cts.verifier.audio.AudioOutColdStartLatencyActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.apicoverage.CddCoverage getTestMethods None]', 1), ('[android.host.accounts.BaseMultiUserTest listUsers CtsAccountsHostTestCases]', 1), ('[android.location.cts.gnss.GnssPseudorangeVerificationTest testPseudorangeValue CtsLocationGnssTestCases]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest isNotNull None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest testPermissionCarPowertrainGranted None]', 1), ('[android.location.cts.common.TestMeasurementUtil assertAll None]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testOpenGlEsVersion CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testExtensionPack CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testOpenGlEsVersionForVrHighPerformance CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensionsForVrHighPerformance CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForHdrCapableDisplay CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredGLESVersion CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForWideColorDisplay CtsOpenGLTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-2-1"	"8.2/H-2-1"	"08020000.720201"	"""[8.2/H-2-1] MUST ensure a sequential write performance of at least 125 MB/s. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-2-3"	"9.8/H-2-3"	"09080000.720203"	"""[9.8/H-2-3] MUST NOT transmit from the hotword detection service, audio data, data that can be used to reconstruct (wholly or partially) the audio, or audio contents unrelated to the hotword itself, except to the ContentCaptureService. If Handheld device implementations declare android.hardware.microphone, they: """	""	""	"android.hardware.microphone"	""	""	""	""	"[('com.android.cts.verifier.features.FeatureSummaryActivity', 1), ('android.media.metrics.cts.MediaMetricsAtomTests', 1)]"	"[('hashCode', 2), ('setUp', 2)]"	"[('CtsMediaHostTestCases', 1)]"	""	"android.media.metrics.cts.MediaMetricsAtomTests"	"setUp"	"CtsMediaHostTestCases"	"[('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/features/FeatureSummaryActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/metrics/cts/MediaMetricsAtomTests.java', 1)]"	"[('(2,android.hardware.microphone,/com/android/cts/verifier/features/FeatureSummaryActivity.java)', 1), ('(1,android.hardware.microphone,/android/media/metrics/cts/MediaMetricsAtomTests.java)', 1)]"	"[('([2:/com/android/cts/verifier/features/FeatureSummaryActivity.java]:[android.hardware.microphone]:[2]:method_text:[lse {            ((TextView) (findViewById(R.id.fs_warnings))).setText(warnings);        }    }}])', 1), ('([1:/android/media/metrics/cts/MediaMetricsAtomTests.java]:[android.hardware.microphone]:[1]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1)]"	""	""	"[('android.hardware.microphone', 2)]"	"[('[com.android.cts.verifier.features.FeatureSummaryActivity setPassFailButtonClickListeners None]', 1), ('[android.media.metrics.cts.MediaMetricsAtomTests isNotNull CtsMediaHostTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-17"	"9.9.3/C-1-17"	"09090300.670117"	"""C-1-17] MUST ensure that all encrypted filesystem metadata blocks on persistent storage were encrypted using distinct combinations of encryption key and initialization vector (IV). Have keys protecting CE and DE storage areas which:"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-3"	"7.5/H-1-3"	"07050000.720103"	"""[7.5/H-1-3] MUST support android.info.supportedHardwareLevel property as FULL or better for back primary and LIMITED or better for front primary camera.  | [7.5/H-1-3] MUST support android.info.supportedHardwareLevel property as FULL or better for both primary cameras. """	""	""	"LIMITED FULL android.info.supportedHardwareLevel"	""	""	""	""	"[('android.app.usage.cts.NetworkUsageStatsTest', 8), ('android.view.cts.PixelCopyTest', 8), ('android.app.cts.NotificationManagerTest', 7), ('android.permission.cts.NearbyDevicesPermissionTest', 5), ('android.hardware.camera2.cts.CameraManagerTest', 4), ('android.graphics.cts.TypefaceCustomFallbackBuilderTest', 3), ('android.server.wm.DisplayTests', 2), ('android.media.cts.bitstreams.HevcYuv444BitstreamsFullTest', 2), ('android.security.cts.AslrTest', 2), ('android.appwidget.cts.DarkTextThemeTest', 1), ('test.java.com.android.bedstead.nene.permissions.PermissionsTest', 1), ('android.atrace.cts.AtraceHostTestBase', 1), ('android.webkit.cts.WebBackForwardListTest', 1), ('android.car.cts.CarAppFocusManagerTest', 1), ('android.server.wm.DisplayCutoutTests', 1), ('android.mediastress.cts.HEVCR1080pAacRepeatedPlayerTest', 1), ('android.net.wifi.passpoint.cts.HomeSpTest', 1), ('android.cts.backup.includeexcludeapp.IncludeExcludeTest', 1), ('android.cts.backup.syncadaptersettingsapp.SyncAdapterSettingsTest', 1), ('android.media.cts.PlaybackStateTest', 1), ('android.content.pm.cts.AttributionTest', 1), ('android.contentcaptureservice.cts.ClipboardAccessTest', 1), ('android.media.cts.RingtoneManagerTest', 1)]"	"[('setUp', 10), ('build', 9), ('getInstrumentation', 7), ('toString', 5), ('getContext', 4), ('tearDown', 4), ('getTargetContext', 4), ('getPackageName', 4), ('getContentResolver', 4), ('getId', 4), ('getMessage', 4), ('getDevice', 3), ('printStackTrace', 3), ('getSimpleName', 2), ('getUiAutomation', 2), ('setupFiles', 2), ('cancelAll', 2), ('getActiveNotifications', 2), ('getPackageManager', 2), ('getGroupKey', 2), ('clearPrimaryClip', 2), ('setup', 1), ('hasAppWidgets', 1), ('bitstreams', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('requireApk', 1), ('turnScreenOn', 1), ('getIDevice', 1), ('getCar', 1), ('getActiveAppTypes', 1), ('createFullFamilyTypeface', 1), ('getAssets', 1), ('getAllStyles', 1), ('intValue', 1), ('booleanValue', 1), ('readLine', 1), ('matches', 1), ('size', 1), ('getFilesDir', 1), ('getDataDir', 1), ('BackupUtils', 1), ('getAccount', 1), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('restoreDefaultBrowser', 1), ('getCount', 1), ('moveToFirst', 1), ('close', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getKey', 1), ('getOverrideGroupKey', 1), ('prepareClipboardManager', 1), ('cleanYourself', 1), ('getMediaDirString', 1)]"	"[('CtsUsageStatsTestCases', 8), ('CtsViewTestCases', 8), ('CtsAppTestCases', 7), ('CtsPermissionTestCases', 5), ('CtsCameraTestCases', 4), ('CtsWindowManagerDeviceTestCases', 3), ('CtsGraphicsTestCases', 3), ('CtsMediaBitstreamsTestCases', 2), ('CtsSecurityTestCases', 2), ('CtsMediaTestCases', 2), ('CtsAppWidgetTestCases', 1), ('CtsAtraceHostTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsCarTestCases', 1), ('CtsMediaStressTestCases', 1), ('CtsWifiTestCases', 1), ('CtsContentTestCases', 1), ('CtsContentCaptureServiceTestCases', 1)]"	""	"android.view.cts.PixelCopyTest"	"getPackageManager"	"CtsViewTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/PixelCopyTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/TypefaceCustomFallbackBuilderTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/src/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/AslrTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/DarkTextThemeTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/atrace/src/android/atrace/cts/AtraceHostTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebBackForwardListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarAppFocusManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayCutoutTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mediastress/src/android/mediastress/cts/HEVCR1080pAacRepeatedPlayerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/passpoint/cts/HomeSpTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/includeexcludeapp/src/android/cts/backup/includeexcludeapp/IncludeExcludeTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/SyncAdapterSettingsApp/src/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/PlaybackStateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/AttributionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ClipboardAccessTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/RingtoneManagerTest.java', 1)]"	"[('(2,FULL,/android/appwidget/cts/DarkTextThemeTest.java)', 1), ('(2,FULL,/android/server/wm/DisplayTests.java)', 1), ('(5,FULL,/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java)', 1), ('(1,FULL,/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java)', 1), ('(8,FULL,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(9,FULL,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(2,FULL,/android/atrace/cts/AtraceHostTestBase.java)', 1), ('(2,FULL,/android/webkit/cts/WebBackForwardListTest.java)', 1), ('(2,FULL,/android/car/cts/CarAppFocusManagerTest.java)', 1), ('(2,FULL,/android/server/wm/DisplayCutoutTests.java)', 1), ('(1,FULL,/android/mediastress/cts/HEVCR1080pAacRepeatedPlayerTest.java)', 1), ('(2,FULL,/android/net/wifi/passpoint/cts/HomeSpTest.java)', 1), ('(3,FULL,/android/graphics/cts/TypefaceCustomFallbackBuilderTest.java)', 1), ('(2,FULL,/android/security/cts/AslrTest.java)', 1), ('(3,FULL,/android/cts/backup/includeexcludeapp/IncludeExcludeTest.java)', 1), ('(2,FULL,/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java)', 1), ('(2,FULL,/android/media/cts/PlaybackStateTest.java)', 1), ('(2,FULL,/android/content/pm/cts/AttributionTest.java)', 1), ('(13,FULL,/android/app/cts/NotificationManagerTest.java)', 1), ('(2,FULL,/android/contentcaptureservice/cts/ClipboardAccessTest.java)', 1), ('(2,FULL,/android/media/cts/RingtoneManagerTest.java)', 1), ('(6,FULL,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(9,FULL,/android/view/cts/PixelCopyTest.java)', 1)]"	"[('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[FULL]:[1]:method_text:[ception e) {                // expected outcome            }        }    }    @AppModeFull   ])', 6), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[FULL]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([2:/android/app/cts/NotificationManagerTest.java]:[FULL]:[2]:method_text:[} finally {            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 2), ('([1:/android/view/cts/PixelCopyTest.java]:[FULL]:[1]:method_text:[        assertBitmapEdgeColor(bitmap, Color.YELLOW);        } while (activity.rotate());    }   ])', 2), ('([2:/android/appwidget/cts/DarkTextThemeTest.java]:[FULL]:[2]:method_text:[ivity, mAppWidgetId, providerInfo);        mActivity.setContentView(mAppWidgetHostView);    }   ])', 1), ('([1:/android/server/wm/DisplayTests.java]:[FULL]:[1]:method_text:[InsetsControllerControlsSystemBars is not set to true for     * non-automotive devices.     */   ])', 1), ('([1:/android/server/wm/DisplayTests.java]:[FULL]:[1]:method_text:[y.mFullConfiguration.densityDpi;        assertEquals(CUSTOM_DENSITY_DPI, newDensityDpi);    }   ])', 1), ('([4:/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java]:[FULL]:[4]:method_text:[packageToRun, boolean enforce) {        super(prefix, path, pkg, packageToRun, enforce);    }   ])', 1), ('([1:/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java]:[FULL]:[1]:method_text:[age    public void testBitstreamsConformance() {        super.testBitstreamsConformance();    }}])', 1), ('([1:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[FULL]:[1]:method_text:[String DECLARED_PERMISSION_NOT_HELD_BY_SHELL_PRE_S =            ""android.permission.INTERNET"";   ])', 1), ('([3:/android/permission/cts/NearbyDevicesPermissionTest.java]:[FULL]:[3]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), (""([2:/android/permission/cts/NearbyDevicesPermissionTest.java]:[FULL]:[2]:method_text:[uetooth     * scan results; they'd always need to involve the user to gain permissions.     */   ])"", 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[FULL]:[1]:method_text:[               + "" com.android.bluetooth/.btservice.AdapterService set-test-mode disabled"");    }}])', 1), ('([2:/android/app/usage/cts/NetworkUsageStatsTest.java]:[FULL]:[2]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[FULL]:[1]:method_text:[getState()),                bucket.getRxBytes(), bucket.getTxBytes()));    }    @AppModeFull   ])', 1), ('([2:/android/atrace/cts/AtraceHostTestBase.java]:[FULL]:[2]:method_text:[stList test, String... categories) {        return traceSingleTest(test, true, categories);    }}])', 1), ('([2:/android/webkit/cts/WebBackForwardListTest.java]:[FULL]:[2]:method_text:[}        super.tearDown();    }    @AppModeFull(reason = ""Instant apps cannot bind sockets"")   ])', 1), ('([2:/android/car/cts/CarAppFocusManagerTest.java]:[FULL]:[2]:method_text:[ipLossAndAssert(                    DEFAULT_WAIT_TIMEOUT_MS, activeTypes[i]);        }    }   ])', 1), ('([2:/android/server/wm/DisplayCutoutTests.java]:[FULL]:[2]:method_text:[out cutout, Which whichInsets);        enum Which {            DISPATCHED, ROOT        }    }}])', 1), ('([1:/android/mediastress/cts/HEVCR1080pAacRepeatedPlayerTest.java]:[FULL]:[1]:method_text:[(int mediaNumber) {        return VIDEO_TOP_DIR + VIDEO_PATH_MIDDLE + mMedias[mediaNumber];    }}])', 1), ('([2:/android/net/wifi/passpoint/cts/HomeSpTest.java]:[FULL]:[2]:method_text:[JUnit3TestBase {    /**     * Verify that the anyOis set and get APIs work as expected     */   ])', 1), ('([1:/android/graphics/cts/TypefaceCustomFallbackBuilderTest.java]:[FULL]:[1]:method_text:[        }        }        return new Typeface.CustomFallbackBuilder(b.build()).build();    }   ])', 1), ('([1:/android/graphics/cts/TypefaceCustomFallbackBuilderTest.java]:[FULL]:[1]:method_text:[<Integer, Boolean>(400, false),                FontTestUtil.getSelectedStyle(typeface));    }   ])', 1), ('([1:/android/graphics/cts/TypefaceCustomFallbackBuilderTest.java]:[FULL]:[1]:method_text:[     FontTestUtil.getSelectedStyle(Typeface.create(typeface, weight, italic)));        }    }   ])', 1), ('([1:/android/security/cts/AslrTest.java]:[FULL]:[1]:method_text:[ts, >= "" + aslrMinEntropyBits + "" required)"",            entropy >= aslrMinEntropyBits);    }   ])', 1), ('([1:/android/security/cts/AslrTest.java]:[FULL]:[1]:method_text:[py(""/system/bin/"");    }    @AppModeFull // /system/bin/cat is not accessible to instant apps   ])', 1), ('([3:/android/cts/backup/includeexcludeapp/IncludeExcludeTest.java]:[FULL]:[3]:method_text:[, ""file_to_include""));        mExcludeFiles.add(new File(directory, ""file_to_exclude""));    }   ])', 1), ('([2:/android/cts/backup/syncadaptersettingsapp/SyncAdapterSettingsTest.java]:[FULL]:[2]:method_text:[ge.     * 3. Check restored MasterSyncAutomatically=true is the same with backup value.     */   ])', 1), ('([2:/android/media/cts/PlaybackStateTest.java]:[FULL]:[2]:method_text:[st(Build.VERSION_CODES.S);    /**     * Test default values of {@link PlaybackState}.     */   ])', 1), ('([2:/android/content/pm/cts/AttributionTest.java]:[FULL]:[2]:method_text:[   private static Context sContext = InstrumentationRegistry.getInstrumentation().getContext();   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[FULL]:[1]:method_text:[oid deactivateGracePeriod() {        UiDevice.getInstance(mInstrumentation).pressHome();    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[FULL]:[1]:method_text:[} finally {            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[FULL]:[4]:method_text:[       assertEquals(notification.fullScreenIntent, n.getNotification().fullScreenIntent);    }   ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[FULL]:[1]:method_text:[        assertFalse(policy.equals(policy2));        assertFalse(policy2.equals(policy));    }   ])', 1), ('([2:/android/app/cts/NotificationManagerTest.java]:[FULL]:[2]:method_text:[   StatusBarNotification n = findPostedNotification(id, false);        assertNotNull(n);    }   ])', 1), ('([2:/android/contentcaptureservice/cts/ClipboardAccessTest.java]:[FULL]:[2]:method_text:[   @After    public void cleanYourself() {        mClipboardManager.clearPrimaryClip();    }   ])', 1), ('([2:/android/media/cts/RingtoneManagerTest.java]:[FULL]:[2]:method_text:[IO_OUTPUT)                && !pm.hasSystemFeature(PackageManager.FEATURE_LEANBACK_ONLY);    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraManagerTest.java]:[FULL]:[1]:method_text:[fail(""Invalid CameraAccessException code: "" + reason);        return -1; // unreachable    }   ])', 1), ('([3:/android/hardware/camera2/cts/CameraManagerTest.java]:[FULL]:[3]:method_text:[pening the same device multiple times and make sure the right     * error state is set.     */   ])', 1), (""([1:/android/hardware/camera2/cts/CameraManagerTest.java]:[FULL]:[1]:method_text:[effect, and unregistering     * a listener that isn't registered should have no effect.     */   ])"", 1), ('([1:/android/hardware/camera2/cts/CameraManagerTest.java]:[FULL]:[1]:method_text:[  hardwareLevel != CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY);        }    }   ])', 1), ('([2:/android/view/cts/PixelCopyTest.java]:[FULL]:[2]:method_text:[BitmapQuadColor(bitmap,                Color.RED, Color.GREEN, Color.BLUE, Color.BLACK);    }   ])', 1), ('([1:/android/view/cts/PixelCopyTest.java]:[FULL]:[1]:method_text:[  mWideGamutWindowSourceActivityRule.getActivity().offsetForContent(r);        return r;    }   ])', 1), ('([1:/android/view/cts/PixelCopyTest.java]:[FULL]:[1]:method_text:[ttom right"", Color.YELLOW, bitmap.getPixel(96, 96));        } while (activity.rotate());    }   ])', 1), ('([1:/android/view/cts/PixelCopyTest.java]:[FULL]:[1]:method_text:[        mDialogSourceActivityRule.getActivity().normalizedToSurface(r);        return r;    }   ])', 1), ('([1:/android/view/cts/PixelCopyTest.java]:[FULL]:[1]:method_text:[ail(String.format(""FDs leaked. Expected=%d, current=%d"", fdCount, curFdCount));        }    }   ])', 1), ('([1:/android/view/cts/PixelCopyTest.java]:[FULL]:[1]:method_text:[Exception e) {            Assert.fail(""Interrupted, error="" + e.getMessage());        }    }   ])', 1)]"	""	""	"[('FULL', 55)]"	"[('[android.appwidget.cts.DarkTextThemeTest grantBindAppWidgetPermission CtsAppWidgetTestCases]', 1), ('[android.server.wm.DisplayTests testDefaultDisplayOverrideConfiguration CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayTests testCreateVirtualDisplayWithCustomConfig CtsWindowManagerDeviceTestCases]', 1), ('[android.media.cts.bitstreams.HevcYuv444BitstreamsFullTest testBitstreamsConformance CtsMediaBitstreamsTestCases]', 1), ('[test.java.com.android.bedstead.nene.permissions.PermissionsTest TestApis None]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Upgrade CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Downgrade CtsPermissionTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testDeviceSummary CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testUserSummary CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testAppSummary CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testAppDetails CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testUidDetails CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testTagDetails CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testUidTagStateDetails CtsUsageStatsTestCases]', 1), ('[android.atrace.cts.AtraceHostTestBase CollectingTestListener CtsAtraceHostTestCases]', 1), ('[android.webkit.cts.WebBackForwardListTest WebBackForwardListTest CtsWebkitTestCases]', 1), ('[android.server.wm.DisplayCutoutTests testDisplayCutout_CutoutPaths CtsWindowManagerDeviceTestCases]', 1), ('[android.mediastress.cts.HEVCR1080pAacRepeatedPlayerTest testPlay00 CtsMediaStressTestCases]', 1), ('[android.graphics.cts.TypefaceCustomFallbackBuilderTest testFamily_defaultStyle CtsGraphicsTestCases]', 1), ('[android.graphics.cts.TypefaceCustomFallbackBuilderTest testFamily_selectStyle CtsGraphicsTestCases]', 1), ('[android.security.cts.AslrTest testRandomization CtsSecurityTestCases]', 1), ('[android.app.cts.NotificationManagerTest isGroup CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setOldFields CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setNewFields CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testSetNotificationPolicy_P_setOldNewFields CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testPostFullScreenIntent_permission CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testNotificationPolicyVisualEffectsEqual CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testNotificationIcon CtsAppTestCases]', 1), ('[android.media.cts.RingtoneManagerTest RingtoneManagerTest CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest NoopCameraListener CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerOpenAllCameras CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerOpenCameraTwice CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testNoLegacyOnQ CtsCameraTestCases]', 1), ('[android.view.cts.PixelCopyTest testGlProducerFullsize CtsViewTestCases]', 1), ('[android.view.cts.PixelCopyTest testWindowProducer CtsViewTestCases]', 1), ('[android.view.cts.PixelCopyTest testWindowProducerCopyToRGBA16F CtsViewTestCases]', 1), ('[android.view.cts.PixelCopyTest testWideGamutWindowProducerCopyToRGBA8888 CtsViewTestCases]', 1), ('[android.view.cts.PixelCopyTest testWideGamutWindowProducerCopyToRGBA16F CtsViewTestCases]', 1), ('[android.view.cts.PixelCopyTest testDialogProducer CtsViewTestCases]', 1), ('[android.view.cts.PixelCopyTest testDialogProducerCopyToRGBA16F CtsViewTestCases]', 1), ('[android.view.cts.PixelCopyTest testNotLeaking CtsViewTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-3-2"	"9.5/C-3-2"	"09050000.670302"	"""C-3-2] MUST NOT have this as a work profile."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-4-3"	"9.8.2/H-4-3"	"09080200.720403"	"""[9.8.2/H-4-3] MUST not hide the microphone indicator for system apps that have visible user interfaces or direct user interaction. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-5"	"7.5/H-1-5"	"07050000.720105"	"""[7.5/H-1-5] MUST have camera2 JPEG capture latency &lt; 1000ms for 1080p resolution as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras.  | [7.5/H-1-5] MUST have camera2 JPEG capture latency &lt; 1000 ms for 1080p resolution as measured by the CTS camera PerformanceTest under ITS lighting conditions (3000K) for both primary cameras. """	""	""	"ITS CTS JPEG"	""	""	""	""	"[('android.widget.cts.ListPopupWindowTest', 8), ('android.media.cts.bitstreams.HevcYuv444BitstreamsFullTest', 3), ('android.view.cts.ViewGroupOverlayTest', 3), ('android.app.usage.cts.NetworkUsageStatsTest', 3), ('com.android.server.cts.FingerprintIncidentTest', 2), ('android.jni.cts.JniStaticTest', 2), ('android.location.cts.gnss.asn1.supl2.ulp_components.NMR', 2), ('android.content.cts.util.XmlUtils', 2), ('android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.SessionCapabilities', 2), ('android.location.cts.gnss.asn1.supl2.ver2_ulp_components.MCC_MNC_Digit', 2), ('android.appsecurity.cts.MatcherUtils', 2), ('android.telephony.cts.util.CarrierPrivilegeUtils', 1), ('android.widget.cts.util.TestUtilsMatchers', 1), ('android.appwidget.cts.DarkTextThemeTest', 1), ('android.widget.cts.ResourceCursorTreeAdapterTest', 1), ('android.app.usage.cts.test1.SomeActivity', 1), ('com.android.cts.host.blob.StatsdBlobStoreAtomTest', 1), ('android.autofillservice.cts.unittests.SavedDatasetsInfoTest', 1), ('android.opengl.cts.RendererTenShaderTest', 1), ('android.hardware.input.cts.tests.GameviceGv186Test', 1), ('android.server.wm.DisplayTests', 1), ('android.text.method.cts.DialerKeyListenerTest', 1), ('android.keystore.cts.performance.AesCipherPerformanceTest', 1), ('android.content.cts.ClipDataTest', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.RenderUtils.ModelMatrixCalculator', 1), ('com.android.cts.releaseparser.XmlParser', 1), ('com.android.tests.atomicinstall.SessionAbandonBehaviorTest', 1), ('com.android.cts.verifier.bluetooth.BleCocClientService', 1), ('android.content.cts.ContextTestBase', 1), ('android.telephony.cts.CellBroadcastIntentsTest', 1), ('com.android.cts.devicepolicy.PermissionUtils', 1), ('com.android.cts.verifier.sensors.sixdof.Renderer.RenderUtils.DrawParameters', 1), ('android.widget.cts.ViewFlipperTest', 1), ('android.text.cts.PrecomputedTextTest', 1), ('android.assist.cts.LifecycleTest', 1), ('android.cts.install.SessionRule', 1), ('RestoreAnyVersionBackupAgent', 1), ('android.hardware.cts.helpers.sensorverification.EventBasicVerification', 1), ('android.autofillservice.cts.inline.DatasetFilteringInlineTest', 1), ('android.compat.hiddenapi.cts.HiddenApiUsedActivity', 1), ('android.jobscheduler.cts.BaseJobSchedulerTest', 1), ('android.widget.cts.SwitchCtsActivity', 1), ('android.widget.cts.RatingBarTest', 1), ('com.android.cts.verifier.managedprovisioning.KeyguardDisabledFeaturesActivity', 1), ('android.view.accessibility.cts.AccessibilityServiceInfoTest', 1), ('java.android.signature.cts.api.HiddenApiTest', 1), ('android.autofillservice.cts.activities.PasswordOnlyActivity', 1), ('android.service.resolver.cts.ResolverTargetTest', 1), ('android.os.cts.DeadObjectExceptionTest', 1), ('android.database.cts.CursorJoinerTest', 1), ('android.permission.cts.NearbyDevicesPermissionTest', 1), ('com.android.server.cts.device.batterystats.BatteryStatsForegroundActivity', 1)]"	"[('getContext', 12), ('setUp', 8), ('getInstrumentation', 7), ('super', 6), ('getTag', 6), ('getPackageManager', 5), ('setup', 5), ('toString', 5), ('getDevice', 4), ('onCreate', 4), ('getDepth', 4), ('length', 4), ('countDown', 3), ('tearDown', 3), ('getName', 3), ('waitForBroadcast', 3), ('getActivity', 3), ('getIntent', 3), ('getSimpleName', 2), ('close', 2), ('bitstreams', 2), ('getRequiredTranslations', 2), ('NMR', 2), ('getAdapter', 2), ('next', 2), ('decode', 2), ('readMapXml', 2), ('FastXmlSerializer', 2), ('name', 2), ('endDocument', 2), ('SessionCapabilities', 2), ('retrieveSessionId', 2), ('MCC_MNC_Digit', 2), ('getSensor', 2), ('getContentView', 2), ('login', 2), ('MatcherUtils', 2), ('notNullValue', 2), ('run', 2), ('getAction', 1), ('waitForCarrierPrivilegeChanged', 1), ('hasCarrierPrivileges', 1), ('getOpPackageName', 1), ('toByteArray', 1), ('inAscendingOrder', 1), ('size', 1), ('hasAppWidgets', 1), ('getTargetContext', 1), ('getWindow', 1), ('glCreateProgram', 1), ('glGetError', 1), ('getModelMatrix', 1), ('getType', 1), ('setAdditionalInfo', 1), ('getBytes', 1), ('getUiAutomation', 1), ('getBluetoothLeScanner', 1), ('Handler', 1), ('getClass', 1), ('getApplicationContext', 1), ('Intent', 1), ('click', 1), ('getOverlay', 1), ('getViewMatrix', 1), ('getProjectionMatrix', 1), ('getLight', 1), ('TextPaint', 1), ('customSetup', 1), ('SessionRule', 1), ('getFilesDir', 1), ('before', 1), ('createNewFile', 1), ('cleanUp', 1), ('toPath', 1), ('readLine', 1), ('retrieveSessionInfo', 1), ('getPackageInstaller', 1), ('getSessionInfo', 1), ('getExpectedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('getFifoReservedEventCount', 1), ('max', 1), ('getFifoMaxEventCount', 1), ('getAllowedSensorStartDelay', 1), ('AccessibilityDumpOnFailureRule', 1), ('init', 1), ('loadFilters', 1), ('focusOnPassword', 1), ('requestFocus', 1), ('getText', 1), ('setupDatabase', 1), ('delete', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1)]"	"[('CtsWidgetTestCases', 13), ('CtsLocationGnssTestCases', 6), ('CtsContentTestCases', 4), ('CtsAutoFillServiceTestCases', 3), ('CtsMediaBitstreamsTestCases', 3), ('CtsViewTestCases', 3), ('CtsUsageStatsTestCases', 3), ('CtsTelephonyTestCases', 2), ('CtsIncidentHostTestCases', 2), ('CtsJniTestCases', 2), ('CtsTextTestCases', 2), ('CtsAppSecurityHostTestCases', 2), ('CtsAppWidgetTestCases', 1), ('CtsBlobStoreHostTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsHardwareTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsAtomicInstallTestCases', 1), ('CtsAssistTestCases', 1), ('CtsSensorTestCases', 1), ('CtsJobSchedulerTestCases', 1), ('CtsAccessibilityTestCases', 1), ('CtsResolverServiceTestCases', 1), ('CtsDatabaseTestCases', 1), ('CtsPermissionTestCases', 1)]"	""	"com.android.server.cts.device.batterystats.BatteryStatsForegroundActivity"	"getIntent"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ListPopupWindowTest.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/bitstreams/src/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewGroupOverlayTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/src/com/android/server/cts/FingerprintIncidentTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/jni/src/android/jni/cts/JniStaticTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_components/NMR.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/util/XmlUtils.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/SessionCapabilities.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/MCC_MNC_Digit.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/MajorVersionApp/src-common/com/android/cts/majorversion/VersionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/MatcherUtils.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/util/CarrierPrivilegeUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/util/TestUtilsMatchers.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/DarkTextThemeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ResourceCursorTreeAdapterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/TestApp1/src/android/app/usage/cts/test1/SomeActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/blobstore/src/com/android/cts/host/blob/StatsdBlobStoreAtomTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/SavedDatasetsInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/RendererTenShaderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/GameviceGv186Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/DialerKeyListenerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/performance/AesCipherPerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ClipDataTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/ModelMatrixCalculator.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/XmlParser.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/atomicinstall/src/com/android/tests/atomicinstall/SessionAbandonBehaviorTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/bluetooth/BleCocClientService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContextTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellBroadcastIntentsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/common/src/com/android/cts/devicepolicy/PermissionUtils.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ViewFlipperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/PrecomputedTextTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/assist/src/android/assist/cts/LifecycleTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/install/app/src/android/cts/install/SessionRule.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/RestoreAnyVersion/src/RestoreAnyVersionBackupAgent.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/DatasetFilteringInlineTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appcompat/hiddenapi/app/src/android/compat/hiddenapi/cts/HiddenApiUsedActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/BaseJobSchedulerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SwitchCtsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RatingBarTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/KeyguardDisabledFeaturesActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityServiceInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/api-check/src/java/android/signature/cts/api/HiddenApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/activities/PasswordOnlyActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/resolverservice/src/android/service/resolver/cts/ResolverTargetTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/DeadObjectExceptionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/CursorJoinerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/incident/apps/batterystatsapp/src/com/android/server/cts/device/batterystats/BatteryStatsForegroundActivity.java', 1)]"	"[('(1,CTS,/android/telephony/cts/util/CarrierPrivilegeUtils.java)', 1), ('(1,CTS,/android/widget/cts/util/TestUtilsMatchers.java)', 1), ('(3,CTS,/android/appwidget/cts/DarkTextThemeTest.java)', 1), ('(1,CTS,/android/widget/cts/ResourceCursorTreeAdapterTest.java)', 1), ('(1,ITS,/com/android/server/cts/FingerprintIncidentTest.java)', 1), ('(1,CTS,/com/android/server/cts/FingerprintIncidentTest.java)', 1), ('(1,CTS,/android/app/usage/cts/test1/SomeActivity.java)', 1), ('(4,CTS,/com/android/cts/host/blob/StatsdBlobStoreAtomTest.java)', 1), ('(1,CTS,/android/autofillservice/cts/unittests/SavedDatasetsInfoTest.java)', 1), ('(6,ITS,/android/widget/cts/ListPopupWindowTest.java)', 1), ('(15,CTS,/android/widget/cts/ListPopupWindowTest.java)', 1), ('(1,CTS,/android/opengl/cts/RendererTenShaderTest.java)', 1), ('(2,CTS,/android/hardware/input/cts/tests/GameviceGv186Test.java)', 1), ('(1,ITS,/android/jni/cts/JniStaticTest.java)', 1), ('(1,CTS,/android/jni/cts/JniStaticTest.java)', 1), ('(1,CTS,/android/server/wm/DisplayTests.java)', 1), ('(1,CTS,/android/text/method/cts/DialerKeyListenerTest.java)', 1), ('(12,ITS,/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java)', 1), ('(3,CTS,/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java)', 1), ('(2,CTS,/android/keystore/cts/performance/AesCipherPerformanceTest.java)', 1), ('(1,CTS,/android/content/cts/ClipDataTest.java)', 1), ('(6,CTS,/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/ModelMatrixCalculator.java)', 1), ('(2,CTS,/com/android/cts/releaseparser/XmlParser.java)', 1), ('(8,ITS,/android/location/cts/gnss/asn1/supl2/ulp_components/NMR.java)', 1), ('(6,CTS,/android/location/cts/gnss/asn1/supl2/ulp_components/NMR.java)', 1), ('(5,CTS,/com/android/tests/atomicinstall/SessionAbandonBehaviorTest.java)', 1), ('(30,CTS,/com/android/cts/verifier/bluetooth/BleCocClientService.java)', 1), ('(3,ITS,/android/content/cts/util/XmlUtils.java)', 1), ('(1,CTS,/android/content/cts/util/XmlUtils.java)', 1), ('(1,CTS,/android/content/cts/ContextTestBase.java)', 1), ('(1,CTS,/android/telephony/cts/CellBroadcastIntentsTest.java)', 1), ('(4,CTS,/com/android/cts/devicepolicy/PermissionUtils.java)', 1), ('(2,ITS,/android/view/cts/ViewGroupOverlayTest.java)', 1), ('(6,CTS,/android/view/cts/ViewGroupOverlayTest.java)', 1), ('(2,CTS,/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java)', 1), ('(3,CTS,/android/widget/cts/ViewFlipperTest.java)', 1), ('(26,ITS,/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/SessionCapabilities.java)', 1), ('(9,CTS,/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/SessionCapabilities.java)', 1), ('(1,CTS,/android/text/cts/PrecomputedTextTest.java)', 1), ('(1,CTS,/android/assist/cts/LifecycleTest.java)', 1), ('(3,CTS,/android/cts/install/SessionRule.java)', 1), ('(1,CTS,/RestoreAnyVersionBackupAgent.java)', 1), ('(8,ITS,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/MCC_MNC_Digit.java)', 1), ('(5,CTS,/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/MCC_MNC_Digit.java)', 1), ('(6,CTS,/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java)', 1), ('(6,CTS,/android/autofillservice/cts/inline/DatasetFilteringInlineTest.java)', 1), ('(1,CTS,/android/compat/hiddenapi/cts/HiddenApiUsedActivity.java)', 1), ('(5,CTS,/android/jobscheduler/cts/BaseJobSchedulerTest.java)', 1), ('(3,CTS,/android/widget/cts/SwitchCtsActivity.java)', 1), ('(4,CTS,/android/widget/cts/RatingBarTest.java)', 1), ('(4,CTS,/com/android/cts/verifier/managedprovisioning/KeyguardDisabledFeaturesActivity.java)', 1), ('(4,CTS,/android/view/accessibility/cts/AccessibilityServiceInfoTest.java)', 1), ('(2,CTS,-common/com/android/cts/majorversion/VersionTest.java)', 1), ('(8,CTS,/java/android/signature/cts/api/HiddenApiTest.java)', 1), ('(2,CTS,/android/autofillservice/cts/activities/PasswordOnlyActivity.java)', 1), ('(1,CTS,/android/service/resolver/cts/ResolverTargetTest.java)', 1), ('(1,ITS,/android/appsecurity/cts/MatcherUtils.java)', 1), ('(1,CTS,/android/appsecurity/cts/MatcherUtils.java)', 1), ('(1,CTS,/android/os/cts/DeadObjectExceptionTest.java)', 1), ('(1,CTS,/android/database/cts/CursorJoinerTest.java)', 1), ('(13,CTS,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,ITS,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(3,CTS,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(6,CTS,/com/android/server/cts/device/batterystats/BatteryStatsForegroundActivity.java)', 1)]"	"[('([4:/android/widget/cts/ListPopupWindowTest.java]:[CTS]:[4]:method_text:[ectedListener);        verifyNoMoreInteractions(mPopupWindowBuilder.mOnDismissListener);    }   ])', 2), ('([1:/android/telephony/cts/util/CarrierPrivilegeUtils.java]:[CTS]:[1]:method_text:[         changeCarrierPrivileges(c, subId, false /* lose */, false /* isShell */);        }    }}])', 1), ('([1:/android/widget/cts/util/TestUtilsMatchers.java]:[CTS]:[1]:method_text:[                  }                }                return true;            }        };    }}])', 1), ('([3:/android/appwidget/cts/DarkTextThemeTest.java]:[CTS]:[3]:method_text:[ivity, mAppWidgetId, providerInfo);        mActivity.setContentView(mAppWidgetHostView);    }   ])', 1), ('([1:/android/widget/cts/ResourceCursorTreeAdapterTest.java]:[CTS]:[1]:method_text:[ (ViewGroup) layoutInflater.inflate(R.layout.cursoradapter_host, null);    }    @UiThreadTest   ])', 1), ('([1:/com/android/server/cts/FingerprintIncidentTest.java]:[ITS]:[1]:method_text:[rly outputs its dump state. */public class FingerprintIncidentTest extends ProtoDumpTestCase {   ])', 1), ('([1:/com/android/server/cts/FingerprintIncidentTest.java]:[CTS]:[1]:method_text:[rly outputs its dump state. */public class FingerprintIncidentTest extends ProtoDumpTestCase {   ])', 1), ('([1:/android/app/usage/cts/test1/SomeActivity.java]:[CTS]:[1]:method_text:[nstanceState);        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);    }}])', 1), ('([4:/com/android/cts/host/blob/StatsdBlobStoreAtomTest.java]:[CTS]:[4]:method_text:[());        ReportUtils.clearReports(getDevice());        uninstallPackage(TARGET_PKG);    }   ])', 1), ('([1:/android/autofillservice/cts/unittests/SavedDatasetsInfoTest.java]:[CTS]:[1]:method_text:[link SavedDatasetsInfo}. */@RunWith(AndroidJUnit4.class)public class SavedDatasetsInfoTest {   ])', 1), ('([2:/android/widget/cts/ListPopupWindowTest.java]:[ITS]:[2]:method_text:[  verify(mockContainerClickListener, times(setupAsModal ? 0 : 1)).onClick(mainContainer);    }   ])', 1), ('([1:/android/widget/cts/ListPopupWindowTest.java]:[ITS]:[1]:method_text:[r.mOnDismissListener, never()).onDismiss();        assertTrue(mPopupWindow.isShowing());    }   ])', 1), ('([3:/android/widget/cts/ListPopupWindowTest.java]:[ITS]:[3]:method_text:[pupWindow.isShowing())                return;            mPopupWindow.dismiss();        }    }}])', 1), ('([5:/android/widget/cts/ListPopupWindowTest.java]:[CTS]:[5]:method_text:[ch (Throwable t) {                throw new RuntimeException(t);            }        }    }   ])', 1), ('([1:/android/widget/cts/ListPopupWindowTest.java]:[CTS]:[1]:method_text:[  verify(mockContainerClickListener, times(setupAsModal ? 0 : 1)).onClick(mainContainer);    }   ])', 1), ('([1:/android/widget/cts/ListPopupWindowTest.java]:[CTS]:[1]:method_text:[pupWindow.isShowing())                return;            mPopupWindow.dismiss();        }    }}])', 1), ('([1:/android/opengl/cts/RendererTenShaderTest.java]:[CTS]:[1]:method_text:[.glLinkProgram(mProgram);        mError = GLES20.glGetError();        mLatch.countDown();    }}])', 1), ('([2:/android/hardware/input/cts/tests/GameviceGv186Test.java]:[CTS]:[2]:method_text:[  expectedEvent.getAxisValue(axis), actualEvent.getAxisValue(axis), TOLERANCE);        }    }   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[ITS]:[1]:method_text:[sibility. Internal platform libraries should not     * be accessible from the jni code.     */   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[CTS]:[1]:method_text:[sibility. Internal platform libraries should not     * be accessible from the jni code.     */   ])', 1), (""([1:/android/server/wm/DisplayTests.java]:[CTS]:[1]:method_text:[ that the global configuration is equal to the default display's override configuration.     */   ])"", 1), ('([1:/android/text/method/cts/DialerKeyListenerTest.java]:[CTS]:[1]:method_text:[t@RunWith(AndroidJUnit4.class)public class DialerKeyListenerTest extends KeyListenerTestCase {   ])', 1), ('([10:/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java]:[ITS]:[10]:method_text:[packageToRun, boolean enforce) {        super(prefix, path, pkg, packageToRun, enforce);    }   ])', 1), ('([2:/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java]:[ITS]:[2]:method_text:[age    public void testBitstreamsConformance() {        super.testBitstreamsConformance();    }}])', 1), ('([3:/android/media/cts/bitstreams/HevcYuv444BitstreamsFullTest.java]:[CTS]:[3]:method_text:[packageToRun, boolean enforce) {        super(prefix, path, pkg, packageToRun, enforce);    }   ])', 1), ('([2:/android/keystore/cts/performance/AesCipherPerformanceTest.java]:[CTS]:[2]:method_text:[ED_AES_KEY_SIZES = {128, 256};    final int[] TEST_MESSAGE_SIZES = {1 << 6, 1 << 10, 1 << 17};   ])', 1), ('([1:/android/content/cts/ClipDataTest.java]:[CTS]:[1]:method_text:[t4.class)public class ClipDataTest {    private static final String LOG_TAG = ""ClipDataTest"";   ])', 1), ('([6:/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/ModelMatrixCalculator.java]:[CTS]:[6]:method_text:[ protected float[] getRequiredTranslations() {        return new float[]{0.0f, 0.0f, 0.0f};    }}])', 1), ('([2:/com/android/cts/releaseparser/XmlParser.java]:[CTS]:[2]:method_text:[tatic Logger getLogger() {        return Logger.getLogger(XmlParser.class.getSimpleName());    }}])', 1), ('([8:/android/location/cts/gnss/asn1/supl2/ulp_components/NMR.java]:[ITS]:[8]:method_text:[ernalIndent));    }    builder.append(indent).append(""];\\n"");    return builder.toString();  }}])', 1), ('([6:/android/location/cts/gnss/asn1/supl2/ulp_components/NMR.java]:[CTS]:[6]:method_text:[ernalIndent));    }    builder.append(indent).append(""];\\n"");    return builder.toString();  }}])', 1), ('([5:/com/android/tests/atomicinstall/SessionAbandonBehaviorTest.java]:[CTS]:[5]:method_text:[ public void setUp() throws Exception {        Uninstall.packages(TestApp.A, TestApp.B);    }   ])', 1), ('([30:/com/android/cts/verifier/bluetooth/BleCocClientService.java]:[CTS]:[30]:method_text:[ait for next state                        break;                }            }        }    };}])', 1), ('([3:/android/content/cts/util/XmlUtils.java]:[ITS]:[3]:method_text:[ml(XmlPullParser in, String tag)                throws XmlPullParserException, IOException;    }}])', 1), ('([1:/android/content/cts/util/XmlUtils.java]:[CTS]:[1]:method_text:[ml(XmlPullParser in, String tag)                throws XmlPullParserException, IOException;    }}])', 1), ('([1:/android/content/cts/ContextTestBase.java]:[CTS]:[1]:method_text:[le.bindService(intent);        return ((MockService.MockBinder) serviceToken).getService();    }}])', 1), ('([1:/android/telephony/cts/CellBroadcastIntentsTest.java]:[CTS]:[1]:method_text:[getPackageManager()                .hasSystemFeature(PackageManager.FEATURE_TELEPHONY));    }   ])', 1), ('([4:/com/android/cts/devicepolicy/PermissionUtils.java]:[CTS]:[4]:method_text:[break;            }        }        assertTrue(""Couldn\'t find any button"", foundButton);    }}])', 1), ('([2:/android/view/cts/ViewGroupOverlayTest.java]:[ITS]:[2]:method_text:[e adding grandchild"",                mViewGroupWithOverlay, Color.WHITE, colorRectangles);    }}])', 1), ('([5:/android/view/cts/ViewGroupOverlayTest.java]:[CTS]:[5]:method_text:[_overlay);        mViewGroupOverlay = mViewGroupWithOverlay.getOverlay();    }    @Presubmit   ])', 1), ('([1:/android/view/cts/ViewGroupOverlayTest.java]:[CTS]:[1]:method_text:[ed        verify(mockClickListener, never()).onClick(any(View.class));    }    @UiThreadTest   ])', 1), ('([2:/com/android/cts/verifier/sensors/sixdof/Renderer/RenderUtils/DrawParameters.java]:[CTS]:[2]:method_text:[       return mProjectionMatrix;    }    public Light getLight() {        return mLight;    }}])', 1), ('([3:/android/widget/cts/ViewFlipperTest.java]:[CTS]:[3]:method_text:[ public void setup() {        mActivity = mActivityRule.getActivity();    }    @UiThreadTest   ])', 1), ('([26:/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/SessionCapabilities.java]:[ITS]:[26]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([9:/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/SessionCapabilities.java]:[CTS]:[9]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([1:/android/text/cts/PrecomputedTextTest.java]:[CTS]:[1]:method_text:[IVE);        SPANNED = ssb;    }    private static final TextPaint PAINT = new TextPaint();   ])', 1), ('([1:/android/assist/cts/LifecycleTest.java]:[CTS]:[1]:method_text:[Activity failed to destroy in "" + Utils.ACTIVITY_ONRESUME_TIMEOUT_MS + ""msec"");        }    }   ])', 1), ('([3:/android/cts/install/SessionRule.java]:[CTS]:[3]:method_text:[AssertionError(                        ""Expecting to find session with getSessionInfo()""));    }}])', 1), ('([1:/RestoreAnyVersionBackupAgent.java]:[CTS]:[1]:method_text:[P_TEST_PREFS_PREFIX,                new SharedPreferencesBackupHelper(this, TEST_PREFS_1));    }}])', 1), ('([8:/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/MCC_MNC_Digit.java]:[ITS]:[8]:method_text:[String toIndentedString(String indent) {    return ""MCC_MNC_Digit = "" + getInteger() + "";\\n"";  }}])', 1), ('([5:/android/location/cts/gnss/asn1/supl2/ver2_ulp_components/MCC_MNC_Digit.java]:[CTS]:[5]:method_text:[String toIndentedString(String indent) {    return ""MCC_MNC_Digit = "" + getInteger() + "";\\n"";  }}])', 1), ('([6:/android/hardware/cts/helpers/sensorverification/EventBasicVerification.java]:[CTS]:[6]:method_text:[           ++mNumEvent;        } else {            mWrongSensorObserved = true;        }    }}])', 1), ('([6:/android/autofillservice/cts/inline/DatasetFilteringInlineTest.java]:[CTS]:[6]:method_text:[ted void enableService() {        Helper.enableAutofillService(getContext(), SERVICE_NAME);    }}])', 1), ('([1:/android/compat/hiddenapi/cts/HiddenApiUsedActivity.java]:[CTS]:[1]:method_text:[hFieldException e) {        } catch(IllegalAccessException e) {        }        finish();    }])', 1), ('([5:/android/jobscheduler/cts/BaseJobSchedulerTest.java]:[CTS]:[5]:method_text:[               + "" "" + kJobServiceComponent.getPackageName()                + "" "" + jobId);    }}])', 1), ('([3:/android/widget/cts/SwitchCtsActivity.java]:[CTS]:[3]:method_text:[        super.onCreate(savedInstanceState);        setContentView(R.layout.switch_layout);    }}])', 1), ('([4:/android/widget/cts/RatingBarTest.java]:[CTS]:[4]:method_text:[y();        mRatingBar = (RatingBar) mActivity.findViewById(R.id.ratingbar_constructor);    }   ])', 1), (""([4:/com/android/cts/verifier/managedprovisioning/KeyguardDisabledFeaturesActivity.java]:[CTS]:[4]:method_text:[      // User shouldn't run this test before work profile is set up.            }        }    }}])"", 1), ('([4:/android/view/accessibility/cts/AccessibilityServiceInfoTest.java]:[CTS]:[4]:method_text:[can retrieve     * window content.     */    @MediumTest    @SuppressWarnings(""deprecation"")   ])', 1), ('([1:-common/com/android/cts/majorversion/VersionTest.java]:[CTS]:[1]:method_text:[Test;import org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class VersionTest {   ])', 1), ('([1:-common/com/android/cts/majorversion/VersionTest.java]:[CTS]:[1]:method_text:[ageName());        assertEquals(VersionConstants.PACKAGE_VERSION, pi.getLongVersionCode());    }}])', 1), ('([8:/java/android/signature/cts/api/HiddenApiTest.java]:[CTS]:[8]:method_text:[c Predicate<DexMember> FIELD_FILTER =            dexMember -> (dexMember instanceof DexField);   ])', 1), ('([2:/android/autofillservice/cts/activities/PasswordOnlyActivity.java]:[CTS]:[2]:method_text:[.toString();        Log.i(TAG, ""Login as "" + mUsername + ""/"" + password);        finish();    }}])', 1), ('([1:/android/service/resolver/cts/ResolverTargetTest.java]:[CTS]:[1]:method_text:[sts {@link ResolverTarget}. */@RunWith(AndroidJUnit4.class)public class ResolverTargetTest {   ])', 1), ('([1:/android/appsecurity/cts/MatcherUtils.java]:[ITS]:[1]:method_text:[ssertionError err) {            throw ExceptionUtils.appendCause(err, exception);        }    }}])', 1), ('([1:/android/appsecurity/cts/MatcherUtils.java]:[CTS]:[1]:method_text:[ssertionError err) {            throw ExceptionUtils.appendCause(err, exception);        }    }}])', 1), ('([1:/android/os/cts/DeadObjectExceptionTest.java]:[CTS]:[1]:method_text:[import android.os.DeadObjectException;public class DeadObjectExceptionTest extends TestCase {   ])', 1), ('([1:/android/database/cts/CursorJoinerTest.java]:[CTS]:[1]:method_text:[on {        mDatabase.close();        mDatabaseFile.delete();        super.tearDown();    }   ])', 1), ('([13:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CTS]:[13]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[ITS]:[1]:method_text:[ception e) {                // expected outcome            }        }    }    @AppModeFull   ])', 1), ('([2:/android/app/usage/cts/NetworkUsageStatsTest.java]:[CTS]:[2]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[CTS]:[1]:method_text:[etworkType="" + networkType                    + "" subscriberId="" + subscriberId);        }    }}])', 1), ('([6:/com/android/server/cts/device/batterystats/BatteryStatsForegroundActivity.java]:[CTS]:[6]:method_text:[   case ACTION_SLEEP_WHILE_TOP:                return true;        }        return false;    }}])', 1)]"	""	""	"[('CTS', 60), ('ITS', 14)]"	"[('[android.widget.cts.ListPopupWindowTest testAccessSoftInputMethodMode CtsWidgetTestCases]', 2), ('[android.widget.cts.ListPopupWindowTest testCreateOnDragListener CtsWidgetTestCases]', 2), ('[android.jni.cts.JniStaticTest isCpuAbiNone CtsJniTestCases]', 2), ('[android.location.cts.gnss.asn1.supl2.ulp_components.NMR isTagImplicit CtsLocationGnssTestCases]', 2), ('[android.content.cts.util.XmlUtils readListXml CtsContentTestCases]', 2), ('[android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.SessionCapabilities isTagImplicit CtsLocationGnssTestCases]', 2), ('[android.location.cts.gnss.asn1.supl2.ver2_ulp_components.MCC_MNC_Digit isTagImplicit CtsLocationGnssTestCases]', 2), ('[android.telephony.cts.util.CarrierPrivilegeUtils PersistableBundle CtsTelephonyTestCases]', 1), ('[android.appwidget.cts.DarkTextThemeTest grantBindAppWidgetPermission CtsAppWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testNoDefaultDismissalWithBackButton CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest dismiss CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testListSelectionWithDPad CtsWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testListSelectionWithDPadEnter CtsWidgetTestCases]', 1), ('[android.hardware.input.cts.tests.GameviceGv186Test GameviceGv186Test CtsHardwareTestCases]', 1), ('[android.media.cts.bitstreams.HevcYuv444BitstreamsFullTest testBitstreamsConformance CtsMediaBitstreamsTestCases]', 1), ('[com.android.cts.releaseparser.XmlParser getPermissions None]', 1), ('[com.android.tests.atomicinstall.SessionAbandonBehaviorTest TestName CtsAtomicInstallTestCases]', 1), ('[com.android.cts.verifier.bluetooth.BleCocClientService isEnabled None]', 1), ('[android.content.cts.ContextTestBase createSecondaryDisplay CtsContentTestCases]', 1), ('[android.view.cts.ViewGroupOverlayTest testOverlayReparenting CtsViewTestCases]', 1), ('[android.view.cts.ViewGroupOverlayTest testOverlayViewNoClicks CtsViewTestCases]', 1), ('[android.assist.cts.LifecycleTest LifecycleTestReceiver CtsAssistTestCases]', 1), ('[android.hardware.cts.helpers.sensorverification.EventBasicVerification isIntegrationTest CtsSensorTestCases]', 1), ('[android.autofillservice.cts.inline.DatasetFilteringInlineTest DatasetFilteringInlineTest CtsAutoFillServiceTestCases]', 1), ('[android.compat.hiddenapi.cts.HiddenApiUsedActivity finish None]', 1), ('[android.jobscheduler.cts.BaseJobSchedulerTest getTestEnvironment CtsJobSchedulerTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.KeyguardDisabledFeaturesActivity KeyguardDisabledFeaturesActivity None]', 1), ('[android.autofillservice.cts.activities.PasswordOnlyActivity finish CtsAutoFillServiceTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testUidTagStateDetails CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.NetworkUsageStatsTest testCallback CtsUsageStatsTestCases]', 1), ('[com.android.server.cts.device.batterystats.BatteryStatsForegroundActivity finish None]', 1)]"	""	""	""	""	""	""	""	""	""
"7.4.3  . Bluetooth"	"7.4.3"	"C-6-2"	"7.4.3/C-6-2"	"07040300.670602"	"""C-6-2] MUST gate Bluetooth access behind the android.permission.ACCESS_FINE_LOCATION. <h4 id=""744_near-field_communications"" """	""	""	"ACCESS_FINE_LOCATION android.permission.ACCESS"	""	""	""	""	"[('android.net.wifi.cts.WifiLocationInfoTest', 13), ('android.permission.cts.NearbyDevicesPermissionTest', 8), ('android.permission.cts.PermissionControllerTest', 8), ('android.permission2.cts.RestrictedPermissionsTest', 6), ('com.android.cts.devicepolicy.DeviceOwnerTest', 2), ('android.permission.cts.SplitPermissionsSystemTest', 2), ('com.android.cts.devicepolicy.PermissionUtils', 1), ('com.android.cts.managedprofile.LauncherAppsTest', 1), ('android.telephony.cts.TelephonyManagerTest', 1), ('android.cts.statsdatom.permissionstate.DangerousPermissionStateTests', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('android.telephony.ims.cts.ImsRcsManagerTest', 1), ('android.appsecurity.cts.EphemeralTest', 1), ('android.appsecurity.cts.ExternalStorageHostTest', 1), ('android.jobscheduler.cts.JobThrottlingTest', 1), ('com.android.cts.deviceowner.WifiNetworkConfigurationWithoutFineLocationPermissionTest', 1), ('android.bluetooth.cts.BluetoothLeScanTest', 1)]"	"[('getContext', 14), ('getInstrumentation', 5), ('getDevice', 5), ('waitForBroadcast', 3), ('setUp', 3), ('getName', 2), ('getPackageManager', 2), ('getAdapter', 2), ('getUiAutomation', 2), ('getIntent', 2), ('getBuild', 2), ('Intent', 1), ('click', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('setUpOnce', 1), ('CommandBroadcastReceiver', 1), ('IntentFilter', 1), ('tearDownOnce', 1), ('shareUidBetweenRestrictedAndNotRestrictedApp', 1), ('tearDown', 1), ('getReceiverComponentName', 1), ('myUserId', 1), ('getAbi', 1), ('cleanUp', 1), ('wipePrimaryExternalStorage', 1), ('before', 1), ('validateAndroidSystem', 1), ('getTargetContext', 1), ('resetAppState', 1), ('installApp', 1), ('uninstallApp', 1)]"	"[('CtsPermissionTestCases', 18), ('CtsWifiTestCases', 13), ('CtsPermission2TestCases', 6), ('CtsTelephonyTestCases', 2), ('CtsAppSecurityHostTestCases', 2), ('CtsDevicePolicyManagerTestCases', 2), ('CtsStatsdAtomHostTestCases', 1), ('CtsJobSchedulerTestCases', 1), ('CtsBluetoothTestCases', 1)]"	""	"android.permission.cts.PermissionControllerTest"	"uninstallApp"	"CtsPermissionTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLocationInfoTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/PermissionControllerTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/SplitPermissionsSystemTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/common/src/com/android/cts/devicepolicy/PermissionUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/LauncherAppsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsRcsManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/EphemeralTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ExternalStorageHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/JobThrottlingTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/BluetoothLeScanTest.java', 1)]"	"[('(1,ACCESS_FINE_LOCATION,/com/android/cts/devicepolicy/PermissionUtils.java)', 1), ('(8,ACCESS_FINE_LOCATION,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(6,ACCESS_FINE_LOCATION,/android/permission2/cts/RestrictedPermissionsTest.java)', 1), ('(1,android.permission.ACCESS,/com/android/cts/managedprofile/LauncherAppsTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java)', 1), ('(1,ACCESS_FINE_LOCATION,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(1,android.permission.ACCESS,/android/telephony/ims/cts/ImsRcsManagerTest.java)', 1), ('(1,android.permission.ACCESS,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(1,android.permission.ACCESS,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(13,ACCESS_FINE_LOCATION,/android/net/wifi/cts/WifiLocationInfoTest.java)', 1), ('(1,android.permission.ACCESS,/android/appsecurity/cts/ExternalStorageHostTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(2,ACCESS_FINE_LOCATION,/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java)', 1), ('(3,ACCESS_FINE_LOCATION,/android/permission/cts/SplitPermissionsSystemTest.java)', 1), ('(1,ACCESS_FINE_LOCATION,/android/bluetooth/cts/BluetoothLeScanTest.java)', 1), ('(11,ACCESS_FINE_LOCATION,/android/permission/cts/PermissionControllerTest.java)', 1)]"	"[('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[       ACCESS_BACKGROUND_LOCATION)));        assertAllRestrictedPermissionWhitelisted();    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ions.singleton(ACCESS_FINE_LOCATION));        assertNoRestrictedPermissionWhitelisted();    }   ])', 2), ('([1:/com/android/cts/devicepolicy/PermissionUtils.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[break;            }        }        assertTrue(""Couldn\'t find any button"", foundButton);    }}])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), (""([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[uetooth     * scan results; they'd always need to involve the user to gain permissions.     */   ])"", 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[               + "" com.android.bluetooth/.btservice.AdapterService set-test-mode disabled"");    }}])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[c static void tearDownOnce() {        getContext().unregisterReceiver(sCommandReceiver);    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 1), ('([1:/com/android/cts/managedprofile/LauncherAppsTest.java]:[android.permission.ACCESS]:[1]:method_text:[ry.getInstrumentation().getUiAutomation()                .dropShellPermissionIdentity();    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ uiAutomation.grantRuntimePermission(packageName, permission.ACCESS_BACKGROUND_LOCATION);    }   ])', 1), ('([1:/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[     }            }        }        assertThat(verifiedKnowPermissionState).isTrue();    }   ])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([1:/android/telephony/ims/cts/ImsRcsManagerTest.java]:[android.permission.ACCESS]:[1]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([1:/android/appsecurity/cts/EphemeralTest.java]:[android.permission.ACCESS]:[1]:method_text:[adPhoneNumbersPermission"");    }    /** Test for android.permission.ACCESS_COARSE_LOCATION */   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[int newUserId = newUsers.get(0);        assertFalse(getDevice().isUserRunning(newUserId));    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[android.permission.ACCESS]:[1]:method_text:[int newUserId = newUsers.get(0);        assertFalse(getDevice().isUserRunning(newUserId));    }}])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[E_NAME,                WIFI_LOCATION_TEST_APP_RETRIEVE_TRANSPORT_INFO_SERVICE), status);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ACKAGE_NAME, ACCESS_FINE_LOCATION);        triggerScanFgActivityAndAssertStatusIs(true);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[E_NAME, ACCESS_BACKGROUND_LOCATION);        triggerScanBgServiceAndAssertStatusIs(true);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ACKAGE_NAME, ACCESS_FINE_LOCATION);        triggerScanBgServiceAndAssertStatusIs(false);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[AME, ACCESS_FINE_LOCATION);        retrieveScanResultsFgActivityAndAssertStatusIs(true);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ACCESS_BACKGROUND_LOCATION);        retrieveScanResultsBgServiceAndAssertStatusIs(true);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[AME, ACCESS_FINE_LOCATION);        retrieveScanResultsBgServiceAndAssertStatusIs(false);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[, ACCESS_FINE_LOCATION);        retrieveConnectionInfoFgActivityAndAssertStatusIs(true);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ESS_BACKGROUND_LOCATION);        retrieveConnectionInfoBgServiceAndAssertStatusIs(true);    }   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[gServiceAndAssertStatusIs(false);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[gActivityAndAssertStatusIs(true);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[BgServiceAndAssertStatusIs(true);    }    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[NAME, ACCESS_FINE_LOCATION);        retrieveTransportInfoBgServiceAndAssertStatusIs(false);    }}])', 1), ('([1:/android/appsecurity/cts/ExternalStorageHostTest.java]:[android.permission.ACCESS]:[1]:method_text:[      getDevice().uninstallPackage(MULTIUSER_PKG);        wipePrimaryExternalStorage();    }   ])', 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[sTrue();    }    private interface Condition {        boolean isTrue() throws Exception;    }}])', 1), ('([2:/com/android/cts/deviceowner/WifiNetworkConfigurationWithoutFineLocationPermissionTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[           return;            }        }        fail(""Waited too long for wifi enabled"");    }}])', 1), ('([1:/android/permission/cts/SplitPermissionsSystemTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[PERMISSION_SERVICE);        mSplitPermissions = permissionManager.getSplitPermissions();    }   ])', 1), ('([2:/android/permission/cts/SplitPermissionsSystemTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[xactlyElementsIn(permission);        assertThat(split.getTargetSdk()).isEqualTo(targetSdk);    }}])', 1), ('([1:/android/bluetooth/cts/BluetoothLeScanTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[t case for BLE scans. Checks BLE scan timestamp is within correct range.     */    @MediumTest   ])', 1), ('([3:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[3]:method_text:[ions as permissionInfos        assertThat(numRuntimeGranted).isAtLeast(numInfosGranted);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ring>> result = revokePermissions(request, false);        assertThat(result).isEmpty();    }   ])', 1), ('([2:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[2]:method_text:[CCESS_FINE_LOCATION,                ACCESS_BACKGROUND_LOCATION, ACCESS_COARSE_LOCATION);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[LER_POLICY_VIOLATION, sContext.getMainExecutor()));        assertThat(result).isEmpty();    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[         singletonList(ACCESS_FINE_LOCATION));        revokePermissions(request, true);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[and after                    assertThat(numApps.get()).isAtLeast(1);                });    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[ontroller.countPermissionApps(singletonList(ACCESS_FINE_LOCATION), -1, (n) -> { }, null);    }   ])', 1), ('([1:/android/permission/cts/PermissionControllerTest.java]:[ACCESS_FINE_LOCATION]:[1]:method_text:[        sController.countPermissionApps(singletonList(ACCESS_FINE_LOCATION), 0, null, null);    }}])', 1)]"	""	""	"[('ACCESS_FINE_LOCATION', 45), ('android.permission.ACCESS', 5)]"	"[('[com.android.cts.devicepolicy.DeviceOwnerTest testWifiNetworkConfigurationWithoutFineLocationPermission CtsDevicePolicyManagerTestCases]', 2), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Upgrade CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Downgrade CtsPermissionTestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest isTrue CtsPermission2TestCases]', 1), ('[com.android.cts.managedprofile.LauncherAppsTest dropShellPermissionIdentity None]', 1), ('[android.telephony.cts.TelephonyManagerTest testHasCarrierPrivilegesViaCarrierConfigs CtsTelephonyTestCases]', 1), ('[android.cts.statsdatom.permissionstate.DangerousPermissionStateTests testDangerousPermissionState CtsStatsdAtomHostTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[android.telephony.ims.cts.ImsRcsManagerTest testMethodPermissions CtsTelephonyTestCases]', 1), ('[android.appsecurity.cts.EphemeralTest testReadPhoneNumbersPermission CtsAppSecurityHostTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest isNotNull CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testScanTriggerAllowedForForegroundActivityWithFineLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testScanTriggerAllowedForBackgroundServiceWithBackgroundLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testScanTriggerNotAllowedForBackgroundServiceWithFineLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testScanResultsRetrievalAllowedForForegroundActivityWithFineLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testScanResultsRetrievalAllowedForBackgroundServiceWithBackgroundLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testScanResultsRetrievalNotAllowedForBackgroundServiceWithFineLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testConnectionInfoRetrievalAllowedForForegroundActivityWithFineLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testConnectionInfoRetrievalAllowedForBackgroundServiceWithBackgroundLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testConnectionInfoRetrievalNotAllowedForBackgroundServiceWithFineLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalAllowedForForegroundActivityWithFineLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalAllowedForBackgroundServiceWithBackgroundLocationPermission CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiLocationInfoTest testTransportInfoRetrievalNotAllowedForBackgroundServiceWithFineLocationPermission CtsWifiTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictingStopReason_Doze CtsJobSchedulerTestCases]', 1), ('[com.android.cts.deviceowner.WifiNetworkConfigurationWithoutFineLocationPermissionTest testAddAndRetrieveCallerConfiguredNetworks None]', 1), ('[android.permission.cts.SplitPermissionsSystemTest getSplitPermissions CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionsSystemTest getSplitPermission CtsPermissionTestCases]', 1), ('[android.bluetooth.cts.BluetoothLeScanTest isEnabled CtsBluetoothTestCases]', 1), ('[android.permission.cts.PermissionControllerTest OnRevokeRuntimePermissionsCallback CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsDoNotAlreadyRevokedPermission CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsDryRunForegroundPermission CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsPolicyViolationFromWrongPackage CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest revokePermissionsWithNullPkg CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest countPermissionAppsGranted CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest countPermissionAppsInvalidFlags CtsPermissionTestCases]', 1), ('[android.permission.cts.PermissionControllerTest countPermissionAppsNullCallback CtsPermissionTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-16"	"9.9.3/C-1-16"	"09090300.670116"	"""C-1-16] MUST ensure that all non-deleted encrypted filenames on persistent storage in distinct directories were encrypted using distinct combinations of encryption key and initialization vector (IV)."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-4-2"	"9.1/C-4-2"	"09010000.670402"	"""C-4-2] MUST NOT have android.permission.INTERNET permission. This is stricter than the STRONGLY RECOMMENDED listed in section 9.8.6."""	""	""	"RECOMMENDED android.permission.INTERNET INTERNET"	""	""	""	""	"[('android.net.wifi.cts.MultiStaConcurrencyWifiNetworkSpecifierTest', 4), ('android.net.vcn.cts.VcnGatewayConnectionConfigTest', 3), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 3), ('com.android.cts.ephemeralapp1.ClientTest', 3), ('android.net.vcn.cts.VcnManagerTest', 3), ('test.java.com.android.bedstead.nene.permissions.PermissionsTest', 2), ('android.content.pm.cts.PermissionInfoTest', 2), ('android.app.cts.DownloadManagerTest', 2), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('android.drm.cts.DrmEventTest', 1), ('android.net.vcn.cts.TestNetworkWrapper', 1), ('main.java.com.android.bedstead.nene.permissions.PermissionContext', 1), ('android.widget.cts29.ToastTest', 1), ('com.android.cts.useprocess.BaseNetworkService', 1), ('android.net.cts.network.permission.InternetPermissionTest', 1), ('android.server.wm.ActivityManagerTestBase', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestGrandparent', 1), ('android.hardware.cts.helpers.SensorCtsHelper', 1), ('com.android.compatibility.common.util.UiccUtil', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('android.appsecurity.cts.EphemeralTest', 1), ('com.android.cts.verifier.wifi.testcase.NetworkRequestTestCase', 1), ('com.android.cts.deviceowner.NetworkLoggingTest', 1), ('android.webkit.cts.ServiceWorkerWebSettingsTest', 1), ('main.java.com.android.bedstead.nene.permissions.Permissions', 1), ('main.java.com.android.activitycontext.ActivityContext', 1), ('android.os.cts.HwBinderTest', 1), ('com.android.server.cts.device.statsdatom.AtomTests', 1), ('android.mediav2.cts.EncoderProfileLevelTest', 1), ('android.net.wifi.cts.ConcurrencyTest', 1), ('android.telephony.ims.cts.ImsRegistrationAttributesTest', 1), ('android.media.cts.MediaFormatTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1), ('android.wifibroadcasts.cts.WifiBroadcastsHostJUnit4Test', 1), ('android.telephony.ims.cts.ImsServiceTest', 1), ('com.android.cts.verifier.car.GarageModeChecker', 1), ('android.content.type.cts.MimeMapTest', 1)]"	"[('size', 7), ('doubleValue', 7), ('getSimpleName', 6), ('build', 5), ('getPackageName', 5), ('getInstrumentation', 4), ('notify', 4), ('Builder', 3), ('close', 3), ('getContext', 3), ('readString', 2), ('toString', 2), ('getApplication', 2), ('getProcessName', 2), ('getName', 2), ('getIntent', 2), ('onResume', 2), ('buildVcnGatewayConnectionConfigBase', 2), ('setUp', 2), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('clearCapabilities', 1), ('CloseGuard', 1), ('getFileDescriptor', 1), ('getInterfaceName', 1), ('readInt', 1), ('Exception', 1), ('fillInStackTrace', 1), ('StringWriter', 1), ('flush', 1), ('Binder', 1), ('permitNetwork', 1), ('myPid', 1), ('myUid', 1), ('getPackageManager', 1), ('ObjectTracker', 1), ('grandparentBeforeClass', 1), ('shadowedGrandparentBeforeClass', 1), ('shadowedGrandparentWithoutBeforeClass', 1), ('SensorCtsHelper', 1), ('getSensor', 1), ('getRequestedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('StringBuilder', 1), ('getReceiverComponentName', 1), ('myUserId', 1), ('Object', 1), ('NullPointerException', 1), ('getTargetContext', 1), ('Intent', 1), ('await', 1), ('countDown', 1), ('input', 1), ('BitSet', 1), ('WifiP2pGroup', 1), ('MySync', 1), ('MyResponse', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('buildTunnelConnectionParams', 1), ('buildVcnGatewayConnectionConfig', 1), ('getHeight', 1), ('getWidth', 1), ('getLayoutInflater', 1), ('hashCode', 1), ('getAllPendingJobs', 1), ('getId', 1), ('bug112162449_audio', 1)]"	"[('CtsVcnTestCases', 7), ('CtsWifiTestCases', 5), ('CtsCameraTestCases', 3), ('CtsContentTestCases', 2), ('CtsAppTestCases', 2), ('CtsTelephonyTestCases', 2), ('CtsUsageStatsTestCases', 1), ('CtsDrmTestCases', 1), ('CtsWidgetTestCases', 1), ('CtsNetTestCases', 1), ('CtsSensorTestCases', 1), ('CtsAppSecurityHostTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsMediaV2TestCases', 1), ('CtsMediaTestCases', 1), ('CtsWifiBroadcastsHostTestCases', 1), ('CtsMimeMapTestCases', 1)]"	""	"android.net.vcn.cts.VcnManagerTest"	"bug112162449_audio"	"CtsVcnTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/vcn/src/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/EphemeralApp1/src/com/android/cts/ephemeralapp1/ClientTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/vcn/src/android/net/vcn/cts/VcnManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/PermissionInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/DownloadManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/drm/src/android/drm/cts/DrmEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/vcn/src/android/net/vcn/cts/TestNetworkWrapper.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/PermissionContext.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UseProcessSuccess/src/com/android/cts/useprocess/BaseNetworkService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/netpermission/internetpermission/src/android/net/cts/network/permission/InternetPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/ActivityManagerTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelper.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/UiccUtil.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/EphemeralTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/wifi/testcase/NetworkRequestTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/NetworkLoggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/ServiceWorkerWebSettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/Permissions.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/activitycontext/src/main/java/com/android/activitycontext/ActivityContext.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/apps/statsdapp/src/com/android/server/cts/device/statsdatom/AtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/EncoderProfileLevelTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConcurrencyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsRegistrationAttributesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaFormatTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/wifibroadcasts/src/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeChecker.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/mimemap/src/android/content/type/cts/MimeMapTest.java', 1)]"	"[('(1,android.permission.INTERNET,/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java)', 1), ('(1,INTERNET,/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java)', 1), ('(1,INTERNET,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(1,android.permission.INTERNET,/android/content/pm/cts/PermissionInfoTest.java)', 1), ('(3,INTERNET,/android/content/pm/cts/PermissionInfoTest.java)', 1), ('(2,INTERNET,/android/drm/cts/DrmEventTest.java)', 1), ('(1,INTERNET,/android/net/vcn/cts/TestNetworkWrapper.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/PermissionContext.java)', 1), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 1), ('(4,INTERNET,/com/android/cts/useprocess/BaseNetworkService.java)', 1), ('(3,INTERNET,/android/net/cts/network/permission/InternetPermissionTest.java)', 1), ('(1,RECOMMENDED,/android/server/wm/ActivityManagerTestBase.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java)', 1), ('(1,RECOMMENDED,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(1,RECOMMENDED,/com/android/compatibility/common/util/UiccUtil.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(2,INTERNET,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(2,INTERNET,/com/android/cts/verifier/wifi/testcase/NetworkRequestTestCase.java)', 1), ('(1,INTERNET,/com/android/cts/deviceowner/NetworkLoggingTest.java)', 1), ('(3,INTERNET,/android/webkit/cts/ServiceWorkerWebSettingsTest.java)', 1), ('(2,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/Permissions.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/activitycontext/ActivityContext.java)', 1), ('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 1), ('(1,INTERNET,/com/android/server/cts/device/statsdatom/AtomTests.java)', 1), ('(1,INTERNET,/android/mediav2/cts/EncoderProfileLevelTest.java)', 1), ('(4,INTERNET,/android/app/cts/DownloadManagerTest.java)', 1), ('(1,INTERNET,/android/net/wifi/cts/ConcurrencyTest.java)', 1), ('(4,INTERNET,/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java)', 1), ('(5,INTERNET,/android/telephony/ims/cts/ImsRegistrationAttributesTest.java)', 1), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(3,INTERNET,/com/android/cts/ephemeralapp1/ClientTest.java)', 1), ('(1,INTERNET,/android/media/cts/MediaFormatTest.java)', 1), ('(4,RECOMMENDED,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(1,INTERNET,/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java)', 1), ('(15,INTERNET,/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java)', 1), ('(2,INTERNET,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(1,INTERNET,/com/android/cts/verifier/car/GarageModeChecker.java)', 1), ('(1,INTERNET,/android/content/type/cts/MimeMapTest.java)', 1), ('(3,INTERNET,/android/net/vcn/cts/VcnManagerTest.java)', 1)]"	"[('([1:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[android.permission.INTERNET]:[1]:method_text:[String DECLARED_PERMISSION_NOT_HELD_BY_SHELL_PRE_S =            ""android.permission.INTERNET"";   ])', 1), ('([1:/test/java/com/android/bedstead/nene/permissions/PermissionsTest.java]:[INTERNET]:[1]:method_text:[String DECLARED_PERMISSION_NOT_HELD_BY_SHELL_PRE_S =            ""android.permission.INTERNET"";   ])', 1), ('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[INTERNET]:[1]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([1:/android/content/pm/cts/PermissionInfoTest.java]:[android.permission.INTERNET]:[1]:method_text:[e internet, so this permission is not required to send data to ""            + ""the internet."";   ])', 1), ('([3:/android/content/pm/cts/PermissionInfoTest.java]:[INTERNET]:[3]:method_text:[e internet, so this permission is not required to send data to ""            + ""the internet."";   ])', 1), ('([2:/android/drm/cts/DrmEventTest.java]:[INTERNET]:[2]:method_text:[h(IllegalArgumentException iae) {            // intentionally ignored        }        */    }}])', 1), ('([1:/android/net/vcn/cts/TestNetworkWrapper.java]:[INTERNET]:[1]:method_text:[ork;                this.networkCapabilities = networkCapabilities;            }        }    }}])', 1), ('([1:/main/java/com/android/bedstead/nene/permissions/PermissionContext.java]:[RECOMMENDED]:[1]:method_text:[ock */public interface PermissionContext extends AutoCloseable {    @Override    void close();}])', 1), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([4:/com/android/cts/useprocess/BaseNetworkService.java]:[INTERNET]:[4]:method_text:[ame;    }    @Override    public IBinder onBind(Intent intent) {        return mBinder;    }}])', 1), ('([3:/android/net/cts/network/permission/InternetPermissionTest.java]:[INTERNET]:[3]:method_text:[>Tests Permission:     *   {@link android.Manifest.permission#INTERNET}.     */    @SmallTest   ])', 1), ('([1:/android/server/wm/ActivityManagerTestBase.java]:[RECOMMENDED]:[1]:method_text:[ public static class ConfigChangeHandlingActivity extends CommandSession.BasicTestActivity {    }}])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java]:[RECOMMENDED]:[1]:method_text:[andparentWithoutBeforeClass() {        sShadowedGrandparentWithoutBeforeClassHasRun = true;    }}])', 1), ('([1:/android/hardware/cts/helpers/SensorCtsHelper.java]:[RECOMMENDED]:[1]:method_text:[;        SystemUtil.runShellCommand(InstrumentationRegistry.getInstrumentation(), command);    }}])', 1), ('([1:/com/android/compatibility/common/util/UiccUtil.java]:[RECOMMENDED]:[1]:method_text:[tUp} method if an entire class requires a particular     * UICC, or at the top of a specific {@code])', 1), ('([3:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[RECOMMENDED]:[3]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([2:/android/appsecurity/cts/EphemeralTest.java]:[INTERNET]:[2]:method_text:[                ""testInternetPermission"");    }    /** Test for android.permission.VIBRATE */   ])', 1), ('([2:/com/android/cts/verifier/wifi/testcase/NetworkRequestTestCase.java]:[INTERNET]:[2]:method_text:[vityManager.unregisterNetworkCallback(mNetworkCallback);        }        super.tearDown();    }}])', 1), ('([1:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[INTERNET]:[1]:method_text:[we need to generate enough internet     * traffic, so that the batch of logs is created     */   ])', 1), ('([3:/android/webkit/cts/ServiceWorkerWebSettingsTest.java]:[INTERNET]:[3]:method_text:[ockNetworkLoads(b);            assertEquals(b, mSettings.getBlockNetworkLoads());        }    }}])', 1), ('([2:/main/java/com/android/bedstead/nene/permissions/Permissions.java]:[RECOMMENDED]:[2]:method_text:[ExistingPermissions.toArray(new String[0]));        }        mExistingPermissions = null;    }}])', 1), ('([1:/main/java/com/android/activitycontext/ActivityContext.java]:[RECOMMENDED]:[1]:method_text:[hrowValue = e;                }                sLatch.countDown();            }        }    }}])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([1:/com/android/server/cts/device/statsdatom/AtomTests.java]:[INTERNET]:[1]:method_text:[PORT_WIFI)) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/mediav2/cts/EncoderProfileLevelTest.java]:[INTERNET]:[1]:method_text:[tainer formats that can hold the mime and validates the     * keys in extracted format.     */   ])', 1), ('([2:/android/app/cts/DownloadManagerTest.java]:[INTERNET]:[2]:method_text:[(id, 0);        } finally {            mContext.unregisterReceiver(receiver);        }    }   ])', 1), ('([2:/android/app/cts/DownloadManagerTest.java]:[INTERNET]:[2]:method_text:[       mContext.unregisterReceiver(receiver);        }    }    @CddTest(requirement=""7.6.1"")   ])', 1), ('([1:/android/net/wifi/cts/ConcurrencyTest.java]:[INTERNET]:[1]:method_text:[ED, mMySync.expectedP2pState);        removeAllPersistentGroups();        return true;    }   ])', 1), ('([2:/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java]:[INTERNET]:[2]:method_text:[GatewayConnectionConfig() {        return buildVcnGatewayConnectionConfigBase().build();    }   ])', 1), ('([1:/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java]:[INTERNET]:[1]:method_text:[   assertArrayEquals(RETRY_INTERNAL_MILLIS, gatewayConnConfig.getRetryIntervalsMillis());    }   ])', 1), ('([1:/android/net/vcn/cts/VcnGatewayConnectionConfigTest.java]:[INTERNET]:[1]:method_text:[        new int[] {NET_CAPABILITY_INTERNET}, gatewayConnConfig.getExposedCapabilities());    }   ])', 1), ('([5:/android/telephony/ims/cts/ImsRegistrationAttributesTest.java]:[INTERNET]:[5]:method_text:[ertNotNull(attr.getFeatureTags());        assertEquals(0, attr.getFeatureTags().size());    }   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 1), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[INTERNET]:[1]:method_text:[on(Manifest.permission.INTERNET),                is(PackageManager.PERMISSION_GRANTED));    }   ])', 1), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[INTERNET]:[1]:method_text:[sFlags[permissionIndex]                & PackageInfo.REQUESTED_PERMISSION_GRANTED) != 0;    }   ])', 1), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[INTERNET]:[1]:method_text:[ce(Context.CONNECTIVITY_SERVICE);        manager.reportNetworkConnectivity(null, false);    }   ])', 1), ('([1:/android/media/cts/MediaFormatTest.java]:[INTERNET]:[1]:method_text:[is test uses introspection to find the mime type fields.     *     * @throws Exception     */   ])', 1), ('([4:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[RECOMMENDED]:[4]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([1:/android/wifibroadcasts/cts/WifiBroadcastsHostJUnit4Test.java]:[INTERNET]:[1]:method_text:[s part of CTS Pre-conditions        device.executeShellCommand(""svc wifi enable; sleep 1"");    }}])', 1), ('([4:/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java]:[INTERNET]:[4]:method_text:[ to a network using peer to peer API.     * 3. Verify that both connections are active.     */   ])', 1), ('([4:/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java]:[INTERNET]:[4]:method_text:[work using internet connectivity API.     * 3. Verify that both connections are active.     */   ])', 1), ('([4:/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java]:[INTERNET]:[4]:method_text:[peer API which is rejected by user.     * 3. Verify that only one connection is active.     */   ])', 1), ('([3:/android/net/wifi/cts/MultiStaConcurrencyWifiNetworkSpecifierTest.java]:[INTERNET]:[3]:method_text:[ion available for apps.        assertThat(mTestHelper.getNumWifiConnections()).isEqualTo(1);    }])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[INTERNET]:[2]:method_text:[E permission."");        } catch (SecurityException e) {            //expected        }    }   ])', 1), ('([1:/com/android/cts/verifier/car/GarageModeChecker.java]:[INTERNET]:[1]:method_text:[HED, 0, 0, mJobParameter);                handler.sendMessage(msg);            }        }    }}])', 1), ('([1:/android/content/type/cts/MimeMapTest.java]:[INTERNET]:[1]:method_text:[TypeFromExtension(""audio/mpeg"", ""m4a"");        assertBidirectional(""audio/aac"", ""aac"");    }   ])', 1), ('([1:/android/net/vcn/cts/VcnManagerTest.java]:[INTERNET]:[1]:method_text:[etworkCapabilities(vcnNetwork));            }        } // Else already torn down, pass.    }   ])', 1), ('([1:/android/net/vcn/cts/VcnManagerTest.java]:[INTERNET]:[1]:method_text:[gId */,                true /* expectedUseEncap */,                ikeDeleteChildResp);    }   ])', 1), ('([1:/android/net/vcn/cts/VcnManagerTest.java]:[INTERNET]:[1]:method_text:[     });        });        mConnectivityManager.unregisterNetworkCallback(cellNetworkCb);    }}])', 1)]"	""	""	"[('INTERNET', 35), ('RECOMMENDED', 14), ('android.permission.INTERNET', 2)]"	"[('[test.java.com.android.bedstead.nene.permissions.PermissionsTest TestApis None]', 2), ('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.drm.cts.DrmEventTest testGetAttribute CtsDrmTestCases]', 1), ('[android.net.vcn.cts.TestNetworkWrapper VcnTestNetworkCallback CtsVcnTestCases]', 1), ('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[com.android.cts.useprocess.BaseNetworkService isInstantApp None]', 1), ('[android.server.wm.ActivityManagerTestBase PostAssertionRule None]', 1), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[android.appsecurity.cts.EphemeralTest testInternetPermission CtsAppSecurityHostTestCases]', 1), ('[com.android.cts.verifier.wifi.testcase.NetworkRequestTestCase isEmpty None]', 1), ('[com.android.cts.deviceowner.NetworkLoggingTest testProvidingWrongBatchTokenReturnsNull None]', 1), ('[android.webkit.cts.ServiceWorkerWebSettingsTest testBlockNetworkLoads CtsWebkitTestCases]', 1), ('[main.java.com.android.bedstead.nene.permissions.Permissions TestApis None]', 1), ('[com.android.server.cts.device.statsdatom.AtomTests testGenerateMobileTraffic None]', 1), ('[android.app.cts.DownloadManagerTest testDownloadManagerSupportsHttpWithExternalWebServer CtsAppTestCases]', 1), ('[android.app.cts.DownloadManagerTest testDownloadManagerSupportsHttpsWithExternalWebServer CtsAppTestCases]', 1), ('[android.net.wifi.cts.ConcurrencyTest ActionListener CtsWifiTestCases]', 1), ('[android.net.vcn.cts.VcnGatewayConnectionConfigTest testBuildVcnGatewayConnectionConfig CtsVcnTestCases]', 1), ('[android.net.vcn.cts.VcnGatewayConnectionConfigTest testBuilderAddRemove CtsVcnTestCases]', 1), ('[android.telephony.ims.cts.ImsRegistrationAttributesTest testRegistrationTypeToTransportAttr CtsTelephonyTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations CtsCameraTestCases]', 1), ('[com.android.cts.ephemeralapp1.ClientTest testInstallPermissionGranted None]', 1), ('[com.android.cts.ephemeralapp1.ClientTest testInstallPermissionGrantedInPackageInfo None]', 1), ('[com.android.cts.ephemeralapp1.ClientTest testInternetPermission None]', 1), ('[android.media.cts.MediaFormatTest testKeyConsistency CtsMediaTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[android.wifibroadcasts.cts.WifiBroadcastsHostJUnit4Test testCleanLogcat CtsWifiBroadcastsHostTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyWifiNetworkSpecifierTest isStaConcurrencyForLocalOnlyConnectionsSupported CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyWifiNetworkSpecifierTest testConnectToPeerPeerNetworkWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyWifiNetworkSpecifierTest testConnectToInternetNetworkWhenConnectedToPeerPeerNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyWifiNetworkSpecifierTest testPeerToPeerConnectionRejectWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.telephony.ims.cts.ImsServiceTest testMmTelManagerRegistrationCallbackS CtsTelephonyTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeChecker PersistableBundle None]', 1), ('[android.net.vcn.cts.VcnManagerTest testSetVcnConfigOnTestNetwork CtsVcnTestCases]', 1), ('[android.net.vcn.cts.VcnManagerTest testVcnMigrationAfterNetworkDies CtsVcnTestCases]', 1), ('[android.net.vcn.cts.VcnManagerTest testVcnSafemodeOnTestNetwork CtsVcnTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.7.2  . Camera"	"7.5"	"H-1-7"	"7.5/H-1-7"	"07050000.720107"	"""[7.5/H-1-7] For apps targeting API level 31 or higher, the camera device MUST NOT support JPEG capture resolutions smaller than 1080p for both primary cameras. """	""	""	"JPEG"	""	""	""	""	"[('android.hardware.camera2.cts.ReprocessCaptureTest', 10), ('android.hardware.camera2.cts.OfflineSessionTest', 8), ('android.provider.cts.media.MediaStore_Images_MediaTest', 6), ('android.hardware.camera2.cts.RobustnessTest', 4), ('android.graphics.cts.AImageDecoderTest', 4), ('android.hardware.camera2.cts.BurstCaptureTest', 3), ('android.hardware.camera2.cts.ZoomCaptureTest', 2), ('android.provider.cts.media.MediaStoreNotificationTest', 2), ('android.media.cts.CameraProfileTest', 2), ('android.jobscheduler.cts.TriggerContentTest', 1), ('android.hardware.camera2.cts.helpers.StaticMetadat', 1), ('android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase', 1), ('android.hardware.camera2.cts.CaptureResultTest', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('com.android.cts.deviceinfo.CameraDeviceInfo', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1)]"	"[('startGroup', 19), ('endGroup', 19), ('close', 15), ('getWidth', 12), ('getHeight', 12), ('endArray', 11), ('start', 8), ('AtomicInteger', 7), ('setUp', 5), ('getLooper', 5), ('tearDown', 4), ('Object', 4), ('capacity', 4), ('clear', 4), ('getLower', 4), ('getUpper', 4), ('getRawType', 4), ('getActualTypeArguments', 4), ('getSurface', 4), ('getContentResolver', 3), ('build', 3), ('quitSafely', 3), ('run', 3), ('getOutputStream', 3), ('printStackTrace', 3), ('getAssetManager', 3), ('myPid', 2), ('toString', 2), ('BlockingStateCallback', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('getMessage', 2), ('getOutputFormats', 2), ('getInputFormats', 2), ('getPhysicalCameraId', 2), ('getName', 2), ('getFd', 2), ('getTargetContext', 2), ('hashCode', 1), ('getPathSegments', 1), ('getPath', 1), ('getScannedPath', 1), ('getScannedUri', 1), ('countDown', 1), ('getContext', 1), ('delete', 1), ('makePhotosJobInfo', 1), ('getAeModeName', 1), ('getAfModeName', 1), ('CameraErrorCollector', 1), ('getPackageManager', 1), ('getSimpleName', 1), ('onCreate', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('onDestroy', 1), ('quit', 1), ('size', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('getNumerator', 1), ('getDenominator', 1), ('getHighSpeedVideoSizes', 1), ('getGenericComponentType', 1), ('getColorSpace', 1), ('recycle', 1), ('getFilesDir', 1), ('mkdirs', 1), ('createNewFile', 1), ('release', 1), ('data', 1), ('getSharedVolumeNames', 1)]"	"[('CtsCameraTestCases', 29), ('CtsProviderTestCases', 8), ('CtsGraphicsTestCases', 4), ('CtsMediaTestCases', 2), ('CtsJobSchedulerTestCases', 1)]"	""	"android.provider.cts.media.MediaStore_Images_MediaTest"	"getContentResolver"	"CtsProviderTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ReprocessCaptureTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Images_MediaTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/AImageDecoderTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreNotificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CameraProfileTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/TriggerContentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/StaticMetadata.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-device-info/src/com/android/cts/deviceinfo/CameraDeviceInfo.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 1)]"	"[('(1,JPEG,/android/jobscheduler/cts/TriggerContentTest.java)', 1), ('(9,JPEG,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(4,JPEG,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(65,JPEG,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(2,JPEG,/android/provider/cts/media/MediaStoreNotificationTest.java)', 1), ('(6,JPEG,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(27,JPEG,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(16,JPEG,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(6,JPEG,/android/media/cts/CameraProfileTest.java)', 1), ('(22,JPEG,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(1,JPEG,/com/android/cts/deviceinfo/CameraDeviceInfo.java)', 1), ('(6,JPEG,/android/graphics/cts/AImageDecoderTest.java)', 1), ('(106,JPEG,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(6,JPEG,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(33,JPEG,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 1), ('(11,JPEG,/android/provider/cts/media/MediaStore_Images_MediaTest.java)', 1)]"	"[('([1:/android/jobscheduler/cts/TriggerContentTest.java]:[JPEG]:[1]:method_text:[ize(); i++) {            assertEquals(expectedPath.get(i), actualPath.get(i));        }    }   ])', 1), ('([9:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[JPEG]:[9]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([1:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[JPEG]:[1]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([3:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[JPEG]:[3]:method_text:[t.JPEG);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[JPEG]:[2]:method_text:[nput/output combinations for each hardware     * level and capability work as expected.     */   ])', 1), ('([4:/android/hardware/camera2/cts/RobustnessTest.java]:[JPEG]:[4]:method_text:[  if (inputWriter != null) {                inputWriter.close();            }        }    }   ])', 1), ('([13:/android/hardware/camera2/cts/RobustnessTest.java]:[JPEG]:[13]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 1), ('([46:/android/hardware/camera2/cts/RobustnessTest.java]:[JPEG]:[46]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([1:/android/provider/cts/media/MediaStoreNotificationTest.java]:[JPEG]:[1]:method_text:[gister(genericFile)) {            mResolver.delete(specificImage, null, null);        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStoreNotificationTest.java]:[JPEG]:[1]:method_text:[Resolver()                        .unregisterContentObserver(this);            }        }    }}])', 1), ('([6:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[JPEG]:[6]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([27:/android/hardware/camera2/cts/CaptureResultTest.java]:[JPEG]:[27]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([16:/com/android/cts/verifier/camera/its/ItsService.java]:[JPEG]:[16]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([3:/android/media/cts/CameraProfileTest.java]:[JPEG]:[3]:method_text:[codingQualityParameter(CameraProfile.QUALITY_HIGH);        checkQuality(low, mid, high);    }   ])', 1), ('([3:/android/media/cts/CameraProfileTest.java]:[JPEG]:[3]:method_text:[rameter(id, CameraProfile.QUALITY_HIGH);            checkQuality(low, mid, high);        }    }}])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[ied about the     * remaining offline requests via the registered offline callback.</p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[3]:method_text:[cks behave as expected     * in case the camera supports offline depth jpeg output.</p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[7]:method_text:[callbacks behave as expected     * in case the camera supports offline HEIC output.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[ssion and receive     * all corresponding callbacks according to the documentation.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[nitialize a new regular capture session     * in parallel with the offline session.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[eive the expected sequence abort callbacks when switching     * to offline session.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[re correctly advertised and switching to offline     * mode is failing as expected.</p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[7]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([1:/com/android/cts/deviceinfo/CameraDeviceInfo.java]:[JPEG]:[1]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([1:/android/graphics/cts/AImageDecoderTest.java]:[JPEG]:[1]:method_text:[tStackTrace();            fail(""Could not open "" + uri);        }        bm.recycle();    }   ])', 1), ('([2:/android/graphics/cts/AImageDecoderTest.java]:[JPEG]:[2]:method_text:[           return ""image/webp"";            default:                return """";        }    }   ])', 1), ('([2:/android/graphics/cts/AImageDecoderTest.java]:[JPEG]:[2]:method_text:[, 32, 32, ""image/jpeg"", false, DataSpace.ADATASPACE_UNKNOWN);        nCloseAsset(asset);    }   ])', 1), ('([1:/android/graphics/cts/AImageDecoderTest.java]:[JPEG]:[1]:method_text:[coder, ANDROID_BITMAP_FORMAT_NONE, false /* unpremul */, bm);        nCloseAsset(asset);    }   ])', 1), ('([106:/android/hardware/camera2/cts/CameraTestUtils.java]:[JPEG]:[106]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[JPEG]:[1]:method_text:[is test uses STILL_CAPTURE intent, and exercises path where     * enableZsl is enabled.     */   ])', 1), ('([4:/android/hardware/camera2/cts/BurstCaptureTest.java]:[JPEG]:[4]:method_text:[de.     * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.     */   ])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[JPEG]:[1]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[KEYS,    }    /**     * Test YUV_420_888 -> YUV_420_888 with maximal supported sizes     */   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[);        }    }    /**     * Test YUV_420_888 -> JPEG with maximal supported sizes     */   ])', 1), ('([3:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[3]:method_text:[);        }    }    /**     * Test YUV_420_888 -> HEIC with maximal supported sizes     */   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[0_888);        }    }    /**     * Test OPAQUE -> JPEG with maximal supported sizes     */   ])', 1), ('([3:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[3]:method_text:[.JPEG);        }    }    /**     * Test OPAQUE -> HEIC with maximal supported sizes     */   ])', 1), ('([2:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[2]:method_text:[ter.queueInputBuffer may become     * stuck due to stale buffers from previous session.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[2]:method_text:[      }    }    /**     * Test burst reprocessing captures with and without preview.     */   ])', 1), (""([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[put's exif data for the largest input and output sizes for each     * supported format.     */   ])"", 1), ('([4:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[4]:method_text:[         }            } finally {                closeDevice();            }        }    }   ])', 1), ('([15:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[15]:method_text:[   public TotalCaptureResult getTotalCaptureResult() {            return mResult;        }    }}])', 1), ('([2:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[JPEG]:[2]:method_text:[ntUri(mVolumeName);        mExternalFiles = MediaStore.Files.getContentUri(mVolumeName);    }   ])', 1), ('([4:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[JPEG]:[4]:method_text:[quals(MIME_TYPE_JPEG, c.getString(c.getColumnIndex(Media.MIME_TYPE)));        c.close();    }   ])', 1), ('([2:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[JPEG]:[2]:method_text:[    }    /**     * b/155320967 Test that update with conflict is resolved as replace.     */   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[JPEG]:[1]:method_text:[SS_MEDIA_LOCATION"");        } catch (UnsupportedOperationException expected) {        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[JPEG]:[1]:method_text:[t());            assertTrue(c.isNull(0));            assertTrue(c.isNull(1));        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[JPEG]:[1]:method_text:[ssertTrue(""Invalid display name "" + displayName, displayName.endsWith("".jpg""));        }    }   ])', 1)]"	""	""	"[('JPEG', 48)]"	"[('[android.jobscheduler.cts.TriggerContentTest exists CtsJobSchedulerTestCases]', 1), ('[android.hardware.camera2.cts.helpers.StaticMetadat getCharacteristics None]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testJpegZoomCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionOutputCombinations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionReprocessConfigurations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testVerifyReprocessMandatoryOutputCombinationTables CtsCameraTestCases]', 1), ('[android.provider.cts.media.MediaStoreNotificationTest testSimple CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStoreNotificationTest testCursor CtsProviderTestCases]', 1), ('[android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase isInstantApp CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[android.media.cts.CameraProfileTest testGetImageEncodingQualityParameter CtsMediaTestCases]', 1), ('[android.media.cts.CameraProfileTest testGetWithId CtsMediaTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineCallbacks CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineDepthJpeg CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testDeviceCloseAndOpen CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionClose CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionWithRegularSession CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testRepeatingSequenceAbort CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs CtsCameraTestCases]', 1), ('[com.android.cts.deviceinfo.CameraDeviceInfo getAllCharacteristicsKeyNames None]', 1), ('[android.graphics.cts.AImageDecoderTest exists CtsGraphicsTestCases]', 1), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testJpegBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicYuvToYuvReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicYuvToJpegReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicOpaqueToYuvReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicOpaqueToJpegReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testCrossSessionCaptureException CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testQueueImageWithoutRequest CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessTimestamps CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessJpegExif CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessRequestKeys CtsCameraTestCases]', 1), ('[android.provider.cts.media.MediaStore_Images_MediaTest testInsertImageWithImagePath CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStore_Images_MediaTest testStoreImagesMediaExternal CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStore_Images_MediaTest testLocationRedaction CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStore_Images_MediaTest testLocationDeprecated CtsProviderTestCases]', 1), ('[android.provider.cts.media.MediaStore_Images_MediaTest testMetadata CtsProviderTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-3"	"9.8/H-1-3"	"09080000.720103"	"""[9.8/H-1-3] MUST NOT supply mic audio that is longer than 30 seconds for an individual hardware-triggered request to the hotword detection service. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-5-1"	"9.8.2/H-5-1"	"09080200.720501"	"""[9.8.2/H-5-1] MUST display the camera indicator when an app is accessing live camera data, but not when the camera is only being accessed by app(s) holding the roles called out in section 9.1 with CDD identifier [C-4-X]. """	""	""	"CDD app(s)"	""	""	""	""	"[('android.permission.cts.NearbyDevicesPermissionTest', 11), ('android.opengl.cts.OpenGlEsVersionTest', 10), ('android.security.cts.KernelConfigTest', 7), ('android.appwidget.cts.RequestPinAppWidgetTest', 2), ('android.mediapc.cts.MultiEncoderPairPerfTest', 2), ('android.telephony.cts.TelephonyManagerTest', 2), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 2), ('android.location.cts.gnss.GnssPseudorangeVerificationTest', 2), ('android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest', 2), ('android.server.wm.CompatChangeTests', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('com.android.cts.verifier.companion.CompanionDeviceTestActivity', 1), ('com.android.cts.verifier.widget.WidgetTestActivity', 1), ('com.android.cts.verifier.audio.MidiTestActivityBase', 1), ('android.renderscript.cts.generated.TestAcosh', 1), ('com.android.cts.verifier.security.IdentityCredentialAuthentication', 1), ('android.database.cts.MergeCursorTest', 1), ('com.android.cts.apicoverage.HtmlReport', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('com.android.cts.verifier.audio.AudioOutColdStartLatencyActivity', 1), ('com.android.cts.apicoverage.CddCoverage', 1), ('android.host.accounts.BaseMultiUserTest', 1), ('android.location.cts.common.TestMeasurementUtil', 1)]"	"[('toString', 27), ('destroy', 26), ('getContext', 15), ('setUp', 12), ('StringBuilder', 9), ('start', 8), ('size', 7), ('tearDown', 7), ('AtomicInteger', 7), ('getDevice', 6), ('getInstrumentation', 5), ('Object', 5), ('close', 5), ('ArgumentsFloatFloat', 4), ('ArgumentsHalfHalf', 4), ('run', 4), ('getLooper', 4), ('capacity', 4), ('getState', 4), ('clear', 4), ('getSimpleName', 3), ('quitSafely', 3), ('getOutputStream', 3), ('getPseudorangeRateUncertaintyMetersPerSecond', 3), ('getCn0DbHz', 3), ('getCarrierPhase', 3), ('getMultipathIndicator', 3), ('getSnrInDb', 3), ('getAutomaticGainControlLevelDb', 3), ('getConstellationType', 3), ('BlockingBroadcastReceiver', 2), ('await', 2), ('getExtras', 2), ('getPackageManager', 2), ('saveAllowedNetworkTypesForAllReasons', 2), ('recoverAllowedNetworkType', 2), ('hasCellular', 2), ('build', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getRequirementId', 2), ('hashCode', 2), ('getFullBiasNanos', 2), ('getClock', 2), ('getReceivedSvTimeUncertaintyNanos', 2), ('getTimeOffsetNanos', 2), ('hasCarrierFrequencyHz', 2), ('getCarrierFrequencyHz', 2), ('getCarrierPhaseUncertainty', 2), ('getFrequencyOffsetMetersPerSecond', 2), ('getSamplingWidthMeters', 2), ('getSvid', 2), ('getReceivedSvTimeNanos', 2), ('getType', 2), ('getSubmessageId', 2), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('PlatformCompatChangeRule', 1), ('setUpLauncher', 1), ('getDefaultLauncher', 1), ('tearDownLauncher', 1), ('Bundle', 1), ('getFirstWidgetComponent', 1), ('getMaxSupportedInstances', 1), ('getSupportedPerformancePoints', 1), ('inputParams', 1), ('getAction', 1), ('countDown', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('getPackageName', 1), ('getDefaultSubscriptionId', 1), ('getRadioHalVersion', 1), ('getUiAutomation', 1), ('keySet', 1), ('toByteArray', 1), ('getPhoneCount', 1), ('getBuild', 1), ('assumeSecurityModelCompat', 1), ('Exception', 1), ('deleteOnExit', 1), ('lines', 1), ('checkAcoshFloatFloat', 1), ('checkAcoshFloat2Float2', 1), ('checkAcoshFloat3Float3', 1), ('checkAcoshFloat4Float4', 1), ('checkAcoshHalfHalf', 1), ('checkAcoshHalf2Half2', 1), ('checkAcoshHalf3Half3', 1), ('checkAcoshHalf4Half4', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('PipedOutputStream', 1), ('Runnable', 1), ('printStackTrace', 1), ('newInstance', 1), ('getContentResolver', 1), ('onCreate', 1), ('BlockingStateCallback', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('onDestroy', 1), ('quit', 1), ('getWidth', 1), ('getHeight', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('AudioTimestamp', 1), ('getCddRequirements', 1), ('values', 1), ('getMaxNumberOfUsersSupported', 1), ('getCurrentUser', 1), ('getPrimaryUserId', 1), ('builder', 1), ('getLocationManager', 1), ('hasFullBiasNanos', 1), ('hasBiasUncertaintyNanos', 1), ('getBiasUncertaintyNanos', 1), ('getTimeNanos', 1), ('entrySet', 1), ('getKey', 1), ('getValue', 1), ('hasCarrierPhase', 1), ('hasCarrierPhaseUncertainty', 1), ('hasSnrInDb', 1), ('hasAutomaticGainControlLevelDb', 1), ('hasCorrelationVectors', 1), ('hasSatellitePvt', 1), ('getCorrelationVectors', 1), ('getMagnitude', 1), ('getAccumulatedDeltaRangeState', 1), ('getAccumulatedDeltaRangeMeters', 1), ('getAccumulatedDeltaRangeUncertaintyMeters', 1), ('getCodeType', 1), ('getGnssNavMessageTypes', 1), ('getMessageId', 1), ('getData', 1), ('setup', 1), ('getActivity', 1)]"	"[('CtsPermissionTestCases', 11), ('CtsOpenGLTestCases', 10), ('CtsSecurityHostTestCases', 7), ('CtsAppWidgetTestCases', 2), ('CtsMediaPerformanceClassTestCases', 2), ('CtsTelephonyTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsLocationGnssTestCases', 2), ('CtsWindowManagerDeviceTestCases', 1), ('CtsSustainedPerformanceHostTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsDatabaseTestCases', 1), ('CtsAccountsHostTestCases', 1)]"	""	"android.opengl.cts.OpenGlEsVersionTest"	"getActivity"	"CtsOpenGLTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 10), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/KernelConfigTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPairPerfTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssPseudorangeVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarPowertrain/src/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CompatChangeTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/widget/WidgetTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/MidiTestActivityBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestAcosh.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/IdentityCredentialAuthentication.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/MergeCursorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/HtmlReport.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioOutColdStartLatencyActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CddCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/common/src/android/location/cts/common/TestMeasurementUtil.java', 1)]"	"[('(11,CDD,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,CDD,/android/server/wm/CompatChangeTests.java)', 1), ('(2,CDD,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java)', 1), ('(2,CDD,/com/android/cts/verifier/widget/WidgetTestActivity.java)', 1), ('(3,CDD,/android/appwidget/cts/RequestPinAppWidgetTest.java)', 1), ('(1,CDD,/com/android/cts/verifier/audio/MidiTestActivityBase.java)', 1), ('(3,CDD,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(2,CDD,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(9,CDD,/android/security/cts/KernelConfigTest.java)', 1), ('(3,CDD,/android/renderscript/cts/generated/TestAcosh.java)', 1), ('(2,CDD,/com/android/cts/verifier/security/IdentityCredentialAuthentication.java)', 1), ('(1,CDD,/android/database/cts/MergeCursorTest.java)', 1), ('(3,CDD,/com/android/cts/apicoverage/HtmlReport.java)', 1), ('(2,CDD,/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java)', 1), ('(1,CDD,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(2,CDD,/com/android/cts/verifier/audio/AudioOutColdStartLatencyActivity.java)', 1), ('(20,CDD,/com/android/cts/apicoverage/CddCoverage.java)', 1), ('(1,CDD,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(3,CDD,/android/location/cts/gnss/GnssPseudorangeVerificationTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java)', 1), ('(1,CDD,/android/location/cts/common/TestMeasurementUtil.java)', 1), ('(21,CDD,/android/opengl/cts/OpenGlEsVersionTest.java)', 1)]"	"[('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ble {        install(APK_BLUETOOTH_30);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[{        install(APK_BLUETOOTH_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ermission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PK_BLUETOOTH_NEVER_FOR_LOCATION_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/server/wm/CompatChangeTests.java]:[CDD]:[1]:method_text:[-resizeable portrait activity enters size compat mode after resizing the     * display.     */   ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[CDD]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([2:/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java]:[CDD]:[2]:method_text:[(true);            }        } else super.onActivityResult(requestCode, resultCode, data);    }}])', 1), ('([2:/com/android/cts/verifier/widget/WidgetTestActivity.java]:[CDD]:[2]:method_text:[er.onPause();    }    @Override    protected void onResume() {        super.onResume();    }}])', 1), ('([2:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[2]:method_text:[he extras        assertEquals(""dummy-2"", resultReceiver.result.getStringExtra(""dummy""));    }   ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[1]:method_text:[                AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());    }   ])', 1), ('([1:/com/android/cts/verifier/audio/MidiTestActivityBase.java]:[CDD]:[1]:method_text:[      }            };            mTimeoutTimer.schedule(task, TEST_TIMEOUT_MS);        }    }}])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CDD]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([2:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CDD]:[2]:method_text:[tUnit.NONE);            log.submit(InstrumentationRegistry.getInstrumentation());        }    }}])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[CDD]:[1]:method_text:[ckageManager.FEATURE_TELEPHONY)                && mTelephonyManager.getPhoneCount() > 0;    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[CDD]:[1]:method_text:[mOnPhoneCapabilityChanged = true;                mLock.notify();            }        }    }   ])', 1), ('([3:/android/security/cts/KernelConfigTest.java]:[CDD]:[3]:method_text:[rotector Strong enabled.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[ data is non-executable.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[-space and kernel-space.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[ectures that support it.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[wn to not be vulnerable.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[h to a whitelisted path.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[l enables fs-verity and its built-in signature support.     */    @CddTest(requirement=""9.10"")   ])', 1), ('([3:/android/renderscript/cts/generated/TestAcosh.java]:[CDD]:[3]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/com/android/cts/verifier/security/IdentityCredentialAuthentication.java]:[CDD]:[2]:method_text:[ RuntimeException(""Error encoding CBOR"", e);        }        return baos.toByteArray();    }}])', 1), ('([1:/android/database/cts/MergeCursorTest.java]:[CDD]:[1]:method_text:[tString(columnString));            assertTrue(mergeCursor.isNull(columnBlob));        }    }   ])', 1), ('([3:/com/android/cts/apicoverage/HtmlReport.java]:[CDD]:[3]:method_text:[reamResult result = new StreamResult(out);        transformer.transform(xmlSource, result);    }}])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[IM_SLOT_0);            SimContacts.removeSimAccounts(mResolver, SIM_SLOT_1);        });    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[ut this should not be done for the local account.     */    @CddTest(requirement=""3.18/C-1-4"")   ])', 1), ('([1:/com/android/cts/verifier/camera/its/ItsService.java]:[CDD]:[1]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([2:/com/android/cts/verifier/audio/AudioOutColdStartLatencyActivity.java]:[CDD]:[2]:method_text:[   }        mPlayer.stopStream();        mIsTestRunning = false;        stopOutTimer();    }}])', 1), ('([20:/com/android/cts/apicoverage/CddCoverage.java]:[CDD]:[20]:method_text:[           return String.format(""%s %s#%s"", mTestModule, mTestClass, mTestMethod);        }    }}])', 1), ('([1:/android/host/accounts/BaseMultiUserTest.java]:[CDD]:[1]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([2:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[2]:method_text:[d.   * This tests uses actual data retrieved from Gnss HAL.   */  @CddTest(requirement=""7.3.3"") ])', 1), ('([1:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[1]:method_text:[instant mode"")    @RequiresDevice  // emulated devices do not support real measurements so far.   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[     PERMISSION_CAR_POWERTRAIN_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/location/cts/common/TestMeasurementUtil.java]:[CDD]:[1]:method_text:[      && measurement.hasCodeType()                && ""Q"".equals(measurement.getCodeType());    }}])', 1), ('([2:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[2]:method_text:[       mActivity = mActivityRule.getActivity();    }    @CddTest(requirement=""7.1.4.1/C-0-1"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[3, getMinorVersion(reportedVersion));        }    }    @CddTest(requirement=""7.1.4.1/C-2-2"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[s, es31RequiredList[i]));        }    }    @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[st."",            hasAepFeature, hasAepExtension);    }    @CddTest(requirement=""7.9.2/C-1-4"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[  (major == 3 && minor >= 2) || major > 3);    }    @CddTest(requirement=""7.9.2/C-1-6,C-1-8"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[ns, requiredExtension));            }        }    }    @CddTest(requirement=""7.1.4.1/C-6-1"")   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[3]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/H-1-1"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[4]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/C-1-4"")   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[3]:method_text:[        2 == getMinorVersion(reportedVersion));    }    @CddTest(requirement=""7.1.4.5/C-1-5"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[4]:method_text:[ager();        return pm.hasSystemFeature(PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE);    }}])', 1)]"	""	""	"[('CDD', 54)]"	"[('[android.permission.cts.NearbyDevicesPermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.server.wm.CompatChangeTests createManagedConstrainDisplayApisFlagsSession CtsWindowManagerDeviceTestCases]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis CtsSustainedPerformanceHostTestCases]', 1), ('[com.android.cts.verifier.companion.CompanionDeviceTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.widget.WidgetTestActivity setPassFailButtonClickListeners None]', 1), ('[android.appwidget.cts.RequestPinAppWidgetTest testPinWidget_launcher2 CtsAppWidgetTestCases]', 1), ('[com.android.cts.verifier.audio.MidiTestActivityBase MidiTestActivityBase None]', 1), ('[android.mediapc.cts.MultiEncoderPairPerfTest test720p CtsMediaPerformanceClassTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testIWlanServiceState CtsTelephonyTestCases]', 1), ('[android.security.cts.KernelConfigTest toList CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigStackProtectorStrong CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigROData CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigHardenedUsercopy CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigPAN CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigHardwareMitigations CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigDisableUsermodehelper CtsSecurityHostTestCases]', 1), ('[com.android.cts.verifier.security.IdentityCredentialAuthentication setPassFailButtonClickListeners None]', 1), ('[android.database.cts.MergeCursorTest testGetValues CtsDatabaseTestCases]', 1), ('[android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest testAccountRemovalWithMergedContact_deletesContacts CtsContactsProviderTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[com.android.cts.verifier.audio.AudioOutColdStartLatencyActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.apicoverage.CddCoverage getTestMethods None]', 1), ('[android.host.accounts.BaseMultiUserTest listUsers CtsAccountsHostTestCases]', 1), ('[android.location.cts.gnss.GnssPseudorangeVerificationTest testPseudorangeValue CtsLocationGnssTestCases]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest isNotNull None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest testPermissionCarPowertrainGranted None]', 1), ('[android.location.cts.common.TestMeasurementUtil assertAll None]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testOpenGlEsVersion CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testExtensionPack CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testOpenGlEsVersionForVrHighPerformance CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensionsForVrHighPerformance CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForHdrCapableDisplay CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredGLESVersion CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForWideColorDisplay CtsOpenGLTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Device Integrity"	"9.1"	"C-3-1"	"9.1/C-3-1"	"09010000.670301"	"""C-3-1] MUST show a disclaimer during fully managed device setup (device owner setup) stating that the IT admin will have the ability to allow apps to control settings on the phone including microphone, camera and location, with options for user to continue setup or exit setup UNLESS the admin has opted out of control of permissions on the device. If device implementations pre-install any packages that hold any of the System UI Intelligence, System Ambient Audio Intelligence, System Audio Intelligence, System Notification Intelligence, System Text Intelligence, or System Visual Intelligence roles, the packages: | C-3-1] MUST report true for the ConfirmationPrompt.isSupported() API."""	""	""	"isSupported() ConfirmationPrompt.isSupported UNLESS"	""	""	""	""	"[('com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest', 4), ('android.appsecurity.cts.PkgInstallSignatureVerificationTest', 2), ('android.deviceconfig.cts.DeviceConfigApiTests', 2), ('android.autofillservice.cts.dropdown.LoginActivityTest', 2), ('art.Main', 2), ('android.app.usage.cts.test1.SomeActivity', 1), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('android.appwidget.cts.AppWidgetTest', 1), ('android.app.usage.cts.CacheQuotaHintTest', 1), ('android.location.cts.gnss.asn1.base.Asn1IA5String', 1), ('android.server.wm.app.ResizeableActivity', 1), ('com.android.cts.helpers.ICtsDeviceInteractionHelper', 1), ('com.android.cts.deviceandprofileowner.BaseDeviceAdminTest', 1), ('android.cts.statsdatom.statsd.AtomTestCase', 1), ('android.app.usage.cts.test1.SomeActivityWithLocus', 1), ('android.app.cts.ActivityCallbacksTest', 1), ('com.android.cts.documentclient.DocumentsClientTestCase', 1), ('android.jvmti.cts.JvmtiTaggingTest', 1), ('android.content.cts.AsyncQueryHandlerTest', 1), ('com.android.cts.documentclient.DocumentsClientTest', 1), ('android.net.cts.legacy.api22.ConnectivityManagerLegacyTest', 1), ('android.widget.cts.NumberPickerTest', 1), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 1), ('android.app.usage.cts.FragmentTestActivity', 1), ('android.jvmti.cts.JvmtiRunTestBasedTest', 1), ('android.provider.cts.calendar.CalendarTest', 1), ('android.app.stubs.OrientationTestUtils', 1), ('android.cts.statsdatom.lib.DeviceUtils', 1), ('android.security.cts.X509CertChainBuildingTest', 1), ('android.webkit.cts.ServiceWorkerWebSettingsTest', 1), ('android.provider.cts.media.MediaStore_Video_MediaTest', 1), ('android.media.cts.MediaCodecListTest', 1), ('android.provider.cts.media.MediaStore_Images_MediaTest', 1), ('android.telephony.cts.TelephonyCallbackTest', 1), ('android.media.cts.AudioManagerTest', 1), ('android.classloaders.cts.BaseInstallMultiple', 1), ('android.jvmti.cts.JvmtiHostTest', 1), ('android.telephony.ims.cts.SipDelegateManagerTest', 1), ('android.display.cts.DisplayTest', 1), ('android.server.wm.WindowTest', 1), ('com.android.cts.isolatedsplitapp.feature_a.FeatureAActivity', 1), ('android.app.stubs.ActivityCallbacksTestActivity', 1), ('com.android.cts.verifier.security.ProtectedConfirmationTest', 1), ('android.app.cts.PictureInPictureParamsBuilderTest', 1), ('android.server.wm.AppConfigurationTests', 1), ('com.android.cts.isolatedsplitapp.feature_b.FeatureBReceiver', 1), ('android.content.pm.cts.FeatureGroupInfoTest', 1), ('com.android.cts.content.FlakyTestRule', 1), ('android.graphics.cts.BitmapTest', 1), ('android.opengl2.cts.primitive.GLPrimitiveActivity', 1), ('com.android.cts.classloadersplitapp.feature_b.FeatureBReceiver', 1), ('android.app.cts.ApplyOverrideConfigurationActivity', 1), ('com.android.cts.classloadersplitapp.BaseReceiver', 1), ('com.android.cts.classloadersplitapp.feature_a.FeatureAReceiver', 1), ('com.android.compatibility.common.util.CTSResult', 1), ('android.keystore.cts.RSASignatureTest', 1), ('com.android.cts.isolatedsplitapp.feature_a.FeatureAReceiver', 1), ('android.cts.backup.PreservedSettingsRestoreHostSideTest', 1), ('android.widget.cts.PositionTesterContextMenuListener', 1), ('com.android.cts.isolatedsplitapp.BaseReceiver', 1), ('android.content.cts.ContentProviderTest', 1), ('android.jvmti.cts.JvmtiAttachingHostTest', 1), ('android.jvmti.cts.JvmtiTrackingTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1)]"	"[('setUp', 23), ('getName', 14), ('getInstrumentation', 12), ('getContext', 11), ('length', 10), ('getClass', 10), ('tearDown', 9), ('getResources', 8), ('hasRemaining', 7), ('getTargetContext', 6), ('getPackageManager', 6), ('getPackageName', 6), ('getSimpleName', 5), ('flush', 5), ('newEncoder', 4), ('RestrictedCharset', 4), ('getDevice', 4), ('getWindow', 3), ('get', 3), ('ContentValues', 3), ('ByteArrayOutputStream', 3), ('close', 3), ('getClassLoader', 3), ('getParent', 3), ('onConfigurationChanged', 3), ('setBeginByteAligned', 2), ('spoolToByteBoundary', 2), ('newDecoder', 2), ('toString', 2), ('dumpConfigInfo', 2), ('countDown', 2), ('onStart', 2), ('getApplicationContext', 2), ('getAddress', 2), ('doExtraLogging', 2), ('setupExtraLogging', 2), ('getSystem', 2), ('getCurrentUser', 2), ('getLayoutInflater', 2), ('evaluate', 2), ('prefetchClassNames', 2), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('getPossibleFirstTags', 1), ('getDefaultTag', 1), ('getBerValueLength', 1), ('array', 1), ('getValue', 1), ('encodePerUnaligned', 1), ('encodePerAligned', 1), ('BitStream', 1), ('readByte', 1), ('flip', 1), ('myUid', 1), ('edit', 1), ('commit', 1), ('getPackage', 1), ('hashCode', 1), ('getInstance', 1), ('enableDummyIme', 1), ('waitForIdle', 1), ('getContentResolver', 1), ('getAllNetworks', 1), ('getType', 1), ('getLinkAddresses', 1), ('DatagramSocket', 1), ('getLocalAddress', 1), ('getHostAddress', 1), ('setup', 1), ('getUiAutomation', 1), ('getActivity', 1), ('reset', 1), ('getWindowManager', 1), ('getCurrentWindowMetrics', 1), ('getBounds', 1), ('width', 1), ('height', 1), ('getIDevice', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('InstallMultiple', 1), ('useNaturalAbi', 1), ('getMainExecutor', 1), ('Object', 1), ('assumeTrue', 1), ('getUserId', 1), ('Statement', 1), ('getIntent', 1), ('getHolder', 1), ('Callback', 1), ('getSurface', 1), ('Worker', 1), ('start', 1), ('waitForCompletion', 1), ('acquire', 1), ('complete', 1), ('release', 1), ('Configuration', 1), ('watchForSingleOnConfigurationChangedCallback', 1), ('size', 1), ('getErrorMessage', 1), ('DeviceState', 1)]"	"[('CtsUsageStatsTestCases', 3), ('CtsContentTestCases', 3), ('CtsAppSecurityHostTestCases', 2), ('CtsStatsdAtomHostTestCases', 2), ('CtsWidgetTestCases', 2), ('CtsProviderTestCases', 2), ('CtsMediaTestCases', 2), ('CtsTelephonyTestCases', 2), ('CtsDeviceConfigTestCases', 2), ('CtsAutoFillServiceTestCases', 2), ('CtsWindowManagerDeviceTestCases', 2), ('CtsAndroidAppTestCases', 2), ('CtsAppWidgetTestCases', 1), ('CtsLocationGnssTestCases', 1), ('CtsAppTestCases', 1), ('CtsNetTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsCalendarProviderTestCases', 1), ('CtsSecurityTestCases', 1), ('CtsWebkitTestCases', 1), ('CtsClassloaderSplitsHostTestCases', 1), ('CtsDisplayTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsOpenGlPerf2TestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsBackupHostTestCases', 1), ('CtsJvmtiAttachingHostTestCases', 1)]"	""	"com.android.cts.verifier.car.GarageModeTestActivity"	"getLayoutInflater"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/LoginActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/TestApp1/src/android/app/usage/cts/test1/SomeActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/AppWidgetTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/CacheQuotaHintTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/base/Asn1IA5String.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/app/src/android/server/wm/app/ResizeableActivity.java', 1), ('/home/gpoor/cts-12-source/cts/libs/helpers/core/src/com/android/cts/helpers/ICtsDeviceInteractionHelper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/BaseDeviceAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/AtomTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/TestApp1/src/android/app/usage/cts/test1/SomeActivityWithLocus.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityCallbacksTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/DocumentClient/src/com/android/cts/documentclient/DocumentsClientTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/tagging/app/src/android/jvmti/cts/JvmtiTaggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AsyncQueryHandlerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/DocumentClient/src/com/android/cts/documentclient/DocumentsClientTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/netlegacy22.api/src/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/NumberPickerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/FragmentTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/base/run-test-based-app/src/android/jvmti/cts/JvmtiRunTestBasedTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/calendarprovider/src/android/provider/cts/calendar/CalendarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/app/src/android/app/stubs/OrientationTestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/lib/DeviceUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/X509CertChainBuildingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/ServiceWorkerWebSettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Video_MediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Images_MediaTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyCallbackTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/classloaders/splits/src/android/classloaders/cts/BaseInstallMultiple.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/allocation-tracking/app/src/art/Main.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/base/host/src/android/jvmti/cts/JvmtiHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/SipDelegateManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/display/src/android/display/cts/DisplayTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_a/src/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/app/src/android/app/stubs/ActivityCallbacksTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/ProtectedConfirmationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app/src/android/app/cts/PictureInPictureParamsBuilderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_b/src/com/android/cts/isolatedsplitapp/feature_b/FeatureBReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/FeatureGroupInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/lib/accountaccess/src/com.android.cts.content/FlakyTestRule.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/openglperf2/src/android/opengl2/cts/primitive/GLPrimitiveActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/classloaders/splits/apps/feature_b/src/com/android/cts/classloadersplitapp/feature_b/FeatureBReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/app/src/android/app/cts/ApplyOverrideConfigurationActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/classloaders/splits/apps/src/com/android/cts/classloadersplitapp/BaseReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/classloaders/splits/apps/feature_a/src/com/android/cts/classloadersplitapp/feature_a/FeatureAReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/CTSResult.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/RSASignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/feature_a/src/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/PreservedSettingsRestoreHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/PositionTesterContextMenuListener.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/src/com/android/cts/isolatedsplitapp/BaseReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContentProviderTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/attaching/host/src/android/jvmti/cts/JvmtiAttachingHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/redefining/app/src/art/Main.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/jvmti/allocation-tracking/app/src/android/jvmti/cts/JvmtiTrackingTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1)]"	"[('(1,UNLESS,/art/Main.java)', 2), ('(1,UNLESS,/android/app/usage/cts/test1/SomeActivity.java)', 1), ('(1,UNLESS,/android/app/usage/cts/NetworkUsageStatsTest.java)', 1), ('(1,UNLESS,/android/appwidget/cts/AppWidgetTest.java)', 1), ('(1,UNLESS,/android/app/usage/cts/CacheQuotaHintTest.java)', 1), ('(1,UNLESS,/android/location/cts/gnss/asn1/base/Asn1IA5String.java)', 1), ('(2,UNLESS,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(1,UNLESS,/android/server/wm/app/ResizeableActivity.java)', 1), ('(1,UNLESS,/com/android/cts/helpers/ICtsDeviceInteractionHelper.java)', 1), ('(1,UNLESS,/com/android/cts/deviceandprofileowner/BaseDeviceAdminTest.java)', 1), ('(1,UNLESS,/android/cts/statsdatom/statsd/AtomTestCase.java)', 1), ('(1,UNLESS,/android/app/usage/cts/test1/SomeActivityWithLocus.java)', 1), ('(1,UNLESS,/android/app/cts/ActivityCallbacksTest.java)', 1), ('(1,UNLESS,/com/android/cts/documentclient/DocumentsClientTestCase.java)', 1), ('(1,UNLESS,/android/jvmti/cts/JvmtiTaggingTest.java)', 1), ('(1,UNLESS,/android/content/cts/AsyncQueryHandlerTest.java)', 1), ('(1,UNLESS,/com/android/cts/documentclient/DocumentsClientTest.java)', 1), ('(1,UNLESS,/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java)', 1), ('(1,UNLESS,/android/widget/cts/NumberPickerTest.java)', 1), ('(1,UNLESS,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(1,UNLESS,/android/app/usage/cts/FragmentTestActivity.java)', 1), ('(1,UNLESS,/android/jvmti/cts/JvmtiRunTestBasedTest.java)', 1), ('(1,UNLESS,/android/provider/cts/calendar/CalendarTest.java)', 1), ('(1,UNLESS,/android/app/stubs/OrientationTestUtils.java)', 1), ('(1,UNLESS,/android/cts/statsdatom/lib/DeviceUtils.java)', 1), ('(1,UNLESS,/android/security/cts/X509CertChainBuildingTest.java)', 1), ('(1,UNLESS,/android/webkit/cts/ServiceWorkerWebSettingsTest.java)', 1), ('(1,UNLESS,/android/provider/cts/media/MediaStore_Video_MediaTest.java)', 1), ('(1,UNLESS,/android/media/cts/MediaCodecListTest.java)', 1), ('(1,UNLESS,/android/provider/cts/media/MediaStore_Images_MediaTest.java)', 1), ('(2,UNLESS,/android/telephony/cts/TelephonyCallbackTest.java)', 1), ('(1,UNLESS,/android/media/cts/AudioManagerTest.java)', 1), ('(1,UNLESS,/android/classloaders/cts/BaseInstallMultiple.java)', 1), ('(4,isSupported(),/android/deviceconfig/cts/DeviceConfigApiTests.java)', 1), ('(2,UNLESS,/android/autofillservice/cts/dropdown/LoginActivityTest.java)', 1), ('(1,UNLESS,/android/jvmti/cts/JvmtiHostTest.java)', 1), ('(1,isSupported(),/android/telephony/ims/cts/SipDelegateManagerTest.java)', 1), ('(1,UNLESS,/android/display/cts/DisplayTest.java)', 1), ('(1,UNLESS,/android/server/wm/WindowTest.java)', 1), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java)', 1), ('(1,UNLESS,/android/app/stubs/ActivityCallbacksTestActivity.java)', 1), ('(1,ConfirmationPrompt.isSupported,/com/android/cts/verifier/security/ProtectedConfirmationTest.java)', 1), ('(1,UNLESS,/android/app/cts/PictureInPictureParamsBuilderTest.java)', 1), ('(1,UNLESS,/android/server/wm/AppConfigurationTests.java)', 1), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/feature_b/FeatureBReceiver.java)', 1), ('(1,UNLESS,/android/content/pm/cts/FeatureGroupInfoTest.java)', 1), ('(1,UNLESS,/com.android.cts.content/FlakyTestRule.java)', 1), ('(1,UNLESS,/android/graphics/cts/BitmapTest.java)', 1), ('(1,UNLESS,/android/opengl2/cts/primitive/GLPrimitiveActivity.java)', 1), ('(1,UNLESS,/com/android/cts/classloadersplitapp/feature_b/FeatureBReceiver.java)', 1), ('(1,UNLESS,/android/app/cts/ApplyOverrideConfigurationActivity.java)', 1), ('(1,UNLESS,/com/android/cts/classloadersplitapp/BaseReceiver.java)', 1), ('(1,UNLESS,/com/android/cts/classloadersplitapp/feature_a/FeatureAReceiver.java)', 1), ('(1,UNLESS,/com/android/compatibility/common/util/CTSResult.java)', 1), ('(1,UNLESS,/android/keystore/cts/RSASignatureTest.java)', 1), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java)', 1), ('(1,UNLESS,/android/cts/backup/PreservedSettingsRestoreHostSideTest.java)', 1), ('(1,UNLESS,/android/widget/cts/PositionTesterContextMenuListener.java)', 1), ('(4,isSupported(),/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java)', 1), ('(1,UNLESS,/com/android/cts/isolatedsplitapp/BaseReceiver.java)', 1), ('(1,UNLESS,/android/content/cts/ContentProviderTest.java)', 1), ('(1,UNLESS,/android/jvmti/cts/JvmtiAttachingHostTest.java)', 1), ('(1,UNLESS,/android/jvmti/cts/JvmtiTrackingTest.java)', 1), ('(1,UNLESS,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1)]"	"[('([1:/art/Main.java]:[UNLESS]:[1]:method_text:[ic static native void setTag(Object o, long tag);    public static native long getTag(Object o);}])', 2), ('([1:/android/app/usage/cts/test1/SomeActivity.java]:[UNLESS]:[1]:method_text:[nstanceState);        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);    }}])', 1), ('([1:/android/app/usage/cts/NetworkUsageStatsTest.java]:[UNLESS]:[1]:method_text:[er) -> telephonyManager.getSubscriberId());        }        return """";    }    @AppModeFull   ])', 1), ('([1:/android/appwidget/cts/AppWidgetTest.java]:[UNLESS]:[1]:method_text:[);        }    }    @AppModeFull(reason = ""Instant apps cannot provide or host app widgets"")   ])', 1), ('([1:/android/app/usage/cts/CacheQuotaHintTest.java]:[UNLESS]:[1]:method_text:[port org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class CacheQuotaHintTest {   ])', 1), ('([1:/android/location/cts/gnss/asn1/base/Asn1IA5String.java]:[UNLESS]:[1]:method_text:[ng()) {        return CoderResult.OVERFLOW;      }      return CoderResult.UNDERFLOW;    }  }}])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[UNLESS]:[1]:method_text:[       assertInstallFailsWithError(""v2-only-missing-classes.dex.apk"", ""code is missing"");    }   ])', 1), ('([1:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[UNLESS]:[1]:method_text:[ error);        assertInstallFailsWithError(""v2-only-starts-with-dex-magic.apk"", error);    }   ])', 1), ('([1:/android/server/wm/app/ResizeableActivity.java]:[UNLESS]:[1]:method_text:[tion newConfig) {        super.onConfigurationChanged(newConfig);        dumpConfigInfo();    }}])', 1), ('([1:/com/android/cts/helpers/ICtsDeviceInteractionHelper.java]:[UNLESS]:[1]:method_text:[     * tearDown} method or another {@code @After} method.     */    default void tearDown() {};}])', 1), ('([1:/com/android/cts/deviceandprofileowner/BaseDeviceAdminTest.java]:[UNLESS]:[1]:method_text:[meMs) {        Log.d(TAG, ""Sleeping "" + timeMs + "" ms"");        SystemClock.sleep(timeMs);    }}])', 1), ('([1:/android/cts/statsdatom/statsd/AtomTestCase.java]:[UNLESS]:[1]:method_text:[estamp is not truncated"")                .that(timestampNs % fiveMinutesInNs).isEqualTo(0);    }}])', 1), ('([1:/android/app/usage/cts/test1/SomeActivityWithLocus.java]:[UNLESS]:[1]:method_text:[ onStart() {        super.onStart();        setLocusContext(new LocusId(""Locus11""), null);    }}])', 1), ('([1:/android/app/cts/ActivityCallbacksTest.java]:[UNLESS]:[1]:method_text:[          application.unregisterActivityLifecycleCallbacks(mActivityCallbacks);        }    }   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTestCase.java]:[UNLESS]:[1]:method_text:[mmand = ""ime set "" + COMPONENT_NAME_DUMMY_IME;        executeShellCommand(setDummyCommand);    }}])', 1), ('([1:/android/jvmti/cts/JvmtiTaggingTest.java]:[UNLESS]:[1]:method_text:[tTag(o2));        return new WeakReference<Object>(o1);    }    // Very simplistic tagging.   ])', 1), ('([1:/android/content/cts/AsyncQueryHandlerTest.java]:[UNLESS]:[1]:method_text:[lete(DummyProvider.CONTENT_URI, null, null);        super.tearDown();    }    @UiThreadTest   ])', 1), ('([1:/com/android/cts/documentclient/DocumentsClientTest.java]:[UNLESS]:[1]:method_text:[(                ""Converted contents."".getBytes(), readTypedFully(uri, streamTypes[0]));    }   ])', 1), ('([1:/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java]:[UNLESS]:[1]:method_text:[SIM card."");        }    }    /** Test that hipri can be brought up when Wifi is enabled. */   ])', 1), ('([1:/android/widget/cts/NumberPickerTest.java]:[UNLESS]:[1]:method_text:[mberPicker = (NumberPicker) mActivity.findViewById(R.id.number_picker);    }    @UiThreadTest   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[UNLESS]:[1]:method_text:[();            revokeBindAppWidgetPermission();        }    }    @MediumTest    @Presubmit   ])', 1), ('([1:/android/app/usage/cts/FragmentTestActivity.java]:[UNLESS]:[1]:method_text:[    super.onCreate(savedInstanceState);        setContentView(R.layout.fragment_container);    }}])', 1), ('([1:/android/jvmti/cts/JvmtiRunTestBasedTest.java]:[UNLESS]:[1]:method_text:[ata            .getBoolean(""android.jvmti.cts.needs_new_thread"", /*defaultValue*/false);    }   ])', 1), ('([1:/android/provider/cts/calendar/CalendarTest.java]:[UNLESS]:[1]:method_text:[ Tests exceptions that modify all future instances of a recurring event.     */    @MediumTest   ])', 1), ('([1:/android/app/stubs/OrientationTestUtils.java]:[UNLESS]:[1]:method_text:[            if (latch != null) {                latch.countDown();            }        }    }}])', 1), ('([1:/android/cts/statsdatom/lib/DeviceUtils.java]:[UNLESS]:[1]:method_text:[t == version.first && kernelVersion.second >= version.second);    }    private DeviceUtils() {}}])', 1), ('([1:/android/security/cts/X509CertChainBuildingTest.java]:[UNLESS]:[1]:method_text:[ate(""intermediate_a.pem"");        intermediateB = loadCertificate(""intermediate_b.pem"");    }   ])', 1), ('([1:/android/webkit/cts/ServiceWorkerWebSettingsTest.java]:[UNLESS]:[1]:method_text:[ockNetworkLoads(b);            assertEquals(b, mSettings.getBlockNetworkLoads());        }    }}])', 1), ('([1:/android/provider/cts/media/MediaStore_Video_MediaTest.java]:[UNLESS]:[1]:method_text:[SS_MEDIA_LOCATION"");        } catch (UnsupportedOperationException expected) {        }    }   ])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[UNLESS]:[1]:method_text:[                  pp2 != pp && pp2.covers(pp));                }            }        }    }   ])', 1), ('([1:/android/provider/cts/media/MediaStore_Images_MediaTest.java]:[UNLESS]:[1]:method_text:[SS_MEDIA_LOCATION"");        } catch (UnsupportedOperationException expected) {        }    }   ])', 1), ('([2:/android/telephony/cts/TelephonyCallbackTest.java]:[UNLESS]:[2]:method_text:[nRegistrationFailedCalled = true;                mLock.notify();            }        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[UNLESS]:[1]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/classloaders/cts/BaseInstallMultiple.java]:[UNLESS]:[1]:method_text:[       } else {            TestCase.assertTrue(result, result.contains(failure));        }    }}])', 1), ('([3:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[isSupported()]:[3]:method_text:[);    }    /**     * Checks that getting property which does not exist returns null.     */   ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiTests.java]:[isSupported()]:[1]:method_text:[ONG),                        properties.getLong(key, DEFAULT_LONG));            }        }    }])', 1), ('([1:/android/autofillservice/cts/dropdown/LoginActivityTest.java]:[UNLESS]:[1]:method_text:[hould not trigger a new session, unless a manual autofill     * workflow was requested.     */   ])', 1), ('([1:/android/autofillservice/cts/dropdown/LoginActivityTest.java]:[UNLESS]:[1]:method_text:[ } catch (Exception e) {                mSafeCleanerRule.add(e);            }        }    }   ])', 1), ('([1:/android/jvmti/cts/JvmtiHostTest.java]:[UNLESS]:[1]:method_text:[ILURE) {            throw new RuntimeException(""am get-current-user failed!"");        }    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[isSupported()]:[1]:method_text:[on check            fail(""uregisterImsStateCallback requires no permission."");        }    }   ])', 1), ('([1:/android/display/cts/DisplayTest.java]:[UNLESS]:[1]:method_text:[s.length);        return new Point(Integer.parseInt(parts[0]), Integer.parseInt(parts[1]));    }}])', 1), ('([1:/android/server/wm/WindowTest.java]:[UNLESS]:[1]:method_text:[Format.UNKNOWN to allow the Window to select     *                          the format.     */   ])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_a/FeatureAActivity.java]:[UNLESS]:[1]:method_text:[ase_layout);        getLayoutInflater().inflate(R.layout.feature_a_textview, linearLayout);    }}])', 1), ('([1:/android/app/stubs/ActivityCallbacksTestActivity.java]:[UNLESS]:[1]:method_text:[Y);        super.onDestroy();        collectEvent(Source.ACTIVITY, Event.ON_POST_DESTROY);    }}])', 1), ('([1:/com/android/cts/verifier/security/ProtectedConfirmationTest.java]:[ConfirmationPrompt.isSupported]:[1]:method_text:[         showToast(""Test passed."");            getPassButton().setEnabled(true);        }    }}])', 1), ('([1:/android/app/cts/PictureInPictureParamsBuilderTest.java]:[UNLESS]:[1]:method_text:[. */@SmallTest@RunWith(AndroidJUnit4.class)public class PictureInPictureParamsBuilderTest {   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[UNLESS]:[1]:method_text:[lues reported in fullscreen should be larger than those reported in     * docked state.     */   ])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_b/FeatureBReceiver.java]:[UNLESS]:[1]:method_text:[(                ""feature_b"", context.getResources().getString(R.string.feature_b_string));    }}])', 1), ('([1:/android/content/pm/cts/FeatureGroupInfoTest.java]:[UNLESS]:[1]:method_text:[tion {        super.setUp();        mPackageManager = getContext().getPackageManager();    }   ])', 1), ('([1:/com.android.cts.content/FlakyTestRule.java]:[UNLESS]:[1]:method_text:[              }                }                throw throwable;            };        };    }}])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[UNLESS]:[1]:method_text:[assertFalse(bitmap.isPremultiplied());                }                break;        }    }   ])', 1), ('([1:/android/opengl2/cts/primitive/GLPrimitiveActivity.java]:[UNLESS]:[1]:method_text:[      setException(new Exception(""Benchmark timed out""));            complete();        }    }}])', 1), ('([1:/com/android/cts/classloadersplitapp/feature_b/FeatureBReceiver.java]:[UNLESS]:[1]:method_text:[().getName());        b.putString(""featureB_parentClassName"", parent.getClass().getName());    }}])', 1), ('([1:/android/app/cts/ApplyOverrideConfigurationActivity.java]:[UNLESS]:[1]:method_text:[tionChangedFuture = new CompletableFuture<>();        return mOnConfigurationChangedFuture;    }}])', 1), ('([1:/com/android/cts/classloadersplitapp/BaseReceiver.java]:[UNLESS]:[1]:method_text:[.getClass().getName());        b.putString(""parentClassName"", parent.getClass().getName());    }}])', 1), ('([1:/com/android/cts/classloadersplitapp/feature_a/FeatureAReceiver.java]:[UNLESS]:[1]:method_text:[().getName());        b.putString(""featureA_parentClassName"", parent.getClass().getName());    }}])', 1), ('([1:/com/android/compatibility/common/util/CTSResult.java]:[UNLESS]:[1]:method_text:[LT_OK = 1;    public static final int RESULT_FAIL = 2;    public void setResult(int resultCode);}])', 1), ('([1:/android/keystore/cts/RSASignatureTest.java]:[UNLESS]:[1]:method_text:[ntext() {        return InstrumentationRegistry.getInstrumentation().getTargetContext();    }   ])', 1), ('([1:/com/android/cts/isolatedsplitapp/feature_a/FeatureAReceiver.java]:[UNLESS]:[1]:method_text:[(                ""feature_a"", context.getResources().getString(R.string.feature_a_string));    }}])', 1), ('([1:/android/cts/backup/PreservedSettingsRestoreHostSideTest.java]:[UNLESS]:[1]:method_text:[        while the overrideable ones were restored from the backup data</li>     * </ol>     */   ])', 1), ('([1:/android/widget/cts/PositionTesterContextMenuListener.java]:[UNLESS]:[1]:method_text:[      return true;    }    public String getErrorMessage() {        return errorMessage;    }}])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[isSupported()]:[1]:method_text:[entDevicePolicyManager.setRequiredPasswordComplexity(PASSWORD_COMPLEXITY_NONE);        }    }   ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[isSupported()]:[1]:method_text:[  mDevicePolicyManager.setRequiredPasswordComplexity(PASSWORD_COMPLEXITY_NONE);        }    }   ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[isSupported()]:[1]:method_text:[  assertThat(mParentDevicePolicyManager.getCurrentFailedPasswordAttempts()).isEqualTo(0);    }   ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[isSupported()]:[1]:method_text:[rentDevicePolicyManager.lockNow();        // Will fail if a SecurityException is thrown.    }   ])', 1), ('([1:/com/android/cts/isolatedsplitapp/BaseReceiver.java]:[UNLESS]:[1]:method_text:[.putString(                ""base"", context.getResources().getString(R.string.base_string));    }}])', 1), ('([1:/android/content/cts/ContentProviderTest.java]:[UNLESS]:[1]:method_text:[      sContext.deleteDatabase(TEST_DB_NAME);        sContext.deleteFile(TEST_FILE_NAME);    }   ])', 1), ('([1:/android/jvmti/cts/JvmtiAttachingHostTest.java]:[UNLESS]:[1]:method_text:[cted void setUp() throws Exception {        mCurrentUser = getDevice().getCurrentUser();    }   ])', 1), ('([1:/android/jvmti/cts/JvmtiTrackingTest.java]:[UNLESS]:[1]:method_text:[        Double.class.getName();    }    private ArrayList<Object> l = new ArrayList<>(100);   ])', 1), ('([1:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[UNLESS]:[1]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1)]"	""	""	"[('UNLESS', 63), ('isSupported()', 7), ('ConfirmationPrompt.isSupported', 1)]"	"[('[android.app.usage.cts.NetworkUsageStatsTest getIsDefault CtsUsageStatsTestCases]', 1), ('[android.appwidget.cts.AppWidgetTest testBindAppWidget CtsAppWidgetTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV2RejectsWhenMissingCode CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallApkWhichDoesNotStartWithZipLocalFileHeaderMagic CtsAppSecurityHostTestCases]', 1), ('[com.android.cts.deviceandprofileowner.BaseDeviceAdminTest isNotNull None]', 1), ('[android.cts.statsdatom.statsd.AtomTestCase getReportList CtsStatsdAtomHostTestCases]', 1), ('[com.android.cts.documentclient.DocumentsClientTestCase finish None]', 1), ('[android.jvmti.cts.JvmtiTaggingTest test None]', 1), ('[com.android.cts.documentclient.DocumentsClientTest testOpenVirtual None]', 1), ('[android.net.cts.legacy.api22.ConnectivityManagerLegacyTest assertTelephonyInService CtsNetTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testPackageNameCannotBeFakedAppWidget CtsAccessibilityServiceTestCases]', 1), ('[android.jvmti.cts.JvmtiRunTestBasedTest getTestNumber None]', 1), ('[android.provider.cts.calendar.CalendarTest testOutOfOrderRecurrenceExceptions CtsCalendarProviderTestCases]', 1), ('[android.app.stubs.OrientationTestUtils DisplayInfo None]', 1), ('[android.cts.statsdatom.lib.DeviceUtils CollectingTestListener CtsStatsdAtomHostTestCases]', 1), ('[android.webkit.cts.ServiceWorkerWebSettingsTest testBlockNetworkLoads CtsWebkitTestCases]', 1), ('[android.provider.cts.media.MediaStore_Video_MediaTest testOriginalAccess CtsProviderTestCases]', 1), ('[android.media.cts.MediaCodecListTest testVideoPerformancePointsSanity CtsMediaTestCases]', 1), ('[android.provider.cts.media.MediaStore_Images_MediaTest testLocationRedaction CtsProviderTestCases]', 1), ('[android.telephony.cts.TelephonyCallbackTest testOnBarringInfoChangedByRegisterTelephonyCallback CtsTelephonyTestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.classloaders.cts.BaseInstallMultiple allowTest CtsClassloaderSplitsHostTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests isInstantApp CtsDeviceConfigTestCases]', 1), ('[android.deviceconfig.cts.DeviceConfigApiTests testResetToPackageDefaults CtsDeviceConfigTestCases]', 1), ('[android.autofillservice.cts.dropdown.LoginActivityTest testAutoFillOneDataset CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.dropdown.LoginActivityTest testAutoFillOneDatasetAndSaveHidingOverlays CtsAutoFillServiceTestCases]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testIncorrectPermissions CtsTelephonyTestCases]', 1), ('[android.display.cts.DisplayTest testRestrictedFramebufferSize CtsDisplayTestCases]', 1), ('[android.server.wm.WindowTest testTakeKeyEvents CtsWindowManagerDeviceTestCases]', 1), ('[android.app.stubs.ActivityCallbacksTestActivity ActivityCallbacksTestActivity None]', 1), ('[com.android.cts.verifier.security.ProtectedConfirmationTest setPassFailButtonClickListeners None]', 1), ('[android.server.wm.AppConfigurationTests getDefaultDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.graphics.cts.BitmapTest testAlphaAndPremul CtsGraphicsTestCases]', 1), ('[android.opengl2.cts.primitive.GLPrimitiveActivity finish CtsOpenGlPerf2TestCases]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testIsActivePasswordSufficient_onParent_setOnParent_isSupported None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testIsActivePasswordSufficient_onParent_setOnProfile_isSupported None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testGetCurrentFailedPasswordAttempts_onParent_isSupported None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testLockNow_onParent_isSupported None]', 1), ('[android.content.cts.ContentProviderTest TestApis CtsContentTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1)]"	""	""	""	""	""	""	""	""	""
"2.3.5  . Security Model"	"9.8.2"	"T-5-1"	"9.8.2/T-5-1"	"09080200.840501"	"""[9.8.2/T-5-1] MUST display the camera indicator when an app is accessing live camera data, but not when the camera is only being accessed by app(s) holding the roles called out in Section 9.1 Permissions with CDD identifier [C-3-X]. ["""	""	""	"CDD app(s)"	""	""	""	""	"[('android.permission.cts.NearbyDevicesPermissionTest', 11), ('android.opengl.cts.OpenGlEsVersionTest', 10), ('android.security.cts.KernelConfigTest', 7), ('android.appwidget.cts.RequestPinAppWidgetTest', 2), ('android.mediapc.cts.MultiEncoderPairPerfTest', 2), ('android.telephony.cts.TelephonyManagerTest', 2), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 2), ('android.location.cts.gnss.GnssPseudorangeVerificationTest', 2), ('android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest', 2), ('android.server.wm.CompatChangeTests', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('com.android.cts.verifier.companion.CompanionDeviceTestActivity', 1), ('com.android.cts.verifier.widget.WidgetTestActivity', 1), ('com.android.cts.verifier.audio.MidiTestActivityBase', 1), ('android.renderscript.cts.generated.TestAcosh', 1), ('com.android.cts.verifier.security.IdentityCredentialAuthentication', 1), ('android.database.cts.MergeCursorTest', 1), ('com.android.cts.apicoverage.HtmlReport', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('com.android.cts.verifier.audio.AudioOutColdStartLatencyActivity', 1), ('com.android.cts.apicoverage.CddCoverage', 1), ('android.host.accounts.BaseMultiUserTest', 1), ('android.location.cts.common.TestMeasurementUtil', 1)]"	"[('toString', 27), ('destroy', 26), ('getContext', 15), ('setUp', 12), ('StringBuilder', 9), ('start', 8), ('size', 7), ('tearDown', 7), ('AtomicInteger', 7), ('getDevice', 6), ('getInstrumentation', 5), ('Object', 5), ('close', 5), ('ArgumentsFloatFloat', 4), ('ArgumentsHalfHalf', 4), ('run', 4), ('getLooper', 4), ('capacity', 4), ('getState', 4), ('clear', 4), ('getSimpleName', 3), ('quitSafely', 3), ('getOutputStream', 3), ('getPseudorangeRateUncertaintyMetersPerSecond', 3), ('getCn0DbHz', 3), ('getCarrierPhase', 3), ('getMultipathIndicator', 3), ('getSnrInDb', 3), ('getAutomaticGainControlLevelDb', 3), ('getConstellationType', 3), ('BlockingBroadcastReceiver', 2), ('await', 2), ('getExtras', 2), ('getPackageManager', 2), ('saveAllowedNetworkTypesForAllReasons', 2), ('recoverAllowedNetworkType', 2), ('hasCellular', 2), ('build', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getRequirementId', 2), ('hashCode', 2), ('getFullBiasNanos', 2), ('getClock', 2), ('getReceivedSvTimeUncertaintyNanos', 2), ('getTimeOffsetNanos', 2), ('hasCarrierFrequencyHz', 2), ('getCarrierFrequencyHz', 2), ('getCarrierPhaseUncertainty', 2), ('getFrequencyOffsetMetersPerSecond', 2), ('getSamplingWidthMeters', 2), ('getSvid', 2), ('getReceivedSvTimeNanos', 2), ('getType', 2), ('getSubmessageId', 2), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('PlatformCompatChangeRule', 1), ('setUpLauncher', 1), ('getDefaultLauncher', 1), ('tearDownLauncher', 1), ('Bundle', 1), ('getFirstWidgetComponent', 1), ('getMaxSupportedInstances', 1), ('getSupportedPerformancePoints', 1), ('inputParams', 1), ('getAction', 1), ('countDown', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('getPackageName', 1), ('getDefaultSubscriptionId', 1), ('getRadioHalVersion', 1), ('getUiAutomation', 1), ('keySet', 1), ('toByteArray', 1), ('getPhoneCount', 1), ('getBuild', 1), ('assumeSecurityModelCompat', 1), ('Exception', 1), ('deleteOnExit', 1), ('lines', 1), ('checkAcoshFloatFloat', 1), ('checkAcoshFloat2Float2', 1), ('checkAcoshFloat3Float3', 1), ('checkAcoshFloat4Float4', 1), ('checkAcoshHalfHalf', 1), ('checkAcoshHalf2Half2', 1), ('checkAcoshHalf3Half3', 1), ('checkAcoshHalf4Half4', 1), ('getTitleRes', 1), ('getDescriptionRes', 1), ('PipedOutputStream', 1), ('Runnable', 1), ('printStackTrace', 1), ('newInstance', 1), ('getContentResolver', 1), ('onCreate', 1), ('BlockingStateCallback', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('onDestroy', 1), ('quit', 1), ('getWidth', 1), ('getHeight', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('AudioTimestamp', 1), ('getCddRequirements', 1), ('values', 1), ('getMaxNumberOfUsersSupported', 1), ('getCurrentUser', 1), ('getPrimaryUserId', 1), ('builder', 1), ('getLocationManager', 1), ('hasFullBiasNanos', 1), ('hasBiasUncertaintyNanos', 1), ('getBiasUncertaintyNanos', 1), ('getTimeNanos', 1), ('entrySet', 1), ('getKey', 1), ('getValue', 1), ('hasCarrierPhase', 1), ('hasCarrierPhaseUncertainty', 1), ('hasSnrInDb', 1), ('hasAutomaticGainControlLevelDb', 1), ('hasCorrelationVectors', 1), ('hasSatellitePvt', 1), ('getCorrelationVectors', 1), ('getMagnitude', 1), ('getAccumulatedDeltaRangeState', 1), ('getAccumulatedDeltaRangeMeters', 1), ('getAccumulatedDeltaRangeUncertaintyMeters', 1), ('getCodeType', 1), ('getGnssNavMessageTypes', 1), ('getMessageId', 1), ('getData', 1), ('setup', 1), ('getActivity', 1)]"	"[('CtsPermissionTestCases', 11), ('CtsOpenGLTestCases', 10), ('CtsSecurityHostTestCases', 7), ('CtsAppWidgetTestCases', 2), ('CtsMediaPerformanceClassTestCases', 2), ('CtsTelephonyTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsLocationGnssTestCases', 2), ('CtsWindowManagerDeviceTestCases', 1), ('CtsSustainedPerformanceHostTestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsDatabaseTestCases', 1), ('CtsAccountsHostTestCases', 1)]"	""	"android.opengl.cts.OpenGlEsVersionTest"	"getActivity"	"CtsOpenGLTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 10), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/KernelConfigTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/MultiEncoderPairPerfTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssPseudorangeVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/car/PermissionCarPowertrain/src/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CompatChangeTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/widget/WidgetTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/MidiTestActivityBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestAcosh.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/IdentityCredentialAuthentication.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/MergeCursorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/HtmlReport.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioOutColdStartLatencyActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-api-coverage/src/com/android/cts/apicoverage/CddCoverage.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/common/src/android/location/cts/common/TestMeasurementUtil.java', 1)]"	"[('(11,CDD,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(1,CDD,/android/server/wm/CompatChangeTests.java)', 1), ('(2,CDD,/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java)', 1), ('(2,CDD,/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java)', 1), ('(2,CDD,/com/android/cts/verifier/widget/WidgetTestActivity.java)', 1), ('(3,CDD,/android/appwidget/cts/RequestPinAppWidgetTest.java)', 1), ('(1,CDD,/com/android/cts/verifier/audio/MidiTestActivityBase.java)', 1), ('(3,CDD,/android/mediapc/cts/MultiEncoderPairPerfTest.java)', 1), ('(2,CDD,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(9,CDD,/android/security/cts/KernelConfigTest.java)', 1), ('(3,CDD,/android/renderscript/cts/generated/TestAcosh.java)', 1), ('(2,CDD,/com/android/cts/verifier/security/IdentityCredentialAuthentication.java)', 1), ('(1,CDD,/android/database/cts/MergeCursorTest.java)', 1), ('(3,CDD,/com/android/cts/apicoverage/HtmlReport.java)', 1), ('(2,CDD,/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java)', 1), ('(1,CDD,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(2,CDD,/com/android/cts/verifier/audio/AudioOutColdStartLatencyActivity.java)', 1), ('(20,CDD,/com/android/cts/apicoverage/CddCoverage.java)', 1), ('(1,CDD,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(3,CDD,/android/location/cts/gnss/GnssPseudorangeVerificationTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java)', 1), ('(1,CDD,/android/location/cts/common/TestMeasurementUtil.java)', 1), ('(21,CDD,/android/opengl/cts/OpenGlEsVersionTest.java)', 1)]"	"[('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ble {        install(APK_BLUETOOTH_30);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[{        install(APK_BLUETOOTH_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ermission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[PK_BLUETOOTH_NEVER_FOR_LOCATION_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[ission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[CDD]:[1]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/server/wm/CompatChangeTests.java]:[CDD]:[1]:method_text:[-resizeable portrait activity enters size compat mode after resizing the     * display.     */   ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[CDD]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");    }   ])', 1), ('([2:/com/android/cts/verifier/companion/CompanionDeviceTestActivity.java]:[CDD]:[2]:method_text:[(true);            }        } else super.onActivityResult(requestCode, resultCode, data);    }}])', 1), ('([2:/com/android/cts/verifier/widget/WidgetTestActivity.java]:[CDD]:[2]:method_text:[er.onPause();    }    @Override    protected void onResume() {        super.onResume();    }}])', 1), ('([2:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[2]:method_text:[he extras        assertEquals(""dummy-2"", resultReceiver.result.getStringExtra(""dummy""));    }   ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[CDD]:[1]:method_text:[                AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());    }   ])', 1), ('([1:/com/android/cts/verifier/audio/MidiTestActivityBase.java]:[CDD]:[1]:method_text:[      }            };            mTimeoutTimer.schedule(task, TEST_TIMEOUT_MS);        }    }}])', 1), ('([1:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CDD]:[1]:method_text:[ and ensures that all the     * concurrent sessions succeed in encoding.     */    @LargeTest   ])', 1), ('([2:/android/mediapc/cts/MultiEncoderPairPerfTest.java]:[CDD]:[2]:method_text:[tUnit.NONE);            log.submit(InstrumentationRegistry.getInstrumentation());        }    }}])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[CDD]:[1]:method_text:[ckageManager.FEATURE_TELEPHONY)                && mTelephonyManager.getPhoneCount() > 0;    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[CDD]:[1]:method_text:[mOnPhoneCapabilityChanged = true;                mLock.notify();            }        }    }   ])', 1), ('([3:/android/security/cts/KernelConfigTest.java]:[CDD]:[3]:method_text:[rotector Strong enabled.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[ data is non-executable.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[-space and kernel-space.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[ectures that support it.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[wn to not be vulnerable.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[h to a whitelisted path.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[CDD]:[1]:method_text:[l enables fs-verity and its built-in signature support.     */    @CddTest(requirement=""9.10"")   ])', 1), ('([3:/android/renderscript/cts/generated/TestAcosh.java]:[CDD]:[3]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/com/android/cts/verifier/security/IdentityCredentialAuthentication.java]:[CDD]:[2]:method_text:[ RuntimeException(""Error encoding CBOR"", e);        }        return baos.toByteArray();    }}])', 1), ('([1:/android/database/cts/MergeCursorTest.java]:[CDD]:[1]:method_text:[tString(columnString));            assertTrue(mergeCursor.isNull(columnBlob));        }    }   ])', 1), ('([3:/com/android/cts/apicoverage/HtmlReport.java]:[CDD]:[3]:method_text:[reamResult result = new StreamResult(out);        transformer.transform(xmlSource, result);    }}])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[IM_SLOT_0);            SimContacts.removeSimAccounts(mResolver, SIM_SLOT_1);        });    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[CDD]:[1]:method_text:[ut this should not be done for the local account.     */    @CddTest(requirement=""3.18/C-1-4"")   ])', 1), ('([1:/com/android/cts/verifier/camera/its/ItsService.java]:[CDD]:[1]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([2:/com/android/cts/verifier/audio/AudioOutColdStartLatencyActivity.java]:[CDD]:[2]:method_text:[   }        mPlayer.stopStream();        mIsTestRunning = false;        stopOutTimer();    }}])', 1), ('([20:/com/android/cts/apicoverage/CddCoverage.java]:[CDD]:[20]:method_text:[           return String.format(""%s %s#%s"", mTestModule, mTestClass, mTestMethod);        }    }}])', 1), ('([1:/android/host/accounts/BaseMultiUserTest.java]:[CDD]:[1]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([2:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[2]:method_text:[d.   * This tests uses actual data retrieved from Gnss HAL.   */  @CddTest(requirement=""7.3.3"") ])', 1), ('([1:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[CDD]:[1]:method_text:[instant mode"")    @RequiresDevice  // emulated devices do not support real measurements so far.   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[              Car.PROPERTY_SERVICE);        assertThat(mCarPropertyManager).isNotNull();    }   ])', 1), ('([1:/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java]:[CDD]:[1]:method_text:[     PERMISSION_CAR_POWERTRAIN_PROPERTIES);        }    }    @CddTest(requirement = ""2.5.1"")   ])', 1), ('([1:/android/location/cts/common/TestMeasurementUtil.java]:[CDD]:[1]:method_text:[      && measurement.hasCodeType()                && ""Q"".equals(measurement.getCodeType());    }}])', 1), ('([2:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[2]:method_text:[       mActivity = mActivityRule.getActivity();    }    @CddTest(requirement=""7.1.4.1/C-0-1"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[3, getMinorVersion(reportedVersion));        }    }    @CddTest(requirement=""7.1.4.1/C-2-2"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[s, es31RequiredList[i]));        }    }    @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[st."",            hasAepFeature, hasAepExtension);    }    @CddTest(requirement=""7.9.2/C-1-4"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[  (major == 3 && minor >= 2) || major > 3);    }    @CddTest(requirement=""7.9.2/C-1-6,C-1-8"")   ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[1]:method_text:[ns, requiredExtension));            }        }    }    @CddTest(requirement=""7.1.4.1/C-6-1"")   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[3]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/H-1-1"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[4]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");        }    }    @CddTest(requirement=""7.1.4.5/C-1-4"")   ])', 1), ('([3:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[3]:method_text:[        2 == getMinorVersion(reportedVersion));    }    @CddTest(requirement=""7.1.4.5/C-1-5"")   ])', 1), ('([4:/android/opengl/cts/OpenGlEsVersionTest.java]:[CDD]:[4]:method_text:[ager();        return pm.hasSystemFeature(PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE);    }}])', 1)]"	""	""	"[('CDD', 54)]"	"[('[android.permission.cts.NearbyDevicesPermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.server.wm.CompatChangeTests createManagedConstrainDisplayApisFlagsSession CtsWindowManagerDeviceTestCases]', 1), ('[android.SustainedPerformance.cts.SustainedPerformanceHostTest currentTimeMillis CtsSustainedPerformanceHostTestCases]', 1), ('[com.android.cts.verifier.companion.CompanionDeviceTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.widget.WidgetTestActivity setPassFailButtonClickListeners None]', 1), ('[android.appwidget.cts.RequestPinAppWidgetTest testPinWidget_launcher2 CtsAppWidgetTestCases]', 1), ('[com.android.cts.verifier.audio.MidiTestActivityBase MidiTestActivityBase None]', 1), ('[android.mediapc.cts.MultiEncoderPairPerfTest test720p CtsMediaPerformanceClassTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testIWlanServiceState CtsTelephonyTestCases]', 1), ('[android.security.cts.KernelConfigTest toList CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigStackProtectorStrong CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigROData CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigHardenedUsercopy CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigPAN CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigHardwareMitigations CtsSecurityHostTestCases]', 1), ('[android.security.cts.KernelConfigTest testConfigDisableUsermodehelper CtsSecurityHostTestCases]', 1), ('[com.android.cts.verifier.security.IdentityCredentialAuthentication setPassFailButtonClickListeners None]', 1), ('[android.database.cts.MergeCursorTest testGetValues CtsDatabaseTestCases]', 1), ('[android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest testAccountRemovalWithMergedContact_deletesContacts CtsContactsProviderTestCases]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[com.android.cts.verifier.audio.AudioOutColdStartLatencyActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.apicoverage.CddCoverage getTestMethods None]', 1), ('[android.host.accounts.BaseMultiUserTest listUsers CtsAccountsHostTestCases]', 1), ('[android.location.cts.gnss.GnssPseudorangeVerificationTest testPseudorangeValue CtsLocationGnssTestCases]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest isNotNull None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest testPermissionCarPowertrainGranted None]', 1), ('[android.location.cts.common.TestMeasurementUtil assertAll None]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testOpenGlEsVersion CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testExtensionPack CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testOpenGlEsVersionForVrHighPerformance CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredExtensionsForVrHighPerformance CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensions CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForHdrCapableDisplay CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredGLESVersion CtsOpenGLTestCases]', 1), ('[android.opengl.cts.OpenGlEsVersionTest testRequiredEglExtensionsForWideColorDisplay CtsOpenGLTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-3-1"	"9.5/C-3-1"	"09050000.670301"	"""C-3-1] MUST only provide access to storage or data that is either already accessible to the parent user profile or is directly owned by this additional user profile."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-1"	"9.8/H-1-1"	"09080000.720101"	"""[9.8/H-1-1] MUST make sure the hotword detection service can only transmit data to the System or ContentCaptureService """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-11"	"9.9.3/C-1-11"	"09090300.670111"	"""C-1-11] MUST use the mandatorily supported ciphers, key lengths and modes."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-4-3"	"9.1/C-4-3"	"09010000.670403"	"""C-4-3] MUST NOT bind to other apps, except for the following system apps: Bluetooth, Contacts, Media, Telephony, SystemUI, and components providing Internet APIs.This is stricter than the STRONGLY RECOMMENDED listed in section 9.8.6. <h3 id=""92_uid_and_process_isolation"" """	""	""	"RECOMMENDED APIs.This"	""	""	""	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 3), ('android.widget.cts.ToastTest', 2), ('main.java.com.android.bedstead.nene.permissions.PermissionContext', 1), ('android.widget.cts29.ToastTest', 1), ('android.server.wm.ActivityManagerTestBase', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestGrandparent', 1), ('android.hardware.cts.helpers.SensorCtsHelper', 1), ('com.android.compatibility.common.util.UiccUtil', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('main.java.com.android.bedstead.nene.permissions.Permissions', 1), ('main.java.com.android.activitycontext.ActivityContext', 1), ('android.os.cts.HwBinderTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1), ('android.media.cts.AudioHelper', 1), ('com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('com.android.cts.verifier.audio.AudioTap2ToneActivity', 1), ('android.view.accessibility.cts.AccessibilityManagerTest', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestParent', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('com.android.cts.deviceowner.proxy.BaseProxyTest', 1), ('android.video.cts.CodecEncoderPerformanceTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.media.cts.CamcorderProfileTest', 1), ('android.view.cts.ViewConfigurationTest', 1)]"	"[('getMediaType', 14), ('size', 8), ('getChannelCount', 8), ('doubleValue', 7), ('Builder', 7), ('getAudioFormat', 7), ('getPackageName', 5), ('getInstrumentation', 5), ('build', 5), ('setUp', 4), ('getCodec', 4), ('getContext', 3), ('getProfile', 3), ('close', 2), ('getName', 2), ('getIntent', 2), ('onResume', 2), ('getHeight', 2), ('getWidth', 2), ('getSimpleName', 2), ('getSampleRate', 2), ('get', 2), ('makeSomething', 2), ('join', 2), ('getStdJitterMs', 2), ('getStartTimeNs', 2), ('duplicate', 2), ('startRecording', 2), ('stop', 2), ('printStackTrace', 2), ('getBitrate', 2), ('ObjectTracker', 1), ('grandparentBeforeClass', 1), ('shadowedGrandparentBeforeClass', 1), ('shadowedGrandparentWithoutBeforeClass', 1), ('SensorCtsHelper', 1), ('getSensor', 1), ('getRequestedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('StringBuilder', 1), ('toString', 1), ('getReceiverComponentName', 1), ('myUserId', 1), ('NullPointerException', 1), ('getTargetContext', 1), ('Intent', 1), ('await', 1), ('countDown', 1), ('getLayoutInflater', 1), ('getEncoding', 1), ('getAvg', 1), ('getAvgAbs', 1), ('getMaxAbs', 1), ('notify', 1), ('wait', 1), ('make', 1), ('Thread', 1), ('run', 1), ('prepare', 1), ('myLooper', 1), ('loop', 1), ('start', 1), ('quit', 1), ('getJitterCount', 1), ('getMeanJitterMs', 1), ('getMaxAbsJitterMs', 1), ('nanoTime', 1), ('abs', 1), ('getState', 1), ('play', 1), ('getPlaybackHeadPosition', 1), ('parentBeforeClass', 1), ('input', 1), ('getMimesOfAvailableHardwareVideoEncoders', 1), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getAudioProfiles', 1), ('getChannels', 1), ('hasProfile', 1)]"	"[('CtsCameraTestCases', 4), ('CtsWidgetTestCases', 3), ('CtsMediaTestCases', 2), ('CtsSensorTestCases', 1), ('CtsAdminTestCases', 1), ('CtsAccessibilityTestCases', 1), ('CtsVideoTestCases', 1), ('CtsViewTestCases', 1)]"	""	"android.widget.cts.ToastTest"	"hasProfile"	"CtsWidgetTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/PermissionContext.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/ActivityManagerTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelper.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/UiccUtil.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/Permissions.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/activitycontext/src/main/java/com/android/activitycontext/ActivityContext.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/AudioHelper.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioTap2ToneActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/proxy/BaseProxyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecEncoderPerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1)]"	"[('(1,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/PermissionContext.java)', 1), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 1), ('(1,RECOMMENDED,/android/server/wm/ActivityManagerTestBase.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java)', 1), ('(1,RECOMMENDED,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(1,RECOMMENDED,/com/android/compatibility/common/util/UiccUtil.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(2,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/Permissions.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/activitycontext/ActivityContext.java)', 1), ('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 1), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(4,RECOMMENDED,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(2,RECOMMENDED,/android/media/cts/AudioHelper.java)', 1), ('(1,RECOMMENDED,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(3,RECOMMENDED,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/audio/AudioTap2ToneActivity.java)', 1), ('(18,RECOMMENDED,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java)', 1), ('(1,RECOMMENDED,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(21,RECOMMENDED,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(1,RECOMMENDED,/com/android/cts/deviceowner/proxy/BaseProxyTest.java)', 1), ('(1,RECOMMENDED,/android/video/cts/CodecEncoderPerformanceTest.java)', 1), ('(1,RECOMMENDED,/android/media/cts/AudioTrackTest.java)', 1), ('(1,RECOMMENDED,/android/media/cts/CamcorderProfileTest.java)', 1), ('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 1), ('(7,RECOMMENDED,/android/widget/cts/ToastTest.java)', 1)]"	"[('([1:/main/java/com/android/bedstead/nene/permissions/PermissionContext.java]:[RECOMMENDED]:[1]:method_text:[ock */public interface PermissionContext extends AutoCloseable {    @Override    void close();}])', 1), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/android/server/wm/ActivityManagerTestBase.java]:[RECOMMENDED]:[1]:method_text:[ public static class ConfigChangeHandlingActivity extends CommandSession.BasicTestActivity {    }}])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java]:[RECOMMENDED]:[1]:method_text:[andparentWithoutBeforeClass() {        sShadowedGrandparentWithoutBeforeClassHasRun = true;    }}])', 1), ('([1:/android/hardware/cts/helpers/SensorCtsHelper.java]:[RECOMMENDED]:[1]:method_text:[;        SystemUtil.runShellCommand(InstrumentationRegistry.getInstrumentation(), command);    }}])', 1), ('([1:/com/android/compatibility/common/util/UiccUtil.java]:[RECOMMENDED]:[1]:method_text:[tUp} method if an entire class requires a particular     * UICC, or at the top of a specific {@code])', 1), ('([3:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[RECOMMENDED]:[3]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([2:/main/java/com/android/bedstead/nene/permissions/Permissions.java]:[RECOMMENDED]:[2]:method_text:[ExistingPermissions.toArray(new String[0]));        }        mExistingPermissions = null;    }}])', 1), ('([1:/main/java/com/android/activitycontext/ActivityContext.java]:[RECOMMENDED]:[1]:method_text:[hrowValue = e;                }                sLatch.countDown();            }        }    }}])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 1), ('([4:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[RECOMMENDED]:[4]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([2:/android/media/cts/AudioHelper.java]:[RECOMMENDED]:[2]:method_text:[  private final static String TAG = ""AudioRecordAuditNative"";        private int mPosition;    }}])', 1), ('([1:/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java]:[RECOMMENDED]:[1]:method_text:[erToContinue();        } finally {            magnetometer.unregisterListener();        }    }}])', 1), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[RECOMMENDED]:[3]:method_text:[h (SecurityException e) {            assertDeviceOwnerMessage(e.getMessage());        }    }   ])', 1), ('([3:/com/android/cts/verifier/audio/AudioTap2ToneActivity.java]:[RECOMMENDED]:[3]:method_text:[read(mAnalysisTask).start(); // run asynchronously with audio thread            }        }    }}])', 1), ('([18:/android/view/accessibility/cts/AccessibilityManagerTest.java]:[RECOMMENDED]:[18]:method_text:[;        } catch (IOException e) {            fail(""Fail to run shell command"");        }    }}])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java]:[RECOMMENDED]:[1]:method_text:[ssertThat(sGrandparentBeforeClassHasRun).isTrue();        sParentBeforeClassHasRun = true;    }}])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[RECOMMENDED]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([21:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[RECOMMENDED]:[21]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([1:/com/android/cts/deviceowner/proxy/BaseProxyTest.java]:[RECOMMENDED]:[1]:method_text:[ore.tryAcquire(10, TimeUnit.SECONDS)) {        return true;      }      return false;    }  }}])', 1), ('([1:/android/video/cts/CodecEncoderPerformanceTest.java]:[RECOMMENDED]:[1]:method_text:[  /**     * Validates performance of hardware accelerated video encoders     */    @LargeTest   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[RECOMMENDED]:[1]:method_text:[wn when setBufferSizeInBytes""                  + "" is excluded from builder"");        }    }   ])', 1), ('([1:/android/media/cts/CamcorderProfileTest.java]:[RECOMMENDED]:[1]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 1), ('([1:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[1]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);        }    }   ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1)]"	""	""	"[('RECOMMENDED', 29)]"	"[('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.server.wm.ActivityManagerTestBase PostAssertionRule None]', 1), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[main.java.com.android.bedstead.nene.permissions.Permissions TestApis None]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations CtsCameraTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[android.media.cts.AudioHelper currentTimeMillis None]', 1), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRecommendedGlobalProxy_failIfNotDeviceOwner CtsAdminTestCases]', 1), ('[com.android.cts.verifier.audio.AudioTap2ToneActivity OnTouchListener None]', 1), ('[android.view.accessibility.cts.AccessibilityManagerTest testGetRecommendedTimeoutMillis CtsAccessibilityTestCases]', 1), ('[test.java.com.android.bedstead.harrier.DeviceStateTestParent isFalse None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[com.android.cts.deviceowner.proxy.BaseProxyTest registerAndWaitForStickyBroadcast None]', 1), ('[android.media.cts.AudioTrackTest testAc3BuilderNoBufferSize CtsMediaTestCases]', 1), ('[android.view.cts.ViewConfigurationTest testInstanceValues CtsViewTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.3.5  . Security Model"	"9.8.2"	"T-5-2"	"9.8.2/T-5-2"	"09080200.840502"	"""[9.8.2/T-5-2] MUST not hide the camera indicator for system apps that have visible user interfaces or direct user interaction. <h4 id=""236_developer_tools_and_options_compatibility"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"C-3-1"	"9.8/C-3-1"	"09080000.670301"	"""[9.8/C-3-1], when a successful hotword result is transmitted to the voice interaction service or similar entity. [9.8/H-SR] Are STRONGLY RECOMMENDED to notify users before setting an application as the provider of the hotword detection service. [9.8/H-SR] Are STRONGLY RECOMMENDED to disallow the transmission of unstructured data out of the hotword detection service. If device implementations include an application that uses the System API HotwordDetectionService, or similar mechanism for hotword detection without mic usage indication, the application: """	""	""	"RECOMMENDED"	""	""	""	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 3), ('android.widget.cts.ToastTest', 2), ('main.java.com.android.bedstead.nene.permissions.PermissionContext', 1), ('android.widget.cts29.ToastTest', 1), ('android.server.wm.ActivityManagerTestBase', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestGrandparent', 1), ('android.hardware.cts.helpers.SensorCtsHelper', 1), ('com.android.compatibility.common.util.UiccUtil', 1), ('com.android.cts.verifier.managedprovisioning.CommandReceiverActivity', 1), ('main.java.com.android.bedstead.nene.permissions.Permissions', 1), ('main.java.com.android.activitycontext.ActivityContext', 1), ('android.os.cts.HwBinderTest', 1), ('com.android.cts.verifier.car.GarageModeTestActivity', 1), ('android.media.cts.AudioHelper', 1), ('com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity', 1), ('android.admin.cts.DevicePolicyManagerTest', 1), ('com.android.cts.verifier.audio.AudioTap2ToneActivity', 1), ('android.view.accessibility.cts.AccessibilityManagerTest', 1), ('test.java.com.android.bedstead.harrier.DeviceStateTestParent', 1), ('android.hardware.camera2.cts.RecordingTest', 1), ('com.android.cts.verifier.audio.AudioLoopbackBaseActivity', 1), ('com.android.cts.deviceowner.proxy.BaseProxyTest', 1), ('android.video.cts.CodecEncoderPerformanceTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.media.cts.CamcorderProfileTest', 1), ('android.view.cts.ViewConfigurationTest', 1)]"	"[('getMediaType', 14), ('size', 8), ('getChannelCount', 8), ('doubleValue', 7), ('Builder', 7), ('getAudioFormat', 7), ('getPackageName', 5), ('getInstrumentation', 5), ('build', 5), ('setUp', 4), ('getCodec', 4), ('getContext', 3), ('getProfile', 3), ('close', 2), ('getName', 2), ('getIntent', 2), ('onResume', 2), ('getHeight', 2), ('getWidth', 2), ('getSimpleName', 2), ('getSampleRate', 2), ('get', 2), ('makeSomething', 2), ('join', 2), ('getStdJitterMs', 2), ('getStartTimeNs', 2), ('duplicate', 2), ('startRecording', 2), ('stop', 2), ('printStackTrace', 2), ('getBitrate', 2), ('ObjectTracker', 1), ('grandparentBeforeClass', 1), ('shadowedGrandparentBeforeClass', 1), ('shadowedGrandparentWithoutBeforeClass', 1), ('SensorCtsHelper', 1), ('getSensor', 1), ('getRequestedSamplingPeriodUs', 1), ('getMaxReportLatencyUs', 1), ('StringBuilder', 1), ('toString', 1), ('getReceiverComponentName', 1), ('myUserId', 1), ('NullPointerException', 1), ('getTargetContext', 1), ('Intent', 1), ('await', 1), ('countDown', 1), ('getLayoutInflater', 1), ('getEncoding', 1), ('getAvg', 1), ('getAvgAbs', 1), ('getMaxAbs', 1), ('notify', 1), ('wait', 1), ('make', 1), ('Thread', 1), ('run', 1), ('prepare', 1), ('myLooper', 1), ('loop', 1), ('start', 1), ('quit', 1), ('getJitterCount', 1), ('getMeanJitterMs', 1), ('getMaxAbsJitterMs', 1), ('nanoTime', 1), ('abs', 1), ('getState', 1), ('play', 1), ('getPlaybackHeadPosition', 1), ('parentBeforeClass', 1), ('input', 1), ('getMimesOfAvailableHardwareVideoEncoders', 1), ('getDefaultDurationSeconds', 1), ('getRecommendedFileFormat', 1), ('getVideoProfiles', 1), ('getFrameRate', 1), ('getAudioProfiles', 1), ('getChannels', 1), ('hasProfile', 1)]"	"[('CtsCameraTestCases', 4), ('CtsWidgetTestCases', 3), ('CtsMediaTestCases', 2), ('CtsSensorTestCases', 1), ('CtsAdminTestCases', 1), ('CtsAccessibilityTestCases', 1), ('CtsVideoTestCases', 1), ('CtsViewTestCases', 1)]"	""	"android.widget.cts.ToastTest"	"hasProfile"	"CtsWidgetTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 2), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/PermissionContext.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/ActivityManagerTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelper.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/util-axt/src/com/android/compatibility/common/util/UiccUtil.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/nene/src/main/java/com/android/bedstead/nene/permissions/Permissions.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/activitycontext/src/main/java/com/android/activitycontext/ActivityContext.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/car/GarageModeTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/common/src/android/media/cts/AudioHelper.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioTap2ToneActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/harrier/src/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/proxy/BaseProxyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/video/src/android/video/cts/CodecEncoderPerformanceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1)]"	"[('(1,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/PermissionContext.java)', 1), ('(6,RECOMMENDED,/android/widget/cts29/ToastTest.java)', 1), ('(1,RECOMMENDED,/android/server/wm/ActivityManagerTestBase.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java)', 1), ('(1,RECOMMENDED,/android/hardware/cts/helpers/SensorCtsHelper.java)', 1), ('(1,RECOMMENDED,/com/android/compatibility/common/util/UiccUtil.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(2,RECOMMENDED,/main/java/com/android/bedstead/nene/permissions/Permissions.java)', 1), ('(1,RECOMMENDED,/main/java/com/android/activitycontext/ActivityContext.java)', 1), ('(1,RECOMMENDED,/android/os/cts/HwBinderTest.java)', 1), ('(112,RECOMMENDED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(4,RECOMMENDED,/com/android/cts/verifier/car/GarageModeTestActivity.java)', 1), ('(2,RECOMMENDED,/android/media/cts/AudioHelper.java)', 1), ('(1,RECOMMENDED,/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java)', 1), ('(3,RECOMMENDED,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(3,RECOMMENDED,/com/android/cts/verifier/audio/AudioTap2ToneActivity.java)', 1), ('(18,RECOMMENDED,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 1), ('(1,RECOMMENDED,/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java)', 1), ('(1,RECOMMENDED,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(21,RECOMMENDED,/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java)', 1), ('(1,RECOMMENDED,/com/android/cts/deviceowner/proxy/BaseProxyTest.java)', 1), ('(1,RECOMMENDED,/android/video/cts/CodecEncoderPerformanceTest.java)', 1), ('(1,RECOMMENDED,/android/media/cts/AudioTrackTest.java)', 1), ('(1,RECOMMENDED,/android/media/cts/CamcorderProfileTest.java)', 1), ('(1,RECOMMENDED,/android/view/cts/ViewConfigurationTest.java)', 1), ('(7,RECOMMENDED,/android/widget/cts/ToastTest.java)', 1)]"	"[('([1:/main/java/com/android/bedstead/nene/permissions/PermissionContext.java]:[RECOMMENDED]:[1]:method_text:[ock */public interface PermissionContext extends AutoCloseable {    @Override    void close();}])', 1), ('([6:/android/widget/cts29/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1), ('([1:/android/server/wm/ActivityManagerTestBase.java]:[RECOMMENDED]:[1]:method_text:[ public static class ConfigChangeHandlingActivity extends CommandSession.BasicTestActivity {    }}])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestGrandparent.java]:[RECOMMENDED]:[1]:method_text:[andparentWithoutBeforeClass() {        sShadowedGrandparentWithoutBeforeClassHasRun = true;    }}])', 1), ('([1:/android/hardware/cts/helpers/SensorCtsHelper.java]:[RECOMMENDED]:[1]:method_text:[;        SystemUtil.runShellCommand(InstrumentationRegistry.getInstrumentation(), command);    }}])', 1), ('([1:/com/android/compatibility/common/util/UiccUtil.java]:[RECOMMENDED]:[1]:method_text:[tUp} method if an entire class requires a particular     * UICC, or at the top of a specific {@code])', 1), ('([3:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[RECOMMENDED]:[3]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([2:/main/java/com/android/bedstead/nene/permissions/Permissions.java]:[RECOMMENDED]:[2]:method_text:[ExistingPermissions.toArray(new String[0]));        }        mExistingPermissions = null;    }}])', 1), ('([1:/main/java/com/android/activitycontext/ActivityContext.java]:[RECOMMENDED]:[1]:method_text:[hrowValue = e;                }                sLatch.countDown();            }        }    }}])', 1), ('([1:/android/os/cts/HwBinderTest.java]:[RECOMMENDED]:[1]:method_text:[fset), 0.0);            assertEquals(2.0, blob.getDouble(offset + 8), 0.0);        }),    };   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([67:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[67]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([44:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[RECOMMENDED]:[44]:method_text:[            }        }    }    /**     * Test {@link CameraCharacteristics#getKeys}     */   ])', 1), ('([4:/com/android/cts/verifier/car/GarageModeTestActivity.java]:[RECOMMENDED]:[4]:method_text:[        mStatusText.setText(resultsString);        getPassButton().setEnabled(testPassed);    }}])', 1), ('([2:/android/media/cts/AudioHelper.java]:[RECOMMENDED]:[2]:method_text:[  private final static String TAG = ""AudioRecordAuditNative"";        private int mPosition;    }}])', 1), ('([1:/com/android/cts/verifier/sensors/MagneticFieldMeasurementTestActivity.java]:[RECOMMENDED]:[1]:method_text:[erToContinue();        } finally {            magnetometer.unregisterListener();        }    }}])', 1), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[RECOMMENDED]:[3]:method_text:[h (SecurityException e) {            assertDeviceOwnerMessage(e.getMessage());        }    }   ])', 1), ('([3:/com/android/cts/verifier/audio/AudioTap2ToneActivity.java]:[RECOMMENDED]:[3]:method_text:[read(mAnalysisTask).start(); // run asynchronously with audio thread            }        }    }}])', 1), ('([18:/android/view/accessibility/cts/AccessibilityManagerTest.java]:[RECOMMENDED]:[18]:method_text:[;        } catch (IOException e) {            fail(""Fail to run shell command"");        }    }}])', 1), ('([1:/test/java/com/android/bedstead/harrier/DeviceStateTestParent.java]:[RECOMMENDED]:[1]:method_text:[ssertThat(sGrandparentBeforeClassHasRun).isTrue();        sParentBeforeClassHasRun = true;    }}])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[RECOMMENDED]:[1]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([21:/com/android/cts/verifier/audio/AudioLoopbackBaseActivity.java]:[RECOMMENDED]:[21]:method_text:[nectLoopbackUI();        calculateLatencyThresholds();        displayLatencyThresholds();    }}])', 1), ('([1:/com/android/cts/deviceowner/proxy/BaseProxyTest.java]:[RECOMMENDED]:[1]:method_text:[ore.tryAcquire(10, TimeUnit.SECONDS)) {        return true;      }      return false;    }  }}])', 1), ('([1:/android/video/cts/CodecEncoderPerformanceTest.java]:[RECOMMENDED]:[1]:method_text:[  /**     * Validates performance of hardware accelerated video encoders     */    @LargeTest   ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[RECOMMENDED]:[1]:method_text:[wn when setBufferSizeInBytes""                  + "" is excluded from builder"");        }    }   ])', 1), ('([1:/android/media/cts/CamcorderProfileTest.java]:[RECOMMENDED]:[1]:method_text:[dProfile, highHighSpeedProfile,                specificHighSpeedProfileQualities, null);    }   ])', 1), ('([1:/android/view/cts/ViewConfigurationTest.java]:[RECOMMENDED]:[1]:method_text:[     assertTrue(scaledMinScalingSpanMm < 40.5); // 1.5 times the recommended size of 27mm    }   ])', 1), ('([1:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[1]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);        }    }   ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[RECOMMENDED]:[6]:method_text:[("" "")                .append(value);        SystemUtil.runShellCommand(cmd.toString());    }   ])', 1)]"	""	""	"[('RECOMMENDED', 29)]"	"[('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.server.wm.ActivityManagerTestBase PostAssertionRule None]', 1), ('[android.hardware.cts.helpers.SensorCtsHelper getSensorTestDataDirectory CtsSensorTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[main.java.com.android.bedstead.nene.permissions.Permissions TestApis None]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testRecommendedStreamConfigurations CtsCameraTestCases]', 1), ('[com.android.cts.verifier.car.GarageModeTestActivity setPassFailButtonClickListeners None]', 1), ('[android.media.cts.AudioHelper currentTimeMillis None]', 1), ('[com.android.cts.verifier.sensors.MagneticFieldMeasurementTestActivity MagneticFieldMeasurementTestActivity None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRecommendedGlobalProxy_failIfNotDeviceOwner CtsAdminTestCases]', 1), ('[com.android.cts.verifier.audio.AudioTap2ToneActivity OnTouchListener None]', 1), ('[android.view.accessibility.cts.AccessibilityManagerTest testGetRecommendedTimeoutMillis CtsAccessibilityTestCases]', 1), ('[test.java.com.android.bedstead.harrier.DeviceStateTestParent isFalse None]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 1), ('[com.android.cts.verifier.audio.AudioLoopbackBaseActivity isMMapSupported None]', 1), ('[com.android.cts.deviceowner.proxy.BaseProxyTest registerAndWaitForStickyBroadcast None]', 1), ('[android.media.cts.AudioTrackTest testAc3BuilderNoBufferSize CtsMediaTestCases]', 1), ('[android.view.cts.ViewConfigurationTest testInstanceValues CtsViewTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-2-2"	"9.5/C-2-2"	"09050000.670202"	"""C-2-2] MUST ensure that applications owned by and running on behalf of a given user cannot list, read, or write to the files owned by any other user, even if the data of both users are stored on the same volume or filesystem. Device implementations MAY create a single additional user profile of type android.os.usertype.profile.CLONE against the primary user (and only against the primary user) for the purpose of running dual instances of the same app. These dual instances share partially isolated storage, are presented to the end user in the launcher at the same time and appear in the same recents view. For example, this could be used to support the user installing two separate instances of a single app on a dual-SIM device. If device implementations create the additional user profile discussed above, then they:"""	""	""	"android.os.usertype.profile.CLONE SIM CLONE"	""	""	""	""	"[('android.jni.cts.JniStaticTest', 30), ('android.text.cts.PrecomputedTextTest', 3), ('android.telephony.cts.util.CarrierPrivilegeUtils', 1), ('android.appwidget.cts.DarkTextThemeTest', 1), ('android.widget.cts.ListPopupWindowTest', 1), ('android.server.wm.DisplayTests', 1), ('com.android.cts.releaseparser.XmlParser', 1), ('android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.SessionCapabilities', 1), ('android.abioverride.app.AbiOverrideActivity', 1)]"	"[('getSimpleName', 2), ('close', 1), ('getAction', 1), ('countDown', 1), ('waitForCarrierPrivilegeChanged', 1), ('hasCarrierPrivileges', 1), ('getPackageManager', 1), ('getOpPackageName', 1), ('toByteArray', 1), ('getType', 1), ('setAdditionalInfo', 1), ('SessionCapabilities', 1), ('super', 1), ('getTag', 1)]"	"[('CtsJniTestCases', 30), ('CtsTextTestCases', 3), ('CtsTelephonyTestCases', 1), ('CtsAppWidgetTestCases', 1), ('CtsWidgetTestCases', 1), ('CtsWindowManagerDeviceTestCases', 1), ('CtsLocationGnssTestCases', 1)]"	""	"android.text.cts.PrecomputedTextTest"	"getSimpleName"	"CtsTextTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/jni/src/android/jni/cts/JniStaticTest.java', 30), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/PrecomputedTextTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/util/CarrierPrivilegeUtils.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/appwidget/src/android/appwidget/cts/DarkTextThemeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ListPopupWindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayTests.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/src/com/android/cts/releaseparser/XmlParser.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/SessionCapabilities.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/abioverride/app/src/android/abioverride/app/AbiOverrideActivity.java', 1)]"	"[('(1,SIM,/android/telephony/cts/util/CarrierPrivilegeUtils.java)', 1), ('(2,SIM,/android/appwidget/cts/DarkTextThemeTest.java)', 1), ('(1,SIM,/android/widget/cts/ListPopupWindowTest.java)', 1), ('(30,SIM,/android/jni/cts/JniStaticTest.java)', 1), ('(2,SIM,/android/server/wm/DisplayTests.java)', 1), ('(1,SIM,/com/android/cts/releaseparser/XmlParser.java)', 1), ('(3,SIM,/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/SessionCapabilities.java)', 1), ('(2,SIM,/android/abioverride/app/AbiOverrideActivity.java)', 1), ('(6,SIM,/android/text/cts/PrecomputedTextTest.java)', 1)]"	"[('([1:/android/jni/cts/JniStaticTest.java]:[SIM]:[1]:method_text:[;    }    /**     * Test a simple value-returning (but otherwise no-op) method call.     */   ])', 12), ('([1:/android/jni/cts/JniStaticTest.java]:[SIM]:[1]:method_text:[ simple value-taking method call, that returns whether it     * got the expected value.     */   ])', 10), ('([1:/android/jni/cts/JniStaticTest.java]:[SIM]:[1]:method_text:[ltiple value-taking method call, that returns whether it     * got the expected values.     */   ])', 4), ('([1:/android/jni/cts/JniStaticTest.java]:[SIM]:[1]:method_text:[herwise no-op) method call,     * that returns the class that the method is defined on.     */   ])', 2), ('([1:/android/telephony/cts/util/CarrierPrivilegeUtils.java]:[SIM]:[1]:method_text:[         changeCarrierPrivileges(c, subId, false /* lose */, false /* isShell */);        }    }}])', 1), ('([2:/android/appwidget/cts/DarkTextThemeTest.java]:[SIM]:[2]:method_text:[nds.removeAt(i);                    action.run();                }            }        }    }}])', 1), ('([1:/android/widget/cts/ListPopupWindowTest.java]:[SIM]:[1]:method_text:[pupWindow.isShowing())                return;            mPopupWindow.dismiss();        }    }}])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[SIM]:[1]:method_text:[Helper.run());    }    /**     * Test a simple no-op and void-returning method call.     */   ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[SIM]:[1]:method_text:[pected value. In particular, this test passes the     * class the method is defined on.     */   ])', 1), ('([2:/android/server/wm/DisplayTests.java]:[SIM]:[2]:method_text:[                    .getResources().getConfiguration();            return config;        }    }}])', 1), ('([1:/com/android/cts/releaseparser/XmlParser.java]:[SIM]:[1]:method_text:[tatic Logger getLogger() {        return Logger.getLogger(XmlParser.class.getSimpleName());    }}])', 1), ('([3:/android/location/cts/gnss/asn1/supl2/ulp_version_2_parameter_extensions/SessionCapabilities.java]:[SIM]:[3]:method_text:[     }      }    }    builder.append(indent).append(""};\\n"");    return builder.toString();  }}])', 1), ('([2:/android/abioverride/app/AbiOverrideActivity.java]:[SIM]:[2]:method_text:[icle) {        super.onCreate(icicle);        Log.i(TAG, TEST_STRING + Process.is64Bit());    }}])', 1), ('([3:/android/text/cts/PrecomputedTextTest.java]:[SIM]:[3]:method_text:[ncy(Layout.HYPHENATION_FREQUENCY_NORMAL)                .setTextDirection(LTR).build());    }   ])', 1), ('([2:/android/text/cts/PrecomputedTextTest.java]:[SIM]:[2]:method_text:[Params.Builder(PAINT).setTextDirection(RTL).build()                .getTextDirection());    }   ])', 1), ('([1:/android/text/cts/PrecomputedTextTest.java]:[SIM]:[1]:method_text:[ild();        assertFalse(base.equals(other));        assertFalse(other.equals(base));    }   ])', 1)]"	""	""	"[('SIM', 40)]"	"[('[android.telephony.cts.util.CarrierPrivilegeUtils PersistableBundle CtsTelephonyTestCases]', 1), ('[android.appwidget.cts.DarkTextThemeTest testCollection_dark CtsAppWidgetTestCases]', 1), ('[android.widget.cts.ListPopupWindowTest testCreateOnDragListener CtsWidgetTestCases]', 1), ('[android.jni.cts.JniStaticTest test_classload CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_nop CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_returnBoolean CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_returnByte CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_returnShort CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_returnChar CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_returnInt CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_returnLong CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_returnFloat CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_returnDouble CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_returnNull CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_returnString CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_returnShortArray CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_returnStringArray CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_returnThisClass CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_returnInstance CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_takeBoolean CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_takeByte CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_takeShort CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_takeChar CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_takeInt CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_takeLong CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_takeFloat CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_takeDouble CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_takeNull CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_takeString CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_takeThisClass CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_takeIntLong CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_takeLongInt CtsJniTestCases]', 1), ('[android.jni.cts.JniStaticTest test_takeOneOfEach CtsJniTestCases]', 1), ('[android.server.wm.DisplayTests testForceDisplayMetrics CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.releaseparser.XmlParser getPermissions None]', 1), ('[android.location.cts.gnss.asn1.supl2.ulp_version_2_parameter_extensions.SessionCapabilities isTagImplicit CtsLocationGnssTestCases]', 1), ('[android.abioverride.app.AbiOverrideActivity is64Bit None]', 1), ('[android.text.cts.PrecomputedTextTest testParams_create CtsTextTestCases]', 1), ('[android.text.cts.PrecomputedTextTest testParams_SetGet CtsTextTestCases]', 1), ('[android.text.cts.PrecomputedTextTest testParams_equals CtsTextTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-12"	"9.8/H-1-12"	"09080000.720112"	"""[9.8/H-1-12] MUST support a debug mode that logs raw contents of every transmission from the hotword detection service to allow inspectability for security researchers. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-14"	"9.8/H-1-14"	"09080000.720114"	"""[9.8/H-1-14] MUST display the microphone indicator, as required in """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"8.3  . Power"	"8.3"	"C-1-6"	"8.3/C-1-6"	"08030000.670106"	"""C-1-6] MUST provide user affordance to display all apps that are exempted from App Standby and Doze power-saving modes or any battery optimizations and MUST implement the ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS intent to ask the user to allow an app to ignore battery optimizations."""	""	""	"ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS"	""	""	""	""	"[('android.systemintents.cts.TestSystemIntents', 1), ('com.android.cts.verifier.battery.IgnoreBatteryOptimizationsTestActivity', 1)]"	"[('create', 1), ('setUp', 1), ('getInstrumentation', 1), ('getContext', 1), ('getPackageManager', 1)]"	"[('CtsSystemIntentTestCases', 1)]"	""	"com.android.cts.verifier.battery.IgnoreBatteryOptimizationsTestActivity"	"getPackageManager"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/battery/IgnoreBatteryOptimizationsTestActivity.java', 1)]"	"[('(1,ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS,/android/systemintents/cts/TestSystemIntents.java)', 1), ('(2,ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS,/com/android/cts/verifier/battery/IgnoreBatteryOptimizationsTestActivity.java)', 1)]"	"[('([1:/android/systemintents/cts/TestSystemIntents.java]:[ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS]:[1]:method_text:[etInstrumentation().getContext();        mPackageManager = mContext.getPackageManager();    }   ])', 1), ('([2:/com/android/cts/verifier/battery/IgnoreBatteryOptimizationsTestActivity.java]:[ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS]:[2]:method_text:[k() {            openIgnoreBatteryOptimizationsAppList();            succeed();        }    };}])', 1)]"	""	""	"[('ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS', 2)]"	"[('[com.android.cts.verifier.battery.IgnoreBatteryOptimizationsTestActivity getTests None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-9"	"9.9.3/C-1-9"	"09090300.670109"	"""C-1-9] CE keys MUST be bound to a default passcode when the user has not specified lock screen credentials."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-1-9"	"9.8/H-1-9"	"09080000.720109"	"""[9.8/H-1-9] MUST NOT allow a user-installable application to provide the hotword detection service. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8.2"	"H-4-2"	"9.8.2/H-4-2"	"09080200.720402"	"""[9.8.2/H-4-2] MUST display the list of Recent and Active apps using microphone as returned from PermissionManager.getIndicatorAppOpUsageData(), along with any attribution messages associated with them. """	""	""	"PermissionManager.getIndicatorAppOpUsageData getIndicatorAppOpUsageData()"	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-0-12"	"9.1/C-0-12"	"09010000.670012"	"""C-0-12] MUST NOT provide any custom functions or APIs to bypass the permission restrictions defined in setPermissionPolicy and setPermissionGrantState APIs."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3  . Encryption Methods"	"9.9.3"	"C-1-8"	"9.9.3/C-1-8"	"09090300.670108"	"""C-1-8] CE keys MUST be bound to a user&#39;s lock screen credentials."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.7.4  . Performance"	"8.2"	"H-2-4"	"8.2/H-2-4"	"08020000.720204"	"""[8.2/H-2-4] MUST ensure a random read performance of at least 40 MB/s. <h3 id=""23_television_requirements"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"2.2.5  . Security Model"	"9.8"	"H-2-2"	"9.8/H-2-2"	"09080000.720202"	"""[9.8/H-2-2] MUST NOT preserve raw audio data, or data derived from it, through the hotword detection service. """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.8.9  . Installed apps"	"9.8.9"	"C-0-2"	"9.8.9/C-0-2"	"09080900.670002"	"""C-0-2] MUST NOT give to any app, read or write access to files in any other app’s dedicated, app-specific directory within external storage. The only exceptions are as follows: The external storage provider authority (e.g. apps like DocumentsUI). Download Provider which uses the “downloads” provider authority for downloading files to app storage. Platform-signed media transfer protocol (MTP) apps which use the privileged permission ACCESS_MTP to enable transferring files to another device. Apps which install other apps and have the permission INSTALL_PACKAGES can access only “obb” directories for the purpose of managing APK expansion files. <h4 id=""9810_connectivity_bug_report"" """	""	""	"APK ACCESS_MTP MTP INSTALL_PACKAGES"	""	""	""	""	"[('com.android.cts.rollback.host.app.HostTestHelper', 25), ('android.permission.cts.NearbyDevicesPermissionTest', 14), ('android.permission2.cts.RestrictedPermissionsTest', 10), ('com.android.cts.devicepolicy.ManagedProfilePasswordTest', 3), ('android.abioverride.cts.AbiOverrideTest', 2), ('com.android.cts.host.blob.StatsdBlobStoreAtomTest', 1), ('com.android.tests.atomicinstall.SessionAbandonBehaviorTest', 1), ('android.atrace.cts.AtraceHostTestBase', 1), ('android.jvmti.attaching.cts.AttachingTest', 1), ('android.permission.cts.FileSystemPermissionTest', 1), ('android.permission2.cts.RestrictedStoragePermissionSharedUidTest', 1)]"	"[('getDevice', 8), ('setUp', 5), ('getContext', 4), ('tearDown', 3), ('getInstrumentation', 3), ('getAbsolutePath', 2), ('getClassLoader', 2), ('getPackageManager', 2), ('getTargetSDK', 2), ('install', 2), ('uninstall', 2), ('NoApp', 2), ('setup', 2), ('teardown', 2), ('stream', 2), ('getBytes', 1), ('countDown', 1), ('getUiAutomation', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('requireApk', 1), ('printStackTrace', 1), ('turnScreenOn', 1), ('getIDevice', 1), ('data', 1), ('getName', 1), ('setUpOnce', 1), ('CommandBroadcastReceiver', 1), ('IntentFilter', 1), ('tearDownOnce', 1), ('shareUidBetweenRestrictedAndNotRestrictedApp', 1), ('getSimpleName', 1), ('toString', 1), ('length', 1), ('cleanUp', 1), ('getRollbackManager', 1), ('getAvailableRollbacks', 1), ('getPackages', 1), ('getPackageName', 1), ('getApkInApexVersionFile', 1), ('toPath', 1)]"	"[('CtsPermissionTestCases', 15), ('CtsPermission2TestCases', 11), ('CtsDevicePolicyManagerTestCases', 3), ('CtsAbiOverrideHostTestCases', 2), ('CtsBlobStoreHostTestCases', 1), ('CtsAtomicInstallTestCases', 1), ('CtsAtraceHostTestCases', 1), ('CtsJvmtiAttachingTestCases', 1)]"	""	"com.android.cts.rollback.host.app.HostTestHelper"	"teardown"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/rollback/app/src/com/android/cts/rollback/host/app/HostTestHelper.java', 25), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 14), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 10), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/abioverride/src/android/abioverride/cts/AbiOverrideTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/blobstore/src/com/android/cts/host/blob/StatsdBlobStoreAtomTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/packageinstaller/atomicinstall/src/com/android/tests/atomicinstall/SessionAbandonBehaviorTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/atrace/src/android/atrace/cts/AtraceHostTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/jvmti/attaching/src/android.jvmti.attaching.cts/AttachingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/FileSystemPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedStoragePermissionSharedUidTest.java', 1)]"	"[('(1,APK,/com/android/cts/host/blob/StatsdBlobStoreAtomTest.java)', 1), ('(1,INSTALL_PACKAGES,/com/android/tests/atomicinstall/SessionAbandonBehaviorTest.java)', 1), ('(24,APK,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(10,APK,/android/atrace/cts/AtraceHostTestBase.java)', 1), ('(4,APK,/android.jvmti.attaching.cts/AttachingTest.java)', 1), ('(2,APK,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(3,APK,/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java)', 1), ('(9,APK,/android/abioverride/cts/AbiOverrideTest.java)', 1), ('(31,APK,/android/permission2/cts/RestrictedPermissionsTest.java)', 1), ('(15,APK,/android/permission2/cts/RestrictedStoragePermissionSharedUidTest.java)', 1), ('(90,APK,/com/android/cts/rollback/host/app/HostTestHelper.java)', 1), ('(1,INSTALL_PACKAGES,/com/android/cts/rollback/host/app/HostTestHelper.java)', 1)]"	"[('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[APK]:[1]:method_text:[EST_APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FULL);    }   ])', 2), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[APK]:[1]:method_text:[PP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 2), (""([2:/android/permission/cts/NearbyDevicesPermissionTest.java]:[APK]:[2]:method_text:[uetooth     * scan results; they'd always need to involve the user to gain permissions.     */   ])"", 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[APK]:[1]:method_text:[       ACCESS_BACKGROUND_LOCATION)));        assertAllRestrictedPermissionWhitelisted();    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[APK]:[1]:method_text:[ions.singleton(ACCESS_FINE_LOCATION));        assertNoRestrictedPermissionWhitelisted();    }   ])', 2), ('([2:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[2]:method_text:[acks of staged installs involving only apks.     * Confirms TestApp.A2 was rolled back.     */   ])', 2), ('([2:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[2]:method_text:[pks.     * Commits TestApp.A2 and TestApp.B2 as a staged install with rollback enabled.     */   ])', 2), ('([7:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[7]:method_text:[       assertThat(InstallUtils.getInstalledVersion(SHIM_APEX_PACKAGE_NAME)).isEqualTo(2);    }   ])', 2), ('([1:/com/android/cts/host/blob/StatsdBlobStoreAtomTest.java]:[APK]:[1]:method_text:[());        ReportUtils.clearReports(getDevice());        uninstallPackage(TARGET_PKG);    }   ])', 1), ('([1:/com/android/tests/atomicinstall/SessionAbandonBehaviorTest.java]:[INSTALL_PACKAGES]:[1]:method_text:[ public void setUp() throws Exception {        Uninstall.packages(TestApp.A, TestApp.B);    }   ])', 1), ('([8:/android/permission/cts/NearbyDevicesPermissionTest.java]:[APK]:[8]:method_text:[efore    @After    public void uninstallTestApp() {        uninstallApp(TEST_APP_PKG);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[APK]:[1]:method_text:[ble {        install(APK_BLUETOOTH_30);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[APK]:[1]:method_text:[{        install(APK_BLUETOOTH_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[APK]:[1]:method_text:[ermission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.EMPTY);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[APK]:[1]:method_text:[PK_BLUETOOTH_NEVER_FOR_LOCATION_31);        assertScanBluetoothResult(Result.EXCEPTION);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[APK]:[1]:method_text:[ission(TEST_APP_PKG, BLUETOOTH_SCAN);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[APK]:[1]:method_text:[APP_PKG, ACCESS_BACKGROUND_LOCATION);        assertScanBluetoothResult(Result.FILTERED);    }   ])', 1), ('([2:/android/permission/cts/NearbyDevicesPermissionTest.java]:[APK]:[2]:method_text:[               + "" com.android.bluetooth/.btservice.AdapterService set-test-mode disabled"");    }}])', 1), ('([10:/android/atrace/cts/AtraceHostTestBase.java]:[APK]:[10]:method_text:[stList test, String... categories) {        return traceSingleTest(test, true, categories);    }}])', 1), (""([4:/android.jvmti.attaching.cts/AttachingTest.java]:[APK]:[4]:method_text:[dFiles.clear();    }    // Tests.    // This will be repeated unnecessarily, but that's OK.   ])"", 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[APK]:[2]:method_text:[here looking for bad directories.  There has to be     * a better way...     */    @LargeTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[APK]:[1]:method_text:[_PASSWORD, mPrimaryUserId);        }    }    @FlakyTest    @LargeTest    @LockSettingsTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[APK]:[1]:method_text:[   // end.            pressPowerButton();        }    }    @LargeTest    @LockSettingsTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[APK]:[1]:method_text:[ng erroneously shown at the            // end.            pressPowerButton();        }    }   ])', 1), ('([8:/android/abioverride/cts/AbiOverrideTest.java]:[APK]:[8]:method_text:[ correctly set to 32bit when use32BitAbi is set to true.     *     * @throws Exception     */   ])', 1), ('([1:/android/abioverride/cts/AbiOverrideTest.java]:[APK]:[1]:method_text:[he result is false        assertEquals(""Incorrect abi"", TEST_STRING + ""false"", testString);    }}])', 1), ('([16:/android/permission2/cts/RestrictedPermissionsTest.java]:[APK]:[16]:method_text:[c static void tearDownOnce() {        getContext().unregisterReceiver(sCommandReceiver);    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[APK]:[1]:method_text:[ted permission should be whitelisted.        assertAllRestrictedPermissionWhitelisted();    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[APK]:[1]:method_text:[ld be whitelisted.        assertRestrictedPermissionWhitelisted(whitelistedPermissions);    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[APK]:[1]:method_text:[cted permission should be whitelisted.        assertNoRestrictedPermissionWhitelisted();    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[APK]:[1]:method_text:[ionGranted(grantedPermissions);        } finally {            uninstallApp();        }    }   ])', 1), ('([7:/android/permission2/cts/RestrictedPermissionsTest.java]:[APK]:[7]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 1), ('([15:/android/permission2/cts/RestrictedStoragePermissionSharedUidTest.java]:[APK]:[15]:method_text:[PS[firstApp], TEST_APPS[secondApp]});            }        }        return parameters;    }   ])', 1), ('([3:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[3]:method_text:[s InterruptedException, IOException {        InstallUtils.dropShellPermissionIdentity();    }   ])', 1), ('([2:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[2]:method_text:[nvolving only apks.     * Commits TestApp.A2 as a staged install with rollback enabled.     */   ])', 1), ('([2:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[2]:method_text:[ Confirms a staged rollback is available for TestApp.A2 and commits the     * rollback.     */   ])', 1), ('([2:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[2]:method_text:[ rollbacks are available for TestApp.A2 and TestApp.b2, and commits the     * rollback.     */   ])', 1), ('([2:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[2]:method_text:[installs involving only apks.     * Confirms TestApp.A2 and TestApp.B2 was rolled back.     */   ])', 1), ('([2:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[2]:method_text:[Confirms staged rollbacks are available for TestApp.A2, and commits the     * rollback.     */   ])', 1), ('([1:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[1]:method_text:[     * <p> We start by installing version 2. The test ultimately rolls back from 3 to 2.     */   ])', 1), ('([2:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[2]:method_text:[  * Test rollbacks of staged installs involving only apex.     * Commit rollback phase.     */   ])', 1), ('([7:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[7]:method_text:[ * Test rollbacks of staged installs involving only apex.     * Confirm rollback phase.     */   ])', 1), ('([2:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[2]:method_text:[rsion();        Install.single(TestApp.Apex2).setStaged().setEnableRollback().commit();    }   ])', 1), ('([1:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[1]:method_text:[rollbacks of staged installs involving apex and apk.     * Install first version phase.     */   ])', 1), ('([2:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[2]:method_text:[ Test rollbacks of staged installs involving apex and apk.     * Enable rollback phase.     */   ])', 1), ('([4:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[4]:method_text:[ Test rollbacks of staged installs involving apex and apk.     * Commit rollback phase.     */   ])', 1), ('([9:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[9]:method_text:[Test rollbacks of staged installs involving apex and apk.     * Confirm rollback phase.     */   ])', 1), ('([6:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[6]:method_text:[that apex update expires existing rollbacks for that apex.     * Enable rollback phase.     */   ])', 1), ('([2:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[2]:method_text:[      Install.single(Apex2SignedBobRotRollback).setStaged().setEnableRollback().commit();    }   ])', 1), ('([1:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[1]:method_text:[le(TestApp.A1).commit();        Install.single(TestApp.A2).setEnableRollback().commit();    }   ])', 1), ('([18:/com/android/cts/rollback/host/app/HostTestHelper.java]:[APK]:[18]:method_text:[tation().getContext();        return new File(context.getFilesDir(), APK_VERSION_FILENAME);    }}])', 1), ('([1:/com/android/cts/rollback/host/app/HostTestHelper.java]:[INSTALL_PACKAGES]:[1]:method_text:[s InterruptedException, IOException {        InstallUtils.dropShellPermissionIdentity();    }   ])', 1)]"	""	""	"[('APK', 58), ('INSTALL_PACKAGES', 2)]"	"[('[com.android.cts.rollback.host.app.HostTestHelper dropShellPermissionIdentity None]', 2), ('[com.android.tests.atomicinstall.SessionAbandonBehaviorTest TestName CtsAtomicInstallTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_OnBehalfOfDisavowingApp CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Upgrade CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Downgrade CtsPermissionTestCases]', 1), ('[android.atrace.cts.AtraceHostTestBase CollectingTestListener CtsAtraceHostTestCases]', 1), ('[android.jvmti.attaching.cts.AttachingTest isAttached4 CtsJvmtiAttachingTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testAllOtherDirectoriesNotWritable CtsPermissionTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testUnlockWorkProfile_deviceWidePassword CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testRebootDevice_unifiedPassword CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testRebootDevice_separatePasswords CtsDevicePolicyManagerTestCases]', 1), ('[android.abioverride.cts.AbiOverrideTest testAbiIs32bit CtsAbiOverrideHostTestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testDefaultAllRestrictedPermissionsWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testNoneRestrictedPermissionWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testCanGrantSoftRestrictedNotWhitelistedPermissions CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest isTrue CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionSharedUidTest getTestAppCombinations CtsPermission2TestCases]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApkOnlyStagedRollback_Phase1_Install None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApkOnlyStagedRollback_Phase2_RollBack None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApkOnlyStagedRollback_Phase3_Confirm None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApkOnlyMultipleStagedRollback_Phase1_Install None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApkOnlyMultipleStagedRollback_Phase2_RollBack None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApkOnlyMultipleStagedRollback_Phase3_Confirm None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApkOnlyMultipleStagedPartialRollback_Phase1_Install None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApkOnlyMultipleStagedPartialRollback_Phase2_RollBack None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApkOnlyMultipleStagedPartialRollback_Phase3_Confirm None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApexOnlyStagedRollback_Phase2_InstallSecond None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApexOnlyStagedRollback_Phase3_RollBack None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApexOnlySystemVersionStagedRollback_Phase1_Install None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApexOnlySystemVersionStagedRollback_Phase2_RollBack None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApexOnlySystemVersionStagedRollback_Phase3_Confirm None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApexAndApkStagedRollback_Phase1_InstallFirst None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApexAndApkStagedRollback_Phase2_InstallSecond None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApexAndApkStagedRollback_Phase3_RollBack None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApexAndApkStagedRollback_Phase4_Confirm None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApexKeyRotationStagedRollback_Phase1_Install None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApexKeyRotationStagedRollback_Phase2_RollBack None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testApkRollbackByAnotherInstaller_Phase1_FirstInstaller None]', 1), ('[com.android.cts.rollback.host.app.HostTestHelper testSimultaneousRollbacksBothSucceed_Phase3_Confirm None]', 1)]"	""	""	""	""	""	""	""	""	""
"9.1  . Permissions"	"9.1"	"C-0-13"	"9.1/C-0-13"	"09010000.670013"	"""C-0-13] MUST use the AppOpsManager APIs to record and track each and every programmatic access of data protected by dangerous permissions from Android activities and services."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
