"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"protected"	"Area"	"Shortened"	"Test Level"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"
"9.9.3.1  . File Based Encryption with Metadata Encryption"	"9.9.3.1"	"C-1-10"	"9.9.3.1/C-1-10"	"09090301.670110"	"""C-1-10] MUST be unique and distinct, in other words no user's CE or DE key matches any other user's CE or DE keys."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3.1  . File Based Encryption with Metadata Encryption"	"9.9.3.1"	"C-1-6"	"9.9.3.1/C-1-6"	"09090301.670106"	"""C-1-6] MUST encrypt file names using AES-256-CBC-CTS or Adiantum."""	""	""	"CTS CBC AES"	""	""	""	""	""	""	""	""	"[('android.accessibilityservice.cts.AccessibilityEndToEndTest', 11), ('android.widget.cts.TabHostTest', 8), ('com.android.cts.storageapp.StorageTest', 7), ('android.view.cts.SystemGestureExclusionRectsTest', 6), ('android.provider.cts.contacts.ContactsContractIntentsTest', 4), ('android.server.wm.DisplaySizeTest', 4), ('android.hardware.cts.helpers.SensorCtsHelperTest', 3), ('com.android.cts.authboundkey.AuthBoundKeyAppTest', 3), ('android.server.wm.AppConfigurationTests', 3), ('android.net.ipsec.ike.cts.SaProposalTest', 3), ('android.server.wm.PinnedStackTests', 3), ('android.security.identity.cts.DynamicAuthTest', 3), ('android.security.cts.SELinuxHostTest', 3), ('android.incrementalinstall.cts.IncrementalInstallTest', 3), ('android.backup.cts.AgentBindingTest', 3), ('android.security.cts.VisualizerEffectTest', 2), ('android.uwb.cts.AngleOfArrivalMeasurementTest', 2), ('android.net.vcn.cts.VcnManagerTest', 2), ('android.security.cts.Poc18_07', 2), ('android.telephonyprovider.cts.MmsTest', 2), ('android.telephony.cts.PhoneNumberUtilsTest', 2), ('android.graphics.drawable.cts.IconTest', 2), ('com.android.cts.useslibrary.UsesLibraryTest', 2), ('android.server.wm.WindowInsetsControllerTests', 2), ('android.signature.cts.tests.LineSpliteratorTestBase', 2), ('android.appmanifest.cts.UsesNativeLibraryTestCase', 2), ('com.android.cts.deviceowner.NetworkLoggingTest', 2), ('android.hardware.camera2.cts.StaticMetadataTest', 2), ('android.host.systemui.TvMicrophoneCaptureIndicatorTest', 2), ('android.provider.cts.settings.SettingsTest', 2), ('android.server.wm.KeyguardLockedTests', 2), ('android.testharness.cts.TestHarnessModeDeviceTest', 2), ('android.view.cts.KeyCharacterMapTest', 2), ('android.view.cts.View_UsingViewsTest', 2), ('android.view.cts.SoundEffectConstantsTest', 1), ('android.autofillservice.cts.LoginWithStringsActivityTest', 1), ('android.accessibilityservice.cts.AccessibilityButtonSdk29Test', 1), ('android.telephony.cts.AvailableNetworkInfoTest', 1), ('android.net.cts.network.permission.UpdateStatsPermissionTest', 1), ('android.app.cts.NotificationCarExtenderTest', 1), ('com.android.cts.net.hostside.NetworkCallbackTest', 1), ('android.widget.cts.BaseAdapterTest', 1), ('android.car.cts.ExceptionsTest', 1), ('android.provider.cts.media.MediaStoreTest', 1), ('com.android.tests.loadingprogress.host.IncrementalLoadingProgressTest', 1), ('android.autofillservice.cts.inline.InlineSimpleSaveActivityTest', 1), ('android.server.wm.KeyguardTransitionTests', 1), ('android.view.cts.OrientationEventListenerTest', 1), ('android.autofillservice.cts.ValidatorTest', 1), ('android.os.cts.BuildVersionTest', 1), ('android.text.util.cts.Rfc822TokenizerTest', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.Path.ReferencePath', 1), ('android.location.cts.fine.CriteriaTest', 1), ('android.content.pm.cts.shortcut.upgrade.ShortcutManagerPreUpgradeTest', 1), ('android.telephony.cts.TelephonyRegistryManagerTest', 1), ('android.uirendering.cts.testclasses.SweepTests', 1), ('android.view.cts.ViewOutlineProviderTest', 1), ('android.vr.cts.VrSetFIFOThreadTest', 1), ('android.telephony.cts.SmsCbLocationTest', 1), ('android.app.cts.WallpaperManagerTest', 1), ('android.suspendapps.cts.DialogTests', 1), ('com.android.cts.externalstorageapp.GiftTest', 1), ('android.jni.cts.JniCTest', 1), ('android.os.cts.ConditionVariableTest', 1), ('com.android.cts.deviceowner.BluetoothRestrictionTest', 1), ('android.externalservice.cts.ExternalServiceTest', 1), ('android.bluetooth.cts.AdvertiseDataTest', 1), ('android.contentcaptureservice.cts.ClipboardAccessTest', 1), ('android.hardware.cts.helpers.sensorverification.MeanVerificationTest', 1), ('android.content.pm.cts.FeatureTest', 1), ('android.hardware.input.cts.tests.SonyDualshock4BluetoothTest', 1), ('android.util.cts.SparseIntArrayTest', 1), ('android.security.cts.Poc18_04', 1), ('android.content.res.cts.PluralResourcesTest', 1), ('android.media.cts.AudioTrackLatencyTest', 1), ('android.media.cts.MediaBrowserServiceTest', 1), ('com.android.cts.devicepolicy.LauncherAppsProfileTest', 1), ('android.permission.cts.CameraPermissionTest', 1), ('android.hardware.devicestate.cts.DeviceStateManagerTests', 1), ('android.renderscript.cts.SamplerTest', 1), ('android.server.wm.UnsupportedErrorDialogTests', 1), ('android.autofillservice.cts.saveui.CustomDescriptionTest', 1), ('android.os.cts.CountDownTimerTest', 1), ('android.uirendering.cts.testclasses.ViewAnimationUtilsTests', 1), ('android.security.cts.DecodeTest', 1), ('android.accounts.cts.AbstractAuthenticatorTests', 1), ('android.location.cts.fine.GnssMeasurementTest', 1), ('android.transition.cts.TransitionManagerTest', 1), ('android.view.inspector.cts.IntFlagMappingTest', 1), ('android.graphics.cts.FontVariationAxisTest', 1), ('android.signature.cts.api.SignatureMultiLibsTest', 1), ('android.os.cts.HidlMemoryTest', 1), ('android.autofillservice.cts.commontests.TimePickerTestCase', 1), ('android.uirendering.cts.testclasses.ShapeTests', 1), ('android.database.sqlite.cts.SQLiteWalTest', 1), ('android.hardware.input.cts.tests.GameviceGv186Test', 1), ('com.android.cts.readexternalstorageapp.ReadMultiViewTest', 1), ('android.bluetooth.cts.BasicAdapterTest', 1), ('android.opengl.cts.AttachShaderTest', 1), ('android.widget.cts.TableLayout_LayoutParamsTest', 1), ('android.net.wifi.cts.WifiFrameworkInitializerTest', 1), ('android.sample.cts.SampleDeviceTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerThrottlingTest', 1), ('android.jobscheduler.cts.BatteryConstraintTest', 1), ('android.app.cts.Instrumentation_ActivityResultTest', 1), ('android.renderscript.cts.LaunchClip', 1), ('android.widget.cts.AdapterViewTest', 1), ('android.view.inputmethod.cts.InputConnectionWrapperTest', 1), ('android.telephony.euicc.cts.EuiccInfoTest', 1), ('android.view.inputmethod.cts.KeyboardVisibilityControlTest', 1), ('android.mediav2.cts.CodecDecoderExtTest', 1), ('com.android.cts.releaseparser.FileParserTest', 1), ('android.autofillservice.cts.DatasetTest', 1), ('android.security.identity.cts.IdentityApiTest', 1), ('android.hardware.cts.LowRamDeviceTest', 1), ('android.security.net.config.cts.DomainConfigTest', 1), ('android.telephonyprovider.device.cts.TelephonyProviderTest', 1), ('android.view.inputmethod.cts.ExtractedTextRequestTest', 1), ('android.view.cts.InflateExceptionTest', 1), ('android.media.cts.AudioPreProcessingTest', 1), ('android.controls.cts.CtsControlBuilderTest', 1), ('android.server.wm.DialogFrameTests', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1), ('android.server.wm.FreeformWindowingModeTests', 1), ('android.telephony.ims.cts.ImsSsInfoTest', 1), ('android.content.pm.cts.PermissionInfoTest', 1), ('android.security.cts.Poc16_11', 1), ('android.view.cts.SurfaceHolder_BadSurfaceTypeExceptionTest', 1), ('android.hardware.cts.helpers.sensorverification.OffsetVerificationTest', 1), ('android.permission.cts.AppIdleStatePermissionTest', 1), ('com.android.cts.managedprofile.SanityTest', 1), ('android.os.cts.RequiredComponentsTest', 1), ('android.renderscript.cts.generated.TestNativeAcos', 1), ('android.telecom.cts.PhoneAccountSuggestionTest', 1), ('android.media.cts.DecoderTestXheAac', 1), ('android.hardware.camera2.cts.NativeCameraDeviceTest', 1), ('android.text.style.cts.AlignmentSpan_StandardTest', 1), ('com.android.cts.transferowner.DeviceAndProfileOwnerTransferIncomingTest', 1), ('android.autofillservice.cts.servicebehavior.MultiScreenDifferentActivitiesTest', 1), ('android.telecom.cts.DefaultDialerOperationsNoPermissionsTest', 1), ('android.accounts.cts.AuthenticatorDescriptionTest', 1), ('android.autofillservice.cts.unittests.CustomDescriptionUnitTest', 1), ('android.autofillservice.cts.AutoFinishSessionTest', 1), ('com.android.cts.escalatepermission.PermissionEscalationTest', 1), ('android.telephony.ims.cts.ImsMmTelManagerTest', 1), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 1), ('android.alarmmanager.cts.ExactAlarmsTest', 1)]"	"[('setUp', 60), ('getInstrumentation', 37), ('destroy', 30), ('toString', 28), ('tearDown', 27), ('getContext', 26), ('getTargetContext', 18), ('getDevice', 12), ('build', 12), ('getActivity', 11), ('Builder', 11), ('setup', 10), ('StringBuilder', 10), ('getPackageManager', 9), ('getContentResolver', 8), ('getPackageName', 8), ('getViewTreeObserver', 7), ('size', 7), ('getSimpleName', 6), ('trim', 6), ('countDown', 5), ('getUiAutomation', 4), ('getAbsolutePath', 4), ('getLastReportedRects', 4), ('getWho', 4), ('fail', 4), ('notify', 4), ('ArgumentsFloatFloat', 4), ('ArgumentsHalfHalf', 4), ('buildIkeSaProposalWithNormalModeCipher', 3), ('buildIkeSaProposalWithCombinedModeCipher', 3), ('buildChildSaProposalWithNormalModeCipher', 3), ('buildChildSaProposalWithCombinedModeCipher', 3), ('buildChildSaProposalWithOnlyCiphers', 3), ('getResources', 3), ('getCount', 3), ('getType', 3), ('getOpPackageName', 3), ('getActivityRule', 2), ('afterActivityLaunched', 2), ('AccessibilityDumpOnFailureRule', 2), ('oneTimeSetup', 2), ('getBuild', 2), ('ensureDefaultSmsApp', 2), ('removeLastMarker', 2), ('clear', 2), ('getCoordinates', 2), ('AnimationCallback', 2), ('ErrorCollector', 2), ('turnScreenOn', 2), ('clearPrimaryClip', 2), ('run', 2), ('stream', 2), ('getAction', 2), ('openDatabase', 2), ('elapsedRealtime', 2), ('create', 2), ('Intent', 2), ('activityName', 2), ('initAacDecoderNames', 2), ('getName', 2), ('getId', 2), ('RuntimeException', 1), ('data', 1), ('getSharedVolumeNames', 1), ('newCachedThreadPool', 1), ('getSerialNumber', 1), ('close', 1), ('staticView', 1), ('Rect', 1), ('getWidth', 1), ('getHeight', 1), ('width', 1), ('height', 1), ('animatingView', 1), ('animate', 1), ('removingRects', 1), ('rootExclusionRects', 1), ('getWindow', 1), ('getSystemGestureExclusionRects', 1), ('ignoreHiddenViewRects', 1), ('supportsInsecureLock', 1), ('cleanup', 1), ('calculatePathRemaining', 1), ('ConditionVariable', 1), ('getDefaultAdapter', 1), ('enable', 1), ('Connection', 1), ('prepareClipboardManager', 1), ('cleanYourself', 1), ('Configuration', 1), ('getConfiguration', 1), ('getAssets', 1), ('setBufferSizeInFrames', 1), ('getBufferCapacityInFrames', 1), ('getUnderrunCount', 1), ('Object', 1), ('ConnectionCallback', 1), ('onConnected', 1), ('SubscriptionCallback', 1), ('ItemCallback', 1), ('Runnable', 1), ('Bundle', 1), ('myPid', 1), ('myUid', 1), ('connect', 1), ('supportsPip', 1), ('getExternalStorageDirectory', 1), ('onShutter', 1), ('flush', 1), ('getSupportedStates', 1), ('matches', 1), ('resetAppErrors', 1), ('enableService', 1), ('onFill', 1), ('getNextFillRequest', 1), ('tapLogin', 1), ('getNextSaveRequest', 1), ('BroadcastReceiver', 1), ('release', 1), ('delete', 1), ('prepareDatabase', 1), ('getPath', 1), ('ReentrantLock', 1), ('newCondition', 1), ('hashCode', 1), ('hasBattery', 1), ('getJobState', 1), ('assertJobReady', 1), ('assertJobWaiting', 1), ('assertJobNotReady', 1), ('getXStart', 1), ('getXEnd', 1), ('getYStart', 1), ('getYEnd', 1), ('getZStart', 1), ('getZEnd', 1), ('getElement', 1), ('getY', 1), ('getZ', 1), ('hasIncrementalFeature', 1), ('adbBinarySupportsIncremental', 1), ('teardown', 1), ('UnlockScreenRule', 1), ('input', 1), ('supportsSecureLock', 1), ('activityRule', 1), ('checkNativeAcosFloatFloat', 1), ('checkNativeAcosFloat2Float2', 1), ('checkNativeAcosFloat3Float3', 1), ('checkNativeAcosFloat4Float4', 1), ('checkNativeAcosHalfHalf', 1), ('checkNativeAcosHalf2Half2', 1), ('checkNativeAcosHalf3Half3', 1), ('checkNativeAcosHalf4Half4', 1), ('getCodecInfos', 1), ('BasicAdminReceiver', 1), ('BasicAdminReceiverNoMetadata', 1), ('getFragmentManager', 1), ('getParent', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('AlarmManagerDeviceConfigHelper', 1), ('dumpState', 1), ('resetAppOp', 1), ('updateAlarmManagerConstants', 1), ('commitAndAwaitPropagation', 1), ('putDeviceToIdle', 1), ('enableChange', 1), ('resetChanges', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 11), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TabHostTest.java', 8), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/StorageApp/src/com/android/cts/storageapp/StorageTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/SystemGestureExclusionRectsTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContractIntentsTest.java', 4), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelperTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/AuthBoundKeyApp/src/com/android/cts/authboundkey/AuthBoundKeyAppTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/SaProposalTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PinnedStackTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/DynamicAuthTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalInstallTest.java', 3), ('/home/gpoor/cts-source/cts/tests/backup/src/android/backup/cts/AgentBindingTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/VisualizerEffectTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/uwb/src/android/uwb/cts/AngleOfArrivalMeasurementTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/vcn/src/android/net/vcn/cts/VcnManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc18_07.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephonyprovider/src/android/telephonyprovider/cts/MmsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneNumberUtilsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/IconTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplaySizeTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/classloaders/useslibrary/app/src/com/android/cts/useslibrary/UsesLibraryTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/library/src/android/appmanifest/cts/UsesNativeLibraryTestCase.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/NetworkLoggingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/systemui/src/android/host/systemui/TvMicrophoneCaptureIndicatorTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/settings/SettingsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 2), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplaySizeTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/testharness/src/android/testharness/cts/TestHarnessModeDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyCharacterMapTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/View_UsingViewsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/SoundEffectConstantsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/LoginWithStringsActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/testsdk29/src/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/AvailableNetworkInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/netpermission/updatestatspermission/src/android/net/cts/network/permission/UpdateStatsPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationCarExtenderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/net/app/src/com/android/cts/net/hostside/NetworkCallbackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/BaseAdapterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/ExceptionsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/installedloadingprogess/hostside/src/com/android/tests/loadingprogress/host/IncrementalLoadingProgressTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardTransitionTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/OrientationEventListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/ValidatorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/BuildVersionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/util/cts/Rfc822TokenizerTest.java', 1), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/Path/ReferencePath.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/CriteriaTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/upgrade/src/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyRegistryManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/SweepTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewOutlineProviderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/vr/src/android/vr/cts/VrSetFIFOThreadTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SmsCbLocationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsControllerTests.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/WallpaperManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DialogTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/ExternalStorageApp/src/com/android/cts/externalstorageapp/GiftTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/jni/src/android/jni/cts/JniCTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/ConditionVariableTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/BluetoothRestrictionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/externalservice/src/android/externalservice/cts/ExternalServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/AdvertiseDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ClipboardAccessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/MeanVerificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/FeatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualshock4BluetoothTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/SparseIntArrayTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/tests/src/android/signature/cts/tests/LineSpliteratorTestBase.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc18_04.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/PluralResourcesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioTrackLatencyTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaBrowserServiceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/LauncherAppsProfileTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/CameraPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicestate/src/android/hardware/devicestate/cts/DeviceStateManagerTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/SamplerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/UnsupportedErrorDialogTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/CustomDescriptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/signature/tests/src/android/signature/cts/tests/LineSpliteratorTestBase.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/CountDownTimerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ViewAnimationUtilsTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/DecodeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/accounts/src/android/accounts/cts/AbstractAuthenticatorTests.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/GnssMeasurementTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/transition/src/android/transition/cts/TransitionManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/inspector/cts/IntFlagMappingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/FontVariationAxisTest.java', 1), ('/home/gpoor/cts-source/cts/tests/signature/api-check/shared-libs-api/src/android/signature/cts/api/SignatureMultiLibsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HidlMemoryTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/TimePickerTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ShapeTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/sqlite/cts/SQLiteWalTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/GameviceGv186Test.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/ReadExternalStorageApp/src/com/android/cts/readexternalstorageapp/ReadMultiViewTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/BasicAdapterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/AttachShaderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TableLayout_LayoutParamsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiFrameworkInitializerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sample/src/android/sample/cts/SampleDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/BatteryConstraintTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/Instrumentation_ActivityResultTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/LaunchClip.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/AdapterViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/EuiccInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/media/src/android/mediav2/cts/CodecDecoderExtTest.java', 1), ('/home/gpoor/cts-12-source/cts/tools/release-parser/tests/src/com/android/cts/releaseparser/FileParserTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/DatasetTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsControllerTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/IdentityApiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/networksecurityconfig/networksecurityconfig-basic-domain/src/android/security/net/config/cts/DomainConfigTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/telephonyprovider/devicetest/src/android/telephonyprovider/device/cts/TelephonyProviderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/ExtractedTextRequestTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/InflateExceptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioPreProcessingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/controls/src/android/controls/cts/CtsControlBuilderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DialogFrameTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/FreeformWindowingModeTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsSsInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PermissionInfoTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc16_11.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/SurfaceHolder_BadSurfaceTypeExceptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/OffsetVerificationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/AppIdleStatePermissionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/SanityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/RequiredComponentsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeAcos.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/PhoneAccountSuggestionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/style/cts/AlignmentSpan_StandardTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/TransferOwnerIncomingApp/src/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom2/src/android/telecom/cts/DefaultDialerOperationsNoPermissionsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/accounts/src/android/accounts/cts/AuthenticatorDescriptionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/CustomDescriptionUnitTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/AutoFinishSessionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EscalateToRuntimePermissions/src/com/android/cts/escalatepermission/PermissionEscalationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsMmTelManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy20/src/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/ExactAlarmsTest.java', 1)]"	"[('(2,CTS,/android/server/wm/DisplaySizeTest.java)', 2), ('(6,CTS,/android/server/wm/WindowInsetsControllerTests.java)', 2), ('(2,CTS,/android/signature/cts/tests/LineSpliteratorTestBase.java)', 2), ('(1,CTS,/android/view/cts/SoundEffectConstantsTest.java)', 1), ('(16,CTS,/android/autofillservice/cts/LoginWithStringsActivityTest.java)', 1), ('(4,CTS,/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java)', 1), ('(1,CTS,/android/telephony/cts/AvailableNetworkInfoTest.java)', 1), ('(1,CTS,/android/net/cts/network/permission/UpdateStatsPermissionTest.java)', 1), ('(1,CTS,/android/app/cts/NotificationCarExtenderTest.java)', 1), ('(10,CTS,/com/android/cts/net/hostside/NetworkCallbackTest.java)', 1), ('(2,CTS,/android/security/cts/VisualizerEffectTest.java)', 1), ('(1,CTS,/android/widget/cts/BaseAdapterTest.java)', 1), ('(4,CTS,/android/uwb/cts/AngleOfArrivalMeasurementTest.java)', 1), ('(25,CTS,/android/hardware/cts/helpers/SensorCtsHelperTest.java)', 1), ('(1,CTS,/android/car/cts/ExceptionsTest.java)', 1), ('(3,CTS,/android/provider/cts/media/MediaStoreTest.java)', 1), ('(2,CTS,/com/android/tests/loadingprogress/host/IncrementalLoadingProgressTest.java)', 1), ('(1,CTS,/com/android/cts/authboundkey/AuthBoundKeyAppTest.java)', 1), ('(1,CBC,/com/android/cts/authboundkey/AuthBoundKeyAppTest.java)', 1), ('(1,AES,/com/android/cts/authboundkey/AuthBoundKeyAppTest.java)', 1), ('(15,CTS,/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java)', 1), ('(60,CTS,/android/view/cts/SystemGestureExclusionRectsTest.java)', 1), ('(1,CTS,/android/server/wm/KeyguardTransitionTests.java)', 1), ('(1,CTS,/android/view/cts/OrientationEventListenerTest.java)', 1), ('(7,CTS,/android/net/vcn/cts/VcnManagerTest.java)', 1), ('(1,CBC,/android/net/vcn/cts/VcnManagerTest.java)', 1), ('(4,CTS,/android/autofillservice/cts/ValidatorTest.java)', 1), ('(3,CTS,/android/server/wm/AppConfigurationTests.java)', 1), ('(1,CTS,/android/os/cts/BuildVersionTest.java)', 1), ('(6,CTS,/android/security/cts/Poc18_07.java)', 1), ('(1,CTS,/android/text/util/cts/Rfc822TokenizerTest.java)', 1), ('(6,CTS,/android/telephonyprovider/cts/MmsTest.java)', 1), ('(5,CTS,/android/telephony/cts/PhoneNumberUtilsTest.java)', 1), ('(8,CTS,/com/android/cts/verifier/sensors/sixdof/Utils/Path/ReferencePath.java)', 1), ('(11,CTS,/android/provider/cts/contacts/ContactsContractIntentsTest.java)', 1), ('(8,CTS,/android/graphics/drawable/cts/IconTest.java)', 1), ('(1,CTS,/android/location/cts/fine/CriteriaTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java)', 1), ('(1,CTS,/android/telephony/cts/TelephonyRegistryManagerTest.java)', 1), ('(7,CTS,/android/uirendering/cts/testclasses/SweepTests.java)', 1), ('(1,CTS,/android/view/cts/ViewOutlineProviderTest.java)', 1), ('(5,CTS,/com/android/cts/useslibrary/UsesLibraryTest.java)', 1), ('(2,CTS,/android/vr/cts/VrSetFIFOThreadTest.java)', 1), ('(1,CTS,/android/telephony/cts/SmsCbLocationTest.java)', 1), ('(2,CTS,/android/app/cts/WallpaperManagerTest.java)', 1), ('(5,CTS,/android/suspendapps/cts/DialogTests.java)', 1), ('(10,CTS,/com/android/cts/externalstorageapp/GiftTest.java)', 1), ('(1,CTS,/android/jni/cts/JniCTest.java)', 1), ('(1,CTS,/android/os/cts/ConditionVariableTest.java)', 1), ('(1,CTS,/com/android/cts/deviceowner/BluetoothRestrictionTest.java)', 1), ('(1,CTS,/android/externalservice/cts/ExternalServiceTest.java)', 1), ('(1,CTS,/android/bluetooth/cts/AdvertiseDataTest.java)', 1), ('(1,CTS,/android/net/ipsec/ike/cts/SaProposalTest.java)', 1), ('(8,CBC,/android/net/ipsec/ike/cts/SaProposalTest.java)', 1), ('(23,AES,/android/net/ipsec/ike/cts/SaProposalTest.java)', 1), ('(2,CTS,/android/contentcaptureservice/cts/ClipboardAccessTest.java)', 1), ('(4,CTS,/android/hardware/cts/helpers/sensorverification/MeanVerificationTest.java)', 1), ('(1,CTS,/android/content/pm/cts/FeatureTest.java)', 1), ('(6,CTS,/android/hardware/input/cts/tests/SonyDualshock4BluetoothTest.java)', 1), ('(1,CTS,/android/util/cts/SparseIntArrayTest.java)', 1), ('(32,CTS,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(14,CTS,/android/widget/cts/TabHostTest.java)', 1), ('(1,CTS,/android/security/cts/Poc18_04.java)', 1), ('(2,CTS,/android/content/res/cts/PluralResourcesTest.java)', 1), ('(3,CTS,/android/media/cts/AudioTrackLatencyTest.java)', 1), ('(4,CTS,/android/media/cts/MediaBrowserServiceTest.java)', 1), ('(4,CTS,/com/android/cts/devicepolicy/LauncherAppsProfileTest.java)', 1), ('(3,CTS,/android/server/wm/PinnedStackTests.java)', 1), ('(1,CTS,/android/permission/cts/CameraPermissionTest.java)', 1), ('(4,CTS,/android/hardware/devicestate/cts/DeviceStateManagerTests.java)', 1), ('(3,CTS,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(1,CTS,/android/renderscript/cts/SamplerTest.java)', 1), ('(1,CTS,/android/security/identity/cts/DynamicAuthTest.java)', 1), ('(17,AES,/android/security/identity/cts/DynamicAuthTest.java)', 1), ('(1,CTS,/android/server/wm/UnsupportedErrorDialogTests.java)', 1), ('(10,CTS,/android/autofillservice/cts/saveui/CustomDescriptionTest.java)', 1), ('(10,CTS,/com/android/cts/deviceowner/NetworkLoggingTest.java)', 1), ('(22,CTS,/com/android/cts/storageapp/StorageTest.java)', 1), ('(1,CTS,/android/os/cts/CountDownTimerTest.java)', 1), ('(6,CTS,/android/uirendering/cts/testclasses/ViewAnimationUtilsTests.java)', 1), ('(2,CTS,/android/security/cts/DecodeTest.java)', 1), ('(7,CTS,/android/accounts/cts/AbstractAuthenticatorTests.java)', 1), ('(5,CTS,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(14,CTS,/android/security/cts/SELinuxHostTest.java)', 1), ('(1,CTS,/android/location/cts/fine/GnssMeasurementTest.java)', 1), ('(1,CTS,/android/transition/cts/TransitionManagerTest.java)', 1), ('(1,CTS,/android/view/inspector/cts/IntFlagMappingTest.java)', 1), ('(1,CTS,/android/graphics/cts/FontVariationAxisTest.java)', 1), ('(5,CTS,/android/signature/cts/api/SignatureMultiLibsTest.java)', 1), ('(1,CTS,/android/os/cts/HidlMemoryTest.java)', 1), ('(13,CTS,/android/autofillservice/cts/commontests/TimePickerTestCase.java)', 1), ('(6,CTS,/android/host/systemui/TvMicrophoneCaptureIndicatorTest.java)', 1), ('(5,CTS,/android/uirendering/cts/testclasses/ShapeTests.java)', 1), ('(1,CTS,/android/database/sqlite/cts/SQLiteWalTest.java)', 1), ('(2,CTS,/android/hardware/input/cts/tests/GameviceGv186Test.java)', 1), ('(2,CTS,/com/android/cts/readexternalstorageapp/ReadMultiViewTest.java)', 1), ('(1,CTS,/android/bluetooth/cts/BasicAdapterTest.java)', 1), ('(1,CTS,/android/opengl/cts/AttachShaderTest.java)', 1), ('(2,CTS,/android/widget/cts/TableLayout_LayoutParamsTest.java)', 1), ('(1,CTS,/android/net/wifi/cts/WifiFrameworkInitializerTest.java)', 1), ('(1,CTS,/android/sample/cts/SampleDeviceTest.java)', 1), ('(7,CTS,/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java)', 1), ('(1,CTS,/android/jobscheduler/cts/BatteryConstraintTest.java)', 1), ('(1,CTS,/android/app/cts/Instrumentation_ActivityResultTest.java)', 1), ('(2,CTS,/android/provider/cts/settings/SettingsTest.java)', 1), ('(1,CTS,/android/renderscript/cts/LaunchClip.java)', 1), ('(4,CTS,/android/widget/cts/AdapterViewTest.java)', 1), ('(1,CTS,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(1,CTS,/android/telephony/euicc/cts/EuiccInfoTest.java)', 1), ('(4,CTS,/android/incrementalinstall/cts/IncrementalInstallTest.java)', 1), ('(27,CTS,/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java)', 1), ('(1,CTS,/android/mediav2/cts/CodecDecoderExtTest.java)', 1), ('(2,CTS,/com/android/cts/releaseparser/FileParserTest.java)', 1), ('(1,CTS,/android/autofillservice/cts/DatasetTest.java)', 1), ('(1,CTS,/android/security/identity/cts/IdentityApiTest.java)', 1), ('(1,CTS,/android/hardware/cts/LowRamDeviceTest.java)', 1), ('(1,CTS,/android/security/net/config/cts/DomainConfigTest.java)', 1), ('(1,CTS,/android/telephonyprovider/device/cts/TelephonyProviderTest.java)', 1), ('(1,CTS,/android/view/inputmethod/cts/ExtractedTextRequestTest.java)', 1), ('(1,CTS,/android/view/cts/InflateExceptionTest.java)', 1), ('(7,CTS,/android/server/wm/KeyguardLockedTests.java)', 1), ('(2,CTS,/android/media/cts/AudioPreProcessingTest.java)', 1), ('(3,CTS,/android/controls/cts/CtsControlBuilderTest.java)', 1), ('(1,CTS,/android/server/wm/DialogFrameTests.java)', 1), ('(6,CTS,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 1), ('(1,CTS,/android/server/wm/FreeformWindowingModeTests.java)', 1), ('(1,CTS,/android/telephony/ims/cts/ImsSsInfoTest.java)', 1), ('(1,CTS,/android/content/pm/cts/PermissionInfoTest.java)', 1), ('(1,CTS,/android/security/cts/Poc16_11.java)', 1), ('(1,CTS,/android/view/cts/SurfaceHolder_BadSurfaceTypeExceptionTest.java)', 1), ('(4,CTS,/android/hardware/cts/helpers/sensorverification/OffsetVerificationTest.java)', 1), ('(1,CTS,/android/permission/cts/AppIdleStatePermissionTest.java)', 1), ('(5,CTS,/com/android/cts/managedprofile/SanityTest.java)', 1), ('(1,CTS,/android/os/cts/RequiredComponentsTest.java)', 1), ('(4,CTS,/android/backup/cts/AgentBindingTest.java)', 1), ('(2,CTS,/android/renderscript/cts/generated/TestNativeAcos.java)', 1), ('(1,CTS,/android/telecom/cts/PhoneAccountSuggestionTest.java)', 1), ('(5,CTS,/android/testharness/cts/TestHarnessModeDeviceTest.java)', 1), ('(4,CTS,/android/media/cts/DecoderTestXheAac.java)', 1), ('(2,CTS,/android/view/cts/KeyCharacterMapTest.java)', 1), ('(3,CTS,/android/hardware/camera2/cts/NativeCameraDeviceTest.java)', 1), ('(1,CTS,/android/text/style/cts/AlignmentSpan_StandardTest.java)', 1), ('(1,CTS,/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java)', 1), ('(10,CTS,/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java)', 1), ('(1,CTS,/android/telecom/cts/DefaultDialerOperationsNoPermissionsTest.java)', 1), ('(1,CTS,/android/accounts/cts/AuthenticatorDescriptionTest.java)', 1), ('(1,CTS,/android/autofillservice/cts/unittests/CustomDescriptionUnitTest.java)', 1), ('(11,CTS,/android/view/cts/View_UsingViewsTest.java)', 1), ('(10,CTS,/android/autofillservice/cts/AutoFinishSessionTest.java)', 1), ('(2,CTS,/com/android/cts/escalatepermission/PermissionEscalationTest.java)', 1), ('(1,CTS,/android/telephony/ims/cts/ImsMmTelManagerTest.java)', 1), ('(1,CTS,/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java)', 1), ('(5,CTS,/android/alarmmanager/cts/ExactAlarmsTest.java)', 1)]"	"[('([1:/android/server/wm/AppConfigurationTests.java]:[CTS]:[1]:method_text:[h has     * rotation sensing optimization. So this is listed in cts-known-failures.xml.     */   ])', 2), ('([2:/android/provider/cts/contacts/ContactsContractIntentsTest.java]:[CTS]:[2]:method_text:[ntent.setData(ContactsContract.Contacts.CONTENT_URI);        assertCanBeHandled(intent);    }   ])', 2), ('([1:/android/server/wm/DisplaySizeTest.java]:[CTS]:[1]:method_text:[IDTH_ACTIVITY.getPackageName());        stopTestPackage(TEST_ACTIVITY.getPackageName());    }   ])', 2), ('([1:/android/server/wm/DisplaySizeTest.java]:[CTS]:[1]:method_text:[private void resetDensity() {            executeShellCommand(""wm density reset"");        }    }}])', 2), ('([6:/android/server/wm/WindowInsetsControllerTests.java]:[CTS]:[6]:method_text:[EM_DIALOGS"";    @Rule    public final ErrorCollector mErrorCollector = new ErrorCollector();   ])', 2), ('([2:/android/signature/cts/tests/LineSpliteratorTestBase.java]:[CTS]:[2]:method_text:[erFn.apply(i)));        }        assertFalse(spliterator.tryAdvance(a -> { fail(); }));    }   ])', 2), ('([1:/android/server/wm/PinnedStackTests.java]:[CTS]:[1]:method_text:[*/);    }    // This test is black-listed in cts-known-failures.xml (b/35314835).    @Ignore   ])', 2), ('([1:/android/view/cts/SoundEffectConstantsTest.java]:[CTS]:[1]:method_text:[unner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class SoundEffectConstantsTest {   ])', 1), ('([16:/android/autofillservice/cts/LoginWithStringsActivityTest.java]:[CTS]:[16]:method_text:[rActivityLaunched() {                mActivity = getActivity();            }        };    }   ])', 1), ('([4:/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java]:[CTS]:[4]:method_text:[FLAG_REQUEST_ACCESSIBILITY_BUTTON)                == FLAG_REQUEST_ACCESSIBILITY_BUTTON);    }   ])', 1), ('([1:/android/telephony/cts/AvailableNetworkInfoTest.java]:[CTS]:[1]:method_text:[te static final String OPERATOR_MCCMNC_2 = ""246135"";    private static final int SUB_ID = 123;   ])', 1), ('([1:/android/net/cts/network/permission/UpdateStatsPermissionTest.java]:[CTS]:[1]:method_text:[ission:     *   {@link android.Manifest.permission#UPDATE_DEVICE_STATS}.     */    @SmallTest   ])', 1), ('([1:/android/app/cts/NotificationCarExtenderTest.java]:[CTS]:[1]:method_text:[d void setUp() throws Exception {        super.setUp();        mContext = getContext();    }   ])', 1), ('([10:/com/android/cts/net/hostside/NetworkCallbackTest.java]:[CTS]:[10]:method_text:[e(false);        unregisterNetworkCallback();    }    @RequiredProperties({DATA_SAVER_MODE})   ])', 1), ('([1:/android/security/cts/VisualizerEffectTest.java]:[CTS]:[1]:method_text:[etUp();    }    //Testing security bug: 30229821    @SecurityTest(minPatchLevel = ""2017-03"")   ])', 1), ('([1:/android/security/cts/VisualizerEffectTest.java]:[CTS]:[1]:method_text:[ if (visualizerIndex == -1) {            Log.w(TAG,""No visualizer found to test"");        }    }])', 1), ('([1:/android/widget/cts/BaseAdapterTest.java]:[CTS]:[1]:method_text:[{@link BaseAdapter}. */@SmallTest@RunWith(AndroidJUnit4.class)public class BaseAdapterTest {   ])', 1), ('([1:/android/uwb/cts/AngleOfArrivalMeasurementTest.java]:[CTS]:[1]:method_text:[ent}. */@SmallTest@RunWith(AndroidJUnit4.class)public class AngleOfArrivalMeasurementTest {   ])', 1), ('([3:/android/uwb/cts/AngleOfArrivalMeasurementTest.java]:[CTS]:[3]:method_text:[urement.Builder.build() to succeed"");            }        }        return measurement;    }   ])', 1), ('([4:/android/hardware/cts/helpers/SensorCtsHelperTest.java]:[CTS]:[4]:method_text:[ TestCase {    /**     * Test {@link SensorCtsHelper#getFrequency(Number, TimeUnit)}.     */   ])', 1), ('([11:/android/hardware/cts/helpers/SensorCtsHelperTest.java]:[CTS]:[11]:method_text:[ 0.001);    }    /**     * Test {@link SensorCtsHelper#getPeriod(Number, TimeUnit)}.     */   ])', 1), ('([10:/android/hardware/cts/helpers/SensorCtsHelperTest.java]:[CTS]:[10]:method_text:[        assertEquals(1, SensorCtsHelper.getPeriod(1000000000, TimeUnit.NANOSECONDS), 0.001);    }}])', 1), ('([1:/android/car/cts/ExceptionsTest.java]:[CTS]:[1]:method_text:[al String MESSAGE = ""Oops!"";    private static final Exception CAUSE = new RuntimeException();   ])', 1), ('([3:/android/provider/cts/media/MediaStoreTest.java]:[CTS]:[3]:method_text:[dentity();    }    /**     * Sure this is pointless, but czars demand test coverage.     */   ])', 1), ('([2:/com/android/tests/loadingprogress/host/IncrementalLoadingProgressTest.java]:[CTS]:[2]:method_text:[       assertFalse(getDevice().isPackageInstalled(TEST_APP_PACKAGE_NAME));    }    @LargeTest   ])', 1), ('([1:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[CTS]:[1]:method_text:[inal String KEY_NAME = ""nice_key"";    private static final String KEYSTORE = ""AndroidKeyStore"";   ])', 1), ('([1:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[CBC]:[1]:method_text:[    assertEquals(KeyProperties.AUTH_DEVICE_CREDENTIAL, info.getUserAuthenticationType());    }   ])', 1), ('([1:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[AES]:[1]:method_text:[    assertEquals(KeyProperties.AUTH_DEVICE_CREDENTIAL, info.getUserAuthenticationType());    }   ])', 1), ('([15:/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java]:[CTS]:[15]:method_text:[ule getMainTestRule() {        return InlineUiBot.annotateRule(super.getMainTestRule());    }   ])', 1), ('([4:/android/view/cts/SystemGestureExclusionRectsTest.java]:[CTS]:[4]:method_text:[vity> mActivityRule =            new ActivityTestRule<>(SystemGestureExclusionActivity.class);   ])', 1), ('([6:/android/view/cts/SystemGestureExclusionRectsTest.java]:[CTS]:[6]:method_text:[  * Animate a view from X=0 to X=30px and verify that the static exclusion rect follows.     */   ])', 1), ('([7:/android/view/cts/SystemGestureExclusionRectsTest.java]:[CTS]:[7]:method_text:[ernals correctly handle cycling between exclusion rects present     * and rects absent.     */   ])', 1), (""([6:/android/view/cts/SystemGestureExclusionRectsTest.java]:[CTS]:[6]:method_text:[        }    }    /**     * Test round-trip of setting the window's exclusion rects     */   ])"", 1), ('([9:/android/view/cts/SystemGestureExclusionRectsTest.java]:[CTS]:[9]:method_text:[cts());        });        assertTrue(""set rects timeout"", setter[0].await(3, SECONDS));    }   ])', 1), ('([28:/android/view/cts/SystemGestureExclusionRectsTest.java]:[CTS]:[28]:method_text:[  public void onAnimationEnd(Animator animation) {            mLatch.countDown();        }    }}])', 1), ('([1:/android/server/wm/KeyguardTransitionTests.java]:[CTS]:[1]:method_text:[    assumeTrue(supportsInsecureLock());        assumeFalse(isUiModeLockedToVrHeadset());    }   ])', 1), ('([1:/android/view/cts/OrientationEventListenerTest.java]:[CTS]:[1]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([7:/android/net/vcn/cts/VcnManagerTest.java]:[CTS]:[7]:method_text:[           INVALID_SUBSCRIPTION_ID,                dataSubId);        return dataSubId;    }   ])', 1), ('([1:/android/net/vcn/cts/VcnManagerTest.java]:[CBC]:[1]:method_text:[gId */,                true /* expectedUseEncap */,                ikeDeleteChildResp);    }   ])', 1), ('([4:/android/autofillservice/cts/ValidatorTest.java]:[CTS]:[4]:method_text:[n = ""Service-specific test"")public class ValidatorTest extends AbstractLoginActivityTestCase {   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[CTS]:[1]:method_text:[lues reported in fullscreen should be larger than those reported in     * docked state.     */   ])', 1), ('([1:/android/os/cts/BuildVersionTest.java]:[CTS]:[1]:method_text:[S_FILE = ""platform_releases.txt"";    @SuppressWarnings(""deprecation"")    @RestrictedBuildTest   ])', 1), ('([1:/android/security/cts/Poc18_07.java]:[CTS]:[1]:method_text:[ssRunner.class)public class Poc18_07 extends SecurityTestCase {   /**    * b/76221123    */   ])', 1), ('([5:/android/security/cts/Poc18_07.java]:[CTS]:[5]:method_text:[ator: Add SIM account.*ContactsProvider: Accounts changed"",                logcat);      }    }}])', 1), ('([1:/android/text/util/cts/Rfc822TokenizerTest.java]:[CTS]:[1]:method_text:[fc822Tokenizer}. */@SmallTest@RunWith(AndroidJUnit4.class)public class Rfc822TokenizerTest {   ])', 1), ('([5:/android/telephonyprovider/cts/MmsTest.java]:[CTS]:[5]:method_text:[nup();        mContentResolver = getInstrumentation().getContext().getContentResolver();    }   ])', 1), ('([1:/android/telephonyprovider/cts/MmsTest.java]:[CTS]:[1]:method_text:[ephony.Mms.MESSAGE_TYPE, messageType);        return mContentResolver.insert(uri, values);    }}])', 1), ('([3:/android/telephony/cts/PhoneNumberUtilsTest.java]:[CTS]:[3]:method_text:[ tearDown() throws Exception {        PhoneNumberUtils.setMinMatchForTest(mOldMinMatch);    }   ])', 1), ('([2:/android/telephony/cts/PhoneNumberUtilsTest.java]:[CTS]:[2]:method_text:[rd != null) {                cr.delete(phoneRecord, null, null);            }        }    }   ])', 1), ('([8:/com/android/cts/verifier/sensors/sixdof/Utils/Path/ReferencePath.java]:[CTS]:[8]:method_text:[* @throws WaypointStartPointException  if the location is not close enough to the start.     */   ])', 1), ('([5:/android/provider/cts/contacts/ContactsContractIntentsTest.java]:[CTS]:[5]:method_text:[ResolveInfo found for "" + intent.toString(),                resolveInfoList.size() > 0);    }   ])', 1), ('([2:/android/provider/cts/contacts/ContactsContractIntentsTest.java]:[CTS]:[2]:method_text:[nt.setType(ContactsContract.Contacts.CONTENT_ITEM_TYPE);        assertCanBeHandled(intent);    }}])', 1), ('([6:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[6]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([2:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[2]:method_text:[ity(icon);        assertTrue(icon.loadDrawable(mActivity) instanceof AdaptiveIconDrawable);    }}])', 1), ('([1:/android/location/cts/fine/CriteriaTest.java]:[CTS]:[1]:method_text:[st;import org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class CriteriaTest {   ])', 1), ('([2:/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java]:[CTS]:[2]:method_text:[;@SmallTestpublic class ShortcutManagerPreUpgradeTest extends ShortcutManagerDeviceTestBase {   ])', 1), ('([1:/android/telephony/cts/TelephonyRegistryManagerTest.java]:[CTS]:[1]:method_text:[}    /**     * expect security exception as there is no carrier privilege permission.     */   ])', 1), ('([7:/android/uirendering/cts/testclasses/SweepTests.java]:[CTS]:[7]:method_text:[LT_MSSIM_COMPARER = new BitmapComparer[] {            new MSSIMComparer(HIGH_THRESHOLD)    };   ])', 1), ('([1:/android/view/cts/ViewOutlineProviderTest.java]:[CTS]:[1]:method_text:[Top(top);        view.setRight(right);        view.setBottom(bottom);    }    @UiThreadTest   ])', 1), ('([1:/com/android/cts/useslibrary/UsesLibraryTest.java]:[CTS]:[1]:method_text:[ibrary oat files (if WITH_DEXPREOPT=false     * we do not preopt the shared libraries).     */   ])', 1), ('([4:/com/android/cts/useslibrary/UsesLibraryTest.java]:[CTS]:[4]:method_text:[ethod.setAccessible(true);        return (boolean) isBackedByOatFileMethod.invoke(dexFile);    }}])', 1), ('([2:/android/vr/cts/VrSetFIFOThreadTest.java]:[CTS]:[2]:method_text:[tra(OpenGLESActivity.EXTRA_MUTABLE, mutableAttribute);        setActivityIntent(intent);    }   ])', 1), ('([1:/android/telephony/cts/SmsCbLocationTest.java]:[CTS]:[1]:method_text:[ = ""TEST_PLMN 2"";    private static final int LAC = -1;    private static final int CID = -1;   ])', 1), ('([2:/android/app/cts/WallpaperManagerTest.java]:[CTS]:[2]:method_text:[eceiver != null) {            mContext.unregisterReceiver(mBroadcastReceiver);        }    }   ])', 1), ('([5:/android/suspendapps/cts/DialogTests.java]:[CTS]:[5]:method_text:[wakeUp();        }        SystemUtil.runShellCommandForNoOutput(""wm dismiss-keyguard"");    }   ])', 1), ('([10:/com/android/cts/externalstorageapp/GiftTest.java]:[CTS]:[10]:method_text:[e;import java.io.File;import java.util.List;public class GiftTest extends AndroidTestCase {   ])', 1), ('([1:/android/jni/cts/JniCTest.java]:[CTS]:[1]:method_text:[ Calls the native test, and {@code fail()}s appropriately if     * there was a problem.     */   ])', 1), ('([1:/android/os/cts/ConditionVariableTest.java]:[CTS]:[1]:method_text:[ Exception {        super.setUp();        mConditionVariable = new ConditionVariable();    }   ])', 1), ('([1:/com/android/cts/deviceowner/BluetoothRestrictionTest.java]:[CTS]:[1]:method_text:[Manager.clearUserRestriction(getWho(), UserManager.DISALLOW_BLUETOOTH);        enable();    }   ])', 1), ('([1:/android/externalservice/cts/ExternalServiceTest.java]:[CTS]:[1]:method_text:[  }    /** Tests that an isolatedProcess service cannot be bound to by an external package. */   ])', 1), ('([1:/android/bluetooth/cts/AdvertiseDataTest.java]:[CTS]:[1]:method_text:[oid setUp() {        mAdvertiseDataBuilder = new AdvertiseData.Builder();    }    @SmallTest   ])', 1), ('([1:/android/net/ipsec/ike/cts/SaProposalTest.java]:[CTS]:[1]:method_text:[(                COMBINED_MODE_CIPHERS, Collections.EMPTY_LIST, Collections.EMPTY_LIST);    }   ])', 1), ('([8:/android/net/ipsec/ike/cts/SaProposalTest.java]:[CBC]:[8]:method_text:[(                COMBINED_MODE_CIPHERS, Collections.EMPTY_LIST, Collections.EMPTY_LIST);    }   ])', 1), ('([23:/android/net/ipsec/ike/cts/SaProposalTest.java]:[AES]:[23]:method_text:[(                COMBINED_MODE_CIPHERS, Collections.EMPTY_LIST, Collections.EMPTY_LIST);    }   ])', 1), ('([2:/android/contentcaptureservice/cts/ClipboardAccessTest.java]:[CTS]:[2]:method_text:[   @After    public void cleanYourself() {        mClipboardManager.clearPrimaryClip();    }   ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/MeanVerificationTest.java]:[CTS]:[4]:method_text:[    /**     * Test {@link MeanVerification#verify(TestSensorEnvironment, SensorStats)}.     */   ])', 1), ('([1:/android/content/pm/cts/FeatureTest.java]:[CTS]:[1]:method_text:[;    }    /**     * Test whether device supports managed profiles as required by CDD     */   ])', 1), ('([6:/android/hardware/input/cts/tests/SonyDualshock4BluetoothTest.java]:[CTS]:[6]:method_text:[getKernelVersion();        return compareMajorMinorVersion(kVersionString, ""3.18"") >= 0;    }   ])', 1), ('([1:/android/util/cts/SparseIntArrayTest.java]:[CTS]:[1]:method_text:[nal int   NON_EXISTED_KEY = 123;    private static final int   VALUE_FOR_NON_EXISTED_KEY = -1;   ])', 1), ('([16:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[16]:method_text:[          sInstrumentation, sUiAutomation, mActivityRule);    }    @MediumTest    @Presubmit   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[1]:method_text:[ after update"",                editTextNode.isHeading());    }    @MediumTest    @Presubmit   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[1]:method_text:[g(R.string.button_tooltip),                buttonNode.getTooltipText());    }    @MediumTest   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[1]:method_text:[List())));        assertTrue(hasTooltipShowing(R.id.buttonWithTooltip));    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[2]:method_text:[resh();        assertThat(buttonNode.getTraversalBefore(), nullValue());    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[2]:method_text:[refresh();        assertThat(editNode.getTraversalAfter(), nullValue());    }    @MediumTest   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[1]:method_text:[r one        assertThat(labelForNode.getLabeledBy(), equalTo(editNode));    }    @MediumTest   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[1]:method_text:[argThat(event -> event.getActionMasked() == MotionEvent.ACTION_OUTSIDE));    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[2]:method_text:["",                node.getViewIdResourceName());        node.recycle();    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[2]:method_text:[ {            enableTouchExploration(sInstrumentation, false);        }    }    @MediumTest   ])', 1), ('([3:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[3]:method_text:[tic int getCurrentUser() {        return android.os.Process.myUserHandle().getIdentifier();    }}])', 1), ('([4:/android/widget/cts/TabHostTest.java]:[CTS]:[4]:method_text:[umentationRegistry.getInstrumentation();        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([2:/android/widget/cts/TabHostTest.java]:[CTS]:[2]:method_text:[ no exception occurs when uses TabSpec.setContent(android.content.Intent) after setup().     */   ])', 1), ('([2:/android/widget/cts/TabHostTest.java]:[CTS]:[2]:method_text:[        mInstrumentation.waitForIdleSync();        activity.finish();    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TabHostTest.java]:[CTS]:[1]:method_text:[b(1);        assertTrue(tabHost.getCurrentView() instanceof ListView);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TabHostTest.java]:[CTS]:[1]:method_text:[ByTag(""unknown tag"");        assertEquals(0, tabHost.getCurrentTab());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TabHostTest.java]:[CTS]:[2]:method_text:[hen the selected state of any of the items     * in this list changes     */    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TabHostTest.java]:[CTS]:[1]:method_text:[CurrentTab(0);        verifyNoMoreInteractions(mockTabChangeListener);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TabHostTest.java]:[CTS]:[1]:method_text:[    tabHost.setCurrentTab(1);        assertEquals(TAG_TAB2, tabHost.getCurrentTabTag());    }   ])', 1), ('([1:/android/security/cts/Poc18_04.java]:[CTS]:[1]:method_text:[    * Does not require root but must be a hostside test to avoid     * a race condition     */   ])', 1), ('([2:/android/content/res/cts/PluralResourcesTest.java]:[CTS]:[2]:method_text:[Resources(mResources.getAssets(), mResources.getDisplayMetrics(), config);    }    @SmallTest   ])', 1), ('([3:/android/media/cts/AudioTrackLatencyTest.java]:[CTS]:[3]:method_text:[e(String testName, String message) {        Log.e(TAG, ""["" + testName + ""] "" + message);    }   ])', 1), ('([4:/android/media/cts/MediaBrowserServiceTest.java]:[CTS]:[4]:method_text:[ll) {            mMediaBrowser.disconnect();            mMediaBrowser = null;        }    }   ])', 1), ('([4:/com/android/cts/devicepolicy/LauncherAppsProfileTest.java]:[CTS]:[4]:method_text:[allPackage(LAUNCHER_TESTS_HAS_LAUNCHER_ACTIVITY_APK);        }        super.tearDown();    }   ])', 1), ('([1:/android/server/wm/PinnedStackTests.java]:[CTS]:[1]:method_text:[void setUp() throws Exception {        super.setUp();        assumeTrue(supportsPip());    }   ])', 1), ('([1:/android/permission/cts/CameraPermissionTest.java]:[CTS]:[1]:method_text:[ Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */    @MediumTest   ])', 1), ('([4:/android/hardware/devicestate/cts/DeviceStateManagerTests.java]:[CTS]:[4]:method_text:[ are in the range     * [{@link #MINIMUM_DEVICE_STATE}, {@link #MAXIMUM_DEVICE_STATE}].     */   ])', 1), ('([2:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[CTS]:[2]:method_text:[package manager is the same as     * the public.libraries*.txt files in the partitions.     */   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[CTS]:[1]:method_text:[on-existing lib    ///////////////////////////////////////////////////////////////////////////   ])', 1), ('([1:/android/renderscript/cts/SamplerTest.java]:[CTS]:[1]:method_text:[y[i] == val) {                return true;            }        }        return false;    }   ])', 1), ('([1:/android/security/identity/cts/DynamicAuthTest.java]:[CTS]:[1]:method_text:[ption;public class DynamicAuthTest {    private static final String TAG = ""DynamicAuthTest"";   ])', 1), ('([10:/android/security/identity/cts/DynamicAuthTest.java]:[AES]:[10]:method_text:[re done. Clean up after ourselves.        store.deleteCredentialByName(credentialName);    }   ])', 1), ('([7:/android/security/identity/cts/DynamicAuthTest.java]:[AES]:[7]:method_text:[taticAuthenticationData() throwing UnknownAuthenticationKeyException    // on an unknown auth key}])', 1), ('([1:/android/server/wm/UnsupportedErrorDialogTests.java]:[CTS]:[1]:method_text:[}    /** Make sure the developer options apply correctly leading to the dialog being shown. */   ])', 1), ('([10:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[CTS]:[10]:method_text:[Bot.saveForAutofill(true, SAVE_DATA_TYPE_GENERIC);        sReplier.getNextSaveRequest();    }   ])', 1), (""([3:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[CTS]:[3]:method_text:[ there's one user on the device or all     * secondary users / profiles are affiliated.     */   ])"", 1), ('([7:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[CTS]:[7]:method_text:[s addr) {        return ((addr instanceof Inet4Address) || (addr instanceof Inet6Address));    }}])', 1), ('([12:/com/android/cts/storageapp/StorageTest.java]:[CTS]:[12]:method_text:[se {    private Context getContext() {        return getInstrumentation().getContext();    }   ])', 1), ('([2:/com/android/cts/storageapp/StorageTest.java]:[CTS]:[2]:method_text:[(new UiSelector().text(""OK"")).click();    }    /**     * Measure ourselves manually.     */   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[CTS]:[1]:method_text:[""cts"" probe files in every possible common storage location that     * we can think of.     */   ])', 1), ('([4:/com/android/cts/storageapp/StorageTest.java]:[CTS]:[4]:method_text:[ the ""cts"" probe files created above,     * since our storage should be fully isolated.     */   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[CTS]:[1]:method_text:[tory()) {                    traverse.push(f);                }            }        }    }   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[CTS]:[1]:method_text:[atedLegacy() throws Exception {        assertTrue(new File(""/sdcard/cts_top"").exists());    }   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[CTS]:[1]:method_text:[(String feature) {        return getContext().getPackageManager().hasSystemFeature(feature);    }])', 1), ('([1:/android/os/cts/CountDownTimerTest.java]:[CTS]:[1]:method_text:[       mStartTime = System.currentTimeMillis();        mActivity.countDownTimer.start();    }   ])', 1), ('([6:/android/uirendering/cts/testclasses/ViewAnimationUtilsTests.java]:[CTS]:[6]:method_text:[st@RunWith(AndroidJUnit4.class)public class ViewAnimationUtilsTests extends ActivityTestBase {   ])', 1), ('([2:/android/security/cts/DecodeTest.java]:[CTS]:[2]:method_text:[. Instead, it should fail to     * decode.     */    @SecurityTest(minPatchLevel = ""2017-07"")   ])', 1), ('([7:/android/accounts/cts/AbstractAuthenticatorTests.java]:[CTS]:[7]:method_text:[rypted session     * bundle should always be returned without password or status token.     */   ])', 1), ('([4:/android/hardware/camera2/cts/StaticMetadataTest.java]:[CTS]:[4]:method_text:[  /**     * Test the available capability for different hardware support level devices.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[CTS]:[1]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([10:/android/security/cts/SELinuxHostTest.java]:[CTS]:[10]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([3:/android/security/cts/SELinuxHostTest.java]:[CTS]:[3]:method_text:[rohibition of socket use with the     * only exceptions for the automotive device type.     */   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CTS]:[1]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/location/cts/fine/GnssMeasurementTest.java]:[CTS]:[1]:method_text:[Unit4.class)public class GnssMeasurementTest {    private static final double DELTA = 0.001;   ])', 1), ('([1:/android/transition/cts/TransitionManagerTest.java]:[CTS]:[1]:method_text:[st@RunWith(AndroidJUnit4.class)public class TransitionManagerTest extends BaseTransitionTest {   ])', 1), ('([1:/android/view/inspector/cts/IntFlagMappingTest.java]:[CTS]:[1]:method_text:[agMapping}. */@SmallTest@RunWith(AndroidJUnit4.class)public final class IntFlagMappingTest {   ])', 1), ('([1:/android/graphics/cts/FontVariationAxisTest.java]:[CTS]:[1]:method_text:[inal String[] INVALID_TAGS = {        """", ""abcde"", ""\\n\\n\\n\\n"", ""\\u0000bcd"", ""\\u3042bcd""    };   ])', 1), ('([5:/android/signature/cts/api/SignatureMultiLibsTest.java]:[CTS]:[5]:method_text:[  * <p/>     * Will check the entire API, and then report the complete list of failures     */   ])', 1), ('([1:/android/os/cts/HidlMemoryTest.java]:[CTS]:[1]:method_text:[ativeHandle;import org.junit.Test;import java.io.IOException;public class HidlMemoryTest {   ])', 1), ('([13:/android/autofillservice/cts/commontests/TimePickerTestCase.java]:[CTS]:[13]:method_text:[ty>        extends AutoFillServiceTestCase.AutoActivityLaunch<A> {    protected A mActivity;   ])', 1), ('([5:/android/host/systemui/TvMicrophoneCaptureIndicatorTest.java]:[CTS]:[5]:method_text:[E_SECOND;    private static final long THREE_HUNDRED_MILLISECONDS = (long) (0.3 * ONE_SECOND);   ])', 1), ('([1:/android/host/systemui/TvMicrophoneCaptureIndicatorTest.java]:[CTS]:[1]:method_text:[              collectWindowStates(window.getWindowContainer(), out);            }        }    }}])', 1), ('([5:/android/uirendering/cts/testclasses/ShapeTests.java]:[CTS]:[5]:method_text:[h;@MediumTest@RunWith(AndroidJUnit4.class)public class ShapeTests extends ActivityTestBase {   ])', 1), ('([1:/android/database/sqlite/cts/SQLiteWalTest.java]:[CTS]:[1]:method_text:[AL file size is bigger than the threshold, and make sure     * the file gets truncated.     */   ])', 1), ('([2:/android/hardware/input/cts/tests/GameviceGv186Test.java]:[CTS]:[2]:method_text:[  expectedEvent.getAxisValue(axis), actualEvent.getAxisValue(axis), TOLERANCE);        }    }   ])', 1), (""([2:/com/android/cts/readexternalstorageapp/ReadMultiViewTest.java]:[CTS]:[2]:method_text:[ViewTest extends AndroidTestCase {    /**     * Create a file in PACKAGE_READ's cache.     */   ])"", 1), ('([1:/android/bluetooth/cts/BasicAdapterTest.java]:[CTS]:[1]:method_text:[eChanged = mAdapterNameChangedlock.newCondition();        mIsAdapterNameChanged = false;    }   ])', 1), ('([1:/android/opengl/cts/AttachShaderTest.java]:[CTS]:[1]:method_text:[  * <pre>     * shader count : 2     * error        : GLES20.GL_NO_ERROR     * </pre>     */   ])', 1), ('([2:/android/widget/cts/TableLayout_LayoutParamsTest.java]:[CTS]:[2]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([1:/android/net/wifi/cts/WifiFrameworkInitializerTest.java]:[CTS]:[1]:method_text:[ first initialized. Calling this API at     * any other time should throw an exception.     */   ])', 1), ('([1:/android/sample/cts/SampleDeviceTest.java]:[CTS]:[1]:method_text:[preferences and asserts they can no longer be retrieved.     *     * @throws Exception     */   ])', 1), ('([7:/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java]:[CTS]:[7]:method_text:[        runCommandForNoOutput(getInstrumentation(), ""am force-stop "" + TARGET_PACKAGE);    }   ])', 1), ('([1:/android/jobscheduler/cts/BatteryConstraintTest.java]:[CTS]:[1]:method_text:[ that requires the device is charging, when the battery reports it is     * plugged in.     */   ])', 1), ('([1:/android/app/cts/Instrumentation_ActivityResultTest.java]:[CTS]:[1]:method_text:[est.AndroidTestCase;public class Instrumentation_ActivityResultTest extends AndroidTestCase {   ])', 1), ('([1:/android/provider/cts/settings/SettingsTest.java]:[CTS]:[1]:method_text:[ommand(                ""appops set "" + packageName + "" android:write_settings default"");    }   ])', 1), ('([1:/android/provider/cts/settings/SettingsTest.java]:[CTS]:[1]:method_text:[   private Context getContext() {        return InstrumentationRegistry.getTargetContext();    }}])', 1), ('([1:/android/renderscript/cts/LaunchClip.java]:[CTS]:[1]:method_text:[iasX(ox);        mScript.set_biasY(oy);        mScript.set_biasZ(oz);        return a;    }   ])', 1), ('([4:/android/widget/cts/AdapterViewTest.java]:[CTS]:[4]:method_text:[ mActivity = mActivityRule.getActivity();        mAdapterView = new ListView(mActivity);    }   ])', 1), ('([1:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[CTS]:[1]:method_text:[umentCaptor;@SmallTest@RunWith(AndroidJUnit4.class)public class InputConnectionWrapperTest {   ])', 1), ('([1:/android/telephony/euicc/cts/EuiccInfoTest.java]:[CTS]:[1]:method_text:[   public void setUp() throws Exception {        mEuiccInfo = new EuiccInfo(OS_VERSION);    }   ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalInstallTest.java]:[CTS]:[1]:method_text:[p(TEST_APP_PACKAGE_NAME);        assertFalse(isPackageInstalled(TEST_APP_PACKAGE_NAME));    }   ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalInstallTest.java]:[CTS]:[1]:method_text:[lWithAdbInstaller(newApkName));        verifyPackageNotInstalled(TEST_APP_PACKAGE_NAME);    }   ])', 1), ('([2:/android/incrementalinstall/cts/IncrementalInstallTest.java]:[CTS]:[2]:method_text:[Installer(TEST_APP_BASE_APK_NAME).contains(                ""Unknown option --incremental"");    }}])', 1), ('([27:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[CTS]:[27]:method_text:[onNull String marker) {        return launchTestActivity(marker, getTestMarker()).first;    }   ])', 1), ('([1:/android/mediav2/cts/CodecDecoderExtTest.java]:[CTS]:[1]:method_text:[ }    /**     * Test decodes and compares decoded output of two files.     */    @LargeTest   ])', 1), ('([2:/com/android/cts/releaseparser/FileParserTest.java]:[CTS]:[2]:method_text:[    /**     * Test {@link VdexParser} with an Vdex file     *     * @throws Exception     */   ])', 1), ('([1:/android/autofillservice/cts/DatasetTest.java]:[CTS]:[1]:method_text:[, /* pinned= */ false);    private final RemoteViews mPresentation = mock(RemoteViews.class);   ])', 1), ('([1:/android/security/identity/cts/IdentityApiTest.java]:[CTS]:[1]:method_text:[quals;public class IdentityApiTest {    private static final String TAG = ""IdentityApiTest"";   ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[CTS]:[1]:method_text:[ces reported memory to ensure it meets the minimum values described     * in CDD 7.6.1.     */   ])', 1), ('([1:/android/security/net/config/cts/DomainConfigTest.java]:[CTS]:[1]:method_text:[te;import javax.net.ssl.X509TrustManager;public class DomainConfigTest extends BaseTestCase {   ])', 1), ('([1:/android/telephonyprovider/device/cts/TelephonyProviderTest.java]:[CTS]:[1]:method_text:[the behavior of this    // test is now reversed and we expect a SecurityException to be thrown.   ])', 1), ('([1:/android/view/inputmethod/cts/ExtractedTextRequestTest.java]:[CTS]:[1]:method_text:[link ExtractedTextRequest} can be serialized and deserialized via     * {@link Parcel}.     */   ])', 1), ('([1:/android/view/cts/InflateExceptionTest.java]:[CTS]:[1]:method_text:[it.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class InflateExceptionTest {   ])', 1), ('([5:/android/server/wm/KeyguardLockedTests.java]:[CTS]:[5]:method_text:[tUp() throws Exception {        super.setUp();        assumeTrue(supportsSecureLock());    }   ])', 1), ('([2:/android/server/wm/KeyguardLockedTests.java]:[CTS]:[2]:method_text:[_PINNED)                .setActivityType(ACTIVITY_TYPE_STANDARD)                .build());    }}])', 1), ('([2:/android/media/cts/AudioPreProcessingTest.java]:[CTS]:[2]:method_text:[tion    //----------------------------------    //Test case 1.1: test NS creation and release   ])', 1), ('([3:/android/controls/cts/CtsControlBuilderTest.java]:[CTS]:[3]:method_text:[ mColorStateList = mContext.getResources().getColorStateList(R.color.custom_mower, null);    }   ])', 1), ('([1:/android/server/wm/DialogFrameTests.java]:[CTS]:[1]:method_text:[ Height as MATCH_PARENT we should fill    // the same content frame as the main activity window   ])', 1), ('([6:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[CTS]:[6]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([1:/android/server/wm/FreeformWindowingModeTests.java]:[CTS]:[1]:method_text:[FreeformActivity will automatically launch the TestActivity    // with bounds (0, 0, 900, 900)   ])', 1), ('([1:/android/telephony/ims/cts/ImsSsInfoTest.java]:[CTS]:[1]:method_text:[t;import org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class ImsSsInfoTest {   ])', 1), ('([1:/android/content/pm/cts/PermissionInfoTest.java]:[CTS]:[1]:method_text:[e internet, so this permission is not required to send data to ""            + ""the internet."";   ])', 1), ('([1:/android/security/cts/Poc16_11.java]:[CTS]:[1]:method_text:[nner.class)public class Poc16_11 extends SecurityTestCase {    /**     *  b/29149404     */   ])', 1), ('([1:/android/view/cts/SurfaceHolder_BadSurfaceTypeExceptionTest.java]:[CTS]:[1]:method_text:[SmallTest@RunWith(AndroidJUnit4.class)public class SurfaceHolder_BadSurfaceTypeExceptionTest {   ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/OffsetVerificationTest.java]:[CTS]:[4]:method_text:[    *  v[3] : value 1 offset     *  v[4] : value 2 offset     *  v[5] : value 3 offset     */   ])', 1), ('([1:/android/permission/cts/AppIdleStatePermissionTest.java]:[CTS]:[1]:method_text:[permission#CHANGE_APP_IDLE_STATE}     * permission is only held by at most one package.     */   ])', 1), ('([5:/com/android/cts/managedprofile/SanityTest.java]:[CTS]:[5]:method_text:[ }    /**     * Verify that we can launch an app that installed in work profile only.     */   ])', 1), ('([1:/android/os/cts/RequiredComponentsTest.java]:[CTS]:[1]:method_text:[ic final String PACKAGE_MIME_TYPE = ""application/vnd.android.package-archive"";    @AppModeFull   ])', 1), ('([2:/android/backup/cts/AgentBindingTest.java]:[CTS]:[2]:method_text:[tion {        super.setUp();        mContext = getInstrumentation().getTargetContext();    }   ])', 1), ('([1:/android/backup/cts/AgentBindingTest.java]:[CTS]:[1]:method_text:[   expectThrows(Exception.class, () -> unbindBackupAgent(mContext.getApplicationInfo()));    }   ])', 1), ('([1:/android/backup/cts/AgentBindingTest.java]:[CTS]:[1]:method_text:[(                null, (IBinder) getServiceMethod.invoke(serviceManagerClass, ""activity""));    }}])', 1), ('([2:/android/renderscript/cts/generated/TestNativeAcos.java]:[CTS]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/telecom/cts/PhoneAccountSuggestionTest.java]:[CTS]:[1]:method_text:[android.test.AndroidTestCase;public class PhoneAccountSuggestionTest extends AndroidTestCase {   ])', 1), ('([3:/android/testharness/cts/TestHarnessModeDeviceTest.java]:[CTS]:[3]:method_text:[odeDeviceTest extends BaseHostJUnit4Test {    private static final int ONE_MINUTE = 60 * 1000;   ])', 1), ('([2:/android/testharness/cts/TestHarnessModeDeviceTest.java]:[CTS]:[2]:method_text:[e, but it should have been wiped."", path),                getDevice().doesFileExist(path));    }}])', 1), ('([4:/android/media/cts/DecoderTestXheAac.java]:[CTS]:[4]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.     */   ])', 1), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[CTS]:[1]:method_text:[up() {        mKeyCharacterMap = KeyCharacterMap.load(KeyCharacterMap.VIRTUAL_KEYBOARD);    }   ])', 1), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[CTS]:[1]:method_text:[ELLOW));        assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));    }   ])', 1), ('([3:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[CTS]:[3]:method_text:[dLibrary(""ctscamera2_jni"");        Log.i(""NativeCameraDeviceTest"", ""after loadlibrary"");    }   ])', 1), ('([1:/android/text/style/cts/AlignmentSpan_StandardTest.java]:[CTS]:[1]:method_text:[tandard}. */@SmallTest@RunWith(AndroidJUnit4.class)public class AlignmentSpan_StandardTest {   ])', 1), ('([1:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java]:[CTS]:[1]:method_text:[geManager().hasSystemFeature(                PackageManager.FEATURE_SECURE_LOCK_SCREEN);    }   ])', 1), ('([10:/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java]:[CTS]:[10]:method_text:[ltiScreenDifferentActivitiesTest        extends AutoFillServiceTestCase.ManualActivityLaunch {   ])', 1), ('([1:/android/telecom/cts/DefaultDialerOperationsNoPermissionsTest.java]:[CTS]:[1]:method_text:[Dialer(getInstrumentation(), mPreviousDefaultDialer);        }        super.tearDown();    }   ])', 1), ('([1:/android/accounts/cts/AuthenticatorDescriptionTest.java]:[CTS]:[1]:method_text:[        desc = new AuthenticatorDescription(accountType, packageName, 1, 1, 1, 1, true);    }   ])', 1), ('([1:/android/autofillservice/cts/unittests/CustomDescriptionUnitTest.java]:[CTS]:[1]:method_text:[dator.class);    private final OnClickAction mValidAction = mock(InternalOnClickAction.class);   ])', 1), ('([5:/android/view/cts/View_UsingViewsTest.java]:[CTS]:[5]:method_text:[    mWarningTextView = (TextView) mActivity.findViewById(R.id.warning);    }    @UiThreadTest   ])', 1), ('([6:/android/view/cts/View_UsingViewsTest.java]:[CTS]:[6]:method_text:[;        assertEquals(View.VISIBLE, mWarningTextView.getVisibility());    }    @UiThreadTest   ])', 1), ('([10:/android/autofillservice/cts/AutoFinishSessionTest.java]:[CTS]:[10]:method_text:[    .getAutofillValue().getTextValue().toString()).isEqualTo(view + ""-filled"");        }    }   ])', 1), ('([2:/com/android/cts/escalatepermission/PermissionEscalationTest.java]:[CTS]:[2]:method_text:[org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class PermissionEscalationTest {   ])', 1), ('([1:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[CTS]:[1]:method_text:[)) {            fail(""This test requires that there is a SIM in the device!"");        }    }   ])', 1), ('([1:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[CTS]:[1]:method_text:[r listener to disconnect        assertTrue(mListener == null || !mListener.isConnected);    }   ])', 1), ('([5:/android/alarmmanager/cts/ExactAlarmsTest.java]:[CTS]:[5]:method_text:[mAction,                PendingIntent.FLAG_MUTABLE | PendingIntent.FLAG_UPDATE_CURRENT);    }   ])', 1)]"	""	""	"[('CTS', 211), ('AES', 4), ('CBC', 3)]"	"[('[com.android.cts.authboundkey.AuthBoundKeyAppTest testGenerateAuthBoundKey None]', 2), ('[android.view.cts.SystemGestureExclusionRectsTest isEmpty None]', 2), ('[android.server.wm.DisplaySizeTest testSizeRangesAfterSettingDisplaySize None]', 2), ('[android.accessibilityservice.cts.AccessibilityButtonSdk29Test postTestTearDown None]', 1), ('[com.android.cts.net.hostside.NetworkCallbackTest TestNetworkCallback None]', 1), ('[android.security.cts.VisualizerEffectTest testVisualizer_MalformedConstructor None]', 1), ('[android.uwb.cts.AngleOfArrivalMeasurementTest testBuilder None]', 1), ('[android.hardware.cts.helpers.SensorCtsHelperTest testGetFrequency None]', 1), ('[android.hardware.cts.helpers.SensorCtsHelperTest testGetPeriod None]', 1), ('[android.provider.cts.media.MediaStoreTest dropShellPermissionIdentity None]', 1), ('[android.autofillservice.cts.inline.InlineSimpleSaveActivityTest InlineSimpleSaveActivityTest None]', 1), ('[android.view.cts.SystemGestureExclusionRectsTest emptyList None]', 1), ('[android.server.wm.KeyguardTransitionTests isUiModeLockedToVrHeadset None]', 1), ('[android.net.vcn.cts.VcnManagerTest VcnManagerTest None]', 1), ('[android.net.vcn.cts.VcnManagerTest testVcnMigrationAfterNetworkDies None]', 1), ('[android.server.wm.AppConfigurationTests getDefaultDisplay None]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationRequestConfigChanges None]', 1), ('[android.server.wm.AppConfigurationTests testTaskCloseRestoreFixedOrientation None]', 1), ('[android.security.cts.Poc18_07 testPocCVE_2017_18275 None]', 1), ('[android.telephonyprovider.cts.MmsTest setupTestEnvironment None]', 1), ('[android.telephonyprovider.cts.MmsTest testMmsUpdate_canUpdateReadAndSeenStatus None]', 1), ('[android.telephony.cts.PhoneNumberUtilsTest getMinMatchForTest None]', 1), ('[android.telephony.cts.PhoneNumberUtilsTest testGetMethods None]', 1), ('[android.provider.cts.contacts.ContactsContractIntentsTest testViewContactDir None]', 1), ('[android.provider.cts.contacts.ContactsContractIntentsTest testPickContactDir None]', 1), ('[android.provider.cts.contacts.ContactsContractIntentsTest testGetContentContactDir None]', 1), ('[android.graphics.drawable.cts.IconTest testResourceIcon_getType None]', 1), ('[android.uirendering.cts.testclasses.SweepTests DisplayModifier None]', 1), ('[com.android.cts.useslibrary.UsesLibraryTest testDuplicateLibrary None]', 1), ('[android.vr.cts.VrSetFIFOThreadTest VrSetFIFOThreadTest None]', 1), ('[android.app.cts.WallpaperManagerTest isWallpaperSupported None]', 1), ('[android.suspendapps.cts.DialogTests isScreenOn None]', 1), ('[android.jni.cts.JniCTest isCpuAbiNone None]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4BluetoothTest SonyDualshock4BluetoothTest None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest postTestTearDown None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testViewHeadingReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTooltipTextReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTooltipTextActionsReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTraversalBeforeReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTraversalAfterReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testLabelForReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testA11yActionTriggerMotionEventActionOutside None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTouchDelegateInfoReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTouchDelegateWithEbtBetweenView_ReHoverDelegate_FocusTargetAgain None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTouchDelegateCoverParentWithEbt_HoverChildAndBack_FocusTargetAgain None]', 1), ('[android.widget.cts.TabHostTest testSetup1 None]', 1), ('[android.widget.cts.TabHostTest testSetup2 None]', 1), ('[android.widget.cts.TabHostTest testGetCurrentView None]', 1), ('[android.widget.cts.TabHostTest testSetCurrentTabByTag None]', 1), ('[android.widget.cts.TabHostTest testGetTabContentView None]', 1), ('[android.widget.cts.TabHostTest testSetOnTabChangedListener None]', 1), ('[android.widget.cts.TabHostTest testGetCurrentTabTag None]', 1), ('[android.content.res.cts.PluralResourcesTest getDisplayMetrics None]', 1), ('[android.media.cts.MediaBrowserServiceTest disconnect None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest removeTestUsers None]', 1), ('[android.server.wm.PinnedStackTests testEnterPictureInPictureMode None]', 1), ('[android.server.wm.PinnedStackTests testAlwaysFocusablePipActivity None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase getTestInformation None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testPublicLibrariesAreAllRegistered None]', 1), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthTest None]', 1), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthWithExpirationTest None]', 1), ('[com.android.cts.deviceowner.NetworkLoggingTest testNetworkLoggingAndRetrieval None]', 1), ('[com.android.cts.storageapp.StorageTest testClearSpace None]', 1), ('[com.android.cts.storageapp.StorageTest testBehaviorTombstone None]', 1), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedWrite None]', 1), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedRead None]', 1), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedLegacy None]', 1), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedNonLegacy None]', 1), ('[android.os.cts.CountDownTimerTest currentTimeMillis None]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testHwSupportedLevel None]', 1), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo None]', 1), ('[android.security.cts.SELinuxHostTest testAllDomainsEnforcing None]', 1), ('[android.security.cts.SELinuxHostTest testAospPropertyContexts None]', 1), ('[android.host.systemui.TvMicrophoneCaptureIndicatorTest testIndicatorShownWhileRecordingUsingBothApisSimultaneously None]', 1), ('[android.database.sqlite.cts.SQLiteWalTest exists None]', 1), ('[android.hardware.input.cts.tests.GameviceGv186Test GameviceGv186Test None]', 1), ('[android.opengl.cts.AttachShaderTest AttachShaderTest None]', 1), ('[android.net.wifi.cts.WifiFrameworkInitializerTest registerServiceWrappers None]', 1), ('[android.sample.cts.SampleDeviceTest SampleDeviceTest None]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerThrottlingTest getTestContext None]', 1), ('[android.provider.cts.settings.SettingsTest testCheckWriteSettingsOperation None]', 1), ('[android.incrementalinstall.cts.IncrementalInstallTest testBaseApkInvalidSignatureAdbInstall None]', 1), ('[android.incrementalinstall.cts.IncrementalInstallTest testVersionUpdateAdbInstall None]', 1), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest getTestMarker None]', 1), ('[android.mediav2.cts.CodecDecoderExtTest isHandheld None]', 1), ('[android.hardware.cts.LowRamDeviceTest DisplayMetrics None]', 1), ('[android.view.inputmethod.cts.ExtractedTextRequestTest createForTest None]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap None]', 1), ('[android.backup.cts.AgentBindingTest testUnbindBackupAgent_isNotCallableFromCts None]', 1), ('[android.backup.cts.AgentBindingTest testBindBackupAgent_isNotCallableFromCts None]', 1), ('[android.testharness.cts.TestHarnessModeDeviceTest testHarnessModeRemovesInstalledAppsAndData None]', 1), ('[android.media.cts.DecoderTestXheAac isAlias None]', 1), ('[android.view.cts.KeyCharacterMapTest testIsPrintingKey None]', 1), ('[android.view.cts.View_UsingViewsTest testSetupListeners None]', 1), ('[android.autofillservice.cts.AutoFinishSessionTest isNotNull None]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest beforeAllTests None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest removeFromWhitelists None]', 1)]"
"3.15  . Instant Apps"	"3.15"	"C-1-3"	"3.15/C-1-3"	"03150000.670103"	"""C-1-3] MUST provide a persistent user notification that can be collapsed while an Instant App is running in the foreground. This user notification MUST include that Instant Apps do not require installation and provide a user affordance that directs the user to the application info screen in Settings. For Instant Apps launched via web intents, as defined by using an intent with action set to Intent.ACTION_VIEW and with a scheme of ""http"" or ""https"", an additional user affordance SHOULD allow the user not to launch the Instant App and launch the associated link with the configured web browser, if a browser is available on the device."""	""	""	"Intent.ACTION ACTION_VIEW"	""	""	""	""	""	""	""	""	"[('android.provider.cts.media.MediaStoreIntentsTest', 26), ('com.android.cts.splitapp.SplitAppTest', 7), ('android.os.cts.StrictModeTest', 7), ('android.provider.cts.contacts.ContactsContractIntentsTest', 4), ('android.suspendapps.cts.DialogTests', 4), ('android.app.role.cts.RoleManagerTest', 4), ('android.app.cts.WallpaperManagerTest', 3), ('android.widget.cts.TabHostTest', 3), ('android.suspendapps.cts.DualSuspendTests', 3), ('android.content.pm.cts.shortcut.upgrade.ShortcutManagerPreUpgradeTest', 2), ('android.server.wm.WindowInsetsControllerTests', 2), ('android.view.inputmethod.cts.KeyboardVisibilityControlTest', 2), ('android.os.cts.RequiredComponentsTest', 2), ('com.android.cts.managedprofile.CrossProfileSharingTest', 2), ('android.appsecurity.cts.EphemeralTest', 2), ('com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest', 2), ('android.content.cts.ReadableUriExtraToClipDataTest', 2), ('android.net.wifi.cts.WifiManagerTest', 2), ('com.android.cts.launchertests.LauncherAppsTests', 2), ('android.suspendapps.cts.SuspendPackagesTest', 2), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 2), ('com.android.cts.userspacereboot.basic.BasicUserspaceRebootTest', 2), ('android.view.inputmethod.cts.PackageVisibilityTest', 2), ('android.telephony.cts.PhoneNumberUtilsTest', 1), ('android.content.pm.cts.FeatureTest', 1), ('android.jobscheduler.cts.BatteryConstraintTest', 1), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 1), ('android.providerui.cts.MediaStoreUiTest', 1), ('android.view.inputmethod.cts.BaseInputConnectionTest', 1), ('com.android.cts.verifier.security.UnlockedDeviceRequiredTest', 1), ('android.media.cts.MediaControllerTest', 1), ('android.sharesheet.cts.CtsSharesheetDeviceTest', 1), ('com.android.cts.devicepolicy.QuietModeHostsideTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.harmfulappwarning.testapp.HarmfulAppWarningDeviceTest', 1), ('android.permission.cts.LocationAccessCheckTest', 1), ('com.android.cts.appdataisolation.appa.AppATests', 1), ('android.server.wm.DisplayHashManagerTest', 1), ('com.android.cts.managedprofile.PhoneAccountTest', 1), ('android.bugreport.cts.BugreportManagerTest', 1), ('android.os.cts.InattentiveSleepTests', 1), ('android.sample.cts.SampleHostJUnit4Test', 1)]"	"[('getInstrumentation', 19), ('getContext', 12), ('setUp', 8), ('trim', 6), ('getTargetContext', 5), ('getUiDevice', 5), ('getContentResolver', 4), ('tearDown', 4), ('toLowerCase', 4), ('createDeviceProtectedStorageContext', 3), ('AnimationCallback', 2), ('ErrorCollector', 2), ('elapsedRealtime', 2), ('click', 2), ('getPackageManager', 2), ('getDevice', 2), ('wakeUp', 2), ('getAction', 2), ('getFilesDir', 2), ('UnlockScreenRule', 2), ('hashCode', 1), ('hasBattery', 1), ('getJobState', 1), ('assertJobReady', 1), ('assertJobWaiting', 1), ('assertJobNotReady', 1), ('addCrossProfileIntents', 1), ('IntentFilter', 1), ('clearCrossProfileIntents', 1), ('getSendIntent', 1), ('getPassButton', 1), ('verifyWarningShown', 1), ('getText', 1), ('verifySampleActivityLaunched', 1), ('verifySampleActivityNotLaunched', 1), ('clickLaunchAnyway', 1), ('clickUninstall', 1), ('getSimpleName', 1), ('getUiAutomation', 1), ('getActivity', 1), ('waitForIdleSync', 1), ('getSupportedHashAlgorithms', 1), ('size', 1), ('getMainExecutor', 1), ('setup', 1), ('getWarningDurationConfig', 1), ('wakeUpToHome', 1), ('startKeepScreenOnActivity', 1), ('prepareFile', 1), ('onCreate', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreIntentsTest.java', 13), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreIntentsTest.java', 13), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/SplitAppTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/StrictModeTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContractIntentsTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/role/src/android/app/role/cts/RoleManagerTest.java', 4), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/WallpaperManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TabHostTest.java', 3), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DualSuspendTests.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/upgrade/src/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java', 2), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DialogTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/RequiredComponentsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileSharingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DialogTests.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ReadableUriExtraToClipDataTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/LauncherTests/src/com/android/cts/launchertests/LauncherAppsTests.java', 2), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/SuspendPackagesTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/userspacereboot/testapps/BasicTestApp/src/com/android/cts/userspacereboot/basic/BasicUserspaceRebootTest.java', 2), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/PackageVisibilityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneNumberUtilsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsControllerTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/FeatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/BatteryConstraintTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsControllerTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy20/src/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/EphemeralTest.java', 1), ('/home/gpoor/cts-source/cts/tests/providerui/src/android/providerui/cts/MediaStoreUiTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/BaseInputConnectionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaControllerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/sharesheet/src/android/sharesheet/cts/CtsSharesheetDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/QuietModeHostsideTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/harmfulappwarning/testapp/src/android/harmfulappwarning/testapp/HarmfulAppWarningDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/LocationAccessCheckTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/AppDataIsolationTestApp/AppA/src/com/android/cts/appdataisolation/appa/AppATests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayHashManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/PhoneAccountTest.java', 1), ('/home/gpoor/cts-source/cts/tests/bugreport/src/android/bugreport/cts/BugreportManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/os/src/android/os/cts/InattentiveSleepTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/sample/src/android/sample/cts/SampleHostJUnit4Test.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/EphemeralTest.java', 1)]"	"[('(1,Intent.ACTION,/android/server/wm/WindowInsetsControllerTests.java)', 2), ('(3,Intent.ACTION,/android/suspendapps/cts/DialogTests.java)', 2), ('(12,Intent.ACTION,/android/appsecurity/cts/EphemeralTest.java)', 2), ('(8,Intent.ACTION,/android/provider/cts/media/MediaStoreIntentsTest.java)', 2), ('(5,ACTION_VIEW,/android/provider/cts/media/MediaStoreIntentsTest.java)', 2), ('(2,Intent.ACTION,/android/telephony/cts/PhoneNumberUtilsTest.java)', 1), ('(3,Intent.ACTION,/android/provider/cts/contacts/ContactsContractIntentsTest.java)', 1), ('(1,ACTION_VIEW,/android/provider/cts/contacts/ContactsContractIntentsTest.java)', 1), ('(2,Intent.ACTION,/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java)', 1), ('(2,ACTION_VIEW,/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java)', 1), ('(4,Intent.ACTION,/android/app/cts/WallpaperManagerTest.java)', 1), ('(1,Intent.ACTION,/android/content/pm/cts/FeatureTest.java)', 1), ('(3,Intent.ACTION,/android/widget/cts/TabHostTest.java)', 1), ('(1,ACTION_VIEW,/android/widget/cts/TabHostTest.java)', 1), ('(2,Intent.ACTION,/android/jobscheduler/cts/BatteryConstraintTest.java)', 1), ('(1,Intent.ACTION,/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java)', 1), ('(1,ACTION_VIEW,/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java)', 1), ('(2,Intent.ACTION,/android/os/cts/RequiredComponentsTest.java)', 1), ('(2,Intent.ACTION,/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java)', 1), ('(2,Intent.ACTION,/com/android/cts/managedprofile/CrossProfileSharingTest.java)', 1), ('(1,Intent.ACTION,/android/providerui/cts/MediaStoreUiTest.java)', 1), ('(8,Intent.ACTION,/android/suspendapps/cts/DualSuspendTests.java)', 1), ('(11,Intent.ACTION,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(1,ACTION_VIEW,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(1,Intent.ACTION,/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java)', 1), ('(1,ACTION_VIEW,/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java)', 1), ('(2,Intent.ACTION,/android/content/cts/ReadableUriExtraToClipDataTest.java)', 1), ('(1,Intent.ACTION,/android/view/inputmethod/cts/BaseInputConnectionTest.java)', 1), ('(4,Intent.ACTION,/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java)', 1), ('(1,Intent.ACTION,/android/media/cts/MediaControllerTest.java)', 1), ('(2,Intent.ACTION,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(2,Intent.ACTION,/android/sharesheet/cts/CtsSharesheetDeviceTest.java)', 1), ('(3,Intent.ACTION,/com/android/cts/devicepolicy/QuietModeHostsideTest.java)', 1), ('(2,Intent.ACTION,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(1,Intent.ACTION,/android/harmfulappwarning/testapp/HarmfulAppWarningDeviceTest.java)', 1), ('(1,Intent.ACTION,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(4,Intent.ACTION,/com/android/cts/appdataisolation/appa/AppATests.java)', 1), ('(1,Intent.ACTION,/com/android/cts/launchertests/LauncherAppsTests.java)', 1), ('(1,ACTION_VIEW,/com/android/cts/launchertests/LauncherAppsTests.java)', 1), ('(8,Intent.ACTION,/android/suspendapps/cts/SuspendPackagesTest.java)', 1), ('(1,Intent.ACTION,/android/server/wm/DisplayHashManagerTest.java)', 1), ('(2,Intent.ACTION,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(1,Intent.ACTION,/com/android/cts/managedprofile/PhoneAccountTest.java)', 1), ('(1,Intent.ACTION,/android/bugreport/cts/BugreportManagerTest.java)', 1), ('(1,Intent.ACTION,/android/os/cts/InattentiveSleepTests.java)', 1), ('(4,Intent.ACTION,/android/app/role/cts/RoleManagerTest.java)', 1), ('(10,Intent.ACTION,/com/android/cts/userspacereboot/basic/BasicUserspaceRebootTest.java)', 1), ('(1,Intent.ACTION,/android/view/inputmethod/cts/PackageVisibilityTest.java)', 1), ('(1,ACTION_VIEW,/android/view/inputmethod/cts/PackageVisibilityTest.java)', 1), ('(6,Intent.ACTION,/android/os/cts/StrictModeTest.java)', 1), ('(5,ACTION_VIEW,/android/os/cts/StrictModeTest.java)', 1), ('(1,Intent.ACTION,/android/sample/cts/SampleHostJUnit4Test.java)', 1)]"	"[('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[Intent.ACTION]:[1]:method_text:[taAndType(uri, mime);                assertCanBeHandled(intent);            }        }    }   ])', 4), ('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[ACTION_VIEW]:[1]:method_text:[taAndType(uri, mime);                assertCanBeHandled(intent);            }        }    }   ])', 4), ('([1:/android/provider/cts/contacts/ContactsContractIntentsTest.java]:[Intent.ACTION]:[1]:method_text:[ntent.setData(ContactsContract.Contacts.CONTENT_URI);        assertCanBeHandled(intent);    }   ])', 2), ('([1:/android/server/wm/WindowInsetsControllerTests.java]:[Intent.ACTION]:[1]:method_text:[EM_DIALOGS"";    @Rule    public final ErrorCollector mErrorCollector = new ErrorCollector();   ])', 2), ('([1:/android/suspendapps/cts/DialogTests.java]:[Intent.ACTION]:[1]:method_text:[     assertFalse(""Test package still suspended"", mTestAppInterface.isTestAppSuspended());    }   ])', 2), ('([12:/android/appsecurity/cts/EphemeralTest.java]:[Intent.ACTION]:[12]:method_text:[f (mIsUnsupportedDevice) {            return;        }        uninstallTestPackages();    }   ])', 2), ('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[Intent.ACTION]:[1]:method_text:[CTION_PICK);        intent.setData(mExternalImages);        assertCanBeHandled(intent);    }   ])', 2), ('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[Intent.ACTION]:[1]:method_text:[ACTION_PICK);        intent.setData(mExternalVideo);        assertCanBeHandled(intent);    }   ])', 2), ('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[Intent.ACTION]:[1]:method_text:[ACTION_PICK);        intent.setData(mExternalAudio);        assertCanBeHandled(intent);    }   ])', 2), ('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[Intent.ACTION]:[1]:method_text:[CTION_VIEW);        intent.setData(mExternalImages);        assertCanBeHandled(intent);    }   ])', 2), ('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[Intent.ACTION]:[1]:method_text:[ACTION_VIEW);        intent.setData(mExternalVideo);        assertCanBeHandled(intent);    }   ])', 2), ('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[Intent.ACTION]:[1]:method_text:[tDataAndType(uri, mime);                assertCanBeHandled(intent);            }        }    }}])', 2), ('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[ACTION_VIEW]:[1]:method_text:[CTION_VIEW);        intent.setData(mExternalImages);        assertCanBeHandled(intent);    }   ])', 2), ('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[ACTION_VIEW]:[1]:method_text:[ACTION_VIEW);        intent.setData(mExternalVideo);        assertCanBeHandled(intent);    }   ])', 2), ('([1:/android/provider/cts/media/MediaStoreIntentsTest.java]:[ACTION_VIEW]:[1]:method_text:[tDataAndType(uri, mime);                assertCanBeHandled(intent);            }        }    }}])', 2), ('([2:/android/telephony/cts/PhoneNumberUtilsTest.java]:[Intent.ACTION]:[2]:method_text:[rd != null) {                cr.delete(phoneRecord, null, null);            }        }    }   ])', 1), ('([1:/android/provider/cts/contacts/ContactsContractIntentsTest.java]:[Intent.ACTION]:[1]:method_text:[nt.setType(ContactsContract.Contacts.CONTENT_ITEM_TYPE);        assertCanBeHandled(intent);    }}])', 1), ('([1:/android/provider/cts/contacts/ContactsContractIntentsTest.java]:[ACTION_VIEW]:[1]:method_text:[ntent.setData(ContactsContract.Contacts.CONTENT_URI);        assertCanBeHandled(intent);    }   ])', 1), ('([2:/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java]:[Intent.ACTION]:[2]:method_text:[sertionFailedError expected) {            // okay        }        assertFalse(notThrown);    }}])', 1), ('([2:/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java]:[ACTION_VIEW]:[2]:method_text:[sertionFailedError expected) {            // okay        }        assertFalse(notThrown);    }}])', 1), ('([1:/android/app/cts/WallpaperManagerTest.java]:[Intent.ACTION]:[1]:method_text:[eceiver != null) {            mContext.unregisterReceiver(mBroadcastReceiver);        }    }   ])', 1), ('([2:/android/app/cts/WallpaperManagerTest.java]:[Intent.ACTION]:[2]:method_text:[HANGED not received."");        } finally {            tmpWallpaper.recycle();        }    }   ])', 1), ('([1:/android/app/cts/WallpaperManagerTest.java]:[Intent.ACTION]:[1]:method_text:[nterruptedException | IOException e) {            throw new AssertionError(e);        }    }   ])', 1), ('([2:/android/suspendapps/cts/DialogTests.java]:[Intent.ACTION]:[2]:method_text:[      if (mTestAppInterface != null) {            mTestAppInterface.disconnect();        }    }}])', 1), ('([1:/android/content/pm/cts/FeatureTest.java]:[Intent.ACTION]:[1]:method_text:[htPixels/dm.ydpi,2);        return Math.sqrt(widthInInchesSquared + heightInInchesSquared);    }}])', 1), ('([1:/android/widget/cts/TabHostTest.java]:[Intent.ACTION]:[1]:method_text:[ no exception occurs when uses TabSpec.setContent(android.content.Intent) after setup().     */   ])', 1), ('([2:/android/widget/cts/TabHostTest.java]:[Intent.ACTION]:[2]:method_text:[        mInstrumentation.waitForIdleSync();        activity.finish();    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TabHostTest.java]:[ACTION_VIEW]:[1]:method_text:[        mInstrumentation.waitForIdleSync();        activity.finish();    }    @UiThreadTest   ])', 1), ('([2:/android/jobscheduler/cts/BatteryConstraintTest.java]:[Intent.ACTION]:[2]:method_text:[ that requires the device is charging, when the battery reports it is     * plugged in.     */   ])', 1), ('([1:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[Intent.ACTION]:[1]:method_text:[nsure it.        builder.setNavigationBarColor(navigationBarColor);        return builder;    }}])', 1), ('([1:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[ACTION_VIEW]:[1]:method_text:[nsure it.        builder.setNavigationBarColor(navigationBarColor);        return builder;    }}])', 1), ('([1:/android/os/cts/RequiredComponentsTest.java]:[Intent.ACTION]:[1]:method_text:[l(""There must be exactly one installer; found "" + installers);        }    }    @AppModeFull   ])', 1), ('([1:/android/os/cts/RequiredComponentsTest.java]:[Intent.ACTION]:[1]:method_text:[privateFlags                & requiredHostAppPrivateFlags) == requiredHostAppPrivateFlags);    }}])', 1), ('([2:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[Intent.ACTION]:[2]:method_text:[InterruptedException ex) {                // pass            }        }        return n;    }}])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileSharingTest.java]:[Intent.ACTION]:[1]:method_text:[_CAN_ACCESS_PARENT |                DevicePolicyManager.FLAG_PARENT_CAN_ACCESS_MANAGED);    }   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileSharingTest.java]:[Intent.ACTION]:[1]:method_text:[tch == 0) {                return resolveInfo;            }        }        return null;    }}])', 1), ('([1:/android/providerui/cts/MediaStoreUiTest.java]:[Intent.ACTION]:[1]:method_text:[                FileUtils.copy(source, target);            }        }        return file;    }}])', 1), ('([4:/android/suspendapps/cts/DualSuspendTests.java]:[Intent.ACTION]:[4]:method_text:[PACKAGE_SUSPENDED + "" not reported"",                mTestAppInterface.awaitBroadcast());    }   ])', 1), ('([2:/android/suspendapps/cts/DualSuspendTests.java]:[Intent.ACTION]:[2]:method_text:[not reported after both unsuspends"",                mTestAppInterface.awaitBroadcast());    }   ])', 1), ('([2:/android/suspendapps/cts/DualSuspendTests.java]:[Intent.ACTION]:[2]:method_text:[ing restriction "" + userRestriction,                mTestAppInterface.awaitBroadcast());    }   ])', 1), ('([2:/android/suspendapps/cts/DialogTests.java]:[Intent.ACTION]:[2]:method_text:[        TEST_APP_PACKAGE_NAME, incomingIntent.getStringExtra(Intent.EXTRA_PACKAGE_NAME));    }   ])', 1), ('([2:/com/android/cts/splitapp/SplitAppTest.java]:[Intent.ACTION]:[2]:method_text:[pected native code in base"");        } catch (UnsatisfiedLinkError expected) {        }    }   ])', 1), ('([1:/com/android/cts/splitapp/SplitAppTest.java]:[Intent.ACTION]:[1]:method_text:[    assertEquals(""com.android.cts.splitapp.MyReceiver"", result.get(0).activityInfo.name);    }   ])', 1), ('([3:/com/android/cts/splitapp/SplitAppTest.java]:[Intent.ACTION]:[3]:method_text:[);            i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);            return i;        }    }   ])', 1), ('([1:/com/android/cts/splitapp/SplitAppTest.java]:[Intent.ACTION]:[1]:method_text:[> result = pm.queryBroadcastReceivers(intent, 0);        assertEquals(0, result.size());    }   ])', 1), ('([2:/com/android/cts/splitapp/SplitAppTest.java]:[Intent.ACTION]:[2]:method_text:[  getContext().enforceCallingOrSelfPermission(android.Manifest.permission.VIBRATE, null);    }   ])', 1), ('([2:/com/android/cts/splitapp/SplitAppTest.java]:[Intent.ACTION]:[2]:method_text:[that expect to remain intact over     * long periods of time, such as across app moves.     */   ])', 1), ('([1:/com/android/cts/splitapp/SplitAppTest.java]:[ACTION_VIEW]:[1]:method_text:[);            i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);            return i;        }    }   ])', 1), ('([1:/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java]:[Intent.ACTION]:[1]:method_text:[ }    }    /**     * If the intent is not resolvable, it should return {@code null}.     */   ])', 1), ('([1:/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java]:[ACTION_VIEW]:[1]:method_text:[ }    }    /**     * If the intent is not resolvable, it should return {@code null}.     */   ])', 1), ('([1:/android/content/cts/ReadableUriExtraToClipDataTest.java]:[Intent.ACTION]:[1]:method_text:[;        getContext().startActivity(intent);        waitForConfirmationReadSuccess();    }   ])', 1), ('([1:/android/content/cts/ReadableUriExtraToClipDataTest.java]:[Intent.ACTION]:[1]:method_text:[ONDS));        } catch (InterruptedException e) {            fail(e.toString());        }    }}])', 1), ('([1:/android/view/inputmethod/cts/BaseInputConnectionTest.java]:[Intent.ACTION]:[1]:method_text:[(actionId));        assertFalse(connection.performPrivateCommand(action, new Bundle()));    }   ])', 1), ('([4:/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java]:[Intent.ACTION]:[4]:method_text:[iometricManager mBiometricManager;        private KeyguardManager mKeyguardManager;        private])', 1), ('([1:/android/media/cts/MediaControllerTest.java]:[Intent.ACTION]:[1]:method_text:[                mSpeed = speed;                mWaitLock.notify();            }        }    }}])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[Intent.ACTION]:[1]:method_text:[The permission is intended to be granted to only the device managed     * provisioning.     */   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[Intent.ACTION]:[1]:method_text:[on#WIFI_SET_DEVICE_MOBILITY_STATE} permission     * is held by at most one application.     */   ])', 1), ('([2:/android/sharesheet/cts/CtsSharesheetDeviceTest.java]:[Intent.ACTION]:[2]:method_text:[indObject(By.textContains(containsText)),                WAIT_AND_ASSERT_FOUND_TIMEOUT_MS);    }}])', 1), ('([3:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[Intent.ACTION]:[3]:method_text:[        return String.format(""%s: onReceive(%s)"", className, actionName);    }    @LargeTest   ])', 1), ('([2:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[Intent.ACTION]:[2]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([1:/android/harmfulappwarning/testapp/HarmfulAppWarningDeviceTest.java]:[Intent.ACTION]:[1]:method_text:[    public void tearDown() {        mSampleActivityStartedReceiver.unregisterQuietly();    }   ])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[Intent.ACTION]:[1]:method_text:[Unbind() throws Throwable {        unbindService();        getNotification(true, true);    }   ])', 1), ('([4:/com/android/cts/appdataisolation/appa/AppATests.java]:[Intent.ACTION]:[4]:method_text:[b dir.        testCannotAccessAppBDataDir();        testCanNotAccessAppBExternalDirs();    }   ])', 1), ('([1:/com/android/cts/launchertests/LauncherAppsTests.java]:[Intent.ACTION]:[1]:method_text:[droid.com/""));        assertThat(mLauncherApps.resolveActivity(intent, mUser)).isNull();    }   ])', 1), ('([1:/com/android/cts/launchertests/LauncherAppsTests.java]:[ACTION_VIEW]:[1]:method_text:[droid.com/""));        assertThat(mLauncherApps.resolveActivity(intent, mUser)).isNull();    }   ])', 1), ('([4:/android/suspendapps/cts/SuspendPackagesTest.java]:[Intent.ACTION]:[4]:method_text:[CKAGE_UNSUSPENDED + "" not reported"",                mTestAppInterface.awaitBroadcast());    }   ])', 1), ('([4:/android/suspendapps/cts/SuspendPackagesTest.java]:[Intent.ACTION]:[4]:method_text:[ved app extras different to the ones supplied"", extras2,                receivedExtras);    }   ])', 1), ('([1:/android/server/wm/DisplayHashManagerTest.java]:[Intent.ACTION]:[1]:method_text:[entity(                () -> mDisplayHashManager.setDisplayHashThrottlingEnabled(true));    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[Intent.ACTION]:[1]:method_text:[lse)                .setStrings(""android.intent.action.MAIN"")                .build());    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[Intent.ACTION]:[1]:method_text:[and(                restricted ? RESTRICT_BACKGROUND_ON_CMD : RESTRICT_BACKGROUND_OFF_CMD);    }}])', 1), ('([1:/com/android/cts/managedprofile/PhoneAccountTest.java]:[Intent.ACTION]:[1]:method_text:[*  Add an incoming call with our phone account and verify the call is inserted properly.     */   ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[Intent.ACTION]:[1]:method_text:[with future bugreports.        runShellCommand(""setprop ctl.stop "" + BUGREPORT_SERVICE);    }   ])', 1), ('([1:/android/os/cts/InattentiveSleepTests.java]:[Intent.ACTION]:[1]:method_text:[        mDevice.executeShellCommand(String.format(CMD_SET_TIMEOUT_TEMPLATE, timeoutMs));    }   ])', 1), ('([1:/android/app/role/cts/RoleManagerTest.java]:[Intent.ACTION]:[1]:method_text:[Shade() {        sContext.sendBroadcast(new Intent(Intent.ACTION_CLOSE_SYSTEM_DIALOGS));    }   ])', 1), ('([1:/android/app/role/cts/RoleManagerTest.java]:[Intent.ACTION]:[1]:method_text:[hecked(false))                .hasDescendant(By.text(APP_LABEL)));        pressBack();    }   ])', 1), ('([1:/android/app/role/cts/RoleManagerTest.java]:[Intent.ACTION]:[1]:method_text:[)));        assertIsRoleHolder(ROLE_NAME, APP_PACKAGE_NAME, true);        pressBack();    }   ])', 1), ('([1:/android/app/role/cts/RoleManagerTest.java]:[Intent.ACTION]:[1]:method_text:[));        assertIsRoleHolder(ROLE_NAME, APP_PACKAGE_NAME, false);        pressBack();    }   ])', 1), ('([3:/com/android/cts/userspacereboot/basic/BasicUserspaceRebootTest.java]:[Intent.ACTION]:[3]:method_text:[ * Tests that {@link PowerManager#isRebootingUserspaceSupported()} returns {@code true}.     */   ])', 1), ('([7:/com/android/cts/userspacereboot/basic/BasicUserspaceRebootTest.java]:[Intent.ACTION]:[7]:method_text:[, String[] selectionArgs) {            throw new UnsupportedOperationException();        }    }}])', 1), ('([1:/android/view/inputmethod/cts/PackageVisibilityTest.java]:[Intent.ACTION]:[1]:method_text:[il.hasObject(By.pkg(TEST_ACTIVITY.getPackageName()).depth(0)), timeout);    }    @AppModeFull   ])', 1), ('([1:/android/view/inputmethod/cts/PackageVisibilityTest.java]:[ACTION_VIEW]:[1]:method_text:[il.hasObject(By.pkg(TEST_ACTIVITY.getPackageName()).depth(0)), timeout);    }    @AppModeFull   ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[Intent.ACTION]:[2]:method_text:[image/jpeg"");                    getContext().startActivity(intent);                });    }   ])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[Intent.ACTION]:[1]:method_text:[tThat(info.getStackTrace()).contains(badUri + "" exposed beyond app"");                });    }   ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[Intent.ACTION]:[2]:method_text:[                 getContext().startActivity(intent);                });    }    @AppModeFull   ])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[Intent.ACTION]:[1]:method_text:[t.SECONDS);        assertTrue(v instanceof FileUriExposedViolation);    }    @AppModeInstant   ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[ACTION_VIEW]:[2]:method_text:[image/jpeg"");                    getContext().startActivity(intent);                });    }   ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[ACTION_VIEW]:[2]:method_text:[                 getContext().startActivity(intent);                });    }    @AppModeFull   ])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[ACTION_VIEW]:[1]:method_text:[t.SECONDS);        assertTrue(v instanceof FileUriExposedViolation);    }    @AppModeInstant   ])', 1), ('([1:/android/sample/cts/SampleHostJUnit4Test.java]:[Intent.ACTION]:[1]:method_text:[ing was successfully logged to Logcat from the activity.     *     * @throws Exception     */   ])', 1)]"	""	""	"[('Intent.ACTION', 87), ('ACTION_VIEW', 21)]"	"[('[android.provider.cts.media.MediaStoreIntentsTest testViewImageDir None]', 4), ('[android.provider.cts.media.MediaStoreIntentsTest testViewVideoDir None]', 4), ('[android.provider.cts.media.MediaStoreIntentsTest testViewImageFile None]', 4), ('[android.provider.cts.media.MediaStoreIntentsTest testViewVideoFile None]', 4), ('[android.provider.cts.media.MediaStoreIntentsTest testViewAudioFile None]', 4), ('[android.provider.cts.contacts.ContactsContractIntentsTest testViewContactDir None]', 2), ('[android.content.pm.cts.shortcut.upgrade.ShortcutManagerPreUpgradeTest testPreUpgrade None]', 2), ('[android.suspendapps.cts.DialogTests testInterceptorActivity_unsuspend None]', 2), ('[android.suspendapps.cts.DialogTests testInterceptorActivity_moreDetails None]', 2), ('[android.widget.cts.TabHostTest testSetup2 None]', 2), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testRestoreImeVisibility_noRestoreForHiddenWithForwardNav None]', 2), ('[android.appsecurity.cts.EphemeralTest isDeviceUnsupported None]', 2), ('[com.android.cts.splitapp.SplitAppTest testFeatureWarmBase None]', 2), ('[com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest testCannotBind_implicitIntent None]', 2), ('[android.provider.cts.media.MediaStoreIntentsTest testPickImageDir None]', 2), ('[android.provider.cts.media.MediaStoreIntentsTest testPickVideoDir None]', 2), ('[android.provider.cts.media.MediaStoreIntentsTest testPickAudioDir None]', 2), ('[com.android.cts.launchertests.LauncherAppsTests testAccessPrimaryProfileFromManagedProfile None]', 2), ('[android.view.inputmethod.cts.PackageVisibilityTest getTestMarker None]', 2), ('[android.os.cts.StrictModeTest testFileUriExposure None]', 2), ('[android.os.cts.StrictModeTest testContentUriWithoutPermission None]', 2), ('[android.os.cts.StrictModeTest testVmPenaltyListener None]', 2), ('[android.telephony.cts.PhoneNumberUtilsTest testGetMethods None]', 1), ('[android.provider.cts.contacts.ContactsContractIntentsTest testPickContactDir None]', 1), ('[android.provider.cts.contacts.ContactsContractIntentsTest testGetContentContactDir None]', 1), ('[android.app.cts.WallpaperManagerTest isWallpaperSupported None]', 1), ('[android.app.cts.WallpaperManagerTest wallpaperChangedBroadcastTest None]', 1), ('[android.app.cts.WallpaperManagerTest wallpaperClearBroadcastTest None]', 1), ('[android.content.pm.cts.FeatureTest testManagedProfileSupported None]', 1), ('[android.widget.cts.TabHostTest testSetup1 None]', 1), ('[android.os.cts.RequiredComponentsTest testPackageInstallerPresent None]', 1), ('[android.os.cts.RequiredComponentsTest testNoPackageInstallerPresent None]', 1), ('[android.app.notification.legacy20.cts.LegacyNotificationManager20Test testNotificationListener_cancelNotifications None]', 1), ('[android.providerui.cts.MediaStoreUiTest testGetDocumentUri_Symmetry None]', 1), ('[android.suspendapps.cts.DualSuspendTests testMyPackageSuspended None]', 1), ('[android.suspendapps.cts.DualSuspendTests testMyPackageUnsuspended None]', 1), ('[android.suspendapps.cts.DualSuspendTests testUnsuspendedOnUninstallBlocked None]', 1), ('[com.android.cts.splitapp.SplitAppTest testSingleBase None]', 1), ('[com.android.cts.splitapp.SplitAppTest testApi None]', 1), ('[com.android.cts.splitapp.SplitAppTest testFeatureWarmApi None]', 1), ('[com.android.cts.splitapp.SplitAppTest testInheritUpdatedBase_withRevisionA None]', 1), ('[com.android.cts.splitapp.SplitAppTest testInheritUpdatedSplit_withRevisionA None]', 1), ('[android.content.cts.ReadableUriExtraToClipDataTest testUriExtraStreamMigratedToClipData_sendIntent None]', 1), ('[android.content.cts.ReadableUriExtraToClipDataTest testUriExtraStreamMigratedToClipData_sendMultipleIntent None]', 1), ('[android.view.inputmethod.cts.BaseInputConnectionTest testDefaultMethods None]', 1), ('[com.android.cts.verifier.security.UnlockedDeviceRequiredTest setPassFailButtonClickListeners None]', 1), ('[android.media.cts.MediaControllerTest testTransportControlsAndMediaSessionCallback None]', 1), ('[android.net.wifi.cts.WifiManagerTest testNetworkSetupWizardPermission None]', 1), ('[android.net.wifi.cts.WifiManagerTest testNetworkManagedProvisioningPermission None]', 1), ('[android.sharesheet.cts.CtsSharesheetDeviceTest contentPreviewTest None]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testBroadcastManagedProfileAvailable_withCrossProfileAppsOp None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testChannelDeletion_cancelReason None]', 1), ('[android.harmfulappwarning.testapp.HarmfulAppWarningDeviceTest register None]', 1), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName None]', 1), ('[com.android.cts.appdataisolation.appa.AppATests testAppAUnlockDeviceAndVerifyCeDeExternalDataExist None]', 1), ('[android.suspendapps.cts.SuspendPackagesTest testMyPackageSuspendedUnsuspended None]', 1), ('[android.suspendapps.cts.SuspendPackagesTest testUpdatingAppExtras None]', 1), ('[android.server.wm.DisplayHashManagerTest SyncDisplayHashResultCallback None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testEnableSystemAppWithIntentLogged None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSecondaryLockscreen None]', 1), ('[com.android.cts.managedprofile.PhoneAccountTest testOutgoingCallUsingActionCall None]', 1), ('[android.app.role.cts.RoleManagerTest DisableAnimationRule None]', 1), ('[android.app.role.cts.RoleManagerTest openDefaultAppDetailsThenIsNotDefaultApp None]', 1), ('[android.app.role.cts.RoleManagerTest openDefaultAppDetailsAndSetDefaultAppThenIsDefaultApp None]', 1), ('[android.app.role.cts.RoleManagerTest openDefaultAppDetailsAndSetDefaultAppAndSetAnotherThenIsNotDefaultApp None]', 1), ('[com.android.cts.userspacereboot.basic.BasicUserspaceRebootTest isRebootingUserspaceSupported None]', 1), ('[com.android.cts.userspacereboot.basic.BasicUserspaceRebootTest exists None]', 1), ('[android.os.cts.StrictModeTest testFileUriExposure_Chooser None]', 1)]"
"3.8.14  . Multi"	"3.8.14"	"C-2-1"	"3.8.14/C-2-1"	"03081400.670201"	"""C-2-1] MUST preload a resizeable launcher as the default."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.15  . Instant Apps"	"3.15"	"C-1-5"	"3.15/C-1-5"	"03150000.670105"	"""C-1-5] MUST preload one or more applications or service components with an intent handler for the intents listed in the SDK here and make the intents visible for Instant Apps. <h3 id=""3_16_companion_device_pairing"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3.1  . File Based Encryption with Metadata Encryption"	"9.9.3.1"	"C-1-5"	"9.9.3.1/C-1-5"	"09090301.670105"	"""C-1-5] MUST encrypt file contents and filesystem metadata using AES-256-XTS or Adiantum. AES-256-XTS refers to the Advanced Encryption Standard with a 256-bit cipher key length, operated in XTS mode; the full length of the key is 512 bits. Adiantum refers to Adiantum-XChaCha12-AES, as specified at https://github.com/google/adiantum. Filesystem metadata is data such as file sizes, ownership, modes, and extended attributes (xattrs)."""	""	""	"XTS github.com AES"	""	""	""	""	""	""	""	""	"[('android.autofillservice.cts.saveui.SimpleSaveActivityTest', 18), ('android.security.cts.SELinuxHostTest', 11), ('android.autofillservice.cts.servicebehavior.FieldsClassificationTest', 11), ('android.autofillservice.cts.FillEventHistoryTest', 7), ('android.hardware.camera2.cts.RobustnessTest', 6), ('android.suspendapps.cts.DialogTests', 5), ('android.autofillservice.cts.saveui.CustomDescriptionTest', 4), ('android.autofillservice.cts.inline.InlineSimpleSaveActivityTest', 2), ('android.security.identity.cts.DynamicAuthTest', 2), ('android.autofillservice.cts.servicebehavior.MultiScreenDifferentActivitiesTest', 2), ('android.autofillservice.cts.AutoFinishSessionTest', 2), ('android.autofillservice.cts.servicebehavior.WebViewMultiScreenLoginActivityTest', 2), ('android.autofillservice.cts.inline.InlineLoginActivityTest', 2), ('android.net.wifi.cts.WifiManagerTest', 2), ('android.keystore.cts.BlockCipherTestBase', 2), ('android.view.textclassifier.cts.TextClassificationManagerTest', 2), ('android.text.cts.BoringLayoutTest', 2), ('android.security.SELinuxTargetSdkTest', 2), ('android.autofillservice.cts.LoginWithStringsActivityTest', 1), ('com.android.cts.authboundkey.AuthBoundKeyAppTest', 1), ('android.autofillservice.cts.ValidatorTest', 1), ('android.server.wm.AppConfigurationTests', 1), ('android.net.ipsec.ike.cts.SaProposalTest', 1), ('android.autofillservice.cts.commontests.TimePickerTestCase', 1), ('android.os.cts.RequiredComponentsTest', 1), ('android.server.wm.StartActivityTests', 1), ('android.providerui.cts.MediaStoreUiTest', 1), ('android.widget.cts.TwoLineListItemTest', 1), ('android.server.wm.MultiDisplaySystemDecorationTests', 1), ('android.autofillservice.cts.OnClickActionTest', 1), ('com.android.cts.verifier.security.UnlockedDeviceRequiredTest', 1), ('android.app.cts.ActivityManagerAppExitInfoTest', 1), ('android.app.cts.DialogTest', 1), ('android.telephony.cts.CarrierConfigManagerTest', 1), ('android.autofillservice.cts.TimePickerTestCase', 1), ('android.autofillservice.cts.VirtualContainerActivityTest', 1), ('android.opengl.cts.EglContextTest', 1), ('android.autofillservice.cts.ViewAttributesTest', 1), ('android.text.style.cts.StrikethroughSpanTest', 1)]"	"[('build', 13), ('Builder', 4), ('getContext', 4), ('getTargetContext', 3), ('enableService', 2), ('getNextFillRequest', 2), ('tapLogin', 2), ('getNextSaveRequest', 2), ('tearDown', 2), ('buildIkeSaProposalWithNormalModeCipher', 1), ('buildIkeSaProposalWithCombinedModeCipher', 1), ('buildChildSaProposalWithNormalModeCipher', 1), ('buildChildSaProposalWithCombinedModeCipher', 1), ('buildChildSaProposalWithOnlyCiphers', 1), ('onFill', 1), ('run', 1), ('applyCharSequenceTransformationToImageView', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('getActivity', 1), ('getFragmentManager', 1), ('getParent', 1), ('getPassButton', 1), ('setUp', 1), ('getPackageManager', 1), ('fail', 1), ('hasTelephony', 1), ('textClassifierTypes', 1), ('Bundle', 1), ('setup', 1), ('getTextClassifier', 1), ('getPackageName', 1), ('destroy', 1), ('checkSetAutoFill', 1), ('getAutofillHints', 1), ('textContextCommitted_withoutDatasets', 1), ('assertNoDatasetsEver', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java', 18), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java', 11), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/FillEventHistoryTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/CustomDescriptionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DialogTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DialogTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/DynamicAuthTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/AutoFinishSessionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/WebViewMultiScreenLoginActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineLoginActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/BlockCipherTestBase.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassificationManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/BoringLayoutTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk28/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/LoginWithStringsActivityTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/AuthBoundKeyApp/src/com/android/cts/authboundkey/AuthBoundKeyAppTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/ValidatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/SaProposalTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/TimePickerTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/RequiredComponentsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/StartActivityTests.java', 1), ('/home/gpoor/cts-source/cts/tests/providerui/src/android/providerui/cts/MediaStoreUiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TwoLineListItemTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySystemDecorationTests.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/OnClickActionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/AppExitTest/src/android/app/cts/ActivityManagerAppExitInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/DialogTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CarrierConfigManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/TimePickerTestCase.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/VirtualContainerActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/EglContextTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/ViewAttributesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/style/cts/StrikethroughSpanTest.java', 1)]"	"[('(1,XTS,/android/autofillservice/cts/LoginWithStringsActivityTest.java)', 1), ('(1,AES,/com/android/cts/authboundkey/AuthBoundKeyAppTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java)', 1), ('(3,XTS,/android/autofillservice/cts/ValidatorTest.java)', 1), ('(3,XTS,/android/server/wm/AppConfigurationTests.java)', 1), ('(2,XTS,/android/suspendapps/cts/DialogTests.java)', 1), ('(23,AES,/android/net/ipsec/ike/cts/SaProposalTest.java)', 1), ('(17,AES,/android/security/identity/cts/DynamicAuthTest.java)', 1), ('(9,XTS,/android/autofillservice/cts/saveui/CustomDescriptionTest.java)', 1), ('(79,XTS,/android/security/cts/SELinuxHostTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/commontests/TimePickerTestCase.java)', 1), ('(1,XTS,/android/os/cts/RequiredComponentsTest.java)', 1), ('(6,XTS,/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/AutoFinishSessionTest.java)', 1), ('(1,XTS,/android/server/wm/StartActivityTests.java)', 1), ('(43,XTS,/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java)', 1), ('(2,XTS,/android/providerui/cts/MediaStoreUiTest.java)', 1), ('(1,XTS,/android/widget/cts/TwoLineListItemTest.java)', 1), ('(37,AES,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(3,XTS,/android/suspendapps/cts/DialogTests.java)', 1), ('(1,XTS,/android/server/wm/MultiDisplaySystemDecorationTests.java)', 1), ('(3,XTS,/android/autofillservice/cts/OnClickActionTest.java)', 1), ('(26,XTS,/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java)', 1), ('(11,XTS,/android/autofillservice/cts/servicebehavior/WebViewMultiScreenLoginActivityTest.java)', 1), ('(2,AES,/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java)', 1), ('(2,XTS,/android/app/cts/ActivityManagerAppExitInfoTest.java)', 1), ('(4,XTS,/android/autofillservice/cts/inline/InlineLoginActivityTest.java)', 1), ('(4,XTS,/android/app/cts/DialogTest.java)', 1), ('(3,AES,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(1,XTS,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(1,AES,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(1,XTS,/android/telephony/cts/CarrierConfigManagerTest.java)', 1), ('(4,XTS,/android/view/textclassifier/cts/TextClassificationManagerTest.java)', 1), ('(17,XTS,/android/text/cts/BoringLayoutTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/TimePickerTestCase.java)', 1), ('(1,XTS,/android/autofillservice/cts/VirtualContainerActivityTest.java)', 1), ('(1,XTS,/android/opengl/cts/EglContextTest.java)', 1), ('(2,XTS,/android/security/SELinuxTargetSdkTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/ViewAttributesTest.java)', 1), ('(7,XTS,/android/autofillservice/cts/FillEventHistoryTest.java)', 1), ('(1,XTS,/android/text/style/cts/StrikethroughSpanTest.java)', 1)]"	"[('([2:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[2]:method_text:[performClick();        });        mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_GENERIC);    }   ])', 4), ('([1:/android/suspendapps/cts/DialogTests.java]:[XTS]:[1]:method_text:[     assertFalse(""Test package still suspended"", mTestAppInterface.isTestAppSuspended());    }   ])', 2), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[    assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""PASS"");    }   ])', 2), ('([3:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[3]:method_text:[       assertTextValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""pass"");    }   ])', 2), ('([4:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[4]:method_text:[       }            } finally {                closeDevice(id);            }        }    }   ])', 2), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[                       new String[] { ""otherId"", ""myId""}, new float[] { 0.80F, 0.2F })});    }   ])', 2), ('([2:/android/autofillservice/cts/inline/InlineLoginActivityTest.java]:[XTS]:[2]:method_text:[             findNodeByResourceId(request.structure, ID_PASSWORD).isFocused()).isFalse();    }   ])', 2), ('([1:/android/autofillservice/cts/LoginWithStringsActivityTest.java]:[XTS]:[1]:method_text:[    assertWithMessage(""extras not passed on save"").that(extraValue).isEqualTo(""4815162342"");    }}])', 1), ('([1:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[AES]:[1]:method_text:[    assertEquals(KeyProperties.AUTH_DEVICE_CREDENTIAL, info.getUserAuthenticationType());    }   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_INPUT), ""ID"");    }   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[       assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""pass"");    }}])', 1), ('([3:/android/autofillservice/cts/ValidatorTest.java]:[XTS]:[3]:method_text:[).findByAutofillId(id);        assertThat(validator.isValid(valueFinder)).isEqualTo(valid);    }}])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[XTS]:[3]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([1:/android/suspendapps/cts/DialogTests.java]:[XTS]:[1]:method_text:[      if (mTestAppInterface != null) {            mTestAppInterface.disconnect();        }    }}])', 1), ('([23:/android/net/ipsec/ike/cts/SaProposalTest.java]:[AES]:[23]:method_text:[(                COMBINED_MODE_CIPHERS, Collections.EMPTY_LIST, Collections.EMPTY_LIST);    }   ])', 1), ('([10:/android/security/identity/cts/DynamicAuthTest.java]:[AES]:[10]:method_text:[re done. Clean up after ourselves.        store.deleteCredentialByName(credentialName);    }   ])', 1), ('([7:/android/security/identity/cts/DynamicAuthTest.java]:[AES]:[7]:method_text:[taticAuthenticationData() throwing UnknownAuthenticationKeyException    // on an unknown auth key}])', 1), ('([3:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[3]:method_text:[Bot.saveForAutofill(true, SAVE_DATA_TYPE_GENERIC);        sReplier.getNextSaveRequest();    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""batch updated"");    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[);        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""transformed"");    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[xt = matchFirst ? ""polo"" : ""POLO"";        assertSaveUiIsShownWithTwoLines(expectedText);    }   ])', 1), ('([15:/android/security/cts/SELinuxHostTest.java]:[XTS]:[15]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[XTS]:[1]:method_text:[rohibition of socket use with the     * only exceptions for the automotive device type.     */   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[XTS]:[1]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([11:/android/security/cts/SELinuxHostTest.java]:[XTS]:[11]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([8:/android/security/cts/SELinuxHostTest.java]:[XTS]:[8]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([7:/android/security/cts/SELinuxHostTest.java]:[XTS]:[7]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([9:/android/security/cts/SELinuxHostTest.java]:[XTS]:[9]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([8:/android/security/cts/SELinuxHostTest.java]:[XTS]:[8]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([4:/android/security/cts/SELinuxHostTest.java]:[XTS]:[4]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([9:/android/security/cts/SELinuxHostTest.java]:[XTS]:[9]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([6:/android/security/cts/SELinuxHostTest.java]:[XTS]:[6]:method_text:[at all types on /data have the data_file_type attribute.     *     * @throws Exception     */   ])', 1), ('([1:/android/autofillservice/cts/commontests/TimePickerTestCase.java]:[XTS]:[1]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_OUTPUT), ""10:40"");    }}])', 1), ('([1:/android/os/cts/RequiredComponentsTest.java]:[XTS]:[1]:method_text:[         & ApplicationInfo.FLAG_SYSTEM) == ApplicationInfo.FLAG_SYSTEM);    }    @AppModeFull   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java]:[XTS]:[2]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_INPUT), ""ID"");    }   ])', 1), ('([4:/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java]:[XTS]:[4]:method_text:[ity2.syncRunOnUiThread(() -> {            activity2.mInput.setFocusable(false);        });    }}])', 1), ('([1:/android/autofillservice/cts/AutoFinishSessionTest.java]:[XTS]:[1]:method_text:[    .getAutofillValue().getTextValue().toString()).isEqualTo(view + ""-filled"");        }    }   ])', 1), ('([1:/android/autofillservice/cts/AutoFinishSessionTest.java]:[XTS]:[1]:method_text:[            .getAutofillValue().getTextValue().toString()).isEqualTo(""editText1-filled"");    }   ])', 1), ('([1:/android/server/wm/StartActivityTests.java]:[XTS]:[1]:method_text:[ctivity}     * {@link android.content.Context} with the {@code FLAG_ACTIVITY_NEW_TASK}.     */   ])', 1), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[ activity, so it indirectly     * tests the integration of Autofill with Accessibility.     */   ])', 1), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[**     * Emulates an app dyanmically adding the password field after username is typed.     */   ])', 1), ('([2:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[2]:method_text:[ /**     * Emulates an app using fragments to display username and password in 2 steps.     */   ])', 1), ('([7:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[7]:method_text:[  assertTextAndValue(findNodeByResourceId(structure2, ID_PASSWORD), ""42"");    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[unched        WelcomeActivity.assertShowing(mUiBot, ""Saved by the bell"");    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[);        assertThat(actualMyId).isEqualTo(new MyAutofillId(expectedId));    }    @Presubmit   ])', 1), ('([6:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[6]:method_text:[SURRECTION);        mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_GENERIC);    }    @Presubmit   ])', 1), ('([3:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[3]:method_text:[tAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""42"");    }    @Presubmit   ])', 1), ('([3:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[3]:method_text:[w activity     * finishes:     * the Save UI should have been restored.     */    @Presubmit   ])', 1), ('([2:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[2]:method_text:[     /* start= */ 8,  /* end= */ 15, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);        return ss;    }}])', 1), ('([2:/android/providerui/cts/MediaStoreUiTest.java]:[XTS]:[2]:method_text:[                FileUtils.copy(source, target);            }        }        return file;    }}])', 1), ('([1:/android/widget/cts/TwoLineListItemTest.java]:[XTS]:[1]:method_text:[xt2),                twoLineListItem.getText2().getText().toString());    }    @UiThreadTest   ])', 1), ('([6:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[6]:method_text:[     }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([7:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[7]:method_text:[       }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[2]:method_text:[     }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([14:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[14]:method_text:[ll expected mandatory stream combinations are present and     * advertised accordingly.     */   ])', 1), ('([1:/android/suspendapps/cts/DialogTests.java]:[XTS]:[1]:method_text:[        TEST_APP_PACKAGE_NAME, incomingIntent.getStringExtra(Intent.EXTRA_PACKAGE_NAME));    }   ])', 1), ('([1:/android/suspendapps/cts/DialogTests.java]:[XTS]:[1]:method_text:[erface.disconnect();        }        mUiDevice.pressBack();        mUiDevice.pressHome();    }}])', 1), ('([1:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[XTS]:[1]:method_text:[  assertFalse(expectCommand(stream, callCursorUpdates, TIMEOUT).getReturnBooleanValue());    }   ])', 1), ('([3:/android/autofillservice/cts/OnClickActionTest.java]:[XTS]:[3]:method_text:[esourceId) {        mUiBot.assertGoneByRelativeId(saveUi, resourceId, Timeouts.UI_TIMEOUT);    }}])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[;        assertFillEventForFieldsClassification(events.get(0), fieldId.get(), ""cat"", 1);    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[        assertFillEventForFieldsClassification(events.get(0), fieldId.get(), ""card"", 1);    }   ])', 1), ('([4:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[4]:method_text:[        assertFillEventForFieldsClassification(events.get(0), fieldId.get(), ""myId"", 1);    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[ ""cat1"", ""cat2""},                                new float[] {1, 1})                });    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[2ndId"", ""1stId"" },                            new float[] { 0.66F, 0.5F }) });        }    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[         new FieldClassificationResult(fieldId2.get(), ""myId"", 0.6F),                });    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[t(),                                new String[] { ""otherId"" }, new float[] { 0.2F })});    }   ])', 1), ('([4:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[4]:method_text:[ssertFillEventForFieldsClassification(defaultUserDataEvent, fieldId2.get(), ""cat"", 1.0F);    }   ])', 1), (""([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[ull'     * v multiple fields     * v multiple value     * - combinations of above items     */}])"", 1), ('([6:/android/autofillservice/cts/servicebehavior/WebViewMultiScreenLoginActivityTest.java]:[XTS]:[6]:method_text:[Request2.structure, HTML_NAME_PASSWORD), ""sweet"");        mUiBot.assertSaveNotShowing();    }   ])', 1), ('([5:/android/autofillservice/cts/servicebehavior/WebViewMultiScreenLoginActivityTest.java]:[XTS]:[5]:method_text:[tyComponent();        assertThat(componentCurrent).isEqualTo(mActivity.getComponentName());    }}])', 1), ('([2:/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java]:[AES]:[2]:method_text:[iometricManager mBiometricManager;        private KeyguardManager mKeyguardManager;        private])', 1), ('([2:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[XTS]:[2]:method_text:[tSep, start);        assertTrue(end > start);        return dump.substring(start, end);    }   ])', 1), ('([4:/android/app/cts/DialogTest.java]:[XTS]:[4]:method_text:[e, defValue),                ta.getInt(R.styleable.TextAppearance_textStyle, defValue));    }   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[AES]:[1]:method_text:[));    }    /**     * Tests {@link WifiManager#isWpa3SaeSupported()} does not crash.     */   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[AES]:[2]:method_text:[    }    /**     * Tests {@link WifiManager#isWpa3SuiteBSupported()} does not crash.     */   ])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[XTS]:[1]:method_text:[xt,                    subarray(decryptedPlaintext, 0, basePlaintext.length));        }    }   ])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[AES]:[1]:method_text:[param);            fail();        } catch (InvalidAlgorithmParameterException expected) {}    }}])', 1), ('([1:/android/telephony/cts/CarrierConfigManagerTest.java]:[XTS]:[1]:method_text:[E_BOOL.startsWith(                                CarrierConfigManager.Gps.KEY_PREFIX));    }   ])', 1), ('([3:/android/view/textclassifier/cts/TextClassificationManagerTest.java]:[XTS]:[3]:method_text:[;        }    }    @After    public void tearDown() {        mClassifier.destroy();    }   ])', 1), ('([1:/android/view/textclassifier/cts/TextClassificationManagerTest.java]:[XTS]:[1]:method_text:[ assertThat(conversationAction.getConfidenceScore()).isIn(Range.closed(0f, 1.0f));        }    }}])', 1), ('([6:/android/text/cts/BoringLayoutTest.java]:[XTS]:[6]:method_text:[ToBitmap(layoutWithPrecomputed);        assertTrue(msg, resultBMP.sameAs(expectedBMP));    }   ])', 1), ('([11:/android/text/cts/BoringLayoutTest.java]:[XTS]:[11]:method_text:[ALE,                                DEFAULT_METRICS,                                true);    }}])', 1), ('([1:/android/autofillservice/cts/TimePickerTestCase.java]:[XTS]:[1]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_OUTPUT), ""10:40"");    }}])', 1), (""([1:/android/autofillservice/cts/VirtualContainerActivityTest.java]:[XTS]:[1]:method_text:[    // shown again, but then we wouldn't be effectively testing that the context was committed   ])"", 1), ('([1:/android/opengl/cts/EglContextTest.java]:[XTS]:[1]:method_text:[blic class EglContextTest {    /**     * Tests creating then releasing an EGL context.     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[XTS]:[1]:method_text:[* Verify that selinux context is the expected type based on     * targetSdkVersion = 28     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[XTS]:[1]:method_text:[9,c256,c512,c768\\n"" +            ""Actual value: "";        appDataContext(context, msg);    }   ])', 1), ('([2:/android/autofillservice/cts/ViewAttributesTest.java]:[XTS]:[2]:method_text:[ntexts.size()).isEqualTo(1);        test.accept(request.contexts.get(0).getStructure());    }   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[e.getFillEvents(1);        assertFillEventForSaveShown(events.get(0), NULL_DATASET_ID);    }   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[Id, ""id2"");            assertThat(event2.getManuallyEnteredField()).isEmpty();        }    }   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[by the user,     * neither the user entered values that were present in these datasets.     */   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[re selected by the user,     * and the user changed the values provided by the service.     */   ])', 1), (""([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[ected by the user,     * and the user didn't change the values provided by the service.     */   ])"", 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[entered values that match what was provided by the service on different     * datasets.     */   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[  assertThat(manuallyEnteredFields.get(passwordId)).containsExactly(""id2"", ""id3"");        }    }}])', 1), ('([1:/android/text/style/cts/StrikethroughSpanTest.java]:[XTS]:[1]:method_text:[  text, 0, text.length(), tp, largeWidth).build();        return layout.getLineWidth(0);    }   ])', 1)]"	"https://github.com"	""	"[('XTS', 91), ('AES', 14)]"	"[('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSanitizeOnSaveWhenAppChangeValues None]', 6), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testAutoFillOneDatasetAndSave None]', 4), ('[android.suspendapps.cts.DialogTests testInterceptorActivity_unsuspend None]', 2), ('[android.suspendapps.cts.DialogTests testInterceptorActivity_moreDetails None]', 2), ('[android.autofillservice.cts.LoginWithStringsActivityTest testAutoFillOneDatasetAndSave None]', 1), ('[com.android.cts.authboundkey.AuthBoundKeyAppTest testGenerateAuthBoundKey None]', 1), ('[android.autofillservice.cts.inline.InlineSimpleSaveActivityTest testAutofillSave None]', 1), ('[android.autofillservice.cts.inline.InlineSimpleSaveActivityTest testAutofill_oneDatasetAndSave None]', 1), ('[android.autofillservice.cts.ValidatorTest testDontShowUiWhenValidatorFails None]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating None]', 1), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthTest None]', 1), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthWithExpirationTest None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeBatchUpdates None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeTransformations None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest assertSaveUiWithoutCustomDescriptionIsShown None]', 1), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo None]', 1), ('[android.security.cts.SELinuxHostTest testAllDomainsEnforcing None]', 1), ('[android.security.cts.SELinuxHostTest testMLSAttributes None]', 1), ('[android.security.cts.SELinuxHostTest testValidSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospServiceContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidServiceContexts None]', 1), ('[android.autofillservice.cts.commontests.TimePickerTestCase testAutoFillAndSave None]', 1), ('[android.os.cts.RequiredComponentsTest testExtServicesPresent None]', 1), ('[android.autofillservice.cts.servicebehavior.MultiScreenDifferentActivitiesTest testActivityNotDelayedIsNotMerged None]', 1), ('[android.autofillservice.cts.servicebehavior.MultiScreenDifferentActivitiesTest testDelayedActivityIsMerged None]', 1), ('[android.autofillservice.cts.AutoFinishSessionTest isNotNull None]', 1), ('[android.autofillservice.cts.AutoFinishSessionTest hideParentToFinishSession None]', 1), ('[android.server.wm.StartActivityTests testStartActivityContexts None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testAutoFillOneDatasetAndSave_usingUiAutomatorOnly None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSave_afterRotation None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSave_launchIntent None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSaveWithParcelableOnClientState None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testTapHomeWhileSaveUiIsShowing None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSelectedDatasetsAreSentOnSaveRequest None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testExplicitlySaveButtonOnly None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testTapUrlSpanOnSuccinctDescription_tapBackWithoutFinish None]', 1), ('[android.providerui.cts.MediaStoreUiTest testGetDocumentUri_Symmetry None]', 1), ('[android.widget.cts.TwoLineListItemTest testGetTexts None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testBasicTriggerSequence None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testSimultaneousTriggers None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAfThenAeTrigger None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAeThenAfTrigger None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAeAndAfCausality None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testOisDataMode None]', 1), ('[android.suspendapps.cts.DialogTests testInterceptorActivity_strings None]', 1), ('[android.server.wm.MultiDisplaySystemDecorationTests testCrossDisplayBasicImeOperations None]', 1), ('[android.autofillservice.cts.OnClickActionTest testHideAndShow None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_exactMatchLast4Algorithm None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_CreditCardAlgorithm None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_useDefaultAlgorithm None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_sameValueForMultipleCategories None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_oneDetectableField_bestMatchIsSecond None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_oneUserData_manyDetectableFields None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_manyDetectableFields None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_manyDetectableFields_differentClassificationAlgo None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserDataPerField_manyDetectableFields None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_usePackageUserData None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_mergeUserData_manyDetectableFields None]', 1), ('[android.autofillservice.cts.servicebehavior.WebViewMultiScreenLoginActivityTest testSave_eachFieldSeparately None]', 1), ('[android.autofillservice.cts.servicebehavior.WebViewMultiScreenLoginActivityTest testSave_bothFieldsAtOnce None]', 1), ('[com.android.cts.verifier.security.UnlockedDeviceRequiredTest setPassFailButtonClickListeners None]', 1), ('[android.app.cts.ActivityManagerAppExitInfoTest testOther None]', 1), ('[android.autofillservice.cts.inline.InlineLoginActivityTest testAutofill_disjointDatasets None]', 1), ('[android.autofillservice.cts.inline.InlineLoginActivityTest testAutofill_selectDatasetThenHideInlineSuggestion None]', 1), ('[android.app.cts.DialogTest testConstructor_protectedNotCancellableEsc None]', 1), ('[android.net.wifi.cts.WifiManagerTest testGetCurrentNetwork None]', 1), ('[android.net.wifi.cts.WifiManagerTest testIsWpa3SaeSupported None]', 1), ('[android.keystore.cts.BlockCipherTestBase testGeneratedPadding None]', 1), ('[android.keystore.cts.BlockCipherTestBase testVeryLargeBlock None]', 1), ('[android.telephony.cts.CarrierConfigManagerTest isDataCapable None]', 1), ('[android.view.textclassifier.cts.TextClassificationManagerTest testLanguageDetection_nullRequest None]', 1), ('[android.text.cts.BoringLayoutTest testDraw None]', 1), ('[android.text.cts.BoringLayoutTest testPrecomputedText None]', 1), ('[android.autofillservice.cts.TimePickerTestCase testAutoFillAndSave None]', 1), ('[android.autofillservice.cts.VirtualContainerActivityTest testSave_submitButtonClicked None]', 1), ('[android.security.SELinuxTargetSdkTest testAppDomainContext None]', 1), ('[android.security.SELinuxTargetSdkTest testAppDataContext None]', 1), ('[android.autofillservice.cts.ViewAttributesTest isNull None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_idlessDatasetSelected_datasetWithIdIgnored None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_idlessDatasetIgnored_datasetWithIdSelected None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_oneDatasetSelected None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_multipleDatasetsSelected None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_noDatasetSelected_butManuallyEntered None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_noDatasetSelected_butManuallyEntered_matchingMultipleDatasets None]', 1), ('[android.text.style.cts.StrikethroughSpanTest testWriteToParcel None]', 1)]"
"9.9.3.1  . File Based Encryption with Metadata Encryption"	"9.9.3.1"	"C-1-9"	"9.9.3.1/C-1-9"	"09090301.670109"	"""C-1-9] CE keys MUST be bound to a default passcode when the user has not specified lock screen credentials."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3.2  . Per"	"9.9.3.2"	"C-1-4"	"9.9.3.2/C-1-4"	"09090302.670104"	"""C-1-4] MUST use AES-256-XTS for block-level encryption of the user partitions. The keys protecting the per-user block-level encrypted devices:"""	""	""	"XTS AES"	""	""	""	""	""	""	""	""	"[('android.autofillservice.cts.saveui.SimpleSaveActivityTest', 18), ('android.security.cts.SELinuxHostTest', 11), ('android.autofillservice.cts.servicebehavior.FieldsClassificationTest', 11), ('android.autofillservice.cts.FillEventHistoryTest', 7), ('android.hardware.camera2.cts.RobustnessTest', 6), ('android.suspendapps.cts.DialogTests', 5), ('android.autofillservice.cts.saveui.CustomDescriptionTest', 4), ('android.autofillservice.cts.inline.InlineSimpleSaveActivityTest', 2), ('android.security.identity.cts.DynamicAuthTest', 2), ('android.autofillservice.cts.servicebehavior.MultiScreenDifferentActivitiesTest', 2), ('android.autofillservice.cts.AutoFinishSessionTest', 2), ('android.autofillservice.cts.servicebehavior.WebViewMultiScreenLoginActivityTest', 2), ('android.autofillservice.cts.inline.InlineLoginActivityTest', 2), ('android.net.wifi.cts.WifiManagerTest', 2), ('android.keystore.cts.BlockCipherTestBase', 2), ('android.view.textclassifier.cts.TextClassificationManagerTest', 2), ('android.text.cts.BoringLayoutTest', 2), ('android.security.SELinuxTargetSdkTest', 2), ('android.autofillservice.cts.LoginWithStringsActivityTest', 1), ('com.android.cts.authboundkey.AuthBoundKeyAppTest', 1), ('android.autofillservice.cts.ValidatorTest', 1), ('android.server.wm.AppConfigurationTests', 1), ('android.net.ipsec.ike.cts.SaProposalTest', 1), ('android.autofillservice.cts.commontests.TimePickerTestCase', 1), ('android.os.cts.RequiredComponentsTest', 1), ('android.server.wm.StartActivityTests', 1), ('android.providerui.cts.MediaStoreUiTest', 1), ('android.widget.cts.TwoLineListItemTest', 1), ('android.server.wm.MultiDisplaySystemDecorationTests', 1), ('android.autofillservice.cts.OnClickActionTest', 1), ('com.android.cts.verifier.security.UnlockedDeviceRequiredTest', 1), ('android.app.cts.ActivityManagerAppExitInfoTest', 1), ('android.app.cts.DialogTest', 1), ('android.telephony.cts.CarrierConfigManagerTest', 1), ('android.autofillservice.cts.TimePickerTestCase', 1), ('android.autofillservice.cts.VirtualContainerActivityTest', 1), ('android.opengl.cts.EglContextTest', 1), ('android.autofillservice.cts.ViewAttributesTest', 1), ('android.text.style.cts.StrikethroughSpanTest', 1)]"	"[('build', 13), ('Builder', 4), ('getContext', 4), ('getTargetContext', 3), ('enableService', 2), ('getNextFillRequest', 2), ('tapLogin', 2), ('getNextSaveRequest', 2), ('tearDown', 2), ('buildIkeSaProposalWithNormalModeCipher', 1), ('buildIkeSaProposalWithCombinedModeCipher', 1), ('buildChildSaProposalWithNormalModeCipher', 1), ('buildChildSaProposalWithCombinedModeCipher', 1), ('buildChildSaProposalWithOnlyCiphers', 1), ('onFill', 1), ('run', 1), ('applyCharSequenceTransformationToImageView', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('getActivity', 1), ('getFragmentManager', 1), ('getParent', 1), ('getPassButton', 1), ('setUp', 1), ('getPackageManager', 1), ('fail', 1), ('hasTelephony', 1), ('textClassifierTypes', 1), ('Bundle', 1), ('setup', 1), ('getTextClassifier', 1), ('getPackageName', 1), ('destroy', 1), ('checkSetAutoFill', 1), ('getAutofillHints', 1), ('textContextCommitted_withoutDatasets', 1), ('assertNoDatasetsEver', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java', 18), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java', 11), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/FillEventHistoryTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/CustomDescriptionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DialogTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DialogTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/DynamicAuthTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/AutoFinishSessionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/WebViewMultiScreenLoginActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineLoginActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/BlockCipherTestBase.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassificationManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/BoringLayoutTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk28/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/LoginWithStringsActivityTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/AuthBoundKeyApp/src/com/android/cts/authboundkey/AuthBoundKeyAppTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/ValidatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/SaProposalTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/TimePickerTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/RequiredComponentsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/StartActivityTests.java', 1), ('/home/gpoor/cts-source/cts/tests/providerui/src/android/providerui/cts/MediaStoreUiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TwoLineListItemTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySystemDecorationTests.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/OnClickActionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/AppExitTest/src/android/app/cts/ActivityManagerAppExitInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/DialogTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CarrierConfigManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/TimePickerTestCase.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/VirtualContainerActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/EglContextTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/ViewAttributesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/style/cts/StrikethroughSpanTest.java', 1)]"	"[('(1,XTS,/android/autofillservice/cts/LoginWithStringsActivityTest.java)', 1), ('(1,AES,/com/android/cts/authboundkey/AuthBoundKeyAppTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java)', 1), ('(3,XTS,/android/autofillservice/cts/ValidatorTest.java)', 1), ('(3,XTS,/android/server/wm/AppConfigurationTests.java)', 1), ('(2,XTS,/android/suspendapps/cts/DialogTests.java)', 1), ('(23,AES,/android/net/ipsec/ike/cts/SaProposalTest.java)', 1), ('(17,AES,/android/security/identity/cts/DynamicAuthTest.java)', 1), ('(9,XTS,/android/autofillservice/cts/saveui/CustomDescriptionTest.java)', 1), ('(79,XTS,/android/security/cts/SELinuxHostTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/commontests/TimePickerTestCase.java)', 1), ('(1,XTS,/android/os/cts/RequiredComponentsTest.java)', 1), ('(6,XTS,/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/AutoFinishSessionTest.java)', 1), ('(1,XTS,/android/server/wm/StartActivityTests.java)', 1), ('(43,XTS,/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java)', 1), ('(2,XTS,/android/providerui/cts/MediaStoreUiTest.java)', 1), ('(1,XTS,/android/widget/cts/TwoLineListItemTest.java)', 1), ('(37,AES,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(3,XTS,/android/suspendapps/cts/DialogTests.java)', 1), ('(1,XTS,/android/server/wm/MultiDisplaySystemDecorationTests.java)', 1), ('(3,XTS,/android/autofillservice/cts/OnClickActionTest.java)', 1), ('(26,XTS,/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java)', 1), ('(11,XTS,/android/autofillservice/cts/servicebehavior/WebViewMultiScreenLoginActivityTest.java)', 1), ('(2,AES,/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java)', 1), ('(2,XTS,/android/app/cts/ActivityManagerAppExitInfoTest.java)', 1), ('(4,XTS,/android/autofillservice/cts/inline/InlineLoginActivityTest.java)', 1), ('(4,XTS,/android/app/cts/DialogTest.java)', 1), ('(3,AES,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(1,XTS,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(1,AES,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(1,XTS,/android/telephony/cts/CarrierConfigManagerTest.java)', 1), ('(4,XTS,/android/view/textclassifier/cts/TextClassificationManagerTest.java)', 1), ('(17,XTS,/android/text/cts/BoringLayoutTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/TimePickerTestCase.java)', 1), ('(1,XTS,/android/autofillservice/cts/VirtualContainerActivityTest.java)', 1), ('(1,XTS,/android/opengl/cts/EglContextTest.java)', 1), ('(2,XTS,/android/security/SELinuxTargetSdkTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/ViewAttributesTest.java)', 1), ('(7,XTS,/android/autofillservice/cts/FillEventHistoryTest.java)', 1), ('(1,XTS,/android/text/style/cts/StrikethroughSpanTest.java)', 1)]"	"[('([2:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[2]:method_text:[performClick();        });        mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_GENERIC);    }   ])', 4), ('([1:/android/suspendapps/cts/DialogTests.java]:[XTS]:[1]:method_text:[     assertFalse(""Test package still suspended"", mTestAppInterface.isTestAppSuspended());    }   ])', 2), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[    assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""PASS"");    }   ])', 2), ('([3:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[3]:method_text:[       assertTextValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""pass"");    }   ])', 2), ('([4:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[4]:method_text:[       }            } finally {                closeDevice(id);            }        }    }   ])', 2), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[                       new String[] { ""otherId"", ""myId""}, new float[] { 0.80F, 0.2F })});    }   ])', 2), ('([2:/android/autofillservice/cts/inline/InlineLoginActivityTest.java]:[XTS]:[2]:method_text:[             findNodeByResourceId(request.structure, ID_PASSWORD).isFocused()).isFalse();    }   ])', 2), ('([1:/android/autofillservice/cts/LoginWithStringsActivityTest.java]:[XTS]:[1]:method_text:[    assertWithMessage(""extras not passed on save"").that(extraValue).isEqualTo(""4815162342"");    }}])', 1), ('([1:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[AES]:[1]:method_text:[    assertEquals(KeyProperties.AUTH_DEVICE_CREDENTIAL, info.getUserAuthenticationType());    }   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_INPUT), ""ID"");    }   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[       assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""pass"");    }}])', 1), ('([3:/android/autofillservice/cts/ValidatorTest.java]:[XTS]:[3]:method_text:[).findByAutofillId(id);        assertThat(validator.isValid(valueFinder)).isEqualTo(valid);    }}])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[XTS]:[3]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([1:/android/suspendapps/cts/DialogTests.java]:[XTS]:[1]:method_text:[      if (mTestAppInterface != null) {            mTestAppInterface.disconnect();        }    }}])', 1), ('([23:/android/net/ipsec/ike/cts/SaProposalTest.java]:[AES]:[23]:method_text:[(                COMBINED_MODE_CIPHERS, Collections.EMPTY_LIST, Collections.EMPTY_LIST);    }   ])', 1), ('([10:/android/security/identity/cts/DynamicAuthTest.java]:[AES]:[10]:method_text:[re done. Clean up after ourselves.        store.deleteCredentialByName(credentialName);    }   ])', 1), ('([7:/android/security/identity/cts/DynamicAuthTest.java]:[AES]:[7]:method_text:[taticAuthenticationData() throwing UnknownAuthenticationKeyException    // on an unknown auth key}])', 1), ('([3:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[3]:method_text:[Bot.saveForAutofill(true, SAVE_DATA_TYPE_GENERIC);        sReplier.getNextSaveRequest();    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""batch updated"");    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[);        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""transformed"");    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[xt = matchFirst ? ""polo"" : ""POLO"";        assertSaveUiIsShownWithTwoLines(expectedText);    }   ])', 1), ('([15:/android/security/cts/SELinuxHostTest.java]:[XTS]:[15]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[XTS]:[1]:method_text:[rohibition of socket use with the     * only exceptions for the automotive device type.     */   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[XTS]:[1]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([11:/android/security/cts/SELinuxHostTest.java]:[XTS]:[11]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([8:/android/security/cts/SELinuxHostTest.java]:[XTS]:[8]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([7:/android/security/cts/SELinuxHostTest.java]:[XTS]:[7]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([9:/android/security/cts/SELinuxHostTest.java]:[XTS]:[9]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([8:/android/security/cts/SELinuxHostTest.java]:[XTS]:[8]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([4:/android/security/cts/SELinuxHostTest.java]:[XTS]:[4]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([9:/android/security/cts/SELinuxHostTest.java]:[XTS]:[9]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([6:/android/security/cts/SELinuxHostTest.java]:[XTS]:[6]:method_text:[at all types on /data have the data_file_type attribute.     *     * @throws Exception     */   ])', 1), ('([1:/android/autofillservice/cts/commontests/TimePickerTestCase.java]:[XTS]:[1]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_OUTPUT), ""10:40"");    }}])', 1), ('([1:/android/os/cts/RequiredComponentsTest.java]:[XTS]:[1]:method_text:[         & ApplicationInfo.FLAG_SYSTEM) == ApplicationInfo.FLAG_SYSTEM);    }    @AppModeFull   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java]:[XTS]:[2]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_INPUT), ""ID"");    }   ])', 1), ('([4:/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java]:[XTS]:[4]:method_text:[ity2.syncRunOnUiThread(() -> {            activity2.mInput.setFocusable(false);        });    }}])', 1), ('([1:/android/autofillservice/cts/AutoFinishSessionTest.java]:[XTS]:[1]:method_text:[    .getAutofillValue().getTextValue().toString()).isEqualTo(view + ""-filled"");        }    }   ])', 1), ('([1:/android/autofillservice/cts/AutoFinishSessionTest.java]:[XTS]:[1]:method_text:[            .getAutofillValue().getTextValue().toString()).isEqualTo(""editText1-filled"");    }   ])', 1), ('([1:/android/server/wm/StartActivityTests.java]:[XTS]:[1]:method_text:[ctivity}     * {@link android.content.Context} with the {@code FLAG_ACTIVITY_NEW_TASK}.     */   ])', 1), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[ activity, so it indirectly     * tests the integration of Autofill with Accessibility.     */   ])', 1), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[**     * Emulates an app dyanmically adding the password field after username is typed.     */   ])', 1), ('([2:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[2]:method_text:[ /**     * Emulates an app using fragments to display username and password in 2 steps.     */   ])', 1), ('([7:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[7]:method_text:[  assertTextAndValue(findNodeByResourceId(structure2, ID_PASSWORD), ""42"");    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[unched        WelcomeActivity.assertShowing(mUiBot, ""Saved by the bell"");    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[);        assertThat(actualMyId).isEqualTo(new MyAutofillId(expectedId));    }    @Presubmit   ])', 1), ('([6:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[6]:method_text:[SURRECTION);        mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_GENERIC);    }    @Presubmit   ])', 1), ('([3:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[3]:method_text:[tAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""42"");    }    @Presubmit   ])', 1), ('([3:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[3]:method_text:[w activity     * finishes:     * the Save UI should have been restored.     */    @Presubmit   ])', 1), ('([2:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[2]:method_text:[     /* start= */ 8,  /* end= */ 15, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);        return ss;    }}])', 1), ('([2:/android/providerui/cts/MediaStoreUiTest.java]:[XTS]:[2]:method_text:[                FileUtils.copy(source, target);            }        }        return file;    }}])', 1), ('([1:/android/widget/cts/TwoLineListItemTest.java]:[XTS]:[1]:method_text:[xt2),                twoLineListItem.getText2().getText().toString());    }    @UiThreadTest   ])', 1), ('([6:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[6]:method_text:[     }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([7:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[7]:method_text:[       }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[2]:method_text:[     }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([14:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[14]:method_text:[ll expected mandatory stream combinations are present and     * advertised accordingly.     */   ])', 1), ('([1:/android/suspendapps/cts/DialogTests.java]:[XTS]:[1]:method_text:[        TEST_APP_PACKAGE_NAME, incomingIntent.getStringExtra(Intent.EXTRA_PACKAGE_NAME));    }   ])', 1), ('([1:/android/suspendapps/cts/DialogTests.java]:[XTS]:[1]:method_text:[erface.disconnect();        }        mUiDevice.pressBack();        mUiDevice.pressHome();    }}])', 1), ('([1:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[XTS]:[1]:method_text:[  assertFalse(expectCommand(stream, callCursorUpdates, TIMEOUT).getReturnBooleanValue());    }   ])', 1), ('([3:/android/autofillservice/cts/OnClickActionTest.java]:[XTS]:[3]:method_text:[esourceId) {        mUiBot.assertGoneByRelativeId(saveUi, resourceId, Timeouts.UI_TIMEOUT);    }}])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[;        assertFillEventForFieldsClassification(events.get(0), fieldId.get(), ""cat"", 1);    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[        assertFillEventForFieldsClassification(events.get(0), fieldId.get(), ""card"", 1);    }   ])', 1), ('([4:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[4]:method_text:[        assertFillEventForFieldsClassification(events.get(0), fieldId.get(), ""myId"", 1);    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[ ""cat1"", ""cat2""},                                new float[] {1, 1})                });    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[2ndId"", ""1stId"" },                            new float[] { 0.66F, 0.5F }) });        }    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[         new FieldClassificationResult(fieldId2.get(), ""myId"", 0.6F),                });    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[t(),                                new String[] { ""otherId"" }, new float[] { 0.2F })});    }   ])', 1), ('([4:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[4]:method_text:[ssertFillEventForFieldsClassification(defaultUserDataEvent, fieldId2.get(), ""cat"", 1.0F);    }   ])', 1), (""([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[ull'     * v multiple fields     * v multiple value     * - combinations of above items     */}])"", 1), ('([6:/android/autofillservice/cts/servicebehavior/WebViewMultiScreenLoginActivityTest.java]:[XTS]:[6]:method_text:[Request2.structure, HTML_NAME_PASSWORD), ""sweet"");        mUiBot.assertSaveNotShowing();    }   ])', 1), ('([5:/android/autofillservice/cts/servicebehavior/WebViewMultiScreenLoginActivityTest.java]:[XTS]:[5]:method_text:[tyComponent();        assertThat(componentCurrent).isEqualTo(mActivity.getComponentName());    }}])', 1), ('([2:/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java]:[AES]:[2]:method_text:[iometricManager mBiometricManager;        private KeyguardManager mKeyguardManager;        private])', 1), ('([2:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[XTS]:[2]:method_text:[tSep, start);        assertTrue(end > start);        return dump.substring(start, end);    }   ])', 1), ('([4:/android/app/cts/DialogTest.java]:[XTS]:[4]:method_text:[e, defValue),                ta.getInt(R.styleable.TextAppearance_textStyle, defValue));    }   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[AES]:[1]:method_text:[));    }    /**     * Tests {@link WifiManager#isWpa3SaeSupported()} does not crash.     */   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[AES]:[2]:method_text:[    }    /**     * Tests {@link WifiManager#isWpa3SuiteBSupported()} does not crash.     */   ])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[XTS]:[1]:method_text:[xt,                    subarray(decryptedPlaintext, 0, basePlaintext.length));        }    }   ])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[AES]:[1]:method_text:[param);            fail();        } catch (InvalidAlgorithmParameterException expected) {}    }}])', 1), ('([1:/android/telephony/cts/CarrierConfigManagerTest.java]:[XTS]:[1]:method_text:[E_BOOL.startsWith(                                CarrierConfigManager.Gps.KEY_PREFIX));    }   ])', 1), ('([3:/android/view/textclassifier/cts/TextClassificationManagerTest.java]:[XTS]:[3]:method_text:[;        }    }    @After    public void tearDown() {        mClassifier.destroy();    }   ])', 1), ('([1:/android/view/textclassifier/cts/TextClassificationManagerTest.java]:[XTS]:[1]:method_text:[ assertThat(conversationAction.getConfidenceScore()).isIn(Range.closed(0f, 1.0f));        }    }}])', 1), ('([6:/android/text/cts/BoringLayoutTest.java]:[XTS]:[6]:method_text:[ToBitmap(layoutWithPrecomputed);        assertTrue(msg, resultBMP.sameAs(expectedBMP));    }   ])', 1), ('([11:/android/text/cts/BoringLayoutTest.java]:[XTS]:[11]:method_text:[ALE,                                DEFAULT_METRICS,                                true);    }}])', 1), ('([1:/android/autofillservice/cts/TimePickerTestCase.java]:[XTS]:[1]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_OUTPUT), ""10:40"");    }}])', 1), (""([1:/android/autofillservice/cts/VirtualContainerActivityTest.java]:[XTS]:[1]:method_text:[    // shown again, but then we wouldn't be effectively testing that the context was committed   ])"", 1), ('([1:/android/opengl/cts/EglContextTest.java]:[XTS]:[1]:method_text:[blic class EglContextTest {    /**     * Tests creating then releasing an EGL context.     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[XTS]:[1]:method_text:[* Verify that selinux context is the expected type based on     * targetSdkVersion = 28     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[XTS]:[1]:method_text:[9,c256,c512,c768\\n"" +            ""Actual value: "";        appDataContext(context, msg);    }   ])', 1), ('([2:/android/autofillservice/cts/ViewAttributesTest.java]:[XTS]:[2]:method_text:[ntexts.size()).isEqualTo(1);        test.accept(request.contexts.get(0).getStructure());    }   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[e.getFillEvents(1);        assertFillEventForSaveShown(events.get(0), NULL_DATASET_ID);    }   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[Id, ""id2"");            assertThat(event2.getManuallyEnteredField()).isEmpty();        }    }   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[by the user,     * neither the user entered values that were present in these datasets.     */   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[re selected by the user,     * and the user changed the values provided by the service.     */   ])', 1), (""([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[ected by the user,     * and the user didn't change the values provided by the service.     */   ])"", 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[entered values that match what was provided by the service on different     * datasets.     */   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[  assertThat(manuallyEnteredFields.get(passwordId)).containsExactly(""id2"", ""id3"");        }    }}])', 1), ('([1:/android/text/style/cts/StrikethroughSpanTest.java]:[XTS]:[1]:method_text:[  text, 0, text.length(), tp, largeWidth).build();        return layout.getLineWidth(0);    }   ])', 1)]"	""	""	"[('XTS', 91), ('AES', 14)]"	"[('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSanitizeOnSaveWhenAppChangeValues None]', 6), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testAutoFillOneDatasetAndSave None]', 4), ('[android.suspendapps.cts.DialogTests testInterceptorActivity_unsuspend None]', 2), ('[android.suspendapps.cts.DialogTests testInterceptorActivity_moreDetails None]', 2), ('[android.autofillservice.cts.LoginWithStringsActivityTest testAutoFillOneDatasetAndSave None]', 1), ('[com.android.cts.authboundkey.AuthBoundKeyAppTest testGenerateAuthBoundKey None]', 1), ('[android.autofillservice.cts.inline.InlineSimpleSaveActivityTest testAutofillSave None]', 1), ('[android.autofillservice.cts.inline.InlineSimpleSaveActivityTest testAutofill_oneDatasetAndSave None]', 1), ('[android.autofillservice.cts.ValidatorTest testDontShowUiWhenValidatorFails None]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating None]', 1), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthTest None]', 1), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthWithExpirationTest None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeBatchUpdates None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeTransformations None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest assertSaveUiWithoutCustomDescriptionIsShown None]', 1), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo None]', 1), ('[android.security.cts.SELinuxHostTest testAllDomainsEnforcing None]', 1), ('[android.security.cts.SELinuxHostTest testMLSAttributes None]', 1), ('[android.security.cts.SELinuxHostTest testValidSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospServiceContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidServiceContexts None]', 1), ('[android.autofillservice.cts.commontests.TimePickerTestCase testAutoFillAndSave None]', 1), ('[android.os.cts.RequiredComponentsTest testExtServicesPresent None]', 1), ('[android.autofillservice.cts.servicebehavior.MultiScreenDifferentActivitiesTest testActivityNotDelayedIsNotMerged None]', 1), ('[android.autofillservice.cts.servicebehavior.MultiScreenDifferentActivitiesTest testDelayedActivityIsMerged None]', 1), ('[android.autofillservice.cts.AutoFinishSessionTest isNotNull None]', 1), ('[android.autofillservice.cts.AutoFinishSessionTest hideParentToFinishSession None]', 1), ('[android.server.wm.StartActivityTests testStartActivityContexts None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testAutoFillOneDatasetAndSave_usingUiAutomatorOnly None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSave_afterRotation None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSave_launchIntent None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSaveWithParcelableOnClientState None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testTapHomeWhileSaveUiIsShowing None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSelectedDatasetsAreSentOnSaveRequest None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testExplicitlySaveButtonOnly None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testTapUrlSpanOnSuccinctDescription_tapBackWithoutFinish None]', 1), ('[android.providerui.cts.MediaStoreUiTest testGetDocumentUri_Symmetry None]', 1), ('[android.widget.cts.TwoLineListItemTest testGetTexts None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testBasicTriggerSequence None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testSimultaneousTriggers None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAfThenAeTrigger None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAeThenAfTrigger None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAeAndAfCausality None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testOisDataMode None]', 1), ('[android.suspendapps.cts.DialogTests testInterceptorActivity_strings None]', 1), ('[android.server.wm.MultiDisplaySystemDecorationTests testCrossDisplayBasicImeOperations None]', 1), ('[android.autofillservice.cts.OnClickActionTest testHideAndShow None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_exactMatchLast4Algorithm None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_CreditCardAlgorithm None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_useDefaultAlgorithm None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_sameValueForMultipleCategories None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_oneDetectableField_bestMatchIsSecond None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_oneUserData_manyDetectableFields None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_manyDetectableFields None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_manyDetectableFields_differentClassificationAlgo None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserDataPerField_manyDetectableFields None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_usePackageUserData None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_mergeUserData_manyDetectableFields None]', 1), ('[android.autofillservice.cts.servicebehavior.WebViewMultiScreenLoginActivityTest testSave_eachFieldSeparately None]', 1), ('[android.autofillservice.cts.servicebehavior.WebViewMultiScreenLoginActivityTest testSave_bothFieldsAtOnce None]', 1), ('[com.android.cts.verifier.security.UnlockedDeviceRequiredTest setPassFailButtonClickListeners None]', 1), ('[android.app.cts.ActivityManagerAppExitInfoTest testOther None]', 1), ('[android.autofillservice.cts.inline.InlineLoginActivityTest testAutofill_disjointDatasets None]', 1), ('[android.autofillservice.cts.inline.InlineLoginActivityTest testAutofill_selectDatasetThenHideInlineSuggestion None]', 1), ('[android.app.cts.DialogTest testConstructor_protectedNotCancellableEsc None]', 1), ('[android.net.wifi.cts.WifiManagerTest testGetCurrentNetwork None]', 1), ('[android.net.wifi.cts.WifiManagerTest testIsWpa3SaeSupported None]', 1), ('[android.keystore.cts.BlockCipherTestBase testGeneratedPadding None]', 1), ('[android.keystore.cts.BlockCipherTestBase testVeryLargeBlock None]', 1), ('[android.telephony.cts.CarrierConfigManagerTest isDataCapable None]', 1), ('[android.view.textclassifier.cts.TextClassificationManagerTest testLanguageDetection_nullRequest None]', 1), ('[android.text.cts.BoringLayoutTest testDraw None]', 1), ('[android.text.cts.BoringLayoutTest testPrecomputedText None]', 1), ('[android.autofillservice.cts.TimePickerTestCase testAutoFillAndSave None]', 1), ('[android.autofillservice.cts.VirtualContainerActivityTest testSave_submitButtonClicked None]', 1), ('[android.security.SELinuxTargetSdkTest testAppDomainContext None]', 1), ('[android.security.SELinuxTargetSdkTest testAppDataContext None]', 1), ('[android.autofillservice.cts.ViewAttributesTest isNull None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_idlessDatasetSelected_datasetWithIdIgnored None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_idlessDatasetIgnored_datasetWithIdSelected None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_oneDatasetSelected None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_multipleDatasetsSelected None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_noDatasetSelected_butManuallyEntered None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_noDatasetSelected_butManuallyEntered_matchingMultipleDatasets None]', 1), ('[android.text.style.cts.StrikethroughSpanTest testWriteToParcel None]', 1)]"
"9.9.3.1  . File Based Encryption with Metadata Encryption"	"9.9.3.1"	"C-1-8"	"9.9.3.1/C-1-8"	"09090301.670108"	"""C-1-8] CE keys MUST be bound to a user's lock screen credentials."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.15  . Instant Apps"	"3.15"	"C-1-2"	"3.15/C-1-2"	"03150000.670102"	"""C-1-2] MUST provide a user affordance to view and delete Instant Apps locally cached for each individual app package."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"3.15  . Instant Apps"	"3.15"	"C-1-4"	"3.15/C-1-4"	"03150000.670104"	"""C-1-4] MUST allow running Instant Apps to be accessed from the Recents function if the Recents function is available on the device."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"7.3.4  . Gyroscope"	"7.3.4"	"A-2-2"	"7.3.4/A-2-2"	"07030400.650202"	"""[7.3.4/A-2-2] MUST also implement the TYPE_GYROSCOPE_UNCALIBRATED sensor. """	""	""	"TYPE_GYROSCOPE_UNCALIBRATED"	""	""	""	""	""	""	""	""	"[('android.hardware.cts.SingleSensorTests', 9), ('android.hardware.cts.SensorBatchingTests', 4), ('android.hardware.cts.SensorSupportTest', 2), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.hardware.cts.SensorIntegrationTests', 1)]"	""	""	"[('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SingleSensorTests.java', 9), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorBatchingTests.java', 4), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 2), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorIntegrationTests.java', 1)]"	"[('(1,TYPE_GYROSCOPE_UNCALIBRATED,/android/hardware/cts/SensorDirectReportTest.java)', 1), ('(9,TYPE_GYROSCOPE_UNCALIBRATED,/android/hardware/cts/SingleSensorTests.java)', 1), ('(4,TYPE_GYROSCOPE_UNCALIBRATED,/android/hardware/cts/SensorBatchingTests.java)', 1), ('(1,TYPE_GYROSCOPE_UNCALIBRATED,/android/hardware/cts/SensorIntegrationTests.java)', 1), ('(2,TYPE_GYROSCOPE_UNCALIBRATED,/android/hardware/cts/SensorSupportTest.java)', 1)]"	"[('([1:/android/hardware/cts/SensorDirectReportTest.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[OSCOPE,                                             Sensor.TYPE_GYROSCOPE_UNCALIBRATED);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[   runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, SensorManager.SENSOR_DELAY_FASTEST);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_200HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_100HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[ throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_50HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[ throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_25HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[ throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_15HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[ throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_10HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[) throws Throwable {        runSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_5HZ);    }   ])', 1), ('([1:/android/hardware/cts/SingleSensorTests.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[() throws Throwable {        runSensorTest(Sensor.TYPE_LINEAR_ACCELERATION, RATE_100HZ);    }   ])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[runBatchingSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[   runBatchingSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[   runFlushSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_FASTEST, BATCHING_PERIOD);    }   ])', 1), ('([1:/android/hardware/cts/SensorBatchingTests.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[      runFlushSensorTest(Sensor.TYPE_GYROSCOPE_UNCALIBRATED, RATE_50HZ, BATCHING_PERIOD);    }   ])', 1), ('([1:/android/hardware/cts/SensorIntegrationTests.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[rowable {        verifySensorReconfigureWhileActive(Sensor.TYPE_GYROSCOPE_UNCALIBRATED);    }   ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[ensorSupport(Sensor.TYPE_GYROSCOPE_UNCALIBRATED);    }    @CddTest(requirement=""7.3.9/C-2-5"")   ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[TYPE_GYROSCOPE_UNCALIBRATED]:[1]:method_text:[     return (mSensorManager != null && mSensorManager.getDefaultSensor(sensorType) != null);    }}])', 1)]"	""	""	"[('TYPE_GYROSCOPE_UNCALIBRATED', 17)]"	"[('[android.hardware.cts.SensorDirectReportTest testRateIndependencyGyroUncalGyroSingleChannel None]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_fastest None]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_200hz None]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_100hz None]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_50hz None]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_25hz None]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_15hz None]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_10hz None]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_5hz None]', 1), ('[android.hardware.cts.SingleSensorTests testGyroscopeUncalibrated_1hz None]', 1), ('[android.hardware.cts.SensorBatchingTests testGyroscopeUncalibrated_fastest_batching None]', 1), ('[android.hardware.cts.SensorBatchingTests testGyroscopeUncalibrated_50hz_batching None]', 1), ('[android.hardware.cts.SensorBatchingTests testGyroscopeUncalibrated_fastest_flush None]', 1), ('[android.hardware.cts.SensorBatchingTests testGyroscopeUncalibrated_50hz_flush None]', 1), ('[android.hardware.cts.SensorIntegrationTests testUncalibratedGyroscopeReconfigureWhileActive None]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsGyroscopeUncalibrated None]', 1), ('[android.hardware.cts.SensorSupportTest testSupportsRotationVectorIfHasAGM None]', 1)]"
"9.9.3.1  . File Based Encryption with Metadata Encryption"	"9.9.3.1"	"C-1-11"	"9.9.3.1/C-1-11"	"09090301.670111"	"""C-1-11] MUST use the mandatorily supported ciphers, key lengths and modes. SHOULD make preinstalled essential apps (e.g. Alarm, Phone, Messenger) Direct Boot aware. The upstream Android Open Source project provides a preferred implementation of File Based Encryption based on the Linux kernel ""fscrypt"" encryption feature, and of Metadata Encryption based on the Linux kernel ""dm-default-key"" feature. <h4 id=""9_9_3_2_per-user_block-level_encryption"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3.2  . Per"	"9.9.3.2"	""	"9.9.3.2"	"09090302.48"	"""data-text="" 9.9.3.2. Per-User Block-Level Encryption ""> 9.9.3.2. Per-User Block-Level Encryption If device implementations use per-user block-level encryption, they: [C-1-1] MUST enable multi-user support as described in section 9.5. [C-1-2] MUST provide per-user partitions, either using raw partitions or logical volumes. [C-1-3] MUST use unique and distinct encryption keys per-user for encryption of the underlying block devices. [C-1-4] MUST use AES-256-XTS for block-level encryption of the user partitions. The keys protecting the per-user block-level encrypted devices: [C-1-5] MUST be cryptographically bound to a hardware-backed Keystore. This keystore MUST be bound to Verified Boot and the device's hardware root of trust. [C-1-6] MUST be bound to the corresponding user's lock screen credentials. Per-user block-level encryption can be implemented using the Linux kernel “dm-crypt” feature over per-user partitions. <h4 id=""9_9_4_resume_on_reboot"" """	""	""	"XTS AES"	""	""	""	""	""	""	""	""	"[('android.autofillservice.cts.saveui.SimpleSaveActivityTest', 18), ('android.security.cts.SELinuxHostTest', 11), ('android.autofillservice.cts.servicebehavior.FieldsClassificationTest', 11), ('android.autofillservice.cts.FillEventHistoryTest', 7), ('android.hardware.camera2.cts.RobustnessTest', 6), ('android.suspendapps.cts.DialogTests', 5), ('android.autofillservice.cts.saveui.CustomDescriptionTest', 4), ('android.autofillservice.cts.inline.InlineSimpleSaveActivityTest', 2), ('android.security.identity.cts.DynamicAuthTest', 2), ('android.autofillservice.cts.servicebehavior.MultiScreenDifferentActivitiesTest', 2), ('android.autofillservice.cts.AutoFinishSessionTest', 2), ('android.autofillservice.cts.servicebehavior.WebViewMultiScreenLoginActivityTest', 2), ('android.autofillservice.cts.inline.InlineLoginActivityTest', 2), ('android.net.wifi.cts.WifiManagerTest', 2), ('android.keystore.cts.BlockCipherTestBase', 2), ('android.view.textclassifier.cts.TextClassificationManagerTest', 2), ('android.text.cts.BoringLayoutTest', 2), ('android.security.SELinuxTargetSdkTest', 2), ('android.autofillservice.cts.LoginWithStringsActivityTest', 1), ('com.android.cts.authboundkey.AuthBoundKeyAppTest', 1), ('android.autofillservice.cts.ValidatorTest', 1), ('android.server.wm.AppConfigurationTests', 1), ('android.net.ipsec.ike.cts.SaProposalTest', 1), ('android.autofillservice.cts.commontests.TimePickerTestCase', 1), ('android.os.cts.RequiredComponentsTest', 1), ('android.server.wm.StartActivityTests', 1), ('android.providerui.cts.MediaStoreUiTest', 1), ('android.widget.cts.TwoLineListItemTest', 1), ('android.server.wm.MultiDisplaySystemDecorationTests', 1), ('android.autofillservice.cts.OnClickActionTest', 1), ('com.android.cts.verifier.security.UnlockedDeviceRequiredTest', 1), ('android.app.cts.ActivityManagerAppExitInfoTest', 1), ('android.app.cts.DialogTest', 1), ('android.telephony.cts.CarrierConfigManagerTest', 1), ('android.autofillservice.cts.TimePickerTestCase', 1), ('android.autofillservice.cts.VirtualContainerActivityTest', 1), ('android.opengl.cts.EglContextTest', 1), ('android.autofillservice.cts.ViewAttributesTest', 1), ('android.text.style.cts.StrikethroughSpanTest', 1)]"	"[('build', 13), ('Builder', 4), ('getContext', 4), ('getTargetContext', 3), ('enableService', 2), ('getNextFillRequest', 2), ('tapLogin', 2), ('getNextSaveRequest', 2), ('tearDown', 2), ('buildIkeSaProposalWithNormalModeCipher', 1), ('buildIkeSaProposalWithCombinedModeCipher', 1), ('buildChildSaProposalWithNormalModeCipher', 1), ('buildChildSaProposalWithCombinedModeCipher', 1), ('buildChildSaProposalWithOnlyCiphers', 1), ('onFill', 1), ('run', 1), ('applyCharSequenceTransformationToImageView', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('getActivity', 1), ('getFragmentManager', 1), ('getParent', 1), ('getPassButton', 1), ('setUp', 1), ('getPackageManager', 1), ('fail', 1), ('hasTelephony', 1), ('textClassifierTypes', 1), ('Bundle', 1), ('setup', 1), ('getTextClassifier', 1), ('getPackageName', 1), ('destroy', 1), ('checkSetAutoFill', 1), ('getAutofillHints', 1), ('textContextCommitted_withoutDatasets', 1), ('assertNoDatasetsEver', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java', 18), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java', 11), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/FillEventHistoryTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/CustomDescriptionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DialogTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DialogTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/DynamicAuthTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/AutoFinishSessionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/WebViewMultiScreenLoginActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineLoginActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/BlockCipherTestBase.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassificationManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/BoringLayoutTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk28/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/LoginWithStringsActivityTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/AuthBoundKeyApp/src/com/android/cts/authboundkey/AuthBoundKeyAppTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/ValidatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/SaProposalTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/TimePickerTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/RequiredComponentsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/StartActivityTests.java', 1), ('/home/gpoor/cts-source/cts/tests/providerui/src/android/providerui/cts/MediaStoreUiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TwoLineListItemTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySystemDecorationTests.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/OnClickActionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/AppExitTest/src/android/app/cts/ActivityManagerAppExitInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/DialogTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CarrierConfigManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/TimePickerTestCase.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/VirtualContainerActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/EglContextTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/ViewAttributesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/style/cts/StrikethroughSpanTest.java', 1)]"	"[('(1,XTS,/android/autofillservice/cts/LoginWithStringsActivityTest.java)', 1), ('(1,AES,/com/android/cts/authboundkey/AuthBoundKeyAppTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java)', 1), ('(3,XTS,/android/autofillservice/cts/ValidatorTest.java)', 1), ('(3,XTS,/android/server/wm/AppConfigurationTests.java)', 1), ('(2,XTS,/android/suspendapps/cts/DialogTests.java)', 1), ('(23,AES,/android/net/ipsec/ike/cts/SaProposalTest.java)', 1), ('(17,AES,/android/security/identity/cts/DynamicAuthTest.java)', 1), ('(9,XTS,/android/autofillservice/cts/saveui/CustomDescriptionTest.java)', 1), ('(79,XTS,/android/security/cts/SELinuxHostTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/commontests/TimePickerTestCase.java)', 1), ('(1,XTS,/android/os/cts/RequiredComponentsTest.java)', 1), ('(6,XTS,/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/AutoFinishSessionTest.java)', 1), ('(1,XTS,/android/server/wm/StartActivityTests.java)', 1), ('(43,XTS,/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java)', 1), ('(2,XTS,/android/providerui/cts/MediaStoreUiTest.java)', 1), ('(1,XTS,/android/widget/cts/TwoLineListItemTest.java)', 1), ('(37,AES,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(3,XTS,/android/suspendapps/cts/DialogTests.java)', 1), ('(1,XTS,/android/server/wm/MultiDisplaySystemDecorationTests.java)', 1), ('(3,XTS,/android/autofillservice/cts/OnClickActionTest.java)', 1), ('(26,XTS,/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java)', 1), ('(11,XTS,/android/autofillservice/cts/servicebehavior/WebViewMultiScreenLoginActivityTest.java)', 1), ('(2,AES,/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java)', 1), ('(2,XTS,/android/app/cts/ActivityManagerAppExitInfoTest.java)', 1), ('(4,XTS,/android/autofillservice/cts/inline/InlineLoginActivityTest.java)', 1), ('(4,XTS,/android/app/cts/DialogTest.java)', 1), ('(3,AES,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(1,XTS,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(1,AES,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(1,XTS,/android/telephony/cts/CarrierConfigManagerTest.java)', 1), ('(4,XTS,/android/view/textclassifier/cts/TextClassificationManagerTest.java)', 1), ('(17,XTS,/android/text/cts/BoringLayoutTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/TimePickerTestCase.java)', 1), ('(1,XTS,/android/autofillservice/cts/VirtualContainerActivityTest.java)', 1), ('(1,XTS,/android/opengl/cts/EglContextTest.java)', 1), ('(2,XTS,/android/security/SELinuxTargetSdkTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/ViewAttributesTest.java)', 1), ('(7,XTS,/android/autofillservice/cts/FillEventHistoryTest.java)', 1), ('(1,XTS,/android/text/style/cts/StrikethroughSpanTest.java)', 1)]"	"[('([2:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[2]:method_text:[performClick();        });        mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_GENERIC);    }   ])', 4), ('([1:/android/suspendapps/cts/DialogTests.java]:[XTS]:[1]:method_text:[     assertFalse(""Test package still suspended"", mTestAppInterface.isTestAppSuspended());    }   ])', 2), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[    assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""PASS"");    }   ])', 2), ('([3:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[3]:method_text:[       assertTextValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""pass"");    }   ])', 2), ('([4:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[4]:method_text:[       }            } finally {                closeDevice(id);            }        }    }   ])', 2), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[                       new String[] { ""otherId"", ""myId""}, new float[] { 0.80F, 0.2F })});    }   ])', 2), ('([2:/android/autofillservice/cts/inline/InlineLoginActivityTest.java]:[XTS]:[2]:method_text:[             findNodeByResourceId(request.structure, ID_PASSWORD).isFocused()).isFalse();    }   ])', 2), ('([1:/android/autofillservice/cts/LoginWithStringsActivityTest.java]:[XTS]:[1]:method_text:[    assertWithMessage(""extras not passed on save"").that(extraValue).isEqualTo(""4815162342"");    }}])', 1), ('([1:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[AES]:[1]:method_text:[    assertEquals(KeyProperties.AUTH_DEVICE_CREDENTIAL, info.getUserAuthenticationType());    }   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_INPUT), ""ID"");    }   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[       assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""pass"");    }}])', 1), ('([3:/android/autofillservice/cts/ValidatorTest.java]:[XTS]:[3]:method_text:[).findByAutofillId(id);        assertThat(validator.isValid(valueFinder)).isEqualTo(valid);    }}])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[XTS]:[3]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([1:/android/suspendapps/cts/DialogTests.java]:[XTS]:[1]:method_text:[      if (mTestAppInterface != null) {            mTestAppInterface.disconnect();        }    }}])', 1), ('([23:/android/net/ipsec/ike/cts/SaProposalTest.java]:[AES]:[23]:method_text:[(                COMBINED_MODE_CIPHERS, Collections.EMPTY_LIST, Collections.EMPTY_LIST);    }   ])', 1), ('([10:/android/security/identity/cts/DynamicAuthTest.java]:[AES]:[10]:method_text:[re done. Clean up after ourselves.        store.deleteCredentialByName(credentialName);    }   ])', 1), ('([7:/android/security/identity/cts/DynamicAuthTest.java]:[AES]:[7]:method_text:[taticAuthenticationData() throwing UnknownAuthenticationKeyException    // on an unknown auth key}])', 1), ('([3:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[3]:method_text:[Bot.saveForAutofill(true, SAVE_DATA_TYPE_GENERIC);        sReplier.getNextSaveRequest();    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""batch updated"");    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[);        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""transformed"");    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[xt = matchFirst ? ""polo"" : ""POLO"";        assertSaveUiIsShownWithTwoLines(expectedText);    }   ])', 1), ('([15:/android/security/cts/SELinuxHostTest.java]:[XTS]:[15]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[XTS]:[1]:method_text:[rohibition of socket use with the     * only exceptions for the automotive device type.     */   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[XTS]:[1]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([11:/android/security/cts/SELinuxHostTest.java]:[XTS]:[11]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([8:/android/security/cts/SELinuxHostTest.java]:[XTS]:[8]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([7:/android/security/cts/SELinuxHostTest.java]:[XTS]:[7]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([9:/android/security/cts/SELinuxHostTest.java]:[XTS]:[9]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([8:/android/security/cts/SELinuxHostTest.java]:[XTS]:[8]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([4:/android/security/cts/SELinuxHostTest.java]:[XTS]:[4]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([9:/android/security/cts/SELinuxHostTest.java]:[XTS]:[9]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([6:/android/security/cts/SELinuxHostTest.java]:[XTS]:[6]:method_text:[at all types on /data have the data_file_type attribute.     *     * @throws Exception     */   ])', 1), ('([1:/android/autofillservice/cts/commontests/TimePickerTestCase.java]:[XTS]:[1]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_OUTPUT), ""10:40"");    }}])', 1), ('([1:/android/os/cts/RequiredComponentsTest.java]:[XTS]:[1]:method_text:[         & ApplicationInfo.FLAG_SYSTEM) == ApplicationInfo.FLAG_SYSTEM);    }    @AppModeFull   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java]:[XTS]:[2]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_INPUT), ""ID"");    }   ])', 1), ('([4:/android/autofillservice/cts/servicebehavior/MultiScreenDifferentActivitiesTest.java]:[XTS]:[4]:method_text:[ity2.syncRunOnUiThread(() -> {            activity2.mInput.setFocusable(false);        });    }}])', 1), ('([1:/android/autofillservice/cts/AutoFinishSessionTest.java]:[XTS]:[1]:method_text:[    .getAutofillValue().getTextValue().toString()).isEqualTo(view + ""-filled"");        }    }   ])', 1), ('([1:/android/autofillservice/cts/AutoFinishSessionTest.java]:[XTS]:[1]:method_text:[            .getAutofillValue().getTextValue().toString()).isEqualTo(""editText1-filled"");    }   ])', 1), ('([1:/android/server/wm/StartActivityTests.java]:[XTS]:[1]:method_text:[ctivity}     * {@link android.content.Context} with the {@code FLAG_ACTIVITY_NEW_TASK}.     */   ])', 1), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[ activity, so it indirectly     * tests the integration of Autofill with Accessibility.     */   ])', 1), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[**     * Emulates an app dyanmically adding the password field after username is typed.     */   ])', 1), ('([2:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[2]:method_text:[ /**     * Emulates an app using fragments to display username and password in 2 steps.     */   ])', 1), ('([7:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[7]:method_text:[  assertTextAndValue(findNodeByResourceId(structure2, ID_PASSWORD), ""42"");    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[unched        WelcomeActivity.assertShowing(mUiBot, ""Saved by the bell"");    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[);        assertThat(actualMyId).isEqualTo(new MyAutofillId(expectedId));    }    @Presubmit   ])', 1), ('([6:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[6]:method_text:[SURRECTION);        mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_GENERIC);    }    @Presubmit   ])', 1), ('([3:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[3]:method_text:[tAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""42"");    }    @Presubmit   ])', 1), ('([3:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[3]:method_text:[w activity     * finishes:     * the Save UI should have been restored.     */    @Presubmit   ])', 1), ('([2:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[XTS]:[2]:method_text:[     /* start= */ 8,  /* end= */ 15, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);        return ss;    }}])', 1), ('([2:/android/providerui/cts/MediaStoreUiTest.java]:[XTS]:[2]:method_text:[                FileUtils.copy(source, target);            }        }        return file;    }}])', 1), ('([1:/android/widget/cts/TwoLineListItemTest.java]:[XTS]:[1]:method_text:[xt2),                twoLineListItem.getText2().getText().toString());    }    @UiThreadTest   ])', 1), ('([6:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[6]:method_text:[     }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([7:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[7]:method_text:[       }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[2]:method_text:[     }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([14:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[14]:method_text:[ll expected mandatory stream combinations are present and     * advertised accordingly.     */   ])', 1), ('([1:/android/suspendapps/cts/DialogTests.java]:[XTS]:[1]:method_text:[        TEST_APP_PACKAGE_NAME, incomingIntent.getStringExtra(Intent.EXTRA_PACKAGE_NAME));    }   ])', 1), ('([1:/android/suspendapps/cts/DialogTests.java]:[XTS]:[1]:method_text:[erface.disconnect();        }        mUiDevice.pressBack();        mUiDevice.pressHome();    }}])', 1), ('([1:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[XTS]:[1]:method_text:[  assertFalse(expectCommand(stream, callCursorUpdates, TIMEOUT).getReturnBooleanValue());    }   ])', 1), ('([3:/android/autofillservice/cts/OnClickActionTest.java]:[XTS]:[3]:method_text:[esourceId) {        mUiBot.assertGoneByRelativeId(saveUi, resourceId, Timeouts.UI_TIMEOUT);    }}])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[;        assertFillEventForFieldsClassification(events.get(0), fieldId.get(), ""cat"", 1);    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[        assertFillEventForFieldsClassification(events.get(0), fieldId.get(), ""card"", 1);    }   ])', 1), ('([4:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[4]:method_text:[        assertFillEventForFieldsClassification(events.get(0), fieldId.get(), ""myId"", 1);    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[ ""cat1"", ""cat2""},                                new float[] {1, 1})                });    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[2ndId"", ""1stId"" },                            new float[] { 0.66F, 0.5F }) });        }    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[         new FieldClassificationResult(fieldId2.get(), ""myId"", 0.6F),                });    }   ])', 1), ('([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[t(),                                new String[] { ""otherId"" }, new float[] { 0.2F })});    }   ])', 1), ('([4:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[4]:method_text:[ssertFillEventForFieldsClassification(defaultUserDataEvent, fieldId2.get(), ""cat"", 1.0F);    }   ])', 1), (""([2:/android/autofillservice/cts/servicebehavior/FieldsClassificationTest.java]:[XTS]:[2]:method_text:[ull'     * v multiple fields     * v multiple value     * - combinations of above items     */}])"", 1), ('([6:/android/autofillservice/cts/servicebehavior/WebViewMultiScreenLoginActivityTest.java]:[XTS]:[6]:method_text:[Request2.structure, HTML_NAME_PASSWORD), ""sweet"");        mUiBot.assertSaveNotShowing();    }   ])', 1), ('([5:/android/autofillservice/cts/servicebehavior/WebViewMultiScreenLoginActivityTest.java]:[XTS]:[5]:method_text:[tyComponent();        assertThat(componentCurrent).isEqualTo(mActivity.getComponentName());    }}])', 1), ('([2:/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java]:[AES]:[2]:method_text:[iometricManager mBiometricManager;        private KeyguardManager mKeyguardManager;        private])', 1), ('([2:/android/app/cts/ActivityManagerAppExitInfoTest.java]:[XTS]:[2]:method_text:[tSep, start);        assertTrue(end > start);        return dump.substring(start, end);    }   ])', 1), ('([4:/android/app/cts/DialogTest.java]:[XTS]:[4]:method_text:[e, defValue),                ta.getInt(R.styleable.TextAppearance_textStyle, defValue));    }   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[AES]:[1]:method_text:[));    }    /**     * Tests {@link WifiManager#isWpa3SaeSupported()} does not crash.     */   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[AES]:[2]:method_text:[    }    /**     * Tests {@link WifiManager#isWpa3SuiteBSupported()} does not crash.     */   ])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[XTS]:[1]:method_text:[xt,                    subarray(decryptedPlaintext, 0, basePlaintext.length));        }    }   ])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[AES]:[1]:method_text:[param);            fail();        } catch (InvalidAlgorithmParameterException expected) {}    }}])', 1), ('([1:/android/telephony/cts/CarrierConfigManagerTest.java]:[XTS]:[1]:method_text:[E_BOOL.startsWith(                                CarrierConfigManager.Gps.KEY_PREFIX));    }   ])', 1), ('([3:/android/view/textclassifier/cts/TextClassificationManagerTest.java]:[XTS]:[3]:method_text:[;        }    }    @After    public void tearDown() {        mClassifier.destroy();    }   ])', 1), ('([1:/android/view/textclassifier/cts/TextClassificationManagerTest.java]:[XTS]:[1]:method_text:[ assertThat(conversationAction.getConfidenceScore()).isIn(Range.closed(0f, 1.0f));        }    }}])', 1), ('([6:/android/text/cts/BoringLayoutTest.java]:[XTS]:[6]:method_text:[ToBitmap(layoutWithPrecomputed);        assertTrue(msg, resultBMP.sameAs(expectedBMP));    }   ])', 1), ('([11:/android/text/cts/BoringLayoutTest.java]:[XTS]:[11]:method_text:[ALE,                                DEFAULT_METRICS,                                true);    }}])', 1), ('([1:/android/autofillservice/cts/TimePickerTestCase.java]:[XTS]:[1]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_OUTPUT), ""10:40"");    }}])', 1), (""([1:/android/autofillservice/cts/VirtualContainerActivityTest.java]:[XTS]:[1]:method_text:[    // shown again, but then we wouldn't be effectively testing that the context was committed   ])"", 1), ('([1:/android/opengl/cts/EglContextTest.java]:[XTS]:[1]:method_text:[blic class EglContextTest {    /**     * Tests creating then releasing an EGL context.     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[XTS]:[1]:method_text:[* Verify that selinux context is the expected type based on     * targetSdkVersion = 28     */   ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[XTS]:[1]:method_text:[9,c256,c512,c768\\n"" +            ""Actual value: "";        appDataContext(context, msg);    }   ])', 1), ('([2:/android/autofillservice/cts/ViewAttributesTest.java]:[XTS]:[2]:method_text:[ntexts.size()).isEqualTo(1);        test.accept(request.contexts.get(0).getStructure());    }   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[e.getFillEvents(1);        assertFillEventForSaveShown(events.get(0), NULL_DATASET_ID);    }   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[Id, ""id2"");            assertThat(event2.getManuallyEnteredField()).isEmpty();        }    }   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[by the user,     * neither the user entered values that were present in these datasets.     */   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[re selected by the user,     * and the user changed the values provided by the service.     */   ])', 1), (""([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[ected by the user,     * and the user didn't change the values provided by the service.     */   ])"", 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[entered values that match what was provided by the service on different     * datasets.     */   ])', 1), ('([1:/android/autofillservice/cts/FillEventHistoryTest.java]:[XTS]:[1]:method_text:[  assertThat(manuallyEnteredFields.get(passwordId)).containsExactly(""id2"", ""id3"");        }    }}])', 1), ('([1:/android/text/style/cts/StrikethroughSpanTest.java]:[XTS]:[1]:method_text:[  text, 0, text.length(), tp, largeWidth).build();        return layout.getLineWidth(0);    }   ])', 1)]"	""	""	"[('XTS', 91), ('AES', 14)]"	"[('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSanitizeOnSaveWhenAppChangeValues None]', 6), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testAutoFillOneDatasetAndSave None]', 4), ('[android.suspendapps.cts.DialogTests testInterceptorActivity_unsuspend None]', 2), ('[android.suspendapps.cts.DialogTests testInterceptorActivity_moreDetails None]', 2), ('[android.autofillservice.cts.LoginWithStringsActivityTest testAutoFillOneDatasetAndSave None]', 1), ('[com.android.cts.authboundkey.AuthBoundKeyAppTest testGenerateAuthBoundKey None]', 1), ('[android.autofillservice.cts.inline.InlineSimpleSaveActivityTest testAutofillSave None]', 1), ('[android.autofillservice.cts.inline.InlineSimpleSaveActivityTest testAutofill_oneDatasetAndSave None]', 1), ('[android.autofillservice.cts.ValidatorTest testDontShowUiWhenValidatorFails None]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating None]', 1), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthTest None]', 1), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthWithExpirationTest None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeBatchUpdates None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeTransformations None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest assertSaveUiWithoutCustomDescriptionIsShown None]', 1), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo None]', 1), ('[android.security.cts.SELinuxHostTest testAllDomainsEnforcing None]', 1), ('[android.security.cts.SELinuxHostTest testMLSAttributes None]', 1), ('[android.security.cts.SELinuxHostTest testValidSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospServiceContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidServiceContexts None]', 1), ('[android.autofillservice.cts.commontests.TimePickerTestCase testAutoFillAndSave None]', 1), ('[android.os.cts.RequiredComponentsTest testExtServicesPresent None]', 1), ('[android.autofillservice.cts.servicebehavior.MultiScreenDifferentActivitiesTest testActivityNotDelayedIsNotMerged None]', 1), ('[android.autofillservice.cts.servicebehavior.MultiScreenDifferentActivitiesTest testDelayedActivityIsMerged None]', 1), ('[android.autofillservice.cts.AutoFinishSessionTest isNotNull None]', 1), ('[android.autofillservice.cts.AutoFinishSessionTest hideParentToFinishSession None]', 1), ('[android.server.wm.StartActivityTests testStartActivityContexts None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testAutoFillOneDatasetAndSave_usingUiAutomatorOnly None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSave_afterRotation None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSave_launchIntent None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSaveWithParcelableOnClientState None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testTapHomeWhileSaveUiIsShowing None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSelectedDatasetsAreSentOnSaveRequest None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testExplicitlySaveButtonOnly None]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testTapUrlSpanOnSuccinctDescription_tapBackWithoutFinish None]', 1), ('[android.providerui.cts.MediaStoreUiTest testGetDocumentUri_Symmetry None]', 1), ('[android.widget.cts.TwoLineListItemTest testGetTexts None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testBasicTriggerSequence None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testSimultaneousTriggers None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAfThenAeTrigger None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAeThenAfTrigger None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAeAndAfCausality None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testOisDataMode None]', 1), ('[android.suspendapps.cts.DialogTests testInterceptorActivity_strings None]', 1), ('[android.server.wm.MultiDisplaySystemDecorationTests testCrossDisplayBasicImeOperations None]', 1), ('[android.autofillservice.cts.OnClickActionTest testHideAndShow None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_exactMatchLast4Algorithm None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_CreditCardAlgorithm None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_useDefaultAlgorithm None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_sameValueForMultipleCategories None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_oneDetectableField_bestMatchIsSecond None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_oneUserData_manyDetectableFields None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_manyDetectableFields None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserData_manyDetectableFields_differentClassificationAlgo None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_manyUserDataPerField_manyDetectableFields None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_usePackageUserData None]', 1), ('[android.autofillservice.cts.servicebehavior.FieldsClassificationTest testHit_mergeUserData_manyDetectableFields None]', 1), ('[android.autofillservice.cts.servicebehavior.WebViewMultiScreenLoginActivityTest testSave_eachFieldSeparately None]', 1), ('[android.autofillservice.cts.servicebehavior.WebViewMultiScreenLoginActivityTest testSave_bothFieldsAtOnce None]', 1), ('[com.android.cts.verifier.security.UnlockedDeviceRequiredTest setPassFailButtonClickListeners None]', 1), ('[android.app.cts.ActivityManagerAppExitInfoTest testOther None]', 1), ('[android.autofillservice.cts.inline.InlineLoginActivityTest testAutofill_disjointDatasets None]', 1), ('[android.autofillservice.cts.inline.InlineLoginActivityTest testAutofill_selectDatasetThenHideInlineSuggestion None]', 1), ('[android.app.cts.DialogTest testConstructor_protectedNotCancellableEsc None]', 1), ('[android.net.wifi.cts.WifiManagerTest testGetCurrentNetwork None]', 1), ('[android.net.wifi.cts.WifiManagerTest testIsWpa3SaeSupported None]', 1), ('[android.keystore.cts.BlockCipherTestBase testGeneratedPadding None]', 1), ('[android.keystore.cts.BlockCipherTestBase testVeryLargeBlock None]', 1), ('[android.telephony.cts.CarrierConfigManagerTest isDataCapable None]', 1), ('[android.view.textclassifier.cts.TextClassificationManagerTest testLanguageDetection_nullRequest None]', 1), ('[android.text.cts.BoringLayoutTest testDraw None]', 1), ('[android.text.cts.BoringLayoutTest testPrecomputedText None]', 1), ('[android.autofillservice.cts.TimePickerTestCase testAutoFillAndSave None]', 1), ('[android.autofillservice.cts.VirtualContainerActivityTest testSave_submitButtonClicked None]', 1), ('[android.security.SELinuxTargetSdkTest testAppDomainContext None]', 1), ('[android.security.SELinuxTargetSdkTest testAppDataContext None]', 1), ('[android.autofillservice.cts.ViewAttributesTest isNull None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_idlessDatasetSelected_datasetWithIdIgnored None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_idlessDatasetIgnored_datasetWithIdSelected None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_oneDatasetSelected None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_multipleDatasetsSelected None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_noDatasetSelected_butManuallyEntered None]', 1), ('[android.autofillservice.cts.FillEventHistoryTest testContextCommitted_noDatasetSelected_butManuallyEntered_matchingMultipleDatasets None]', 1), ('[android.text.style.cts.StrikethroughSpanTest testWriteToParcel None]', 1)]"
"9.9.3.2  . Per"	"9.9.3.2"	"C-1-3"	"9.9.3.2/C-1-3"	"09090302.670103"	"""C-1-3] MUST use unique and distinct encryption keys per-user for encryption of the underlying block devices."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3.2  . Per"	"9.9.3.2"	"C-1-1"	"9.9.3.2/C-1-1"	"09090302.670101"	"""C-1-1] MUST enable multi-user support as described in section 9.5."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3.1  . File Based Encryption with Metadata Encryption"	"9.9.3.1"	"C-1-12"	"9.9.3.1/C-1-12"	"09090301.670112"	"""C-1-12] If the device has Advanced Encryption Standard (AES) instructions (such as ARMv8 Cryptography Extensions on ARM-based devices, or AES-NI on x86-based devices) then the AES-based options above for file name, file contents, and filesystem metadata encryption MUST be used, not Adiantum."""	""	""	"ARM AES"	""	""	""	""	""	""	""	""	"[('android.alarmmanager.cts.ExactAlarmsTest', 21), ('com.android.cts.splitapp.SplitAppTest', 17), ('android.widget.cts.DatePickerTest', 10), ('android.hardware.camera2.cts.RobustnessTest', 9), ('android.app.cts.AlarmManagerTest', 8), ('android.alarmmanager.cts.AppStandbyTests', 6), ('android.dynamicmime.testapp.SingleAppTest', 4), ('android.provider.cts.media.MediaStorePlacementTest', 4), ('android.dynamicmime.testapp.ComplexFilterTest', 4), ('android.car.cts.CarAppFocusManagerTest', 3), ('android.alarmmanager.cts.UidCapTests', 3), ('android.keystore.cts.ImportWrappedKeyTest', 3), ('android.security.identity.cts.DynamicAuthTest', 2), ('android.os.cts.batterysaving.BatterySaverTest', 2), ('android.os.cts.CpuInstructionsTest', 2), ('android.net.wifi.cts.WifiManagerTest', 2), ('android.keystore.cts.KeyStoreTest', 2), ('com.android.cts.authboundkey.AuthBoundKeyAppTest', 1), ('android.net.ipsec.ike.cts.SaProposalTest', 1), ('android.media.cts.AudioTrackLatencyTest', 1), ('android.provider.cts.settings.SettingsTest', 1), ('android.view.inputmethod.cts.InputConnectionWrapperTest', 1), ('android.display.cts.BrightnessTest', 1), ('android.provider.cts.media.MediaStore_Audio_Genres_MembersTest', 1), ('android.security.cts.ProcessMustUseSeccompTest', 1), ('android.car.cts.CarPropertyManagerTest', 1), ('android.view.inputmethod.cts.BaseInputConnectionTest', 1), ('com.android.cts.verifier.security.UnlockedDeviceRequiredTest', 1), ('android.media.cts.RingtoneTest', 1), ('android.telephony.ims.cts.ImsServiceTest', 1), ('android.keystore.cts.BlockCipherTestBase', 1), ('android.hardware.camera2.cts.CaptureRequestTest', 1), ('android.media.cts.MediaScannerTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.harmfulappwarning.testapp.HarmfulAppWarningDeviceTest', 1), ('android.media.cts.AudioPlaybackCaptureTest', 1), ('android.os.cts.VibrationAttributesTest', 1)]"	"[('setUp', 10), ('getInstrumentation', 6), ('getSimpleName', 5), ('getAction', 5), ('getUiDevice', 5), ('getTargetContext', 4), ('build', 3), ('getOpPackageName', 3), ('commitAndAwaitPropagation', 3), ('tearDown', 3), ('Builder', 2), ('AlarmManagerDeviceConfigHelper', 2), ('getCar', 2), ('getPropertyId', 2), ('countDown', 2), ('getHost', 2), ('click', 2), ('buildIkeSaProposalWithNormalModeCipher', 1), ('buildIkeSaProposalWithCombinedModeCipher', 1), ('buildChildSaProposalWithNormalModeCipher', 1), ('buildChildSaProposalWithCombinedModeCipher', 1), ('buildChildSaProposalWithOnlyCiphers', 1), ('getPackageManager', 1), ('getName', 1), ('dumpState', 1), ('resetAppOp', 1), ('updateAlarmManagerConstants', 1), ('putDeviceToIdle', 1), ('enableChange', 1), ('resetChanges', 1), ('getActiveAppTypes', 1), ('Object', 1), ('assertOnChangeEventCalled', 1), ('assertOnChangeEventNotCalled', 1), ('launchBaseActivity_withThemeWarm_warmApplied', 1), ('launchBaseActivity_withThemeWarmLt_warmLtApplied', 1), ('launchWarmActivity_withThemeBase_baseApplied', 1), ('launchWarmActivity_withThemeBaseLt_baseLtApplied', 1), ('launchWarmActivity_withThemeWarm_warmApplied', 1), ('launchWarmActivity_withThemeWarmLt_warmLtApplied', 1), ('launchWarmActivity_withThemeRose_roseApplied', 1), ('launchWarmActivity_withThemeRoseLt_roseLtApplied', 1), ('launchRoseActivity_withThemeWarm_warmApplied', 1), ('launchRoseActivity_withThemeWarmLt_warmLtApplied', 1), ('getPassButton', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('getActivity', 1), ('sufficientAlarmsAllowedByDefault', 1), ('getMessage', 1), ('alarmsCannotExceedLimit', 1), ('cancelAlarms', 1), ('clear', 1), ('deleteAlarmManagerConstants', 1), ('restoreAll', 1), ('verifyWarningShown', 1), ('getText', 1), ('verifySampleActivityLaunched', 1), ('verifySampleActivityNotLaunched', 1), ('clickLaunchAnyway', 1), ('clickUninstall', 1), ('getContext', 1), ('getMatchingUsages', 1), ('getExcludeUsages', 1), ('getMatchingUids', 1), ('getExcludeUids', 1), ('setup', 1), ('SecureRandom', 1), ('StringBuilder', 1), ('toString', 1), ('BroadcastReceiver', 1), ('elapsedRealtime', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/ExactAlarmsTest.java', 21), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/SplitAppTest.java', 17), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/DatePickerTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 9), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlarmManagerTest.java', 8), ('/home/gpoor/cts-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/AppStandbyTests.java', 6), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/SingleAppTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStorePlacementTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/packagemanager/dynamicmime/test/src/android/dynamicmime/testapp/ComplexFilterTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarAppFocusManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/UidCapTests.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/ImportWrappedKeyTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/DynamicAuthTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/batterysaving/src/android/os/cts/batterysaving/BatterySaverTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/CpuInstructionsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyStoreTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/AuthBoundKeyApp/src/com/android/cts/authboundkey/AuthBoundKeyAppTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/SaProposalTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioTrackLatencyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/settings/SettingsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/display/src/android/display/cts/BrightnessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/ProcessMustUseSeccompTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarPropertyManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/BaseInputConnectionTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/RingtoneTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/BlockCipherTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaScannerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/harmfulappwarning/testapp/src/android/harmfulappwarning/testapp/HarmfulAppWarningDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackCaptureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/VibrationAttributesTest.java', 1)]"	"[('(1,AES,/com/android/cts/authboundkey/AuthBoundKeyAppTest.java)', 1), ('(23,AES,/android/net/ipsec/ike/cts/SaProposalTest.java)', 1), ('(3,ARM,/android/media/cts/AudioTrackLatencyTest.java)', 1), ('(17,AES,/android/security/identity/cts/DynamicAuthTest.java)', 1), ('(1,ARM,/android/provider/cts/settings/SettingsTest.java)', 1), ('(2,ARM,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(5,ARM,/android/dynamicmime/testapp/SingleAppTest.java)', 1), ('(180,ARM,/android/alarmmanager/cts/ExactAlarmsTest.java)', 1), ('(9,ARM,/android/os/cts/batterysaving/BatterySaverTest.java)', 1), ('(1,ARM,/android/display/cts/BrightnessTest.java)', 1), ('(3,ARM,/android/car/cts/CarAppFocusManagerTest.java)', 1), ('(2,ARM,/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java)', 1), ('(1,ARM,/android/security/cts/ProcessMustUseSeccompTest.java)', 1), ('(3,ARM,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(37,AES,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(1,ARM,/android/car/cts/CarPropertyManagerTest.java)', 1), ('(7,ARM,/android/os/cts/CpuInstructionsTest.java)', 1), ('(64,ARM,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(2,ARM,/android/view/inputmethod/cts/BaseInputConnectionTest.java)', 1), ('(2,AES,/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java)', 1), ('(2,ARM,/android/media/cts/RingtoneTest.java)', 1), ('(5,ARM,/android/provider/cts/media/MediaStorePlacementTest.java)', 1), ('(2,ARM,/android/telephony/ims/cts/ImsServiceTest.java)', 1), ('(3,AES,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(1,AES,/android/keystore/cts/BlockCipherTestBase.java)', 1), ('(23,ARM,/android/widget/cts/DatePickerTest.java)', 1), ('(4,ARM,/android/dynamicmime/testapp/ComplexFilterTest.java)', 1), ('(47,ARM,/android/alarmmanager/cts/UidCapTests.java)', 1), ('(4,ARM,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(1,ARM,/android/media/cts/MediaScannerTest.java)', 1), ('(11,ARM,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(7,ARM,/android/harmfulappwarning/testapp/HarmfulAppWarningDeviceTest.java)', 1), ('(1,ARM,/android/media/cts/AudioPlaybackCaptureTest.java)', 1), ('(2,ARM,/android/keystore/cts/KeyStoreTest.java)', 1), ('(1,ARM,/android/os/cts/VibrationAttributesTest.java)', 1), ('(180,ARM,/android/app/cts/AlarmManagerTest.java)', 1), ('(16,AES,/android/keystore/cts/ImportWrappedKeyTest.java)', 1), ('(125,ARM,/android/alarmmanager/cts/AppStandbyTests.java)', 1)]"	"[('([15:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[15]:method_text:[                    AlarmReceiver.waitForAlarm(id, DEFAULT_WAIT_FOR_SUCCESS));        }    }   ])', 2), ('([4:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[4]:method_text:[       }            } finally {                closeDevice(id);            }        }    }   ])', 2), ('([4:/com/android/cts/splitapp/SplitAppTest.java]:[ARM]:[4]:method_text:[TIVITY,                resolveResourceId(TestThemeHelper.THEME_WARM), ThemeColors.WARM);    }   ])', 2), ('([4:/com/android/cts/splitapp/SplitAppTest.java]:[ARM]:[4]:method_text:[ITY,                resolveResourceId(TestThemeHelper.THEME_WARM), ThemeColors.WARM_LT);    }   ])', 2), ('([1:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[AES]:[1]:method_text:[    assertEquals(KeyProperties.AUTH_DEVICE_CREDENTIAL, info.getUserAuthenticationType());    }   ])', 1), ('([23:/android/net/ipsec/ike/cts/SaProposalTest.java]:[AES]:[23]:method_text:[(                COMBINED_MODE_CIPHERS, Collections.EMPTY_LIST, Collections.EMPTY_LIST);    }   ])', 1), ('([3:/android/media/cts/AudioTrackLatencyTest.java]:[ARM]:[3]:method_text:[e is less than capacity.    // We want to make sure the track starts properly and is not stuck.   ])', 1), ('([10:/android/security/identity/cts/DynamicAuthTest.java]:[AES]:[10]:method_text:[re done. Clean up after ourselves.        store.deleteCredentialByName(credentialName);    }   ])', 1), ('([7:/android/security/identity/cts/DynamicAuthTest.java]:[AES]:[7]:method_text:[taticAuthenticationData() throwing UnknownAuthenticationKeyException    // on an unknown auth key}])', 1), ('([1:/android/provider/cts/settings/SettingsTest.java]:[ARM]:[1]:method_text:[            if (cursor != null) {                cursor.close();            }        }    }   ])', 1), ('([2:/android/view/inputmethod/cts/InputConnectionWrapperTest.java]:[ARM]:[2]:method_text:[ */);        verify(inputConnection, times(1)).commitContent(inputContentInfo, 0, null);    }   ])', 1), ('([1:/android/dynamicmime/testapp/SingleAppTest.java]:[ARM]:[1]:method_text:[_PNG);        clearMimeGroup(GROUP_FIRST);        assertMimeGroupIsEmpty(GROUP_FIRST);    }   ])', 1), ('([1:/android/dynamicmime/testapp/SingleAppTest.java]:[ARM]:[1]:method_text:[LAIN);        clearMimeGroup(GROUP_FIRST);        assertMimeGroupIsEmpty(GROUP_FIRST);    }   ])', 1), ('([1:/android/dynamicmime/testapp/SingleAppTest.java]:[ARM]:[1]:method_text:[ssertMimeGroupIsEmpty(GROUP_FIRST);        assertMimeGroup(GROUP_SECOND, MIME_TEXT_ANY);    }   ])', 1), ('([2:/android/dynamicmime/testapp/SingleAppTest.java]:[ARM]:[2]:method_text:[ssertMimeGroup(GROUP_FIRST, MIME_TEXT_ANY);        assertMimeGroupIsEmpty(GROUP_SECOND);    }   ])', 1), ('([37:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[37]:method_text:[mAction,                PendingIntent.FLAG_MUTABLE | PendingIntent.FLAG_UPDATE_CURRENT);    }   ])', 1), ('([5:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[5]:method_text:[commitAndAwaitPropagation();        assertFalse(mAlarmManager.canScheduleExactAlarms());    }   ])', 1), ('([2:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[2]:method_text:[CKET_WORKING_SET,                AppStandbyUtils.getAppStandbyBucket(TEST_APP_PACKAGE));    }   ])', 1), ('([2:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[2]:method_text:[ion {        revokeAppOp();        assertFalse(mAlarmManager.canScheduleExactAlarms());    }   ])', 1), ('([5:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[5]:method_text:[.commitAndAwaitPropagation();        assertTrue(mAlarmManager.canScheduleExactAlarms());    }   ])', 1), ('([3:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[3]:method_text:[sult.get());        assertTrue(""canScheduleExactAlarm returned false"", apiResult.get());    }   ])', 1), ('([6:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[6]:method_text:[ty(                () -> mWhitelistManager.addToWhitelist(sContext.getOpPackageName()));    }   ])', 1), ('([3:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[3]:method_text:[lowWhileIdle(AlarmManager.ELAPSED_REALTIME, 0,                getAlarmSender(0, false));    }   ])', 1), ('([3:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[3]:method_text:[      mAlarmManager.setExact(AlarmManager.ELAPSED_REALTIME, 0, getAlarmSender(0, false));    }   ])', 1), ('([6:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[6]:method_text:[              Log.e(TAG, ""Alarm fired!"");                    }                }, null);    }   ])', 1), ('([9:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[9]:method_text:[                    AlarmReceiver.waitForAlarm(id, DEFAULT_WAIT_FOR_SUCCESS));        }    }   ])', 1), ('([11:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[11]:method_text:[ALLOW_WHILE_IDLE_QUOTA - quotaToReclaim + 1);        return t + ALLOW_WHILE_IDLE_WINDOW;    }   ])', 1), ('([23:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[23]:method_text:[dle tempwhitelist"",                output -> (output.contains(selfUid) == whitelisted));    }   ])', 1), ('([13:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[13]:method_text:[m(id,                DEFAULT_WAIT_FOR_SUCCESS));        assertTempWhitelistState(true);    }   ])', 1), ('([6:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[6]:method_text:[m(id,                DEFAULT_WAIT_FOR_SUCCESS));        assertTempWhitelistState(true);    }   ])', 1), ('([4:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[4]:method_text:[;        i.setFlags(Intent.FLAG_RECEIVER_FOREGROUND);        sContext.sendBroadcast(i);    }   ])', 1), ('([1:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[1]:method_text:[.get());        } finally {            sContext.unregisterReceiver(receiver);        }    }   ])', 1), ('([4:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[4]:method_text:[   * Make sure canScheduleExactAlarms() returns the right value at after each operation.     */   ])', 1), ('([7:/android/alarmmanager/cts/ExactAlarmsTest.java]:[ARM]:[7]:method_text:["").commitAndAwaitPropagation();        assertTrue(mAlarmManager.canScheduleExactAlarms());    }}])', 1), ('([4:/android/os/cts/batterysaving/BatterySaverTest.java]:[ARM]:[4]:method_text:[        waitUntilJobForceAppStandby(false);        waitUntilForceBackgroundCheck(false);    }   ])', 1), ('([5:/android/os/cts/batterysaving/BatterySaverTest.java]:[ARM]:[5]:method_text:[  SettingsUtils.delete(SettingsUtils.NAMESPACE_GLOBAL, ""battery_saver_constants"");        }    }}])', 1), ('([1:/android/display/cts/BrightnessTest.java]:[ARM]:[1]:method_text:[ame + "" values must be "" + condition);            }            prev = values[i];        }    }}])', 1), ('([1:/android/car/cts/CarAppFocusManagerTest.java]:[ARM]:[1]:method_text:[ipLossAndAssert(                    DEFAULT_WAIT_TIMEOUT_MS, activeTypes[i]);        }    }   ])', 1), ('([1:/android/car/cts/CarAppFocusManagerTest.java]:[ARM]:[1]:method_text:[Manager.APP_FOCUS_TYPE_NAVIGATION, true));        mManager.removeFocusListener(change);    }   ])', 1), ('([1:/android/car/cts/CarAppFocusManagerTest.java]:[ARM]:[1]:method_text:[T_WAIT_TIMEOUT_MS,                CarAppFocusManager.APP_FOCUS_TYPE_NAVIGATION, false));    }   ])', 1), ('([2:/android/provider/cts/media/MediaStore_Audio_Genres_MembersTest.java]:[ARM]:[2]:method_text:[ll, null, null);            assertEquals(0, c.getCount());            c.close();        }    }}])', 1), ('([1:/android/security/cts/ProcessMustUseSeccompTest.java]:[ARM]:[1]:method_text:[e.configstore"", PS_CMD, true,                    false /* mustHaveProcess */);        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[ARM]:[1]:method_text:[uffer size in the     * available stream configurations for a surface with this format.     */   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[ARM]:[1]:method_text:[Number);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/RobustnessTest.java]:[ARM]:[1]:method_text:[ll expected mandatory stream combinations are present and     * advertised accordingly.     */   ])', 1), ('([6:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[6]:method_text:[     }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([7:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[7]:method_text:[       }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[2]:method_text:[     }            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([14:/android/hardware/camera2/cts/RobustnessTest.java]:[AES]:[14]:method_text:[ll expected mandatory stream combinations are present and     * advertised accordingly.     */   ])', 1), ('([1:/android/car/cts/CarPropertyManagerTest.java]:[ARM]:[1]:method_text:[G_BRAKE_ON);    }    /**     * Test for {@link CarPropertyManager#getPropertyList()}     */   ])', 1), ('([2:/android/os/cts/CpuInstructionsTest.java]:[ARM]:[2]:method_text:[s not allow access to CNTVCT register"",                CpuInstructions.canReadCntvct());    }   ])', 1), ('([5:/android/os/cts/CpuInstructionsTest.java]:[ARM]:[5]:method_text:[not support ARM CP15 barrier emulation"",                CpuInstructions.hasCp15Barriers());    }}])', 1), ('([6:/com/android/cts/splitapp/SplitAppTest.java]:[ARM]:[6]:method_text:[n(NORESTART_PKG, INSTANT_APP_NORESTART_URI.getHost(),                false /*enabled*/);    }   ])', 1), ('([2:/com/android/cts/splitapp/SplitAppTest.java]:[ARM]:[2]:method_text:[pected native code in base"");        } catch (UnsatisfiedLinkError expected) {        }    }   ])', 1), ('([5:/com/android/cts/splitapp/SplitAppTest.java]:[ARM]:[5]:method_text:[);            i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);            return i;        }    }   ])', 1), ('([2:/com/android/cts/splitapp/SplitAppTest.java]:[ARM]:[2]:method_text:[> result = pm.queryBroadcastReceivers(intent, 0);        assertEquals(0, result.size());    }   ])', 1), ('([3:/com/android/cts/splitapp/SplitAppTest.java]:[ARM]:[3]:method_text:[that expect to remain intact over     * long periods of time, such as across app moves.     */   ])', 1), ('([4:/com/android/cts/splitapp/SplitAppTest.java]:[ARM]:[4]:method_text:[ntName(resolveInfo)                .equals(FEATURE_WARM_EMPTY_PROVIDER_NAME))).isTrue();    }   ])', 1), ('([6:/com/android/cts/splitapp/SplitAppTest.java]:[ARM]:[6]:method_text:[der.getDeclaredField(""sCreated"");        assertThat((boolean) field.get(null)).isTrue();    }   ])', 1), ('([2:/com/android/cts/splitapp/SplitAppTest.java]:[ARM]:[2]:method_text:[dThemeApplied(WARM_THEME_ACTIVITY, R.style.Theme_Base,                ThemeColors.BASE);    }   ])', 1), ('([2:/com/android/cts/splitapp/SplitAppTest.java]:[ARM]:[2]:method_text:[emeApplied(WARM_THEME_ACTIVITY, R.style.Theme_Base,                ThemeColors.BASE_LT);    }   ])', 1), ('([6:/com/android/cts/splitapp/SplitAppTest.java]:[ARM]:[6]:method_text:[TIVITY,                resolveResourceId(TestThemeHelper.THEME_WARM), ThemeColors.WARM);    }   ])', 1), ('([6:/com/android/cts/splitapp/SplitAppTest.java]:[ARM]:[6]:method_text:[ITY,                resolveResourceId(TestThemeHelper.THEME_WARM), ThemeColors.WARM_LT);    }   ])', 1), ('([2:/com/android/cts/splitapp/SplitAppTest.java]:[ARM]:[2]:method_text:[TIVITY,                resolveResourceId(TestThemeHelper.THEME_ROSE), ThemeColors.ROSE);    }   ])', 1), ('([2:/com/android/cts/splitapp/SplitAppTest.java]:[ARM]:[2]:method_text:[ITY,                resolveResourceId(TestThemeHelper.THEME_ROSE), ThemeColors.ROSE_LT);    }   ])', 1), ('([2:/android/view/inputmethod/cts/BaseInputConnectionTest.java]:[ARM]:[2]:method_text:[ text.     * setSelection: changes the selection position in the current editable text.     */   ])', 1), ('([2:/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java]:[AES]:[2]:method_text:[iometricManager mBiometricManager;        private KeyguardManager mKeyguardManager;        private])', 1), ('([2:/android/media/cts/RingtoneTest.java]:[ARM]:[2]:method_text:[gtone.isPlaying());        mRingtone.stop();        assertFalse(mRingtone.isPlaying());    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[ARM]:[1]:method_text:[e(updatePlacement(uri,                Optional.of(Environment.DIRECTORY_ALARMS), null));    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[ARM]:[1]:method_text:[nally able to delete it        assertEquals(1, mContentResolver.delete(probeUri, null));    }   ])', 1), ('([1:/android/provider/cts/media/MediaStorePlacementTest.java]:[ARM]:[1]:method_text:[, mValues, mExtras);            fail();        } catch (Exception expected) {        }    }   ])', 1), ('([2:/android/provider/cts/media/MediaStorePlacementTest.java]:[ARM]:[2]:method_text:[ll, null) == 1);        } catch (Exception tolerated) {            return false;        }    }}])', 1), ('([2:/android/telephony/ims/cts/ImsServiceTest.java]:[ARM]:[2]:method_text:[arrierImsService();            sServiceConnector.disconnectDeviceImsService();        }    }   ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[AES]:[1]:method_text:[));    }    /**     * Tests {@link WifiManager#isWpa3SaeSupported()} does not crash.     */   ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[AES]:[2]:method_text:[    }    /**     * Tests {@link WifiManager#isWpa3SuiteBSupported()} does not crash.     */   ])', 1), ('([1:/android/keystore/cts/BlockCipherTestBase.java]:[AES]:[1]:method_text:[param);            fail();        } catch (InvalidAlgorithmParameterException expected) {}    }}])', 1), ('([2:/android/widget/cts/DatePickerTest.java]:[ARM]:[2]:method_text:[de =                (DatePicker) mActivity.findViewById(R.id.date_picker_calendar_mode);    }   ])', 1), ('([1:/android/widget/cts/DatePickerTest.java]:[ARM]:[1]:method_text:[2000, 10, 15);        verifyZeroInteractions(mockDateChangeListener);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/DatePickerTest.java]:[ARM]:[1]:method_text:[989, 9, 19);        verifyNoMoreInteractions(mockDateChangeListener);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/DatePickerTest.java]:[ARM]:[1]:method_text:[DateChangeListener2, times(1)).onDateChanged(datePicker, 2000, 10, 15);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/DatePickerTest.java]:[ARM]:[1]:method_text:[updateDate(1989, 9, 19);        assertValues(datePicker, 1989, 9, 19);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/DatePickerTest.java]:[ARM]:[1]:method_text:[te(), minDate);        assertEquals(datePicker.getMaxDate(), maxDate);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/DatePickerTest.java]:[ARM]:[1]:method_text:[        assertEquals(Calendar.SUNDAY, datePicker.getFirstDayOfWeek());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/DatePickerTest.java]:[ARM]:[1]:method_text:[kerSpinnerMode);        verifyFirstDayOfWeek(mDatePickerCalendarMode);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/DatePickerTest.java]:[ARM]:[1]:method_text:[endar.get(Calendar.MONTH));        assertEquals(1, calendar.get(Calendar.DAY_OF_MONTH));    }   ])', 1), ('([13:/android/widget/cts/DatePickerTest.java]:[ARM]:[13]:method_text:[CalledOnRestoreInstanceState() {            return mCalledOnRestoreInstanceState;        }    }}])', 1), ('([1:/android/dynamicmime/testapp/ComplexFilterTest.java]:[ARM]:[1]:method_text:[AGE_PNG);        clearMimeGroup(GROUP_FIRST);        assertBothGroups(MIME_IMAGE_PNG);    }   ])', 1), ('([1:/android/dynamicmime/testapp/ComplexFilterTest.java]:[ARM]:[1]:method_text:[   clearMimeGroup(GROUP_FIRST);        assertBothGroups(MIME_IMAGE_PNG, MIME_TEXT_ANY);    }   ])', 1), ('([1:/android/dynamicmime/testapp/ComplexFilterTest.java]:[ARM]:[1]:method_text:[AIN);        clearMimeGroup(GROUP_FIRST);        assertGroupsAndType(MIME_TEXT_PLAIN);    }   ])', 1), ('([1:/android/dynamicmime/testapp/ComplexFilterTest.java]:[ARM]:[1]:method_text:[Groups(String... expectedTypes) {        assertMimeGroup(ALIAS_BOTH_GROUPS, expectedTypes);    }}])', 1), ('([19:/android/alarmmanager/cts/UidCapTests.java]:[ARM]:[19]:method_text:[etTargetContext();        mAlarmManager = mContext.getSystemService(AlarmManager.class);    }   ])', 1), ('([9:/android/alarmmanager/cts/UidCapTests.java]:[ARM]:[9]:method_text:[ption ["" + e.getMessage() + ""] while setting "" + i + ""th alarm"");            }        }    }   ])', 1), ('([19:/android/alarmmanager/cts/UidCapTests.java]:[ARM]:[19]:method_text:[  @After    public void deleteAlarmManagerConstants() {        mConfigHelper.restoreAll();    }}])', 1), ('([4:/android/hardware/camera2/cts/CaptureRequestTest.java]:[ARM]:[4]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/media/cts/MediaScannerTest.java]:[ARM]:[1]:method_text:[_mixed_3,                    new String[] {""谭咏麟"", ""二十年白金畅销金曲全记录"", null, ""知心当玩偶"", null})    };   ])', 1), ('([11:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[ARM]:[11]:method_text:[t.getPackageName(),                InstrumentationRegistry.getInstrumentation(), false);    }   ])', 1), ('([7:/android/harmfulappwarning/testapp/HarmfulAppWarningDeviceTest.java]:[ARM]:[7]:method_text:[    public void tearDown() {        mSampleActivityStartedReceiver.unregisterQuietly();    }   ])', 1), ('([1:/android/media/cts/AudioPlaybackCaptureTest.java]:[ARM]:[1]:method_text:[tributes.USAGE_ASSISTANT,            AudioAttributes.USAGE_NOTIFICATION,    };    @Presubmit   ])', 1), ('([1:/android/keystore/cts/KeyStoreTest.java]:[ARM]:[1]:method_text:[        }    }    // TODO(27810271): investigate why this is taking too long for armeabi-v7a   ])', 1), ('([1:/android/keystore/cts/KeyStoreTest.java]:[ARM]:[1]:method_text:[as + "" cert="" + c, t);            }        }    }    // http://b/857840: want JKS key store   ])', 1), ('([1:/android/os/cts/VibrationAttributesTest.java]:[ARM]:[1]:method_text:[  assertEquals(attr.getFlags(), 0);        assertEquals(attr.getAudioAttributes(), tmp);    }   ])', 1), ('([39:/android/app/cts/AlarmManagerTest.java]:[ARM]:[39]:method_text:[ mContext.unregisterReceiver(mMockAlarmReceiver2);        Thread.sleep(REGISTER_PAUSE);    }   ])', 1), ('([25:/android/app/cts/AlarmManagerTest.java]:[ARM]:[25]:method_text:[  }.run();        assertEquals(mMockAlarmReceiver.elapsedTime, mWakeupTime, TIME_DELTA);    }   ])', 1), ('([9:/android/app/cts/AlarmManagerTest.java]:[ARM]:[9]:method_text:[eck() {                return mMockAlarmReceiver.alarmed;            }        }.run();    }   ])', 1), ('([19:/android/app/cts/AlarmManagerTest.java]:[ARM]:[19]:method_text:[       deliveriesTogether <= MAX_NEAR_DELIVERIES);            }        }    }    @LargeTest   ])', 1), ('([17:/android/app/cts/AlarmManagerTest.java]:[ARM]:[17]:method_text:[   }.run();        assertTrue(mMockAlarmReceiver.alarmed);        mAm.cancel(mSender);    }   ])', 1), ('([14:/android/app/cts/AlarmManagerTest.java]:[ARM]:[14]:method_text:[assertFalse(mMockAlarmReceiver.alarmed);        assertTrue(mMockAlarmReceiver2.alarmed);    }   ])', 1), ('([4:/android/app/cts/AlarmManagerTest.java]:[ARM]:[4]:method_text:[ alarm driver: Permission denied"". But still fail        // after tried many permission.    }   ])', 1), ('([53:/android/app/cts/AlarmManagerTest.java]:[ARM]:[53]:method_text:[                    ? nextAlarmClock.getTriggerTime()                    : null);        }    }}])', 1), ('([1:/android/keystore/cts/ImportWrappedKeyTest.java]:[AES]:[1]:method_text:[    private static final int GCM_TAG_SIZE = 128;    SecureRandom random = new SecureRandom();   ])', 1), ('([3:/android/keystore/cts/ImportWrappedKeyTest.java]:[AES]:[3]:method_text:[RYPT_MODE, key);        assertEquals(new String(c.doFinal(encrypted)), ""hello, world"");    }   ])', 1), ('([12:/android/keystore/cts/ImportWrappedKeyTest.java]:[AES]:[12]:method_text:[(isStrongBoxBacked)                        .build());        return kpg.generateKeyPair();    }}])', 1), ('([77:/android/alarmmanager/cts/AppStandbyTests.java]:[ARM]:[77]:method_text:[  assertTrue(""Alarm exceeding quota not delivered after expected delay"", waitForAlarm());    }   ])', 1), ('([3:/android/alarmmanager/cts/AppStandbyTests.java]:[ARM]:[3]:method_text:[en app is in active"", waitForAlarm());            nextTrigger += MIN_FUTURITY;        }    }   ])', 1), ('([3:/android/alarmmanager/cts/AppStandbyTests.java]:[ARM]:[3]:method_text:[000);        assertFalse(""Alarm received when app was in never bucket"", waitForAlarm());    }   ])', 1), ('([4:/android/alarmmanager/cts/AppStandbyTests.java]:[ARM]:[4]:method_text:[IN_FUTURITY);        assertTrue(""Alarm clock not received as expected"", waitForAlarm());    }   ])', 1), ('([17:/android/alarmmanager/cts/AppStandbyTests.java]:[ARM]:[17]:method_text:[W                + ""ms, when in bucket "" + APP_BUCKET_TAGS[RARE_INDEX], waitForAlarm());    }   ])', 1), ('([21:/android/alarmmanager/cts/AppStandbyTests.java]:[ARM]:[21]:method_text:[        }    }    @FunctionalInterface    interface Condition {        boolean isMet();    }}])', 1)]"	""	""	"[('ARM', 105), ('AES', 17)]"	"[('[android.hardware.camera2.cts.RobustnessTest testOisDataMode None]', 2), ('[com.android.cts.authboundkey.AuthBoundKeyAppTest testGenerateAuthBoundKey None]', 1), ('[android.media.cts.AudioTrackLatencyTest testPlaySmallBuffer None]', 1), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthTest None]', 1), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthWithExpirationTest None]', 1), ('[android.provider.cts.settings.SettingsTest testSystemTable None]', 1), ('[android.view.inputmethod.cts.InputConnectionWrapperTest testInputConnectionWrapper None]', 1), ('[android.dynamicmime.testapp.SingleAppTest testClear None]', 1), ('[android.dynamicmime.testapp.SingleAppTest testDefinedGroupNotNullAfterClear None]', 1), ('[android.dynamicmime.testapp.SingleAppTest testMimeGroupsIndependentClear None]', 1), ('[android.dynamicmime.testapp.SingleAppTest testMimeGroupsIndependentClearBoth None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest removeFromWhitelists None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest hasPermissionByDefault None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest exactAlarmPermissionElevatesBucket None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest noPermissionWhenIgnored None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest hasPermissionWhenAllowed None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest canScheduleExactAlarmWhenChangeDisabled None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest setAlarmClockWithoutPermission None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest setAlarmClockWithoutPermissionWithWhitelist None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest setAlarmClockWithPermission None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest setExactAwiWithoutPermissionOrWhitelist None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest setExactPiWithoutPermissionOrWhitelist None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest setExactCallbackWithoutPermissionOrWhitelist None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest setExactAwiWithoutPermissionWithWhitelist None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest setExactAwiWithPermissionAndWhitelist None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest setExactAwiWithPermissionWithoutWhitelist None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest alarmClockGrantsWhitelist None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest exactAwiGrantsWhitelist None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest activityToRequestPermissionExists None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest scheduleExactAlarmPermissionStateChangedSentAppOp None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest scheduleExactAlarmPermissionStateChangedSentDenyList None]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest denyListedChangesCanScheduleExactAlarms None]', 1), ('[android.os.cts.batterysaving.BatterySaverTest testActivateBatterySaver None]', 1), ('[android.os.cts.batterysaving.BatterySaverTest testCarModeExceptions None]', 1), ('[android.display.cts.BrightnessTest testAtMostOneAppHoldsBrightnessConfigurationPermission None]', 1), ('[android.car.cts.CarAppFocusManagerTest testFocusChange None]', 1), ('[android.car.cts.CarAppFocusManagerTest testFilter None]', 1), ('[android.provider.cts.media.MediaStore_Audio_Genres_MembersTest testStoreAudioGenresMembersExternal None]', 1), ('[android.security.cts.ProcessMustUseSeccompTest testConfigStoreHalHasSeccompFilter None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAbandonRepeatingRequestSurface None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testBasicTriggerSequence None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testSimultaneousTriggers None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAfThenAeTrigger None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAeThenAfTrigger None]', 1), ('[android.hardware.camera2.cts.RobustnessTest testAeAndAfCausality None]', 1), ('[android.car.cts.CarPropertyManagerTest getPropertyList None]', 1), ('[android.os.cts.CpuInstructionsTest testArmVirtualCounter None]', 1), ('[android.os.cts.CpuInstructionsTest testEmulatedArmCpuFeatures None]', 1), ('[com.android.cts.splitapp.SplitAppTest testSingleBase None]', 1), ('[com.android.cts.splitapp.SplitAppTest testFeatureWarmBase None]', 1), ('[com.android.cts.splitapp.SplitAppTest testFeatureWarmApi None]', 1), ('[com.android.cts.splitapp.SplitAppTest testInheritUpdatedSplit_withRevisionA None]', 1), ('[com.android.cts.splitapp.SplitAppTest testComponentWithSplitName_singleBase None]', 1), ('[com.android.cts.splitapp.SplitAppTest testComponentWithSplitName_featureWarmInstalled None]', 1), ('[android.view.inputmethod.cts.BaseInputConnectionTest testOpComposingSpans None]', 1), ('[com.android.cts.verifier.security.UnlockedDeviceRequiredTest setPassFailButtonClickListeners None]', 1), ('[android.media.cts.RingtoneTest testRingtone None]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testDirectory_Invalid None]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testRelated None]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testRelated_InvalidMime None]', 1), ('[android.provider.cts.media.MediaStorePlacementTest testRelated_InvalidPath None]', 1), ('[android.telephony.ims.cts.ImsServiceTest beforeAllTests None]', 1), ('[android.net.wifi.cts.WifiManagerTest testGetCurrentNetwork None]', 1), ('[android.net.wifi.cts.WifiManagerTest testIsWpa3SaeSupported None]', 1), ('[android.keystore.cts.BlockCipherTestBase testVeryLargeBlock None]', 1), ('[android.widget.cts.DatePickerTest testSetEnabled None]', 1), ('[android.widget.cts.DatePickerTest testInit None]', 1), ('[android.widget.cts.DatePickerTest testAccessDate None]', 1), ('[android.widget.cts.DatePickerTest testSetOnDateChangedListener None]', 1), ('[android.widget.cts.DatePickerTest testUpdateDate None]', 1), ('[android.widget.cts.DatePickerTest testMinMaxDate None]', 1), ('[android.widget.cts.DatePickerTest testFirstDayOfWeek None]', 1), ('[android.widget.cts.DatePickerTest testAutofill None]', 1), ('[android.widget.cts.DatePickerTest testEnterKey None]', 1), ('[android.dynamicmime.testapp.ComplexFilterTest testClearGroupWithoutIntersection None]', 1), ('[android.dynamicmime.testapp.ComplexFilterTest testClearGroupWithIntersection None]', 1), ('[android.dynamicmime.testapp.ComplexFilterTest testClearGroupContainsStaticType None]', 1), ('[android.dynamicmime.testapp.ComplexFilterTest testClearGroupNotContainStaticType None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes None]', 1), ('[android.media.cts.MediaScannerTest testCanonicalize None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testPrePCannotToggleAlarmsAndMediaTest None]', 1), ('[android.harmfulappwarning.testapp.HarmfulAppWarningDeviceTest register None]', 1), ('[android.media.cts.AudioPlaybackCaptureTest APCTestConfig None]', 1), ('[android.keystore.cts.KeyStoreTest test_KeyStore_entryInstanceOf None]', 1), ('[android.keystore.cts.KeyStoreTest test_KeyStore_cacerts None]', 1), ('[android.os.cts.VibrationAttributesTest testCreate None]', 1), ('[android.app.cts.AlarmManagerTest testSetTypes None]', 1), ('[android.app.cts.AlarmManagerTest testAlarmTriggersImmediatelyIfSetTimeIsNegative None]', 1), ('[android.app.cts.AlarmManagerTest testExactAlarmBatching None]', 1), ('[android.app.cts.AlarmManagerTest testSetRepeating None]', 1), ('[android.app.cts.AlarmManagerTest testCancel None]', 1), ('[android.app.cts.AlarmManagerTest testSetInexactRepeating None]', 1), ('[android.app.cts.AlarmManagerTest testSetAlarmClock None]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey None]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey_AES_StrongBox None]', 1), ('[android.alarmmanager.cts.AppStandbyTests setUpTests None]', 1), ('[android.alarmmanager.cts.AppStandbyTests testActiveQuota None]', 1), ('[android.alarmmanager.cts.AppStandbyTests testNeverQuota None]', 1), ('[android.alarmmanager.cts.AppStandbyTests testAlarmClockUnaffected None]', 1), ('[android.alarmmanager.cts.AppStandbyTests testAllowWhileIdleAlarms None]', 1), ('[android.alarmmanager.cts.AppStandbyTests testPowerWhitelistedAlarmNotBlocked None]', 1)]"
"9.9.3.2  . Per"	"9.9.3.2"	"C-1-5"	"9.9.3.2/C-1-5"	"09090302.670105"	"""C-1-5] MUST be cryptographically bound to a hardware-backed Keystore. This keystore MUST be bound to Verified Boot and the device's hardware root of trust."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3.1  . File Based Encryption with Metadata Encryption"	"9.9.3.1"	"C-1-14"	"9.9.3.1/C-1-14"	"09090301.670114"	"""C-1-14] MUST NOT use the same File Based Encryption (FBE) keys or subkeys for different cryptographic purposes (e.g. for both encryption and key derivation, or for two different encryption algorithms). The keys protecting CE and DE storage areas and filesystem metadata:"""	""	""	"FBE"	""	""	""	""	""	""	""	""	"[('android.appsecurity.cts.DirectBootHostTest', 10), ('android.appsecurity.cts.AppDataIsolationTests', 6), ('com.android.cts.devicepolicy.ManagedProfilePasswordTest', 5), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 2), ('android.view.inputmethod.cts.InputMethodInfoTest', 2), ('android.security.cts.Poc17_09', 2), ('com.android.cts.userspacereboot.host.UserspaceRebootHostTest', 2), ('android.renderscript.cts.generated.TestNativeExp', 1), ('android.text.cts.FontCoverageTest', 1), ('android.provider.cts.contacts.hostside.ShadowCallLogTest', 1), ('android.net.cts.Ikev2VpnTest', 1), ('com.android.cts.managedprofile.ResetPasswordWithTokenTest', 1), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 1), ('android.graphics.cts.ColorTest', 1), ('android.net.ipsec.ike.cts.IkeSessionDigitalSignatureTest', 1), ('android.content.cts.ContextTest', 1), ('android.renderscript.cts.generated.TestCross', 1), ('android.renderscript.cts.generated.TestMad', 1), ('android.uirendering.cts.testclasses.ColorFilterAlphaTest', 1), ('android.keystore.cts.SignatureTest', 1), ('android.hdmicec.cts.audio.HdmiCecSystemAudioModeTest', 1), ('android.keystore.cts.CipherTest', 1), ('android.net.ipsec.ike.cts.IkeSessionMschapV2Test', 1), ('android.location.cts.gnss.GnssMeasurementWhenNoLocationTest', 1)]"	"[('destroy', 86), ('toString', 61), ('getDevice', 35), ('StringBuilder', 20), ('tearDown', 14), ('setUp', 12), ('ArgumentsFloatFloat', 4), ('ArgumentsHalfHalf', 4), ('build', 4), ('ArgumentsFloatFloatFloatFloat', 4), ('ArgumentsHalfHalfHalfHalf', 4), ('Builder', 2), ('getBytes', 2), ('getContext', 2), ('getAbi', 2), ('getBuild', 2), ('getInstrumentation', 2), ('getHostAddress', 2), ('buildIkeSaProposalWithNormalModeCipher', 2), ('buildIkeSaProposalWithCombinedModeCipher', 2), ('ArgumentsFloatNFloatNFloatN', 2), ('ArgumentsHalfNHalfNHalfN', 2), ('createMultiRectBitmap', 2), ('Paint', 2), ('reboot', 2), ('checkNativeExpFloatFloat', 1), ('checkNativeExpFloat2Float2', 1), ('checkNativeExpFloat3Float3', 1), ('checkNativeExpFloat4Float4', 1), ('checkNativeExpHalfHalf', 1), ('checkNativeExpHalf2Half2', 1), ('checkNativeExpHalf3Half3', 1), ('checkNativeExpHalf4Half4', 1), ('HashMap', 1), ('toLanguageTag', 1), ('getSimpleName', 1), ('resourceColor', 1), ('getTargetContext', 1), ('getResources', 1), ('TypedValue', 1), ('getDeclaredFields', 1), ('getDeclaredAnnotations', 1), ('getName', 1), ('setUpCertsBeforeClass', 1), ('checkCrossFloat3Float3Float3', 1), ('checkCrossFloat4Float4Float4', 1), ('checkCrossHalf3Half3Half3', 1), ('checkCrossHalf4Half4Half4', 1), ('checkMadFloatFloatFloatFloat', 1), ('checkMadFloat2Float2Float2Float2', 1), ('checkMadFloat3Float3Float3Float3', 1), ('checkMadFloat4Float4Float4Float4', 1), ('checkMadHalfHalfHalfHalf', 1), ('checkMadHalf2Half2Half2Half2', 1), ('checkMadHalf3Half3Half3Half3', 1), ('checkMadHalf4Half4Half4Half4', 1), ('configs', 1), ('getActivity', 1), ('getWindow', 1), ('CanvasClient', 1), ('cect_11_2_15_6_SystemAudioModeOffBeforeStandby', 1), ('sendSystemAudioModeInitiation', 1), ('supports3DES', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('setUpCertBeforeClass', 1)]"	""	"[('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/DirectBootHostTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppDataIsolationTests.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeExp.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_09.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/calllog/src/android/provider/cts/contacts/hostside/ShadowCallLogTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/Ikev2VpnTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/ColorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_09.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ContextTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestCross.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestMad.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/SignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionMschapV2Test.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/userspacereboot/src/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/userspacereboot/src/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java', 1)]"	"[('(1,FBE,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java)', 2), ('(5,FBE,/android/view/inputmethod/cts/InputMethodInfoTest.java)', 2), ('(8,FBE,/android/security/cts/Poc17_09.java)', 2), ('(17,FBE,/android/appsecurity/cts/DirectBootHostTest.java)', 2), ('(12,FBE,/android/appsecurity/cts/AppDataIsolationTests.java)', 2), ('(1,FBE,/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java)', 2), ('(1,FBE,/android/renderscript/cts/generated/TestNativeExp.java)', 1), ('(2,FBE,/android/text/cts/FontCoverageTest.java)', 1), ('(8,FBE,/android/provider/cts/contacts/hostside/ShadowCallLogTest.java)', 1), ('(1,FBE,/android/net/cts/Ikev2VpnTest.java)', 1), ('(1,FBE,/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java)', 1), ('(1,FBE,/android/net/ipsec/ike/cts/IkeSessionPskTest.java)', 1), ('(3,FBE,/android/graphics/cts/ColorTest.java)', 1), ('(1,FBE,/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java)', 1), ('(2,FBE,/android/content/cts/ContextTest.java)', 1), ('(1,FBE,/android/renderscript/cts/generated/TestCross.java)', 1), ('(2,FBE,/android/renderscript/cts/generated/TestMad.java)', 1), ('(1,FBE,/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java)', 1), ('(1,FBE,/android/keystore/cts/SignatureTest.java)', 1), ('(1,FBE,/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java)', 1), ('(2,FBE,/android/keystore/cts/CipherTest.java)', 1), ('(5,FBE,/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java)', 1), ('(1,FBE,/android/net/ipsec/ike/cts/IkeSessionMschapV2Test.java)', 1), ('(4,FBE,/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java)', 1)]"	"[('([8:/android/security/cts/Poc17_09.java]:[FBE]:[8]:method_text:[                             )==139);    }    /**     * b/38195738     * b/36590192     */   ])', 2), ('([1:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[1]:method_text:[allPackage(OTHER_PKG);    }    /**     * Automotive devices MUST support native FBE.     */   ])', 2), ('([4:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[4]:method_text:[equals(getFbeMode()));    }    /**     * If device has native FBE, verify lifecycle.     */   ])', 2), (""([3:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[3]:method_text:[    /**     * If device doesn't have native FBE, enable emulation and verify lifecycle.     */   ])"", 2), (""([3:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[3]:method_text:[ATED);    }    /**     * If device doesn't have native FBE, verify normal lifecycle.     */   ])"", 2), ('([6:/android/appsecurity/cts/DirectBootHostTest.java]:[FBE]:[6]:method_text:[super(getDevice(), getBuild(), getAbi());            addArg(""--force-queryable"");        }    }}])', 2), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[          }                getDevice().waitForDeviceAvailable();            }        }    }   ])', 2), ('([1:/com/android/cts/userspacereboot/host/UserspaceRebootHostTest.java]:[FBE]:[1]:method_text:[reboot {@code     * PowerManager.isRebootingUserspaceSupported()} returns {@code true}.     */   ])', 2), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[FBE]:[1]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([1:/android/renderscript/cts/generated/TestNativeExp.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/android/text/cts/FontCoverageTest.java]:[FBE]:[2]:method_text:[      }        // Unknown locale. Return an empty set.        return UnicodeSet.EMPTY;    }   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[FBE]:[5]:method_text:[() : """";            }        } catch (IOException e) {            return """";        }    }   ])', 1), ('([8:/android/provider/cts/contacts/hostside/ShadowCallLogTest.java]:[FBE]:[8]:method_text:[ != null) {            output = output.trim();        }        return ""1"".equals(output);    }}])', 1), ('([1:/android/net/cts/Ikev2VpnTest.java]:[FBE]:[1]:method_text:[EST_MTU, profile.getMaxMtu());        assertFalse(profile.isRestrictedToTestNetworks());    }   ])', 1), ('([1:/com/android/cts/managedprofile/ResetPasswordWithTokenTest.java]:[FBE]:[1]:method_text:[ordBeforeUnlock} and will be called by the hostside logic     * before it is exercised.     */   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[FBE]:[1]:method_text:[on.getErrorData());        ikeSession.kill();        mIkeSessionCallback.awaitOnClosed();    }}])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[2]:method_text:[  getDevice().uninstallPackage(APPA_PKG);        getDevice().uninstallPackage(APPB_PKG);    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[    return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }}])', 1), ('([3:/android/graphics/cts/ColorTest.java]:[FBE]:[3]:method_text:[sync with colors in android.R.color"",                colors.length, numPublicApiColors);    }   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java]:[FBE]:[1]:method_text:[ecutor,                mIkeSessionCallback,                mFirstChildSessionCallback);    }   ])', 1), ('([2:/android/content/cts/ContextTest.java]:[FBE]:[2]:method_text:[ that apps can go through a     * backup/restore cycle between FBE and non-FBE devices.     */   ])', 1), ('([1:/android/renderscript/cts/generated/TestCross.java]:[FBE]:[1]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([2:/android/renderscript/cts/generated/TestMad.java]:[FBE]:[2]:method_text:[ +                (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);    }   ])', 1), ('([1:/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java]:[FBE]:[1]:method_text:[R_COLOR, mConfig.mode));            canvas.drawBitmap(mBitmap, 0, 0, mPaint);        }    };   ])', 1), ('([1:/android/keystore/cts/SignatureTest.java]:[FBE]:[1]:method_text:[e7a42b1ddff0c""));    }    private static final long DAY_IN_MILLIS = TestUtils.DAY_IN_MILLIS;   ])', 1), ('([1:/android/hdmicec/cts/audio/HdmiCecSystemAudioModeTest.java]:[FBE]:[1]:method_text:[ly to a <Give System Audio Mode Status>    * message when the System Audio Mode is ""Off"".    */  ])', 1), ('([2:/android/keystore/cts/CipherTest.java]:[FBE]:[2]:method_text:[ortsLockAndUnlock() {            return supportsInsecureLock();        }    }    @Presubmit   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[FBE]:[1]:method_text:[ getDevice().executeShellCommand(""input keyevent 3"");        }        super.tearDown();    }   ])', 1), ('([5:/android/view/inputmethod/cts/InputMethodInfoTest.java]:[FBE]:[5]:method_text:[rim() : """";            }        } catch (IOException e) {            return """";        }    }}])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[        changeUserCredential(TEST_PASSWORD, null, mProfileUserId);        lockProfile();    }   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[erifyUserCredential(RESET_PASSWORD_TEST_DEFAULT_PASSWORD, mProfileUserId);    }    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[nified work challenge and the primary user clears     * the device lock.     */    @FlakyTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[    executeShellCommand(""input keyevent KEYCODE_WAKEUP"");        }    }    @LockSettingsTest   ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[FBE]:[1]:method_text:[_PASSWORD, mPrimaryUserId);        }    }    @FlakyTest    @LargeTest    @LockSettingsTest   ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionMschapV2Test.java]:[FBE]:[1]:method_text:[ecutor,                mIkeSessionCallback,                mFirstChildSessionCallback);    }   ])', 1), ('([2:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[2]:method_text:[rows Exception {        getDevice().reboot();        waitForBootCompleted(getDevice());    }   ])', 1), ('([5:/android/appsecurity/cts/AppDataIsolationTests.java]:[FBE]:[5]:method_text:[ return false;        }        fail(""Unknown FBE mode: "" + mode);        return false;    }   ])', 1), ('([4:/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java]:[FBE]:[4]:method_text:[ {                TestUtils.setAirplaneModeOn(getContext(), false);            }        }    }}])', 1)]"	""	""	"[('FBE', 46)]"	"[('[android.view.inputmethod.cts.InputMethodInfoTest testAtLeastOneEncryptionAwareInputMethodIsAvailable None]', 2), ('[android.security.cts.Poc17_09 testPocCve_2017_6983 None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testAutomotiveNativeFbe None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNative None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootEmulated None]', 2), ('[android.appsecurity.cts.DirectBootHostTest testDirectBootNone None]', 2), ('[android.appsecurity.cts.AppDataIsolationTests testDirectBootModeWorks None]', 2), ('[com.android.cts.userspacereboot.host.UserspaceRebootHostTest testOnlyFbeDevicesSupportUserspaceReboot None]', 2), ('[android.provider.cts.contacts.hostside.ShadowCallLogTest testDirectBootCallLog None]', 1), ('[android.net.cts.Ikev2VpnTest Ikev2VpnTest None]', 1), ('[android.net.ipsec.ike.cts.IkeSessionPskTest testIkeAuthHandlesFirstChildCreationFail None]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppUnableToAccessOtherUserAppDataDirApi29 None]', 1), ('[android.content.cts.ContextTest testGetText None]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testLockNowWithKeyEviction None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testResetPasswordWithTokenBeforeUnlock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testClearPasswordWithTokenBeforeUnlock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testResetPasswordTokenUsableAfterClearingLock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testUnlockWorkProfile_deviceWidePassword None]', 1), ('[android.appsecurity.cts.AppDataIsolationTests testAppAbleToAccessItsDataAfterReboot None]', 1), ('[android.location.cts.gnss.GnssMeasurementWhenNoLocationTest testGnssMeasurementWhenNoLocation None]', 1)]"
"3.8.4  . Search"	"3.8.4"	"C-1-1"	"3.8.4/C-1-1"	"03080400.670101"	"""C-1-1] MUST implement the APIs that allow third-party applications to add suggestions to the search box when it is run in global search mode. If no third-party applications are installed that make use of the global search: The default behavior SHOULD be to display web search engine results and suggestions. Android also includes the Assist APIs to allow applications to elect how much information of the current context is shared with the assistant on the device. If device implementations support the Assist action, they:"""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3.1  . File Based Encryption with Metadata Encryption"	"9.9.3.1"	""	"9.9.3.1"	"09090301.48"	"""data-text="" 9.9.3.1. File Based Encryption with Metadata Encryption ""> 9.9.3.1. File Based Encryption with Metadata Encryption If device implementations use File Based Encryption with Metadata Encryption, they: [C-1-5] MUST encrypt file contents and filesystem metadata using AES-256-XTS or Adiantum. AES-256-XTS refers to the Advanced Encryption Standard with a 256-bit cipher key length, operated in XTS mode; the full length of the key is 512 bits. Adiantum refers to Adiantum-XChaCha12-AES, as specified at https://github.com/google/adiantum. Filesystem metadata is data such as file sizes, ownership, modes, and extended attributes (xattrs). [C-1-6] MUST encrypt file names using AES-256-CBC-CTS or Adiantum. [C-1-12] If the device has Advanced Encryption Standard (AES) instructions (such as ARMv8 Cryptography Extensions on ARM-based devices, or AES-NI on x86-based devices) then the AES-based options above for file name, file contents, and filesystem metadata encryption MUST be used, not Adiantum. [C-1-13] MUST use a cryptographically strong and non-reversible key derivation function (e.g. HKDF-SHA512) to derive any needed subkeys (e.g. per-file keys) from the CE and DE keys. ""Cryptographically strong and non-reversible"" means that the key derivation function has a security strength of at least 256 bits and behaves as a pseudorandom function family over its inputs. [C-1-14] MUST NOT use the same File Based Encryption (FBE) keys or subkeys for different cryptographic purposes (e.g. for both encryption and key derivation, or for two different encryption algorithms). The keys protecting CE and DE storage areas and filesystem metadata: [C-1-7] MUST be cryptographically bound to a hardware-backed Keystore. This keystore MUST be bound to Verified Boot and the device's hardware root of trust. [C-1-8] CE keys MUST be bound to a user's lock screen credentials. [C-1-9] CE keys MUST be bound to a default passcode when the user has not specified lock screen credentials. [C-1-10] MUST be unique and distinct, in other words no user's CE or DE key matches any other user's CE or DE keys. [C-1-11] MUST use the mandatorily supported ciphers, key lengths and modes. SHOULD make preinstalled essential apps (e.g. Alarm, Phone, Messenger) Direct Boot aware. The upstream Android Open Source project provides a preferred implementation of File Based Encryption based on the Linux kernel ""fscrypt"" encryption feature, and of Metadata Encryption based on the Linux kernel ""dm-default-key"" feature. <h4 id=""9_9_3_2_per-user_block-level_encryption"" """	""	""	"XTS SHA512 github.com FBE HKDF CTS AES ARM CBC"	""	""	""	""	""	""	""	""	"[('android.security.cts.SELinuxHostTest', 14), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 11), ('android.widget.cts.TabHostTest', 8), ('com.android.cts.storageapp.StorageTest', 7), ('android.view.cts.SystemGestureExclusionRectsTest', 6), ('android.security.identity.cts.DynamicAuthTest', 5), ('android.autofillservice.cts.saveui.CustomDescriptionTest', 5), ('android.server.wm.AppConfigurationTests', 4), ('android.provider.cts.contacts.ContactsContractIntentsTest', 4), ('android.hardware.cts.helpers.SensorCtsHelperTest', 3), ('com.android.cts.authboundkey.AuthBoundKeyAppTest', 3), ('android.autofillservice.cts.inline.InlineSimpleSaveActivityTest', 3), ('android.suspendapps.cts.DialogTests', 3), ('android.net.ipsec.ike.cts.SaProposalTest', 3), ('android.server.wm.PinnedStackTests', 3), ('android.autofillservice.cts.LoginWithStringsActivityTest', 2), ('android.security.cts.VisualizerEffectTest', 2), ('android.uwb.cts.AngleOfArrivalMeasurementTest', 2), ('android.net.vcn.cts.VcnManagerTest', 2), ('android.autofillservice.cts.ValidatorTest', 2), ('android.security.cts.Poc18_07', 2), ('android.telephonyprovider.cts.MmsTest', 2), ('android.telephony.cts.PhoneNumberUtilsTest', 2), ('android.graphics.drawable.cts.IconTest', 2), ('android.server.wm.DisplaySizeTest', 2), ('com.android.cts.useslibrary.UsesLibraryTest', 2), ('android.signature.cts.tests.LineSpliteratorTestBase', 2), ('android.media.cts.AudioTrackLatencyTest', 2), ('android.appmanifest.cts.UsesNativeLibraryTestCase', 2), ('com.android.cts.deviceowner.NetworkLoggingTest', 2), ('android.hardware.camera2.cts.StaticMetadataTest', 2), ('android.autofillservice.cts.commontests.TimePickerTestCase', 2), ('android.view.cts.SoundEffectConstantsTest', 1), ('android.accessibilityservice.cts.AccessibilityButtonSdk29Test', 1), ('android.telephony.cts.AvailableNetworkInfoTest', 1), ('android.net.cts.network.permission.UpdateStatsPermissionTest', 1), ('android.app.cts.NotificationCarExtenderTest', 1), ('com.android.cts.net.hostside.NetworkCallbackTest', 1), ('android.widget.cts.BaseAdapterTest', 1), ('android.car.cts.ExceptionsTest', 1), ('android.provider.cts.media.MediaStoreTest', 1), ('com.android.tests.loadingprogress.host.IncrementalLoadingProgressTest', 1), ('android.server.wm.KeyguardTransitionTests', 1), ('android.view.cts.OrientationEventListenerTest', 1), ('android.os.cts.BuildVersionTest', 1), ('android.text.util.cts.Rfc822TokenizerTest', 1), ('com.android.cts.verifier.sensors.sixdof.Utils.Path.ReferencePath', 1), ('android.location.cts.fine.CriteriaTest', 1), ('android.content.pm.cts.shortcut.upgrade.ShortcutManagerPreUpgradeTest', 1), ('android.telephony.cts.TelephonyRegistryManagerTest', 1), ('android.uirendering.cts.testclasses.SweepTests', 1), ('android.view.cts.ViewOutlineProviderTest', 1), ('android.vr.cts.VrSetFIFOThreadTest', 1), ('android.telephony.cts.SmsCbLocationTest', 1), ('android.server.wm.WindowInsetsControllerTests', 1), ('android.app.cts.WallpaperManagerTest', 1), ('com.android.cts.externalstorageapp.GiftTest', 1), ('android.jni.cts.JniCTest', 1), ('android.os.cts.ConditionVariableTest', 1), ('com.android.cts.deviceowner.BluetoothRestrictionTest', 1), ('android.externalservice.cts.ExternalServiceTest', 1), ('android.bluetooth.cts.AdvertiseDataTest', 1), ('android.contentcaptureservice.cts.ClipboardAccessTest', 1), ('android.hardware.cts.helpers.sensorverification.MeanVerificationTest', 1), ('android.content.pm.cts.FeatureTest', 1), ('android.hardware.input.cts.tests.SonyDualshock4BluetoothTest', 1), ('android.util.cts.SparseIntArrayTest', 1), ('android.security.cts.Poc18_04', 1), ('android.content.res.cts.PluralResourcesTest', 1), ('android.media.cts.MediaBrowserServiceTest', 1), ('com.android.cts.devicepolicy.LauncherAppsProfileTest', 1), ('android.permission.cts.CameraPermissionTest', 1), ('android.hardware.devicestate.cts.DeviceStateManagerTests', 1), ('android.renderscript.cts.SamplerTest', 1), ('android.server.wm.UnsupportedErrorDialogTests', 1), ('android.os.cts.CountDownTimerTest', 1), ('android.uirendering.cts.testclasses.ViewAnimationUtilsTests', 1), ('android.security.cts.DecodeTest', 1), ('android.accounts.cts.AbstractAuthenticatorTests', 1), ('android.location.cts.fine.GnssMeasurementTest', 1), ('android.transition.cts.TransitionManagerTest', 1), ('android.view.inspector.cts.IntFlagMappingTest', 1), ('android.graphics.cts.FontVariationAxisTest', 1), ('android.signature.cts.api.SignatureMultiLibsTest', 1), ('android.os.cts.HidlMemoryTest', 1)]"	"[('setUp', 36), ('getContext', 14), ('getInstrumentation', 12), ('tearDown', 12), ('build', 11), ('Builder', 10), ('getTargetContext', 9), ('getActivity', 8), ('getDevice', 8), ('getViewTreeObserver', 7), ('size', 6), ('getAbsolutePath', 4), ('countDown', 4), ('getLastReportedRects', 4), ('setup', 4), ('getPackageManager', 4), ('toString', 4), ('getWho', 4), ('fail', 4), ('notify', 4), ('getContentResolver', 3), ('getSimpleName', 3), ('getPackageName', 3), ('buildIkeSaProposalWithNormalModeCipher', 3), ('buildIkeSaProposalWithCombinedModeCipher', 3), ('buildChildSaProposalWithNormalModeCipher', 3), ('buildChildSaProposalWithCombinedModeCipher', 3), ('buildChildSaProposalWithOnlyCiphers', 3), ('run', 3), ('AccessibilityDumpOnFailureRule', 2), ('oneTimeSetup', 2), ('getUiAutomation', 2), ('ensureDefaultSmsApp', 2), ('removeLastMarker', 2), ('clear', 2), ('getCoordinates', 2), ('turnScreenOn', 2), ('clearPrimaryClip', 2), ('StringBuilder', 2), ('stream', 2), ('enableService', 2), ('onFill', 2), ('getNextFillRequest', 2), ('tapLogin', 2), ('getNextSaveRequest', 2), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('RuntimeException', 1), ('data', 1), ('getSharedVolumeNames', 1), ('getBuild', 1), ('newCachedThreadPool', 1), ('getSerialNumber', 1), ('close', 1), ('staticView', 1), ('Rect', 1), ('getWidth', 1), ('getHeight', 1), ('width', 1), ('height', 1), ('animatingView', 1), ('animate', 1), ('removingRects', 1), ('rootExclusionRects', 1), ('getWindow', 1), ('getSystemGestureExclusionRects', 1), ('ignoreHiddenViewRects', 1), ('supportsInsecureLock', 1), ('cleanup', 1), ('calculatePathRemaining', 1), ('AnimationCallback', 1), ('ErrorCollector', 1), ('ConditionVariable', 1), ('getDefaultAdapter', 1), ('enable', 1), ('Connection', 1), ('prepareClipboardManager', 1), ('cleanYourself', 1), ('getResources', 1), ('Configuration', 1), ('getConfiguration', 1), ('getAssets', 1), ('setBufferSizeInFrames', 1), ('getBufferCapacityInFrames', 1), ('getUnderrunCount', 1), ('Object', 1), ('ConnectionCallback', 1), ('onConnected', 1), ('SubscriptionCallback', 1), ('ItemCallback', 1), ('Runnable', 1), ('Bundle', 1), ('myPid', 1), ('myUid', 1), ('connect', 1), ('supportsPip', 1), ('getExternalStorageDirectory', 1), ('onShutter', 1), ('flush', 1), ('getSupportedStates', 1), ('trim', 1), ('matches', 1), ('resetAppErrors', 1), ('applyCharSequenceTransformationToImageView', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getCount', 1), ('release', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 14), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 11), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TabHostTest.java', 8), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/StorageApp/src/com/android/cts/storageapp/StorageTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/SystemGestureExclusionRectsTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/DynamicAuthTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/CustomDescriptionTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AppConfigurationTests.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContractIntentsTest.java', 4), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/SensorCtsHelperTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/AuthBoundKeyApp/src/com/android/cts/authboundkey/AuthBoundKeyAppTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java', 3), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DialogTests.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/SaProposalTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PinnedStackTests.java', 3), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/LoginWithStringsActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/VisualizerEffectTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/uwb/src/android/uwb/cts/AngleOfArrivalMeasurementTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/vcn/src/android/net/vcn/cts/VcnManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/ValidatorTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc18_07.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephonyprovider/src/android/telephonyprovider/cts/MmsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneNumberUtilsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/IconTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplaySizeTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/classloaders/useslibrary/app/src/com/android/cts/useslibrary/UsesLibraryTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioTrackLatencyTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/library/src/android/appmanifest/cts/UsesNativeLibraryTestCase.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/NetworkLoggingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/TimePickerTestCase.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/SoundEffectConstantsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/testsdk29/src/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/AvailableNetworkInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/netpermission/updatestatspermission/src/android/net/cts/network/permission/UpdateStatsPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationCarExtenderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/net/app/src/com/android/cts/net/hostside/NetworkCallbackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/BaseAdapterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/ExceptionsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/packagemanager/installedloadingprogess/hostside/src/com/android/tests/loadingprogress/host/IncrementalLoadingProgressTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardTransitionTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/OrientationEventListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/BuildVersionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/util/cts/Rfc822TokenizerTest.java', 1), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/sixdof/Utils/Path/ReferencePath.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/CriteriaTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/upgrade/src/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyRegistryManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/SweepTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewOutlineProviderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/vr/src/android/vr/cts/VrSetFIFOThreadTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SmsCbLocationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsControllerTests.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/WallpaperManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/ExternalStorageApp/src/com/android/cts/externalstorageapp/GiftTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/jni/src/android/jni/cts/JniCTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/ConditionVariableTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/BluetoothRestrictionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/externalservice/src/android/externalservice/cts/ExternalServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/AdvertiseDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ClipboardAccessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/MeanVerificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/FeatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualshock4BluetoothTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/util/src/android/util/cts/SparseIntArrayTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/signature/tests/src/android/signature/cts/tests/LineSpliteratorTestBase.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc18_04.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/PluralResourcesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaBrowserServiceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/LauncherAppsProfileTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/CameraPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicestate/src/android/hardware/devicestate/cts/DeviceStateManagerTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/SamplerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/UnsupportedErrorDialogTests.java', 1), ('/home/gpoor/cts-source/cts/tests/signature/tests/src/android/signature/cts/tests/LineSpliteratorTestBase.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/CountDownTimerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ViewAnimationUtilsTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/DecodeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/accounts/src/android/accounts/cts/AbstractAuthenticatorTests.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/GnssMeasurementTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/transition/src/android/transition/cts/TransitionManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/inspector/cts/IntFlagMappingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/FontVariationAxisTest.java', 1), ('/home/gpoor/cts-source/cts/tests/signature/api-check/shared-libs-api/src/android/signature/cts/api/SignatureMultiLibsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/HidlMemoryTest.java', 1)]"	"[('(2,CTS,/android/signature/cts/tests/LineSpliteratorTestBase.java)', 2), ('(1,CTS,/android/view/cts/SoundEffectConstantsTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/LoginWithStringsActivityTest.java)', 1), ('(16,CTS,/android/autofillservice/cts/LoginWithStringsActivityTest.java)', 1), ('(4,CTS,/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java)', 1), ('(1,CTS,/android/telephony/cts/AvailableNetworkInfoTest.java)', 1), ('(1,CTS,/android/net/cts/network/permission/UpdateStatsPermissionTest.java)', 1), ('(1,CTS,/android/app/cts/NotificationCarExtenderTest.java)', 1), ('(10,CTS,/com/android/cts/net/hostside/NetworkCallbackTest.java)', 1), ('(2,CTS,/android/security/cts/VisualizerEffectTest.java)', 1), ('(1,CTS,/android/widget/cts/BaseAdapterTest.java)', 1), ('(4,CTS,/android/uwb/cts/AngleOfArrivalMeasurementTest.java)', 1), ('(25,CTS,/android/hardware/cts/helpers/SensorCtsHelperTest.java)', 1), ('(1,CTS,/android/car/cts/ExceptionsTest.java)', 1), ('(3,CTS,/android/provider/cts/media/MediaStoreTest.java)', 1), ('(2,CTS,/com/android/tests/loadingprogress/host/IncrementalLoadingProgressTest.java)', 1), ('(1,CTS,/com/android/cts/authboundkey/AuthBoundKeyAppTest.java)', 1), ('(1,AES,/com/android/cts/authboundkey/AuthBoundKeyAppTest.java)', 1), ('(1,CBC,/com/android/cts/authboundkey/AuthBoundKeyAppTest.java)', 1), ('(2,XTS,/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java)', 1), ('(15,CTS,/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java)', 1), ('(60,CTS,/android/view/cts/SystemGestureExclusionRectsTest.java)', 1), ('(1,CTS,/android/server/wm/KeyguardTransitionTests.java)', 1), ('(1,CTS,/android/view/cts/OrientationEventListenerTest.java)', 1), ('(7,CTS,/android/net/vcn/cts/VcnManagerTest.java)', 1), ('(1,CBC,/android/net/vcn/cts/VcnManagerTest.java)', 1), ('(3,XTS,/android/autofillservice/cts/ValidatorTest.java)', 1), ('(4,CTS,/android/autofillservice/cts/ValidatorTest.java)', 1), ('(3,XTS,/android/server/wm/AppConfigurationTests.java)', 1), ('(3,CTS,/android/server/wm/AppConfigurationTests.java)', 1), ('(1,CTS,/android/os/cts/BuildVersionTest.java)', 1), ('(6,CTS,/android/security/cts/Poc18_07.java)', 1), ('(1,CTS,/android/text/util/cts/Rfc822TokenizerTest.java)', 1), ('(6,CTS,/android/telephonyprovider/cts/MmsTest.java)', 1), ('(5,CTS,/android/telephony/cts/PhoneNumberUtilsTest.java)', 1), ('(8,CTS,/com/android/cts/verifier/sensors/sixdof/Utils/Path/ReferencePath.java)', 1), ('(11,CTS,/android/provider/cts/contacts/ContactsContractIntentsTest.java)', 1), ('(8,CTS,/android/graphics/drawable/cts/IconTest.java)', 1), ('(2,CTS,/android/server/wm/DisplaySizeTest.java)', 1), ('(1,CTS,/android/location/cts/fine/CriteriaTest.java)', 1), ('(2,CTS,/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java)', 1), ('(1,CTS,/android/telephony/cts/TelephonyRegistryManagerTest.java)', 1), ('(7,CTS,/android/uirendering/cts/testclasses/SweepTests.java)', 1), ('(1,CTS,/android/view/cts/ViewOutlineProviderTest.java)', 1), ('(5,CTS,/com/android/cts/useslibrary/UsesLibraryTest.java)', 1), ('(2,CTS,/android/vr/cts/VrSetFIFOThreadTest.java)', 1), ('(1,CTS,/android/telephony/cts/SmsCbLocationTest.java)', 1), ('(6,CTS,/android/server/wm/WindowInsetsControllerTests.java)', 1), ('(2,CTS,/android/app/cts/WallpaperManagerTest.java)', 1), ('(2,XTS,/android/suspendapps/cts/DialogTests.java)', 1), ('(5,CTS,/android/suspendapps/cts/DialogTests.java)', 1), ('(10,CTS,/com/android/cts/externalstorageapp/GiftTest.java)', 1), ('(1,CTS,/android/jni/cts/JniCTest.java)', 1), ('(1,CTS,/android/os/cts/ConditionVariableTest.java)', 1), ('(1,CTS,/com/android/cts/deviceowner/BluetoothRestrictionTest.java)', 1), ('(1,CTS,/android/externalservice/cts/ExternalServiceTest.java)', 1), ('(1,CTS,/android/bluetooth/cts/AdvertiseDataTest.java)', 1), ('(1,CTS,/android/net/ipsec/ike/cts/SaProposalTest.java)', 1), ('(23,AES,/android/net/ipsec/ike/cts/SaProposalTest.java)', 1), ('(8,CBC,/android/net/ipsec/ike/cts/SaProposalTest.java)', 1), ('(2,CTS,/android/contentcaptureservice/cts/ClipboardAccessTest.java)', 1), ('(4,CTS,/android/hardware/cts/helpers/sensorverification/MeanVerificationTest.java)', 1), ('(1,CTS,/android/content/pm/cts/FeatureTest.java)', 1), ('(6,CTS,/android/hardware/input/cts/tests/SonyDualshock4BluetoothTest.java)', 1), ('(1,CTS,/android/util/cts/SparseIntArrayTest.java)', 1), ('(32,CTS,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(14,CTS,/android/widget/cts/TabHostTest.java)', 1), ('(1,CTS,/android/security/cts/Poc18_04.java)', 1), ('(2,CTS,/android/content/res/cts/PluralResourcesTest.java)', 1), ('(3,CTS,/android/media/cts/AudioTrackLatencyTest.java)', 1), ('(3,ARM,/android/media/cts/AudioTrackLatencyTest.java)', 1), ('(4,CTS,/android/media/cts/MediaBrowserServiceTest.java)', 1), ('(4,CTS,/com/android/cts/devicepolicy/LauncherAppsProfileTest.java)', 1), ('(3,CTS,/android/server/wm/PinnedStackTests.java)', 1), ('(1,CTS,/android/permission/cts/CameraPermissionTest.java)', 1), ('(4,CTS,/android/hardware/devicestate/cts/DeviceStateManagerTests.java)', 1), ('(3,CTS,/android/appmanifest/cts/UsesNativeLibraryTestCase.java)', 1), ('(1,CTS,/android/renderscript/cts/SamplerTest.java)', 1), ('(18,HKDF,/android/security/identity/cts/DynamicAuthTest.java)', 1), ('(1,CTS,/android/security/identity/cts/DynamicAuthTest.java)', 1), ('(17,AES,/android/security/identity/cts/DynamicAuthTest.java)', 1), ('(1,CTS,/android/server/wm/UnsupportedErrorDialogTests.java)', 1), ('(9,XTS,/android/autofillservice/cts/saveui/CustomDescriptionTest.java)', 1), ('(10,CTS,/android/autofillservice/cts/saveui/CustomDescriptionTest.java)', 1), ('(10,CTS,/com/android/cts/deviceowner/NetworkLoggingTest.java)', 1), ('(22,CTS,/com/android/cts/storageapp/StorageTest.java)', 1), ('(1,CTS,/android/os/cts/CountDownTimerTest.java)', 1), ('(6,CTS,/android/uirendering/cts/testclasses/ViewAnimationUtilsTests.java)', 1), ('(2,CTS,/android/security/cts/DecodeTest.java)', 1), ('(7,CTS,/android/accounts/cts/AbstractAuthenticatorTests.java)', 1), ('(5,CTS,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(79,XTS,/android/security/cts/SELinuxHostTest.java)', 1), ('(14,CTS,/android/security/cts/SELinuxHostTest.java)', 1), ('(1,CTS,/android/location/cts/fine/GnssMeasurementTest.java)', 1), ('(1,CTS,/android/transition/cts/TransitionManagerTest.java)', 1), ('(1,CTS,/android/view/inspector/cts/IntFlagMappingTest.java)', 1), ('(1,CTS,/android/graphics/cts/FontVariationAxisTest.java)', 1), ('(5,CTS,/android/signature/cts/api/SignatureMultiLibsTest.java)', 1), ('(1,CTS,/android/os/cts/HidlMemoryTest.java)', 1), ('(1,XTS,/android/autofillservice/cts/commontests/TimePickerTestCase.java)', 1), ('(13,CTS,/android/autofillservice/cts/commontests/TimePickerTestCase.java)', 1)]"	"[('([1:/android/server/wm/AppConfigurationTests.java]:[CTS]:[1]:method_text:[h has     * rotation sensing optimization. So this is listed in cts-known-failures.xml.     */   ])', 2), ('([2:/android/provider/cts/contacts/ContactsContractIntentsTest.java]:[CTS]:[2]:method_text:[ntent.setData(ContactsContract.Contacts.CONTENT_URI);        assertCanBeHandled(intent);    }   ])', 2), ('([2:/android/signature/cts/tests/LineSpliteratorTestBase.java]:[CTS]:[2]:method_text:[erFn.apply(i)));        }        assertFalse(spliterator.tryAdvance(a -> { fail(); }));    }   ])', 2), ('([1:/android/server/wm/PinnedStackTests.java]:[CTS]:[1]:method_text:[*/);    }    // This test is black-listed in cts-known-failures.xml (b/35314835).    @Ignore   ])', 2), ('([1:/android/view/cts/SoundEffectConstantsTest.java]:[CTS]:[1]:method_text:[unner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class SoundEffectConstantsTest {   ])', 1), ('([1:/android/autofillservice/cts/LoginWithStringsActivityTest.java]:[XTS]:[1]:method_text:[    assertWithMessage(""extras not passed on save"").that(extraValue).isEqualTo(""4815162342"");    }}])', 1), ('([16:/android/autofillservice/cts/LoginWithStringsActivityTest.java]:[CTS]:[16]:method_text:[rActivityLaunched() {                mActivity = getActivity();            }        };    }   ])', 1), ('([4:/android/accessibilityservice/cts/AccessibilityButtonSdk29Test.java]:[CTS]:[4]:method_text:[FLAG_REQUEST_ACCESSIBILITY_BUTTON)                == FLAG_REQUEST_ACCESSIBILITY_BUTTON);    }   ])', 1), ('([1:/android/telephony/cts/AvailableNetworkInfoTest.java]:[CTS]:[1]:method_text:[te static final String OPERATOR_MCCMNC_2 = ""246135"";    private static final int SUB_ID = 123;   ])', 1), ('([1:/android/net/cts/network/permission/UpdateStatsPermissionTest.java]:[CTS]:[1]:method_text:[ission:     *   {@link android.Manifest.permission#UPDATE_DEVICE_STATS}.     */    @SmallTest   ])', 1), ('([1:/android/app/cts/NotificationCarExtenderTest.java]:[CTS]:[1]:method_text:[d void setUp() throws Exception {        super.setUp();        mContext = getContext();    }   ])', 1), ('([10:/com/android/cts/net/hostside/NetworkCallbackTest.java]:[CTS]:[10]:method_text:[e(false);        unregisterNetworkCallback();    }    @RequiredProperties({DATA_SAVER_MODE})   ])', 1), ('([1:/android/security/cts/VisualizerEffectTest.java]:[CTS]:[1]:method_text:[etUp();    }    //Testing security bug: 30229821    @SecurityTest(minPatchLevel = ""2017-03"")   ])', 1), ('([1:/android/security/cts/VisualizerEffectTest.java]:[CTS]:[1]:method_text:[ if (visualizerIndex == -1) {            Log.w(TAG,""No visualizer found to test"");        }    }])', 1), ('([1:/android/widget/cts/BaseAdapterTest.java]:[CTS]:[1]:method_text:[{@link BaseAdapter}. */@SmallTest@RunWith(AndroidJUnit4.class)public class BaseAdapterTest {   ])', 1), ('([1:/android/uwb/cts/AngleOfArrivalMeasurementTest.java]:[CTS]:[1]:method_text:[ent}. */@SmallTest@RunWith(AndroidJUnit4.class)public class AngleOfArrivalMeasurementTest {   ])', 1), ('([3:/android/uwb/cts/AngleOfArrivalMeasurementTest.java]:[CTS]:[3]:method_text:[urement.Builder.build() to succeed"");            }        }        return measurement;    }   ])', 1), ('([4:/android/hardware/cts/helpers/SensorCtsHelperTest.java]:[CTS]:[4]:method_text:[ TestCase {    /**     * Test {@link SensorCtsHelper#getFrequency(Number, TimeUnit)}.     */   ])', 1), ('([11:/android/hardware/cts/helpers/SensorCtsHelperTest.java]:[CTS]:[11]:method_text:[ 0.001);    }    /**     * Test {@link SensorCtsHelper#getPeriod(Number, TimeUnit)}.     */   ])', 1), ('([10:/android/hardware/cts/helpers/SensorCtsHelperTest.java]:[CTS]:[10]:method_text:[        assertEquals(1, SensorCtsHelper.getPeriod(1000000000, TimeUnit.NANOSECONDS), 0.001);    }}])', 1), ('([1:/android/car/cts/ExceptionsTest.java]:[CTS]:[1]:method_text:[al String MESSAGE = ""Oops!"";    private static final Exception CAUSE = new RuntimeException();   ])', 1), ('([3:/android/provider/cts/media/MediaStoreTest.java]:[CTS]:[3]:method_text:[dentity();    }    /**     * Sure this is pointless, but czars demand test coverage.     */   ])', 1), ('([2:/com/android/tests/loadingprogress/host/IncrementalLoadingProgressTest.java]:[CTS]:[2]:method_text:[       assertFalse(getDevice().isPackageInstalled(TEST_APP_PACKAGE_NAME));    }    @LargeTest   ])', 1), ('([1:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[CTS]:[1]:method_text:[inal String KEY_NAME = ""nice_key"";    private static final String KEYSTORE = ""AndroidKeyStore"";   ])', 1), ('([1:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[AES]:[1]:method_text:[    assertEquals(KeyProperties.AUTH_DEVICE_CREDENTIAL, info.getUserAuthenticationType());    }   ])', 1), ('([1:/com/android/cts/authboundkey/AuthBoundKeyAppTest.java]:[CBC]:[1]:method_text:[    assertEquals(KeyProperties.AUTH_DEVICE_CREDENTIAL, info.getUserAuthenticationType());    }   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_INPUT), ""ID"");    }   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java]:[XTS]:[1]:method_text:[       assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""pass"");    }}])', 1), ('([15:/android/autofillservice/cts/inline/InlineSimpleSaveActivityTest.java]:[CTS]:[15]:method_text:[ule getMainTestRule() {        return InlineUiBot.annotateRule(super.getMainTestRule());    }   ])', 1), ('([4:/android/view/cts/SystemGestureExclusionRectsTest.java]:[CTS]:[4]:method_text:[vity> mActivityRule =            new ActivityTestRule<>(SystemGestureExclusionActivity.class);   ])', 1), ('([6:/android/view/cts/SystemGestureExclusionRectsTest.java]:[CTS]:[6]:method_text:[  * Animate a view from X=0 to X=30px and verify that the static exclusion rect follows.     */   ])', 1), ('([7:/android/view/cts/SystemGestureExclusionRectsTest.java]:[CTS]:[7]:method_text:[ernals correctly handle cycling between exclusion rects present     * and rects absent.     */   ])', 1), (""([6:/android/view/cts/SystemGestureExclusionRectsTest.java]:[CTS]:[6]:method_text:[        }    }    /**     * Test round-trip of setting the window's exclusion rects     */   ])"", 1), ('([9:/android/view/cts/SystemGestureExclusionRectsTest.java]:[CTS]:[9]:method_text:[cts());        });        assertTrue(""set rects timeout"", setter[0].await(3, SECONDS));    }   ])', 1), ('([28:/android/view/cts/SystemGestureExclusionRectsTest.java]:[CTS]:[28]:method_text:[  public void onAnimationEnd(Animator animation) {            mLatch.countDown();        }    }}])', 1), ('([1:/android/server/wm/KeyguardTransitionTests.java]:[CTS]:[1]:method_text:[    assumeTrue(supportsInsecureLock());        assumeFalse(isUiModeLockedToVrHeadset());    }   ])', 1), ('([1:/android/view/cts/OrientationEventListenerTest.java]:[CTS]:[1]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([7:/android/net/vcn/cts/VcnManagerTest.java]:[CTS]:[7]:method_text:[           INVALID_SUBSCRIPTION_ID,                dataSubId);        return dataSubId;    }   ])', 1), ('([1:/android/net/vcn/cts/VcnManagerTest.java]:[CBC]:[1]:method_text:[gId */,                true /* expectedUseEncap */,                ikeDeleteChildResp);    }   ])', 1), ('([3:/android/autofillservice/cts/ValidatorTest.java]:[XTS]:[3]:method_text:[).findByAutofillId(id);        assertThat(validator.isValid(valueFinder)).isEqualTo(valid);    }}])', 1), ('([4:/android/autofillservice/cts/ValidatorTest.java]:[CTS]:[4]:method_text:[n = ""Service-specific test"")public class ValidatorTest extends AbstractLoginActivityTestCase {   ])', 1), ('([3:/android/server/wm/AppConfigurationTests.java]:[XTS]:[3]:method_text:[     * activity.     * Also verify that occluded activity will not get config changes.     */   ])', 1), ('([1:/android/server/wm/AppConfigurationTests.java]:[CTS]:[1]:method_text:[lues reported in fullscreen should be larger than those reported in     * docked state.     */   ])', 1), ('([1:/android/os/cts/BuildVersionTest.java]:[CTS]:[1]:method_text:[S_FILE = ""platform_releases.txt"";    @SuppressWarnings(""deprecation"")    @RestrictedBuildTest   ])', 1), ('([1:/android/security/cts/Poc18_07.java]:[CTS]:[1]:method_text:[ssRunner.class)public class Poc18_07 extends SecurityTestCase {   /**    * b/76221123    */   ])', 1), ('([5:/android/security/cts/Poc18_07.java]:[CTS]:[5]:method_text:[ator: Add SIM account.*ContactsProvider: Accounts changed"",                logcat);      }    }}])', 1), ('([1:/android/text/util/cts/Rfc822TokenizerTest.java]:[CTS]:[1]:method_text:[fc822Tokenizer}. */@SmallTest@RunWith(AndroidJUnit4.class)public class Rfc822TokenizerTest {   ])', 1), ('([5:/android/telephonyprovider/cts/MmsTest.java]:[CTS]:[5]:method_text:[nup();        mContentResolver = getInstrumentation().getContext().getContentResolver();    }   ])', 1), ('([1:/android/telephonyprovider/cts/MmsTest.java]:[CTS]:[1]:method_text:[ephony.Mms.MESSAGE_TYPE, messageType);        return mContentResolver.insert(uri, values);    }}])', 1), ('([3:/android/telephony/cts/PhoneNumberUtilsTest.java]:[CTS]:[3]:method_text:[ tearDown() throws Exception {        PhoneNumberUtils.setMinMatchForTest(mOldMinMatch);    }   ])', 1), ('([2:/android/telephony/cts/PhoneNumberUtilsTest.java]:[CTS]:[2]:method_text:[rd != null) {                cr.delete(phoneRecord, null, null);            }        }    }   ])', 1), ('([8:/com/android/cts/verifier/sensors/sixdof/Utils/Path/ReferencePath.java]:[CTS]:[8]:method_text:[* @throws WaypointStartPointException  if the location is not close enough to the start.     */   ])', 1), ('([5:/android/provider/cts/contacts/ContactsContractIntentsTest.java]:[CTS]:[5]:method_text:[ResolveInfo found for "" + intent.toString(),                resolveInfoList.size() > 0);    }   ])', 1), ('([2:/android/provider/cts/contacts/ContactsContractIntentsTest.java]:[CTS]:[2]:method_text:[nt.setType(ContactsContract.Contacts.CONTENT_ITEM_TYPE);        assertCanBeHandled(intent);    }}])', 1), ('([6:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[6]:method_text:[;    @Before    public void setup() {        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([2:/android/graphics/drawable/cts/IconTest.java]:[CTS]:[2]:method_text:[ity(icon);        assertTrue(icon.loadDrawable(mActivity) instanceof AdaptiveIconDrawable);    }}])', 1), ('([1:/android/server/wm/DisplaySizeTest.java]:[CTS]:[1]:method_text:[IDTH_ACTIVITY.getPackageName());        stopTestPackage(TEST_ACTIVITY.getPackageName());    }   ])', 1), ('([1:/android/server/wm/DisplaySizeTest.java]:[CTS]:[1]:method_text:[private void resetDensity() {            executeShellCommand(""wm density reset"");        }    }}])', 1), ('([1:/android/location/cts/fine/CriteriaTest.java]:[CTS]:[1]:method_text:[st;import org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class CriteriaTest {   ])', 1), ('([2:/android/content/pm/cts/shortcut/upgrade/ShortcutManagerPreUpgradeTest.java]:[CTS]:[2]:method_text:[;@SmallTestpublic class ShortcutManagerPreUpgradeTest extends ShortcutManagerDeviceTestBase {   ])', 1), ('([1:/android/telephony/cts/TelephonyRegistryManagerTest.java]:[CTS]:[1]:method_text:[}    /**     * expect security exception as there is no carrier privilege permission.     */   ])', 1), ('([7:/android/uirendering/cts/testclasses/SweepTests.java]:[CTS]:[7]:method_text:[LT_MSSIM_COMPARER = new BitmapComparer[] {            new MSSIMComparer(HIGH_THRESHOLD)    };   ])', 1), ('([1:/android/view/cts/ViewOutlineProviderTest.java]:[CTS]:[1]:method_text:[Top(top);        view.setRight(right);        view.setBottom(bottom);    }    @UiThreadTest   ])', 1), ('([1:/com/android/cts/useslibrary/UsesLibraryTest.java]:[CTS]:[1]:method_text:[ibrary oat files (if WITH_DEXPREOPT=false     * we do not preopt the shared libraries).     */   ])', 1), ('([4:/com/android/cts/useslibrary/UsesLibraryTest.java]:[CTS]:[4]:method_text:[ethod.setAccessible(true);        return (boolean) isBackedByOatFileMethod.invoke(dexFile);    }}])', 1), ('([2:/android/vr/cts/VrSetFIFOThreadTest.java]:[CTS]:[2]:method_text:[tra(OpenGLESActivity.EXTRA_MUTABLE, mutableAttribute);        setActivityIntent(intent);    }   ])', 1), ('([1:/android/telephony/cts/SmsCbLocationTest.java]:[CTS]:[1]:method_text:[ = ""TEST_PLMN 2"";    private static final int LAC = -1;    private static final int CID = -1;   ])', 1), ('([6:/android/server/wm/WindowInsetsControllerTests.java]:[CTS]:[6]:method_text:[EM_DIALOGS"";    @Rule    public final ErrorCollector mErrorCollector = new ErrorCollector();   ])', 1), ('([2:/android/app/cts/WallpaperManagerTest.java]:[CTS]:[2]:method_text:[eceiver != null) {            mContext.unregisterReceiver(mBroadcastReceiver);        }    }   ])', 1), ('([1:/android/suspendapps/cts/DialogTests.java]:[XTS]:[1]:method_text:[     assertFalse(""Test package still suspended"", mTestAppInterface.isTestAppSuspended());    }   ])', 1), ('([1:/android/suspendapps/cts/DialogTests.java]:[XTS]:[1]:method_text:[      if (mTestAppInterface != null) {            mTestAppInterface.disconnect();        }    }}])', 1), ('([5:/android/suspendapps/cts/DialogTests.java]:[CTS]:[5]:method_text:[wakeUp();        }        SystemUtil.runShellCommandForNoOutput(""wm dismiss-keyguard"");    }   ])', 1), ('([10:/com/android/cts/externalstorageapp/GiftTest.java]:[CTS]:[10]:method_text:[e;import java.io.File;import java.util.List;public class GiftTest extends AndroidTestCase {   ])', 1), ('([1:/android/jni/cts/JniCTest.java]:[CTS]:[1]:method_text:[ Calls the native test, and {@code fail()}s appropriately if     * there was a problem.     */   ])', 1), ('([1:/android/os/cts/ConditionVariableTest.java]:[CTS]:[1]:method_text:[ Exception {        super.setUp();        mConditionVariable = new ConditionVariable();    }   ])', 1), ('([1:/com/android/cts/deviceowner/BluetoothRestrictionTest.java]:[CTS]:[1]:method_text:[Manager.clearUserRestriction(getWho(), UserManager.DISALLOW_BLUETOOTH);        enable();    }   ])', 1), ('([1:/android/externalservice/cts/ExternalServiceTest.java]:[CTS]:[1]:method_text:[  }    /** Tests that an isolatedProcess service cannot be bound to by an external package. */   ])', 1), ('([1:/android/bluetooth/cts/AdvertiseDataTest.java]:[CTS]:[1]:method_text:[oid setUp() {        mAdvertiseDataBuilder = new AdvertiseData.Builder();    }    @SmallTest   ])', 1), ('([1:/android/net/ipsec/ike/cts/SaProposalTest.java]:[CTS]:[1]:method_text:[(                COMBINED_MODE_CIPHERS, Collections.EMPTY_LIST, Collections.EMPTY_LIST);    }   ])', 1), ('([23:/android/net/ipsec/ike/cts/SaProposalTest.java]:[AES]:[23]:method_text:[(                COMBINED_MODE_CIPHERS, Collections.EMPTY_LIST, Collections.EMPTY_LIST);    }   ])', 1), ('([8:/android/net/ipsec/ike/cts/SaProposalTest.java]:[CBC]:[8]:method_text:[(                COMBINED_MODE_CIPHERS, Collections.EMPTY_LIST, Collections.EMPTY_LIST);    }   ])', 1), ('([2:/android/contentcaptureservice/cts/ClipboardAccessTest.java]:[CTS]:[2]:method_text:[   @After    public void cleanYourself() {        mClipboardManager.clearPrimaryClip();    }   ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/MeanVerificationTest.java]:[CTS]:[4]:method_text:[    /**     * Test {@link MeanVerification#verify(TestSensorEnvironment, SensorStats)}.     */   ])', 1), ('([1:/android/content/pm/cts/FeatureTest.java]:[CTS]:[1]:method_text:[;    }    /**     * Test whether device supports managed profiles as required by CDD     */   ])', 1), ('([6:/android/hardware/input/cts/tests/SonyDualshock4BluetoothTest.java]:[CTS]:[6]:method_text:[getKernelVersion();        return compareMajorMinorVersion(kVersionString, ""3.18"") >= 0;    }   ])', 1), ('([1:/android/util/cts/SparseIntArrayTest.java]:[CTS]:[1]:method_text:[nal int   NON_EXISTED_KEY = 123;    private static final int   VALUE_FOR_NON_EXISTED_KEY = -1;   ])', 1), ('([16:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[16]:method_text:[          sInstrumentation, sUiAutomation, mActivityRule);    }    @MediumTest    @Presubmit   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[1]:method_text:[ after update"",                editTextNode.isHeading());    }    @MediumTest    @Presubmit   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[1]:method_text:[g(R.string.button_tooltip),                buttonNode.getTooltipText());    }    @MediumTest   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[1]:method_text:[List())));        assertTrue(hasTooltipShowing(R.id.buttonWithTooltip));    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[2]:method_text:[resh();        assertThat(buttonNode.getTraversalBefore(), nullValue());    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[2]:method_text:[refresh();        assertThat(editNode.getTraversalAfter(), nullValue());    }    @MediumTest   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[1]:method_text:[r one        assertThat(labelForNode.getLabeledBy(), equalTo(editNode));    }    @MediumTest   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[1]:method_text:[argThat(event -> event.getActionMasked() == MotionEvent.ACTION_OUTSIDE));    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[2]:method_text:["",                node.getViewIdResourceName());        node.recycle();    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[2]:method_text:[ {            enableTouchExploration(sInstrumentation, false);        }    }    @MediumTest   ])', 1), ('([3:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[CTS]:[3]:method_text:[tic int getCurrentUser() {        return android.os.Process.myUserHandle().getIdentifier();    }}])', 1), ('([4:/android/widget/cts/TabHostTest.java]:[CTS]:[4]:method_text:[umentationRegistry.getInstrumentation();        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([2:/android/widget/cts/TabHostTest.java]:[CTS]:[2]:method_text:[ no exception occurs when uses TabSpec.setContent(android.content.Intent) after setup().     */   ])', 1), ('([2:/android/widget/cts/TabHostTest.java]:[CTS]:[2]:method_text:[        mInstrumentation.waitForIdleSync();        activity.finish();    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TabHostTest.java]:[CTS]:[1]:method_text:[b(1);        assertTrue(tabHost.getCurrentView() instanceof ListView);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TabHostTest.java]:[CTS]:[1]:method_text:[ByTag(""unknown tag"");        assertEquals(0, tabHost.getCurrentTab());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/TabHostTest.java]:[CTS]:[2]:method_text:[hen the selected state of any of the items     * in this list changes     */    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TabHostTest.java]:[CTS]:[1]:method_text:[CurrentTab(0);        verifyNoMoreInteractions(mockTabChangeListener);    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/TabHostTest.java]:[CTS]:[1]:method_text:[    tabHost.setCurrentTab(1);        assertEquals(TAG_TAB2, tabHost.getCurrentTabTag());    }   ])', 1), ('([1:/android/security/cts/Poc18_04.java]:[CTS]:[1]:method_text:[    * Does not require root but must be a hostside test to avoid     * a race condition     */   ])', 1), ('([2:/android/content/res/cts/PluralResourcesTest.java]:[CTS]:[2]:method_text:[Resources(mResources.getAssets(), mResources.getDisplayMetrics(), config);    }    @SmallTest   ])', 1), ('([3:/android/media/cts/AudioTrackLatencyTest.java]:[CTS]:[3]:method_text:[e(String testName, String message) {        Log.e(TAG, ""["" + testName + ""] "" + message);    }   ])', 1), ('([3:/android/media/cts/AudioTrackLatencyTest.java]:[ARM]:[3]:method_text:[e is less than capacity.    // We want to make sure the track starts properly and is not stuck.   ])', 1), ('([4:/android/media/cts/MediaBrowserServiceTest.java]:[CTS]:[4]:method_text:[ll) {            mMediaBrowser.disconnect();            mMediaBrowser = null;        }    }   ])', 1), ('([4:/com/android/cts/devicepolicy/LauncherAppsProfileTest.java]:[CTS]:[4]:method_text:[allPackage(LAUNCHER_TESTS_HAS_LAUNCHER_ACTIVITY_APK);        }        super.tearDown();    }   ])', 1), ('([1:/android/server/wm/PinnedStackTests.java]:[CTS]:[1]:method_text:[void setUp() throws Exception {        super.setUp();        assumeTrue(supportsPip());    }   ])', 1), ('([1:/android/permission/cts/CameraPermissionTest.java]:[CTS]:[1]:method_text:[ Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */    @MediumTest   ])', 1), ('([4:/android/hardware/devicestate/cts/DeviceStateManagerTests.java]:[CTS]:[4]:method_text:[ are in the range     * [{@link #MINIMUM_DEVICE_STATE}, {@link #MAXIMUM_DEVICE_STATE}].     */   ])', 1), ('([2:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[CTS]:[2]:method_text:[package manager is the same as     * the public.libraries*.txt files in the partitions.     */   ])', 1), ('([1:/android/appmanifest/cts/UsesNativeLibraryTestCase.java]:[CTS]:[1]:method_text:[on-existing lib    ///////////////////////////////////////////////////////////////////////////   ])', 1), ('([1:/android/renderscript/cts/SamplerTest.java]:[CTS]:[1]:method_text:[y[i] == val) {                return true;            }        }        return false;    }   ])', 1), ('([11:/android/security/identity/cts/DynamicAuthTest.java]:[HKDF]:[11]:method_text:[re done. Clean up after ourselves.        store.deleteCredentialByName(credentialName);    }   ])', 1), ('([7:/android/security/identity/cts/DynamicAuthTest.java]:[HKDF]:[7]:method_text:[taticAuthenticationData() throwing UnknownAuthenticationKeyException    // on an unknown auth key}])', 1), ('([1:/android/security/identity/cts/DynamicAuthTest.java]:[CTS]:[1]:method_text:[ption;public class DynamicAuthTest {    private static final String TAG = ""DynamicAuthTest"";   ])', 1), ('([10:/android/security/identity/cts/DynamicAuthTest.java]:[AES]:[10]:method_text:[re done. Clean up after ourselves.        store.deleteCredentialByName(credentialName);    }   ])', 1), ('([7:/android/security/identity/cts/DynamicAuthTest.java]:[AES]:[7]:method_text:[taticAuthenticationData() throwing UnknownAuthenticationKeyException    // on an unknown auth key}])', 1), ('([1:/android/server/wm/UnsupportedErrorDialogTests.java]:[CTS]:[1]:method_text:[}    /** Make sure the developer options apply correctly leading to the dialog being shown. */   ])', 1), ('([3:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[3]:method_text:[Bot.saveForAutofill(true, SAVE_DATA_TYPE_GENERIC);        sReplier.getNextSaveRequest();    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""batch updated"");    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[);        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""transformed"");    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[XTS]:[2]:method_text:[xt = matchFirst ? ""polo"" : ""POLO"";        assertSaveUiIsShownWithTwoLines(expectedText);    }   ])', 1), ('([10:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[CTS]:[10]:method_text:[Bot.saveForAutofill(true, SAVE_DATA_TYPE_GENERIC);        sReplier.getNextSaveRequest();    }   ])', 1), (""([3:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[CTS]:[3]:method_text:[ there's one user on the device or all     * secondary users / profiles are affiliated.     */   ])"", 1), ('([7:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[CTS]:[7]:method_text:[s addr) {        return ((addr instanceof Inet4Address) || (addr instanceof Inet6Address));    }}])', 1), ('([12:/com/android/cts/storageapp/StorageTest.java]:[CTS]:[12]:method_text:[se {    private Context getContext() {        return getInstrumentation().getContext();    }   ])', 1), ('([2:/com/android/cts/storageapp/StorageTest.java]:[CTS]:[2]:method_text:[(new UiSelector().text(""OK"")).click();    }    /**     * Measure ourselves manually.     */   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[CTS]:[1]:method_text:[""cts"" probe files in every possible common storage location that     * we can think of.     */   ])', 1), ('([4:/com/android/cts/storageapp/StorageTest.java]:[CTS]:[4]:method_text:[ the ""cts"" probe files created above,     * since our storage should be fully isolated.     */   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[CTS]:[1]:method_text:[tory()) {                    traverse.push(f);                }            }        }    }   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[CTS]:[1]:method_text:[atedLegacy() throws Exception {        assertTrue(new File(""/sdcard/cts_top"").exists());    }   ])', 1), ('([1:/com/android/cts/storageapp/StorageTest.java]:[CTS]:[1]:method_text:[(String feature) {        return getContext().getPackageManager().hasSystemFeature(feature);    }])', 1), ('([1:/android/os/cts/CountDownTimerTest.java]:[CTS]:[1]:method_text:[       mStartTime = System.currentTimeMillis();        mActivity.countDownTimer.start();    }   ])', 1), ('([6:/android/uirendering/cts/testclasses/ViewAnimationUtilsTests.java]:[CTS]:[6]:method_text:[st@RunWith(AndroidJUnit4.class)public class ViewAnimationUtilsTests extends ActivityTestBase {   ])', 1), ('([2:/android/security/cts/DecodeTest.java]:[CTS]:[2]:method_text:[. Instead, it should fail to     * decode.     */    @SecurityTest(minPatchLevel = ""2017-07"")   ])', 1), ('([7:/android/accounts/cts/AbstractAuthenticatorTests.java]:[CTS]:[7]:method_text:[rypted session     * bundle should always be returned without password or status token.     */   ])', 1), ('([4:/android/hardware/camera2/cts/StaticMetadataTest.java]:[CTS]:[4]:method_text:[  /**     * Test the available capability for different hardware support level devices.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[CTS]:[1]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([15:/android/security/cts/SELinuxHostTest.java]:[XTS]:[15]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[XTS]:[1]:method_text:[rohibition of socket use with the     * only exceptions for the automotive device type.     */   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[XTS]:[1]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([11:/android/security/cts/SELinuxHostTest.java]:[XTS]:[11]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([8:/android/security/cts/SELinuxHostTest.java]:[XTS]:[8]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([7:/android/security/cts/SELinuxHostTest.java]:[XTS]:[7]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([9:/android/security/cts/SELinuxHostTest.java]:[XTS]:[9]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([8:/android/security/cts/SELinuxHostTest.java]:[XTS]:[8]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([4:/android/security/cts/SELinuxHostTest.java]:[XTS]:[4]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([9:/android/security/cts/SELinuxHostTest.java]:[XTS]:[9]:method_text:[ on the device is valid.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([6:/android/security/cts/SELinuxHostTest.java]:[XTS]:[6]:method_text:[at all types on /data have the data_file_type attribute.     *     * @throws Exception     */   ])', 1), ('([10:/android/security/cts/SELinuxHostTest.java]:[CTS]:[10]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([3:/android/security/cts/SELinuxHostTest.java]:[CTS]:[3]:method_text:[rohibition of socket use with the     * only exceptions for the automotive device type.     */   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[CTS]:[1]:method_text:[e standard AOSP entries.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/location/cts/fine/GnssMeasurementTest.java]:[CTS]:[1]:method_text:[Unit4.class)public class GnssMeasurementTest {    private static final double DELTA = 0.001;   ])', 1), ('([1:/android/transition/cts/TransitionManagerTest.java]:[CTS]:[1]:method_text:[st@RunWith(AndroidJUnit4.class)public class TransitionManagerTest extends BaseTransitionTest {   ])', 1), ('([1:/android/view/inspector/cts/IntFlagMappingTest.java]:[CTS]:[1]:method_text:[agMapping}. */@SmallTest@RunWith(AndroidJUnit4.class)public final class IntFlagMappingTest {   ])', 1), ('([1:/android/graphics/cts/FontVariationAxisTest.java]:[CTS]:[1]:method_text:[inal String[] INVALID_TAGS = {        """", ""abcde"", ""\\n\\n\\n\\n"", ""\\u0000bcd"", ""\\u3042bcd""    };   ])', 1), ('([5:/android/signature/cts/api/SignatureMultiLibsTest.java]:[CTS]:[5]:method_text:[  * <p/>     * Will check the entire API, and then report the complete list of failures     */   ])', 1), ('([1:/android/os/cts/HidlMemoryTest.java]:[CTS]:[1]:method_text:[ativeHandle;import org.junit.Test;import java.io.IOException;public class HidlMemoryTest {   ])', 1), ('([1:/android/autofillservice/cts/commontests/TimePickerTestCase.java]:[XTS]:[1]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_OUTPUT), ""10:40"");    }}])', 1), ('([13:/android/autofillservice/cts/commontests/TimePickerTestCase.java]:[CTS]:[13]:method_text:[ty>        extends AutoFillServiceTestCase.AutoActivityLaunch<A> {    protected A mActivity;   ])', 1)]"	"https://github.com"	""	"[('CTS', 136), ('XTS', 23), ('AES', 4), ('CBC', 3), ('HKDF', 2), ('ARM', 1)]"	"[('[com.android.cts.authboundkey.AuthBoundKeyAppTest testGenerateAuthBoundKey None]', 2), ('[android.view.cts.SystemGestureExclusionRectsTest isEmpty None]', 2), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthTest None]', 2), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthWithExpirationTest None]', 2), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo None]', 2), ('[android.security.cts.SELinuxHostTest testAllDomainsEnforcing None]', 2), ('[android.security.cts.SELinuxHostTest testAospPropertyContexts None]', 2), ('[android.autofillservice.cts.LoginWithStringsActivityTest testAutoFillOneDatasetAndSave None]', 1), ('[android.accessibilityservice.cts.AccessibilityButtonSdk29Test postTestTearDown None]', 1), ('[com.android.cts.net.hostside.NetworkCallbackTest TestNetworkCallback None]', 1), ('[android.security.cts.VisualizerEffectTest testVisualizer_MalformedConstructor None]', 1), ('[android.uwb.cts.AngleOfArrivalMeasurementTest testBuilder None]', 1), ('[android.hardware.cts.helpers.SensorCtsHelperTest testGetFrequency None]', 1), ('[android.hardware.cts.helpers.SensorCtsHelperTest testGetPeriod None]', 1), ('[android.provider.cts.media.MediaStoreTest dropShellPermissionIdentity None]', 1), ('[android.autofillservice.cts.inline.InlineSimpleSaveActivityTest testAutofillSave None]', 1), ('[android.autofillservice.cts.inline.InlineSimpleSaveActivityTest testAutofill_oneDatasetAndSave None]', 1), ('[android.autofillservice.cts.inline.InlineSimpleSaveActivityTest InlineSimpleSaveActivityTest None]', 1), ('[android.view.cts.SystemGestureExclusionRectsTest emptyList None]', 1), ('[android.server.wm.KeyguardTransitionTests isUiModeLockedToVrHeadset None]', 1), ('[android.net.vcn.cts.VcnManagerTest VcnManagerTest None]', 1), ('[android.net.vcn.cts.VcnManagerTest testVcnMigrationAfterNetworkDies None]', 1), ('[android.autofillservice.cts.ValidatorTest testDontShowUiWhenValidatorFails None]', 1), ('[android.server.wm.AppConfigurationTests testActivityContextDerivedDisplayContextOrientationWhenRotating None]', 1), ('[android.server.wm.AppConfigurationTests getDefaultDisplay None]', 1), ('[android.server.wm.AppConfigurationTests testAppOrientationRequestConfigChanges None]', 1), ('[android.server.wm.AppConfigurationTests testTaskCloseRestoreFixedOrientation None]', 1), ('[android.security.cts.Poc18_07 testPocCVE_2017_18275 None]', 1), ('[android.telephonyprovider.cts.MmsTest setupTestEnvironment None]', 1), ('[android.telephonyprovider.cts.MmsTest testMmsUpdate_canUpdateReadAndSeenStatus None]', 1), ('[android.telephony.cts.PhoneNumberUtilsTest getMinMatchForTest None]', 1), ('[android.telephony.cts.PhoneNumberUtilsTest testGetMethods None]', 1), ('[android.provider.cts.contacts.ContactsContractIntentsTest testViewContactDir None]', 1), ('[android.provider.cts.contacts.ContactsContractIntentsTest testPickContactDir None]', 1), ('[android.provider.cts.contacts.ContactsContractIntentsTest testGetContentContactDir None]', 1), ('[android.graphics.drawable.cts.IconTest testResourceIcon_getType None]', 1), ('[android.server.wm.DisplaySizeTest testSizeRangesAfterSettingDisplaySize None]', 1), ('[android.uirendering.cts.testclasses.SweepTests DisplayModifier None]', 1), ('[com.android.cts.useslibrary.UsesLibraryTest testDuplicateLibrary None]', 1), ('[android.vr.cts.VrSetFIFOThreadTest VrSetFIFOThreadTest None]', 1), ('[android.app.cts.WallpaperManagerTest isWallpaperSupported None]', 1), ('[android.suspendapps.cts.DialogTests testInterceptorActivity_unsuspend None]', 1), ('[android.suspendapps.cts.DialogTests testInterceptorActivity_moreDetails None]', 1), ('[android.suspendapps.cts.DialogTests isScreenOn None]', 1), ('[android.jni.cts.JniCTest isCpuAbiNone None]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4BluetoothTest SonyDualshock4BluetoothTest None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest postTestTearDown None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testViewHeadingReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTooltipTextReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTooltipTextActionsReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTraversalBeforeReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTraversalAfterReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testLabelForReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testA11yActionTriggerMotionEventActionOutside None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTouchDelegateInfoReportedToAccessibility None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTouchDelegateWithEbtBetweenView_ReHoverDelegate_FocusTargetAgain None]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTouchDelegateCoverParentWithEbt_HoverChildAndBack_FocusTargetAgain None]', 1), ('[android.widget.cts.TabHostTest testSetup1 None]', 1), ('[android.widget.cts.TabHostTest testSetup2 None]', 1), ('[android.widget.cts.TabHostTest testGetCurrentView None]', 1), ('[android.widget.cts.TabHostTest testSetCurrentTabByTag None]', 1), ('[android.widget.cts.TabHostTest testGetTabContentView None]', 1), ('[android.widget.cts.TabHostTest testSetOnTabChangedListener None]', 1), ('[android.widget.cts.TabHostTest testGetCurrentTabTag None]', 1), ('[android.content.res.cts.PluralResourcesTest getDisplayMetrics None]', 1), ('[android.media.cts.AudioTrackLatencyTest testPlaySmallBuffer None]', 1), ('[android.media.cts.MediaBrowserServiceTest disconnect None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest removeTestUsers None]', 1), ('[android.server.wm.PinnedStackTests testEnterPictureInPictureMode None]', 1), ('[android.server.wm.PinnedStackTests testAlwaysFocusablePipActivity None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase getTestInformation None]', 1), ('[android.appmanifest.cts.UsesNativeLibraryTestCase testPublicLibrariesAreAllRegistered None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeBatchUpdates None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeTransformations None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest assertSaveUiWithoutCustomDescriptionIsShown None]', 1), ('[com.android.cts.deviceowner.NetworkLoggingTest testNetworkLoggingAndRetrieval None]', 1), ('[com.android.cts.storageapp.StorageTest testClearSpace None]', 1), ('[com.android.cts.storageapp.StorageTest testBehaviorTombstone None]', 1), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedWrite None]', 1), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedRead None]', 1), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedLegacy None]', 1), ('[com.android.cts.storageapp.StorageTest testExternalStorageIsolatedNonLegacy None]', 1), ('[android.os.cts.CountDownTimerTest currentTimeMillis None]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testHwSupportedLevel None]', 1), ('[android.security.cts.SELinuxHostTest testMLSAttributes None]', 1), ('[android.security.cts.SELinuxHostTest testValidSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospSeappContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testAospServiceContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidFileContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidPropertyContexts None]', 1), ('[android.security.cts.SELinuxHostTest testValidServiceContexts None]', 1), ('[android.autofillservice.cts.commontests.TimePickerTestCase testAutoFillAndSave None]', 1)]"
"9.9.3.2  . Per"	"9.9.3.2"	"C-1-6"	"9.9.3.2/C-1-6"	"09090302.670106"	"""C-1-6] MUST be bound to the corresponding user's lock screen credentials. Per-user block-level encryption can be implemented using the Linux kernel “dm-crypt” feature over per-user partitions. <h4 id=""9_9_4_resume_on_reboot"" """	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.5  . Multi"	"9.5"	"C-1-1"	"9.5/C-1-1"	"09050000.670101"	"""C-1-1] MUST meet the following requirements related to multi-user support."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3.2  . Per"	"9.9.3.2"	"C-1-2"	"9.9.3.2/C-1-2"	"09090302.670102"	"""C-1-2] MUST provide per-user partitions, either using raw partitions or logical volumes."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
"9.9.3.1  . File Based Encryption with Metadata Encryption"	"9.9.3.1"	"C-1-13"	"9.9.3.1/C-1-13"	"09090301.670113"	"""C-1-13] MUST use a cryptographically strong and non-reversible key derivation function (e.g. HKDF-SHA512) to derive any needed subkeys (e.g. per-file keys) from the CE and DE keys. ""Cryptographically strong and non-reversible"" means that the key derivation function has a security strength of at least 256 bits and behaves as a pseudorandom function family over its inputs."""	""	""	"HKDF SHA512"	""	""	""	""	""	""	""	""	"[('android.security.identity.cts.ProvisioningTest', 21), ('android.security.identity.cts.HkdfTest', 8), ('android.appsecurity.cts.PkgInstallSignatureVerificationTest', 8), ('android.keystore.cts.KeyAttestationTest', 7), ('android.net.cts.IpSecManagerTest', 6), ('android.content.pm.cts.ChecksumsTest', 6), ('android.keystore.cts.KeyPairGeneratorTest', 5), ('android.security.identity.cts.UserAuthTest', 4), ('android.keystore.cts.KeyProtectionTest', 3), ('android.security.identity.cts.DynamicAuthTest', 2), ('android.keystore.cts.RsaSignaturePerformanceTest', 2), ('android.keystore.cts.KeyGenParameterSpecTest', 2), ('android.keystore.cts.KeyGeneratorTest', 2), ('android.keystore.cts.CipherTest', 2), ('com.android.tests.stagedinstall.host.ApexShimValidationTest', 2), ('android.security.identity.cts.X509CertificateSigningTest', 1), ('android.keystore.cts.HmacMacPerformanceTest', 1), ('android.keystore.cts.EcdsaSignaturePerformanceTest', 1), ('android.keystore.cts.SignatureTest', 1), ('android.keystore.cts.MacTest', 1), ('android.keystore.cts.KeyFactoryTest', 1), ('android.keystore.cts.KeyInfoTest', 1), ('android.keystore.cts.SecretKeyFactoryTest', 1), ('android.security.identity.cts.UtilUnitTests', 1)]"	"[('length', 4), ('getPackageManager', 3), ('multipleNamespaces', 2), ('Random', 2), ('toString', 2), ('DeviceLockSession', 2), ('LockScreenSession', 2), ('setLockCredential', 2), ('performDeviceLock', 2), ('sleepDevice', 2), ('getTargetContext', 2), ('supports3DES', 2), ('getUiAutomation', 2), ('getPackageInstaller', 2), ('deleteCredential', 1), ('proofOfOwnership', 1), ('cborEncodeDecode', 1), ('coseGenerateKeyPair', 1), ('build', 1), ('generateKeyPair', 1), ('getSimpleName', 1), ('getInstrumentation', 1), ('getContext', 1), ('AbandonAllPackageSessionsRule', 1), ('onBefore', 1), ('onAfter', 1)]"	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 12), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 9), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAttestationTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpSecManagerTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ChecksumsTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyPairGeneratorTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/HkdfTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/HkdfTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyProtectionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/DynamicAuthTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/RsaSignaturePerformanceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyGenParameterSpecTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/UserAuthTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyGeneratorTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/UserAuthTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/X509CertificateSigningTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/HmacMacPerformanceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/EcdsaSignaturePerformanceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/SignatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/MacTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyFactoryTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/SecretKeyFactoryTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/identity/src/android/security/identity/cts/UtilUnitTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/stagedinstall/src/com/android/tests/stagedinstall/host/ApexShimValidationTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/stagedinstall/src/com/android/tests/stagedinstall/host/ApexShimValidationTest.java', 1)]"	"[('(25,HKDF,/android/security/identity/cts/HkdfTest.java)', 2), ('(4,HKDF,/android/security/identity/cts/UserAuthTest.java)', 2), ('(1,SHA512,/com/android/tests/stagedinstall/host/ApexShimValidationTest.java)', 2), ('(18,HKDF,/android/security/identity/cts/DynamicAuthTest.java)', 1), ('(2,SHA512,/android/security/identity/cts/X509CertificateSigningTest.java)', 1), ('(2,SHA512,/android/keystore/cts/HmacMacPerformanceTest.java)', 1), ('(4,SHA512,/android/keystore/cts/RsaSignaturePerformanceTest.java)', 1), ('(2,SHA512,/android/keystore/cts/EcdsaSignaturePerformanceTest.java)', 1), ('(9,HKDF,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(12,HKDF,/android/security/identity/cts/ProvisioningTest.java)', 1), ('(4,SHA512,/android/keystore/cts/KeyProtectionTest.java)', 1), ('(12,SHA512,/android/net/cts/IpSecManagerTest.java)', 1), ('(9,SHA512,/android/keystore/cts/SignatureTest.java)', 1), ('(2,SHA512,/android/keystore/cts/KeyGenParameterSpecTest.java)', 1), ('(3,SHA512,/android/keystore/cts/KeyGeneratorTest.java)', 1), ('(2,SHA512,/android/keystore/cts/CipherTest.java)', 1), ('(3,SHA512,/android/keystore/cts/MacTest.java)', 1), ('(1,SHA512,/android/keystore/cts/KeyFactoryTest.java)', 1), ('(1,SHA512,/android/keystore/cts/KeyInfoTest.java)', 1), ('(1,SHA512,/android/keystore/cts/SecretKeyFactoryTest.java)', 1), ('(20,SHA512,/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java)', 1), ('(10,SHA512,/android/keystore/cts/KeyPairGeneratorTest.java)', 1), ('(1,SHA512,/android/security/identity/cts/UtilUnitTests.java)', 1), ('(10,SHA512,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(16,SHA512,/android/content/pm/cts/ChecksumsTest.java)', 1)]"	"[('([1:/android/security/identity/cts/ProvisioningTest.java]:[HKDF]:[1]:method_text:[, Util.getIntegerEntry(rd, ns, ""Height""));        store.deleteCredentialByName(""test"");    }   ])', 4), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[HKDF]:[1]:method_text:[nicalizeCbor(rd.getAuthenticatedData())));        store.deleteCredentialByName(""test"");    }   ])', 3), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[HKDF]:[1]:method_text:[re.CIPHERSUITE_ECDHE_HKDF_ECDSA_WITH_AES_256_GCM_SHA256);        assertNull(credential);    }   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[HKDF]:[1]:method_text:[;            assertTrue(false);        }        store.deleteCredentialByName(""test"");    }   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[HKDF]:[1]:method_text:[P2 bad   -> OK    // - ACP1 bad,  ACP2 good  -> OK    // - ACP1 good, ACP2 good  -> OK    //   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[HKDF]:[1]:method_text:[getEntry(ns, ""Entry not even requested""));        store.deleteCredentialByName(""test"");    }   ])', 2), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[HKDF]:[1]:method_text:[ + ""  }\\n""                + ""}"", pretty);        store.deleteCredentialByName(""test"");    }   ])', 2), ('([2:/android/security/identity/cts/HkdfTest.java]:[HKDF]:[2]:method_text:[yte[] bytes = new byte[numBytes];        sRandom.nextBytes(bytes);        return bytes;    }   ])', 2), ('([12:/android/security/identity/cts/HkdfTest.java]:[HKDF]:[12]:method_text:[salt, new byte[0], size);        assertArrayEquals(hkdfWithNullInfo, hkdfWithEmptyInfo);    }   ])', 2), ('([1:/android/security/identity/cts/HkdfTest.java]:[HKDF]:[1]:method_text:[}    }    /**     * Tests the implementation against the test vectors from RFC 5869.     */   ])', 2), ('([10:/android/security/identity/cts/HkdfTest.java]:[HKDF]:[10]:method_text:[ hexDecode(ikmHex), hexDecode(saltHex),                        hexDecode(infoHex), size));    }}])', 2), ('([1:/android/security/identity/cts/UserAuthTest.java]:[HKDF]:[1]:method_text:[) {            throw new RuntimeException(""Error creating auth-bound key"", e);        }    }   ])', 2), ('([3:/android/security/identity/cts/UserAuthTest.java]:[HKDF]:[3]:method_text:[        rd.getEntry(""org.iso.18013-5.2019"", ""Accessible to auth-with-10-sec-timeout (1)""));    }}])', 2), ('([1:/android/keystore/cts/CipherTest.java]:[SHA512]:[1]:method_text:[en authorized only for "" + badDigest,                        e);            }        }    }   ])', 2), ('([2:/android/keystore/cts/KeyPairGeneratorTest.java]:[SHA512]:[2]:method_text:[le    // respecting the spec constraints.    // Test fails until the resolution of b/113276806   ])', 2), ('([1:/com/android/tests/stagedinstall/host/ApexShimValidationTest.java]:[SHA512]:[1]:method_text:[alse);    }    @After    public void tearDown() throws Exception {        cleanUp();    }   ])', 2), ('([11:/android/security/identity/cts/DynamicAuthTest.java]:[HKDF]:[11]:method_text:[re done. Clean up after ourselves.        store.deleteCredentialByName(credentialName);    }   ])', 1), ('([7:/android/security/identity/cts/DynamicAuthTest.java]:[HKDF]:[7]:method_text:[taticAuthenticationData() throwing UnknownAuthenticationKeyException    // on an unknown auth key}])', 1), ('([2:/android/security/identity/cts/X509CertificateSigningTest.java]:[SHA512]:[2]:method_text:[e.printStackTrace();            assertTrue(false);        }        //assertTrue(false);    }}])', 1), ('([2:/android/keystore/cts/HmacMacPerformanceTest.java]:[SHA512]:[2]:method_text:[ows Exception {            mMac.update(getMessage());            mMac.doFinal();        }    }}])', 1), ('([2:/android/keystore/cts/RsaSignaturePerformanceTest.java]:[SHA512]:[2]:method_text:[tion {        testRsaSign(""SHA512withRSA"", SUPPORTED_RSA_KEY_SIZES, TEST_MESSAGE_SIZES);    }   ])', 1), ('([2:/android/keystore/cts/RsaSignaturePerformanceTest.java]:[SHA512]:[2]:method_text:[mSignature.update(getMessage());            mSignature.verify(mMessageSignature);        }    }}])', 1), ('([2:/android/keystore/cts/EcdsaSignaturePerformanceTest.java]:[SHA512]:[2]:method_text:[mSignature.update(getMessage());            mSignature.verify(mMessageSignature);        }    }}])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[HKDF]:[1]:method_text:[nonicalizeCbor(rd.getAuthenticatedData())));        store.deleteCredentialByName(""test"");    }}])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[HKDF]:[1]:method_text:[redential returns the expected.        assertNull(store.deleteCredentialByName(""test""));    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[HKDF]:[1]:method_text:[he credential is still there        assertNotNull(store.deleteCredentialByName(""test""));    }   ])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[HKDF]:[1]:method_text:[til.getStringEntry(rd, updNs, ""last_name""));        store.deleteCredentialByName(""test"");    }}])', 1), ('([2:/android/keystore/cts/KeyProtectionTest.java]:[SHA512]:[2]:method_text:[c.getBoundToSpecificSecureUserId());        assertTrue(spec.isUnlockedDeviceRequired());    }   ])', 1), ('([1:/android/keystore/cts/KeyProtectionTest.java]:[SHA512]:[1]:method_text:[(originalSignaturePaddings),                Arrays.asList(spec.getSignaturePaddings()));    }   ])', 1), ('([1:/android/keystore/cts/KeyProtectionTest.java]:[SHA512]:[1]:method_text:[ist(originalSignaturePaddings),                Arrays.asList(spec.getSignaturePaddings()));    }}])', 1), ('([2:/android/net/cts/IpSecManagerTest.java]:[SHA512]:[2]:method_text:[);        checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, crypt, auth, null, false, 1, true);    }   ])', 1), ('([2:/android/net/cts/IpSecManagerTest.java]:[SHA512]:[2]:method_text:[);        checkTransform(IPPROTO_TCP, IPV6_LOOPBACK, crypt, auth, null, false, 1, true);    }   ])', 1), ('([2:/android/net/cts/IpSecManagerTest.java]:[SHA512]:[2]:method_text:[);        checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, auth, null, false, 1, true);    }   ])', 1), ('([2:/android/net/cts/IpSecManagerTest.java]:[SHA512]:[2]:method_text:[);        checkTransform(IPPROTO_UDP, IPV6_LOOPBACK, crypt, auth, null, false, 1, true);    }   ])', 1), ('([2:/android/net/cts/IpSecManagerTest.java]:[SHA512]:[2]:method_text:[e);        checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, crypt, auth, null, true, 1, true);    }   ])', 1), ('([2:/android/net/cts/IpSecManagerTest.java]:[SHA512]:[2]:method_text:[e);        checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, auth, null, true, 1, true);    }   ])', 1), ('([9:/android/keystore/cts/SignatureTest.java]:[SHA512]:[9]:method_text:[e7a42b1ddff0c""));    }    private static final long DAY_IN_MILLIS = TestUtils.DAY_IN_MILLIS;   ])', 1), ('([1:/android/keystore/cts/KeyGenParameterSpecTest.java]:[SHA512]:[1]:method_text:[(originalSignaturePaddings),                Arrays.asList(spec.getSignaturePaddings()));    }   ])', 1), (""([1:/android/keystore/cts/KeyGenParameterSpecTest.java]:[SHA512]:[1]:method_text:[ey with UID throws an exception since CTS doesn't have the necessary     * permissions.     */   ])"", 1), ('([2:/android/keystore/cts/KeyGeneratorTest.java]:[SHA512]:[2]:method_text:[ = new int[] {128, 192, 256};    static final int[] DES_SUPPORTED_KEY_SIZES = new int[] {168};   ])', 1), ('([1:/android/keystore/cts/KeyGeneratorTest.java]:[SHA512]:[1]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 1), ('([3:/android/keystore/cts/MacTest.java]:[SHA512]:[3]:method_text:[25738990e6d0""));    }    private static final long DAY_IN_MILLIS = TestUtils.DAY_IN_MILLIS;   ])', 1), ('([1:/android/keystore/cts/KeyFactoryTest.java]:[SHA512]:[1]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);            }        }    }   ])', 1), ('([1:/android/keystore/cts/KeyInfoTest.java]:[SHA512]:[1]:method_text:[       assertEquals(Arrays.asList(originalBlockModes), Arrays.asList(info.getBlockModes()));    }}])', 1), ('([1:/android/keystore/cts/SecretKeyFactoryTest.java]:[SHA512]:[1]:method_text:[      EXPECTED_ALGORITHMS = ObjectArrays.concat(EXPECTED_ALGORITHMS, ""DESede"");        }    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[SHA512]:[3]:method_text:[            ""v1-only-with-rsa-pkcs1-sha512-1.2.840.113549.1.1.13-%s.apk"", RSA_KEY_NAMES);    }   ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[SHA512]:[3]:method_text:[h(                ""v1-only-with-ecdsa-sha512-1.2.840.10045.4.3.4-%s.apk"", EC_KEY_NAMES);    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[SHA512]:[2]:method_text:[               ""v1-only-with-dsa-sha512-2.16.840.1.101.3.4.3.3-%s.apk"", DSA_KEY_NAMES);//    }   ])', 1), ('([4:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[SHA512]:[4]:method_text:[SA_KEY_NAMES_2048_AND_LARGER // 1024-bit key is too short for PSS with SHA-512        );    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[SHA512]:[2]:method_text:[sWithError(                ""v2-only-with-ecdsa-sha256-p256-digest-mismatch.apk"", error);    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[SHA512]:[2]:method_text:[  assertInstallSucceeds(""v1-with-apk-sig-block-but-without-apk-sig-scheme-v2-block.apk"");    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[SHA512]:[2]:method_text:[hEC.apk"");        assertInstallV4SucceedsAndUninstall(""v4-digest-v2-Sha512withRSA.apk"");    }   ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[SHA512]:[2]:method_text:[hEC.apk"");        assertInstallV4SucceedsAndUninstall(""v4-digest-v3-Sha512withRSA.apk"");    }   ])', 1), ('([3:/android/keystore/cts/KeyPairGeneratorTest.java]:[SHA512]:[3]:method_text:[ngs()));        MoreAsserts.assertEmpty(Arrays.asList(keyInfo.getEncryptionPaddings()));    }   ])', 1), ('([1:/android/keystore/cts/KeyPairGeneratorTest.java]:[SHA512]:[1]:method_text:[es.SIGNATURE_PADDING_RSA_PSS,                KeyProperties.SIGNATURE_PADDING_RSA_PKCS1);    }   ])', 1), ('([2:/android/keystore/cts/KeyPairGeneratorTest.java]:[SHA512]:[2]:method_text:[require that secure lock screen is set up and    // that at least one fingerprint is enrolled.   ])', 1), ('([1:/android/security/identity/cts/UtilUnitTests.java]:[SHA512]:[1]:method_text:[T_SHA512);        kpg.initialize(builder.build());        return kpg.generateKeyPair();    }   ])', 1), ('([1:/android/keystore/cts/KeyAttestationTest.java]:[SHA512]:[1]:method_text:[_ERROR_INVALID_INPUT_LENGTH = -21;    private static final int KM_ERROR_PERMISSION_DENIED = 6;   ])', 1), ('([1:/android/keystore/cts/KeyAttestationTest.java]:[SHA512]:[1]:method_text:[yStore.deleteEntry(keystoreAlias);        }    }    @RestrictedBuildTest    @RequiresDevice   ])', 1), ('([1:/android/keystore/cts/KeyAttestationTest.java]:[SHA512]:[1]:method_text:[ionCert));        } finally {            keyStore.deleteEntry(keystoreAlias);        }    }   ])', 1), ('([1:/android/keystore/cts/KeyAttestationTest.java]:[SHA512]:[1]:method_text:[oad(null);            keyStore.deleteEntry(keystoreAlias);        }    }    @RequiresDevice   ])', 1), ('([1:/android/keystore/cts/KeyAttestationTest.java]:[SHA512]:[1]:method_text:[    @RestrictedBuildTest    @RequiresDevice  // Emulators have no place to store the needed key   ])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[SHA512]:[2]:method_text:[ionCert));        } finally {            keyStore.deleteEntry(keystoreAlias);        }    }   ])', 1), ('([3:/android/keystore/cts/KeyAttestationTest.java]:[SHA512]:[3]:method_text:[ionFailureMessage.equals(e.getMessage())) {                throw e;            }        }    }}])', 1), ('([6:/android/content/pm/cts/ChecksumsTest.java]:[SHA512]:[6]:method_text:[ageSilently(FIXED_PACKAGE_NAME);        assertFalse(isAppInstalled(FIXED_PACKAGE_NAME));    }   ])', 1), ('([3:/android/content/pm/cts/ChecksumsTest.java]:[SHA512]:[3]:method_text:[391cdfb8a18c6710f9f27916a0"");        assertNull(checksums[0].getInstallerCertificate());    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[SHA512]:[2]:method_text:[ assertEquals(checksums[6].getType(), TYPE_PARTIAL_MERKLE_ROOT_1M_SHA512);    }    @LargeTest   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[SHA512]:[2]:method_text:[    + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }    @LargeTest   ])', 1), ('([1:/android/content/pm/cts/ChecksumsTest.java]:[SHA512]:[1]:method_text:[                   + ""e2c8b6baa16ef54014ad6c5b90c37b26b0f5c8aeb01b63a1db2eca133091c8d1"");    }   ])', 1), ('([2:/android/content/pm/cts/ChecksumsTest.java]:[SHA512]:[2]:method_text:[                   + ""5f2888afcb71524196dda0d6dd16a6a3292bb75b431b8ff74fb60d796e882f80"");    }   ])', 1)]"	""	""	"[('SHA512', 54), ('HKDF', 35)]"	"[('[android.security.identity.cts.ProvisioningTest isHalImplemented None]', 4), ('[android.security.identity.cts.ProvisioningTest nonExistent None]', 2), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieve None]', 2), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveMultipleTimes None]', 2), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveWithFiltering None]', 2), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveElementWithNoACP None]', 2), ('[android.security.identity.cts.ProvisioningTest testProvisionAndRetrieveWithEntryNotInRequest None]', 2), ('[android.security.identity.cts.ProvisioningTest nonExistentEntries None]', 2), ('[android.security.identity.cts.ProvisioningTest testProvisionAcpIdNotStartingAtZero None]', 2), ('[android.security.identity.cts.HkdfTest testNullSaltOrInfo None]', 2), ('[android.security.identity.cts.HkdfTest testInvalidCodeSize None]', 2), ('[android.security.identity.cts.HkdfTest testVectors None]', 2), ('[android.security.identity.cts.UserAuthTest isDeviceLocked None]', 2), ('[android.security.identity.cts.UserAuthTest testUserAuth None]', 2), ('[com.android.tests.stagedinstall.host.ApexShimValidationTest isTrue None]', 2), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthTest None]', 1), ('[android.security.identity.cts.DynamicAuthTest dynamicAuthWithExpirationTest None]', 1), ('[android.security.identity.cts.X509CertificateSigningTest testSigning None]', 1), ('[android.keystore.cts.HmacMacPerformanceTest testHmacSHA512 None]', 1), ('[android.keystore.cts.RsaSignaturePerformanceTest testSHA512withRSA None]', 1), ('[android.keystore.cts.RsaSignaturePerformanceTest testSHA512withRSA_PSS None]', 1), ('[android.keystore.cts.EcdsaSignaturePerformanceTest testSHA512withECDSA None]', 1), ('[android.security.identity.cts.ProvisioningTest testUpdateCredential None]', 1), ('[android.keystore.cts.KeyProtectionTest testSettersReflectedInGetters None]', 1), ('[android.keystore.cts.KeyProtectionTest testImmutabilityViaSetterParams None]', 1), ('[android.keystore.cts.KeyProtectionTest testImmutabilityViaGetterReturnValues None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Tcp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Tcp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Udp4 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Udp6 None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Tcp4UdpEncap None]', 1), ('[android.net.cts.IpSecManagerTest testAesCbcHmacSha512Udp4UdpEncap None]', 1), ('[android.keystore.cts.KeyGenParameterSpecTest testImmutabilityViaSetterParams None]', 1), ('[android.keystore.cts.KeyGenParameterSpecTest testImmutabilityViaGetterReturnValues None]', 1), ('[android.keystore.cts.KeyGeneratorTest testInitWithKeyAlgorithmDigestMissingFromAuthorizedDigestFails None]', 1), ('[android.keystore.cts.CipherTest testInitDecryptFailsWhenDigestNotAuthorized None]', 1), ('[android.keystore.cts.CipherTest testInitEncryptSymmetricFailsWhenDigestNotAuthorized None]', 1), ('[android.keystore.cts.KeyFactoryTest testGetKeySpecWithKeystorePrivateKeyAndKeyInfoReflectsAllAuthorizations None]', 1), ('[android.keystore.cts.KeyInfoTest testImmutabilityViaGetterReturnValues None]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV1OneSignerSHA512withRSA None]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV1OneSignerSHA512withECDSA None]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV1OneSignerSHA512withDSA None]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV2OneSignerOneSignature None]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV2ContentDigestMismatch None]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallNoApkSignatureSchemeBlock None]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV4WithV2NoVeritySigner None]', 1), ('[android.appsecurity.cts.PkgInstallSignatureVerificationTest testInstallV4WithV3NoVeritySigner None]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_EC_LegacySpec None]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_RSA_LegacySpec None]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_EC_ModernSpec_AsCustomAsPossible None]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_RSA_ModernSpec_AsCustomAsPossible None]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_RSA_ModernSpec_UsableForTLSPeerAuth None]', 1), ('[android.keystore.cts.KeyAttestationTest testEcAttestation_NoChallenge None]', 1), ('[android.keystore.cts.KeyAttestationTest testEcAttestation_DeviceLocked None]', 1), ('[android.keystore.cts.KeyAttestationTest testEcAttestation_KeyStoreExceptionWhenRequestingUniqueId None]', 1), ('[android.keystore.cts.KeyAttestationTest testRsaAttestation_NoChallenge None]', 1), ('[android.keystore.cts.KeyAttestationTest testRsaAttestation_DeviceLocked None]', 1), ('[android.keystore.cts.KeyAttestationTest testDeviceIdAttestation None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedSha512DefaultChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testAllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedV1AllChecksums None]', 1), ('[android.content.pm.cts.ChecksumsTest testFixedAllIncrementalChecksums None]', 1)]"
"9.9.3.1  . File Based Encryption with Metadata Encryption"	"9.9.3.1"	"C-1-7"	"9.9.3.1/C-1-7"	"09090301.670107"	"""C-1-7] MUST be cryptographically bound to a hardware-backed Keystore. This keystore MUST be bound to Verified Boot and the device's hardware root of trust."""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""	""
