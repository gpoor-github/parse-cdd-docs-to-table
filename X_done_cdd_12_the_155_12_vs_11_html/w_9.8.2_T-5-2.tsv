"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"2.3.5  . Security Model"	"9.8.2"	"T-5-2"	"9.8.2/T-5-2"	"09080200.840502"	"""[9.8.2/T-5-2] MUST not hide the camera indicator for system apps that have visible user interfaces or direct user interaction. <h4 id=""236_developer_tools_and_options_compatibility"" """	""	"permission"	"visible hide direct indicator television <h4 tv 2/T-5-2 interaction user id=236_developer_tools_and_options_compatibility camera interfaces"	"tv television not"	"Permissions android device system data accessing display accessed Section apps holding called app security only"	""	""	"[('android.permission.cts.FileSystemPermissionTest', 30), ('android.permission2.cts.RestrictedPermissionsTest', 14), ('android.permission4.cts.CameraMicIndicatorsPermissionTest.kt', 11), ('android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt', 9), ('android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test', 8), ('android.permission.cts.ProviderPermissionTest', 8), ('android.permission3.cts.PermissionTapjackingTest.kt', 8), ('android.permission.cts.TvPermissionTest', 7), ('android.sensorratepermission.cts.directreportapi31.DirectReportAPI31Test', 6), ('android.permission.cts.ContactsProviderTest', 6), ('android.permission.cts.UndefinedGroupPermissionTest.kt', 5), ('android.permission.cts.Camera2PermissionTest', 5), ('android.sensorratepermission.cts.eventconnectionapi30.EventConnectionAPI30Test', 4), ('android.sensorratepermission.cts.eventconnectionapi31.EventConnectionAPI31Test', 4), ('android.permission2.cts.RestrictedStoragePermissionTest', 4), ('android.permission2.cts.ContactsProviderTest', 4), ('android.permission.cts.LocationAccessCheckTest', 4), ('android.permission.cts.StorageEscalationTest.kt', 4), ('android.permission.cts.RevokePermissionTest.kt', 4), ('android.permission3.cts.PermissionTest23.kt', 4), ('com.android.cts.usespermissiondiffcertapp.UriGrantsTest', 3), ('android.cts.statsdatom.permissionstate.DangerousPermissionStateTests', 3), ('android.permission.cts.telephony.TelephonyManagerPermissionTest', 3), ('android.permission.cts.CameraPermissionTest', 3), ('android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test', 2), ('android.sensorratepermission.cts.returnedrateinfo.ReturnedRateInfoTest', 2), ('android.permission2.cts.NoWriteSecureSettingsPermissionTest', 2), ('android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest', 2), ('android.permission.cts.NearbyDevicesPermissionTest', 2), ('android.permission.cts.AppIdleStatePermissionTest', 2), ('android.permission3.cts.PermissionUpgradeTest.kt', 2), ('android.permission3.cts.PermissionHistoryTest.kt', 2), ('android.permission5.cts.RenouncedPermissionsTest.kt', 2), ('com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest', 1), ('android.permission2.cts.ProtectedBroadcastsTest', 1), ('android.permission2.cts.NoReceiveSmsPermissionTest', 1), ('android.permission.cts.ShellPermissionTest', 1), ('android.permission.cts.ServicePermissionTest', 1), ('android.permission.cts.NoSystemFunctionPermissionTest', 1), ('android.permission.cts.PackageManagerRequiringPermissionsTest', 1), ('android.permission.cts.OneTimePermissionTest', 1), ('android.permission3.cts.PermissionPolicyTest25.kt', 1), ('android.permission3.cts.PermissionReviewTest.kt', 1), ('android.permission3.cts.PermissionTest30WithBluetooth.kt', 1), ('android.permission3.cts.PermissionUsageInfoTest.kt', 1), ('android.permission3.cts.PermissionSplitTest.kt', 1), ('android.permission3.cts.PermissionTest29.kt', 1)]"	"[('setUp', 20), ('getInstrumentation', 19), ('getContext', 17), ('tearDown', 11), ('cappedSensorTypeSet', 8), ('toString', 8), ('myUserId', 7), ('getPackageManager', 7), ('getSimpleName', 6), ('getTargetContext', 4), ('uninstallApp', 3), ('getContentResolver', 3), ('getMinDelay', 2), ('getUiAutomation', 2), ('createSecondaryUser', 2), ('toRegex', 2), ('toInt', 2), ('removeSecondaryUser', 2), ('getExternalStorageDirectory', 2), ('onShutter', 2), ('flush', 2), ('installApp', 2), ('ContentValues', 2), ('getSensor', 1), ('setUpOnce', 1), ('CommandBroadcastReceiver', 1), ('IntentFilter', 1), ('tearDownOnce', 1), ('shareUidBetweenRestrictedAndNotRestrictedApp', 1), ('getDeviceSoftwareVersion', 1), ('getCarrierConfig', 1), ('getNetworkType', 1), ('getDataNetworkType', 1), ('getVoiceNetworkType', 1), ('getGroupIdLevel1', 1), ('getLine1AlphaTag', 1), ('getVoiceMailNumber', 1), ('install', 1), ('setup', 1), ('wakeUpScreenAndUnlock', 1), ('wakeUpScreen', 1), ('prepareDeviceForOneTime', 1), ('restoreDeviceForOneTime', 1)]"	"[('CtsPermissionTestCases', 88), ('CtsPermission2TestCases', 26), ('CtsPermission3TestCases', 22), ('CtsPermission4TestCases', 11), ('CtsPermission5TestCases', 11), ('CtsStatsdAtomHostTestCases', 3), ('CtsTelephonyTestCases', 2)]"	""	"android.permission5.cts.RenouncedPermissionsTest.kt"	"toString"	"CtsPermission5TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/FileSystemPermissionTest.java', 30), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 14), ('/home/gpoor/cts-12-source/cts/tests/tests/permission4/src/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt', 11), ('/home/gpoor/cts-12-source/cts/tests/tests/permission5/src/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt', 9), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DirectReportAPI30/src/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ProviderPermissionTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionTapjackingTest.kt', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/TvPermissionTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DirectReportAPI31/src/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ContactsProviderTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/UndefinedGroupPermissionTest.kt', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/Camera2PermissionTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/EventConnectionAPI30/src/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java', 4), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/EventConnectionAPI31/src/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedStoragePermissionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/ContactsProviderTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/LocationAccessCheckTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/StorageEscalationTest.kt', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/RevokePermissionTest.kt', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionTest23.kt', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/UriGrantsTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/telephony/src/android/permission/cts/telephony/TelephonyManagerPermissionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/CameraPermissionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/DebuggableAPI31/src/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java', 2), ('/home/gpoor/cts-12-source/cts/tests/sensor/sensorratepermission/ReturnedRateInfo/src/android/sensorratepermission/cts/returnedrateinfo/ReturnedRateInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/NoWriteSecureSettingsPermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/permissions/src/android/telephony/cts/telephonypermission/TelephonyManagerReadPhoneStatePermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NearbyDevicesPermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/AppIdleStatePermissionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionUpgradeTest.kt', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionHistoryTest.kt', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission5/src/android/permission5/cts/RenouncedPermissionsTest.kt', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/ProtectedBroadcastsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/NoReceiveSmsPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ShellPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/ServicePermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/NoSystemFunctionPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/PackageManagerRequiringPermissionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionPolicyTest25.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionReviewTest.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionTest30WithBluetooth.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionUsageInfoTest.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionSplitTest.kt', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission3/src/android/permission3/cts/PermissionTest29.kt', 1)]"	"[('(5,direct,/com/android/cts/usespermissiondiffcertapp/UriGrantsTest.java)', 1), ('(1,direct,/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java)', 1), ('(5,user,/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java)', 1), ('(65,direct,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(11,user,/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java)', 1), ('(10,direct,/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java)', 1), ('(11,user,/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java)', 1), ('(9,direct,/android/sensorratepermission/cts/returnedrateinfo/ReturnedRateInfoTest.java)', 1), ('(31,direct,/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java)', 1), ('(8,user,/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java)', 1), ('(1,direct,/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java)', 1), ('(8,user,/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java)', 1), ('(2,tv,/android/permission2/cts/RestrictedStoragePermissionTest.java)', 1), ('(12,user,/android/permission2/cts/RestrictedStoragePermissionTest.java)', 1), ('(1,user,/android/permission2/cts/ProtectedBroadcastsTest.java)', 1), ('(4,tv,/android/permission2/cts/ContactsProviderTest.java)', 1), ('(3,tv,/android/permission2/cts/NoWriteSecureSettingsPermissionTest.java)', 1), ('(4,user,/android/permission2/cts/NoReceiveSmsPermissionTest.java)', 1), ('(39,user,/android/permission2/cts/RestrictedPermissionsTest.java)', 1), ('(12,tv,/android/telephony/cts/telephonypermission/TelephonyManagerReadPhoneStatePermissionTest.java)', 1), ('(2,indicator,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(3,tv,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(3,user,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(2,visible,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(15,user,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(1,visible,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(82,direct,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(36,tv,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(5,user,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(4,direct,/android/permission/cts/StorageEscalationTest.kt)', 1), ('(44,user,/android/permission/cts/StorageEscalationTest.kt)', 1), ('(1,user,/android/permission/cts/ShellPermissionTest.java)', 1), ('(1,direct,/android/permission/cts/CameraPermissionTest.java)', 1), ('(18,camera,/android/permission/cts/CameraPermissionTest.java)', 1), ('(2,user,/android/permission/cts/AppIdleStatePermissionTest.java)', 1), ('(4,tv,/android/permission/cts/ContactsProviderTest.java)', 1), ('(2,user,/android/permission/cts/ContactsProviderTest.java)', 1), ('(2,direct,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(4,tv,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(11,user,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(4,user,/android/permission/cts/RevokePermissionTest.kt)', 1), ('(3,camera,/android/permission/cts/RevokePermissionTest.kt)', 1), ('(1,user,/android/permission/cts/UndefinedGroupPermissionTest.kt)', 1), ('(5,camera,/android/permission/cts/UndefinedGroupPermissionTest.kt)', 1), ('(27,tv,/android/permission/cts/TvPermissionTest.java)', 1), ('(1,interaction,/android/permission/cts/ServicePermissionTest.java)', 1), ('(1,tv,/android/permission/cts/NoSystemFunctionPermissionTest.java)', 1), ('(100,camera,/android/permission/cts/Camera2PermissionTest.java)', 1), ('(1,tv,/android/permission/cts/PackageManagerRequiringPermissionsTest.java)', 1), ('(3,tv,/android/permission/cts/OneTimePermissionTest.java)', 1), ('(2,camera,/android/permission3/cts/PermissionUpgradeTest.kt)', 1), ('(1,direct,/android/permission3/cts/PermissionPolicyTest25.kt)', 1), ('(1,direct,/android/permission3/cts/PermissionReviewTest.kt)', 1), ('(1,user,/android/permission3/cts/PermissionTest30WithBluetooth.kt)', 1), ('(2,direct,/android/permission3/cts/PermissionHistoryTest.kt)', 1), ('(1,camera,/android/permission3/cts/PermissionHistoryTest.kt)', 1), ('(1,tv,/android/permission3/cts/PermissionTest23.kt)', 1), ('(9,camera,/android/permission3/cts/PermissionTest23.kt)', 1), ('(1,tv,/android/permission3/cts/PermissionUsageInfoTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionSplitTest.kt)', 1), ('(4,visible,/android/permission3/cts/PermissionTapjackingTest.kt)', 1), ('(5,hide,/android/permission3/cts/PermissionTapjackingTest.kt)', 1), ('(2,television,/android/permission3/cts/PermissionTapjackingTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionTapjackingTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionTest29.kt)', 1), ('(1,visible,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(29,indicator,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(6,tv,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(39,camera,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(9,tv,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(5,user,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(5,user,/android/permission5/cts/RenouncedPermissionsTest.kt)', 1)]"	"[('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[user]:[1]:method_text:[o restricted permission should be granted.        assertNoRestrictedPermissionGranted();    }   ])', 3), ('([1:/android/permission2/cts/ContactsProviderTest.java]:[tv]:[1]:method_text:[ires     * permission {@link android.Manifest.permission#READ_CONTACTS}.     */    @SmallTest   ])', 2), ('([1:/android/permission/cts/ContactsProviderTest.java]:[tv]:[1]:method_text:[* Requires Permission: {@link android.Manifest.permission#READ_CONTACTS}.     */    @SmallTest   ])', 2), ('([1:/android/permission/cts/ContactsProviderTest.java]:[user]:[1]:method_text:[res Permission: {@link android.Manifest.permission#INTERACT_ACROSS_USERS}.    */    @SmallTest   ])', 2), ('([1:/android/permission/cts/RevokePermissionTest.kt]:[camera]:[1]:method_text:[Exception::class.java,                throwableMessage = ""has not requested permission"")    }   ])', 2), ('([1:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[tv]:[1]:method_text:[tributeToAnother(Telephony.Sms.CONTENT_URI,                Manifest.permission.READ_SMS)    }   ])', 2), ('([2:/com/android/cts/usespermissiondiffcertapp/UriGrantsTest.java]:[direct]:[2]:method_text:[    }    /**     * Validate behavior of directly granting/revoking permission grants.     */   ])', 1), ('([2:/com/android/cts/usespermissiondiffcertapp/UriGrantsTest.java]:[direct]:[2]:method_text:[r of a direct permission grant, where the receiver of     * that permission revokes it.     */   ])', 1), ('([1:/com/android/cts/usespermissiondiffcertapp/UriGrantsTest.java]:[direct]:[1]:method_text:[llowed(clipMeowCat, ""writing should have failed"");        assertNoPersistedUriPermission();    }}])', 1), ('([1:/com/android/cts/usespermissiondiffcertapp/UriGrantsClipboardTest.java]:[direct]:[1]:method_text:[clip + "" on clipboard!"");            } catch (Exception expected) {            }        }    }}])', 1), ('([1:/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java]:[user]:[1]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([3:/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java]:[user]:[3]:method_text:[     }            }        }        assertThat(verifiedKnowPermissionState).isTrue();    }   ])', 1), ('([1:/android/cts/statsdatom/permissionstate/DangerousPermissionStateTests.java]:[user]:[1]:method_text:[dle#getAppId     */    private static int getAppId(int uid) {        return uid % 100000;    }}])', 1), ('([16:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[direct]:[16]:method_text:[rectReportTestHelper.flipAndAssertMicToggleOff(mUserID, mSensorPrivacyManager);        }    }   ])', 1), ('([12:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[direct]:[12]:method_text:[        obtainedRate > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }   ])', 1), ('([9:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[direct]:[9]:method_text:[   * rate of ongoing direct sensor connections when the state of the mic toggle changes.     */   ])', 1), ('([28:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[direct]:[28]:method_text:[                        > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([6:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[user]:[6]:method_text:[rectReportTestHelper.flipAndAssertMicToggleOff(mUserID, mSensorPrivacyManager);        }    }   ])', 1), ('([1:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[user]:[1]:method_text:[        obtainedRate > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }   ])', 1), ('([1:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[user]:[1]:method_text:[   * rate of ongoing direct sensor connections when the state of the mic toggle changes.     */   ])', 1), ('([3:/android/sensorratepermission/cts/directreportapi30/DirectReportAPI30Test.java]:[user]:[3]:method_text:[                        > SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([1:/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java]:[direct]:[1]:method_text:[().getContext();        mSensorManager = mContext.getSystemService(SensorManager.class);    }   ])', 1), ('([9:/android/sensorratepermission/cts/debuggableapi31/DebuggableAPI31Test.java]:[direct]:[9]:method_text:[ecurityException"");        } catch (SecurityException e) {            // Expected        }    }])', 1), ('([6:/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java]:[user]:[6]:method_text:[ConnectionTestHelper.flipAndAssertMicToggleOff(mUserID, mSensorPrivacyManager);        }    }   ])', 1), ('([1:/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java]:[user]:[1]:method_text:[                  > SensorRatePermissionEventConnectionTestHelper.CAPPED_SAMPLE_RATE_HZ);    }   ])', 1), ('([1:/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java]:[user]:[1]:method_text:[     * rate of ongoing SensorEventConnections when the state of the mic toggle changes.     */   ])', 1), ('([3:/android/sensorratepermission/cts/eventconnectionapi30/EventConnectionAPI30Test.java]:[user]:[3]:method_text:[LE_RATE_HZ);        listener.clearEvents();        testSensorManager.unregisterListener();    }])', 1), ('([2:/android/sensorratepermission/cts/returnedrateinfo/ReturnedRateInfoTest.java]:[direct]:[2]:method_text:[n().getContext();        mSensorManager = context.getSystemService(SensorManager.class);    }   ])', 1), ('([7:/android/sensorratepermission/cts/returnedrateinfo/ReturnedRateInfoTest.java]:[direct]:[7]:method_text:[              <= SensorRatePermissionDirectReportTestHelper.CAPPED_DIRECT_REPORT_RATE_LEVEL);    }])', 1), ('([15:/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java]:[direct]:[15]:method_text:[rectReportTestHelper.flipAndAssertMicToggleOff(mUserID, mSensorPrivacyManager);        }    }   ])', 1), ('([8:/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java]:[direct]:[8]:method_text:[       obtainedRate <= SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }   ])', 1), ('([8:/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java]:[direct]:[8]:method_text:[           obtainedRate <= SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([6:/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java]:[user]:[6]:method_text:[rectReportTestHelper.flipAndAssertMicToggleOff(mUserID, mSensorPrivacyManager);        }    }   ])', 1), ('([1:/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java]:[user]:[1]:method_text:[       obtainedRate <= SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }   ])', 1), ('([1:/android/sensorratepermission/cts/directreportapi31/DirectReportAPI31Test.java]:[user]:[1]:method_text:[           obtainedRate <= SensorRatePermissionDirectReportTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([1:/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java]:[direct]:[1]:method_text:[ConnectionTestHelper.flipAndAssertMicToggleOff(mUserID, mSensorPrivacyManager);        }    }   ])', 1), ('([6:/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java]:[user]:[6]:method_text:[ConnectionTestHelper.flipAndAssertMicToggleOff(mUserID, mSensorPrivacyManager);        }    }   ])', 1), ('([1:/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java]:[user]:[1]:method_text:[                 <= SensorRatePermissionEventConnectionTestHelper.CAPPED_SAMPLE_RATE_HZ);    }   ])', 1), ('([1:/android/sensorratepermission/cts/eventconnectionapi31/EventConnectionAPI31Test.java]:[user]:[1]:method_text:[                     <= SensorRatePermissionEventConnectionTestHelper.CAPPED_SAMPLE_RATE_HZ);    }])', 1), ('([1:/android/permission2/cts/RestrictedStoragePermissionTest.java]:[tv]:[1]:method_text:[    installApp(APK_USES_STORAGE_OPT_OUT_29, null);        assertHasFullStorageAccess();    }   ])', 1), ('([1:/android/permission2/cts/RestrictedStoragePermissionTest.java]:[tv]:[1]:method_text:[    installApp(APK_USES_STORAGE_DEFAULT_28, null);        assertHasFullStorageAccess();    }   ])', 1), ('([9:/android/permission2/cts/RestrictedStoragePermissionTest.java]:[user]:[9]:method_text:[pk"";    private static final String PKG = ""android.permission2.cts.restrictedpermissionuser"";   ])', 1), ('([3:/android/permission2/cts/RestrictedStoragePermissionTest.java]:[user]:[3]:method_text:[    @After    public void uninstallApp() {        runShellCommand(""pm uninstall "" + PKG);    }}])', 1), ('([1:/android/permission2/cts/ProtectedBroadcastsTest.java]:[user]:[1]:method_text:[K_OTHERS"",    };    /**     * Verify that protected broadcast actions can\'t be sent.     */   ])', 1), ('([1:/android/permission2/cts/ContactsProviderTest.java]:[tv]:[1]:method_text:[res     * permission {@link android.Manifest.permission#WRITE_CONTACTS}.     */    @SmallTest   ])', 1), ('([1:/android/permission2/cts/ContactsProviderTest.java]:[tv]:[1]:method_text:[ate(ContactsContract.Profile.CONTENT_URI,                new ContentValues(0), null, null);    }}])', 1), ('([1:/android/permission2/cts/NoWriteSecureSettingsPermissionTest.java]:[tv]:[1]:method_text:[ <p>Tests Permission:     *   {@link android.Manifest.permission#WRITE_SECURE_SETTINGS}     */   ])', 1), ('([2:/android/permission2/cts/NoWriteSecureSettingsPermissionTest.java]:[tv]:[2]:method_text:[TINGS);        } catch (SecurityException expected) {           /* do nothing */        }    }}])', 1), ('([4:/android/permission2/cts/NoReceiveSmsPermissionTest.java]:[user]:[4]:method_text:[     * Note: this test requires that the device under test reports a valid phone number     */   ])', 1), ('([9:/android/permission2/cts/RestrictedPermissionsTest.java]:[user]:[9]:method_text:[c static void tearDownOnce() {        getContext().unregisterReceiver(sCommandReceiver);    }   ])', 1), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[user]:[3]:method_text:[ted permission should be whitelisted.        assertAllRestrictedPermissionWhitelisted();    }   ])', 1), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[user]:[3]:method_text:[ld be whitelisted.        assertRestrictedPermissionWhitelisted(whitelistedPermissions);    }   ])', 1), ('([4:/android/permission2/cts/RestrictedPermissionsTest.java]:[user]:[4]:method_text:[mission should be granted.        assertRestrictedPermissionGranted(grantedPermissions);    }   ])', 1), ('([4:/android/permission2/cts/RestrictedPermissionsTest.java]:[user]:[4]:method_text:[ restricted permission should be granted.        assertAllRestrictedPermissionGranted();    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[user]:[1]:method_text:[hellCanReadAndWrite(                PackageManager.FLAG_PERMISSION_WHITELIST_INSTALLER);    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[user]:[1]:method_text:[s whitelisted on side-load by default        assertAllRestrictedPermissionWhitelisted();    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[user]:[1]:method_text:[RestrictedPermissionUserApp(params);        assertAllRestrictedPermissionWhitelisted();    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[user]:[1]:method_text:[nUserApp(params);        assertRestrictedPermissionWhitelisted(whitelistedPermissions);    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[user]:[1]:method_text:[lRestrictedPermissionUserApp(params);        assertNoRestrictedPermissionWhitelisted();    }   ])', 1), ('([8:/android/permission2/cts/RestrictedPermissionsTest.java]:[user]:[8]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 1), ('([4:/android/telephony/cts/telephonypermission/TelephonyManagerReadPhoneStatePermissionTest.java]:[tv]:[4]:method_text:[ enforcement)     * getCallStateForSubscription() (when compat fwk enables enforcement)     */   ])', 1), ('([8:/android/telephony/cts/telephonypermission/TelephonyManagerReadPhoneStatePermissionTest.java]:[tv]:[8]:method_text:[  private static Context getContext() {        return InstrumentationRegistry.getContext();    }}])', 1), ('([2:/android/permission/cts/telephony/TelephonyManagerPermissionTest.java]:[indicator]:[2]:method_text:[RMISSION_MASK;    /**     * Verify the documented permissions for PhoneStateListener.     */   ])', 1), ('([1:/android/permission/cts/telephony/TelephonyManagerPermissionTest.java]:[tv]:[1]:method_text:[     * Requires Permission:     * {@link android.Manifest.permission#READ_PHONE_STATE}.     */   ])', 1), ('([2:/android/permission/cts/telephony/TelephonyManagerPermissionTest.java]:[tv]:[2]:method_text:[id.Manifest.permission#MODIFY_PHONE_STATE} for     * {@link AudioManager#MODE_IN_CALL}.     */   ])', 1), (""([1:/android/permission/cts/NearbyDevicesPermissionTest.java]:[user]:[1]:method_text:[uetooth     * scan results; they'd always need to involve the user to gain permissions.     */   ])"", 1), (""([2:/android/permission/cts/NearbyDevicesPermissionTest.java]:[user]:[2]:method_text:[uetooth     * scan results; they'd always need to involve the user to gain permissions.     */   ])"", 1), ('([2:/android/permission/cts/LocationAccessCheckTest.java]:[visible]:[2]:method_text:[    @After    public void locationUnbind() throws Throwable {        unbindService();    }   ])', 1), ('([13:/android/permission/cts/LocationAccessCheckTest.java]:[user]:[13]:method_text:[    @After    public void locationUnbind() throws Throwable {        unbindService();    }   ])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[user]:[1]:method_text:[;        assertNull(getNotification(true));    }    @SystemUserOnly(reason = ""b/172259935"")   ])', 1), ('([1:/android/permission/cts/LocationAccessCheckTest.java]:[user]:[1]:method_text:[otification(true)), EXPECTED_TIMEOUT_MILLIS);    }    @SystemUserOnly(reason = ""b/172259935"")   ])', 1), ('([1:/android/permission/cts/FileSystemPermissionTest.java]:[visible]:[1]:method_text:[return true;        } catch (IOException expected) {            return false;        }    }   ])', 1), ('([3:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[3]:method_text:[);        } finally {            assertTrue(myDir.delete());        }    }    @MediumTest   ])', 1), ('([6:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[6]:method_text:[es: "" + writableDirs.toString(),                writableDirs.isEmpty());    }    @MediumTest   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[2]:method_text:[       assertFalse(parentDir.toString(), isDirectoryWritable(parentDir));    }    @MediumTest   ])', 1), ('([3:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[3]:method_text:[        assertFalse(isDirectoryWritable(Environment.getDataDirectory()));    }    @MediumTest   ])', 1), ('([3:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[3]:method_text:[        assertFalse(isDirectoryWritable(Environment.getRootDirectory()));    }    @MediumTest   ])', 1), ('([3:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[3]:method_text:[ssertFalse(isDirectoryWritable(Environment.getDownloadCacheDirectory()));    }    @MediumTest   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[2]:method_text:[rows Exception {        assertFalse(isDirectoryWritable(new File(""/"")));    }    @MediumTest   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[2]:method_text:[s Exception {        assertFalse(isDirectoryWritable(new File(""/dev"")));    }    @MediumTest   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[2]:method_text:[ Exception {        assertFalse(isDirectoryWritable(new File(""/proc"")));    }    @MediumTest   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[2]:method_text:[rtFileOwnedBy(dir, ""root"");        assertFileOwnedByGroup(dir, ""root"");    }    @MediumTest   ])', 1), ('([10:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[10]:method_text:[ithin unreadable subdirectories     * will NOT be detected by this code.     */    @LargeTest   ])', 1), ('([10:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[10]:method_text:[here looking for bad directories.  There has to be     * a better way...     */    @LargeTest   ])', 1), ('([5:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[5]:method_text:[ies: "" + writableDirs.toString(),                writableDirs.isEmpty());    }    @LargeTest   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[2]:method_text:[ext""),                new File(""/sys/fs/selinux/validatetrans"")            ));    @LargeTest   ])', 1), ('([9:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[9]:method_text:[         retval.add(f.getCanonicalFile());            }        }        return retval;    }   ])', 1), ('([18:/android/permission/cts/FileSystemPermissionTest.java]:[direct]:[18]:method_text:[e f) throws IOException {        return !f.getAbsolutePath().equals(f.getCanonicalPath());    }}])', 1), ('([1:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[1]:method_text:[ption {        Os.prctl(OsConstants.PR_SET_DUMPABLE, dumpable, 0, 0, 0);    }    @MediumTest   ])', 1), ('([6:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[6]:method_text:[         retval.add(f.getCanonicalFile());            }        }        return retval;    }   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[2]:method_text:[ssertTrue(""/system is not mounted read-only"", (vfs.f_flag & OsConstants.ST_RDONLY) != 0);    }   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[2]:method_text:[assertTrue(""rootfs is not mounted read-only"", (vfs.f_flag & OsConstants.ST_RDONLY) != 0);    }   ])', 1), ('([3:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[3]:method_text:[ssertTrue(""/vendor is not mounted read-only"", (vfs.f_flag & OsConstants.ST_RDONLY) != 0);    }   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[2]:method_text:[  assertTrue(""/odm is not mounted read-only"", (vfs.f_flag & OsConstants.ST_RDONLY) != 0);    }   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[2]:method_text:[  assertTrue(""/oem is not mounted read-only"", (vfs.f_flag & OsConstants.ST_RDONLY) != 0);    }   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[2]:method_text:[      assertTrue(""/data is not mounted NODEV"", (vfs.f_flag & OsConstants.ST_NODEV) != 0);    }   ])', 1), ('([16:/android/permission/cts/FileSystemPermissionTest.java]:[tv]:[16]:method_text:[e f) throws IOException {        return !f.getAbsolutePath().equals(f.getCanonicalPath());    }}])', 1), ('([1:/android/permission/cts/FileSystemPermissionTest.java]:[user]:[1]:method_text:[p, actualGroup, path);                fail(msg);            }        }    }    @MediumTest   ])', 1), ('([1:/android/permission/cts/FileSystemPermissionTest.java]:[user]:[1]:method_text:[here looking for bad directories.  There has to be     * a better way...     */    @LargeTest   ])', 1), ('([1:/android/permission/cts/FileSystemPermissionTest.java]:[user]:[1]:method_text:[ext""),                new File(""/sys/fs/selinux/validatetrans"")            ));    @LargeTest   ])', 1), ('([2:/android/permission/cts/FileSystemPermissionTest.java]:[user]:[2]:method_text:[e f) throws IOException {        return !f.getAbsolutePath().equals(f.getCanonicalPath());    }}])', 1), ('([4:/android/permission/cts/StorageEscalationTest.kt]:[direct]:[4]:method_text:[rmName,                APP_PACKAGE_NAME) == PackageManager.PERMISSION_GRANTED)        }    }   ])', 1), ('([42:/android/permission/cts/StorageEscalationTest.kt]:[user]:[42]:method_text:[rmName,                APP_PACKAGE_NAME) == PackageManager.PERMISSION_GRANTED)        }    }   ])', 1), ('([1:/android/permission/cts/StorageEscalationTest.kt]:[user]:[1]:method_text:[SecondaryUser()        runStorageEscalationTest(APP_APK_PATH_29_SCOPED, APP_APK_PATH_28)    }   ])', 1), ('([1:/android/permission/cts/StorageEscalationTest.kt]:[user]:[1]:method_text:[od        Thread.sleep(DELAY_TIME_MS)        assertStoragePermissionState(granted = false)    }}])', 1), ('([1:/android/permission/cts/ShellPermissionTest.java]:[user]:[1]:method_text:[oes not have any of the permissions listed in     *   {@link #BLACKLISTED_PERMISSIONS}.     */   ])', 1), ('([1:/android/permission/cts/CameraPermissionTest.java]:[direct]:[1]:method_text:[ Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */    @MediumTest   ])', 1), ('([15:/android/permission/cts/CameraPermissionTest.java]:[camera]:[15]:method_text:[ Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */    @MediumTest   ])', 1), (""([3:/android/permission/cts/CameraPermissionTest.java]:[camera]:[3]:method_text:[sn't translating the EPERM error status into            // a SecurityException.        }    }}])"", 1), ('([1:/android/permission/cts/AppIdleStatePermissionTest.java]:[user]:[1]:method_text:[permission#CHANGE_APP_IDLE_STATE}     * permission is only held by at most one package.     */   ])', 1), ('([1:/android/permission/cts/AppIdleStatePermissionTest.java]:[user]:[1]:method_text:[NGE_APP_IDLE_STATE permission; found packages: \\n""                    + pkgNames);        }    }])', 1), ('([1:/android/permission/cts/ContactsProviderTest.java]:[tv]:[1]:method_text:[ Requires Permission: {@link android.Manifest.permission#WRITE_CONTACTS}.     */    @SmallTest   ])', 1), ('([1:/android/permission/cts/ContactsProviderTest.java]:[tv]:[1]:method_text:[res Permission: {@link android.Manifest.permission#INTERACT_ACROSS_USERS}.    */    @SmallTest   ])', 1), ('([2:/android/permission/cts/ProviderPermissionTest.java]:[direct]:[2]:method_text:[.     * <p>Tests Permission:     *   {@link android.Manifest.permission#READ_CONTACTS}     */   ])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[tv]:[1]:method_text:[.     * <p>Tests Permission:     *   {@link android.Manifest.permission#READ_CONTACTS}     */   ])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[tv]:[1]:method_text:[_SMS}     *     * <p>Note: The WRITE_SMS permission has been removed.     */    @AppModeFull   ])', 1), ('([2:/android/permission/cts/ProviderPermissionTest.java]:[tv]:[2]:method_text:[* {@link android.content.Intent#FLAG_GRANT_READ_URI_PERMISSION} and related     * APIs.     */   ])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[user]:[1]:method_text:[.     * <p>Tests Permission:     *   {@link android.Manifest.permission#READ_CONTACTS}     */   ])', 1), ('([1:/android/permission/cts/ProviderPermissionTest.java]:[user]:[1]:method_text:[* {@link android.content.Intent#FLAG_GRANT_READ_URI_PERMISSION} and related     * APIs.     */   ])', 1), ('([2:/android/permission/cts/ProviderPermissionTest.java]:[user]:[2]:method_text:[@code WRITE_MEDIA_STORAGE}, that     * would be a CDD violation and a privacy incident.     */   ])', 1), ('([7:/android/permission/cts/ProviderPermissionTest.java]:[user]:[7]:method_text:[                return true;                }            }        }        return false;    }}])', 1), ('([4:/android/permission/cts/RevokePermissionTest.kt]:[user]:[4]:method_text:[        } catch (e: PackageManager.NameNotFoundException) {            // Expected        }    }])', 1), ('([1:/android/permission/cts/RevokePermissionTest.kt]:[camera]:[1]:method_text:[apk""    @Before    fun installApp() {        runShellCommand(""pm install -r -g $APK"")    }   ])', 1), ('([1:/android/permission/cts/UndefinedGroupPermissionTest.kt]:[user]:[1]:method_text:[.PERMISSIONS""        const val TEST = ""android.permission.cts.appthatrequestpermission.TEST""    }])', 1), ('([1:/android/permission/cts/UndefinedGroupPermissionTest.kt]:[camera]:[1]:method_text:[yevent KEYCODE_WAKEUP"")        SystemUtil.runShellCommand(""input keyevent KEYCODE_MENU"")    }   ])', 1), ('([1:/android/permission/cts/UndefinedGroupPermissionTest.kt]:[camera]:[1]:method_text:[issionsNotGranted_1() {        testOtherGroupPermissionsNotGranted(CAMERA, RECORD_AUDIO)    }   ])', 1), ('([1:/android/permission/cts/UndefinedGroupPermissionTest.kt]:[camera]:[1]:method_text:[*     * When the custom permission is granted nothing else gets granted as a byproduct.     */   ])', 1), ('([2:/android/permission/cts/UndefinedGroupPermissionTest.kt]:[camera]:[2]:method_text:[.PERMISSIONS""        const val TEST = ""android.permission.cts.appthatrequestpermission.TEST""    }])', 1), ('([15:/android/permission/cts/TvPermissionTest.java]:[tv]:[15]:method_text:[ e) {            // TvProvider is not visable for instant app        }    }    @AppModeFull   ])', 1), ('([2:/android/permission/cts/TvPermissionTest.java]:[tv]:[2]:method_text:[turn;        verifyInsert(TvContract.Channels.CONTENT_URI, ""channels"");    }    @AppModeFull   ])', 1), ('([2:/android/permission/cts/TvPermissionTest.java]:[tv]:[2]:method_text:[turn;        verifyUpdate(TvContract.Channels.CONTENT_URI, ""channels"");    }    @AppModeFull   ])', 1), ('([2:/android/permission/cts/TvPermissionTest.java]:[tv]:[2]:method_text:[turn;        verifyDelete(TvContract.Channels.CONTENT_URI, ""channels"");    }    @AppModeFull   ])', 1), ('([2:/android/permission/cts/TvPermissionTest.java]:[tv]:[2]:method_text:[turn;        verifyInsert(TvContract.Programs.CONTENT_URI, ""programs"");    }    @AppModeFull   ])', 1), ('([2:/android/permission/cts/TvPermissionTest.java]:[tv]:[2]:method_text:[turn;        verifyUpdate(TvContract.Programs.CONTENT_URI, ""programs"");    }    @AppModeFull   ])', 1), ('([2:/android/permission/cts/TvPermissionTest.java]:[tv]:[2]:method_text:[TvInputFramework) return;        verifyDelete(TvContract.Programs.CONTENT_URI, ""programs"");    }}])', 1), ('([1:/android/permission/cts/ServicePermissionTest.java]:[interaction]:[1]:method_text:[sion.BIND_VPN_SERVICE,            android.Manifest.permission.BIND_VR_LISTENER_SERVICE,    };   ])', 1), ('([1:/android/permission/cts/NoSystemFunctionPermissionTest.java]:[tv]:[1]:method_text:[<p>Requires Permission:     *   {@link android.Manifest.permission#SMS}.     */    @SmallTest   ])', 1), ('([40:/android/permission/cts/Camera2PermissionTest.java]:[camera]:[40]:method_text:[ to open camera. Requires Permission:     * {@link android.Manifest.permission#CAMERA}.     */   ])', 1), ('([8:/android/permission/cts/Camera2PermissionTest.java]:[camera]:[8]:method_text:[t     * {@link android.Manifest.permission#CAMERA} and android.permission.SYSTEM_CAMERA     */   ])', 1), ('([15:/android/permission/cts/Camera2PermissionTest.java]:[camera]:[15]:method_text:[ristics keys that require Permission:     * {@link android.Manifest.permission#CAMERA}.     */   ])', 1), ('([8:/android/permission/cts/Camera2PermissionTest.java]:[camera]:[8]:method_text:[  * Add and remove availability listeners should work without permission.     */    @Presubmit   ])', 1), ('([29:/android/permission/cts/Camera2PermissionTest.java]:[camera]:[29]:method_text:[r.waitForState(STATE_CLOSED, CAMERA_CLOSE_TIMEOUT_MS);            mCamera = null;        }    }}])', 1), ('([1:/android/permission/cts/PackageManagerRequiringPermissionsTest.java]:[tv]:[1]:method_text:[res Permission:     *   {@link android.Manifest.permission#PACKAGE_VERIFICATION_AGENT}.     */   ])', 1), ('([3:/android/permission/cts/OneTimePermissionTest.java]:[tv]:[3]:method_text:[ions_timeout_millis"",                        mOldOneTimePermissionTimeoutValue, false));    }   ])', 1), ('([1:/android/permission3/cts/PermissionUpgradeTest.kt]:[camera]:[1]:method_text:[fun assertAllPermissionsGrantedOnUpgrade() {        assertAppHasAllOrNoPermissions(true)    }   ])', 1), ('([1:/android/permission3/cts/PermissionUpgradeTest.kt]:[camera]:[1]:method_text:[RAGE        ).forEach {            assertAppHasPermission(it, expectPermissions)        }    }}])', 1), ('([1:/android/permission3/cts/PermissionPolicyTest25.kt]:[direct]:[1]:method_text:[  fun uninstallApp() {        uninstallPackage(APP_PACKAGE_NAME, requireSuccess = false)    }   ])', 1), ('([1:/android/permission3/cts/PermissionReviewTest.kt]:[direct]:[1]:method_text:[ageManager.PERMISSION_GRANTED, results.poll(TIMEOUT_MILLIS, TimeUnit.MILLISECONDS)        )    }}])', 1), ('([1:/android/permission3/cts/PermissionTest30WithBluetooth.kt]:[user]:[1]:method_text:[vity service"" +        "" com.android.bluetooth/.btservice.AdapterService set-test-mode disabled"")}])', 1), ('([2:/android/permission3/cts/PermissionHistoryTest.kt]:[direct]:[2]:method_text:[p2.apk""        const val APP2_PACKAGE_NAME = ""android.permission3.cts.accessmicrophoneapp2""    }}])', 1), ('([1:/android/permission3/cts/PermissionHistoryTest.kt]:[camera]:[1]:method_text:[p2.apk""        const val APP2_PACKAGE_NAME = ""android.permission3.cts.accessmicrophoneapp2""    }}])', 1), ('([1:/android/permission3/cts/PermissionTest23.kt]:[tv]:[1]:method_text:[RAGE        ).forEach {            assertAppHasPermission(it, expectPermissions)        }    }}])', 1), ('([7:/android/permission3/cts/PermissionTest23.kt]:[camera]:[7]:method_text:[     } else {                clickPermissionRequestAllowButton()            }        }    }   ])', 1), ('([1:/android/permission3/cts/PermissionTest23.kt]:[camera]:[1]:method_text:[d after uninstalling and installing the app        assertAppHasAllOrNoPermissions(false)    }   ])', 1), ('([1:/android/permission3/cts/PermissionTest23.kt]:[camera]:[1]:method_text:[RAGE        ).forEach {            assertAppHasPermission(it, expectPermissions)        }    }}])', 1), ('([1:/android/permission3/cts/PermissionUsageInfoTest.kt]:[tv]:[1]:method_text:[ch)    }    @Before    fun installApp() {        installPackage(APP_APK_PATH_LATEST)    }   ])', 1), ('([2:/android/permission3/cts/PermissionSplitTest.kt]:[tv]:[2]:method_text:[: BaseUsePermissionTest() {    @Before    fun assumeNotTv() {        assumeFalse(isTv)    }   ])', 1), ('([1:/android/permission3/cts/PermissionTapjackingTest.kt]:[visible]:[1]:method_text:[s(""android.permission3.cts.usepermission:id/overlay""))        tryClicking(buttonCenter)    }   ])', 1), ('([3:/android/permission3/cts/PermissionTapjackingTest.kt]:[visible]:[3]:method_text:[     const val MESSAGE_BOTTOM = ""android.permission3.cts.usepermission.extra.MESSAGE_BOTTOM""    }}])', 1), ('([1:/android/permission3/cts/PermissionTapjackingTest.kt]:[hide]:[1]:method_text:[s(""android.permission3.cts.usepermission:id/overlay""))        tryClicking(buttonCenter)    }   ])', 1), ('([4:/android/permission3/cts/PermissionTapjackingTest.kt]:[hide]:[4]:method_text:[     const val MESSAGE_BOTTOM = ""android.permission3.cts.usepermission.extra.MESSAGE_BOTTOM""    }}])', 1), ('([1:/android/permission3/cts/PermissionTapjackingTest.kt]:[television]:[1]:method_text:[s(""android.permission3.cts.usepermission:id/overlay""))        tryClicking(buttonCenter)    }   ])', 1), ('([1:/android/permission3/cts/PermissionTapjackingTest.kt]:[television]:[1]:method_text:[     const val MESSAGE_BOTTOM = ""android.permission3.cts.usepermission.extra.MESSAGE_BOTTOM""    }}])', 1), ('([1:/android/permission3/cts/PermissionTapjackingTest.kt]:[tv]:[1]:method_text:[s(""android.permission3.cts.usepermission:id/overlay""))        tryClicking(buttonCenter)    }   ])', 1), ('([1:/android/permission3/cts/PermissionTapjackingTest.kt]:[tv]:[1]:method_text:[     const val MESSAGE_BOTTOM = ""android.permission3.cts.usepermission.extra.MESSAGE_BOTTOM""    }}])', 1), ('([2:/android/permission3/cts/PermissionTest29.kt]:[tv]:[2]:method_text:[    assertAppHasPermission(android.Manifest.permission.ACCESS_BACKGROUND_LOCATION, false)    }   ])', 1), ('([1:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[visible]:[1]:method_text:[  private fun waitForIdle() =        uiAutomation.waitForIdle(IDLE_TIMEOUT_MILLIS, TIMEOUT_MILLIS)])', 1), ('([11:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[indicator]:[11]:method_text:[a(USE_HOTWORD, useHotword)            addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)        })    }   ])', 1), ('([2:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[indicator]:[2]:method_text:[aIdList.isNotEmpty())        testCameraAndMicIndicator(useMic = false, useCamera = true)    }   ])', 1), ('([2:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[indicator]:[2]:method_text:[ testMicIndicator() {        testCameraAndMicIndicator(useMic = true, useCamera = false)    }   ])', 1), ('([14:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[indicator]:[14]:method_text:[  private fun waitForIdle() =        uiAutomation.waitForIdle(IDLE_TIMEOUT_MILLIS, TIMEOUT_MILLIS)])', 1), ('([1:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[tv]:[1]:method_text:[a(USE_HOTWORD, useHotword)            addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)        })    }   ])', 1), ('([5:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[tv]:[5]:method_text:[  private fun waitForIdle() =        uiAutomation.waitForIdle(IDLE_TIMEOUT_MILLIS, TIMEOUT_MILLIS)])', 1), ('([13:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[camera]:[13]:method_text:[a(USE_HOTWORD, useHotword)            addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)        })    }   ])', 1), ('([5:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[camera]:[5]:method_text:[aIdList.isNotEmpty())        testCameraAndMicIndicator(useMic = false, useCamera = true)    }   ])', 1), ('([2:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[camera]:[2]:method_text:[ testMicIndicator() {        testCameraAndMicIndicator(useMic = true, useCamera = false)    }   ])', 1), ('([19:/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt]:[camera]:[19]:method_text:[  private fun waitForIdle() =        uiAutomation.waitForIdle(IDLE_TIMEOUT_MILLIS, TIMEOUT_MILLIS)])', 1), ('([1:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[tv]:[1]:method_text:[appOpsManager.clearHistory()            appOpsManager.resetHistoryParameters()        }    }   ])', 1), ('([1:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[tv]:[1]:method_text:[  testSelfAccess(Telephony.Sms.CONTENT_URI,                Manifest.permission.READ_SMS)    }   ])', 1), ('([1:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[tv]:[1]:method_text:[eceiverAccessCount*/ 0, /*checkAccessor*/ true,                /*fromDatasource*/ false)    }   ])', 1), ('([1:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[tv]:[1]:method_text:[                Telephony.Sms.CONTENT_URI,                Manifest.permission.READ_SMS)    }   ])', 1), ('([3:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[tv]:[3]:method_text:[ attributionSourceRef.get()        }        private fun assumeNotTv() = assumeFalse(isTv)    }}])', 1), ('([1:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[user]:[1]:method_text:[appOpsManager.clearHistory()            appOpsManager.resetHistoryParameters()        }    }   ])', 1), ('([4:/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt]:[user]:[4]:method_text:[ceiverAccessCount*/ 1, /*checkAccessor*/ false,                /*fromDatasource*/ false)    }   ])', 1), ('([1:/android/permission5/cts/RenouncedPermissionsTest.kt]:[user]:[1]:method_text:[ito.`when`import java.util.concurrent.atomic.AtomicReferenceclass RenouncedPermissionsTest {   ])', 1), ('([4:/android/permission5/cts/RenouncedPermissionsTest.kt]:[user]:[4]:method_text:[  shellAttributionSource)            }            return shellAttributionSource        }    }}])', 1)]"	""	""	"[('user', 63), ('tv', 53), ('direct', 38), ('camera', 24), ('indicator', 5), ('visible', 5), ('hide', 2), ('television', 2), ('interaction', 1)]"	"[('[android.permission3.cts.PermissionTapjackingTest.kt testTapjackGrantDialog_fullOverlay CtsPermission3TestCases]', 4), ('[android.permission3.cts.PermissionTapjackingTest.kt testTapjackGrantDialog_partialOverlay CtsPermission3TestCases]', 4), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testHotwordIndicatorBehavior CtsPermission4TestCases]', 4), ('[android.permission.cts.FileSystemPermissionTest testRunAsHasCorrectCapabilities CtsPermissionTestCases]', 3), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt DisableAnimationRule CtsPermission4TestCases]', 3), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOff None]', 2), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOn None]', 2), ('[android.sensorratepermission.cts.directreportapi30.DirectReportAPI30Test testSamplingRateMicToggleOffOnOff None]', 2), ('[android.sensorratepermission.cts.directreportapi31.DirectReportAPI31Test testSamplingRateMicToggleOn None]', 2), ('[android.sensorratepermission.cts.directreportapi31.DirectReportAPI31Test testSamplingRateMicToggleOff None]', 2), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName CtsPermissionTestCases]', 2), ('[android.permission.cts.FileSystemPermissionTest testAllOtherDirectoriesNotWritable CtsPermissionTestCases]', 2), ('[android.permission.cts.FileSystemPermissionTest testReadingSysFilesDoesntFail CtsPermissionTestCases]', 2), ('[android.permission.cts.FileSystemPermissionTest testAllFilesInSysAreNotWritable CtsPermissionTestCases]', 2), ('[android.permission.cts.StorageEscalationTest.kt grantStoragePermissions CtsPermissionTestCases]', 2), ('[android.permission.cts.ContactsProviderTest testUpdateProfile CtsPermissionTestCases]', 2), ('[android.permission.cts.ProviderPermissionTest testWriteSettings CtsPermissionTestCases]', 2), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testCustomPermissionGrantedAlone CtsPermissionTestCases]', 2), ('[android.permission3.cts.PermissionHistoryTest.kt testCameraTimelineWithMultipleApps CtsPermission3TestCases]', 2), ('[android.permission3.cts.PermissionTest23.kt testInvalidPermission CtsPermission3TestCases]', 2), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testCameraIndicator CtsPermission4TestCases]', 2), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testMicIndicator CtsPermission4TestCases]', 2), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt setUpTest CtsPermission5TestCases]', 2), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsTest testGrantPersistablePrefixUriPermission None]', 1), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsTest testDirectGrantRevokeUriPermission None]', 1), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsTest testDirectGrantReceiverRevokeUriPermission None]', 1), ('[com.android.cts.usespermissiondiffcertapp.UriGrantsClipboardTest testClipboardWithoutPermission None]', 1), ('[android.cts.statsdatom.permissionstate.DangerousPermissionStateTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.permissionstate.DangerousPermissionStateTests testDangerousPermissionState CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.permissionstate.DangerousPermissionStateTests testDangerousPermissionStateSampled CtsStatsdAtomHostTestCases]', 1), ('[android.sensorratepermission.cts.debuggableapi31.DebuggableAPI31Test testDirectChannel None]', 1), ('[android.sensorratepermission.cts.eventconnectionapi30.EventConnectionAPI30Test testSamplingRateMicToggleOff None]', 1), ('[android.sensorratepermission.cts.eventconnectionapi30.EventConnectionAPI30Test testSamplingRateMicToggleOn None]', 1), ('[android.sensorratepermission.cts.eventconnectionapi30.EventConnectionAPI30Test testSamplingRateMicToggleOffOnOff None]', 1), ('[android.sensorratepermission.cts.returnedrateinfo.ReturnedRateInfoTest getSensorList None]', 1), ('[android.sensorratepermission.cts.returnedrateinfo.ReturnedRateInfoTest testGetHighestDirectReportRateLevelMethod None]', 1), ('[android.sensorratepermission.cts.eventconnectionapi31.EventConnectionAPI31Test testSamplingRateMicToggleOn None]', 1), ('[android.sensorratepermission.cts.eventconnectionapi31.EventConnectionAPI31Test testSamplingRateMicToggleOff None]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testTargetingSdk29CanOptOutViaUpdate CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testTargetingSdk29CanOptOutViaDowngradeTo28 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testStorageTargetingSdk30CannotPreserveLegacyOnInstall CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testInsertContacts CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testInsertProfile CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testUpdateProfile CtsPermission2TestCases]', 1), ('[android.permission2.cts.NoWriteSecureSettingsPermissionTest testWriteSecureSettings CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testDefaultAllRestrictedPermissionsWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testNoneRestrictedPermissionWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testDefaultAllRestrictedPermissionsWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsGrantedAtInstall CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testAllRestrictedPermissionsGrantedAtInstall CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testWhitelistAccessControl CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadRestrictedPermissionsWhitelistingDefault CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadAllRestrictedPermissionsWhitelisted CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadWhitelistSomePermissions CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadWhitelistNoPermissions CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest isTrue CtsPermission2TestCases]', 1), ('[android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest getVisualVoicemailPackageName CtsTelephonyTestCases]', 1), ('[android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest testTelephonyManagersAPIsRequiringReadPhoneStatePermissions CtsTelephonyTestCases]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testSetForbiddenPlmns CtsPermissionTestCases]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testGetSubscriberId CtsPermissionTestCases]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testVoiceMailNumber CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_OnBehalfOfDisavowingApp CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission_Upgrade CtsPermissionTestCases]', 1), ('[android.permission.cts.LocationAccessCheckTest notificationIsShownOnlyOnce CtsPermissionTestCases]', 1), ('[android.permission.cts.LocationAccessCheckTest notificationIsShownAgainAfterClear CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testDevHwRandomLockedDown CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testCreateDirectoryHasSanePermissions CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOtherApplicationDirectoriesAreNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testApplicationParentDirectoryNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testDataDirectoryNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testAndroidRootDirectoryNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testDownloadCacheDirectoryNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testRootDirectoryNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testDevDirectoryNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testProcDirectoryNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testIdletimerDirectoryExistsAndSane CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testMntSecureSane CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOtherRandomDirectoriesNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testSystemMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testRootMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testVendorMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOdmMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOemMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testDataMountedNoSuidNoDev CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testProcfsMmapRndBitsExistsAndSane CtsPermissionTestCases]', 1), ('[android.permission.cts.StorageEscalationTest.kt testCannotEscalateWithSdkDowngradeSecondary CtsPermissionTestCases]', 1), ('[android.permission.cts.StorageEscalationTest.kt testCannotEscalateWithNewManifestLegacyRequestSecondary CtsPermissionTestCases]', 1), ('[android.permission.cts.CameraPermissionTest testCamera CtsPermissionTestCases]', 1), ('[android.permission.cts.AppIdleStatePermissionTest testChangeAppIdleStatePermission CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testInsertContacts CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testInsertProfile CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testQueryPhoneEnterprise CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteCallLogInstant CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testManageDocuments CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteMediaStorage CtsPermissionTestCases]', 1), ('[android.permission.cts.RevokePermissionTest.kt testRevokeFakePackageWithReason CtsPermissionTestCases]', 1), ('[android.permission.cts.RevokePermissionTest.kt testRevokePermissionNotRequested CtsPermissionTestCases]', 1), ('[android.permission.cts.RevokePermissionTest.kt testRevokePermissionNotRequestedWithReason CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testOtherGroupPermissionsNotGranted_1 CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testOtherGroupPermissionsNotGranted_3 CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testInsertChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testUpdateChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testDeleteChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testInsertPrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testUpdatePrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testDeletePrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.NoSystemFunctionPermissionTest testVibrator CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest getCameraIdList CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testCameraOpen CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testSystemCameraDiscovery CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testCameraCharacteristicsNeedingPermission CtsPermissionTestCases]', 1), ('[android.permission.cts.Camera2PermissionTest testAvailabilityCallback CtsPermissionTestCases]', 1), ('[android.permission.cts.PackageManagerRequiringPermissionsTest testVerifyPendingInstall CtsPermissionTestCases]', 1), ('[android.permission3.cts.PermissionUpgradeTest.kt testUpgradeKeepsPermissions CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionUpgradeTest.kt testRevokePropagatedOnUpgradeNewToNewModel CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionPolicyTest25.kt BasePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionReviewTest.kt testReviewPermissionWhenServiceIsBound CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest30WithBluetooth.kt testRevokedCompatPersistsOnReinstall CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest23.kt testGrantPreviouslyRevokedWithPrejudiceShowsPrompt CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest23.kt testNoResidualPermissionsOnUninstall CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionUsageInfoTest.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionSplitTest.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest29.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testSelfSmsAccess CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testSelfCallLogWrite CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testUntrustedSmsAccessAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testUntrustedSmsAccessAttributeToAnotherThroughIntermediary CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testTrustedAccessSmsAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testMicRecognitionMicRecoWithAttribution CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testTrustedAccessCallLogAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RenouncedPermissionsTest.kt testCannotRequestRenouncePermissions CtsPermission5TestCases]', 1)]"	""	""	""	""	""	""	""	""	""
