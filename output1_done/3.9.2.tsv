"Section"	"section_id"	"req_id"	"Test Availability"	"class_def"	"method"	"module"	"method_text"	"full_key"	"requirement"	"key_as_number"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"matched_terms"	"search_roots"	"qualified_method"	"max_matches"	"file_name"	"matched_files"	"methods_string"	"urls"	"protected"	"Area"	"Shortened"	"Test Level"
"3.9.2"	"3.9.2"	"C-2-1"	""	"[('android.server.wm.KeyguardTests', 25), ('android.server.wm.KeyguardLockedTests', 15), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 10), ('com.android.cts.devicepolicy.ManagedProfilePasswordTest', 10), ('com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest', 9), ('android.server.wm.KeyguardTransitionTests', 8), ('android.server.wm.ActivityVisibilityTests', 8), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 7), ('android.server.wm.MultiDisplayKeyguardTests', 7), ('android.admin.cts.DevicePolicyManagerTest', 6), ('com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest', 5), ('com.android.cts.deviceandprofileowner.SecondaryLockscreenTest', 5), ('android.server.wm.MultiDisplayLockedKeyguardTests', 5), ('com.android.cts.devicepolicy.ManagedProfileTimeoutTest', 4), ('android.server.wm.lifecycle.ActivityLifecycleKeyguardTests', 4), ('com.android.cts.deviceandprofileowner.LockScreenInfoTest', 4), ('android.server.wm.MultiDisplayPolicyTests', 4), ('android.telephony.embms.cts.MbmsDownloadCallbackTest', 3), ('com.android.cts.deviceandprofileowner.SecurityLoggingTest', 3), ('com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest', 3), ('android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests', 3), ('android.app.usage.cts.UsageReportingTest', 2), ('com.android.cts.managedprofile.PreManagedProfileTest', 2), ('com.android.cts.encryptionapp.EncryptionAppTest', 2), ('com.android.cts.deviceowner.PreDeviceOwnerTest', 2), ('com.android.cts.devicepolicy.QuietModeHostsideTest', 2), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 2), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest', 2), ('com.android.cts.deviceadmin.DeviceAdminWithEnterprisePoliciesBlockedTest', 2), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTest', 2), ('com.android.cts.deviceandprofileowner.SuspendPackageTest', 2), ('android.view.inputmethod.cts.InputMethodStartInputLifecycleTest', 2), ('com.android.cts.transferowner.TransferProfileOwnerOutgoingTest', 2), ('com.android.cts.transferowner.TransferProfileOwnerIncomingTest', 2), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 2), ('com.android.cts.deviceandprofileowner.KeyguardDisabledFeaturesTest', 2), ('com.android.cts.deviceandprofileowner.ScreenCaptureDisabledTest', 2), ('com.android.cts.devicepolicy.PasswordComplexityTest', 2), ('android.jdwptunnel.cts.JdwpTunnelTest', 1), ('android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest', 1), ('android.view.inputmethod.cts.NavigationBarColorTest', 1), ('com.android.cts.managedprofile.ParentProfileTest', 1), ('android.permission.cts.FileSystemPermissionTest', 1), ('android.app.cts.NotificationManagerTest', 1), ('android.view.inputmethod.cts.SearchViewTest', 1), ('android.keystore.cts.CipherTest', 1), ('com.android.cts.transferowner.TransferDeviceOwnerOutgoingTest', 1), ('android.jvmti.cts.JvmtiAttachingHostTest', 1), ('com.android.cts.comp.provisioning.ManagedProfileProvisioningTest', 1), ('android.view.inputmethod.cts.PackageVisibilityTest', 1), ('android.view.inputmethod.cts.OnScreenPositionTest', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('com.android.cts.devicepolicy.singleadmin.ProvisioningSingleAdminTest', 1), ('com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest', 1), ('android.view.inputmethod.cts.ImeInsetsVisibilityTest', 1), ('com.android.cts.deviceandprofileowner.UnavailableSecureLockScreenTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('android.view.inputmethod.cts.ImeInsetsControllerTest', 1), ('com.android.cts.profileowner.ManagementTest', 1), ('android.admin.cts.DeviceAdminActivationTest', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('com.android.cts.deviceandprofileowner.AccountManagementParentTest', 1), ('com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest', 1), ('com.android.cts.transferowner.TransferDeviceOwnerIncomingTest', 1), ('android.server.wm.DisplayTests', 1), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.transferowner.DeviceAndProfileOwnerTransferIncomingTest', 1), ('com.android.cts.deviceandprofileowner.AlwaysOnVpnTest', 1), ('com.android.cts.devicepolicy.BaseDeviceAdminHostSideTest', 1), ('android.view.inputmethod.cts.FocusHandlingTest', 1), ('android.view.inputmethod.cts.KeyboardVisibilityControlTest', 1), ('com.android.cts.managedprofile.PasswordMinimumRestrictionsTest', 1), ('com.android.cts.devicepolicy.MixedDeviceOwnerTest', 1), ('com.android.cts.devicepolicy.ManagedProfileTest', 1), ('android.view.inputmethod.cts.InputMethodServiceTest', 1), ('android.server.wm.SplitScreenTests', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest', 1), ('android.appsecurity.cts.ResumeOnRebootHostTest', 1), ('android.security.identity.cts.UserAuthTest', 1), ('android.server.wm.KeyguardInputTests', 1), ('android.net.ipsec.ike.cts.IkeSessionParamsTest', 1), ('android.media.cts.DecoderTest', 1), ('com.android.cts.managedprofile.DisallowSharingIntoProfileTest', 1), ('com.android.cts.deviceowner.DeviceOwnerProvisioningTest', 1), ('com.android.cts.managedprofile.ProvisioningTest', 1), ('com.android.cts.deviceandprofileowner.DevicePolicyLoggingParentTest', 1)]"	"[('setUp', 36), ('tearDown', 16), ('getDevice', 8), ('UnlockScreenRule', 8), ('getName', 6), ('getContext', 5), ('requestFocus', 4), ('getPackageManager', 4), ('getInstrumentation', 4), ('getPackage', 3), ('getSimpleName', 3), ('get', 3), ('getTargetContext', 3), ('getPackageName', 3), ('release', 3), ('build', 2), ('obtain', 2), ('DeviceLockSession', 2), ('LockScreenSession', 2), ('setLockCredential', 2), ('performDeviceLock', 2), ('sleepDevice', 2), ('myUserHandle', 2), ('getBytes', 2), ('BroadcastReceiver', 2), ('getAction', 2), ('IntentFilter', 2), ('clearFreezeRecord', 2), ('getContentResolver', 2), ('hasWindowFocus', 2), ('moveToHomeScreen', 1), ('virtualMachineManager', 1), ('attachingConnectors', 1), ('stream', 1), ('transport', 1), ('name', 1), ('findFirst', 1), ('defaultArguments', 1), ('trim', 1), ('supports3DES', 1), ('getReceiverComponent', 1), ('getWho', 1), ('now', 1), ('getAirplaneMode', 1), ('setSystemDate', 1), ('BasicAdminReceiver', 1), ('BasicAdminReceiverNoMetadata', 1), ('getViewTreeObserver', 1), ('ServiceConnection', 1), ('size', 1), ('getEventName', 1), ('getArguments', 1), ('getReturnBooleanValue', 1), ('setup', 1), ('getWindow', 1), ('resumeOnReboot_TwoUsers_BothUserUnlock_Success', 1), ('getCurrentUser', 1)]"	"[('CtsWindowManagerDeviceTestCases', 82), ('CtsInputMethodTestCases', 11), ('CtsAdminTestCases', 7), ('CtsTelephonyTestCases', 3), ('CtsUsageStatsTestCases', 2), ('CtsPermissionTestCases', 1), ('CtsAndroidAppTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsMediaParserTestCases', 1), ('CtsTvTestCases', 1), ('CtsIdentityTestCases', 1), ('CtsIkeTestCases', 1), ('CtsMediaTestCases', 1)]"	""	"3.9.2/C-2-1"	"""C-2-1] MUST support the ability to specify a separate lock screen meeting the following requirements to grant access to apps running in a managed profile only. Device implementations MUST honor the DevicePolicyManager.ACTION_SET_NEW_PASSWORD intent and show an interface to configure a separate lock screen credential for the managed profile. The lock screen credentials of the managed profile MUST use the same credential storage and management mechanisms as the parent profile, as documented on the Android Open Source Project Site. The DPC password policies MUST apply to only the managed profile's lock screen credentials unless called upon the DevicePolicyManager instance returned by getParentProfileInstance. When contacts from the managed profile are displayed in the preinstalled call log, in-call UI, in-progress and missed-call notifications, contacts and messaging apps they SHOULD be badged with the same badge used to indicate managed profile applications. <h4 id="""	"03090200.670201"	"DevicePolicyManager.ACTION DPC lockscreen ACTION_SET_NEW_PASSWORD getParentProfileInstance"	"lockscreen getParentProfileInstance"	""	""	"[('lockscreen', 172), ('DPC', 25), ('getParentProfileInstance', 21), ('DevicePolicyManager.ACTION', 14)]"	""	"[('[com.android.cts.transferowner.TransferProfileOwnerIncomingTest testTransferPoliciesAreRetainedAfterTransfer None]', 2), ('[android.jdwptunnel.cts.JdwpTunnelTest startupTest None]', 1), ('[android.inputmethodservice.cts.devicetest.InputMethodServiceDeviceTest testImeVisibilityAfterImeSwitching None]', 1), ('[android.view.inputmethod.cts.NavigationBarColorTest getSystemUiVisibility CtsInputMethodTestCases]', 1), ('[android.telephony.embms.cts.MbmsDownloadCallbackTest testFullCallback CtsTelephonyTestCases]', 1), ('[android.telephony.embms.cts.MbmsDownloadCallbackTest testDeregistration CtsTelephonyTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testAllOtherDirectoriesNotWritable CtsPermissionTestCases]', 1), ('[android.app.cts.NotificationManagerTest testCreateChannel CtsAndroidAppTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testProvisioningNotAllowedWithDeviceOwner None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testBindDeviceAdminServiceAsUser_secondaryUser None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testNetworkAndSecurityLoggingAvailableIfAffiliated None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testRequestBugreportAvailableIfAffiliated None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testAddUserRestrictionDisallowConfigDateTime_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testAddUserRestrictionDisallowAddUser_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testClearUserRestrictionDisallowAddUser None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testAddUserRestrictionCameraDisabled_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testRemoveUserRestrictionCameraEnabled_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerProfileUserRestriction_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerDeviceUserRestriction_onParent None]', 1), ('[android.keystore.cts.CipherTest isDeviceLocked CtsKeystoreTestCases]', 1), ('[android.jvmti.cts.JvmtiAttachingHostTest testJvmtiAgentAppExternal None]', 1), ('[android.view.inputmethod.cts.PackageVisibilityTest getTestMarker CtsInputMethodTestCases]', 1), ('[android.app.usage.cts.UsageReportingTest testSplitscreenSameTokenOneMissedStop CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageReportingTest testSplitscreenSameTokenTwoMissedStop CtsUsageStatsTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testLockAndUnlock CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDisableKeyguard_thenSettingCredential_reenablesKeyguard_b119322269 CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguard_whileOccluded CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguard_fromShowWhenLocked_notAllowed CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardActivity_method CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardActivity_method_cancelled CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardAttrActivity_method_turnScreenOn_withSecureKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testEnterPipOverKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedActivityAndPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testDismissKeyguardPipActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedAttrImeActivityAndShowSoftInput CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testShowWhenLockedImeActivityAndShowSoftInput CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardLockedTests testImeShowsAfterLockScreenOnEditorTap CtsWindowManagerDeviceTestCases]', 1), ('[android.view.inputmethod.cts.OnScreenPositionTest launchTestActivity CtsInputMethodTestCases]', 1), ('[com.android.cts.managedprofile.PreManagedProfileTest testIsProvisioningAllowedTrue None]', 1), ('[com.android.cts.managedprofile.PreManagedProfileTest testIsProvisioningAllowedFalse None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTimeoutTest testWorkProfileTimeoutBackground None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTimeoutTest testWorkProfileTimeoutIdleActivity None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTimeoutTest testWorkProfileTimeoutUserActivity None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTimeoutTest testWorkProfileTimeoutKeepScreenOnWindow None]', 1), ('[com.android.cts.encryptionapp.EncryptionAppTest testLockScreen None]', 1), ('[com.android.cts.encryptionapp.EncryptionAppTest testUnlockScreen None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testCanSetKeyPairCertChain None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testApplicationRestrictions None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testTrustAgentInfo None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testRequiredStrongAuthTimeout None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testResetPasswordDeprecated None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testResetPasswordWithToken None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testGetCurrentFailedPasswordAttempts None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPasswordExpiration None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testGetPasswordExpiration None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPasswordQualityWithoutSecureLockScreen None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSecondaryLockscreen None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest isNotNull None]', 1), ('[com.android.cts.deviceowner.PreDeviceOwnerTest testIsProvisioningAllowedFalse None]', 1), ('[com.android.cts.deviceowner.PreDeviceOwnerTest testIsProvisioningNotAllowedForManagedProfileAction None]', 1), ('[android.server.wm.MultiDisplayKeyguardTests testDismissKeyguardActivity_secondaryDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayKeyguardTests testShowKeyguardDialogOnSecondaryDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayKeyguardTests testShowKeyguardDialogSecondaryDisplayChange CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayKeyguardTests testShowKeyguardDialogDefaultDisplayChange CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayKeyguardTests testNoKeyguardDialogOnPrivateDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayKeyguardTests testUnlockScreen_secondDisplayChanged_dismissesKeyguardOnUnlock CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayKeyguardTests testUnlockScreen_decoredSystemDisplayChanged_dismissesKeyguardOnUnlock CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleKeyguardTests testSingleLaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleKeyguardTests testKeyguardShowHide CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleKeyguardTests testKeyguardShowHideOverSplitScreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleKeyguardTests testKeyguardShowHideOverPip CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SecondaryLockscreenTest testSetSecondaryLockscreenEnabled None]', 1), ('[com.android.cts.deviceandprofileowner.SecondaryLockscreenTest testHomeButton None]', 1), ('[com.android.cts.deviceandprofileowner.SecondaryLockscreenTest testDismiss None]', 1), ('[com.android.cts.deviceandprofileowner.SecondaryLockscreenTest testSetSecondaryLockscreen_ineligibleAdmin_throwsSecurityException None]', 1), ('[android.view.inputmethod.cts.ImeInsetsVisibilityTest getTestMarker CtsInputMethodTestCases]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_defaultForegroundLauncher None]', 1), ('[com.android.cts.devicepolicy.QuietModeHostsideTest testQuietMode_noCredentialRequest None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25 testResetPasswordDeprecated None]', 1), ('[android.server.wm.KeyguardTransitionTests testUnlock CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTransitionTests testUnlockWallpaper CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTransitionTests testOcclude CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTransitionTests testUnocclude CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTransitionTests testNewActivityDuringOccluded CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTransitionTests testOccludeManifestAttr CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTransitionTests testOccludeAttrRemove CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTransitionTests testNewActivityDuringOccludedWithAttr CtsWindowManagerDeviceTestCases]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetResetPasswordToken_failIfNotDeviceOrProfileOwner CtsAdminTestCases]', 1), ('[android.admin.cts.DevicePolicyManagerTest testClearResetPasswordToken_failIfNotDeviceOrProfileOwner CtsAdminTestCases]', 1), ('[android.admin.cts.DevicePolicyManagerTest testIsResetPasswordTokenActive_failIfNotDeviceOrProfileOwner CtsAdminTestCases]', 1), ('[android.admin.cts.DevicePolicyManagerTest testResetPasswordWithToken_failIfNotDeviceOrProfileOwner CtsAdminTestCases]', 1), ('[android.admin.cts.DevicePolicyManagerTest testIsUsingUnifiedPassword_failIfNotProfileOwner CtsAdminTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testVerifyGeneratedLogs None]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testGenerateLogs None]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testSecurityLoggingRetrievalRateLimited None]', 1), ('[com.android.cts.deviceandprofileowner.LockScreenInfoTest testLockInfoIsNull None]', 1), ('[com.android.cts.deviceandprofileowner.LockScreenInfoTest testEmptyStringClearsLockInfo None]', 1), ('[com.android.cts.deviceandprofileowner.LockScreenInfoTest testSetLockInfoWithNullAdminFails None]', 1), ('[android.media.mediaparser.cts.MediaParserTest testWavWithImaAdpcm CtsMediaParserTestCases]', 1), ('[android.view.inputmethod.cts.ImeInsetsControllerTest launchTestActivity CtsInputMethodTestCases]', 1), ('[com.android.cts.profileowner.ManagementTest testProvisionManagedProfileNotAllowed None]', 1), ('[android.admin.cts.DeviceAdminActivationTest testActivateBrokenReceiver5Fails CtsAdminTestCases]', 1), ('[android.media.tv.tuner.cts.TunerFrontendTest testAtsc3FrontendSettings CtsTvTestCases]', 1), ('[com.android.cts.deviceandprofileowner.AccountManagementParentTest testEnableAccountManagement None]', 1), ('[com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest testInstallKeyPair None]', 1), ('[com.android.cts.deviceadmin.DeviceAdminWithEnterprisePoliciesBlockedTest testPasswordHistoryLength None]', 1), ('[com.android.cts.deviceadmin.DeviceAdminWithEnterprisePoliciesBlockedTest testPasswordExpirationTimeout None]', 1), ('[com.android.cts.transferowner.TransferDeviceOwnerIncomingTest testTransferPoliciesAreRetainedAfterTransfer None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testResetPasswordWithToken None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testSecondaryLockscreen None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSetPackagesNotSuspended None]', 1), ('[com.android.cts.deviceandprofileowner.SuspendPackageTest testSuspendNotSuspendablePackages None]', 1), ('[android.server.wm.DisplayTests testForceDisplayMetrics CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceFailsTest testCannotBind None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testSetNonVpnAlwaysOn None]', 1), ('[com.android.cts.devicepolicy.BaseDeviceAdminHostSideTest testResetPasswordDeprecated None]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest getTestMarker CtsInputMethodTestCases]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest testCannotBind_unprotectedCrossUserService None]', 1), ('[com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest testCheckCannotBind_nonManagingPackage None]', 1), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest getTestMarker CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.InputMethodStartInputLifecycleTest DisableScreenDozeRule CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.InputMethodStartInputLifecycleTest testInputConnectionStateWhenScreenStateChanges CtsInputMethodTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testLockScreenInfo None]', 1), ('[com.android.cts.transferowner.TransferProfileOwnerOutgoingTest testTransferWithPoliciesOutgoing None]', 1), ('[android.server.wm.MultiDisplayPolicyTests testStackFocusSwitchOnStackEmptiedInSleeping CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testStackFocusSwitchOnStackEmptied CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testStackFocusSwitchOnTouchEventAfterKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayPolicyTests testSecondaryDisplayShowWhenLocked CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testSetAndGetPasswordHistoryLength_onParent None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testGetPasswordComplexity_onParent None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testSetAndGetPasswordExpirationTimeout_onParent None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testGetPasswordExpiration_onParent None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testGetMaximumPasswordLength_onParent None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testSetAndGetMaximumFailedPasswordsForWipe_onParent None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testSetAndGetTrustAgentConfiguration_onParent None]', 1), ('[com.android.cts.managedprofile.DevicePolicyManagerParentSupportTest testSetAndGetRequiredStrongAuthTimeout_onParent None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCanRelinquishControlOverDevice None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testLockScreenInfo None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testTrustAgentInfo None]', 1), ('[android.server.wm.MultiDisplayLockedKeyguardTests supportsMultiDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayLockedKeyguardTests testVirtualDisplayHidesContentWhenLocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayLockedKeyguardTests testPrivateDisplayHideContentWhenLocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayLockedKeyguardTests testDismissKeyguard_secondaryDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplayLockedKeyguardTests testDismissKeyguard_whileOccluded_secondaryDisplay CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.deviceandprofileowner.KeyguardDisabledFeaturesTest testSetKeyguardDisabledFeatures_onParentSilentIgnoreWhenCallerIsNotOrgOwnedPO None]', 1), ('[com.android.cts.deviceandprofileowner.KeyguardDisabledFeaturesTest testSetKeyguardDisabledFeatures_onParent None]', 1), ('[android.server.wm.SplitScreenTests testRotationWhenDockedWhileLocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.ActivityVisibilityTests testTurnScreenOnActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.ActivityVisibilityTests testTurnScreenOnActivity_slowLaunch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.ActivityVisibilityTests testTurnScreenOnAttrNoLockScreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.ActivityVisibilityTests testTurnScreenOnAttrWithLockScreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.ActivityVisibilityTests testTurnScreenOnShowOnLockAttr CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.ActivityVisibilityTests testTurnScreenOnAttrRemove CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.ActivityVisibilityTests testTurnScreenOnSingleTask CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.ActivityVisibilityTests testTurnScreenOnActivity_withRelayout CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testKeyguardHidesActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testShowWhenLockedActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testShowWhenLockedActivity_withDialog CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testMultipleShowWhenLockedActivities CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testFinishMultipleShowWhenLockedActivities CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testTranslucentShowWhenLockedActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testTranslucentDoesntRevealBehind CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testDialogShowWhenLockedActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testShowWhenLockedActivityWhileSplit CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testInheritShowWhenLockedAdd CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testInheritShowWhenLockedRemove CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testInheritShowWhenLockedAttr CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testNoInheritShowWhenLocked CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testNoTransientConfigurationWhenShowWhenLockedRequestsOrientation CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testResumeShowWhenLockedActivityFromBackground CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testDismissKeyguardActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testDismissKeyguardActivity_method CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testDismissKeyguardActivity_method_notTop CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testDismissKeyguardActivity_method_turnScreenOn CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testDismissKeyguard_fromShowWhenLocked_notAllowed CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testKeyguardLock CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testUnoccludedRotationChange CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testDismissKeyguardAttrActivity_method_turnScreenOn CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testScreenOffWhileOccludedStopsActivityAod CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.KeyguardTests testScreenOffCausesSingleStopAod CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.deviceandprofileowner.ScreenCaptureDisabledTest testSetScreenCaptureDisabledOnParent_false None]', 1), ('[com.android.cts.deviceandprofileowner.ScreenCaptureDisabledTest testSetScreenCaptureDisabledOnParent_true None]', 1), ('[android.appsecurity.cts.ResumeOnRebootHostTest isSupportedDevice None]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests testTopPositionLaunchedBehindLockScreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests testTopPositionRemovedBehindLockScreen CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests testTopPositionLaunchedOnTopOfLockScreen CtsWindowManagerDeviceTestCases]', 1), ('[android.security.identity.cts.UserAuthTest isDeviceLocked CtsIdentityTestCases]', 1), ('[android.server.wm.KeyguardInputTests testReceiveKeysOnTopOfKeyguard CtsWindowManagerDeviceTestCases]', 1), ('[android.net.ipsec.ike.cts.IkeSessionParamsTest testSetPcscfConfigRequests CtsIkeTestCases]', 1), ('[android.media.cts.DecoderTest testTrackSelectionMkv CtsMediaTestCases]', 1), ('[com.android.cts.managedprofile.DisallowSharingIntoProfileTest testDisableSharingIntoProfile None]', 1), ('[com.android.cts.deviceowner.DeviceOwnerProvisioningTest getSystemPackageNameList None]', 1), ('[com.android.cts.managedprofile.ProvisioningTest PersistableBundle None]', 1), ('[com.android.cts.devicepolicy.PasswordComplexityTest testGetPasswordComplexity None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testLockNowWithKeyEviction None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testPasswordMinimumRestrictions None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testResetPasswordWithTokenBeforeUnlock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testClearPasswordWithTokenBeforeUnlock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testResetPasswordTokenUsableAfterClearingLock None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testIsUsingUnifiedPassword None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testUnlockWorkProfile_deviceWidePassword None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testRebootDevice_unifiedPassword None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testRebootDevice_separatePasswords None]', 1), ('[com.android.cts.devicepolicy.ManagedProfilePasswordTest testCreateSeparateChallengeChangedLogged None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardTests.java', 25), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 15), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 10), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java', 10), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java', 9), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardTransitionTests.java', 8), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityVisibilityTests.java', 8), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 7), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplayKeyguardTests.java', 7), ('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 6), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java', 5), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplayLockedKeyguardTests.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTimeoutTest.java', 4), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/LockScreenInfoTest.java', 4), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplayPolicyTests.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadCallbackTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java', 3), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageReportingTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/PreManagedProfileTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/EncryptionApp/src/com/android/cts/encryptionapp/EncryptionAppTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/QuietModeHostsideTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/DeviceAdminWithEnterprisePoliciesBlockedTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 2), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/TransferOwnerOutgoingApp/src/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/TransferOwnerIncomingApp/src/com/android/cts/transferowner/TransferProfileOwnerIncomingTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ScreenCaptureDisabledTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/PasswordComplexityTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/NavigationBarColorTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ParentProfileTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/FileSystemPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/SearchViewTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/TransferOwnerOutgoingApp/src/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/jvmti/attaching/host/src/android/jvmti/cts/JvmtiAttachingHostTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/PackageVisibilityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/OnScreenPositionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/SingleAdminApp/src/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UnavailableSecureLockScreenTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/ImeInsetsControllerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/ManagementTest.java', 1), ('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DeviceAdminActivationTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AccountManagementParentTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/TransferOwnerIncomingApp/src/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/TransferOwnerIncomingApp/src/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDeviceAdminHostSideTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/FocusHandlingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/PasswordMinimumRestrictionsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplitScreenTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ResumeOnRebootHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/UserAuthTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardInputTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionParamsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DeviceOwnerProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java', 1)]"	"[('/android/server/wm/KeyguardTests.java', 26), ('/android/server/wm/KeyguardLockedTests.java', 16), ('/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 12), ('/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java', 11), ('/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java', 11), ('/android/server/wm/KeyguardTransitionTests.java', 9), ('/android/server/wm/ActivityVisibilityTests.java', 9), ('/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 8), ('/android/server/wm/MultiDisplayKeyguardTests.java', 8), ('/android/admin/cts/DevicePolicyManagerTest.java', 7), ('/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 6), ('/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java', 6), ('/android/server/wm/MultiDisplayLockedKeyguardTests.java', 6), ('/com/android/cts/devicepolicy/ManagedProfileTimeoutTest.java', 5), ('/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java', 5), ('/com/android/cts/deviceandprofileowner/LockScreenInfoTest.java', 5), ('/android/server/wm/MultiDisplayPolicyTests.java', 5), ('/android/telephony/embms/cts/MbmsDownloadCallbackTest.java', 4), ('/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 4), ('/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 4), ('/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 4), ('/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java', 4), ('/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java', 4), ('/com/android/cts/transferowner/TransferProfileOwnerIncomingTest.java', 4), ('/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java', 4), ('/android/app/usage/cts/UsageReportingTest.java', 3), ('/com/android/cts/managedprofile/PreManagedProfileTest.java', 3), ('/com/android/cts/encryptionapp/EncryptionAppTest.java', 3), ('/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 3), ('/com/android/cts/devicepolicy/QuietModeHostsideTest.java', 3), ('/com.android.cts.deviceadmin/DeviceAdminWithEnterprisePoliciesBlockedTest.java', 3), ('/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 3), ('/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 3), ('/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java', 3), ('/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 3), ('/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java', 3), ('/com/android/cts/deviceandprofileowner/ScreenCaptureDisabledTest.java', 3), ('/com/android/cts/devicepolicy/PasswordComplexityTest.java', 3), ('/android/jdwptunnel/cts/JdwpTunnelTest.java', 2), ('/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java', 2), ('/android/view/inputmethod/cts/NavigationBarColorTest.java', 2), ('/com/android/cts/managedprofile/ParentProfileTest.java', 2), ('/android/permission/cts/FileSystemPermissionTest.java', 2), ('/android/app/cts/NotificationManagerTest.java', 2), ('/android/view/inputmethod/cts/SearchViewTest.java', 2), ('/android/keystore/cts/CipherTest.java', 2), ('/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java', 2), ('/android/jvmti/cts/JvmtiAttachingHostTest.java', 2), ('/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 2), ('/android/view/inputmethod/cts/PackageVisibilityTest.java', 2), ('/android/view/inputmethod/cts/OnScreenPositionTest.java', 2), ('/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 2), ('/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java', 2), ('/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java', 2), ('/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java', 2), ('/com/android/cts/deviceandprofileowner/UnavailableSecureLockScreenTest.java', 2), ('/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/android/view/inputmethod/cts/ImeInsetsControllerTest.java', 2), ('/com/android/cts/profileowner/ManagementTest.java', 2), ('/android/admin/cts/DeviceAdminActivationTest.java', 2), ('/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 2), ('/android/media/tv/tuner/cts/TunerFrontendTest.java', 2), ('/com/android/cts/deviceandprofileowner/AccountManagementParentTest.java', 2), ('/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java', 2), ('/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java', 2), ('/android/server/wm/DisplayTests.java', 2), ('/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 2), ('/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java', 2), ('/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 2), ('/com/android/cts/devicepolicy/BaseDeviceAdminHostSideTest.java', 2), ('/android/view/inputmethod/cts/FocusHandlingTest.java', 2), ('/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 2), ('/com/android/cts/managedprofile/PasswordMinimumRestrictionsTest.java', 2), ('/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java', 2), ('/com/android/cts/devicepolicy/ManagedProfileTest.java', 2), ('/android/view/inputmethod/cts/InputMethodServiceTest.java', 2), ('/android/server/wm/SplitScreenTests.java', 2), ('/com/android/cts/delegate/CertInstallDelegateTest.java', 2), ('/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 2), ('/android/appsecurity/cts/ResumeOnRebootHostTest.java', 2), ('/android/security/identity/cts/UserAuthTest.java', 2), ('/android/server/wm/KeyguardInputTests.java', 2), ('/android/net/ipsec/ike/cts/IkeSessionParamsTest.java', 2), ('/android/media/cts/DecoderTest.java', 2), ('/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java', 2), ('/com/android/cts/deviceowner/DeviceOwnerProvisioningTest.java', 2), ('/com/android/cts/managedprofile/ProvisioningTest.java', 2), ('/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java', 2)]"	"[('([1:/android/admin/cts/DevicePolicyManagerTest.java]:[lockscreen]:[1]:method_text:[ (SecurityException e) {             assertProfileOwnerMessage(e.getMessage());         }     }     ])', 5), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[getParentProfileInstance]:[1]:method_text:[UserRestriction(ADMIN_RECEIVER_COMPONENT,                 UserManager.DISALLOW_ADD_USER);     }     ])', 2), ('([5:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[lockscreen]:[5]:method_text:[tStopToResumeSequence(CallbackTrackingActivity.class,                 getLifecycleLog());     }     ])', 2), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[lockscreen]:[1]:method_text:[t on the onCreate function.      *      * TODO: We should expand this to more functions.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodServiceDeviceTest.java]:[lockscreen]:[1]:method_text:[.isInputMethodPickerShown(), TIMEOUT,                 ""InputMethod picker should be shown"");     } }])', 1), ('([4:/android/view/inputmethod/cts/NavigationBarColorTest.java]:[lockscreen]:[4]:method_text:[                         bitmap.getWidth(), navigationBarHeight);             }         }     }     ])', 1), ('([1:/com/android/cts/managedprofile/ParentProfileTest.java]:[getParentProfileInstance]:[1]:method_text:[. those with the      * {@link android.annotation.SystemApi} annotation) are NOT tested.      */    ])', 1), ('([1:/android/telephony/embms/cts/MbmsDownloadCallbackTest.java]:[DPC]:[1]:method_text:[  } catch (InterruptedException e) {                 return null;             }         }     }     ])', 1), ('([2:/android/telephony/embms/cts/MbmsDownloadCallbackTest.java]:[DPC]:[2]:method_text:[oadService.FILE_INFO_1, stateArgs.arg2);         assertEquals(sampleInt, stateArgs.arg3);     }     ])', 1), ('([2:/android/telephony/embms/cts/MbmsDownloadCallbackTest.java]:[DPC]:[2]:method_text:[ull, 0, 0, 0, 0);         assertNull(progressCallback.waitOnProgressUpdated(SHORT_TIMEOUT));     } }])', 1), ('([1:/android/permission/cts/FileSystemPermissionTest.java]:[lockscreen]:[1]:method_text:[here looking for bad directories.  There has to be      * a better way...      */     @LargeTest    ])', 1), ('([3:/android/app/cts/NotificationManagerTest.java]:[lockscreen]:[3]:method_text:[) != Notification.VISIBILITY_SECRET);         assertFalse(createdChannel.canBypassDnd());     }     ])', 1), ('([16:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[16]:method_text:[th device owner and profile are the same package ({@link #COMP_DPC_PKG}).      */     @LargeTest    ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[2]:method_text:[package ({@link #COMP_DPC_PKG}), as setup      * by createAndManagedUser.      */     @FlakyTest    ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[2]:method_text:[   verifyBindDeviceAdminServiceAsUser(secondaryUserId);     }      @FlakyTest(bugId = 141161038)    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[5]:method_text:[lingNetworkAndSecurityLogging"",                 mPrimaryUserId);         }     }      @FlakyTest    ])', 1), ('([22:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[22]:method_text:[              ""testOtherProfilesEqualsBindTargetUsers"",                 otherProfileUserId);     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[getParentProfileInstance]:[1]:method_text:[riction(ADMIN_RECEIVER_COMPONENT,                 UserManager.DISALLOW_CONFIG_DATE_TIME);     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[getParentProfileInstance]:[1]:method_text:[etCameraDisabled(ADMIN_RECEIVER_COMPONENT);          assertThat(actualDisabled).isTrue();     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[getParentProfileInstance]:[1]:method_text:[tCameraDisabled(ADMIN_RECEIVER_COMPONENT);          assertThat(actualDisabled).isFalse();     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[getParentProfileInstance]:[1]:method_text:[ISALLOW_CONFIG_DATE_TIME,                     UserManager.DISALLOW_AIRPLANE_MODE             );     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[getParentProfileInstance]:[2]:method_text:[    Log.e(TAG, ""Interrupted exception thrown while stopping background thread."");         }     }  }])', 1), ('([4:/android/view/inputmethod/cts/SearchViewTest.java]:[lockscreen]:[4]:method_text:[            }              return layout;         });         return searchViewRef.get();     }     ])', 1), ('([2:/android/keystore/cts/CipherTest.java]:[lockscreen]:[2]:method_text:[ortsLockAndUnlock() {             return supportsInsecureLock();         }     }      @Presubmit    ])', 1), ('([1:/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[er.setUp();         setupTestParameters(DevicePolicyManager.ACTION_DEVICE_OWNER_CHANGED);     }     ])', 1), ('([1:/android/jvmti/cts/JvmtiAttachingHostTest.java]:[lockscreen]:[1]:method_text:[   CLog.e(""Failed cleaning up library on device"");                 }             }         }     } }])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[tends AndroidTestCase {     private static final String TAG = ""ManagedProfileProvisioningTest"";     ])', 1), ('([4:/android/view/inputmethod/cts/PackageVisibilityTest.java]:[lockscreen]:[4]:method_text:[il.hasObject(By.pkg(TEST_ACTIVITY.getPackageName()).depth(0)), timeout);     }      @AppModeFull    ])', 1), ('([4:/android/app/usage/cts/UsageReportingTest.java]:[lockscreen]:[4]:method_text:[      Thread.sleep(1000);             assertAppOrTokenUsed(mFullToken0, false);         }     }     ])', 1), ('([4:/android/app/usage/cts/UsageReportingTest.java]:[lockscreen]:[4]:method_text:[    break;                 }             }             return found == expected;         });     } }])', 1), ('([5:/android/server/wm/KeyguardLockedTests.java]:[lockscreen]:[5]:method_text:[guardManager.isDeviceLocked());         assertFalse(mKeyguardManager.isKeyguardLocked());     }     ])', 1), ('([6:/android/server/wm/KeyguardLockedTests.java]:[lockscreen]:[6]:method_text:[uardSecure());         } finally {             keyguardLock.reenableKeyguard();         }     }     ])', 1), ('([5:/android/server/wm/KeyguardLockedTests.java]:[lockscreen]:[5]:method_text:[AssertKeyguardGone();         mWmState.assertVisibility(DISMISS_KEYGUARD_ACTIVITY, true);     }     ])', 1), ('([5:/android/server/wm/KeyguardLockedTests.java]:[lockscreen]:[5]:method_text:[rue);         mWmState.assertVisibility(SHOW_WHEN_LOCKED_ACTIVITY, isDismissTranslucent);     }     ])', 1), ('([5:/android/server/wm/KeyguardLockedTests.java]:[lockscreen]:[5]:method_text:[ShowingAndOccluded();         mWmState.assertVisibility(SHOW_WHEN_LOCKED_ACTIVITY, true);     }     ])', 1), ('([6:/android/server/wm/KeyguardLockedTests.java]:[lockscreen]:[6]:method_text:[e().keyguardShowing);         assertOnDismissSucceeded(DISMISS_KEYGUARD_METHOD_ACTIVITY);     }     ])', 1), ('([5:/android/server/wm/KeyguardLockedTests.java]:[lockscreen]:[5]:method_text:[IVITY, false);         assertTrue(mWmState.getKeyguardControllerState().keyguardShowing);     }     ])', 1), ('([4:/android/server/wm/KeyguardLockedTests.java]:[lockscreen]:[4]:method_text:[uardControllerState().keyguardShowing);         assertTrue(isDisplayOn(DEFAULT_DISPLAY));     }     ])', 1), ('([7:/android/server/wm/KeyguardLockedTests.java]:[lockscreen]:[7]:method_text:[t contain pinned stack."", WINDOWING_MODE_PINNED,                 ACTIVITY_TYPE_STANDARD);     }     ])', 1), ('([6:/android/server/wm/KeyguardLockedTests.java]:[lockscreen]:[6]:method_text:[SHOW_WHEN_LOCKED_ACTIVITY, true);         mWmState.assertVisibility(PIP_ACTIVITY, false);     }     ])', 1), ('([7:/android/server/wm/KeyguardLockedTests.java]:[lockscreen]:[7]:method_text:[tKeyguardShowingAndNotOccluded();         mWmState.assertVisibility(PIP_ACTIVITY, false);     }     ])', 1), ('([5:/android/server/wm/KeyguardLockedTests.java]:[lockscreen]:[5]:method_text:[tKeyguardShowingAndNotOccluded();         mWmState.assertVisibility(PIP_ACTIVITY, false);     }     ])', 1), ('([4:/android/server/wm/KeyguardLockedTests.java]:[lockscreen]:[4]:method_text:[expected display.         mWmState.waitAndAssertImeWindowShownOnDisplay(DEFAULT_DISPLAY);     }     ])', 1), ('([4:/android/server/wm/KeyguardLockedTests.java]:[lockscreen]:[4]:method_text:[xpected display.         mWmState.waitAndAssertImeWindowShownOnDisplay(DEFAULT_DISPLAY);      }     ])', 1), ('([10:/android/server/wm/KeyguardLockedTests.java]:[lockscreen]:[10]:method_text:[_PINNED)                 .setActivityType(ACTIVITY_TYPE_STANDARD)                 .build());     } }])', 1), ('([4:/android/view/inputmethod/cts/OnScreenPositionTest.java]:[lockscreen]:[4]:method_text:[al int EXPECTED_KEYBOARD_HEIGHT = 100;      /**      * Regression test for Bug 33308065.      */    ])', 1), ('([1:/com/android/cts/managedprofile/PreManagedProfileTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[           .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }     ])', 1), ('([1:/com/android/cts/managedprofile/PreManagedProfileTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[             .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }  }])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTimeoutTest.java]:[lockscreen]:[1]:method_text:[** Profile should get locked if it is in foreground but with no user activity. */     @LargeTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTimeoutTest.java]:[lockscreen]:[1]:method_text:[true);     }      /** User activity in profile should prevent it from locking. */     @FlakyTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTimeoutTest.java]:[lockscreen]:[1]:method_text:[ /** Keep screen on window flag in the profile should prevent it from locking. */     @FlakyTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTimeoutTest.java]:[lockscreen]:[1]:method_text:[%s %s/.TimeoutActivity"",                 profileUserId, keepScreenOn, MANAGED_PROFILE_PKG));     } }])', 1), ('([1:/com/android/cts/encryptionapp/EncryptionAppTest.java]:[lockscreen]:[1]:method_text:[public void testLockScreen() throws Exception {         summonKeyguard();     }      ])', 1), ('([1:/com/android/cts/encryptionapp/EncryptionAppTest.java]:[lockscreen]:[1]:method_text:[hisCount + "" not greater than last "" + lastCount,                 thisCount > lastCount);     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[DPC]:[1]:method_text:[ationSupported() {         return mDevicePolicyManager.isUniqueDeviceAttestationSupported();     } }])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[DPC]:[3]:method_text:[Delegations} to test that      *    the scope can only be delegatd to one app at a time.      */    ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[lockscreen]:[1]:method_text:[         executeDeviceTestClass("".TrustAgentInfoTest"");     }      @FlakyTest(bugId = 141161038)    ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[lockscreen]:[1]:method_text:[      return;         }         executeDeviceTestClass("".RequiredStrongAuthTimeoutTest"");     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[lockscreen]:[1]:method_text:[iceTestMethod("".ResetPasswordTest"", ""testResetPasswordDeprecated"");     }      @LockSettingsTest    ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[lockscreen]:[1]:method_text:[y         // without allowing failures.         executeResetPasswordWithTokenTests(true);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[lockscreen]:[1]:method_text:[          changeUserCredential(null /*newCredential*/, TEST_PASSWORD, mUserId);         }     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[lockscreen]:[1]:method_text:[             return;         }         executeDeviceTestClass("".PasswordExpirationTest"");     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[lockscreen]:[1]:method_text:[    } finally {             changeUserCredential(null, TEST_PASSWORD, mUserId);         }     }     ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[lockscreen]:[3]:method_text:[     runDeviceTestsAsUser(DEVICE_ADMIN_PKG, "".UnavailableSecureLockScreenTest"", mUserId);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[lockscreen]:[2]:method_text:[and(                 restricted ? RESTRICT_BACKGROUND_ON_CMD : RESTRICT_BACKGROUND_OFF_CMD);     } }])', 1), ('([1:/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[     public void setUp() {         mContext = InstrumentationRegistry.getTargetContext();     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java]:[getParentProfileInstance]:[1]:method_text:[IVER_COMPONENT,                 SYSTEM_PACKAGE_TO_HIDE, false);         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[olicyManager.isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_DEVICE));     }     ])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[             .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }  }])', 1), ('([4:/android/server/wm/MultiDisplayKeyguardTests.java]:[lockscreen]:[4]:method_text:[ACTIVITY, true);     }      /**      * Tests keyguard dialog shows on secondary display.      */    ])', 1), ('([4:/android/server/wm/MultiDisplayKeyguardTests.java]:[lockscreen]:[4]:method_text:[   }      /**      * Tests keyguard dialog should exist after secondary display changed.      */    ])', 1), ('([4:/android/server/wm/MultiDisplayKeyguardTests.java]:[lockscreen]:[4]:method_text:[     }      /**      * Tests keyguard dialog should exist after default display changed.      */    ])', 1), ('([6:/android/server/wm/MultiDisplayKeyguardTests.java]:[lockscreen]:[6]:method_text:[ay.mId);     }      /**      * Tests keyguard dialog cannot be shown on private display.      */    ])', 1), ('([4:/android/server/wm/MultiDisplayKeyguardTests.java]:[lockscreen]:[4]:method_text:[cDisplay.mId);         mWmState.assertKeyguardGoneOnSecondaryDisplay(privateDisplay.mId);     }     ])', 1), ('([8:/android/server/wm/MultiDisplayKeyguardTests.java]:[lockscreen]:[8]:method_text:[ardGone();         mWmState.waitAndAssertKeyguardGoneOnSecondaryDisplay(secondDisplayId);     }     ])', 1), ('([8:/android/server/wm/MultiDisplayKeyguardTests.java]:[lockscreen]:[8]:method_text:[one();         mWmState.waitAndAssertKeyguardGoneOnSecondaryDisplay(decoredSystemDisplayId);     } }])', 1), ('([4:/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java]:[lockscreen]:[4]:method_text:[leVerifier.assertLaunchAndStopSequence(FirstActivity.class, getLifecycleLog());         }     }     ])', 1), ('([4:/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java]:[lockscreen]:[4]:method_text:[LifecycleVerifier.assertRestartAndResumeSequence(FirstActivity.class, getLifecycleLog());     }     ])', 1), ('([4:/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java]:[lockscreen]:[4]:method_text:[ifecycleVerifier.assertRestartAndResumeSequence(SecondActivity.class, getLifecycleLog());     }     ])', 1), ('([4:/android/server/wm/lifecycle/ActivityLifecycleKeyguardTests.java]:[lockscreen]:[4]:method_text:[,                 Arrays.asList(ON_RESTART, ON_START, ON_RESUME, ON_PAUSE), ""keyguardGone"");     } }])', 1), ('([5:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[lockscreen]:[5]:method_text:[(SecurityException expected) {}         runShellCommand(""locksettings clear --old 1234"");     }     ])', 1), ('([7:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[lockscreen]:[7]:method_text:[   assertThat(expected.getMessage()).contains(""default supervision component"");         }     }     ])', 1), ('([5:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[lockscreen]:[5]:method_text:[   assertThat(expected.getMessage()).contains(""default supervision component"");         }     }     ])', 1), ('([4:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[lockscreen]:[4]:method_text:[   assertThat(expected.getMessage()).contains(""default supervision component"");         }     }     ])', 1), ('([5:/com/android/cts/deviceandprofileowner/SecondaryLockscreenTest.java]:[lockscreen]:[5]:method_text:[        return resolveInfos.isEmpty() ? null : resolveInfos.get(0).activityInfo.packageName;     } }])', 1), ('([4:/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java]:[lockscreen]:[4]:method_text:[     }      @Rule     public final UnlockScreenRule mUnlockScreenRule = new UnlockScreenRule();     ])', 1), ('([3:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[lockscreen]:[3]:method_text:[edential= */ TEST_PASSWORD,                     mPrimaryUserId);         }     }      @LargeTest    ])', 1), ('([1:/com/android/cts/devicepolicy/QuietModeHostsideTest.java]:[lockscreen]:[1]:method_text:[      params.put(PARAM_ORIGINAL_DEFAULT_LAUNCHER, mOriginalLauncher);         return params;     } }])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[DPC]:[1]:method_text:[ getDevice().executeShellCommand(""input keyevent 3"");         }         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[lockscreen]:[1]:method_text:[       + TEST_APP_PKG + "".SimpleActivity"";         getDevice().executeShellCommand(command);     } }])', 1), ('([4:/android/server/wm/KeyguardTransitionTests.java]:[lockscreen]:[4]:method_text:[TRANSIT_KEYGUARD_GOING_AWAY,                 mWmState.getDefaultDisplayLastTransition());     }     ])', 1), ('([4:/android/server/wm/KeyguardTransitionTests.java]:[lockscreen]:[4]:method_text:[ARD_GOING_AWAY_ON_WALLPAPER,                 mWmState.getDefaultDisplayLastTransition());     }     ])', 1), ('([1:/android/server/wm/KeyguardTransitionTests.java]:[lockscreen]:[1]:method_text:["", TRANSIT_KEYGUARD_OCCLUDE,                 mWmState.getDefaultDisplayLastTransition());     }     ])', 1), ('([1:/android/server/wm/KeyguardTransitionTests.java]:[lockscreen]:[1]:method_text:[ TRANSIT_KEYGUARD_UNOCCLUDE,                 mWmState.getDefaultDisplayLastTransition());     }     ])', 1), ('([4:/android/server/wm/KeyguardTransitionTests.java]:[lockscreen]:[4]:method_text:[ion"", TRANSIT_ACTIVITY_OPEN,                 mWmState.getDefaultDisplayLastTransition());     }     ])', 1), ('([4:/android/server/wm/KeyguardTransitionTests.java]:[lockscreen]:[4]:method_text:[aultDisplayLastTransition());         assertSingleLaunch(SHOW_WHEN_LOCKED_ATTR_ACTIVITY);     }     ])', 1), ('([5:/android/server/wm/KeyguardTransitionTests.java]:[lockscreen]:[5]:method_text:[E_STOPPED);         assertSingleStartAndStop(SHOW_WHEN_LOCKED_ATTR_REMOVE_ATTR_ACTIVITY);     }     ])', 1), ('([4:/android/server/wm/KeyguardTransitionTests.java]:[lockscreen]:[4]:method_text:[sition"", TRANSIT_ACTIVITY_OPEN,                 mWmState.getDefaultDisplayLastTransition());     } }])', 1), ('([2:/android/admin/cts/DevicePolicyManagerTest.java]:[lockscreen]:[2]:method_text:[             mPackageManager.hasSystemFeature(PackageManager.FEATURE_SECURE_LOCK_SCREEN);     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UnavailableSecureLockScreenTest.java]:[lockscreen]:[1]:method_text:[xyz0123456789"".getBytes();     private static final String COMPLEX_PASSWORD = ""XYZabc123#&*!."";     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[lockscreen]:[1]:method_text:[             }         }     }      /**      * Generates events for positive test cases.      */    ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[lockscreen]:[1]:method_text:[tches. Shared preference      * is used to store these numbers between test invocations.      */    ])', 1), ('([2:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[lockscreen]:[2]:method_text:[GET_USER_INDEX) == userId &&                         getInt(e, CAMERA_DISABLED_INDEX) == 0);     } }])', 1), ('([2:/com/android/cts/deviceandprofileowner/LockScreenInfoTest.java]:[lockscreen]:[2]:method_text:[vicePolicyManager.setDeviceOwnerLockScreenInfo(getWho(), null);         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/LockScreenInfoTest.java]:[lockscreen]:[1]:method_text:[ckInfoIsNull() {         assertNull(mDevicePolicyManager.getDeviceOwnerLockScreenInfo());     }     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/LockScreenInfoTest.java]:[lockscreen]:[2]:method_text:[Who(), message);         assertNull(mDevicePolicyManager.getDeviceOwnerLockScreenInfo());     }     ])', 1), ('([3:/com/android/cts/deviceandprofileowner/LockScreenInfoTest.java]:[lockscreen]:[3]:method_text:[o());     }      protected ComponentName getWho() {         return ADMIN_RECEIVER_COMPONENT;     } }])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {         testAssetExtraction(""wav/sample_ima_adpcm.wav"");     }     ])', 1), ('([4:/android/view/inputmethod/cts/ImeInsetsControllerTest.java]:[lockscreen]:[4]:method_text:[inal int INITIAL_KEYBOARD_HEIGHT = 200;     private static final int NEW_KEYBOARD_HEIGHT = 300;     ])', 1), ('([1:/com/android/cts/profileowner/ManagementTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[ProvisioningAllowed(                 DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     } }])', 1), ('([1:/android/admin/cts/DeviceAdminActivationTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[                new ComponentName(getInstrumentation().getTargetContext(), receiverClass)));     } }])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases.  *  */ public class ResetPasswordTest extends BaseDeviceAdminTest {     ])', 1), ('([4:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[DPC]:[4]:method_text:[tCodeRate());         assertEquals(Atsc3FrontendSettings.FEC_LDPC_16K, plps[1].getFec());     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AccountManagementParentTest.java]:[getParentProfileInstance]:[1]:method_text:[ssertThat(parentDevicePolicyManager).isNotNull();          return parentDevicePolicyManager;     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[DPC]:[1]:method_text:[N+, @{link IllegalArgumentException } should be thrown if the package      * is missing.      */    ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[lockscreen]:[1]:method_text:[  mDpm.setCertInstallerPackage(ADMIN_RECEIVER_COMPONENT, null);         super.tearDown();     }     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java]:[DevicePolicyManager.ACTION]:[2]:method_text:[alue.             setAirplaneModeAndWaitBroadcast(0);         }         super.tearDown();     }     ])', 1), ('([1:/com.android.cts.deviceadmin/DeviceAdminWithEnterprisePoliciesBlockedTest.java]:[lockscreen]:[1]:method_text:[ 3));         assertEquals(originalValue, dpm.getPasswordHistoryLength(mAdminComponent));     }     ])', 1), ('([1:/com.android.cts.deviceadmin/DeviceAdminWithEnterprisePoliciesBlockedTest.java]:[lockscreen]:[1]:method_text:[}          assertTrue(""Expected SecurityException was not thrown"", securityExceptionThrown);     } }])', 1), ('([1:/com/android/cts/transferowner/TransferDeviceOwnerIncomingTest.java]:[getParentProfileInstance]:[1]:method_text:[wStart()                 && policy1.getInstallWindowEnd() == policy2.getInstallWindowEnd());     } }])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[lockscreen]:[1]:method_text:[// MixedProfileOwnerTest         executeResetPasswordWithTokenTests(false);     }      @Override    ])', 1), ('([2:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[lockscreen]:[2]:method_text:[reen() throws Exception {         // Managed profiles cannot have secondary lockscreens set.     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[1]:method_text:[(isSuspended);     }      /**      * Verify that we cannot suspend launcher and dpc app.      */    ])', 1), ('([2:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[2]:method_text:[      assertTrue(new HashSet(Arrays.asList(a)).containsAll(new HashSet(Arrays.asList(b))));     }  }])', 1), ('([5:/android/server/wm/DisplayTests.java]:[lockscreen]:[5]:method_text:[                    .getResources().getConfiguration();             return config;         }     } }])', 1), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                 serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);     } }])', 1), ('([2:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferIncomingTest.java]:[lockscreen]:[2]:method_text:[geManager().hasSystemFeature(                 PackageManager.FEATURE_SECURE_LOCK_SCREEN);     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[DPC]:[1]:method_text:[    fail(""Connectivity isn\'t available while expected: "" + message);             }         }     } }])', 1), ('([1:/com/android/cts/devicepolicy/BaseDeviceAdminHostSideTest.java]:[lockscreen]:[1]:method_text:[ackage(), ""DeviceAdminPasswordTest"",                         ""testResetPasswordDeprecated"");     } }])', 1), ('([4:/android/view/inputmethod/cts/FocusHandlingTest.java]:[lockscreen]:[4]:method_text:[KER_PREFIX + ""/""  + SystemClock.elapsedRealtimeNanos();     }      @FlakyTest(bugId = 149246840)    ])', 1), ('([2:/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java]:[DPC]:[2]:method_text:[entName(mContext));         assertTrue(""No target users found"", mTargetUsers.size() > 0);     }     ])', 1), ('([1:/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java]:[DPC]:[1]:method_text:[ }      /**      * Talk to a DPC package that is neither device owner nor profile owner.      */    ])', 1), ('([1:/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java]:[DPC]:[1]:method_text:[   }     }      /**      * Talk to the same DPC in same user, that is talking to itself.      */    ])', 1), ('([4:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[lockscreen]:[4]:method_text:[onNull String marker) {         return launchTestActivity(marker, getTestMarker()).first;     }     ])', 1), ('([4:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[lockscreen]:[4]:method_text:[ new UnlockScreenRule();      private static final long TIMEOUT = TimeUnit.SECONDS.toMillis(5);     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[lockscreen]:[1]:method_text:[able window hosted by a different process      * temporarily becomes the focused window.      */    ])', 1), ('([1:/com/android/cts/managedprofile/PasswordMinimumRestrictionsTest.java]:[getParentProfileInstance]:[1]:method_text:[lity(ADMIN_RECEIVER_COMPONENT, mParentPreviousPasswordQuality);         super.tearDown();     }     ])', 1), ('([3:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[lockscreen]:[3]:method_text:[          .setAdminPackageName(DEVICE_ADMIN_PKG)                     .build());         }     }     ])', 1), ('([1:/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[r.setUp();         setupTestParameters(DevicePolicyManager.ACTION_PROFILE_OWNER_CHANGED);     }     ])', 1), ('([1:/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java]:[getParentProfileInstance]:[1]:method_text:[evicePolicyManager.transferOwnership(mOutgoingComponentName, INCOMING_COMPONENT_NAME, b);     }     ])', 1), ('([1:/com/android/cts/transferowner/TransferProfileOwnerIncomingTest.java]:[lockscreen]:[1]:method_text:[targetParentProfileInstance.getPasswordExpirationTimeout(mIncomingComponentName));         }     } }])', 1), ('([3:/com/android/cts/transferowner/TransferProfileOwnerIncomingTest.java]:[getParentProfileInstance]:[3]:method_text:[targetParentProfileInstance.getPasswordExpirationTimeout(mIncomingComponentName));         }     } }])', 1), ('([2:/android/server/wm/MultiDisplayPolicyTests.java]:[lockscreen]:[2]:method_text:[secondary display and then finishing it to see if stack focus      * is moved correctly.      */    ])', 1), ('([7:/android/server/wm/MultiDisplayPolicyTests.java]:[lockscreen]:[7]:method_text:[   * Tests that input events on the primary display take focus from the virtual display.      */    ])', 1), ('([6:/android/server/wm/MultiDisplayPolicyTests.java]:[lockscreen]:[6]:method_text:[CTIVITY));     }      /**      * Tests that showWhenLocked works on a secondary display.      */    ])', 1), ('([5:/android/server/wm/MultiDisplayPolicyTests.java]:[lockscreen]:[5]:method_text:[ on secondary display"");     }      /**      * Tests tap and set focus between displays.      */    ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[lockscreen]:[1]:method_text:[NENT);          assertThat(actualPasswordHistoryLength).isEqualTo(passwordHistoryLength);     }     ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[lockscreen]:[1]:method_text:[wordComplexity).isEqualTo(                 DevicePolicyManager.PASSWORD_COMPLEXITY_NONE);     }     ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[lockscreen]:[1]:method_text:[        assertThat(actualPasswordExpirationTimeout).isEqualTo(passwordExpirationTimeout);     }     ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[lockscreen]:[1]:method_text:[ assertThat(actualPasswordExpiration).isAtLeast(passwordExpirationTimeout + currentTime);     }     ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[lockscreen]:[1]:method_text:[ALITY_NUMERIC_COMPLEX);         assertThat(actualMaximumPasswordLength).isGreaterThan(0);     }     ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[lockscreen]:[1]:method_text:[assertThat(actualMaximumFailedPasswordsForWipe).isEqualTo(maximumFailedPasswordsForWipe);     }     ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[lockscreen]:[1]:method_text:[KE_COMPONENT).get(0);          assertThat(actualConfiguration.get(key)).isEqualTo(value);     }     ])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[lockscreen]:[1]:method_text:[redStrongAuthTimeout);     }      public abstract class FakeComponent extends BroadcastReceiver {} }])', 1), ('([1:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[getParentProfileInstance]:[1]:method_text:[ntName(             FakeComponent.class.getPackage().getName(), FakeComponent.class.getName());     ])', 1), ('([2:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[lockscreen]:[2]:method_text:[D, mPrimaryUserId);             getDevice().uninstallPackage(DEVICE_ADMIN_PKG);         }     }     ])', 1), ('([2:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[lockscreen]:[2]:method_text:[        }         runDeviceTestsAsUser(DEVICE_ADMIN_PKG, "".LockScreenInfoTest"", mUserId);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[lockscreen]:[1]:method_text:[ TEST_PASSWORD, mProfileUserId);         }     }      // TODO(b/149580605): Fix this flaky test.    ])', 1), ('([4:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[lockscreen]:[4]:method_text:[ctivity.getWindow().setSoftInputMode(windowFlags);             return layout;         });     }     ])', 1), ('([1:/android/server/wm/MultiDisplayLockedKeyguardTests.java]:[lockscreen]:[1]:method_text:[    }      /**      * Test that virtual display content is hidden when device is locked.      */    ])', 1), ('([7:/android/server/wm/MultiDisplayLockedKeyguardTests.java]:[lockscreen]:[7]:method_text:[   }      /**      * Tests that private display cannot show content while device locked.      */    ])', 1), ('([5:/android/server/wm/MultiDisplayLockedKeyguardTests.java]:[lockscreen]:[5]:method_text:[ whether a FLAG_DISMISS_KEYGUARD activity on a secondary display dismisses the keyguard.      */    ])', 1), ('([6:/android/server/wm/MultiDisplayLockedKeyguardTests.java]:[lockscreen]:[6]:method_text:[AssertKeyguardGone();         mWmState.assertVisibility(DISMISS_KEYGUARD_ACTIVITY, true);     }     ])', 1), ('([6:/android/server/wm/MultiDisplayLockedKeyguardTests.java]:[lockscreen]:[6]:method_text:[EYGUARD_ACTIVITY, true);         mWmState.assertVisibility(SHOW_WHEN_LOCKED_ACTIVITY, true);     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java]:[getParentProfileInstance]:[1]:method_text:[ger.getKeyguardDisabledFeatures(                 ADMIN_RECEIVER_COMPONENT)).isEqualTo(0);     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyguardDisabledFeaturesTest.java]:[getParentProfileInstance]:[1]:method_text:[MIN_RECEIVER_COMPONENT,                 DevicePolicyManager.KEYGUARD_DISABLE_FEATURES_NONE);     } }])', 1), ('([5:/android/server/wm/SplitScreenTests.java]:[lockscreen]:[5]:method_text:[  }     }      /**      * Verify split screen mode visibility after stack resize occurs.      */    ])', 1), ('([6:/android/server/wm/ActivityVisibilityTests.java]:[lockscreen]:[6]:method_text:[ testTurnScreenOnActivity(lockScreenSession, activityClient, false /* useWindowFlags */);     }     ])', 1), ('([11:/android/server/wm/ActivityVisibilityTests.java]:[lockscreen]:[11]:method_text:[gs"" : ""APIs""),                 isDisplayOn(DEFAULT_DISPLAY));          activity.finish();     }     ])', 1), ('([7:/android/server/wm/ActivityVisibilityTests.java]:[lockscreen]:[7]:method_text:[ isDisplayOn(DEFAULT_DISPLAY));         assertSingleLaunch(TURN_SCREEN_ON_ATTR_ACTIVITY);     }     ])', 1), ('([5:/android/server/wm/ActivityVisibilityTests.java]:[lockscreen]:[5]:method_text:[layOn(DEFAULT_DISPLAY));         assertSingleLaunchAndStop(TURN_SCREEN_ON_ATTR_ACTIVITY);     }     ])', 1), ('([5:/android/server/wm/ActivityVisibilityTests.java]:[lockscreen]:[5]:method_text:[ayOn(DEFAULT_DISPLAY));         assertSingleLaunch(TURN_SCREEN_ON_SHOW_ON_LOCK_ACTIVITY);     }     ])', 1), ('([6:/android/server/wm/ActivityVisibilityTests.java]:[lockscreen]:[6]:method_text:[LT_DISPLAY));         assertSingleStartAndStop(TURN_SCREEN_ON_ATTR_REMOVE_ATTR_ACTIVITY);     }     ])', 1), ('([6:/android/server/wm/ActivityVisibilityTests.java]:[lockscreen]:[6]:method_text:[playOn(DEFAULT_DISPLAY));         assertSingleStart(TURN_SCREEN_ON_SINGLE_TASK_ACTIVITY);     }     ])', 1), ('([6:/android/server/wm/ActivityVisibilityTests.java]:[lockscreen]:[6]:method_text:[uld be stopped"");         assertFalse(""Display keeps off"", isDisplayOn(DEFAULT_DISPLAY));     }     ])', 1), ('([5:/android/server/wm/KeyguardTests.java]:[lockscreen]:[5]:method_text:[acker.close(lockScreenSession);         assertFalse(mKeyguardManager.isKeyguardLocked());     }     ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[dialogs from SHOW_WHEN_LOCKED activities are also visible if Keyguard is      * showing.      */    ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[ts whether multiple SHOW_WHEN_LOCKED activities are shown if the topmost is translucent.      */    ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[lso      * SHOW_WHEN_LOCKED, it should be able to resume next SHOW_WHEN_LOCKED activity.      */    ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[f we have a translucent SHOW_WHEN_LOCKED_ACTIVITY, the wallpaper should also be showing.      */    ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[e have a translucent SHOW_WHEN_LOCKED activity, the activity behind should not be shown.      */    ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[ertVisibility(TEST_ACTIVITY, false);         mWmState.assertKeyguardShowingAndOccluded();     }     ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[     /**      * Test that showWhenLocked activity is fullscreen when shown over keyguard      */    ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[nLocked(true) above a      * SHOW_WHEN_LOCKED activity is visible if Keyguard is locked.      */    ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[cked(false) above a SHOW_WHEN_LOCKED activity is invisible if      * Keyguard is locked.      */    ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[wWhenLocked above a      * SHOW_WHEN_LOCKED activity is visible if Keyguard is locked.      * */    ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[henLocked      * above a SHOW_WHEN_LOCKED activity is invisible if Keyguard is locked.      * */    ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[se);         mWmState.assertVisibility(NO_INHERIT_SHOW_WHEN_LOCKED_ATTR_ACTIVITY, false);     }     ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[ng FLAG_DISMISS_KEYGUARD activity      * becomes the top activity, it should be resumed.      */    ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[     }      /**      * Tests whether a FLAG_DISMISS_KEYGUARD activity occludes Keyguard.      */    ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[ty(DISMISS_KEYGUARD_ACTIVITY, true);         mWmState.assertKeyguardShowingAndOccluded();     }     ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[e().keyguardShowing);         assertOnDismissSucceeded(DISMISS_KEYGUARD_METHOD_ACTIVITY);     }     ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[ger.dismissKeyguardByMethod();         assertOnDismissError(BROADCAST_RECEIVER_ACTIVITY);     }     ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[N_SCREEN_ON_DISMISS_KEYGUARD_ACTIVITY);         assertTrue(isDisplayOn(DEFAULT_DISPLAY));     }     ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[ShowingAndOccluded();         mWmState.assertVisibility(SHOW_WHEN_LOCKED_ACTIVITY, true);     }     ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[miss the activity.      * Ensure that the activity is gone, and the keyguard is visible.      */    ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[PAPER);         assertNotNull(wallpaper);         assertTrue(wallpaper.isSurfaceShown());     }     ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[EEN_ON_ATTR_DISMISS_KEYGUARD_ACTIVITY);         assertTrue(isDisplayOn(DEFAULT_DISPLAY));     }     ])', 1), ('([5:/android/server/wm/KeyguardTests.java]:[lockscreen]:[5]:method_text:[ities();             assertSingleLaunchAndStop(SHOW_WHEN_LOCKED_ATTR_ACTIVITY);         }     }     ])', 1), ('([4:/android/server/wm/KeyguardTests.java]:[lockscreen]:[4]:method_text:[ForAllStoppedActivities();             assertSingleLaunchAndStop(TEST_ACTIVITY);         }      }  }])', 1), ('([1:/com/android/cts/deviceandprofileowner/ScreenCaptureDisabledTest.java]:[getParentProfileInstance]:[1]:method_text:[   assertFalse(parentDevicePolicyManager.getScreenCaptureDisabled(null /* any admin */));     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ScreenCaptureDisabledTest.java]:[getParentProfileInstance]:[1]:method_text:[    assertTrue(parentDevicePolicyManager.getScreenCaptureDisabled(null /* any admin */));     }     ])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[ation().getContext();         mDpm = context.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[getParentProfileInstance]:[1]:method_text:[not used in test.                     // UserManager.DISALLOW_DEBUGGING_FEATURES             );     ])', 1), ('([5:/android/appsecurity/cts/ResumeOnRebootHostTest.java]:[lockscreen]:[5]:method_text:[  public InstallMultiple() {             super(getDevice(), getBuild(), getAbi());         }     } }])', 1), ('([5:/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java]:[lockscreen]:[5]:method_text:[quence(                 ShowWhenLockedCallbackTrackingActivity.class, getLifecycleLog());     }     ])', 1), ('([2:/android/security/identity/cts/UserAuthTest.java]:[lockscreen]:[2]:method_text:[) {             throw new RuntimeException(""Error creating auth-bound key"", e);         }     }     ])', 1), ('([4:/android/server/wm/KeyguardInputTests.java]:[lockscreen]:[4]:method_text:[sertNoMoreEvents() {         KeyEvent event = mActivity.popKey();         assertNull(event);     } }])', 1), ('([6:/android/net/ipsec/ike/cts/IkeSessionParamsTest.java]:[DPC]:[6]:method_text:[);             }         }         assertEquals(EXPECTED_PCSCF_SERVERS, resultAddresses);     }     ])', 1), ('([4:/android/media/cts/DecoderTest.java]:[DPC]:[4]:method_text:[testTrackSelection(R.raw.mkv_avc_mp2);         Log.d(TAG, ""mkv_avc_mp2 finished!!!!!! "");     }     ])', 1), ('([1:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[vityInfo.name)) {                 return true;             }         }         return false;     } }])', 1), ('([1:/com/android/cts/deviceowner/DeviceOwnerProvisioningTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[d tearDown() throws Exception {         enableUninstalledApp();         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[.getTargetContext();         mDpm = mContext.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java]:[getParentProfileInstance]:[1]:method_text:[                 mDevicePolicyManager.getParentProfileInstance(ADMIN_RECEIVER_COMPONENT);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/PasswordComplexityTest.java]:[lockscreen]:[2]:method_text:[en) {             getDevice().uninstallPackage(PKG);         }          super.tearDown();     }     ])', 1), ('([1:/com/android/cts/devicepolicy/PasswordComplexityTest.java]:[lockscreen]:[1]:method_text:[EXITY_LEVEL_VALUE)                         .setStrings(""notCalledFromParent"", PKG).build());     } }])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[lockscreen]:[1]:method_text:[        changeUserCredential(TEST_PASSWORD, null, mProfileUserId);         lockProfile();     }     ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[lockscreen]:[1]:method_text:[_PKG, "".PasswordMinimumRestrictionsTest"",                 mProfileUserId);     }      @FlakyTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[lockscreen]:[1]:method_text:[erifyUserCredential(RESET_PASSWORD_TEST_DEFAULT_PASSWORD, mProfileUserId);     }      @FlakyTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[lockscreen]:[1]:method_text:[nified work challenge and the primary user clears      * the device lock.      */     @FlakyTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[lockscreen]:[1]:method_text:[    executeShellCommand(""input keyevent KEYCODE_WAKEUP"");         }     }      @LockSettingsTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[lockscreen]:[1]:method_text:[        verifyUnifiedPassword(false);     }      @FlakyTest     @LargeTest     @LockSettingsTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[lockscreen]:[1]:method_text:[_PASSWORD, mPrimaryUserId);         }     }      @FlakyTest     @LargeTest     @LockSettingsTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[lockscreen]:[1]:method_text:[   // end.             pressPowerButton();         }     }      @LargeTest     @LockSettingsTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[lockscreen]:[1]:method_text:[ng erroneously shown at the             // end.             pressPowerButton();         }     }     ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfilePasswordTest.java]:[lockscreen]:[1]:method_text:[            + ""lockNow(FLAG_SECURE_USER_DATA)"",                 TIMEOUT_USER_LOCKED_MILLIS);     } }])', 1)]"	""	""	""	""	""
