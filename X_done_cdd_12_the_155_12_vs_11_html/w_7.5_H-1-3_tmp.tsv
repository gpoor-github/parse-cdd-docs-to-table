"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"2.2.7.2  . Camera"	"7.5"	"H-1-3"	"7.5/H-1-3"	"07050000.720103"	"""[7.5/H-1-3] MUST support android.info.supportedHardwareLevel property as FULL or better for back primary and LIMITED or better for front primary camera.  | [7.5/H-1-3] MUST support android.info.supportedHardwareLevel property as FULL or better for both primary cameras. """	""	"camera"	"android.info.supportedHardwareLevel LIMITED MEDIA_PERFORMANCE_CLASS FULL"	"MEDIA_PERFORMANCE_CLASS"	""	""	""	"[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 11), ('android.hardware.camera2.cts.StillCaptureTest', 5), ('android.hardware.camera2.cts.BurstCaptureTest', 4), ('android.hardware.camera2.cts.RobustnessTest', 4), ('android.hardware.camera2.cts.CaptureRequestTest', 4), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 4), ('android.hardware.camera2.cts.CameraManagerTest', 4), ('android.hardware.camera2.cts.StaticMetadataTest', 4), ('android.hardware.camera2.cts.helpers.StaticMetadat', 3), ('android.hardware.camera2.cts.CameraDeviceTest', 3), ('android.hardware.camera2.cts.PerformanceTest', 3), ('android.hardware.camera2.cts.CameraTestUtils', 3), ('android.hardware.camera2.cts.SurfaceViewPreviewTest', 3), ('android.hardware.camera2.cts.AllocationTest', 3), ('android.hardware.camera2.cts.RecordingTest', 2), ('com.android.cts.verifier.camera.its.ItsService', 2), ('android.hardware.camera2.cts.CaptureResultTest', 2), ('android.hardware.camera2.cts.ImageReaderTest', 2), ('android.hardware.camera2.cts.rs.RawConverter', 1), ('android.hardware.camera2.cts.ReprocessCaptureTest', 1), ('com.android.cts.verifier.camera.orientation.CameraOrientationActivity', 1), ('android.hardware.camera2.cts.BurstCaptureRawTest', 1), ('android.hardware.cts.CameraTest', 1), ('com.android.cts.verifier.camera.intents.CameraIntentsActivity', 1), ('android.camera.cts.api31test.SPerfClassTest', 1), ('android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase', 1), ('com.android.cts.verifier.camera.bokeh.CameraBokehActivity', 1), ('android.hardware.camera2.cts.helpers.Camera2Focuser', 1), ('com.android.cts.verifier.camera.fov.PhotoCaptureActivity', 1), ('android.hardware.camera2.cts.rs.ScriptGraph', 1)]"	"[('close', 42), ('getWidth', 18), ('getHeight', 16), ('start', 16), ('setUp', 14), ('AtomicInteger', 14), ('getSurface', 12), ('floatValue', 10), ('getLooper', 10), ('Object', 9), ('capacity', 8), ('clear', 8), ('quitSafely', 7), ('run', 6), ('getOutputStream', 6), ('tearDown', 4), ('BlockingStateCallback', 4), ('closeCameraDevice', 4), ('take', 4), ('checkAndStartThread', 4), ('getState', 4), ('getStageIndex', 4), ('create', 3), ('getAeModeName', 3), ('getAfModeName', 3), ('getSimpleName', 3), ('build', 3), ('release', 3), ('getColumnCount', 2), ('getRowCount', 2), ('StringBuilder', 2), ('onCreate', 2), ('SerializerRunnable', 2), ('SocketRunnable', 2), ('getId', 2), ('onDestroy', 2), ('quit', 2), ('size', 2), ('getPhysicalCameraIds', 2), ('JSONObject', 2), ('hasArray', 2), ('array', 2), ('flush', 2), ('peek', 2), ('removeFirst', 2), ('accept', 2), ('getInputStream', 2), ('readLine', 2), ('getDefault', 2), ('stopSelf', 2), ('doGetProps', 2), ('doStartSensorEvents', 2), ('toString', 2), ('getAction', 2), ('updateSuccessState', 2), ('getPackageManager', 2), ('CaptureCallback', 2), ('cancelAutoFocus', 2), ('createRequestBuilder', 2), ('SparseIntArray', 1), ('getConfig', 1), ('getGainFactorCount', 1), ('hashCode', 1), ('getIntent', 1), ('CameraErrorCollector', 1), ('SizeComparator', 1), ('hasFocuser', 1), ('getExternalCacheDir', 1), ('getReportedFovDegrees', 1), ('getNumberOfCameras', 1), ('getHolder', 1), ('CameraIterable', 1), ('SizeIterable', 1), ('ResultIterable', 1), ('clearContext', 1), ('getSourceSize', 1), ('getSize', 1), ('getLaunchOptions', 1), ('LaunchOptions', 1), ('toRectF', 1), ('BlockingSessionCallback', 1), ('advanceInputWaiting', 1), ('execute', 1), ('stopCapture', 1), ('getStateWaiter', 1), ('getInputData', 1), ('getOutputAllocation', 1), ('getBytesSize', 1), ('getOutputData', 1), ('getCache', 1), ('Builder', 1), ('checkInput', 1)]"	"[('CtsCameraTestCases', 64), ('CtsCameraApi31TestCases', 1)]"	""	"android.hardware.camera2.cts.rs.ScriptGraph"	"checkInput"	"CtsCameraTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/StaticMetadata.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/SurfaceViewPreviewTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/RawConverter.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ReprocessCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureRawTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/api31test/src/android/camera/cts/api31test/SPerfClassTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/Camera2Focuser.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/rs/ScriptGraph.java', 1)]"	"[('(2,FULL,/android/hardware/camera2/cts/rs/RawConverter.java)', 1), ('(4,FULL,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(6,LIMITED,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(27,FULL,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(7,android.info.supportedHardwareLevel,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(18,LIMITED,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(38,FULL,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(7,FULL,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 1), ('(7,LIMITED,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(1,FULL,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(5,LIMITED,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(8,FULL,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(1,FULL,/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java)', 1), ('(5,LIMITED,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(9,FULL,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(2,FULL,/android/hardware/camera2/cts/BurstCaptureRawTest.java)', 1), ('(1,android.info.supportedHardwareLevel,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(24,LIMITED,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(86,FULL,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(2,MEDIA_PERFORMANCE_CLASS,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(4,FULL,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(5,FULL,/android/hardware/cts/CameraTest.java)', 1), ('(3,FULL,/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java)', 1), ('(1,LIMITED,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(2,FULL,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(5,FULL,/android/camera/cts/api31test/SPerfClassTest.java)', 1), ('(1,LIMITED,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(3,FULL,/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java)', 1), ('(6,LIMITED,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 1), ('(1,FULL,/android/hardware/camera2/cts/LogicalCameraDeviceTest.java)', 1), ('(2,LIMITED,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(15,FULL,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(10,FULL,/android/hardware/camera2/cts/helpers/Camera2Focuser.java)', 1), ('(6,FULL,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(2,LIMITED,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(2,MEDIA_PERFORMANCE_CLASS,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(5,FULL,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(2,LIMITED,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(2,FULL,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(4,LIMITED,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(1,FULL,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(1,LIMITED,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(8,FULL,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(19,FULL,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(1,FULL,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(23,FULL,/android/hardware/camera2/cts/AllocationTest.java)', 1), ('(1,FULL,/android/hardware/camera2/cts/rs/ScriptGraph.java)', 1)]"	"[('([2:/android/hardware/camera2/cts/rs/RawConverter.java]:[FULL]:[2]:method_text:[ D50_XYZ[1], 0, 0, 0, D50_XYZ[2]};        multiply(m2, intermediate, /*out*/forwardMatrix);    }}])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[FULL]:[1]:method_text:[ol.     * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.     */   ])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[FULL]:[1]:method_text:[is test uses STILL_CAPTURE intent, and exercises path where     * enableZsl is enabled.     */   ])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[FULL]:[1]:method_text:[de.     * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.     */   ])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[FULL]:[1]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([3:/android/hardware/camera2/cts/RobustnessTest.java]:[LIMITED]:[3]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 1), ('([3:/android/hardware/camera2/cts/RobustnessTest.java]:[LIMITED]:[3]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([4:/android/hardware/camera2/cts/RobustnessTest.java]:[FULL]:[4]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 1), ('([23:/android/hardware/camera2/cts/RobustnessTest.java]:[FULL]:[23]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([7:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[android.info.supportedHardwareLevel]:[7]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([18:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[LIMITED]:[18]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([38:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[FULL]:[38]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([7:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[FULL]:[7]:method_text:[   public TotalCaptureResult getTotalCaptureResult() {            return mResult;        }    }}])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[LIMITED]:[1]:method_text:[     */    }    /**     * Test invalid capture (e.g. null or empty capture request).     */   ])', 1), ('([6:/android/hardware/camera2/cts/CameraDeviceTest.java]:[LIMITED]:[6]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[FULL]:[1]:method_text:[     */    }    /**     * Test invalid capture (e.g. null or empty capture request).     */   ])', 1), ('([5:/android/hardware/camera2/cts/RecordingTest.java]:[LIMITED]:[5]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([8:/android/hardware/camera2/cts/RecordingTest.java]:[FULL]:[8]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([1:/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java]:[FULL]:[1]:method_text:[ation) {            mCameraId = cameraId;            mOrientation = orientation;        }    }}])', 1), ('([5:/android/hardware/camera2/cts/CaptureRequestTest.java]:[LIMITED]:[5]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[FULL]:[1]:method_text:[        super.tearDown();    }    /**     * Test CaptureRequest settings parcelling.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[FULL]:[1]:method_text:[f given various initial and final     * AE_CONTROL modes for repeating CaptureRequests.     */   ])', 1), ('([7:/android/hardware/camera2/cts/CaptureRequestTest.java]:[FULL]:[7]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;            }        }    }}])', 1), ('([2:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[FULL]:[2]:method_text:[            }            } finally {                closeDevice();            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[android.info.supportedHardwareLevel]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([2:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[LIMITED]:[2]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([3:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[LIMITED]:[3]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([9:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[LIMITED]:[9]:method_text:[     }    }    /**     * Test values for static metadata used by the RAW capability.     */   ])', 1), ('([10:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[LIMITED]:[10]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([4:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[FULL]:[4]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([56:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[FULL]:[56]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([12:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[FULL]:[12]:method_text:[     }    }    /**     * Test values for static metadata used by the RAW capability.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[FULL]:[1]:method_text:[pported yet.        }    }    /**     * Test values for the available session keys.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[FULL]:[2]:method_text:[wbLock));            }        }    }    /**     * Check reprocessing capabilities.     */   ])', 1), ('([11:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[FULL]:[11]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([2:/com/android/cts/verifier/camera/its/ItsService.java]:[MEDIA_PERFORMANCE_CLASS]:[2]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([4:/com/android/cts/verifier/camera/its/ItsService.java]:[FULL]:[4]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([5:/android/hardware/cts/CameraTest.java]:[FULL]:[5]:method_text:[= PREVIEW_CALLBACK_RECEIVED;            mPreviewDone.open();        }    }    @UiThreadTest   ])', 1), ('([3:/com/android/cts/verifier/camera/intents/CameraIntentsActivity.java]:[FULL]:[3]:method_text:[sButtonGoesToNextStage() {        findViewById(R.id.pass_button).setOnClickListener(this);    }}])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[LIMITED]:[1]:method_text:[e time     * a reprocess request is issued to the time the reprocess image is returned.     */   ])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[FULL]:[1]:method_text:[ sending     * out the capture request and getting the full capture result.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[FULL]:[1]:method_text:[, and the frame duration, which is the timestamp     * gap between results.     * </p>     */   ])', 1), ('([5:/android/camera/cts/api31test/SPerfClassTest.java]:[FULL]:[5]:method_text:[ra S Performance class requirement for JPEG sizes.     */    @CddTest(requirement=""7.5/H-1-8"")   ])', 1), ('([1:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[LIMITED]:[1]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([3:/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java]:[FULL]:[3]:method_text:[ton = (ImageButton) findViewById(R.id.pass_button);        pass_button.setEnabled(enabled);    }}])', 1), ('([2:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[LIMITED]:[2]:method_text:[stream requests work when both logical stream     * and physical stream are configured.     */   ])', 1), ('([2:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[LIMITED]:[2]:method_text:[    * Test for making sure that multiple requests for physical cameras work as expected.     */   ])', 1), ('([2:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[LIMITED]:[2]:method_text:[}    }    /**     * Tests invalid/incorrect multiple physical capture request cases.     */   ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[FULL]:[1]:method_text:[camera, the activePhysicalId is valid, and is the same     * for all capture templates.     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[LIMITED]:[2]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[FULL]:[1]:method_text:[ AE/AF can settle.     * - Capturing with a request targeting all three output streams.     */   ])', 1), ('([3:/android/hardware/camera2/cts/StillCaptureTest.java]:[FULL]:[3]:method_text:[ AE/AF can settle.     * - Capturing with a request targeting all three output streams.     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[FULL]:[2]:method_text:[e scan is triggered to make sure the AF     * converges in reasonable time.     * </p>     */   ])', 1), ('([9:/android/hardware/camera2/cts/StillCaptureTest.java]:[FULL]:[9]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([10:/android/hardware/camera2/cts/helpers/Camera2Focuser.java]:[FULL]:[10]:method_text:[          }                mAutoFocus.onCaptureCompleted(result);            }        };    }}])', 1), ('([1:/android/hardware/camera2/cts/CameraManagerTest.java]:[FULL]:[1]:method_text:[fail(""Invalid CameraAccessException code: "" + reason);        return -1; // unreachable    }   ])', 1), ('([3:/android/hardware/camera2/cts/CameraManagerTest.java]:[FULL]:[3]:method_text:[pening the same device multiple times and make sure the right     * error state is set.     */   ])', 1), (""([1:/android/hardware/camera2/cts/CameraManagerTest.java]:[FULL]:[1]:method_text:[effect, and unregistering     * a listener that isn't registered should have no effect.     */   ])"", 1), ('([1:/android/hardware/camera2/cts/CameraManagerTest.java]:[FULL]:[1]:method_text:[  hardwareLevel != CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY);        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/CameraTestUtils.java]:[LIMITED]:[2]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([2:/android/hardware/camera2/cts/CameraTestUtils.java]:[MEDIA_PERFORMANCE_CLASS]:[2]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([5:/android/hardware/camera2/cts/CameraTestUtils.java]:[FULL]:[5]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([2:/android/hardware/camera2/cts/CaptureResultTest.java]:[LIMITED]:[2]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([2:/android/hardware/camera2/cts/CaptureResultTest.java]:[FULL]:[2]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([2:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[LIMITED]:[2]:method_text:[rent native internals, and multiple Surfaces pointing to the same actual consumer object     */   ])', 1), ('([2:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[LIMITED]:[2]:method_text:[     isA(CaptureRequest.class),                                isA(CaptureFailure.class));    }}])', 1), ('([1:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[FULL]:[1]:method_text:[     isA(CaptureRequest.class),                                isA(CaptureFailure.class));    }}])', 1), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[LIMITED]:[1]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StaticMetadataTest.java]:[FULL]:[1]:method_text:[  /**     * Test the available capability for different hardware support level devices.     */   ])', 1), ('([5:/android/hardware/camera2/cts/StaticMetadataTest.java]:[FULL]:[5]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([2:/android/hardware/camera2/cts/StaticMetadataTest.java]:[FULL]:[2]:method_text:[   }    /**     * Test advertised capability does match available keys and vice versa     */   ])', 1), ('([18:/android/hardware/camera2/cts/ImageReaderTest.java]:[FULL]:[18]:method_text:[    }    /**     * Test that images captured after discarding free buffers are valid.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[FULL]:[1]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([1:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[FULL]:[1]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([14:/android/hardware/camera2/cts/AllocationTest.java]:[FULL]:[14]:method_text:[alSizeOut);        if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);    }   ])', 1), ('([1:/android/hardware/camera2/cts/AllocationTest.java]:[FULL]:[1]:method_text:[       });    }    /**     * Test that the android.sensitivity.parameter is applied.     */   ])', 1), ('([8:/android/hardware/camera2/cts/AllocationTest.java]:[FULL]:[8]:method_text:[            // TODO: Make a Configure decorator or some such for configureOutputs        }    }}])', 1), ('([1:/android/hardware/camera2/cts/rs/ScriptGraph.java]:[FULL]:[1]:method_text:[      try {            close();        } finally {            super.finalize();        }    }}])', 1)]"	""	""	"[('FULL', 52), ('LIMITED', 22), ('android.info.supportedHardwareLevel', 2), ('MEDIA_PERFORMANCE_CLASS', 2)]"	"[('[android.hardware.camera2.cts.helpers.StaticMetadat getCharacteristics None]', 3), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraPerfClassCharacteristics CtsCameraTestCases]', 3), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 3), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RobustnessTest testVerifyReprocessMandatoryOutputCombinationTables CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CameraDeviceTest testCameraDeviceAbort CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testKeys CtsCameraTestCases]', 2), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testDeferredSurfaces CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testJpegBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessRequestKeys CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.orientation.CameraOrientationActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashControl CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureRawTest testTimestamp CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStaticRawCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStaticBurstCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testPreviewPictureSizesCombination CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.intents.CameraIntentsActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.PerformanceTest testMultipleCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testCameraLaunch CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testSingleCapture CtsCameraTestCases]', 1), ('[android.camera.cts.api31test.SPerfClassTest getCameraIdList CtsCameraApi31TestCases]', 1), ('[android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase isInstantApp CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.bokeh.CameraBokehActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testBasicPhysicalStreaming CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testBasicLogicalPhysicalStreamCombination CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testBasicPhysicalRequests CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.LogicalCameraDeviceTest testLogicalCameraZoomSwitch CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testBasicRawZslCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFullRawCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFullRawZSLCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.helpers.Camera2Focuser createCaptureListener None]', 1), ('[android.hardware.camera2.cts.CameraManagerTest NoopCameraListener CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerOpenAllCameras CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerOpenCameraTwice CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testNoLegacyOnQ CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testPreparePerformance CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testCapabilities CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testHwSupportedLevel CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testMaxNumOutputStreams CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testAllOutputYUVResolutions CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 1), ('[android.hardware.camera2.cts.AllocationTest testBlackWhite CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.AllocationTest testParamSensitivity CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.rs.ScriptGraph isInputFromSurface CtsCameraTestCases]', 1)]"	""	""	""	""	""	""	""	""	""
