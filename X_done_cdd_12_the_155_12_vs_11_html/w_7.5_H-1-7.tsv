"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"2.2.7.2  . Camera"	"7.5"	"H-1-7"	"7.5/H-1-7"	"07050000.720107"	"""[7.5/H-1-7] For apps targeting API level 31 or higher, the camera device MUST NOT support JPEG capture resolutions smaller than 1080p for both primary cameras. """	""	"camera"	"JPEG"	"MEDIA_PERFORMANCE_CLASS 1080"	""	""	""	"[('android.hardware.camera2.cts.ReprocessCaptureTest', 10), ('android.hardware.camera2.cts.OfflineSessionTest', 8), ('android.provider.cts.media.MediaStore_Images_MediaTest', 6), ('android.hardware.camera2.cts.RobustnessTest', 4), ('android.graphics.cts.AImageDecoderTest', 4), ('android.hardware.camera2.cts.BurstCaptureTest', 3), ('android.hardware.camera2.cts.ZoomCaptureTest', 2), ('android.provider.cts.media.MediaStoreNotificationTest', 2), ('android.media.cts.CameraProfileTest', 2), ('android.jobscheduler.cts.TriggerContentTest', 1), ('android.hardware.camera2.cts.helpers.StaticMetadat', 1), ('android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase', 1), ('android.hardware.camera2.cts.CaptureResultTest', 1), ('com.android.cts.verifier.camera.its.ItsService', 1), ('com.android.cts.deviceinfo.CameraDeviceInfo', 1), ('android.hardware.camera2.cts.CameraTestUtils', 1)]"	"[('startGroup', 19), ('endGroup', 19), ('close', 15), ('getWidth', 12), ('getHeight', 12), ('endArray', 11), ('start', 8), ('AtomicInteger', 7), ('setUp', 5), ('getLooper', 5), ('tearDown', 4), ('Object', 4), ('capacity', 4), ('clear', 4), ('getLower', 4), ('getUpper', 4), ('getRawType', 4), ('getActualTypeArguments', 4), ('getSurface', 4), ('getContentResolver', 3), ('build', 3), ('quitSafely', 3), ('run', 3), ('getOutputStream', 3), ('printStackTrace', 3), ('getAssetManager', 3), ('myPid', 2), ('toString', 2), ('BlockingStateCallback', 2), ('closeCameraDevice', 2), ('take', 2), ('checkAndStartThread', 2), ('getState', 2), ('getMessage', 2), ('getOutputFormats', 2), ('getInputFormats', 2), ('getPhysicalCameraId', 2), ('getName', 2), ('getFd', 2), ('getTargetContext', 2), ('hashCode', 1), ('getPathSegments', 1), ('getPath', 1), ('getScannedPath', 1), ('getScannedUri', 1), ('countDown', 1), ('getContext', 1), ('delete', 1), ('makePhotosJobInfo', 1), ('getAeModeName', 1), ('getAfModeName', 1), ('CameraErrorCollector', 1), ('getPackageManager', 1), ('getSimpleName', 1), ('onCreate', 1), ('SerializerRunnable', 1), ('SocketRunnable', 1), ('getId', 1), ('onDestroy', 1), ('quit', 1), ('size', 1), ('getPhysicalCameraIds', 1), ('JSONObject', 1), ('hasArray', 1), ('array', 1), ('flush', 1), ('peek', 1), ('removeFirst', 1), ('accept', 1), ('getInputStream', 1), ('readLine', 1), ('getDefault', 1), ('stopSelf', 1), ('doGetProps', 1), ('doStartSensorEvents', 1), ('getNumerator', 1), ('getDenominator', 1), ('getHighSpeedVideoSizes', 1), ('getGenericComponentType', 1), ('getColorSpace', 1), ('recycle', 1), ('getFilesDir', 1), ('mkdirs', 1), ('createNewFile', 1), ('release', 1), ('data', 1), ('getSharedVolumeNames', 1)]"	"[('CtsCameraTestCases', 29), ('CtsProviderTestCases', 8), ('CtsGraphicsTestCases', 4), ('CtsMediaTestCases', 2), ('CtsJobSchedulerTestCases', 1)]"	""	"android.hardware.camera2.cts.SurfaceViewPreviewTest"	"toString"	"CtsCameraTestCases"	"[('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraTest.java', 17), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ReprocessCaptureTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionSessionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java', 3), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/api31test/src/android/camera/cts/api31test/SPerfClassTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/CameraTestUtils.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeImageReaderTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/utils/src/android/hardware/camera2/cts/helpers/StaticMetadata.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageWriterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/Camera_SizeTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/SurfaceViewPreviewTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/formats/CameraFormatsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/FastBasicsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraPerformanceTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/video/CameraVideoActivity.java', 1)]"	"[('(19,JPEG,/android/hardware/camera2/cts/StaticMetadataTest.java)', 1), ('(9,JPEG,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(4,1080,/android/hardware/camera2/cts/helpers/StaticMetadata.java)', 1), ('(22,JPEG,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(2,1080,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(4,JPEG,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(73,JPEG,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(1,1080,/android/hardware/camera2/cts/StillCaptureTest.java)', 1), ('(2,JPEG,/android/hardware/camera2/cts/ImageWriterTest.java)', 1), ('(1,1080,/android/hardware/camera2/cts/ImageWriterTest.java)', 1), ('(104,JPEG,/android/hardware/cts/CameraTest.java)', 1), ('(3,1080,/android/hardware/cts/CameraTest.java)', 1), ('(17,JPEG,/android/hardware/camera2/cts/CameraExtensionSessionTest.java)', 1), ('(6,JPEG,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(1,1080,/android/hardware/camera2/cts/BurstCaptureTest.java)', 1), ('(89,JPEG,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(1,1080,/android/hardware/camera2/cts/ImageReaderTest.java)', 1), ('(9,JPEG,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(4,JPEG,/com/android/cts/verifier/camera/formats/CameraFormatsActivity.java)', 1), ('(6,JPEG,/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java)', 1), ('(119,JPEG,/android/hardware/camera2/cts/DngCreatorTest.java)', 1), ('(30,JPEG,/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java)', 1), ('(1,1080,/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java)', 1), ('(16,JPEG,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(2,MEDIA_PERFORMANCE_CLASS,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(4,1080,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(2,JPEG,/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java)', 1), ('(65,JPEG,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(3,1080,/android/hardware/camera2/cts/RobustnessTest.java)', 1), ('(17,JPEG,/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java)', 1), ('(1,1080,/android/hardware/camera2/cts/HeifWriterTest.java)', 1), ('(27,JPEG,/android/hardware/camera2/cts/CaptureResultTest.java)', 1), ('(8,JPEG,/android/hardware/camera2/cts/FastBasicsTest.java)', 1), ('(32,JPEG,/android/camera/cts/api31test/SPerfClassTest.java)', 1), ('(8,1080,/android/camera/cts/api31test/SPerfClassTest.java)', 1), ('(33,JPEG,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 1), ('(1,1080,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 1), ('(97,JPEG,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(5,1080,/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java)', 1), ('(1,JPEG,/android/hardware/cts/CameraPerformanceTestHelper.java)', 1), ('(13,JPEG,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(106,JPEG,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(2,MEDIA_PERFORMANCE_CLASS,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(3,1080,/android/hardware/camera2/cts/CameraTestUtils.java)', 1), ('(6,JPEG,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(3,1080,/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java)', 1), ('(1,JPEG,/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java)', 1), ('(29,JPEG,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(11,1080,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(8,JPEG,/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java)', 1), ('(41,JPEG,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(1,1080,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(8,JPEG,/android/hardware/camera2/cts/NativeImageReaderTest.java)', 1), ('(4,1080,/com/android/cts/verifier/camera/video/CameraVideoActivity.java)', 1), ('(5,JPEG,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1), ('(1,1080,/android/hardware/camera2/cts/SurfaceViewPreviewTest.java)', 1)]"	"[('([14:/android/hardware/camera2/cts/StaticMetadataTest.java]:[JPEG]:[14]:method_text:[ces.        }    }    /**     * Test max number of output stream reported by device     */   ])', 1), ('([5:/android/hardware/camera2/cts/StaticMetadataTest.java]:[JPEG]:[5]:method_text:[eraId, capabilityName));            }        }    }    /**     * Test lens facing.     */   ])', 1), ('([9:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[JPEG]:[9]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([4:/android/hardware/camera2/cts/helpers/StaticMetadata.java]:[1080]:[4]:method_text:[             throw new UnsupportedOperationException(""Unhandled level "" + mLevel);        }    }}])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[ied about the     * remaining offline requests via the registered offline callback.</p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[3]:method_text:[cks behave as expected     * in case the camera supports offline depth jpeg output.</p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[7]:method_text:[callbacks behave as expected     * in case the camera supports offline HEIC output.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[ssion and receive     * all corresponding callbacks according to the documentation.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[nitialize a new regular capture session     * in parallel with the offline session.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[eive the expected sequence abort callbacks when switching     * to offline session.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[1]:method_text:[re correctly advertised and switching to offline     * mode is failing as expected.</p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/OfflineSessionTest.java]:[JPEG]:[7]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[1080]:[1]:method_text:[* surfaces not registered with camera or surfaces used in     * repeating requests.</p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/OfflineSessionTest.java]:[1080]:[1]:method_text:[))                fail(""Remote offline session test activity is still running"");        }    }}])', 1), ('([1:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[JPEG]:[1]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([3:/android/hardware/camera2/cts/ZoomCaptureTest.java]:[JPEG]:[3]:method_text:[t.JPEG);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[1]:method_text:[  super.tearDown();    }    /**     * Test JPEG capture exif fields for each camera.     */   ])', 1), ('([5:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[5]:method_text:[        }        }    }    /**     * Test HEIC capture exif fields for each camera.     */   ])', 1), ('([10:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[10]:method_text:[peg. The AWB and AE are in auto modes. AF mode     * is CONTINUOUS_PICTURE.     * </p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[3]:method_text:[   * is CONTINUOUS_PICTURE. Same as testTakePicture, but with enableZSL set.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[1]:method_text:[ AE/AF can settle.     * - Capturing with a request targeting all three output streams.     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[2]:method_text:[ AE/AF can settle.     * - Capturing with a request targeting all three output streams.     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[1]:method_text:[e scan is triggered to make sure the AF     * converges in reasonable time.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[1]:method_text:[     * result validation is covered by {@link #stillExifTestByCamera} test.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[2]:method_text:[ages produced by the largest resolution camera sensor on     * the devices.     * </p>     */   ])', 1), ('([47:/android/hardware/camera2/cts/StillCaptureTest.java]:[JPEG]:[47]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([1:/android/hardware/camera2/cts/StillCaptureTest.java]:[1080]:[1]:method_text:[sRegionsSupported && mStaticInfo.hasFocuser();        }        return isRegionsSupported;    }}])', 1), ('([2:/android/hardware/camera2/cts/ImageWriterTest.java]:[JPEG]:[2]:method_text:[ce(), 1 /*maxImages*/);            writer.close();            reader.close();        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ImageWriterTest.java]:[1080]:[1]:method_text:[on e) {            // Expected        } finally {            writer.close();        }    }   ])', 1), ('([15:/android/hardware/cts/CameraTest.java]:[JPEG]:[15]:method_text:[ture and verify all the callback     * functions are called properly.     */    @UiThreadTest   ])', 1), ('([7:/android/hardware/cts/CameraTest.java]:[JPEG]:[7]:method_text:[ MP)"",                    realArea >= videoSnapshotMinArea);        }    }    @UiThreadTest   ])', 1), ('([14:/android/hardware/cts/CameraTest.java]:[JPEG]:[14]:method_text:[       || (format == ImageFormat.JPEG) || (format == ImageFormat.YUY2);    }    @UiThreadTest   ])', 1), ('([17:/android/hardware/cts/CameraTest.java]:[JPEG]:[17]:method_text:[ld be decodable"",                BitmapFactory.decodeFile(mJpegPath));    }    @UiThreadTest   ])', 1), ('([24:/android/hardware/cts/CameraTest.java]:[JPEG]:[24]:method_text:[assertNull(exif.getAttribute(ExifInterface.TAG_GPS_PROCESSING_METHOD));    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[JPEG]:[1]:method_text:[    waitForSnapshotDone();        }        terminateMessageLooper();    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[JPEG]:[1]:method_text:[             distances[Parameters.FOCUS_DISTANCE_FAR_INDEX]);        }    }    @UiThreadTest   ])', 1), ('([5:/android/hardware/cts/CameraTest.java]:[JPEG]:[5]:method_text:[= PREVIEW_CALLBACK_RECEIVED;            mPreviewDone.open();        }    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[JPEG]:[1]:method_text:[    }    }    // Apps should be able to call startPreview in jpeg callback.    @UiThreadTest   ])', 1), ('([7:/android/hardware/cts/CameraTest.java]:[JPEG]:[7]:method_text:[xception e) {            }            mSnapshotDone.open();        }    }    @UiThreadTest   ])', 1), ('([2:/android/hardware/cts/CameraTest.java]:[JPEG]:[2]:method_text:[{            recorder.release();            mCamera.lock();        }    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[JPEG]:[1]:method_text:[            break;        }        mCamera.setParameters(parameters);    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[JPEG]:[1]:method_text:[(face.id != faces[i + 1].id);                }            }        }    }    @UiThreadTest   ])', 1), ('([2:/android/hardware/cts/CameraTest.java]:[JPEG]:[2]:method_text:[     }            mCamera.stopPreview();            terminateMessageLooper();        }    }   ])', 1), ('([6:/android/hardware/cts/CameraTest.java]:[JPEG]:[6]:method_text:[one.close();        }        mCamera.stopPreview();        terminateMessageLooper();    }   ])', 1), ('([2:/android/hardware/cts/CameraTest.java]:[1080]:[2]:method_text:[= PREVIEW_CALLBACK_RECEIVED;            mPreviewDone.open();        }    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[1080]:[1]:method_text:[     }            mCamera.stopPreview();            terminateMessageLooper();        }    }   ])', 1), ('([8:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[JPEG]:[8]:method_text:[           }            }        }    }    // Verify concurrent extension sessions behavior   ])', 1), ('([8:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[JPEG]:[8]:method_text:[ally increasing timestamps!"");            }            return mLastTimestamp;        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionSessionTest.java]:[JPEG]:[1]:method_text:[y {                    mTestRule.closeDevice(id);                }            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[JPEG]:[1]:method_text:[is test uses STILL_CAPTURE intent, and exercises path where     * enableZsl is enabled.     */   ])', 1), ('([4:/android/hardware/camera2/cts/BurstCaptureTest.java]:[JPEG]:[4]:method_text:[de.     * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.     */   ])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[JPEG]:[1]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([1:/android/hardware/camera2/cts/BurstCaptureTest.java]:[1080]:[1]:method_text:[ameDuration/1e6,                        limit95FrameDuration/1e6));            }        }    }}])', 1), ('([5:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[5]:method_text:[ }    @Override    public void tearDown() throws Exception {        super.tearDown();    }   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[1]:method_text:[/ true);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[3]:method_text:[/false);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[3]:method_text:[*/true);            } finally {                closeDevice(id);            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[1]:method_text:[sing ImageReader.     *     * <p>Both stream formats are mandatory for Camera2 API</p>     */   ])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[4]:method_text:[ge flag argument.     *     * <p>Both stream formats are mandatory for Camera2 API</p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[3]:method_text:[* Test two image stream (YUV420_888 and RAW_SENSOR) capture by using ImageReader.     *     */   ])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[1]:method_text:[EG outputs for the same frame match for each YUV     * resolution and format supported.     */   ])', 1), ('([66:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[66]:method_text:[    }    /**     * Test that images captured after discarding free buffers are valid.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ImageReaderTest.java]:[JPEG]:[2]:method_text:[.     */    private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer);}])', 1), ('([1:/android/hardware/camera2/cts/ImageReaderTest.java]:[1080]:[1]:method_text:[    }    /**     * Test that images captured after discarding free buffers are valid.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[JPEG]:[1]:method_text:[           mSession.close();        }    }    /**     * Test session configuration.     */   ])', 1), ('([8:/android/hardware/camera2/cts/CameraDeviceTest.java]:[JPEG]:[8]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([4:/com/android/cts/verifier/camera/formats/CameraFormatsActivity.java]:[JPEG]:[4]:method_text:[    uIndex += 4;                    vIndex += 4;                }            }        }    }}])', 1), ('([2:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[JPEG]:[2]:method_text:[er mMultiResolutionImageReader;    private SimpleMultiResolutionImageReaderListener mListener;   ])', 1), ('([2:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[JPEG]:[2]:method_text:[ {        testMultiResolutionImageReaderForFormat(ImageFormat.JPEG, /*repeating*/false);    }   ])', 1), ('([2:/android/hardware/camera2/cts/MultiResolutionImageReaderTest.java]:[JPEG]:[2]:method_text:[n {        testMultiResolutionImageReaderForFormat(ImageFormat.JPEG, /*repeating*/true);    }   ])', 1), ('([3:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[3]:method_text:[captured for the first reported camera device to be saved to an output file.     * </p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[7]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([17:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[17]:method_text:[s test     * using:     * adb shell setprop log.tag.DngCreatorTest VERBOSE     * </p>     */   ])', 1), ('([7:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[7]:method_text:[  * Test basic DNG creation, ensure that the DNG image can be rendered by BitmapFactory.     */   ])', 1), ('([85:/android/hardware/camera2/cts/DngCreatorTest.java]:[JPEG]:[85]:method_text:[ printed to logcat.     */    private static native boolean validateDngNative(byte[] dngBuffer);}])', 1), ('([30:/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java]:[JPEG]:[30]:method_text:[ton = (ImageButton) findViewById(R.id.pass_button);        pass_button.setEnabled(enabled);    }}])', 1), ('([1:/com/android/cts/verifier/camera/bokeh/CameraBokehActivity.java]:[1080]:[1]:method_text:[ton = (ImageButton) findViewById(R.id.pass_button);        pass_button.setEnabled(enabled);    }}])', 1), ('([16:/com/android/cts/verifier/camera/its/ItsService.java]:[JPEG]:[16]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([2:/com/android/cts/verifier/camera/its/ItsService.java]:[MEDIA_PERFORMANCE_CLASS]:[2]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([4:/com/android/cts/verifier/camera/its/ItsService.java]:[1080]:[4]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java]:[JPEG]:[1]:method_text:[ySupportedSizes(extensionChars, id, extension, ImageFormat.JPEG);            }        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/CameraExtensionCharacteristicsTest.java]:[JPEG]:[1]:method_text:[< latencyRange.getUpper()));                    }                }            }        }    }}])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[JPEG]:[2]:method_text:[nput/output combinations for each hardware     * level and capability work as expected.     */   ])', 1), ('([4:/android/hardware/camera2/cts/RobustnessTest.java]:[JPEG]:[4]:method_text:[  if (inputWriter != null) {                inputWriter.close();            }        }    }   ])', 1), ('([13:/android/hardware/camera2/cts/RobustnessTest.java]:[JPEG]:[13]:method_text:[processable mandatory stream combinations are     * present and advertised accordingly.     */   ])', 1), ('([46:/android/hardware/camera2/cts/RobustnessTest.java]:[JPEG]:[46]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([3:/android/hardware/camera2/cts/RobustnessTest.java]:[1080]:[3]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());        }        return PREVIEW_SIZE_BOUND;    }}])', 1), ('([4:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[JPEG]:[4]:method_text:[   }    }    /**     * Test YUV_420_888 -> YUV_420_888 multi-resolution reprocessing     */   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[;        }    }    /**     * Test YUV_420_888 -> JPEG multi-resolution reprocessing     */   ])', 1), ('([2:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[JPEG]:[2]:method_text:[        }    }    /**     * Test OPAQUE -> YUV_420_888 multi-resolution reprocessing     */   ])', 1), ('([1:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[_888);        }    }    /**     * Test OPAQUE -> JPEG multi-resolution reprocessing     */   ])', 1), ('([3:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[JPEG]:[3]:method_text:[ng sure the mandatory stream combinations work for multi-resolution     * reprocessing.     */   ])', 1), ('([6:/android/hardware/camera2/cts/MultiResolutionReprocessCaptureTest.java]:[JPEG]:[6]:method_text:[     }        public Size getExpectedSize() {            return mExpectedSize;        }    }}])', 1), ('([1:/android/hardware/camera2/cts/HeifWriterTest.java]:[1080]:[1]:method_text:[           }            // TODO: add more key validations.        }        return result;    }}])', 1), ('([27:/android/hardware/camera2/cts/CaptureResultTest.java]:[JPEG]:[27]:method_text:[* End generated code     *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/}])', 1), ('([8:/android/hardware/camera2/cts/FastBasicsTest.java]:[JPEG]:[8]:method_text:[ true;                mPictureSignal.notifyAll();            }        }    }    @Presubmit   ])', 1), ('([30:/android/camera/cts/api31test/SPerfClassTest.java]:[JPEG]:[30]:method_text:[ra S Performance class requirement for JPEG sizes.     */    @CddTest(requirement=""7.5/H-1-8"")   ])', 1), ('([2:/android/camera/cts/api31test/SPerfClassTest.java]:[JPEG]:[2]:method_text:[meraIds.length; i++) {            testSPerfClassJpegSizesByCamera(mCameraIds[i]);        }    }}])', 1), ('([8:/android/camera/cts/api31test/SPerfClassTest.java]:[1080]:[8]:method_text:[ra S Performance class requirement for JPEG sizes.     */    @CddTest(requirement=""7.5/H-1-8"")   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[KEYS,    }    /**     * Test YUV_420_888 -> YUV_420_888 with maximal supported sizes     */   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[);        }    }    /**     * Test YUV_420_888 -> JPEG with maximal supported sizes     */   ])', 1), ('([3:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[3]:method_text:[);        }    }    /**     * Test YUV_420_888 -> HEIC with maximal supported sizes     */   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[0_888);        }    }    /**     * Test OPAQUE -> JPEG with maximal supported sizes     */   ])', 1), ('([3:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[3]:method_text:[.JPEG);        }    }    /**     * Test OPAQUE -> HEIC with maximal supported sizes     */   ])', 1), ('([2:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[2]:method_text:[ter.queueInputBuffer may become     * stuck due to stale buffers from previous session.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[2]:method_text:[      }    }    /**     * Test burst reprocessing captures with and without preview.     */   ])', 1), (""([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[1]:method_text:[put's exif data for the largest input and output sizes for each     * supported format.     */   ])"", 1), ('([4:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[4]:method_text:[         }            } finally {                closeDevice();            }        }    }   ])', 1), ('([15:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[JPEG]:[15]:method_text:[   public TotalCaptureResult getTotalCaptureResult() {            return mResult;        }    }}])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[1080]:[1]:method_text:[   public TotalCaptureResult getTotalCaptureResult() {            return mResult;        }    }}])', 1), ('([35:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[JPEG]:[35]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[JPEG]:[1]:method_text:[     }    }    /**     * Test values for static metadata used by the RAW capability.     */   ])', 1), ('([6:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[JPEG]:[6]:method_text:[wbLock));            }        }    }    /**     * Check reprocessing capabilities.     */   ])', 1), ('([3:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[JPEG]:[3]:method_text:[   }        }    }    /**     * Check ultra high resolution sensor characteristics.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[JPEG]:[2]:method_text:[nputSize));            }        }    }    /**     * Check depth output capability     */   ])', 1), ('([45:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[JPEG]:[45]:method_text:[al distortion        }    }    /**     * Cross-check StreamConfigurationMap output     */   ])', 1), ('([5:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[JPEG]:[5]:method_text:[ cross-check the high speed sizes and fps ranges from     * the StreamConfigurationMap.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[1080]:[1]:method_text:[ations contain a few required formats and sizes.     */    @CddTest(requirement=""7.5.1/C-1-2"")   ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[1080]:[1]:method_text:[yConfig);            }        } finally {            closeDevice(cameraId);        }    }   ])', 1), ('([3:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[1080]:[3]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);        return Integer.toString(level);    }}])', 1), ('([1:/android/hardware/cts/CameraPerformanceTestHelper.java]:[JPEG]:[1]:method_text:[apshotLock.unlock();        }    }    public Camera getCamera() {        return mCamera;    }])', 1), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[JPEG]:[1]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}     */   ])', 1), ('([12:/android/hardware/cts/Camera_SizeTest.java]:[JPEG]:[12]:method_text:[st = new Camera_SizeTest();        test.setName(testName);        testSuite.addTest(test);    }}])', 1), ('([106:/android/hardware/camera2/cts/CameraTestUtils.java]:[JPEG]:[106]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([2:/android/hardware/camera2/cts/CameraTestUtils.java]:[MEDIA_PERFORMANCE_CLASS]:[2]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([3:/android/hardware/camera2/cts/CameraTestUtils.java]:[1080]:[3]:method_text:[               return false;                }            }        }        return false;    }}])', 1), ('([6:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[JPEG]:[6]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([3:/android/hardware/camera2/cts/testcases/Camera2SurfaceViewTestCase.java]:[1080]:[3]:method_text:[aptureBurst(burstCaptureRequests, listener, handler);        }        return numCaptures;    }}])', 1), ('([1:/com/android/cts/verifier/camera/orientation/CameraOrientationActivity.java]:[JPEG]:[1]:method_text:[ation) {            mCameraId = cameraId;            mOrientation = orientation;        }    }}])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[JPEG]:[1]:method_text:[ is also     * checked to make sure no frame drop caused by video snapshot.     * </p>     */   ])', 1), ('([1:/android/hardware/camera2/cts/RecordingTest.java]:[JPEG]:[1]:method_text:[ capture images are validated according to the capture     * configuration.     * </p>     */   ])', 1), ('([27:/android/hardware/camera2/cts/RecordingTest.java]:[JPEG]:[27]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([2:/android/hardware/camera2/cts/RecordingTest.java]:[1080]:[2]:method_text:[on and validate the     * recorded video. Preview is set to the video size.     * </p>     */   ])', 1), ('([9:/android/hardware/camera2/cts/RecordingTest.java]:[1080]:[9]:method_text:[ate int         mQueuedCount = 0;        private boolean     mExpectInvalidSurface = false;    }}])', 1), ('([8:/com/android/cts/verifier/camera/fov/PhotoCaptureActivity.java]:[JPEG]:[8]:method_text:[           "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([4:/android/hardware/camera2/cts/PerformanceTest.java]:[JPEG]:[4]:method_text:[   * For depth-only devices, timing is done with the DEPTH16 format instead.     * </p>     */   ])', 1), ('([2:/android/hardware/camera2/cts/PerformanceTest.java]:[JPEG]:[2]:method_text:[ sending     * out the capture request and getting the full capture result.     * </p>     */   ])', 1), ('([8:/android/hardware/camera2/cts/PerformanceTest.java]:[JPEG]:[8]:method_text:[, and the frame duration, which is the timestamp     * gap between results.     * </p>     */   ])', 1), ('([27:/android/hardware/camera2/cts/PerformanceTest.java]:[JPEG]:[27]:method_text:[sult after ""                    + ""waiting for "" + numResultsWait + "" results"");        }    }}])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[1080]:[1]:method_text:[, and the frame duration, which is the timestamp     * gap between results.     * </p>     */   ])', 1), ('([3:/android/hardware/camera2/cts/NativeImageReaderTest.java]:[JPEG]:[3]:method_text:[log for details"",                testJpegNative(mDebugFileNameBase, mOverrideCameraId));    }   ])', 1), ('([3:/android/hardware/camera2/cts/NativeImageReaderTest.java]:[JPEG]:[3]:method_text:[or details"",                testDepthJpegNative(mDebugFileNameBase, mOverrideCameraId));    }   ])', 1), ('([2:/android/hardware/camera2/cts/NativeImageReaderTest.java]:[JPEG]:[2]:method_text:[  private static native boolean testImageReaderCloseAcquiredImagesNative(String overrideCameraId);}])', 1), ('([4:/com/android/cts/verifier/camera/video/CameraVideoActivity.java]:[1080]:[4]:method_text:[          "": "" + e.getMessage(), Toast.LENGTH_LONG).show();        }        return false;    }}])', 1), ('([5:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[JPEG]:[5]:method_text:[     isA(CaptureRequest.class),                                isA(CaptureFailure.class));    }}])', 1), ('([1:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[1080]:[1]:method_text:[     isA(CaptureRequest.class),                                isA(CaptureFailure.class));    }}])', 1)]"	""	""	"[('JPEG', 119), ('1080', 25), ('MEDIA_PERFORMANCE_CLASS', 2)]"	"[('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 3), ('[android.hardware.camera2.cts.CameraTestUtils ImageDropperListener None]', 3), ('[android.hardware.camera2.cts.helpers.StaticMetadat getCharacteristics None]', 2), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StillCaptureTest testFocalLengths CtsCameraTestCases]', 2), ('[android.hardware.cts.CameraTest testPreviewPictureSizesCombination CtsCameraTestCases]', 2), ('[android.hardware.cts.CameraTest testVideoSnapshot CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurstWithStillBokeh CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ImageReaderTest testAllOutputYUVResolutions CtsCameraTestCases]', 2), ('[com.android.cts.verifier.camera.bokeh.CameraBokehActivity setPassFailButtonClickListeners None]', 2), ('[android.hardware.camera2.cts.RobustnessTest testVerifyReprocessMandatoryOutputCombinationTables CtsCameraTestCases]', 2), ('[android.camera.cts.api31test.SPerfClassTest getCameraIdList CtsCameraApi31TestCases]', 2), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessRequestKeys CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.testcases.Camera2SurfaceViewTestCase isInstantApp CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.PerformanceTest testSingleCapture CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.SurfaceViewPreviewTest testDeferredSurfaces CtsCameraTestCases]', 2), ('[android.hardware.camera2.cts.StaticMetadataTest testHwSupportedLevel CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StaticMetadataTest testCapabilities CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineCallbacks CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineDepthJpeg CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testDeviceCloseAndOpen CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionClose CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testOfflineSessionWithRegularSession CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testRepeatingSequenceAbort CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testJpegZoomCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testJpegExif CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testDynamicDepthCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testTakePicture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testBasicRawZslCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFullRawCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testFullRawZSLCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testTouchForFocus CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.StillCaptureTest testAePrecaptureTriggerCancelJpegCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageWriterTest testWriterReaderBlobFormats CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageWriterTest testAbandonedSurfaceExceptions CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest TestShutterCallback CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testTakePicture CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testParameters CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testJpegThumbnailSize CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testJpegExif CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testImmediateZoom CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testFocusDistances CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testMeteringAreas CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testJpegCallbackStartPreview CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testRecordingHint CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest test3ALockInteraction CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testFaceDetection CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testPreviewCallbackWithPicture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testMultiFrameCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testRepeatingAndCaptureCombined CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionSessionTest testIllegalArguments CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testYuvBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.BurstCaptureTest testJpegBurst CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testDynamicDepth CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testJpeg CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testRepeatingJpeg CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testInvalidAccessTest CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testYuvAndJpeg CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testYuvAndJpegWithUsageFlag CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testImageReaderYuvAndRawWithUsageFlag CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ImageReaderTest testUsageRespected CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateCustomSession CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.formats.CameraFormatsActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderJpeg CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionImageReaderTest testMultiResolutionImageReaderRepeatingJpeg CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testSingleImageThumbnail CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testRaw16JpegMaximumResolutionConsistency CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testRaw16JpegConsistency CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.DngCreatorTest testDngRenderingByBitmapFactor CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionCharacteristicsTest testExtensionSizes CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraExtensionCharacteristicsTest testExtensionLatencyRanges CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionOutputCombinations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testMandatoryMaximumResolutionReprocessConfigurations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RobustnessTest testVerifyMandatoryOutputCombinationTables CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionReprocessCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionYuvToYuvReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionYuvToJpegReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionOpaqueToYuvReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionOpaqueToJpegReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.MultiResolutionReprocessCaptureTest testMultiResolutionMandatoryStreamCombinationTest CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.HeifWriterTest testHeif CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.FastBasicsTest testCamera2 CtsCameraTestCases]', 1), ('[android.camera.cts.api31test.SPerfClassTest testSPerfClassJpegSizes CtsCameraApi31TestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicYuvToYuvReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicYuvToJpegReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicOpaqueToYuvReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBasicOpaqueToJpegReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testCrossSessionCaptureException CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testQueueImageWithoutRequest CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessTimestamps CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessJpegExif CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testKeys CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStaticBurstCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testReprocessingCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testUltraHighResolutionSensorCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testDepthOutputCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testStreamConfigurationMap CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest getCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testCameraPerfClassCharacteristics CtsCameraTestCases]', 1), ('[android.hardware.cts.Camera_SizeTest testConstructor CtsCameraTestCases]', 1), ('[android.hardware.cts.Camera_SizeTest testMaxAspectRatios CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.orientation.CameraOrientationActivity setPassFailButtonClickListeners None]', 1), ('[android.hardware.camera2.cts.RecordingTest testMediaCodecRecording CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest testVideoSnapshot CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest isColorOutputSupported CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.fov.PhotoCaptureActivity OnClickListener None]', 1), ('[android.hardware.camera2.cts.PerformanceTest testCameraLaunch CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testReprocessingCaptureStall CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeImageReaderTest testJpeg CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeImageReaderTest testDepthJpeg CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.NativeImageReaderTest testImageReaderCloseAcquiredImages CtsCameraTestCases]', 1), ('[com.android.cts.verifier.camera.video.CameraVideoActivity exists None]', 1)]"	""	""	""	""	""	""	""	""	""
