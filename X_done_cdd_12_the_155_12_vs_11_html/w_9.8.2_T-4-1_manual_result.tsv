"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"2.3.5  . Security Model"	"9.8.2"	"T-4-1"	"9.8.2/T-4-1"	"09080200.840401"	"""[9.8.2/T-4-1] MUST display the microphone indicator when an app is accessing audio data from the microphone, but not when the microphone is only accessed by HotwordDetectionService, SOURCE_HOTWORD, ContentCaptureService, or apps holding the roles called out in Section 9.1 Permissions with CDD identifier C-3-X]. ["""	"Test Available"	"permission"	"hotword identifier tv SOURCE_HOTWORD audio indicator ContentCaptureService television Hotword microphone roles CDD HotwordDetectionService"	"tv television hotword Hotword security permissions"	"Permissions data accessing 2/T-4-1 display C-3-X accessed Section apps holding called app security only"	""	""	"[('android.permission.cts.NearbyDevicesPermissionTest', 11), ('android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt', 10), ('android.permission.cts.FileSystemPermissionTest', 9), ('android.permission.cts.TvPermissionTest', 7), ('android.permission.cts.NoAudioPermissionTest', 7), ('android.permission4.cts.CameraMicIndicatorsPermissionTest.kt', 7), ('android.permission.cts.telephony.TelephonyManagerPermissionTest', 6), ('android.permission.cts.UndefinedGroupPermissionTest.kt', 5), ('android.permission2.cts.ContactsProviderTest', 4), ('android.permission.cts.ContactsProviderTest', 4), ('android.permission.cts.ProviderPermissionTest', 4), ('android.permission3.cts.PermissionHistoryTest.kt', 4), ('android.permission3.cts.PermissionTest23.kt', 4), ('android.permission2.cts.NoCaptureAudioOutputPermissionTest', 3), ('com.android.cts.escalatepermission.PermissionEscalationTest', 2), ('android.permission2.cts.RestrictedStoragePermissionTest', 2), ('android.permission2.cts.NoWriteSecureSettingsPermissionTest', 2), ('android.permission2.cts.IntelligenceRolesPolicyTest', 2), ('android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest', 2), ('android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest', 2), ('android.car.cts.permissioncarspeed.PermissionCarSpeedTest', 2), ('android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest', 2), ('android.permission3.cts.PermissionTapjackingTest.kt', 2), ('android.permission.cts.LocationAccessCheckTest', 1), ('android.permission.cts.NoSystemFunctionPermissionTest', 1), ('android.permission.cts.PackageManagerRequiringPermissionsTest', 1), ('android.permission.cts.OneTimePermissionTest', 1), ('android.permission.cts.BackgroundPermissionButtonLabelTest', 1), ('android.permission3.cts.PermissionUpgradeTest.kt', 1), ('android.permission3.cts.PermissionUsageInfoTest.kt', 1), ('android.permission3.cts.PermissionSplitTest.kt', 1), ('android.permission3.cts.PermissionTest29.kt', 1), ('android.permission5.cts.RenouncedPermissionsTest.kt', 1)]"	"[('getContext', 16), ('getInstrumentation', 15), ('setUp', 12), ('getPackageManager', 8), ('toString', 6), ('getTargetContext', 4), ('tearDown', 4), ('getSimpleName', 4), ('builder', 3), ('build', 3), ('getContentResolver', 3), ('intelligenceRoles', 2), ('install', 2), ('setup', 2), ('wakeUpScreenAndUnlock', 2), ('ContentValues', 2), ('hasMicrophone', 2), ('getDeviceSoftwareVersion', 1), ('getCarrierConfig', 1), ('getNetworkType', 1), ('getDataNetworkType', 1), ('getVoiceNetworkType', 1), ('getGroupIdLevel1', 1), ('getLine1AlphaTag', 1), ('getVoiceMailNumber', 1), ('enableBluetooth', 1), ('supportsBluetooth', 1), ('getAdapter', 1), ('getUiAutomation', 1), ('wakeUpScreen', 1), ('installApp', 1), ('prepareDeviceForOneTime', 1), ('uninstallApp', 1), ('restoreDeviceForOneTime', 1)]"	"[('CtsPermissionTestCases', 58), ('CtsPermission3TestCases', 14), ('CtsPermission2TestCases', 13), ('CtsPermission5TestCases', 11), ('CtsPermission4TestCases', 7), ('CtsTelephonyTestCases', 2)]"	""	"android.permission4.cts.CameraMicIndicatorsPermissionTest.kt"	"testHotwordIndicatorBehavior"	"CtsPermission4TestCases"	"/home/gpoor/cts-12-source/cts/tests/tests/permission4/src/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt"	"[('(14,audio,/com/android/cts/escalatepermission/PermissionEscalationTest.java)', 1), ('(2,tv,/android/permission2/cts/RestrictedStoragePermissionTest.java)', 1), ('(2,microphone,/android/permission2/cts/NoCaptureAudioOutputPermissionTest.java)', 1), ('(22,audio,/android/permission2/cts/NoCaptureAudioOutputPermissionTest.java)', 1), ('(4,tv,/android/permission2/cts/ContactsProviderTest.java)', 1), ('(3,tv,/android/permission2/cts/NoWriteSecureSettingsPermissionTest.java)', 1), ('(3,roles,/android/permission2/cts/IntelligenceRolesPolicyTest.java)', 1), ('(4,audio,/android/permission2/cts/IntelligenceRolesPolicyTest.java)', 1), ('(12,tv,/android/telephony/cts/telephonypermission/TelephonyManagerReadPhoneStatePermissionTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarexteriorenvironment/PermissionCarExteriorEnvironmentTest.java)', 1), ('(2,CDD,/android.car.cts.permissioncarspeed/PermissionCarSpeedTest.java)', 1), ('(2,CDD,/android/car/cts/permissioncarpowertrain/PermissionCarPowertrainTest.java)', 1), ('(2,indicator,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(3,tv,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(16,audio,/android/permission/cts/telephony/TelephonyManagerPermissionTest.java)', 1), ('(11,CDD,/android/permission/cts/NearbyDevicesPermissionTest.java)', 1), ('(3,identifier,/android/permission/cts/LocationAccessCheckTest.java)', 1), ('(36,tv,/android/permission/cts/FileSystemPermissionTest.java)', 1), ('(4,tv,/android/permission/cts/ContactsProviderTest.java)', 1), ('(2,CDD,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(4,tv,/android/permission/cts/ProviderPermissionTest.java)', 1), ('(2,identifier,/android/permission/cts/UndefinedGroupPermissionTest.kt)', 1), ('(5,audio,/android/permission/cts/UndefinedGroupPermissionTest.kt)', 1), ('(27,tv,/android/permission/cts/TvPermissionTest.java)', 1), ('(1,tv,/android/permission/cts/NoSystemFunctionPermissionTest.java)', 1), ('(1,tv,/android/permission/cts/PackageManagerRequiringPermissionsTest.java)', 1), ('(3,tv,/android/permission/cts/OneTimePermissionTest.java)', 1), ('(9,microphone,/android/permission/cts/NoAudioPermissionTest.java)', 1), ('(51,audio,/android/permission/cts/NoAudioPermissionTest.java)', 1), ('(1,identifier,/android/permission/cts/BackgroundPermissionButtonLabelTest.java)', 1), ('(1,audio,/android/permission3/cts/PermissionUpgradeTest.kt)', 1), ('(16,microphone,/android/permission3/cts/PermissionHistoryTest.kt)', 1), ('(1,tv,/android/permission3/cts/PermissionTest23.kt)', 1), ('(4,audio,/android/permission3/cts/PermissionTest23.kt)', 1), ('(1,tv,/android/permission3/cts/PermissionUsageInfoTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionSplitTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionTapjackingTest.kt)', 1), ('(2,tv,/android/permission3/cts/PermissionTest29.kt)', 1), ('(29,indicator,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(5,microphone,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(6,tv,/android/permission4/cts/CameraMicIndicatorsPermissionTest.kt)', 1), ('(1,identifier,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(9,tv,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(16,audio,/android/permission5/cts/RuntimePermissionsAppOpTrackingTest.kt)', 1), ('(1,identifier,/android/permission5/cts/RenouncedPermissionsTest.kt)', 1)]"	"fun testHotwordIndicatorBehavior() {
        testCameraAndMicIndicator(useMic = false, useCamera = false, useHotword = true)
    }

    private fun testCameraAndMicIndicator(
        useMic: Boolean,
        useCamera: Boolean,
        useHotword: Boolean = false
    ) {
        openApp(useMic, useCamera, useHotword)
        eventually {
            val appView = uiDevice.findObject(UiSelector().textContains(APP_LABEL))
            assertTrue(""View with text $APP_LABEL not found"", appView.exists())
        }

        if (packageManager.hasSystemFeature(PackageManager.FEATURE_LEANBACK)) {
            assertTvIndicatorsShown(useMic, useCamera, useHotword)
        } else if (packageManager.hasSystemFeature(PackageManager.FEATURE_AUTOMOTIVE)) {
            assertCarIndicatorsShown(useMic, useCamera)
        } else {
            uiDevice.openQuickSettings()
            assertPrivacyChipAndIndicatorsPresent(useMic, useCamera)
        }
    }

    private fun assertTvIndicatorsShown(useMic: Boolean, useCamera: Boolean, useHotword: Boolean) {
        if (useMic || useHotword) {
            val found = WindowManagerStateHelper()
                .waitFor(""Waiting for the mic indicator window to come up"") {
                    it.containsWindow(TV_MIC_INDICATOR_WINDOW_TITLE) &&
                    it.isWindowVisible(TV_MIC_INDICATOR_WINDOW_TITLE)
                }
            if (useMic) {
                assertTrue(""Did not find chip"", found)
            } else {
                assertFalse(""Found chip, but did not expect to"", found)
            }
        }
        if (useCamera) {
            // There is no camera indicator on TVs.
        }
    }

    private fun assertCarIndicatorsShown(useMic: Boolean, useCamera: Boolean) {
        // Ensure the privacy chip is present (or not)
        val chipFound = isChipPresent()
        if (useMic || useCamera) {
            assertTrue(""Did not find chip"", chipFound)
        } else {
            assertFalse(""Found chip, but did not expect to"", chipFound)
            return
        }

        eventually {
            if (useMic) {
                val appView = uiDevice.findObject(UiSelector().textContains(micLabel))
                assertTrue(""View with text $APP_LABEL not found"", appView.exists())
            }
            if (useCamera) {
                // There is no camera indicator in Cars.
            }
            val appView = uiDevice.findObject(UiSelector().textContains(APP_LABEL))
            assertTrue(""View with text $APP_LABEL not found"", appView.exists())
        }
    }

    private fun assertPrivacyChipAndIndicatorsPresent(useMic: Boolean, useCamera: Boolean) {
        // Ensure the privacy chip is present (or not)
        val chipFound = isChipPresent()
        if (useMic || useCamera) {
            assertTrue(""Did not find chip"", chipFound)
        } else {
            assertFalse(""Found chip, but did not expect to"", chipFound)
            return
        }

        eventually {
            if (useMic) {
                val iconView = uiDevice.findObject(UiSelector().descriptionContains(micLabel))
                assertTrue(""View with description $micLabel not found"", iconView.exists())
            }
            if (useCamera) {
                val iconView = uiDevice.findObject(UiSelector().descriptionContains(cameraLabel))
                assertTrue(""View with text $APP_LABEL not found"", iconView.exists())
            }
            val appView = uiDevice.findObject(UiSelector().textContains(APP_LABEL))
            assertTrue(""View with text $APP_LABEL not found"", appView.exists())
        }
    }

    private fun isChipPresent(): Boolean {
        var chipFound = false
        try {
            eventually {
                val privacyChip = uiDevice.findObject(By.res(PRIVACY_CHIP_ID))
                assertNotNull(""view with id $PRIVACY_CHIP_ID not found"", privacyChip)
                privacyChip.click()
                chipFound = true
            }
        } catch (e: Exception) {
            // Handle more gracefully after
        }
        return chipFound
    }

    private fun pressBack() {
        uiDevice.pressBack()
        waitForIdle()
    }

    private fun pressHome() {
        uiDevice.pressHome()
        waitForIdle()
    }

    private fun waitForIdle() =
        uiAutomation.waitForIdle(IDLE_TIMEOUT_MILLIS, TIMEOUT_MILLIS)
}"	""	""	"4: hotword tv indicator Hotword"	"[('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt DisableAnimationRule CtsPermission4TestCases]', 3), ('[android.permission2.cts.NoCaptureAudioOutputPermissionTest testCreateAudioRecord CtsPermission2TestCases]', 2), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testVoiceMailNumber CtsPermissionTestCases]', 2), ('[android.permission.cts.NoAudioPermissionTest testSetMicrophoneMute CtsPermissionTestCases]', 2), ('[android.permission.cts.NoAudioPermissionTest testRecordPermission CtsPermissionTestCases]', 2), ('[android.permission3.cts.PermissionTest23.kt testInvalidPermission CtsPermission3TestCases]', 2), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testHotwordIndicatorBehavior CtsPermission4TestCases]', 2), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testMicRecognitionMicRecoWithAttribution CtsPermission5TestCases]', 2), ('[com.android.cts.escalatepermission.PermissionEscalationTest testCannotEscalateNonRuntimePermissionsToRuntime None]', 1), ('[com.android.cts.escalatepermission.PermissionEscalationTest testRuntimePermissionsAreNotGranted None]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testTargetingSdk29CanOptOutViaUpdate CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testTargetingSdk29CanOptOutViaDowngradeTo28 CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testInsertContacts CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testInsertProfile CtsPermission2TestCases]', 1), ('[android.permission2.cts.ContactsProviderTest testUpdateProfile CtsPermission2TestCases]', 1), ('[android.permission2.cts.NoWriteSecureSettingsPermissionTest testWriteSecureSettings CtsPermission2TestCases]', 1), ('[android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest getVisualVoicemailPackageName CtsTelephonyTestCases]', 1), ('[android.telephony.cts.telephonypermission.TelephonyManagerReadPhoneStatePermissionTest testTelephonyManagersAPIsRequiringReadPhoneStatePermissions CtsTelephonyTestCases]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest isNotNull None]', 1), ('[android.car.cts.permissioncarexteriorenvironment.PermissionCarExteriorEnvironmentTest testPermissionCarExteriorEnvironmentGranted None]', 1), ('[android.car.cts.permissioncarspeed.PermissionCarSpeedTest isNotNull None]', 1), ('[android.car.cts.permissioncarspeed.PermissionCarSpeedTest testPermissionCarSpeedGranted None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest isNotNull None]', 1), ('[android.car.cts.permissioncarpowertrain.PermissionCarPowertrainTest testPermissionCarPowertrainGranted None]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testSetForbiddenPlmns CtsPermissionTestCases]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testGetSubscriberId CtsPermissionTestCases]', 1), ('[android.permission.cts.telephony.TelephonyManagerPermissionTest testSetMode CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest isEnabled CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission30_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermission31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_Default CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.NearbyDevicesPermissionTest testRequestBluetoothPermissionNeverForLocation31_GrantNearby_GrantLocation CtsPermissionTestCases]', 1), ('[android.permission.cts.LocationAccessCheckTest getPermissionControllerPackageName CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testAllFilesInSysAreNotWritable CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testSystemMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testRootMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testVendorMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOdmMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testOemMountedRO CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testDataMountedNoSuidNoDev CtsPermissionTestCases]', 1), ('[android.permission.cts.FileSystemPermissionTest testRunAsHasCorrectCapabilities CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testInsertContacts CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testInsertProfile CtsPermissionTestCases]', 1), ('[android.permission.cts.ContactsProviderTest testUpdateProfile CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testManageDocuments CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteCallLogInstant CtsPermissionTestCases]', 1), ('[android.permission.cts.ProviderPermissionTest testWriteSettings CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testOtherGroupPermissionsNotGranted_1 CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testOtherGroupPermissionsNotGranted_2 CtsPermissionTestCases]', 1), ('[android.permission.cts.UndefinedGroupPermissionTest.kt testCustomPermissionGrantedAlone CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testInsertChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testUpdateChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testDeleteChannels CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testInsertPrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testUpdatePrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.TvPermissionTest testDeletePrograms CtsPermissionTestCases]', 1), ('[android.permission.cts.NoSystemFunctionPermissionTest testVibrator CtsPermissionTestCases]', 1), ('[android.permission.cts.PackageManagerRequiringPermissionsTest testVerifyPendingInstall CtsPermissionTestCases]', 1), ('[android.permission.cts.NoAudioPermissionTest testRouting CtsPermissionTestCases]', 1), ('[android.permission.cts.BackgroundPermissionButtonLabelTest testBackgroundPermissionButtonLabel CtsPermissionTestCases]', 1), ('[android.permission3.cts.PermissionUpgradeTest.kt testRevokePropagatedOnUpgradeNewToNewModel CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionHistoryTest.kt BasePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionHistoryTest.kt testToggleSystemApps CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionHistoryTest.kt testMicrophoneTimelineWithOneApp CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionHistoryTest.kt testCameraTimelineWithMultipleApps CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest23.kt testNoResidualPermissionsOnUninstall CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest23.kt testNullAndRealPermission CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionUsageInfoTest.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionSplitTest.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTapjackingTest.kt testTapjackGrantDialog_fullOverlay CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTapjackingTest.kt testTapjackGrantDialog_partialOverlay CtsPermission3TestCases]', 1), ('[android.permission3.cts.PermissionTest29.kt BaseUsePermissionTest CtsPermission3TestCases]', 1), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testCameraIndicator CtsPermission4TestCases]', 1), ('[android.permission4.cts.CameraMicIndicatorsPermissionTest.kt testMicIndicator CtsPermission4TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testTrustedAccessCallLogAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt setUpTest CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testSelfSmsAccess CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testSelfCallLogWrite CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testUntrustedSmsAccessAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testUntrustedSmsAccessAttributeToAnotherThroughIntermediary CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testTrustedAccessSmsAttributeToAnother CtsPermission5TestCases]', 1), ('[android.permission5.cts.RuntimePermissionsAppOpTrackingTest.kt testMicRecognitionInjectRecoWithoutAttribution CtsPermission5TestCases]', 1), ('[android.permission5.cts.RenouncedPermissionsTest.kt testCannotRequestRenouncePermissions CtsPermission5TestCases]', 1)]"	""	""	""	""	""	""	""	""	""
