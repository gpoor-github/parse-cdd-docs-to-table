"Section"	"section_id"	"req_id"	"full_key"	"manual_search_terms"	"requirement"	"Test Availability"	"class_def"	"method"	"module"	"matched_terms"	"methods_string"	"file_name"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"Test Level"
"2.2.5  . Security Model"	"9.8"	"H-2-3"	"9.8/H-2-3"	"transmit from the hotword detection service, audio data, data that can be used to reconstruct (wholly or partially) the audio, or audio contents unrelated to the hotword itself, except to the ContentCaptureServic"	"""[9.8/H-2-3] MUST NOT transmit from the hotword detection service, audio data, data that can be used to reconstruct (wholly or partially) the audio, or audio contents unrelated to the hotword itself, except to the ContentCaptureService. If Handheld device implementations declare android.hardware.microphone, they: """	"Test Available"	"android.voiceinteraction.cts.HotwordRejectedResultTest"	"testHotwordRejectedResultParcelizeDeparcelize"	"CtsVoiceInteractionTestCases"	"7: except or from hotword data that to"	"public void testHotwordRejectedResultParcelizeDeparcelize() throws Exception {
        final HotwordRejectedResult hotwordRejectedResult =
                buildHotwordRejectedResult(HotwordRejectedResult.CONFIDENCE_LEVEL_LOW);

        final Parcel p = Parcel.obtain();
        hotwordRejectedResult.writeToParcel(p, 0);
        p.setDataPosition(0);

        final HotwordRejectedResult targetHotwordRejectedResult =
                HotwordRejectedResult.CREATOR.createFromParcel(p);
        p.recycle();

        assertThat(hotwordRejectedResult).isEqualTo(targetHotwordRejectedResult);
    }

    private HotwordRejectedResult buildHotwordRejectedResult(int confidenceLevel) {
        return new HotwordRejectedResult.Builder()
                .setConfidenceLevel(confidenceLevel)
                .build();
    }
}"	"/home/gpoor/cts-12-source/cts/tests/tests/voiceinteraction/src/android/voiceinteraction/cts/HotwordRejectedResultTest.java"	""	""	""
