"Section"	"section_id"	"req_id"	"Test Availability"	"class_def"	"method"	"module"	"method_text"	"full_key"	"requirement"	"key_as_number"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"matched_terms"	"search_roots"	"qualified_method"	"max_matches"	"file_name"	"matched_files"	"methods_string"	"urls"	"protected"	"Area"	"Shortened"	"Test Level"
"168:530476) 7.2.3  . Navigation Keys"	"7.2.3"	"C-3-1"	""	"[('android.media.cts.DecoderTest', 4), ('android.os.ext.cts.SdkExtensionsTest', 2), ('android.media.cts.SurfaceEncodeTimestampTest', 1), ('android.media.cts.MediaCasTest', 1), ('android.location.cts.privileged.GnssMeasurementRegistrationTest', 1), ('android.media.cts.MediaExtractorTest', 1), ('android.media.cts.HeifWriterTest', 1), ('android.media.cts.MediaCodecBlockModelTest', 1), ('android.provider.cts.media.MediaStoreTest', 1), ('android.incrementalinstall.cts.IncrementalFeatureTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('android.media.cts.MediaCodecTest', 1), ('android.media.cts.DecoderTestAacFormat', 1), ('android.media.cts.DecoderTestAacDrc', 1), ('android.jni.cts.JniStaticTest', 1), ('android.media.cts.MediaMuxerTest', 1), ('android.media.cts.MediaRecorderTest', 1), ('android.media.cts.MediaMetadataRetrieverTest', 1), ('android.media.cts.DecoderTestXheAac', 1)]"	"[('setUp', 15), ('getResources', 8), ('getContext', 7), ('tearDown', 6), ('getInstrumentation', 4), ('getExternalStorageDirectory', 3), ('release', 2), ('getAbsolutePath', 2), ('read', 2), ('close', 2), ('initAacDecoderNames', 2), ('getUiAutomation', 1), ('MediaExtractor', 1), ('getSimpleName', 1), ('start', 1), ('getLooper', 1), ('getDevice', 1), ('getLaunchApiLevel', 1), ('getLength', 1), ('createInputStream', 1), ('reset', 1), ('getVideoEncoders', 1), ('MediaMetadataRetriever', 1), ('getPackageManager', 1), ('getCodecInfos', 1)]"	"[('CtsMediaTestCases', 16), ('CtsLocationPrivilegedTestCases', 1), ('CtsProviderTestCases', 1), ('CtsMediaParserTestCases', 1), ('CtsJniTestCases', 1)]"	""	"7.2.3/C-3-1"	"""C-3-1] MUST make the Menu function available to applications when targetSdkVersion is less than 10, either by a physical button, a software key, or gestures. This Menu function should be accessible unless hidden together with other navigation functions. If device implementations provide the Assist function, they: """	"07020300.670301"	"Build.VERSION_CODES.R"	"Build.VERSION_CODES.R"	""	""	"[('Build.VERSION_CODES.R', 23)]"	""	"[('[android.media.cts.SurfaceEncodeTimestampTest testMaxFps CtsMediaTestCases]', 1), ('[android.media.cts.MediaCasTest adoptShellPermissionIdentity CtsMediaTestCases]', 1), ('[android.location.cts.privileged.GnssMeasurementRegistrationTest testGnssMeasurementRegistration_enableFullTracking CtsLocationPrivilegedTestCases]', 1), ('[android.media.cts.HeifWriterTest exists CtsMediaTestCases]', 1), ('[android.os.ext.cts.SdkExtensionsTest testBadArgument None]', 1), ('[android.os.ext.cts.SdkExtensionsTest testValidValues None]', 1), ('[android.provider.cts.media.MediaStoreTest testLegacy CtsProviderTestCases]', 1), ('[android.media.cts.DecoderTest testVrHighPerformanceVP9 CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTest testLowLatencyVp9At1280x720 CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTest testLowLatencyVp9At1920x1080 CtsMediaTestCases]', 1), ('[android.jni.cts.JniStaticTest test_dlopenPublicLibraries CtsJniTestCases]', 1), ('[android.media.cts.MediaRecorderTest MediaRecorderTest CtsMediaTestCases]', 1), ('[android.media.cts.MediaMetadataRetrieverTest exists CtsMediaTestCases]', 1), ('[android.media.cts.DecoderTestXheAac isAlias CtsMediaTestCases]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/sdkextensions/src/android/os/ext/cts/SdkExtensionsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/SurfaceEncodeTimestampTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCasTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_privileged/src/android/location/cts/privileged/GnssMeasurementRegistrationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecBlockModelTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestAacFormat.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestAacDrc.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/jni/src/android/jni/cts/JniStaticTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaMuxerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRecorderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaMetadataRetrieverTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTestXheAac.java', 1)]"	"[('/android/media/cts/DecoderTest.java', 5), ('/android/os/ext/cts/SdkExtensionsTest.java', 3), ('/android/media/cts/SurfaceEncodeTimestampTest.java', 2), ('/android/media/cts/MediaCasTest.java', 2), ('/android/location/cts/privileged/GnssMeasurementRegistrationTest.java', 2), ('/android/media/cts/MediaExtractorTest.java', 2), ('/android/media/cts/HeifWriterTest.java', 2), ('/android/media/cts/MediaCodecBlockModelTest.java', 2), ('/android/provider/cts/media/MediaStoreTest.java', 2), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/android/media/cts/MediaCodecTest.java', 2), ('/android/media/cts/DecoderTestAacFormat.java', 2), ('/android/media/cts/DecoderTestAacDrc.java', 2), ('/android/jni/cts/JniStaticTest.java', 2), ('/android/media/cts/MediaMuxerTest.java', 2), ('/android/media/cts/MediaRecorderTest.java', 2), ('/android/media/cts/MediaMetadataRetrieverTest.java', 2), ('/android/media/cts/DecoderTestXheAac.java', 2)]"	"[('([1:/android/media/cts/DecoderTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[              true /* useNdk */);     }      @SdkSuppress(minSdkVersion = Build.VERSION_CODES.R)    ])', 2), ('([1:/android/media/cts/SurfaceEncodeTimestampTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[ified      * by  KEY_FRAME_RATE.      */     @SdkSuppress(minSdkVersion = Build.VERSION_CODES.R)    ])', 1), ('([1:/android/media/cts/MediaCasTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[th the enumeration results, and all enumerated CA system ids can      * be instantiated.      */    ])', 1), ('([1:/android/location/cts/privileged/GnssMeasurementRegistrationTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[ents.  Retry outdoors?"",                 !events.isEmpty());         softAssert.assertAll();     } }])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[ce ds = getDataSourceFor(resid);         mExtractor.setDataSource(ds);         return ds;     }     ])', 1), ('([1:/android/media/cts/HeifWriterTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[    if (imageFile.exists()) {                 imageFile.delete();             }         }     }     ])', 1), ('([1:/android/os/ext/cts/SdkExtensionsTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[ { }         }     }      /** Verifies that getExtensionVersion only return existing versions */    ])', 1), ('([1:/android/os/ext/cts/SdkExtensionsTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[versions yet.             assertEquals(0, SdkExtensions.getExtensionVersion(sdk));         }     } }])', 1), (""([1:/android/media/cts/MediaCodecBlockModelTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[oder doesn't output the queued frames.      */     @Presubmit     @SmallTest     @RequiresDevice    ])"", 1), ('([1:/android/provider/cts/media/MediaStoreTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[ray) {         if (array != null && array.length > 0) {             fail(message);         }     } }])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);     }      @CddTest(requirement=""4/C-1-1"")    ])', 1), ('([1:/android/media/cts/DecoderTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[Player = null;         }     }      // TODO: add similar tests for other audio and video formats    ])', 1), ('([1:/android/media/cts/DecoderTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[EATURE_VR_MODE_HIGH_PERFORMANCE);     }      @SdkSuppress(minSdkVersion = Build.VERSION_CODES.R)    ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[public void setUp() {         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.R);     }     ])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[s are thrown from MediaCodec      * methods when called in incorrect operational states.      */    ])', 1), ('([1:/android/media/cts/DecoderTestAacFormat.java]:[Build.VERSION_CODES.R]:[1]:method_text:[  * Verify downmixing to stereo at decoding of MPEG-4 HE-AAC 5.0 and 5.1 channel streams      */    ])', 1), ('([1:/android/media/cts/DecoderTestAacDrc.java]:[Build.VERSION_CODES.R]:[1]:method_text:[     * Verify correct decoding of MPEG-4 AAC with output level normalization to -23dBFS.      */    ])', 1), ('([1:/android/jni/cts/JniStaticTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[    *      * This test ensures that dlopen fail with a target version SDK of Q or above.      */    ])', 1), ('([1:/android/media/cts/MediaMuxerTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[     /**      * Test: make sure the muxer handles both video and audio tracks correctly.      */    ])', 1), ('([1:/android/media/cts/MediaRecorderTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[   mNextOutputFileStartedCond = null;         mActivity = null;         super.tearDown();     }     ])', 1), ('([1:/android/media/cts/MediaMetadataRetrieverTest.java]:[Build.VERSION_CODES.R]:[1]:method_text:[tch (Exception e) {             fail(""Unable to open file"");         }         return ds;     }     ])', 1), ('([1:/android/media/cts/DecoderTestXheAac.java]:[Build.VERSION_CODES.R]:[1]:method_text:[* Verify the correct decoding of USAC bitstreams with different MPEG-D DRC effect types.      */    ])', 1)]"	""	not testable physical button	""	""	""
"169:533444) 7.2.4  . Touchscreen Input"	"7.2.4"	"C-3-2"	""	"[('android.widget.cts.ToastTest', 18), ('android.server.wm.WindowInsetsControllerTests', 17), ('android.inputmethodservice.cts.hostside.ShellCommandFromAppTest', 11), ('android.widget.cts29.ToastTest', 11), ('android.view.inputmethod.cts.KeyboardVisibilityControlTest', 7), ('android.content.res.cts.ConfigurationTest', 6), ('android.autofillservice.cts.DatasetFilteringTest', 6), ('android.content.pm.cts.PackageManagerShellCommandIncrementalTest', 5), ('android.autofillservice.cts.LoginActivityTest', 5), ('android.scopedstorage.cts.host.ScopedStorageHostTest', 5), ('android.telephony.cts.TelephonyManagerTest', 5), ('android.app.cts.SystemFeaturesTest', 4), ('android.fragment.cts.FragmentAnimatorTest', 4), ('android.server.wm.WindowInsetsAnimationControllerTests', 4), ('com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest', 4), ('android.server.wm.LayoutTests', 4), ('android.accessibilityservice.cts.AccessibilitySoftKeyboardTest', 4), ('android.net.wifi.nl80211.cts.PnoNetworkTest', 3), ('android.os.cts.EnvironmentTest', 3), ('android.telephony.ims.cts.ImsMmTelManagerTest', 3), ('com.android.cts.delegate.PackageAccessDelegateTest', 3), ('android.autofillservice.cts.SimpleSaveActivityTest', 2), ('android.admin.cts.DevicePolicyManagerTest', 2), ('android.autofillservice.cts.PartitionedActivityTest', 2), ('android.app.notification.legacy29.cts.NotificationAssistantServiceTest', 2), ('android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest', 2), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2), ('android.net.wifi.cts.WifiBackupRestoreTest', 2), ('com.android.cts.managedprofile.CurrentApiHelperTest', 2), ('android.fragment.cts.FragmentTransitionTest', 2), ('com.android.cts.devicepolicy.LauncherAppsProfileTest', 2), ('android.assist.cts.LifecycleTest', 2), ('android.server.wm.WindowTest', 2), ('android.app.cts.WearableExtenderTest', 2), ('android.cts.statsd.atom.UidAtomTests', 2), ('android.view.inputmethod.cts.SearchViewTest', 2), ('android.hardware.input.cts.tests.SonyDualshock4ProBluetoothTest', 1), ('android.provider.cts.contacts.ContactsContract_AllUriTest', 1), ('android.mediav2.cts.MuxerUnitTest', 1), ('android.widget.cts.ZoomControlsTest', 1), ('android.os.cts.HwBinderTest', 1), ('android.app.cts.NotificationManagerTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1), ('com.android.cts.documentclient.ScopedDirectoryAccessClientTest', 1), ('android.server.wm.lifecycle.ActivityLifecycleTests', 1), ('android.view.cts.ViewConfigurationTest', 1), ('android.app.cts.DialogTest', 1), ('android.autofillservice.cts.inline.InlineAuthenticationTest', 1), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 1), ('com.android.cts.devicepolicy.DeviceOwnerTest', 1), ('android.net.eap.cts.EapSessionConfigTest', 1), ('android.widget.cts.MediaControllerTest', 1), ('android.hardware.camera2.cts.CaptureRequestTest', 1), ('android.net.cts.NetworkStatsBinderTest', 1), ('android.animation.cts.AnimatorSetTest', 1), ('android.app.cts.ServiceTest', 1), ('android.hardware.camera2.cts.CaptureResultTest', 1), ('android.net.wifi.cts.WifiInfoTest', 1), ('android.accessibilityservice.cts.MagnificationGestureHandlerTest', 1), ('com.android.cts.signedconfig.SignedConfigHostTest', 1), ('android.server.wm.WindowInsetsLayoutTests', 1), ('android.uirendering.cts.testclasses.ColorFilterAlphaTest', 1), ('android.os.cts.StrictModeTest', 1), ('android.autofillservice.cts.LoginActivity', 1), ('android.server.wm.AnrTests', 1), ('android.media.tv.cts.TvInputInfoTest', 1), ('android.preference.cts.PreferenceWithHeadersTest', 1), ('android.dumpsys.cts.BatteryStatsDumpsysTest', 1), ('android.server.wm.AlertWindowsImportanceTests', 1), ('android.widget.cts.ToolbarTest', 1), ('android.mediav2.cts.MuxerTest', 1), ('android.app.cts.AppTaskTests', 1), ('com.android.cts.verifier.audio.RingerModeActivity', 1), ('android.widget.cts.TextViewTest', 1), ('android.provider.cts.SettingsPanelTest', 1), ('android.car.cts.CarBluetoothTest', 1), ('android.autofillservice.cts.inline.InlineLoginActivityTest', 1), ('android.server.wm.DisplayCutoutTests', 1), ('android.animation.cts.LayoutAnimationTest', 1), ('android.provider.cts.media.MediaStoreUtils', 1), ('android.widget.cts.PopupWindowTest', 1), ('android.text.cts.StaticLayoutGetLineLeftRightTest', 1), ('android.app.cts.ActivityManagerProcessStateTest', 1), ('android.media.cts.CameraProfileTest', 1), ('android.view.cts.MenuInflaterTest', 1), ('android.media.cts.MediaScannerTest', 1), ('android.hardware.input.cts.tests.SonyDualshock4ProUsbTest', 1), ('android.text.cts.AnnotationTest', 1), ('android.provider.cts.media.MediaStore_Audio_AlbumsTest', 1), ('android.renderscript.cts.ElementTest', 1), ('android.autofillservice.cts.augmented.AugmentedLoginActivityTest', 1)]"	"[('size', 17), ('setUp', 16), ('getInstrumentation', 9), ('getActivity', 8), ('beginTransaction', 8), ('commit', 8), ('getFragmentManager', 6), ('getTargets', 6), ('getEpicenterCallback', 6), ('any', 6), ('length', 5), ('tearDown', 5), ('getContext', 4), ('setup', 4), ('AnimatorFragment', 4), ('getView', 4), ('release', 4), ('getClass', 4), ('getDevice', 3), ('getAction', 2), ('createMultiRectBitmap', 2), ('Paint', 2), ('getWindow', 2), ('teardown', 2), ('getPackageName', 2), ('Configuration', 2), ('makeConfiguration', 2), ('popBackStack', 2), ('splitMediaToMuxerParameters', 2), ('getTrackCount', 2), ('start', 2), ('stop', 2), ('createFormatStringPair', 2), ('MediaMetadataRetriever', 2), ('setupInitialFragment', 2), ('TransitionFragment', 2), ('waitForTransition', 2), ('getTargetContext', 2), ('getPackageManager', 2), ('lock', 2), ('getContentResolver', 2), ('canSerializeAndDeserialize', 1), ('PnoNetwork', 1), ('obtain', 1), ('getSsid', 1), ('getFrequenciesMhz', 1), ('getName', 1), ('countDown', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('getBytes', 1), ('UnlockScreenRule', 1), ('deleteConfig', 1), ('configs', 1), ('CanvasClient', 1), ('getCurrentActivity', 1), ('getContentView', 1), ('login', 1), ('save', 1), ('getAutofillManager', 1), ('cancel', 1), ('separateLogs', 1), ('close', 1), ('AnimationCallback', 1), ('ErrorCollector', 1), ('setToDefaults', 1), ('getDefault', 1), ('showAnimatorsReordered', 1), ('showAnimatorsOrdered', 1), ('hideAnimators', 1), ('animationOnNullContainer', 1), ('postponeEnterTransition', 1), ('startPostponedEnterTransition', 1), ('getSimpleName', 1), ('combineMedias', 1), ('MediaExtractor', 1), ('readSampleData', 1), ('BufferInfo', 1), ('getSampleTime', 1), ('getSampleFlags', 1), ('getSampleTrackIndex', 1), ('advance', 1), ('getArguments', 1), ('prologue', 1), ('getMediaDirString', 1), ('getAbsolutePath', 1), ('epilogue', 1), ('delete', 1), ('input', 1), ('transitionsEndUnchanged', 1), ('showHideTransition', 1), ('findBlue', 1), ('findGreen', 1), ('signal', 1), ('unlock', 1), ('waitForAdapterOn', 1), ('waitForAdapterOff', 1), ('enable', 1), ('cases', 1), ('TextPaint', 1), ('build', 1), ('getUiAutomation', 1), ('anyInt', 1), ('setFlagFalse', 1), ('getDefaultInstance', 1), ('getOp', 1), ('getDescriptorForType', 1), ('getValues', 1), ('resetBatteryStatus', 1), ('Object', 1), ('notifyAll', 1), ('AccessibilityDumpOnFailureRule', 1), ('getService', 1), ('secondServiceChangingTheShowMode_updatesModeAndNotifiesFirstService', 1), ('getSoftKeyboardController', 1), ('getShowMode', 1)]"	"[('CtsWidgetTestCases', 34), ('CtsWindowManagerDeviceTestCases', 32), ('CtsAutoFillServiceTestCases', 19), ('CtsContentTestCases', 11), ('CtsAndroidAppTestCases', 11), ('CtsInputMethodTestCases', 9), ('CtsTelephonyTestCases', 8), ('CtsWifiTestCases', 6), ('CtsFragmentTestCases', 6), ('CtsOsHostTestCases', 5), ('CtsAccessibilityServiceTestCases', 5), ('CtsMediaTestCases', 4), ('CtsCameraTestCases', 4), ('CtsProviderTestCases', 3), ('CtsHardwareTestCases', 2), ('CtsAdminTestCases', 2), ('CtsViewTestCases', 2), ('CtsLegacyNotification29TestCases', 2), ('CtsAnimationTestCases', 2), ('CtsTextTestCases', 2), ('CtsAssistTestCases', 2), ('CtsContactsProviderTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsIkeTestCases', 1), ('CtsUiRenderingTestCases', 1), ('CtsTvTestCases', 1), ('CtsPreferenceTestCases', 1), ('CtsCarTestCases', 1), ('CtsRenderscriptTestCases', 1)]"	""	"7.2.4/C-3-2"	"""C-3-2] MUST report only android.hardware.faketouch. """	"07020400.670302"	"faketouch android.hardware.faketouch hid"	"faketouch hid"	""	""	"[('hid', 212), ('faketouch', 4), ('android.hardware.faketouch', 2)]"	""	"[('[android.autofillservice.cts.DatasetFilteringTest testFilter CtsAutoFillServiceTestCases]', 4), ('[android.fragment.cts.FragmentAnimatorTest getVisibility CtsFragmentTestCases]', 3), ('[android.app.cts.SystemFeaturesTest testTouchScreenFeatures CtsAndroidAppTestCases]', 2), ('[android.app.cts.SystemFeaturesTest testFakeTouchFeatures CtsAndroidAppTestCases]', 2), ('[android.hardware.input.cts.tests.SonyDualshock4ProBluetoothTest SonyDualshock4ProBluetoothTest CtsHardwareTestCases]', 1), ('[android.autofillservice.cts.SimpleSaveActivityTest testTapHomeWhileDatasetPickerUiIsShowing CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.SimpleSaveActivityTest testTapUrlSpanOnSuccinctDescription_tapBackWithoutFinish CtsAutoFillServiceTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSig CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigAndSplit CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigInvalidLength CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteData CtsContentTestCases]', 1), ('[android.content.pm.cts.PackageManagerShellCommandIncrementalTest testInstallWithIdSigStreamIncompleteDataForSplit CtsContentTestCases]', 1), ('[android.autofillservice.cts.LoginActivityTest testDatasetPickerPosition CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.LoginActivityTest testAutofillTapOutside CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.LoginActivityTest testAutofillCallbacks CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.LoginActivityTest testAutoFillOneDatasetAndSaveHidingOverlays CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.LoginActivityTest testCommitMultipleTimes CtsAutoFillServiceTestCases]', 1), ('[android.net.wifi.nl80211.cts.PnoNetworkTest testGetters CtsWifiTestCases]', 1), ('[android.net.wifi.nl80211.cts.PnoNetworkTest isHidden CtsWifiTestCases]', 1), ('[android.net.wifi.nl80211.cts.PnoNetworkTest testEquals CtsWifiTestCases]', 1), ('[android.provider.cts.contacts.ContactsContract_AllUriTest testNoHiddenColumns CtsContactsProviderTestCases]', 1), ('[android.os.cts.EnvironmentTest testNoAtime CtsOsHostTestCases]', 1), ('[android.os.cts.EnvironmentTest testHidePid2 CtsOsHostTestCases]', 1), ('[android.os.cts.EnvironmentTest testHidePid2_direct CtsOsHostTestCases]', 1), ('[android.mediav2.cts.MuxerUnitTest TestName CtsMediaTestCases]', 1), ('[android.widget.cts.ZoomControlsTest testShowAndHide CtsWidgetTestCases]', 1), ('[android.app.cts.NotificationManagerTest testShouldHideSilentStatusIcons CtsAndroidAppTestCases]', 1), ('[android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest testSpoofingPublisher CtsShortcutManagerTestCases]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest beforeAllTests CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testGetVoWiFiSetting_noPermission CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.ImsMmTelManagerTest testAdvancedCallingSetting CtsTelephonyTestCases]', 1), ('[com.android.cts.documentclient.ScopedDirectoryAccessClientTest testInvalidPath None]', 1), ('[android.server.wm.lifecycle.ActivityLifecycleTests testOnNewIntentFromHidden CtsWindowManagerDeviceTestCases]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetApplicationHidden_failIfNotDeviceOrProfileOwner CtsAdminTestCases]', 1), ('[android.admin.cts.DevicePolicyManagerTest testIsApplicationHidden_failIfNotDeviceOrProfileOwner CtsAdminTestCases]', 1), ('[com.android.cts.delegate.PackageAccessDelegateTest testCannotAccessApis None]', 1), ('[com.android.cts.delegate.PackageAccessDelegateTest testCanAccessApis None]', 1), ('[android.view.cts.ViewConfigurationTest testStaticValues CtsViewTestCases]', 1), ('[android.app.cts.DialogTest testShow CtsAndroidAppTestCases]', 1), ('[android.autofillservice.cts.inline.InlineAuthenticationTest testDatasetAuthFilteringUsingRegex CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.PartitionedActivityTest testSaveOneSaveInfoOnFirstPartitionWithIdsOnSecond CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.PartitionedActivityTest testSaveOneSaveInfoOnSecondPartitionWithIdsOnFirst CtsAutoFillServiceTestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnNotificationVisibilityChanged CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationAssistantServiceTest testOnPanelRevealedAndHidden CtsLegacyNotification29TestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testApplicationHiddenParent None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testApplicationHidden None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testNoHiddenActivityFoundTest None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test04_getAndLaunch_primary None]', 1), ('[android.content.pm.cts.shortcut.multiuser.ShortcutManagerManagedUserTest test05_getAndLaunch_managed None]', 1), ('[android.widget.cts.MediaControllerTest testShow CtsWidgetTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes CtsCameraTestCases]', 1), ('[android.net.cts.NetworkStatsBinderTest testAccessUidStatsFromBinder None]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testAvailableStreamConfigs CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest testKeys CtsCameraTestCases]', 1), ('[android.animation.cts.AnimatorSetTest testManipulateChildOutsideOfSet CtsAnimationTestCases]', 1), ('[android.app.cts.ServiceTest testBindIsolatedServiceOnBackgroundThread CtsAndroidAppTestCases]', 1), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest getTestMarker CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testBasicShowHideSoftInput CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testShowHideSoftInputShouldBeIgnoredOnNonFocusedView CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testToggleSoftInput CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testShowHideKeyboardOnWebView CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testFloatingImeHideKeyboardAfterBackPressed CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.KeyboardVisibilityControlTest testImeVisibilityWhenDismisingDialogWithImeFocused CtsInputMethodTestCases]', 1), ('[android.hardware.camera2.cts.CaptureResultTest testResultTimestamps CtsCameraTestCases]', 1), ('[android.net.wifi.cts.WifiInfoTest testWifiInfoProperties CtsWifiTestCases]', 1), ('[android.accessibilityservice.cts.MagnificationGestureHandlerTest EventCapturingTouchListener CtsAccessibilityServiceTestCases]', 1), ('[com.android.cts.signedconfig.SignedConfigHostTest uninstallTestApps None]', 1), ('[android.server.wm.WindowInsetsLayoutTests testSetFitInsetsIgnoringVisibility CtsWindowManagerDeviceTestCases]', 1), ('[android.os.cts.StrictModeTest testNonSdkApiUsage CtsOsHostTestCases]', 1), ('[android.autofillservice.cts.LoginActivity finish CtsAutoFillServiceTestCases]', 1), ('[android.media.tv.cts.TvInputInfoTest testIsHidden CtsTvTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testHide CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testShow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testTopAppHidesStatusBarByMethod CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testTopAppHidesStatusBarByWindowFlag CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testTopAppHidesStatusBarBySystemUiFlag CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testImeShowAndHide CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testSetSystemBarsBehavior_showBarsByTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testSetSystemBarsBehavior_showBarsBySwipe CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testSetSystemBarsBehavior_showTransientBarsBySwipe CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testSystemUiVisibilityCallbackCausedByInsets CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testSetSystemUiVisibilityAfterCleared_showBarsByTouch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testSetSystemUiVisibilityAfterCleared_showBarsBySwipe CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testSetSystemUiVisibilityAfterCleared_showBarsByApp CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testHideOnCreate CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testInsetsDispatch CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsControllerTests testWindowInsetsController_availableAfterAddView CtsWindowManagerDeviceTestCases]', 1), ('[android.content.res.cts.ConfigurationTest testCompareTo CtsContentTestCases]', 1), ('[android.content.res.cts.ConfigurationTest testDiff CtsContentTestCases]', 1), ('[android.content.res.cts.ConfigurationTest testSetToDefaults CtsContentTestCases]', 1), ('[android.content.res.cts.ConfigurationTest testUnset CtsContentTestCases]', 1), ('[android.content.res.cts.ConfigurationTest testSetLocale_overridesSetLocales CtsContentTestCases]', 1), ('[android.preference.cts.PreferenceWithHeadersTest testOnIsHidingHeaders CtsPreferenceTestCases]', 1), ('[android.dumpsys.cts.BatteryStatsDumpsysTest testBatterystatsOutput None]', 1), ('[android.server.wm.AlertWindowsImportanceTests testAlertWindowOomAdj CtsWindowManagerDeviceTestCases]', 1), ('[android.widget.cts.ToolbarTest testMenuOverflowShowHide CtsWidgetTestCases]', 1), ('[android.net.wifi.cts.WifiBackupRestoreTest isNotNull CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiBackupRestoreTest testCanRestoreSoftApBackupData CtsWifiTestCases]', 1), ('[com.android.cts.managedprofile.CurrentApiHelperTest testGetPublicApisIncludeMethods None]', 1), ('[com.android.cts.managedprofile.CurrentApiHelperTest testGetPublicApisExcludeMethods None]', 1), ('[android.server.wm.WindowInsetsAnimationControllerTests testControl_immediately_hide CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationControllerTests testControl_transition_hide CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationControllerTests testControl_transition_hide_interpolator CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationControllerTests testImeControl_isntInterruptedByStartingInput CtsWindowManagerDeviceTestCases]', 1), ('[android.app.cts.AppTaskTests testMoveToFront CtsAndroidAppTestCases]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testCanCreateHiddenFile None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testCanRenameHiddenFile None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testHiddenDirectory None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testHiddenDirectory_nomedia None]', 1), ('[android.scopedstorage.cts.host.ScopedStorageHostTest testListHiddenFile None]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity TestVolumeDndAffectedStream None]', 1), ('[android.fragment.cts.FragmentTransitionTest getVisibility CtsFragmentTestCases]', 1), ('[android.widget.cts.TextViewTest testUndo_imeEmptyBatch CtsWidgetTestCases]', 1), ('[android.provider.cts.SettingsPanelTest isCar CtsProviderTestCases]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testProfileOwnerAppHiddenInPrimaryProfile None]', 1), ('[com.android.cts.devicepolicy.LauncherAppsProfileTest testNoHiddenActivityInProfile None]', 1), ('[android.car.cts.CarBluetoothTest disable CtsCarTestCases]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandFull None]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandInstant None]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandImeFull None]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandImeInstant None]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandImeListFull None]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandImeListInstant None]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandDumpFull None]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandDumpInstant None]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandHelpFull None]', 1), ('[android.inputmethodservice.cts.hostside.ShellCommandFromAppTest testShellCommandHelpInstant None]', 1), ('[android.autofillservice.cts.inline.InlineLoginActivityTest testAutofill_selectDatasetThenHideInlineSuggestion CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.DatasetFilteringTest testFilter_injectingEvents CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.DatasetFilteringTest testFilter_usingKeyboard CtsAutoFillServiceTestCases]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest isNotNull None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest testSetApplicationHidden_systemPackage None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest testSetApplicationHidden_nonSystemPackage None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest testSetApplicationHidden_nonSystemPackageStackTrace None]', 1), ('[android.server.wm.DisplayCutoutTests testDisplayCutout_always CtsWindowManagerDeviceTestCases]', 1), ('[android.animation.cts.LayoutAnimationTest testSetStagger CtsAnimationTestCases]', 1), ('[android.provider.cts.media.MediaStoreUtils testStub CtsProviderTestCases]', 1), ('[android.widget.cts.PopupWindowTest testAccessSoftInputMode CtsWidgetTestCases]', 1), ('[android.assist.cts.LifecycleTest testLayerDoesNotTriggerLifecycleMethods CtsAssistTestCases]', 1), ('[android.assist.cts.LifecycleTest testNoUiLayerDoesNotTriggerLifecycleMethods CtsAssistTestCases]', 1), ('[android.widget.cts.ToastTest testConstructorNullContext CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testShow_whenCustomToast CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testShow_whenTextToast CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessView_whenCustomToast CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToast CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToast CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenCustomToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessDuration_whenTextToastAndWithA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessMargin_whenCustomToast CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testAccessGravity_whenCustomToast CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testRemovedCallbackIsNotCalled CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testCallback_whenTextToast_isCalled CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testCallback_whenCustomToast_isCalled CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testTextToastAllowed_whenInTheForeground CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testCustomToastAllowed_whenInTheForeground CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testTextToastAllowed_whenInTheBackground CtsWidgetTestCases]', 1), ('[android.widget.cts.ToastTest testShow_whenCustomToast_sendsAccessibilityEvent CtsWidgetTestCases]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testCycleFgAppAndAlert CtsAndroidAppTestCases]', 1), ('[android.server.wm.WindowTest testSetFitsContentForInsets_defaultLegacy_sysuiFlags CtsWindowManagerDeviceTestCases]', 1), ('[android.media.cts.CameraProfileTest testGetWithId CtsMediaTestCases]', 1), ('[android.view.cts.MenuInflaterTest testInflateAlphabeticShortcutFromXml CtsViewTestCases]', 1), ('[android.media.cts.MediaScannerTest testMediaScanner CtsMediaTestCases]', 1), ('[android.app.cts.WearableExtenderTest testWearableExtender CtsAndroidAppTestCases]', 1), ('[android.app.cts.WearableExtenderTest testWriteToParcel CtsAndroidAppTestCases]', 1), ('[android.hardware.input.cts.tests.SonyDualshock4ProUsbTest SonyDualshock4ProUsbTest CtsHardwareTestCases]', 1), ('[android.text.cts.AnnotationTest testGetSpanTypeId CtsTextTestCases]', 1), ('[android.cts.statsd.atom.UidAtomTests testHiddenApiUsed None]', 1), ('[android.server.wm.LayoutTests testLayoutAfterRemovingFocus CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.LayoutTests testAddingImmersiveWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.LayoutTests testSysuiFlagLayoutHideNavigation CtsWindowManagerDeviceTestCases]', 1), ('[android.view.inputmethod.cts.SearchViewTest testTapThenSetQuery CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.SearchViewTest testShowImeWhenSearchViewFocusInListView CtsInputMethodTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilitySoftKeyboardTest testApiReturnValues_shouldChangeValueOnRequestAndSendCallback CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilitySoftKeyboardTest disableSelf CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilitySoftKeyboardTest testSwitchToInputMethod CtsAccessibilityServiceTestCases]', 1), ('[android.widget.cts29.ToastTest testConstructorNullContext CtsWidgetTestCases]', 1), ('[android.widget.cts29.ToastTest testShow CtsWidgetTestCases]', 1), ('[android.widget.cts29.ToastTest testAccessView CtsWidgetTestCases]', 1), ('[android.widget.cts29.ToastTest testAccessDuration CtsWidgetTestCases]', 1), ('[android.widget.cts29.ToastTest testAccessDuration_withA11yTimeoutEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts29.ToastTest testAccessMargin CtsWidgetTestCases]', 1), ('[android.widget.cts29.ToastTest testAccessGravity CtsWidgetTestCases]', 1), ('[android.widget.cts29.ToastTest testTextToastAllowed_whenInTheForeground CtsWidgetTestCases]', 1), ('[android.widget.cts29.ToastTest testCustomToastAllowed_whenInTheForeground CtsWidgetTestCases]', 1), ('[android.widget.cts29.ToastTest testTextToastAllowed_whenInTheBackground CtsWidgetTestCases]', 1), ('[android.widget.cts29.ToastTest testCustomToastAllowed_whenInTheBackground CtsWidgetTestCases]', 1), ('[android.provider.cts.media.MediaStore_Audio_AlbumsTest testAlbumArt CtsProviderTestCases]', 1), ('[android.renderscript.cts.ElementTest testDataType CtsRenderscriptTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutoFill_callback CtsAutoFillServiceTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testTelephonyManager CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetCallForwarding CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testSetCallForwarding CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetCallWaitingStatus CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetIsimDomain CtsTelephonyTestCases]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ToastTest.java', 18), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsControllerTests.java', 17), ('/home/gpoor/cts-source/cts/hostsidetests/inputmethodservice/hostside/src/android/inputmethodservice/cts/hostside/ShellCommandFromAppTest.java', 11), ('/home/gpoor/cts-source/cts/tests/tests/widget29/src/android/widget/cts29/ToastTest.java', 11), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/ConfigurationTest.java', 6), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/DatasetFilteringTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 5), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/LoginActivityTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/ScopedStorageHostTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 5), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 4), ('/home/gpoor/cts-source/cts/tests/fragment/src/android/fragment/cts/FragmentAnimatorTest.java', 4), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationControllerTests.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java', 4), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/LayoutTests.java', 4), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/PnoNetworkTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/EnvironmentTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/ImsMmTelManagerTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/PackageAccessDelegateTest.java', 3), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/SimpleSaveActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/PartitionedActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy29/src/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/multiuser/src/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiBackupRestoreTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CurrentApiHelperTest.java', 2), ('/home/gpoor/cts-source/cts/tests/fragment/src/android/fragment/cts/FragmentTransitionTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/LauncherAppsProfileTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/assist/src/android/assist/cts/LifecycleTest.java', 2), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/WearableExtenderTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/atom/UidAtomTests.java', 2), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/SearchViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualshock4ProBluetoothTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_AllUriTest.java', 1), ('/home/gpoor/cts-source/cts/tests/media/src/android/mediav2/cts/MuxerUnitTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ZoomControlsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/DocumentClient/src/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/DialogTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineAuthenticationTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/eap/cts/EapSessionConfigTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/MediaControllerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/NetworkStatsBinderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/animation/src/android/animation/cts/AnimatorSetTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/MagnificationGestureHandlerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/signedconfig/hostside/src/com/android/cts/signedconfig/SignedConfigHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsLayoutTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/StrictModeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/LoginActivity.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AnrTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/cts/TvInputInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/preference/src/android/preference/cts/PreferenceWithHeadersTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/dumpsys/src/android/dumpsys/cts/BatteryStatsDumpsysTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AlertWindowsImportanceTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ToolbarTest.java', 1), ('/home/gpoor/cts-source/cts/tests/media/src/android/mediav2/cts/MuxerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AppTaskTests.java', 1), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/RingerModeActivity.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TextViewTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/SettingsPanelTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarBluetoothTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineLoginActivityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayCutoutTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/animation/src/android/animation/cts/LayoutAnimationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreUtils.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/PopupWindowTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/StaticLayoutGetLineLeftRightTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/CameraProfileTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/MenuInflaterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaScannerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/input/cts/tests/SonyDualshock4ProUsbTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/AnnotationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/ElementTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java', 1)]"	"[('/android/widget/cts/ToastTest.java', 19), ('/android/server/wm/WindowInsetsControllerTests.java', 18), ('/android/inputmethodservice/cts/hostside/ShellCommandFromAppTest.java', 12), ('/android/widget/cts29/ToastTest.java', 12), ('/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 8), ('/android/content/res/cts/ConfigurationTest.java', 7), ('/android/autofillservice/cts/DatasetFilteringTest.java', 7), ('/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java', 6), ('/android/autofillservice/cts/LoginActivityTest.java', 6), ('/android/app/cts/SystemFeaturesTest.java', 6), ('/android/scopedstorage/cts/host/ScopedStorageHostTest.java', 6), ('/android/telephony/cts/TelephonyManagerTest.java', 6), ('/android/fragment/cts/FragmentAnimatorTest.java', 5), ('/android/server/wm/WindowInsetsAnimationControllerTests.java', 5), ('/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java', 5), ('/android/server/wm/LayoutTests.java', 5), ('/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java', 5), ('/android/net/wifi/nl80211/cts/PnoNetworkTest.java', 4), ('/android/os/cts/EnvironmentTest.java', 4), ('/android/telephony/ims/cts/ImsMmTelManagerTest.java', 4), ('/com/android/cts/delegate/PackageAccessDelegateTest.java', 4), ('/android/autofillservice/cts/SimpleSaveActivityTest.java', 3), ('/android/admin/cts/DevicePolicyManagerTest.java', 3), ('/android/autofillservice/cts/PartitionedActivityTest.java', 3), ('/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java', 3), ('/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java', 3), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/android/net/wifi/cts/WifiBackupRestoreTest.java', 3), ('/com/android/cts/managedprofile/CurrentApiHelperTest.java', 3), ('/android/fragment/cts/FragmentTransitionTest.java', 3), ('/com/android/cts/devicepolicy/LauncherAppsProfileTest.java', 3), ('/android/assist/cts/LifecycleTest.java', 3), ('/android/server/wm/WindowTest.java', 3), ('/android/app/cts/WearableExtenderTest.java', 3), ('/android/cts/statsd/atom/UidAtomTests.java', 3), ('/android/view/inputmethod/cts/SearchViewTest.java', 3), ('/android/hardware/input/cts/tests/SonyDualshock4ProBluetoothTest.java', 2), ('/android/provider/cts/contacts/ContactsContract_AllUriTest.java', 2), ('/android/mediav2/cts/MuxerUnitTest.java', 2), ('/android/widget/cts/ZoomControlsTest.java', 2), ('/android/os/cts/HwBinderTest.java', 2), ('/android/app/cts/NotificationManagerTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 2), ('/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java', 2), ('/android/server/wm/lifecycle/ActivityLifecycleTests.java', 2), ('/android/view/cts/ViewConfigurationTest.java', 2), ('/android/app/cts/DialogTest.java', 2), ('/android/autofillservice/cts/inline/InlineAuthenticationTest.java', 2), ('/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 2), ('/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 2), ('/com/android/cts/devicepolicy/DeviceOwnerTest.java', 2), ('/android/net/eap/cts/EapSessionConfigTest.java', 2), ('/android/widget/cts/MediaControllerTest.java', 2), ('/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/android/net/cts/NetworkStatsBinderTest.java', 2), ('/android/animation/cts/AnimatorSetTest.java', 2), ('/android/app/cts/ServiceTest.java', 2), ('/android/hardware/camera2/cts/CaptureResultTest.java', 2), ('/android/net/wifi/cts/WifiInfoTest.java', 2), ('/android/accessibilityservice/cts/MagnificationGestureHandlerTest.java', 2), ('/com/android/cts/signedconfig/SignedConfigHostTest.java', 2), ('/android/server/wm/WindowInsetsLayoutTests.java', 2), ('/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java', 2), ('/android/os/cts/StrictModeTest.java', 2), ('/android/autofillservice/cts/LoginActivity.java', 2), ('/android/server/wm/AnrTests.java', 2), ('/android/media/tv/cts/TvInputInfoTest.java', 2), ('/android/preference/cts/PreferenceWithHeadersTest.java', 2), ('/android/dumpsys/cts/BatteryStatsDumpsysTest.java', 2), ('/android/server/wm/AlertWindowsImportanceTests.java', 2), ('/android/widget/cts/ToolbarTest.java', 2), ('/android/mediav2/cts/MuxerTest.java', 2), ('/android/app/cts/AppTaskTests.java', 2), ('/com/android/cts/verifier/audio/RingerModeActivity.java', 2), ('/android/widget/cts/TextViewTest.java', 2), ('/android/provider/cts/SettingsPanelTest.java', 2), ('/android/car/cts/CarBluetoothTest.java', 2), ('/android/autofillservice/cts/inline/InlineLoginActivityTest.java', 2), ('/android/server/wm/DisplayCutoutTests.java', 2), ('/android/animation/cts/LayoutAnimationTest.java', 2), ('/android/provider/cts/media/MediaStoreUtils.java', 2), ('/android/widget/cts/PopupWindowTest.java', 2), ('/android/text/cts/StaticLayoutGetLineLeftRightTest.java', 2), ('/android/app/cts/ActivityManagerProcessStateTest.java', 2), ('/android/media/cts/CameraProfileTest.java', 2), ('/android/view/cts/MenuInflaterTest.java', 2), ('/android/media/cts/MediaScannerTest.java', 2), ('/android/hardware/input/cts/tests/SonyDualshock4ProUsbTest.java', 2), ('/android/text/cts/AnnotationTest.java', 2), ('/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java', 2), ('/android/renderscript/cts/ElementTest.java', 2), ('/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java', 2)]"	"[('([1:/android/autofillservice/cts/DatasetFilteringTest.java]:[hid]:[1]:method_text:[callback.assertUiHiddenEvent(mActivity.getUsername());         mUiBot.assertNoDatasets();     }     ])', 4), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[hid]:[1]:method_text:[will be public in S, this test      * is commented and will be un-commented in Android S.      *    ])', 4), ('([1:/android/inputmethodservice/cts/hostside/ShellCommandFromAppTest.java]:[hid]:[1]:method_text:[ceiver)} returns {@link SecurityException} for full (non-instant) apps.      */     @AppModeFull    ])', 3), ('([1:/android/inputmethodservice/cts/hostside/ShellCommandFromAppTest.java]:[hid]:[1]:method_text:[    * receiver)} returns {@link SecurityException} for instant apps.      */     @AppModeInstant    ])', 3), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[hid]:[1]:method_text:[                      ""Failure""));         assertFalse(isAppInstalled(TEST_APP_PACKAGE));     }     ])', 2), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[hid]:[3]:method_text:[ (SecurityException e) {             assertProfileOwnerMessage(e.getMessage());         }     }     ])', 2), ('([2:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[2]:method_text:[    PollingCheck.waitFor(TIMEOUT, () -> rootView.getRootWindowInsets().isVisible(types));     }     ])', 2), ('([6:/android/content/res/cts/ConfigurationTest.java]:[hid]:[6]:method_text:[.densityDpi);         assertEquals(Configuration.COLOR_MODE_UNDEFINED, config.colorMode);     }     ])', 2), ('([1:/android/server/wm/WindowInsetsAnimationControllerTests.java]:[hid]:[1]:method_text:[awaitAndAssert(FINISHED);         mListener.assertWasNotCalled(CANCELLED);     }      @Presubmit    ])', 2), ('([1:/android/inputmethodservice/cts/hostside/ShellCommandFromAppTest.java]:[hid]:[1]:method_text:[eceiver)}      * returns {@link SecurityException} for instant apps.      */     @AppModeInstant    ])', 2), ('([2:/android/widget/cts/ToastTest.java]:[hid]:[2]:method_text:[ = SystemClock.uptimeMillis() - start;          assertTrue(longDuration > shortDuration);     }     ])', 2), ('([3:/android/widget/cts/ToastTest.java]:[hid]:[3]:method_text:[ assertTrue(toastShown.block(TIME_OUT));         assertTrue(toastHidden.block(TIME_OUT));     }     ])', 2), ('([1:/android/widget/cts/ToastTest.java]:[hid]:[1]:method_text:[;          mActivityRule.runOnUiThread(mToast::show);          assertShowAndHide(mToast);     }     ])', 2), ('([1:/android/widget/cts29/ToastTest.java]:[hid]:[1]:method_text:[();          mActivityRule.runOnUiThread(mToast::show);          assertShowAndHide(view);     }     ])', 2), ('([1:/android/hardware/input/cts/tests/SonyDualshock4ProBluetoothTest.java]:[hid]:[1]:method_text:[getKernelVersion();         return compareMajorMinorVersion(kVersionString, ""3.18"") >= 0;     }     ])', 1), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[hid]:[1]:method_text:[UiBot.selectDataset(datasetPicker, ""YO2"");         autofillExpecation.assertAutoFilled();     }     ])', 1), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[hid]:[1]:method_text:[     /* start= */ 8,  /* end= */ 15, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);         return ss;     } }])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[hid]:[1]:method_text:[{         installPackage(TEST_APK);         assertTrue(isAppInstalled(TEST_APP_PACKAGE));     }     ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[hid]:[1]:method_text:[ST_APP_PACKAGE));         assertEquals(""base, config.hdpi"", getSplits(TEST_APP_PACKAGE));     }     ])', 1), ('([1:/android/content/pm/cts/PackageManagerShellCommandIncrementalTest.java]:[hid]:[1]:method_text:[_APP_PACKAGE));     }      static class TestDataLoaderService extends DataLoaderService {     }     ])', 1), ('([3:/android/autofillservice/cts/LoginActivityTest.java]:[hid]:[3]:method_text:[daries1);          // Final sanity check         callback.assertNumberUnhandledEvents(0);     }     ])', 1), ('([2:/android/autofillservice/cts/LoginActivityTest.java]:[hid]:[2]:method_text:[()));         callback.assertUiHiddenEvent(username);          mUiBot.assertNoDatasets();     }     ])', 1), ('([1:/android/autofillservice/cts/LoginActivityTest.java]:[hid]:[1]:method_text:[Dataset(""The Dude"");          // Check the results.         mActivity.assertAutoFilled();     }     ])', 1), ('([2:/android/autofillservice/cts/LoginActivityTest.java]:[hid]:[2]:method_text:[ } catch (Exception e) {                 mSafeCleanerRule.add(e);             }         }     }     ])', 1), ('([1:/android/autofillservice/cts/LoginActivityTest.java]:[hid]:[1]:method_text:[) {                 throw new Throwable(""Error on step "" + i, t);             }         }     }     ])', 1), ('([2:/android/net/wifi/nl80211/cts/PnoNetworkTest.java]:[hid]:[2]:method_text:[nciesMhz()).isEqualTo(TEST_FREQUENCIES);         assertThat(network.isHidden()).isTrue();     }     ])', 1), ('([2:/android/net/wifi/nl80211/cts/PnoNetworkTest.java]:[hid]:[2]:method_text:[twork);         assertThat(networkDeserialized.hashCode()).isEqualTo(network.hashCode());     }     ])', 1), ('([2:/android/net/wifi/nl80211/cts/PnoNetworkTest.java]:[hid]:[2]:method_text:[3 });         network.setHidden(false);          assertThat(network2).isNotEqualTo(network);     } }])', 1), ('([3:/android/provider/cts/contacts/ContactsContract_AllUriTest.java]:[hid]:[3]:method_text:[o much time. //    /** //     * Make sure all URLs are accessible with a projection. //     */ //   ])', 1), ('([1:/android/os/cts/EnvironmentTest.java]:[hid]:[1]:method_text:[               }             }         }     }      /**      * verify hidepid=2 on /proc      */    ])', 1), ('([3:/android/os/cts/EnvironmentTest.java]:[hid]:[3]:method_text:[l(""proc filesystem mounted without hidepid=2"");                 }             }         }     }     ])', 1), ('([1:/android/os/cts/EnvironmentTest.java]:[hid]:[1]:method_text:[itable block filesystems are mounted with ""resgid"" to      * mitigate disk-full trouble.      */    ])', 1), ('([1:/android/mediav2/cts/MuxerUnitTest.java]:[hid]:[1]:method_text:[taInfo.flags = 0;             muxer.writeSampleData(trackID, metaBuff, metaInfo);         }         ])', 1), ('([2:/android/widget/cts/ZoomControlsTest.java]:[hid]:[2]:method_text:[ow();         assertEquals(View.VISIBLE, zoomControls.getVisibility());     }      @UiThreadTest    ])', 1), ('([3:/android/os/cts/HwBinderTest.java]:[hid]:[3]:method_text:[fset), 0.0);             assertEquals(2.0, blob.getDouble(offset + 8), 0.0);         }),     };     ])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[faketouch]:[2]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([12:/android/app/cts/SystemFeaturesTest.java]:[faketouch]:[12]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[android.hardware.faketouch]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([5:/android/app/cts/SystemFeaturesTest.java]:[android.hardware.faketouch]:[5]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([3:/android/app/cts/NotificationManagerTest.java]:[hid]:[3]:method_text:[ // no exception this time         mNotificationManager.shouldHideSilentStatusBarIcons();     }     ])', 1), ('([3:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[hid]:[3]:method_text:[           assertEquals(""title3"", s.getShortLabel());                     });         });     }     ])', 1), ('([1:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[hid]:[1]:method_text:[)) {             fail(""This test requires that there is a SIM in the device!"");         }     }     ])', 1), ('([2:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[hid]:[2]:method_text:[lling setting is returned. Also ensure the      * ContentObserver is triggered properly.      */    ])', 1), ('([1:/android/telephony/ims/cts/ImsMmTelManagerTest.java]:[hid]:[1]:method_text:[t is queried successfully. Also ensure the ContentObserver      * is triggered properly.      */    ])', 1), ('([1:/com/android/cts/documentclient/ScopedDirectoryAccessClientTest.java]:[hid]:[1]:method_text:[;         }         openExternalDirectoryInvalidPath(getPrimaryVolume(), DIRECTORY_ROOT);     }     ])', 1), ('([1:/android/server/wm/lifecycle/ActivityLifecycleTests.java]:[hid]:[1]:method_text:[ngleTopActivity.class, getLifecycleLog(),                 expectedSequence, ""newIntent"");     }     ])', 1), ('([1:/com/android/cts/delegate/PackageAccessDelegateTest.java]:[hid]:[1]:method_text:[ation().getContext();         mDpm = context.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([5:/com/android/cts/delegate/PackageAccessDelegateTest.java]:[hid]:[5]:method_text:[agesSuspended(null, new String[] {TEST_APP_PKG}, true /* suspend */);                 });     }     ])', 1), ('([9:/com/android/cts/delegate/PackageAccessDelegateTest.java]:[hid]:[9]:method_text:[legatedScopes(null, packageName);         return scopes.contains(DELEGATION_PACKAGE_ACCESS);     } }])', 1), ('([1:/android/view/cts/ViewConfigurationTest.java]:[hid]:[1]:method_text:[ration.getKeyRepeatDelay();         ViewConfiguration.getDefaultActionModeHideDuration();     }     ])', 1), ('([1:/android/app/cts/DialogTest.java]:[hid]:[1]:method_text:[ assertTrue(d.isShowing());         dialogDismiss(d);         assertFalse(d.isShowing());     }     ])', 1), ('([1:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[hid]:[1]:method_text:[.assertNoDatasets();          // Check the results.         mActivity.assertAutoFilled();     }     ])', 1), ('([1:/android/autofillservice/cts/PartitionedActivityTest.java]:[hid]:[1]:method_text:[eplier.getNextSaveRequest();         assertValue(saveRequest.structure, ID_L2C1, ""L2C1"");     }     ])', 1), ('([1:/android/autofillservice/cts/PartitionedActivityTest.java]:[hid]:[1]:method_text:[eplier.getNextSaveRequest();         assertValue(saveRequest.structure, ID_L1C1, ""L1C1"");     }     ])', 1), ('([3:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[hid]:[3]:method_text:[ssistantService.notificationHiddenCount > 0);          mUi.dropShellPermissionIdentity();     }     ])', 1), ('([1:/android/app/notification/legacy29/cts/NotificationAssistantServiceTest.java]:[hid]:[1]:method_text:[e(mNotificationAssistantService.isPanelOpen);          mUi.dropShellPermissionIdentity();     }     ])', 1), ('([2:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[hid]:[2]:method_text:[         runDeviceTestsAsUser(DEVICE_ADMIN_PKG, "".ApplicationHiddenParentTest"", mUserId);     }     ])', 1), ('([8:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[hid]:[8]:method_text:[S_APP_PKG, ""not_hidden"", NOT_CALLED_FROM_PARENT)                     .build());         }     }     ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[hid]:[2]:method_text:[         getDevice().uninstallPackage(BaseLauncherAppsTest.LAUNCHER_TESTS_APK);         }     }     ])', 1), ('([1:/android/net/eap/cts/EapSessionConfigTest.java]:[hid]:[1]:method_text:[APV2_USERNAME = ""username"";     private static final String EAP_MSCHAPV2_PASSWORD = ""password"";     ])', 1), (""([2:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[hid]:[2]:method_text:[r);     }      @Suppress // Having a launcher on managed profile is not supported, so don't run.    ])"", 1), ('([1:/android/content/pm/cts/shortcut/multiuser/ShortcutManagerManagedUserTest.java]:[hid]:[1]:method_text:[           return user;         }         fail(""Other user not found"");         return null;     } }])', 1), ('([1:/android/widget/cts/MediaControllerTest.java]:[hid]:[1]:method_text:[());         }          return mActivity.getFileStreamPath(VIDEO_NAME).getAbsolutePath();     }     ])', 1), ('([1:/android/hardware/camera2/cts/CaptureRequestTest.java]:[hid]:[1]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;             }         }     } }])', 1), ('([2:/android/net/cts/NetworkStatsBinderTest.java]:[hid]:[2]:method_text:[ (RemoteException e) {                     return;                 }             }         }     } }])', 1), ('([3:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[hid]:[3]:method_text:[yConfig);             }         } finally {             closeDevice(cameraId);         }      }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[hid]:[1]:method_text:[     }     }      /**      * Test values for static metadata used by the RAW capability.      */    ])', 1), (""([7:/android/animation/cts/AnimatorSetTest.java]:[hid]:[7]:method_text:[     *      * This test verifies that custom ValueAnimators will be start()'ed in a set.      */    ])"", 1), ('([1:/android/app/cts/ServiceTest.java]:[hid]:[1]:method_text:[I >= orderItems.length) {                 return;             }         }     }      @MediumTest    ])', 1), ('([2:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[hid]:[2]:method_text:[onNull String marker) {         return launchTestActivity(marker, getTestMarker()).first;     }     ])', 1), ('([5:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[hid]:[5]:method_text:[                  View.GONE, TIMEOUT);             expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([4:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[hid]:[4]:method_text:[eam, hideSoftInputMatcher(), TIMEOUT);             expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([2:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[hid]:[2]:method_text:[nishInputViewMatcher(false), TIMEOUT);             expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[hid]:[1]:method_text:[ntName()),                     TIMEOUT);             expectImeVisible(TIMEOUT);         }     }     ])', 1), ('([2:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[hid]:[2]:method_text:[                  View.GONE, TIMEOUT);             expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([4:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[hid]:[4]:method_text:[nsure it.         builder.setNavigationBarColor(navigationBarColor);         return builder;     } }])', 1), ('([1:/android/hardware/camera2/cts/CaptureResultTest.java]:[hid]:[1]:method_text:[* End generated code      *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/ }])', 1), ('([1:/android/net/wifi/cts/WifiInfoTest.java]:[hid]:[1]:method_text:[ that was set, and that      * calling build multiple times returns different instances.      */    ])', 1), ('([1:/android/accessibilityservice/cts/MagnificationGestureHandlerTest.java]:[faketouch]:[1]:method_text:[asTouchscreen) return;          setMagnificationEnabled(mOriginalIsMagnificationEnabled);     }     ])', 1), ('([1:/com/android/cts/signedconfig/SignedConfigHostTest.java]:[hid]:[1]:method_text:[  assertThat(getDevice().installPackage(getTestApk(apkName), false, extraArgs)).isNull();     }     ])', 1), ('([1:/android/server/wm/WindowInsetsLayoutTests.java]:[hid]:[1]:method_text:[      assertEquals(locationOnScreen[1] /* expected y */, windowMetricsBounds.top);         }     } }])', 1), ('([1:/android/uirendering/cts/testclasses/ColorFilterAlphaTest.java]:[hid]:[1]:method_text:[R_COLOR, mConfig.mode));             canvas.drawBitmap(mBitmap, 0, 0, mPaint);         }     };     ])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[hid]:[1]:method_text:[VmPolicy(oldVmPolicy);             StrictMode.setThreadPolicy(oldThreadPolicy);         }     }     ])', 1), ('([1:/android/autofillservice/cts/LoginActivity.java]:[hid]:[1]:method_text:[re checking autofill      * behavior.      * <pre>      * An example usage is:      * <code>      * ])', 1), ('([6:/android/server/wm/AnrTests.java]:[hid]:[6]:method_text:[SIVE_ACTIVITY.getPackageName());         stopTestPackage(HOST_ACTIVITY.getPackageName());     }     ])', 1), ('([2:/android/media/tv/cts/TvInputInfoTest.java]:[hid]:[2]:method_text:[)) {             return;         }         assertFalse(mStubInfo.isHidden(getContext()));     }     ])', 1), ('([2:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[2]:method_text:[EM_DIALOGS"";      @Rule     public final ErrorCollector mErrorCollector = new ErrorCollector();     ])', 1), ('([5:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[5]:method_text:[Check.waitFor(TIMEOUT, () -> !rootView.getRootWindowInsets().isVisible(types));         }     }     ])', 1), ('([6:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[6]:method_text:[le(statusBars()));                 SystemClock.sleep(TIME_SLICE);             }         }     }     ])', 1), ('([3:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[3]:method_text:[rootView,                 () -> rootView.getWindowInsetsController().hide(statusBars()));     }     ])', 1), ('([2:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[2]:method_text:[ctivity, rootView,                 () -> activity.getWindow().addFlags(FLAG_FULLSCREEN));     }     ])', 1), ('([2:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[2]:method_text:[otView,                 () -> rootView.setSystemUiVisibility(SYSTEM_UI_FLAG_FULLSCREEN));     }     ])', 1), ('([2:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[2]:method_text:[Check.waitFor(TIMEOUT, () -> !rootView.getRootWindowInsets().isVisible(ime()));         }     }     ])', 1), ('([1:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[1]:method_text:[    PollingCheck.waitFor(TIMEOUT, () -> rootView.getRootWindowInsets().isVisible(types));     }     ])', 1), ('([1:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[1]:method_text:[   PollingCheck.waitFor(TIMEOUT, () -> !rootView.getRootWindowInsets().isVisible(types));     }     ])', 1), ('([2:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[2]:method_text:[          targetSysUiVis[0] == 0 && targetSysUiVis[0] == nonTargetSysUiVis[0]);         }     }     ])', 1), ('([4:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[4]:method_text:[    PollingCheck.waitFor(TIMEOUT, () -> rootView.getRootWindowInsets().isVisible(types));     }     ])', 1), ('([2:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[2]:method_text:[s.             launchHomeActivity();             broadcastCloseSystemDialogs();         }     }     ])', 1), ('([3:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[3]:method_text:[                         && !rootView.getRootWindowInsets().isVisible(navigationBars()));     }     ])', 1), ('([6:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[6]:method_text:[tusBars()));             assertFalse(windowInsets.isVisible(navigationBars()));         }     }     ])', 1), ('([8:/android/server/wm/WindowInsetsControllerTests.java]:[hid]:[8]:method_text:[ck(ANIMATION_CALLBACK);             getWindow().getInsetsController().show(ime());         }     } }])', 1), ('([2:/android/content/res/cts/ConfigurationTest.java]:[hid]:[2]:method_text:[ation.NAVIGATION_NONAV;         mConfig.orientation = Configuration.ORIENTATION_PORTRAIT;     }     ])', 1), ('([4:/android/content/res/cts/ConfigurationTest.java]:[hid]:[4]:method_text:[fontScale = 3;         cfg2.fontScale = 2;         assertEquals(1, cfg1.compareTo(cfg2));     }     ])', 1), ('([13:/android/content/res/cts/ConfigurationTest.java]:[hid]:[13]:method_text:[FIG_FONT_SCALE                 | ActivityInfo.CONFIG_COLOR_MODE, mConfigDefault, config);     }     ])', 1), ('([6:/android/content/res/cts/ConfigurationTest.java]:[hid]:[6]:method_text:[ assertEquals(config, readConf);         } finally {             parcel.recycle();         }     } }])', 1), ('([2:/android/preference/cts/PreferenceWithHeadersTest.java]:[hid]:[2]:method_text:[public void testOnIsHidingHeaders() {         assertFalse(mActivity.onIsHidingHeaders());     } } ])', 1), ('([5:/android/dumpsys/cts/BatteryStatsDumpsysTest.java]:[hid]:[5]:method_text:[     * Tests the output of ""dumpsys gfxinfo framestats"".      *      * @throws Exception      */    ])', 1), ('([1:/android/server/wm/AlertWindowsImportanceTests.java]:[hid]:[1]:method_text:[guration.UI_MODE_TYPE_VR_HEADSET) {             return true;         }         return false;     } }])', 1), ('([1:/android/fragment/cts/FragmentAnimatorTest.java]:[hid]:[1]:method_text:[d popping a Fragment uses the enter and popExit animators     // This tests ordered transactions    ])', 1), ('([2:/android/fragment/cts/FragmentAnimatorTest.java]:[hid]:[2]:method_text:[});     }      // Ensure that hiding and popping a Fragment uses the exit and popEnter animators    ])', 1), ('([2:/android/fragment/cts/FragmentAnimatorTest.java]:[hid]:[2]:method_text:[     }      // Ensure that attaching and popping a Fragment uses the enter and popExit animators    ])', 1), ('([1:/android/fragment/cts/FragmentAnimatorTest.java]:[hid]:[1]:method_text:[ceId = nextAnim;             this.enter = enter;             return this.animator;         }     } }])', 1), ('([3:/android/widget/cts/ToolbarTest.java]:[hid]:[3]:method_text:[erflowMenu());         PollingCheck.waitFor(() -> !mMainToolbar.isOverflowMenuShowing());     }     ])', 1), (""([1:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[hid]:[1]:method_text:[     * a no-op, will only ensure that the device does not crash when invoking the API's.      */    ])"", 1), ('([2:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[hid]:[2]:method_text:[ is deserialized correctly from AOSP      * legacy supplicant/ipconf backup data format.      */    ])', 1), ('([1:/com/android/cts/managedprofile/CurrentApiHelperTest.java]:[hid]:[1]:method_text:[tApiHelper#getPublicApis} excludes private, hidden or {@code @SystemApi}      * methods.      */    ])', 1), ('([2:/com/android/cts/managedprofile/CurrentApiHelperTest.java]:[hid]:[2]:method_text:[icApis.contains(systemMethod));     }      /** Test for {@link CurrentApiHelper#instantiate}. */    ])', 1), ('([1:/android/mediav2/cts/MuxerTest.java]:[hid]:[1]:method_text:[   currRotation, Integer.parseInt(testDegrees));             retriever.release();         }         ])', 1), ('([1:/android/server/wm/WindowInsetsAnimationControllerTests.java]:[hid]:[1]:method_text:[     mListener.awaitAndAssert(FINISHED);         mListener.assertWasNotCalled(CANCELLED);     }     ])', 1), ('([3:/android/server/wm/WindowInsetsAnimationControllerTests.java]:[hid]:[3]:method_text:[(mCount - LIMIT) + "" errors skipped.""));             }             super.verify();         }     } }])', 1), ('([1:/android/app/cts/AppTaskTests.java]:[hid]:[1]:method_text:[ure that starting a new activity in the same task results in two activities in the task.      */    ])', 1), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[hid]:[2]:method_text:[anCreateHiddenFile() throws Exception {         runDeviceTest(""testCanCreateHiddenFile"");     }     ])', 1), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[hid]:[2]:method_text:[anRenameHiddenFile() throws Exception {         runDeviceTest(""testCanRenameHiddenFile"");     }     ])', 1), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[hid]:[2]:method_text:[id testHiddenDirectory() throws Exception {         runDeviceTest(""testHiddenDirectory"");     }     ])', 1), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[hid]:[2]:method_text:[ectory_nomedia() throws Exception {         runDeviceTest(""testHiddenDirectory_nomedia"");     }     ])', 1), ('([2:/android/scopedstorage/cts/host/ScopedStorageHostTest.java]:[hid]:[2]:method_text:[void testListHiddenFile() throws Exception {         runDeviceTest(""testListHiddenFile"");     }     ])', 1), ('([1:/com/android/cts/verifier/audio/RingerModeActivity.java]:[hid]:[1]:method_text:[dioManager.getStreamVolume(AudioManager.STREAM_MUSIC));              status = PASS;         }     } ])', 1), ('([1:/android/fragment/cts/FragmentTransitionTest.java]:[hid]:[1]:method_text:[rCallback());     }      // Ensure that transitions are done when a fragment is shown and hidden    ])', 1), ('([2:/android/fragment/cts/FragmentTransitionTest.java]:[hid]:[2]:method_text:[gment2);     }      // Ensure that transitions are done when a fragment is attached and detached    ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[hid]:[1]:method_text:[uItem(android.R.id.redo);         assertEquals(""flower"", mTextView.getText().toString());     }     ])', 1), ('([1:/android/provider/cts/SettingsPanelTest.java]:[faketouch]:[1]:method_text:[ect(By.pkg(mLauncherPackage).depth(0)), TIMEOUT);     }      // Check correct package is opened     ])', 1), ('([1:/com/android/cts/devicepolicy/LauncherAppsProfileTest.java]:[hid]:[1]:method_text:[        mParentUserId, Collections.singletonMap(PARAM_TEST_USER, mMainUserSerialNumber));     }     ])', 1), ('([1:/com/android/cts/devicepolicy/LauncherAppsProfileTest.java]:[hid]:[1]:method_text:[UserId, Collections.singletonMap(PARAM_TEST_USER, mMainUserSerialNumber));     }      @FlakyTest    ])', 1), ('([2:/android/car/cts/CarBluetoothTest.java]:[hid]:[2]:method_text:[ented), or for the     // configured timeout. If all required profiles connect, the test passes.    ])', 1), ('([3:/android/inputmethodservice/cts/hostside/ShellCommandFromAppTest.java]:[hid]:[3]:method_text:[}      * returns {@link SecurityException} for full (non-instant) apps.      */     @AppModeFull    ])', 1), ('([1:/android/inputmethodservice/cts/hostside/ShellCommandFromAppTest.java]:[hid]:[1]:method_text:[}      * returns {@link SecurityException} for full (non-instant) apps.      */     @AppModeFull    ])', 1), ('([1:/android/inputmethodservice/cts/hostside/ShellCommandFromAppTest.java]:[hid]:[1]:method_text:[runDeviceTestMethodWithoutHiddenApiCheck(DeviceTestConstants.TEST_SHELL_COMMAND_HELP, true);     } }])', 1), ('([1:/android/autofillservice/cts/inline/InlineLoginActivityTest.java]:[hid]:[1]:method_text:[             findNodeByResourceId(request.structure, ID_PASSWORD).isFocused()).isFalse();     }     ])', 1), ('([1:/android/autofillservice/cts/DatasetFilteringTest.java]:[hid]:[1]:method_text:[ould be shown again         changeUsername("""");         mUiBot.assertDatasets(aa, ab, b);     }     ])', 1), ('([1:/android/autofillservice/cts/DatasetFilteringTest.java]:[hid]:[1]:method_text:[et back to all choices         changeUsername("""");         mUiBot.assertDatasets(aa, ab, b);     } }])', 1), ('([4:/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java]:[hid]:[4]:method_text:[IVER_COMPONENT,                 SYSTEM_PACKAGE_TO_HIDE, false);         super.tearDown();     }     ])', 1), ('([12:/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java]:[hid]:[12]:method_text:[       assertThat(mPackageManager.getPackageInfo(SYSTEM_PACKAGE_TO_HIDE, 0)).isNotNull();     }     ])', 1), ('([5:/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java]:[hid]:[5]:method_text:[IN_RECEIVER_COMPONENT,                     NON_SYSTEM_NON_INSTALLED_PACKAGE);         });     }     ])', 1), ('([3:/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java]:[hid]:[3]:method_text:[      assertThat(stackTrace1[i].toString()).isEqualTo(stackTrace2[i].toString());         }     }  }])', 1), ('([2:/android/server/wm/DisplayCutoutTests.java]:[hid]:[2]:method_text:[out cutout, Which whichInsets);          enum Which {             DISPATCHED, ROOT         }     } }])', 1), ('([4:/android/animation/cts/LayoutAnimationTest.java]:[hid]:[4]:method_text:[ild) {             super.showChild(parent, child);             mShowChild = true;         }     } } ])', 1), ('([5:/android/provider/cts/media/MediaStoreUtils.java]:[hid]:[5]:method_text:[least we can inform people that no             // progress is being actively made.         }     } }])', 1), ('([2:/android/widget/cts/PopupWindowTest.java]:[hid]:[2]:method_text:[r.LayoutParams.SOFT_INPUT_STATE_HIDDEN,                 mPopupWindow.getSoftInputMode());     }     ])', 1), ('([1:/android/text/cts/StaticLayoutGetLineLeftRightTest.java]:[hid]:[1]:method_text:[ign == Alignment.ALIGN_CENTER */                 mExpectedAlign = ALIGN_CENTER;         }     }     ])', 1), ('([1:/android/assist/cts/LifecycleTest.java]:[hid]:[1]:method_text:[CLE_ACTIVITY);         m3pActivityCallback.sendResult(bundle);          waitForDestroy();     }     ])', 1), ('([1:/android/assist/cts/LifecycleTest.java]:[hid]:[1]:method_text:[            } else {                 super.onAction(bundle, action);             }         }     } }])', 1), ('([1:/android/widget/cts/ToastTest.java]:[hid]:[1]:method_text:[.getUiAutomation();         mLayoutListener = () -> mLayoutDone = true;     }      @UiThreadTest    ])', 1), ('([5:/android/widget/cts/ToastTest.java]:[hid]:[5]:method_text:[USTOM_TOAST_TEXT);                     mToast.setView(view);                 }         );     }     ])', 1), ('([1:/android/widget/cts/ToastTest.java]:[hid]:[1]:method_text:[rtEquals(View.VISIBLE, view.getVisibility());         assertShowAndHideCustomToast(view);     }     ])', 1), ('([1:/android/widget/cts/ToastTest.java]:[hid]:[1]:method_text:[tyRule.runOnUiThread(mToast::show);          assertShowAndHide(mToast);     }      @UiThreadTest    ])', 1), ('([1:/android/widget/cts/ToastTest.java]:[hid]:[1]:method_text:[assertSame(imageView, mToast.getView());         assertShowAndHideCustomToast(imageView);     }     ])', 1), ('([2:/android/widget/cts/ToastTest.java]:[hid]:[2]:method_text:[          putSecureSetting(SETTINGS_ACCESSIBILITY_UI_TIMEOUT, originalSetting);         }     }     ])', 1), ('([2:/android/widget/cts/ToastTest.java]:[hid]:[2]:method_text:[("" "")                 .append(value);         SystemUtil.runShellCommand(cmd.toString());     }     ])', 1), ('([2:/android/widget/cts/ToastTest.java]:[hid]:[2]:method_text:[          assertTrue(xy1[0] > xy2[0]);             assertTrue(xy1[1] < xy2[1]);         }     }     ])', 1), ('([3:/android/widget/cts/ToastTest.java]:[hid]:[3]:method_text:[XY[0]);         assertEquals(bottomXY[1] - yOffset, bottomOffsetXY[1]);     }      @UiThreadTest    ])', 1), ('([7:/android/widget/cts/ToastTest.java]:[hid]:[7]:method_text:[st);         assertFalse(toastShown.isDone());         assertFalse(toastHidden.isDone());     }     ])', 1), ('([1:/android/widget/cts/ToastTest.java]:[hid]:[1]:method_text:[  mActivityRule.runOnUiThread(mToast::show);          assertShowAndHideCustomToast(view);     }     ])', 1), ('([6:/android/widget/cts/ToastTest.java]:[hid]:[6]:method_text:[  @Override         public void onToastHidden() {             mToastHidden.open();         }     } }])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[hid]:[1]:method_text:[cher.finish();             uid2Watcher.finish();             uid3Watcher.finish();         }     } }])', 1), ('([1:/android/server/wm/WindowTest.java]:[hid]:[1]:method_text:[f (mActivity != null) {             mActivity.setFlagFalse();         }     }      @UiThreadTest    ])', 1), ('([1:/android/server/wm/WindowTest.java]:[hid]:[1]:method_text:[SystemWindowInsets(),                 mActivity.getLastInsets().getSystemWindowInsets());     }     ])', 1), ('([1:/android/media/cts/CameraProfileTest.java]:[hid]:[1]:method_text:[rameter(id, CameraProfile.QUALITY_HIGH);             checkQuality(low, mid, high);         }     } }])', 1), (""([6:/android/view/cts/MenuInflaterTest.java]:[hid]:[6]:method_text:[als('c', mMenu.findItem(R.id.hidden_by_group).getAlphabeticShortcut());     }      @UiThreadTest    ])"", 1), ('([1:/android/media/cts/MediaScannerTest.java]:[hid]:[1]:method_text:[1b);          mMediaScannerConnection.disconnect();          checkConnectionState(false);     }     ])', 1), ('([2:/android/app/cts/WearableExtenderTest.java]:[hid]:[2]:method_text:[(1, extender.getPages().size());         assertEquals(page2, extender.getPages().get(0));     }     ])', 1), ('([2:/android/app/cts/WearableExtenderTest.java]:[hid]:[2]:method_text:[ion.Builder(0, ""title"", null);     }      /** Notification.Action.WearableExtender functions */     ])', 1), ('([1:/android/hardware/input/cts/tests/SonyDualshock4ProUsbTest.java]:[hid]:[1]:method_text:[getKernelVersion();         return compareMajorMinorVersion(kVersionString, ""3.18"") >= 0;     }     ])', 1), (""([1:/android/text/cts/AnnotationTest.java]:[hid]:[1]:method_text:[an assert the return value isn't 0.         assertTrue(mAnnotation.getSpanTypeId() != 0);     }     ])"", 1), ('([1:/android/cts/statsd/atom/UidAtomTests.java]:[hid]:[1]:method_text:[oid tearDown() throws Exception {         resetBatteryStatus();         super.tearDown();     }     ])', 1), ('([9:/android/cts/statsd/atom/UidAtomTests.java]:[hid]:[9]:method_text:[""device_config delete hidden_api_access_statslog_sampling_rate"");             }         }     }     ])', 1), ('([5:/android/server/wm/LayoutTests.java]:[hid]:[5]:method_text:[solver(),                     WINDOW_ANIMATION_SCALE, mWindowAnimationScale);         });     }     ])', 1), ('([2:/android/server/wm/LayoutTests.java]:[hid]:[2]:method_text:[m.         assertEquals(visibleFrameBeforeAddingWindow, visibleFrameAfterRemovingWindow);     }     ])', 1), ('([3:/android/server/wm/LayoutTests.java]:[hid]:[3]:method_text:[         assertFalse(""System UI flags must not be cleared."", systemUiFlagsGotCleared[0]);     }     ])', 1), ('([2:/android/server/wm/LayoutTests.java]:[hid]:[2]:method_text:[cted void onPause() {             super.onPause();             removeAllWindows();         }     } }])', 1), ('([2:/android/view/inputmethod/cts/SearchViewTest.java]:[hid]:[2]:method_text:[uals(event.getEventName()), TIMEOUT);              expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/SearchViewTest.java]:[hid]:[1]:method_text:[w getView(int i, View view, ViewGroup viewGroup) {             return mSearchView;         }     } }])', 1), ('([1:/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java]:[hid]:[1]:method_text:[strumentationRegistry.getInstrumentation();         mService = mServiceRule.getService();     }     ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java]:[hid]:[1]:method_text:[ our listener.         assertTrue(controller.removeOnShowModeChangedListener(mListener));     }     ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java]:[hid]:[1]:method_text:[nService(() -> controller.getShowMode());         assertEquals(SHOW_MODE_AUTO, showMode);     }     ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilitySoftKeyboardTest.java]:[hid]:[1]:method_text:[            .addCommand(ShellCommandUtils.resetImes())                     .run();         }     } }])', 1), ('([1:/android/widget/cts29/ToastTest.java]:[hid]:[1]:method_text:[USTOM_TOAST_TEXT);                     mToast.setView(view);                 }         );     }     ])', 1), ('([1:/android/widget/cts29/ToastTest.java]:[hid]:[1]:method_text:[s(View.VISIBLE, view.getVisibility());         assertShowAndHide(view);     }      @UiThreadTest    ])', 1), ('([1:/android/widget/cts29/ToastTest.java]:[hid]:[1]:method_text:[);         assertSame(imageView, mToast.getView());         assertShowAndHide(imageView);     }     ])', 1), ('([2:/android/widget/cts29/ToastTest.java]:[hid]:[2]:method_text:[ = SystemClock.uptimeMillis() - start;          assertTrue(longDuration > shortDuration);     }     ])', 1), ('([2:/android/widget/cts29/ToastTest.java]:[hid]:[2]:method_text:[("" "")                 .append(value);         SystemUtil.runShellCommand(cmd.toString());     }     ])', 1), ('([2:/android/widget/cts29/ToastTest.java]:[hid]:[2]:method_text:[          assertTrue(xy1[0] > xy2[0]);             assertTrue(xy1[1] < xy2[1]);         }     }     ])', 1), ('([3:/android/widget/cts29/ToastTest.java]:[hid]:[3]:method_text:[XY[0]);         assertEquals(bottomXY[1] - yOffset, bottomOffsetXY[1]);     }      @UiThreadTest    ])', 1), ('([1:/android/widget/cts29/ToastTest.java]:[hid]:[1]:method_text:[));          mActivityRule.runOnUiThread(mToast::show);          assertShowAndHide(view);     }     ])', 1), ('([1:/android/widget/cts29/ToastTest.java]:[hid]:[1]:method_text:[vityRule.runOnUiThread(mToast::show);          assertShowAndHide(view);     }      @UiThreadTest    ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java]:[hid]:[1]:method_text:[xception expected) {             }          } finally {             path.delete();         }     } }])', 1), ('([1:/android/renderscript/cts/ElementTest.java]:[hid]:[1]:method_text:[ption e) {                 }                 break;             }             }         }     }     ])', 1), ('([2:/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java]:[hid]:[2]:method_text:[;         mAugmentedUiBot.assertUiGone();         callback.assertUiHiddenEvent(username);     }     ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[hid]:[1]:method_text:[* and has the correct permissions.      */     @Ignore(""API moved back to @hide for Android R."")    ])', 1)]"	""	""	""	""	""
"169:533444) 7.2.4  . Touchscreen Input"	"7.2.4"	"C-3-3"	""	"[('android.content.res.cts.ConfigTest', 8), ('android.content.res.cts.ConfigurationTest', 5), ('android.app.cts.SystemFeaturesTest', 4), ('android.server.wm.ActivityManagerGetConfigTests', 1)]"	"[('setUp', 5), ('Configuration', 5), ('makeConfiguration', 4), ('size', 3), ('setToDefaults', 2), ('getDefault', 2), ('getInstrumentation', 2), ('toLanguageTag', 2), ('getTargetContext', 1), ('getPackageManager', 1), ('getUiAutomation', 1), ('ByteArrayOutputStream', 1), ('close', 1), ('toByteArray', 1), ('getGlExtensionsFromDriver', 1), ('getEGL', 1), ('getConfigs', 1), ('addExtensionsForConfig', 1), ('getLocales', 1), ('getTotalRam', 1), ('newTheme', 1), ('recycle', 1), ('TotalConfig', 1)]"	"[('CtsContentTestCases', 13), ('CtsAndroidAppTestCases', 4), ('CtsWindowManagerDeviceTestCases', 1)]"	""	"7.2.4/C-3-3"	"""C-3-3] MUST report TOUCHSCREEN_NOTOUCH for the Configuration.touchscreen API field. <h4 id="""	"07020400.670303"	"TOUCHSCREEN_NOTOUCH Configuration.touchscreen"	""	""	""	"[('Configuration.touchscreen', 12), ('TOUCHSCREEN_NOTOUCH', 6)]"	""	"[('[android.app.cts.SystemFeaturesTest testTouchScreenFeatures CtsAndroidAppTestCases]', 2), ('[android.app.cts.SystemFeaturesTest testFakeTouchFeatures CtsAndroidAppTestCases]', 2), ('[android.content.res.cts.ConfigTest testAllEmptyConfigs CtsContentTestCases]', 2), ('[android.content.res.cts.ConfigTest testAllClassicConfigs CtsContentTestCases]', 2), ('[android.content.res.cts.ConfigTest testPrecedence CtsContentTestCases]', 2), ('[android.content.res.cts.ConfigurationTest testSetToDefaults CtsContentTestCases]', 1), ('[android.content.res.cts.ConfigurationTest testUnset CtsContentTestCases]', 1), ('[android.content.res.cts.ConfigurationTest testSetLocale_overridesSetLocales CtsContentTestCases]', 1), ('[android.server.wm.ActivityManagerGetConfigTests isLowRamDevice CtsWindowManagerDeviceTestCases]', 1), ('[android.content.res.cts.ConfigTest DisplayMetrics CtsContentTestCases]', 1), ('[android.content.res.cts.ConfigTest testCombinations CtsContentTestCases]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/ConfigurationTest.java', 5), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 4), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityManagerGetConfigTests.java', 1)]"	"[('/android/content/res/cts/ConfigTest.java', 10), ('/android/content/res/cts/ConfigurationTest.java', 7), ('/android/app/cts/SystemFeaturesTest.java', 6), ('/android/server/wm/ActivityManagerGetConfigTests.java', 2)]"	"[('([1:/android/content/res/cts/ConfigurationTest.java]:[Configuration.touchscreen]:[1]:method_text:[.densityDpi);         assertEquals(Configuration.COLOR_MODE_UNDEFINED, config.colorMode);     }     ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[TOUCHSCREEN_NOTOUCH]:[2]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[Configuration.touchscreen]:[2]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([3:/android/app/cts/SystemFeaturesTest.java]:[Configuration.touchscreen]:[3]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/content/res/cts/ConfigurationTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[ation.NAVIGATION_NONAV;         mConfig.orientation = Configuration.ORIENTATION_PORTRAIT;     }     ])', 1), ('([1:/android/content/res/cts/ConfigurationTest.java]:[Configuration.touchscreen]:[1]:method_text:[ation.NAVIGATION_NONAV;         mConfig.orientation = Configuration.ORIENTATION_PORTRAIT;     }     ])', 1), ('([1:/android/content/res/cts/ConfigurationTest.java]:[Configuration.touchscreen]:[1]:method_text:[ assertEquals(config, readConf);         } finally {             parcel.recycle();         }     } }])', 1), ('([1:/android/server/wm/ActivityManagerGetConfigTests.java]:[Configuration.touchscreen]:[1]:method_text:[""Expected features does not match"",                 featureNames, deviceConfig.features);     }     ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[, R.configVarying.bag,                 R.styleable.TestConfig, new String[]{""bag h670""});     }     ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[configVarying.bag,                 R.styleable.TestConfig, new String[]{""bag h670""});     }         ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[gVarying.bag,                 R.styleable.TestConfig, new String[]{""bag mcc111 mnc222""});     }     ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[1]:method_text:[{             fail(""Should be able to find application info for this package"");         }     }     ])', 1), ('([2:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[2]:method_text:[, R.configVarying.bag,                 R.styleable.TestConfig, new String[]{""bag h670""});     }     ])', 1), ('([2:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[2]:method_text:[configVarying.bag,                 R.styleable.TestConfig, new String[]{""bag h670""});     }         ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[1]:method_text:[gVarying.bag,                 R.styleable.TestConfig, new String[]{""bag mcc111 mnc222""});     }     ])', 1), ('([3:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[3]:method_text:[nfigVarying.bag,                 R.styleable.TestConfig, new String[]{""bag dpad 63x57""});     }     ])', 1)]"	""	""	""	""	""
"172:544587) 7.2.6.1  . Button Mappings"	"7.2.6.1"	"C-2-1"	""	"[('android.view.cts.KeyCharacterMapTest', 14), ('android.view.cts.MotionEventTest', 4)]"	""	"[('CtsViewTestCases', 18)]"	""	"7.2.6.1/C-2-1"	"""C-2-1] MUST declare the feature flag android.hardware.gamepad Button HID Usage2 Android Button A1 0x09 0x0001 KEYCODE_BUTTON_A (96) B1 0x09 0x0002 KEYCODE_BUTTON_B (97) X1 0x09 0x0004 KEYCODE_BUTTON_X (99) Y1 0x09 0x0005 KEYCODE_BUTTON_Y (100) D-pad up1 D-pad down1 0x01 0x00393 AXIS_HAT_Y4 D-pad left1 D-pad right1 0x01 0x00393 AXIS_HAT_X4 Left shoulder button1 0x09 0x0007 KEYCODE_BUTTON_L1 (102) Right shoulder button1 0x09 0x0008 KEYCODE_BUTTON_R1 (103) Left stick click1 0x09 0x000E KEYCODE_BUTTON_THUMBL (106) Right stick click1 0x09 0x000F KEYCODE_BUTTON_THUMBR (107) Home1 0x0c 0x0223 KEYCODE_HOME (3) Back1 0x0c 0x0224 KEYCODE_BACK (4) 1 KeyEvent 2 The above HID usages must be declared within a Game pad CA (0x01 0x0005). 3 This usage must have a Logical Minimum of 0, a Logical Maximum of 7, a Physical Minimum of 0, a Physical Maximum of 315, Units in Degrees, and a Report Size of 4. The logical value is defined to be the clockwise rotation away from the vertical axis; for example, a logical value of 0 represents no rotation and the up button being pressed, while a logical value of 1 represents a rotation of 45 degrees and both the up and left keys being pressed. 4 MotionEvent Analog Controls1 HID Usage Android Button Left Trigger 0x02 0x00C5 AXIS_LTRIGGER Right Trigger 0x02 0x00C4 AXIS_RTRIGGER Left Joystick 0x01 0x0030 0x01 0x0031 AXIS_X AXIS_Y Right Joystick 0x01 0x0032 0x01 0x0035 AXIS_Z AXIS_RZ 1 MotionEvent <h4 id="""	"07020601.670201"	"android.hardware.gamepad KEYCODE_BUTTON_THUMBR AXIS_LTRIGGER KEYCODE_BUTTON_L1 AXIS_RTRIGGER KEYCODE_BUTTON_Y AXIS_HAT_Y4 KEYCODE_BUTTON_THUMBL AXIS_HAT_X4 KEYCODE_BUTTON_A KEYCODE_BUTTON_X KEYCODE_BUTTON_R1"	""	"AXIS_RZ AXIS_Y AXIS_Z HID   KEYCODE_BACK AXIS_X AXIS_RZ AXIS_Y AXIS_Z HID KEYCODE_HOME KEYCODE_BUTTON_B KEYCODE_BACK AXIS_X"	""	"[('KEYCODE_BUTTON_THUMBR', 2), ('KEYCODE_BUTTON_L1', 2), ('KEYCODE_BUTTON_Y', 2), ('KEYCODE_BUTTON_THUMBL', 2), ('KEYCODE_BUTTON_A', 2), ('KEYCODE_BUTTON_X', 2), ('KEYCODE_BUTTON_R1', 2), ('AXIS_LTRIGGER', 2), ('AXIS_RTRIGGER', 2)]"	""	"[('[android.view.cts.KeyCharacterMapTest testIsPrintingKey CtsViewTestCases]', 14), ('[android.view.cts.MotionEventTest testAxisFromToString CtsViewTestCases]', 4)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyCharacterMapTest.java', 14), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/MotionEventTest.java', 4)]"	"[('/android/view/cts/KeyCharacterMapTest.java', 28), ('/android/view/cts/MotionEventTest.java', 8)]"	"[('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BUTTON_THUMBR]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 2), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BUTTON_L1]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 2), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BUTTON_Y]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 2), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BUTTON_THUMBL]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 2), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BUTTON_A]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 2), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BUTTON_X]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 2), ('([1:/android/view/cts/KeyCharacterMapTest.java]:[KEYCODE_BUTTON_R1]:[1]:method_text:[ELLOW));         assertFalse(mKeyCharacterMap.isPrintingKey(KeyEvent.KEYCODE_PROG_BLUE));     }     ])', 2), ('([1:/android/view/cts/MotionEventTest.java]:[AXIS_LTRIGGER]:[1]:method_text:[);             assertEquals(axes[i], MotionEvent.axisFromString(axisToString));         }     }     ])', 2), ('([1:/android/view/cts/MotionEventTest.java]:[AXIS_RTRIGGER]:[1]:method_text:[);             assertEquals(axes[i], MotionEvent.axisFromString(axisToString));         }     }     ])', 2)]"	""	done	""	""	""
