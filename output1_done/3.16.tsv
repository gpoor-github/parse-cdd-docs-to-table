"Section"	"section_id"	"req_id"	"Test Availability"	"class_def"	"method"	"module"	"method_text"	"full_key"	"requirement"	"key_as_number"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"matched_terms"	"search_roots"	"qualified_method"	"max_matches"	"file_name"	"matched_files"	"methods_string"	"urls"	"protected"	"Area"	"Shortened"	"Test Level"
"83:338286) 3.8.16  . Device Controls"	"3.8.16"	"H-1-1"	""	"[('android.controls.cts.CtsControlTemplateTest', 5), ('android.controls.cts.CtsControlBuilderTest', 1)]"	"[('Intent', 2), ('setUp', 1), ('getInstrumentation', 1), ('getTargetContext', 1), ('getResources', 1)]"	"[('CtsControlsDeviceTestCases', 6)]"	""	"3.8.16/H-1-1"	""">3.8.16/H-1-1] MUST declare the feature flag android.software.controls and set it to true. [<a href=""#3_8_user_interface_compatibility"""""	"03081600.720101"	"flag android.software.controls feature user_interface_compatibility"	"user_interface_compatibility feature flag"	""	""	"[('flag', 6)]"	"controls"	"[('[android.controls.cts.CtsControlTemplateTest testUnparcelingCorrectClass_thermostat CtsControlsDeviceTestCases]', 1), ('[android.controls.cts.CtsControlTemplateTest testThermostatParams_wrongMode CtsControlsDeviceTestCases]', 1), ('[android.controls.cts.CtsControlTemplateTest testThermostatParams_wrongActiveMode CtsControlsDeviceTestCases]', 1), ('[android.controls.cts.CtsControlTemplateTest testThermostatParams_wrongFlags_currentMode CtsControlsDeviceTestCases]', 1), ('[android.controls.cts.CtsControlTemplateTest testThermostatParams_wrongFlags_currentActiveMode CtsControlsDeviceTestCases]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/controls/src/android/controls/cts/CtsControlTemplateTest.java', 5), ('/home/gpoor/cts-source/cts/tests/controls/src/android/controls/cts/CtsControlBuilderTest.java', 1)]"	"[('/android/controls/cts/CtsControlTemplateTest.java', 6), ('/android/controls/cts/CtsControlBuilderTest.java', 2)]"	"[('([2:/android/controls/cts/CtsControlBuilderTest.java]:[flag]:[2]:method_text:[ mColorStateList = mContext.getResources().getColorStateList(R.color.custom_mower, null);     }     ])', 1), ('([1:/android/controls/cts/CtsControlTemplateTest.java]:[flag]:[1]:method_text:[getTemplateType());         assertTrue(fromParcel instanceof TemperatureControlTemplate);     }     ])', 1), ('([2:/android/controls/cts/CtsControlTemplateTest.java]:[flag]:[2]:method_text:[      assertEquals(TemperatureControlTemplate.MODE_UNKNOWN, thermostat.getCurrentMode());     }     ])', 1), ('([2:/android/controls/cts/CtsControlTemplateTest.java]:[flag]:[2]:method_text:[assertEquals(TemperatureControlTemplate.MODE_UNKNOWN, thermostat.getCurrentActiveMode());     }     ])', 1), ('([2:/android/controls/cts/CtsControlTemplateTest.java]:[flag]:[2]:method_text:[atureControlTemplate.MODE_OFF,                 TemperatureControlTemplate.FLAG_MODE_OFF);     }     ])', 1), ('([2:/android/controls/cts/CtsControlTemplateTest.java]:[flag]:[2]:method_text:[aPosition(0);          return Control.CREATOR.createFromParcel(parcel).getControlTemplate();     } }])', 1)]"	""	""	""	""	""
"83:338286) 3.8.16  . Device Controls"	"3.8.16"	"H-1-2"	""	"[('android.controls.cts.CtsControlsServiceTest', 2)]"	"[('setUp', 1), ('CtsControlsService', 1)]"	"[('CtsControlsDeviceTestCases', 2)]"	""	"3.8.16/H-1-2"	""">3.8.16/H-1-2] MUST provide a user affordance with the ability to add, edit, select, and operate the userâ€™s favorite device controls from the controls registered by the third-party applications through the ControlsProviderService and the Control APIs. [<a href=""#3_8_user_interface_compatibility"""""	"03081600.720102"	"ControlsProviderService launcher"	"ControlsProviderService launcher"	""	""	"[('ControlsProviderService', 2)]"	"controls"	"[('[android.controls.cts.CtsControlsServiceTest testRequestAddControl CtsControlsDeviceTestCases]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/controls/src/android/controls/cts/CtsControlsServiceTest.java', 2)]"	"[('/android/controls/cts/CtsControlsServiceTest.java', 3)]"	"[('([1:/android/controls/cts/CtsControlsServiceTest.java]:[ControlsProviderService]:[1]:method_text:[   @Before     public void setUp() {         mControlsService = new CtsControlsService();     }     ])', 1), ('([1:/android/controls/cts/CtsControlsServiceTest.java]:[ControlsProviderService]:[1]:method_text:[on(), t2.getActionDescription());         assertRangeTemplate(t1.getRange(), t2.getRange());     } }])', 1)]"	""	""	""	""	""
"83:338286) 3.8.16  . Device Controls"	"3.8.16"	"H-1-3"	""	"[('android.controls.cts.CtsControlsService', 1)]"	"[('build', 7), ('buildRoutine', 2), ('CtsControlsService', 1), ('getInstrumentation', 1), ('getTargetContext', 1), ('Intent', 1), ('getResources', 1), ('getControlId', 1), ('getNoTemplateObject', 1)]"	"[('CtsControlsDeviceTestCases', 1)]"	""	"3.8.16/H-1-3"	""">3.8.16/H-1-3] MUST provide access to this user affordance within three interactions from a default Launcher. [<a href=""#3_8_user_interface_compatibility"""""	"03081600.720103"	"interface three user compatibility access affordance Launcher default"	"user interface compatibility Launcher  access   user affordance  three  default"	""	""	"[('default', 1)]"	"controls"	"[('[android.controls.cts.CtsControlsService createPublisherForAllAvailable CtsControlsDeviceTestCases]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/controls/src/android/controls/cts/CtsControlsService.java', 1)]"	"[('/android/controls/cts/CtsControlsService.java', 2)]"	"[('([1:/android/controls/cts/CtsControlsService.java]:[default]:[1]:method_text:[olor())             .setStatus(c.getStatus())             .setStatusText(c.getStatusText());     } }])', 1)]"	""	""	""	""	""
"83:338286) 3.8.16  . Device Controls"	"3.8.16"	"H-1-4"	""	"[('android.controls.cts.CtsControlBuilderTest', 3), ('android.controls.cts.CtsControlsServiceTest', 3)]"	"[('setUp', 2), ('Intent', 2), ('getInstrumentation', 1), ('getTargetContext', 1), ('getResources', 1), ('CtsControlsService', 1)]"	"[('CtsControlsDeviceTestCases', 6)]"	""	"3.8.16/H-1-4"	""">3.8.16/H-1-4] MUST accurately render in this user affordance the name and icon of each third-party app that provides controls via the ControlsProviderService API as well as any specified fields provided by the Control APIs. Conversely, If Handheld device implementations do not implement such controls, they: [<a href=""#3_8_user_interface_compatibility"""""	"03081600.720104"	"ControlsProviderService render icon"	"ControlsProviderService render icon"	""	""	"[('icon', 4), ('ControlsProviderService', 2)]"	"controls"	"[('[android.controls.cts.CtsControlsServiceTest testRequestAddControl CtsControlsDeviceTestCases]', 2), ('[android.controls.cts.CtsControlBuilderTest testStatelessBuilder CtsControlsDeviceTestCases]', 1), ('[android.controls.cts.CtsControlBuilderTest testStatefulBuilderAlternateConstructor CtsControlsDeviceTestCases]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/controls/src/android/controls/cts/CtsControlBuilderTest.java', 3), ('/home/gpoor/cts-source/cts/tests/controls/src/android/controls/cts/CtsControlsServiceTest.java', 3)]"	"[('/android/controls/cts/CtsControlsServiceTest.java', 5), ('/android/controls/cts/CtsControlBuilderTest.java', 4)]"	"[('([5:/android/controls/cts/CtsControlBuilderTest.java]:[icon]:[5]:method_text:[ mColorStateList = mContext.getResources().getColorStateList(R.color.custom_mower, null);     }     ])', 1), ('([2:/android/controls/cts/CtsControlBuilderTest.java]:[icon]:[2]:method_text:[omColor(mColorStateList)                 .build();          assertControl(control, true);     }     ])', 1), ('([4:/android/controls/cts/CtsControlBuilderTest.java]:[icon]:[4]:method_text:[ol.getCustomColor(), mColorStateList);         assertEquals(control.getCustomIcon(), mIcon);     } }])', 1), ('([1:/android/controls/cts/CtsControlsServiceTest.java]:[ControlsProviderService]:[1]:method_text:[   @Before     public void setUp() {         mControlsService = new CtsControlsService();     }     ])', 1), ('([1:/android/controls/cts/CtsControlsServiceTest.java]:[ControlsProviderService]:[1]:method_text:[on(), t2.getActionDescription());         assertRangeTemplate(t1.getRange(), t2.getRange());     } }])', 1), ('([2:/android/controls/cts/CtsControlsServiceTest.java]:[icon]:[2]:method_text:[on(), t2.getActionDescription());         assertRangeTemplate(t1.getRange(), t2.getRange());     } }])', 1)]"	""	""	""	""	""
