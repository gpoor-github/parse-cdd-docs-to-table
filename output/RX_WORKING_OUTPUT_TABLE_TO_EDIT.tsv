Section	section_id	req_id	Test Availability	class_def	method	module	method_text	full_key	requirement	key_as_number	search_terms	manual_search_terms	not_search_terms	not_files	matched_terms	search_roots	qualified_method	max_matches	file_name	matched_files	methods_string	urls	protected	Area	Shortened	Test Level
40:217198) 3  . Software	3	A-1-1						3/A-1-1	""">3/A-1-1] MUST NOT attach special privileges to system application's use of these properties, or prevent third-party applications from using these properties. [<a href=""#3_0_intro"""""	03000000.650101	A-1-1 3/A-1-1															
40:217198) 3  . Software	3	A-1-2		[('android.host.multiuser.SecondaryUsersTest', 2)]				3/A-1-2	""">3/A-1-2] MUST NOT replicate a vehicle property that already exists in the SDK. Automotive device implementations: [<a href=""#3_2_soft_api_compatibility"""""	03000000.650102	3/A-1-2 A-1-2				[('A-1-2', 2)]				[('/home/gpoor/cts-source/cts/hostsidetests/multiuser/src/android/host/multiuser/SecondaryUsersTest.java', 2)]	[('/android/host/multiuser/SecondaryUsersTest.java', 4)]	"[('([1:/android/host/multiuser/SecondaryUsersTest.java]:[A-1-2]:[1]:method_text:[0;      private static final long POLL_INTERVAL_MS = 100;      @CddTest(requirement=""9.5/A-1-2"")    ])', 2)]"					
42:222291) 3.1.1  . Android Extensions	3.1.1	C-0-3		[('android.appsecurity.cts.ApkVerityInstallTest', 12), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.security.cts.EncryptionTest', 1)]	[('setUp', 3), ('getDevice', 2), ('getLaunchApiLevel', 1), ('tearDown', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsSecurityTestCases', 4)]		3.1.1/C-0-3	"""C-0-3] MUST support all the APIs defined by the extension versions returned by android.os.ext.SdkExtensions.getExtensionVersion(int apiLevel) in the same manner as other managed APIs are supported, following the requirements in section 3.1. <h4 id="""	03010100.670003	C-0-3 3.1.1 3.1.1/C-0-3 android.os.ext.SdkExtensions.getExtensionVersion				[('C-0-3', 16)]		None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBase None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig CtsSecurityTestCases:android.security.cts.EncryptionTest.aesIsFast CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted		[('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 12), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/EncryptionTest.java', 1)]	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 13), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/security/cts/EncryptionTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[       getDevice().uninstallPackage(PACKAGE_NAME);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[  .run();         verifyFsverityInstall(BASE_APK);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/EncryptionTest.java]:[C-0-3]:[1]:method_text:[able     // to instant apps     @AppModeFull     @CddTest(requirement=""9.9.2/C-0-1,C-0-2,C-0-3"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-0-3]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-0-3]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-0-3]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1)]"					
42:222291) 3.1.1  . Android Extensions	3.1.1	C-0-2		[('android.security.cts.EncryptionTest', 2)]		[('CtsSecurityTestCases', 2)]		3.1.1/C-0-2	"""C-0-2] MUST only return valid extension version number that have been defined by the AOSP. """	03010100.670002	C-0-2 3.1.1/C-0-2 3.1.1				[('C-0-2', 2)]		CtsSecurityTestCases:android.security.cts.EncryptionTest.aesIsFast CtsSecurityTestCases:android.security.cts.EncryptionTest.aesIsFast		[('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/EncryptionTest.java', 2)]	[('/android/security/cts/EncryptionTest.java', 4)]	"[('([1:/android/security/cts/EncryptionTest.java]:[C-0-2]:[1]:method_text:[able     // to instant apps     @AppModeFull     @CddTest(requirement=""9.9.2/C-0-1,C-0-2,C-0-3"")    ])', 2)]"					
48:237585) 3.2.3.1  . Common Application Intents	3.2.3.1	A-0-1						3.2.3.1/A-0-1	""">3.2.3.1/A-0-1] MUST preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here. [<a href=""#3_4_web_compatibility"""""	03020301.650001	3.2.3.1/A-0-1 A-0-1 3.2.3.1															
48:237585) 3.2.3.1  . Common Application Intents	3.2.3.1	Tab-0-1						3.2.3.1/Tab-0-1	""">3.2.3.1/Tab-0-1] MUST preload one or more applications or service components with an intent handler, for all the public intent filter patterns defined by the following application intents listed here. <h2 id="""	03020301.980001	Tab-0-1 3.2.3.1/Tab-0-1 3.2.3.1															
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-6-1		[('android.app.cts.NotificationManagerTest', 10), ('android.media.cts.AudioManagerTest', 9), ('android.telecom.cts.CarModeInCallServiceTest', 6), ('android.app.notification.legacy.cts.ConditionProviderServiceTest', 5), ('com.android.cts.verifier.audio.RingerModeActivity', 3), ('android.app.cts.NotificationChannelTest', 2), ('android.systemintents.cts.TestSystemIntents', 1), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest', 1), ('com.android.cts.profileowner.AdminActionBookkeepingTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.app.notification.legacy29.cts.NotificationManager29Test', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 1), ('com.android.cts.deviceowner.AdminActionBookkeepingTest', 1), ('android.app.cts.UiModeManagerTest', 1), ('android.ndef.cts.NdefTest', 1), ('android.telecom.cts.CallRedirectionServiceTest', 1), ('android.hardware.camera2.cts.CameraManagerTest', 1), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 1), ('android.server.wm.CrossAppDragAndDropTests', 1), ('com.android.cts.deviceandprofileowner.SecurityLoggingTest', 1), ('com.android.cts.certinstaller.DirectDelegatedCertInstallerTest', 1)]	[('setUp', 16), ('getInstrumentation', 14), ('tearDown', 13), ('of', 8), ('getContext', 7), ('getPackageName', 7), ('getId', 7), ('build', 6), ('getPackageManager', 5), ('toString', 5), ('getActiveNotifications', 5), ('getBytes', 4), ('getWho', 4), ('getContentResolver', 4), ('getMessage', 4), ('getResources', 2), ('getSystem', 2), ('getRingerMode', 2), ('getUiAutomation', 2), ('reset', 2), ('cancelAll', 2), ('printStackTrace', 2), ('getKey', 2), ('getGroupKey', 2), ('create', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('release', 1), ('IntentFilter', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('getCurrentModeType', 1), ('getUserId', 1), ('getSimpleName', 1), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('getCount', 1), ('moveToFirst', 1), ('close', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getOverrideGroupKey', 1), ('supportsSplitScreenMultiWindow', 1), ('supportsFreeform', 1)]	[('CtsAppTestCases', 13), ('CtsMediaTestCases', 9), ('CtsTelecomTestCases', 7), ('CtsLegacyNotification27TestCases', 6), ('CtsSystemIntentTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsLegacyNotification29TestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsNdefTestCases', 1), ('CtsCameraTestCases', 1), ('CtsLegacyNotification20TestCases', 1), ('CtsWindowManagerDeviceTestCases', 1)]		3.2.3.5/C-6-1	"""C-6-1] MUST implement an activity that would respond to the intent ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS, which for implementations with UI_MODE_TYPE_NORMAL it MUST be an activity where the user can grant or deny the app access to DND policy configurations. If device implementations allow users to use third-party input methods on the device, they: """	03020305.670601	MODE_TYPE_NORMAL ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS 3.2.3.5 DND 3.2.3.5/C-6-1 C-6-1				[('DND', 42), ('MODE_TYPE_NORMAL', 7), ('ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS', 1), ('C-6-1', 1), ('3.2.3.5', 1)]		CtsMediaTestCases:android.media.cts.AudioManagerTest.isMicrophoneMute CtsMediaTestCases:android.media.cts.AudioManagerTest.testMuteDndAffectedStreams CtsMediaTestCases:android.media.cts.AudioManagerTest.testMuteDndUnaffectedStreams CtsMediaTestCases:android.media.cts.AudioManagerTest.testSetStreamVolumeInPriorityOnlyMode CtsMediaTestCases:android.media.cts.AudioManagerTest.testAdjustVolumeInPriorityOnly CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyMuteAll CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyMediaAllowed CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyAlarmsAllowed CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyChannelsCanBypassDnd CtsTelecomTestCases:android.telecom.cts.CarModeInCallServiceTest.dropShellPermissionIdentity CtsTelecomTestCases:android.telecom.cts.CarModeInCallServiceTest.testSetCarMode CtsTelecomTestCases:android.telecom.cts.CarModeInCallServiceTest.testStartCallInCarMode CtsTelecomTestCases:android.telecom.cts.CarModeInCallServiceTest.testSwitchToCarMode CtsTelecomTestCases:android.telecom.cts.CarModeInCallServiceTest.testSwitchToCarModeAndBack CtsTelecomTestCases:android.telecom.cts.CarModeInCallServiceTest.testSwitchToCarModeMultiple CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensionsForVrHighPerformance CtsLegacyNotification29TestCases:android.app.notification.legacy29.cts.NotificationManager29Test.isNotificationPolicyAccessGranted CtsAppTestCases:android.app.cts.NotificationManagerTest.isGroup CtsAppTestCases:android.app.cts.NotificationManagerTest.testConsolidatedNotificationPolicy CtsAppTestCases:android.app.cts.NotificationManagerTest.testConsolidatedNotificationPolicyMultiRules CtsAppTestCases:android.app.cts.NotificationManagerTest.testCreateChannel CtsAppTestCases:android.app.cts.NotificationManagerTest.testTotalSilenceOnlyMuteStreams CtsAppTestCases:android.app.cts.NotificationManagerTest.testAlarmsOnlyMuteStreams CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState_turnOff CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState_deletedRule CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState_multipleRules CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.LegacyNotificationManagerTest.testSetNotificationPolicy_preP_setOldNewFields CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityEndToEndTest.testTypeNotificationStateChangedAccessibilityEvent CtsAppTestCases:android.app.cts.NotificationChannelTest.testConstructor CtsAppTestCases:android.app.cts.NotificationChannelTest.testWriteToParcel CtsAppTestCases:android.app.cts.UiModeManagerTest.testEnterCarModePrioritized None:com.android.cts.verifier.audio.RingerModeActivity.isLowRamDevice None:com.android.cts.verifier.audio.RingerModeActivity.TestVolumeDndAffectedStreamDndOn None:com.android.cts.verifier.audio.RingerModeActivity.TestVolumeDndAffectedStream CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testUnboundCPSMaintainsCondition_addsNewRule CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testUnboundCPSMaintainsCondition_otherConditionChanges CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testUnboundCPSMaintainsCondition_otherProviderRuleChanges CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testRequestRebindWhenLostAccess CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testMethodsExistAndDoNotThrow CtsNdefTestCases:android.ndef.cts.NdefTest.testInvalidParsing CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsCameraTestCases:android.hardware.camera2.cts.CameraManagerTest.testCameraManagerWithDnD CtsLegacyNotification20TestCases:android.app.notification.legacy20.cts.LegacyNotificationManager20Test.testNotificationListener_cancelNotifications CtsWindowManagerDeviceTestCases:android.server.wm.CrossAppDragAndDropTests.uptimeMillis		[('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 10), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 9), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CarModeInCallServiceTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/ConditionProviderServiceTest.java', 5), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/RingerModeActivity.java', 3), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationChannelTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/AdminActionBookkeepingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy29/src/android/app/notification/legacy29/cts/NotificationManager29Test.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/UiModeManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/ndef/src/android/ndef/cts/NdefTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallRedirectionServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy20/src/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CrossAppDragAndDropTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CertInstaller/src/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java', 1)]	[('/android/app/cts/NotificationManagerTest.java', 11), ('/android/media/cts/AudioManagerTest.java', 10), ('/android/telecom/cts/CarModeInCallServiceTest.java', 7), ('/android/app/notification/legacy/cts/ConditionProviderServiceTest.java', 6), ('/com/android/cts/verifier/audio/RingerModeActivity.java', 4), ('/android/app/cts/NotificationChannelTest.java', 3), ('/android/systemintents/cts/TestSystemIntents.java', 2), ('/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 2), ('/com/android/cts/profileowner/AdminActionBookkeepingTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/app/notification/legacy29/cts/NotificationManager29Test.java', 2), ('/com/android/cts/delegate/CertInstallDelegateTest.java', 2), ('/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 2), ('/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 2), ('/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 2), ('/android/app/cts/UiModeManagerTest.java', 2), ('/android/ndef/cts/NdefTest.java', 2), ('/android/telecom/cts/CallRedirectionServiceTest.java', 2), ('/android/hardware/camera2/cts/CameraManagerTest.java', 2), ('/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 2), ('/android/server/wm/CrossAppDragAndDropTests.java', 2), ('/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 2), ('/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java', 2)]	"[('([1:/android/app/cts/NotificationManagerTest.java]:[DND]:[1]:method_text:[nalFilter);             mNotificationManager.setNotificationPolicy(origPolicy);         }     }     ])', 3), ('([2:/android/media/cts/AudioManagerTest.java]:[DND]:[2]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);         }     }     ])', 2), ('([3:/android/media/cts/AudioManagerTest.java]:[DND]:[3]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);         }     }     ])', 2), ('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ote         assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());     }     ])', 2), ('([1:/android/systemintents/cts/TestSystemIntents.java]:[ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS]:[1]:method_text:[etInstrumentation().getContext();         mPackageManager = mContext.getPackageManager();     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[DND]:[1]:method_text:[  mDpm.setCertInstallerPackage(ADMIN_RECEIVER_COMPONENT, null);         super.tearDown();     }     ])', 1), ('([8:/android/media/cts/AudioManagerTest.java]:[DND]:[8]:method_text:[      @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")    ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[ckageName(), getInstrumentation(), true);             testStreamMuting(stream);         }     }     ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[etStreamMute failed."",                     mAudioManager.isStreamMute(stream));         }     }     ])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[DND]:[4]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);         }     }     ])', 1), ('([7:/android/media/cts/AudioManagerTest.java]:[DND]:[7]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                     false);         }     }     ])', 1), ('([2:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[2]:method_text:[  * Verifies that a car mode InCallService can enter and exit car mode using a priority.      */    ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[mode InCallService when a call is started when the device is      * already in car mode.      */    ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ies that the lower priority app is bound      * and receives information about the call.      */    ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[milar to {@link #testSwitchToCarMode}, except exits car mode before the call terminates.      */    ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ters car mode after the call starts.  Also      * uses multiple car mode InCallServices.      */    ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ -- bind error"");         }         return queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);     } }])', 1), ('([1:/com/android/cts/profileowner/AdminActionBookkeepingTest.java]:[DND]:[1]:method_text:[ * Test: It should be recored whether the Profile Owner or the user set the current IME.      */    ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-6-1]:[1]:method_text:[ns, requiredExtension));             }         }     }     @CddTest(requirement=""7.1.4.1/C-6-1"")    ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationManager29Test.java]:[DND]:[2]:method_text:[ent.getActivity(                 mContext, 0, new Intent(mContext, this.getClass()), 0);     }      ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[anupSendBubbleActivity() {         mContext.unregisterReceiver(mBubbleBroadcastReceiver);     }     ])', 1), ('([5:/android/app/cts/NotificationManagerTest.java]:[DND]:[5]:method_text:[nalFilter);             mNotificationManager.setNotificationPolicy(origPolicy);         }     }     ])', 1), ('([3:/android/app/cts/NotificationManagerTest.java]:[DND]:[3]:method_text:[) != Notification.VISIBILITY_SECRET);         assertFalse(createdChannel.canBypassDnd());     }     ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[te(id, condition);          assertExpectedDndState(ruleToCreate.getInterruptionFilter());     }     ])', 1), ('([8:/android/app/cts/NotificationManagerTest.java]:[DND]:[8]:method_text:[         // make sure DND is off         assertExpectedDndState(INTERRUPTION_FILTER_ALL);     }     ])', 1), ('([6:/android/app/cts/NotificationManagerTest.java]:[DND]:[6]:method_text:[         // make sure DND is off         assertExpectedDndState(INTERRUPTION_FILTER_ALL);     }     ])', 1), ('([7:/android/app/cts/NotificationManagerTest.java]:[DND]:[7]:method_text:[cZenRule(secondId);         assertExpectedDndState(ruleToCreate.getInterruptionFilter());     }     ])', 1), ('([1:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DND]:[1]:method_text:[ation().getContext();         mDpm = context.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([2:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[DND]:[2]:method_text:[ {       return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);     } }])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[DND]:[1]:method_text:[notificationManager.deleteNotificationChannel(channel.getId());         }     }      @MediumTest    ])', 1), ('([1:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[DND]:[1]:method_text:[    /**      * Test: Retrieving security logs should update the corresponding timestamp.      */    ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[ll(channel.getParentChannelId());         assertFalse(channel.isImportantConversation());     }     ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[icationChannel.CREATOR.createFromParcel(parcel);         assertEquals(channel, channel1);     }     ])', 1), ('([1:/android/app/cts/UiModeManagerTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ar mode API when the caller does not hold the correct      * permission to use that API.      */    ])', 1), ('([4:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[4]:method_text:[eRingerDndOn());         tests.add(new TestSetRingerModePolicyAccessDndOn());         // TODO: Add a])', 1), ('([2:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[2]:method_text:[TestVibrateRinger());         tests.add(new TestSetRingerModePolicyAccess());         // TODO: Add a])', 1), ('([16:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[16]:method_text:[dioManager.getStreamVolume(AudioManager.STREAM_MUSIC));              status = PASS;         }     } ])', 1), ('([3:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[3]:method_text:[ote         assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());     }     ])', 1), ('([1:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[1]:method_text:[nd after permission lost"");         } catch (Exception e) {             // pass         }     }     ])', 1), ('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ } else {             Log.d(TAG, service.getName() + "" has a correct bind state"");         }     } }])', 1), ('([2:/android/ndef/cts/NdefTest.java]:[DND]:[2]:method_text:[on for input "" + bytesToString(b));             } catch (FormatException e) { }         }     }     ])', 1), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 1), ('([6:/android/hardware/camera2/cts/CameraManagerTest.java]:[DND]:[6]:method_text:[        throw new IOException(""Could not read stdout of command:\xa0"" + command, e);         }     }  }])', 1), ('([2:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[DND]:[2]:method_text:[InterruptedException ex) {                 // pass             }         }         return n;     } }])', 1), ('([3:/android/server/wm/CrossAppDragAndDropTests.java]:[DND]:[3]:method_text:[result mismatch,"", expectedResult,                     results.get(resultKey));         }     }     ])', 1), (""([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[DND]:[1]:method_text:[ there's one user on the device or all      * secondary users / profiles are affiliated.      */    ])"", 1), ('([1:/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java]:[DND]:[1]:method_text:[ption {         mDpm.uninstallCaCert(null, TEST_CA.getBytes());         super.tearDown();     }     ])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-5-2		[('android.app.cts.NotificationManagerTest', 10), ('android.media.cts.AudioManagerTest', 9), ('android.app.notification.legacy.cts.ConditionProviderServiceTest', 5), ('com.android.cts.verifier.audio.RingerModeActivity', 3), ('android.app.cts.NotificationChannelTest', 2), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest', 1), ('com.android.cts.profileowner.AdminActionBookkeepingTest', 1), ('android.app.notification.legacy29.cts.NotificationManager29Test', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 1), ('com.android.cts.deviceowner.AdminActionBookkeepingTest', 1), ('android.ndef.cts.NdefTest', 1), ('android.telecom.cts.CallRedirectionServiceTest', 1), ('android.hardware.camera2.cts.CameraManagerTest', 1), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 1), ('android.server.wm.CrossAppDragAndDropTests', 1), ('com.android.cts.deviceandprofileowner.SecurityLoggingTest', 1), ('com.android.cts.certinstaller.DirectDelegatedCertInstallerTest', 1)]	[('setUp', 13), ('tearDown', 11), ('getInstrumentation', 11), ('of', 8), ('getPackageName', 7), ('getId', 7), ('getContext', 6), ('build', 6), ('toString', 5), ('getActiveNotifications', 5), ('getBytes', 4), ('getWho', 4), ('getContentResolver', 4), ('getMessage', 4), ('getResources', 2), ('getSystem', 2), ('getPackageManager', 2), ('getRingerMode', 2), ('cancelAll', 2), ('printStackTrace', 2), ('getKey', 2), ('getGroupKey', 2), ('BroadcastReceiver', 1), ('getAction', 1), ('release', 1), ('IntentFilter', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('getUserId', 1), ('getSimpleName', 1), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('getCount', 1), ('moveToFirst', 1), ('close', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getOverrideGroupKey', 1), ('supportsSplitScreenMultiWindow', 1), ('supportsFreeform', 1)]	[('CtsAppTestCases', 12), ('CtsMediaTestCases', 9), ('CtsLegacyNotification27TestCases', 6), ('CtsLegacyNotification29TestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsNdefTestCases', 1), ('CtsTelecomTestCases', 1), ('CtsCameraTestCases', 1), ('CtsLegacyNotification20TestCases', 1), ('CtsWindowManagerDeviceTestCases', 1)]		3.2.3.5/C-5-2	"""C-5-2] MUST honor the ‘android.bluetooth.adapter.action.REQUEST_DISCOVERABLE’ intent and show a system activity that requests discoverable mode. If device implementations support the DND feature, they: """	03020305.670502	C-5-2 3.2.3.5 android.bluetooth.adapter.action.REQUEST DND 3.2.3.5/C-5-2 REQUEST_DISCOVERABLE				[('DND', 42), ('3.2.3.5', 1)]		CtsMediaTestCases:android.media.cts.AudioManagerTest.isMicrophoneMute CtsMediaTestCases:android.media.cts.AudioManagerTest.testMuteDndAffectedStreams CtsMediaTestCases:android.media.cts.AudioManagerTest.testMuteDndUnaffectedStreams CtsMediaTestCases:android.media.cts.AudioManagerTest.testSetStreamVolumeInPriorityOnlyMode CtsMediaTestCases:android.media.cts.AudioManagerTest.testAdjustVolumeInPriorityOnly CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyMuteAll CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyMediaAllowed CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyAlarmsAllowed CtsMediaTestCases:android.media.cts.AudioManagerTest.testPriorityOnlyChannelsCanBypassDnd CtsLegacyNotification29TestCases:android.app.notification.legacy29.cts.NotificationManager29Test.isNotificationPolicyAccessGranted CtsAppTestCases:android.app.cts.NotificationManagerTest.isGroup CtsAppTestCases:android.app.cts.NotificationManagerTest.testConsolidatedNotificationPolicy CtsAppTestCases:android.app.cts.NotificationManagerTest.testConsolidatedNotificationPolicyMultiRules CtsAppTestCases:android.app.cts.NotificationManagerTest.testCreateChannel CtsAppTestCases:android.app.cts.NotificationManagerTest.testTotalSilenceOnlyMuteStreams CtsAppTestCases:android.app.cts.NotificationManagerTest.testAlarmsOnlyMuteStreams CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState_turnOff CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState_deletedRule CtsAppTestCases:android.app.cts.NotificationManagerTest.testSetAutomaticZenRuleState_multipleRules CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.LegacyNotificationManagerTest.testSetNotificationPolicy_preP_setOldNewFields CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityEndToEndTest.testTypeNotificationStateChangedAccessibilityEvent CtsAppTestCases:android.app.cts.NotificationChannelTest.testConstructor CtsAppTestCases:android.app.cts.NotificationChannelTest.testWriteToParcel None:com.android.cts.verifier.audio.RingerModeActivity.isLowRamDevice None:com.android.cts.verifier.audio.RingerModeActivity.TestVolumeDndAffectedStreamDndOn None:com.android.cts.verifier.audio.RingerModeActivity.TestVolumeDndAffectedStream CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testUnboundCPSMaintainsCondition_addsNewRule CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testUnboundCPSMaintainsCondition_otherConditionChanges CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testUnboundCPSMaintainsCondition_otherProviderRuleChanges CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testRequestRebindWhenLostAccess CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.ConditionProviderServiceTest.testMethodsExistAndDoNotThrow CtsNdefTestCases:android.ndef.cts.NdefTest.testInvalidParsing CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsCameraTestCases:android.hardware.camera2.cts.CameraManagerTest.testCameraManagerWithDnD CtsLegacyNotification20TestCases:android.app.notification.legacy20.cts.LegacyNotificationManager20Test.testNotificationListener_cancelNotifications CtsWindowManagerDeviceTestCases:android.server.wm.CrossAppDragAndDropTests.uptimeMillis		[('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 10), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 9), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/ConditionProviderServiceTest.java', 5), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/RingerModeActivity.java', 3), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationChannelTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/AdminActionBookkeepingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy29/src/android/app/notification/legacy29/cts/NotificationManager29Test.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/ndef/src/android/ndef/cts/NdefTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallRedirectionServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy20/src/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CrossAppDragAndDropTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CertInstaller/src/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java', 1)]	[('/android/app/cts/NotificationManagerTest.java', 11), ('/android/media/cts/AudioManagerTest.java', 10), ('/android/app/notification/legacy/cts/ConditionProviderServiceTest.java', 6), ('/com/android/cts/verifier/audio/RingerModeActivity.java', 4), ('/android/app/cts/NotificationChannelTest.java', 3), ('/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 2), ('/com/android/cts/profileowner/AdminActionBookkeepingTest.java', 2), ('/android/app/notification/legacy29/cts/NotificationManager29Test.java', 2), ('/com/android/cts/delegate/CertInstallDelegateTest.java', 2), ('/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 2), ('/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 2), ('/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 2), ('/android/ndef/cts/NdefTest.java', 2), ('/android/telecom/cts/CallRedirectionServiceTest.java', 2), ('/android/hardware/camera2/cts/CameraManagerTest.java', 2), ('/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 2), ('/android/server/wm/CrossAppDragAndDropTests.java', 2), ('/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 2), ('/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java', 2)]	"[('([1:/android/app/cts/NotificationManagerTest.java]:[DND]:[1]:method_text:[nalFilter);             mNotificationManager.setNotificationPolicy(origPolicy);         }     }     ])', 3), ('([2:/android/media/cts/AudioManagerTest.java]:[DND]:[2]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);         }     }     ])', 2), ('([3:/android/media/cts/AudioManagerTest.java]:[DND]:[3]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);         }     }     ])', 2), ('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ote         assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());     }     ])', 2), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[DND]:[1]:method_text:[  mDpm.setCertInstallerPackage(ADMIN_RECEIVER_COMPONENT, null);         super.tearDown();     }     ])', 1), ('([8:/android/media/cts/AudioManagerTest.java]:[DND]:[8]:method_text:[      @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")    ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[ckageName(), getInstrumentation(), true);             testStreamMuting(stream);         }     }     ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[etStreamMute failed."",                     mAudioManager.isStreamMute(stream));         }     }     ])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[DND]:[4]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);         }     }     ])', 1), ('([7:/android/media/cts/AudioManagerTest.java]:[DND]:[7]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                     false);         }     }     ])', 1), ('([1:/com/android/cts/profileowner/AdminActionBookkeepingTest.java]:[DND]:[1]:method_text:[ * Test: It should be recored whether the Profile Owner or the user set the current IME.      */    ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationManager29Test.java]:[DND]:[2]:method_text:[ent.getActivity(                 mContext, 0, new Intent(mContext, this.getClass()), 0);     }      ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[anupSendBubbleActivity() {         mContext.unregisterReceiver(mBubbleBroadcastReceiver);     }     ])', 1), ('([5:/android/app/cts/NotificationManagerTest.java]:[DND]:[5]:method_text:[nalFilter);             mNotificationManager.setNotificationPolicy(origPolicy);         }     }     ])', 1), ('([3:/android/app/cts/NotificationManagerTest.java]:[DND]:[3]:method_text:[) != Notification.VISIBILITY_SECRET);         assertFalse(createdChannel.canBypassDnd());     }     ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[te(id, condition);          assertExpectedDndState(ruleToCreate.getInterruptionFilter());     }     ])', 1), ('([8:/android/app/cts/NotificationManagerTest.java]:[DND]:[8]:method_text:[         // make sure DND is off         assertExpectedDndState(INTERRUPTION_FILTER_ALL);     }     ])', 1), ('([6:/android/app/cts/NotificationManagerTest.java]:[DND]:[6]:method_text:[         // make sure DND is off         assertExpectedDndState(INTERRUPTION_FILTER_ALL);     }     ])', 1), ('([7:/android/app/cts/NotificationManagerTest.java]:[DND]:[7]:method_text:[cZenRule(secondId);         assertExpectedDndState(ruleToCreate.getInterruptionFilter());     }     ])', 1), ('([1:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DND]:[1]:method_text:[ation().getContext();         mDpm = context.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([2:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[DND]:[2]:method_text:[ {       return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);     } }])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[DND]:[1]:method_text:[notificationManager.deleteNotificationChannel(channel.getId());         }     }      @MediumTest    ])', 1), ('([1:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[DND]:[1]:method_text:[    /**      * Test: Retrieving security logs should update the corresponding timestamp.      */    ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[ll(channel.getParentChannelId());         assertFalse(channel.isImportantConversation());     }     ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[icationChannel.CREATOR.createFromParcel(parcel);         assertEquals(channel, channel1);     }     ])', 1), ('([4:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[4]:method_text:[eRingerDndOn());         tests.add(new TestSetRingerModePolicyAccessDndOn());         // TODO: Add a])', 1), ('([2:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[2]:method_text:[TestVibrateRinger());         tests.add(new TestSetRingerModePolicyAccess());         // TODO: Add a])', 1), ('([16:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[16]:method_text:[dioManager.getStreamVolume(AudioManager.STREAM_MUSIC));              status = PASS;         }     } ])', 1), ('([3:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[3]:method_text:[ote         assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());     }     ])', 1), ('([1:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[1]:method_text:[nd after permission lost"");         } catch (Exception e) {             // pass         }     }     ])', 1), ('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ } else {             Log.d(TAG, service.getName() + "" has a correct bind state"");         }     } }])', 1), ('([2:/android/ndef/cts/NdefTest.java]:[DND]:[2]:method_text:[on for input "" + bytesToString(b));             } catch (FormatException e) { }         }     }     ])', 1), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 1), ('([6:/android/hardware/camera2/cts/CameraManagerTest.java]:[DND]:[6]:method_text:[        throw new IOException(""Could not read stdout of command:\xa0"" + command, e);         }     }  }])', 1), ('([2:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[DND]:[2]:method_text:[InterruptedException ex) {                 // pass             }         }         return n;     } }])', 1), ('([3:/android/server/wm/CrossAppDragAndDropTests.java]:[DND]:[3]:method_text:[result mismatch,"", expectedResult,                     results.get(resultKey));         }     }     ])', 1), (""([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[DND]:[1]:method_text:[ there's one user on the device or all      * secondary users / profiles are affiliated.      */    ])"", 1), ('([1:/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java]:[DND]:[1]:method_text:[ption {         mDpm.uninstallCaCert(null, TEST_CA.getBytes());         super.tearDown();     }     ])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-2-6		[('android.webkit.cts.WebSettingsTest', 54), ('android.telephony.cts.SmsCbMessageTest', 23), ('android.app.cts.AlertDialog_BuilderTest', 14), ('android.webkit.cts.WebViewDataDirTest', 7), ('android.accessibilityservice.cts.AccessibilityWindowReportingTest', 5), ('android.os.cts.StrictModeTest', 5), ('com.android.cts.devicepolicy.DeviceOwnerTest', 3), ('android.autofillservice.cts.CustomDescriptionDateTest', 3), ('android.view.cts.ViewGroup_LayoutParamsTest', 2), ('android.transition.cts.SharedElementCallbackTest', 2), ('android.hardware.camera2.cts.HeifWriterTest', 2), ('android.hardware.camera2.cts.ImageWriterTest', 2), ('android.assist.cts.TextViewTest', 2), ('android.view.cts.KeyboardShortcutGroupTest', 1), ('android.app.cts.SystemFeaturesTest', 1), ('android.server.wm.WindowManager_LayoutParamsTest', 1), ('android.view.cts.KeyEventInjectionTest', 1), ('android.media.cts.MediaMetadataRetrieverTest', 1), ('android.app.cts.backgroundrestrictions.BroadcastsTest', 1), ('android.server.wm.AnrTests', 1), ('android.widget.cts.ToolbarWithMarginsTest', 1)]	[('setUp', 12), ('tearDown', 6), ('getContext', 4), ('updateTitle', 3), ('getInstrumentation', 3), ('getActivity', 3), ('getDevice', 3), ('getUiAutomation', 2), ('setup', 2), ('clear', 2), ('getPackageManager', 2), ('close', 2), ('getPackageName', 2), ('getNetworkImageHtml', 1), ('AccessibilityDumpOnFailureRule', 1), ('oneTimeSetup', 1), ('getServiceInfo', 1), ('finalTearDown', 1), ('destroy', 1), ('moveFocusToAnotherWindow_generatesEventsAndMovesActiveAndFocus', 1), ('showTopWindowAndWaitForItToShowUp', 1), ('getRoot', 1), ('getTargetContext', 1), ('getApplicationContext', 1), ('getThreadPolicy', 1), ('getVmPolicy', 1), ('run', 1), ('getResources', 1), ('MediaMetadataRetriever', 1), ('release', 1), ('getExternalStorageDirectory', 1), ('separateLogs', 1), ('teardown', 1), ('getSimpleName', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('customSetup', 1), ('Geometry', 1)]	[('CtsWebkitTestCases', 61), ('CtsTelephonyTestCases', 23), ('CtsAppTestCases', 15), ('CtsAccessibilityServiceTestCases', 5), ('CtsOsHostTestCases', 5), ('CtsViewTestCases', 4), ('CtsCameraTestCases', 4), ('CtsAutoFillServiceTestCases', 3), ('CtsTransitionTestCases', 2), ('CtsWindowManagerDeviceTestCases', 2), ('CtsAssistTestCases', 2), ('CtsMediaTestCases', 1), ('CtsBackgroundRestrictionsTestCases', 1), ('CtsWidgetTestCases', 1)]		3.2.3.5/C-2-6	"""C-2-6] MUST honor the android.intent.action.SENDTO and android.intent.action.VIEW intents and provide an activity to send/display SMS messages. """	03020305.670206	3.2.3.5 3.2.3.5/C-2-6 SENDTO android.intent.action.VIEW C-2-6 SMS android.intent.action.SENDTO VIEW				[('VIEW', 106), ('SMS', 25), ('SENDTO', 1)]		CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessJavaScriptCanOpenWindowsAutomatically CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.WebSettingsTest CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testUserAgentString_default CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessUserAgentString CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessAllowFileAccess CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessCacheMode_defaultValue CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessCacheMode_cacheElseNetwork CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessCacheMode_noCache CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessCacheMode_cacheOnly CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessCursiveFontFamily CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessFantasyFontFamily CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessFixedFontFamily CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessSansSerifFontFamily CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessSerifFontFamily CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessStandardFontFamily CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessDefaultFontSize CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessDefaultFixedFontSize CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessDefaultTextEncodingName CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessJavaScriptCanOpenWindowsAutomatically CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessJavaScriptEnabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessLayoutAlgorithm CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessMinimumFontSize CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessMinimumLogicalFontSize CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessPluginsEnabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testOffscreenPreRaster CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessPluginsPath CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessTextSize CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessUseDoubleTree CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessUseWideViewPort CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testSetNeedInitialFocus CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testSetRenderPriority CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessSupportMultipleWindows CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessSupportZoom CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessBuiltInZoomControls CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAppCacheDisabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAppCacheEnabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testDatabaseDisabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testDisabledActionModeMenuItems CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLoadsImagesAutomatically_default CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLoadsImagesAutomatically_httpImagesLoaded CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLoadsImagesAutomatically_dataUriImagesLoaded CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLoadsImagesAutomatically_blockLoadingImages CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLoadsImagesAutomatically_loadImagesWithoutReload CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testBlockNetworkImage CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testBlockNetworkLoads CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLocalImageLoads CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testIframesWhenAccessFromFileURLsEnabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testIframesWhenAccessFromFileURLsDisabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testXHRWhenAccessFromFileURLsEnabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testXHRWhenAccessFromFileURLsDisabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAllowMixedMode CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testEnableSafeBrowsing CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testForceDark_default CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testForceDark_rendersDark CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFeatureNamespaces CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.perDisplayFocusEnabled CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.testWindowAddedMovedAndRemoved_generatesEventsForAllThree CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.isFocused CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.testChangeAccessibilityFocusWindow_getEvent CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.testGetAnchorForDropDownForAutoCompleteTextView_returnsTextViewNode CtsViewTestCases:android.view.cts.ViewGroup_LayoutParamsTest.testConstructor CtsOsHostTestCases:android.os.cts.StrictModeTest.testFileUriExposure CtsOsHostTestCases:android.os.cts.StrictModeTest.testContentUriWithoutPermission CtsOsHostTestCases:android.os.cts.StrictModeTest.testVmPenaltyListener CtsOsHostTestCases:android.os.cts.StrictModeTest.testIncorrectContextUse_GetViewConfiguration CtsTransitionTestCases:android.transition.cts.SharedElementCallbackTest.testSnapshot CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetItemsWithParamInt CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetItemsWithParamCharSequence CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetAdapter CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetMultiChoiceItemsWithParamInt CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetMultiChoiceItemsWithParamCharSequence CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetSingleChoiceItemsWithParamInt CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetSingleChoiceItemsWithParamCharSequence CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetSingleChoiceItems CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetOnItemSelectedListener CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetView CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetViewFromInflater CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetViewById CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testShow CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.exists CtsBackgroundRestrictionsTestCases:android.app.cts.backgroundrestrictions.BroadcastsTest.testNonSupportedBroadcastsNotDelivered_manifestReceiver CtsWebkitTestCases:android.webkit.cts.WebViewDataDirTest.WebViewDataDirTest CtsWebkitTestCases:android.webkit.cts.WebViewDataDirTest.testDisableThenUse CtsWebkitTestCases:android.webkit.cts.WebViewDataDirTest.testUseThenDisable CtsWebkitTestCases:android.webkit.cts.WebViewDataDirTest.testUseThenChangeDir CtsWebkitTestCases:android.webkit.cts.WebViewDataDirTest.testInvalidDir CtsWebkitTestCases:android.webkit.cts.WebViewDataDirTest.testSameDirTwoProcesses CtsWebkitTestCases:android.webkit.cts.WebViewDataDirTest.testCookieJarsSeparate CtsWidgetTestCases:android.widget.cts.ToolbarWithMarginsTest.testSetTitleMargins CtsCameraTestCases:android.hardware.camera2.cts.HeifWriterTest.isInstantApp CtsCameraTestCases:android.hardware.camera2.cts.HeifWriterTest.testHeif CtsCameraTestCases:android.hardware.camera2.cts.ImageWriterTest.testWriterFormatOverride None:com.android.cts.devicepolicy.DeviceOwnerTest.removeTestUsers None:com.android.cts.devicepolicy.DeviceOwnerTest.testDefaultSmsApplication None:com.android.cts.devicepolicy.DeviceOwnerTest.testProxyPacProxyTest CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionDateTest.testCustomSave CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionDateTest.testSaveSameValue_withoutSanitization CtsAssistTestCases:android.assist.cts.TextViewTest.testTextView CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testSubId CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testGeographicalScope CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testSerialNumber CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testLocation CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testServiceCategory CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testLanguage CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testBody CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testGeometries CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testMaxWaitTime CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testReceivedTime CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testSlotIndex CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testMessagePriority CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testMessageFormat CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testEtwsInfo CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testDataCodingScheme CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testCmasInfo CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testEmergency CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testIsEtws CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testIsCmas CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testNeedGeoFencingCheck CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testContentValues CtsTelephonyTestCases:android.telephony.cts.SmsCbMessageTest.testCreateFromCursor		[('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 54), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SmsCbMessageTest.java', 23), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderTest.java', 14), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewDataDirTest.java', 7), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/StrictModeTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/CustomDescriptionDateTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewGroup_LayoutParamsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/transition/src/android/transition/cts/SharedElementCallbackTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageWriterTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/assist/src/android/assist/cts/TextViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyboardShortcutGroupTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowManager_LayoutParamsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyEventInjectionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaMetadataRetrieverTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/background/src/android/app/cts/backgroundrestrictions/BroadcastsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AnrTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ToolbarWithMarginsTest.java', 1)]	[('/android/webkit/cts/WebSettingsTest.java', 56), ('/android/telephony/cts/SmsCbMessageTest.java', 24), ('/android/app/cts/AlertDialog_BuilderTest.java', 15), ('/android/webkit/cts/WebViewDataDirTest.java', 8), ('/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java', 6), ('/android/os/cts/StrictModeTest.java', 6), ('/com/android/cts/devicepolicy/DeviceOwnerTest.java', 5), ('/android/autofillservice/cts/CustomDescriptionDateTest.java', 4), ('/android/view/cts/ViewGroup_LayoutParamsTest.java', 3), ('/android/transition/cts/SharedElementCallbackTest.java', 3), ('/android/hardware/camera2/cts/HeifWriterTest.java', 3), ('/android/hardware/camera2/cts/ImageWriterTest.java', 3), ('/android/assist/cts/TextViewTest.java', 3), ('/android/view/cts/KeyboardShortcutGroupTest.java', 2), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/server/wm/WindowManager_LayoutParamsTest.java', 2), ('/android/view/cts/KeyEventInjectionTest.java', 2), ('/android/media/cts/MediaMetadataRetrieverTest.java', 2), ('/android/app/cts/backgroundrestrictions/BroadcastsTest.java', 2), ('/android/server/wm/AnrTests.java', 2), ('/android/widget/cts/ToolbarWithMarginsTest.java', 2)]	"[('([5:/android/app/cts/AlertDialog_BuilderTest.java]:[VIEW]:[5]:method_text:[tener, times(1)).onClick(mDialog, 0);         verifyNoMoreInteractions(mOnClickListener);     }     ])', 3), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ ""text/html"", null);         assertEquals(DATA_URL_IMAGE_HEIGHT, mOnUiThread.getTitle());     }     ])', 2), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[that javascript cross-domain request permissions matches file domain settings     // for iframes    ])', 2), ('([6:/android/app/cts/AlertDialog_BuilderTest.java]:[VIEW]:[6]:method_text:[ultiChoiceClickListener);         assertEquals(items[0], mListView.getItemAtPosition(0));     }     ])', 2), ('([10:/android/app/cts/AlertDialog_BuilderTest.java]:[VIEW]:[10]:method_text:[ById(R.id.username_view));         assertNotNull(mView.findViewById(R.id.username_edit));     }     ])', 2), ('([5:/android/view/cts/KeyboardShortcutGroupTest.java]:[VIEW]:[5]:method_text:[boardShortcutInfo(                 ""Item 2"", KeyEvent.KEYCODE_F, KeyEvent.META_CTRL_ON));     }     ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[SENDTO]:[1]:method_text:[Url(TestHtmlConstants.POPUP_URL));         WebkitUtils.waitForFuture(createWindowFuture);     }     ])', 1), ('([17:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[17]:method_text:[>.<minor>      * Chrome/<major>.<minor>.<branch>.<build>[ Mobile] Safari/<major>.<minor>      */    ])', 1), (""([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[erifies that the useragent testing regex is actually correct, because it's very complex.      */    ])"", 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[AndWaitForCompletion(url);         assertEquals(customUserAgent, mOnUiThread.getTitle());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[with file access disabled"",                 dataDirTitle.equals(mOnUiThread.getTitle()));     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[Sync();         Thread.sleep(100); // Wait for open to be received on the icon db thread.     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[hing resource"",                 requestCountAfterSecondLoad, requestCountAfterFirstLoad);     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[d of caching"",                 requestCountAfterSecondLoad > requestCountAfterFirstLoad);     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ of fetching resource"",                 requestCountAfterFirstLoad, initialRequestCount);     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ewCusiveFamily);         assertEquals(newCusiveFamily, mSettings.getCursiveFontFamily());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[FantasyFamily);         assertEquals(newFantasyFamily, mSettings.getFantasyFontFamily());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ly(newFixedFamily);         assertEquals(newFixedFamily, mSettings.getFixedFontFamily());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ewFixedFamily);         assertEquals(newFixedFamily, mSettings.getSansSerifFontFamily());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ly(newSerifFamily);         assertEquals(newSerifFamily, mSettings.getSerifFontFamily());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ndardFamily);         assertEquals(newStandardFamily, mSettings.getStandardFontFamily());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ettings.setDefaultFontSize(10);         assertEquals(10, mSettings.getDefaultFontSize());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[tDefaultFixedFontSize(10);         assertEquals(10, mSettings.getDefaultFixedFontSize());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[dingName);         assertEquals(newEncodingName, mSettings.getDefaultTextEncodingName());     }     ])', 1), ('([14:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[14]:method_text:[Url(TestHtmlConstants.POPUP_URL));         WebkitUtils.waitForFuture(createWindowFuture);     }     ])', 1), ('([4:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[4]:method_text:[  return ""javascript off"".equals(mOnUiThread.getTitle());             }         }.run();      }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ assertEquals(WebSettings.LayoutAlgorithm.SINGLE_COLUMN, mSettings.getLayoutAlgorithm());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ettings.setMinimumFontSize(10);         assertEquals(10, mSettings.getMinimumFontSize());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[imumLogicalFontSize(10);         assertEquals(10, mSettings.getMinimumLogicalFontSize());     }     ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[3]:method_text:[   * should be reflected in that test as necessary. See http://go/modifying-webview-cts.      */    ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[tings.setOffscreenPreRaster(true);         assertTrue(mSettings.getOffscreenPreRaster());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[nPath);         assertEquals(""Plugin path always empty"", """", mSettings.getPluginsPath());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ize(TextSize.SMALLEST);         assertEquals(TextSize.SMALLEST, mSettings.getTextSize());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[         assertFalse(""setUseDoubleTree should be a no-op"", mSettings.getUseDoubleTree());     }     ])', 1), ('([6:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[6]:method_text:[  mSettings.setUseWideViewPort(true);         assertTrue(mSettings.getUseWideViewPort());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[      mSettings.setNeedInitialFocus(false);          mSettings.setNeedInitialFocus(true);     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[erPriority.LOW);          mSettings.setRenderPriority(WebSettings.RenderPriority.NORMAL);     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[.setSupportMultipleWindows(true);         assertTrue(mSettings.supportMultipleWindows());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[;          mSettings.setSupportZoom(false);         assertFalse(mSettings.supportZoom());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ngs.setBuiltInZoomControls(true);         assertTrue(mSettings.getBuiltInZoomControls());     }     ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[3]:method_text:[ccur.         Thread.sleep(1000);         assertEquals(""Loaded"", mOnUiThread.getTitle());     }     ])', 1), ('([4:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[4]:method_text:[res creating a     // webChromeClient and listening to Quota callbacks, which is not documented.    ])', 1), ('([4:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[4]:method_text:[test should be reflected in that test as necessary. See http://go/modifying-webview-cts.      */    ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ms(i);             assertEquals(i, mSettings.getDisabledActionModeMenuItems());         }     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[           return;         }         assertTrue(mSettings.getLoadsImagesAutomatically());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[, ""text/html"", null);         assertEquals(NETWORK_IMAGE_HEIGHT, mOnUiThread.getTitle());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ML, ""text/html"", null);         assertEquals(EMPTY_IMAGE_HEIGHT, mOnUiThread.getTitle());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[tForNonEmptyImage();         assertEquals(DATA_URL_IMAGE_HEIGHT, mOnUiThread.getTitle());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[d.getTitle());     }      // Verify that an image in local file system can be loaded by an asset    ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[     // Verify that enabling file access from file URLs enable XmlHttpRequest (XHR) across files    ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[  // Verify that disabling file access from file URLs disable XmlHttpRequest (XHR) accross files    ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ename, Context.MODE_PRIVATE);         fos.write(content.getBytes());         fos.close();     }     ])', 1), ('([8:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[8]:method_text:[   * should be reflected in that test as necessary. See http://go/modifying-webview-cts.      */    ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ram.put(pixel, histogram.getOrDefault(pixel, 0) + 1);         }         return histogram;     }     ])', 1), ('([10:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[10]:method_text:[          params.width = width;             webView.setLayoutParams(params);         });      }     ])', 1), ('([10:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[10]:method_text:[e assertions.             WebkitUtils.waitForNextQueueElement(mReceivedIconQueue);         }     } }])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[VIEW]:[2]:method_text:[Name,                         featureName.startsWith(""android""));             }         }     }     ])', 1), ('([19:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[VIEW]:[19]:method_text:[getResources()                 .getBoolean(android.R.bool.config_perDisplayFocusEnabled);     }     ])', 1), ('([4:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[VIEW]:[4]:method_text:[hangedWithChangeTypes(WINDOWS_CHANGE_REMOVED),                 TIMEOUT_ASYNC_PROCESSING);     }     ])', 1), ('([6:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[VIEW]:[6]:method_text:[NDOWS_CHANGE_FOCUSED | WINDOWS_CHANGE_ACTIVE),                 TIMEOUT_ASYNC_PROCESSING);     }     ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[VIEW]:[1]:method_text:[REQUEST_TOUCH_EXPLORATION_MODE;             sUiAutomation.setServiceInfo(info);         }     }     ])', 1), ('([13:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[VIEW]:[13]:method_text:[ = mActivity.getWindow().getDecorView().getWindowToken();         });         return params;     } }])', 1), ('([7:/android/view/cts/ViewGroup_LayoutParamsTest.java]:[VIEW]:[7]:method_text:[     public void setup() {         mContext = InstrumentationRegistry.getTargetContext();     }     ])', 1), ('([4:/android/view/cts/ViewGroup_LayoutParamsTest.java]:[VIEW]:[4]:method_text:[s temp = new ViewGroup.LayoutParams(320, 480);          new ViewGroup.LayoutParams(temp);     }     ])', 1), ('([12:/android/os/cts/StrictModeTest.java]:[VIEW]:[12]:method_text:[icy);     }      public interface ThrowingRunnable {         void run() throws Exception;     }     ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[VIEW]:[2]:method_text:[image/jpeg"");                     getContext().startActivity(intent);                 });     }     ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[VIEW]:[2]:method_text:[                 getContext().startActivity(intent);                 });     }      @AppModeFull    ])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[VIEW]:[1]:method_text:[t.SECONDS);         assertTrue(v instanceof FileUriExposedViolation);     }      @AppModeInstant    ])', 1), ('([8:/android/os/cts/StrictModeTest.java]:[VIEW]:[8]:method_text:[nager.FEATURE_WIFI)                 || pm.hasSystemFeature(PackageManager.FEATURE_ETHERNET);     } }])', 1), ('([3:/android/transition/cts/SharedElementCallbackTest.java]:[VIEW]:[3]:method_text:[ SharedElementCallbackTest {     private static class Callback extends SharedElementCallback {}     ])', 1), ('([17:/android/transition/cts/SharedElementCallbackTest.java]:[VIEW]:[17]:method_text:[fig.HARDWARE, finalBitmap.getConfig());         assertSame(cs, finalBitmap.getColorSpace());     } }])', 1), ('([10:/android/app/cts/AlertDialog_BuilderTest.java]:[VIEW]:[10]:method_text:[y();         mContext = activity;         PollingCheck.waitFor(activity::hasWindowFocus);     }     ])', 1), ('([3:/android/app/cts/AlertDialog_BuilderTest.java]:[VIEW]:[3]:method_text:[.array.difficultyLevel);         assertEquals(levels[0], mListView.getItemAtPosition(0));     }     ])', 1), ('([3:/android/app/cts/AlertDialog_BuilderTest.java]:[VIEW]:[3]:method_text:[ation.waitForIdleSync();         assertEquals(expect[0], mListView.getItemAtPosition(0));     }     ])', 1), ('([3:/android/app/cts/AlertDialog_BuilderTest.java]:[VIEW]:[3]:method_text:[Instrumentation.waitForIdleSync();         assertEquals(adapter, mListView.getAdapter());     }     ])', 1), ('([5:/android/app/cts/AlertDialog_BuilderTest.java]:[VIEW]:[5]:method_text:[      eq(0), any(Long.class));         verifyNoMoreInteractions(mOnItemSelectedListener);     }     ])', 1), ('([11:/android/app/cts/AlertDialog_BuilderTest.java]:[VIEW]:[11]:method_text:[       });         mInstrumentation.waitForIdleSync();         assertEquals(view, mView);     }     ])', 1), ('([10:/android/app/cts/AlertDialog_BuilderTest.java]:[VIEW]:[10]:method_text:[nregisterDataSetObserver(             android.database.DataSetObserver observer) {         }     } }])', 1), ('([2:/android/server/wm/WindowManager_LayoutParamsTest.java]:[VIEW]:[2]:method_text:[ static final int WINDOW_ANIMATIONS = 6;      private WindowManager.LayoutParams mLayoutParams;     ])', 1), ('([2:/android/view/cts/KeyEventInjectionTest.java]:[VIEW]:[2]:method_text:[nts.clear();     }      /**      * Long press event can be injected through UiAutomation      */    ])', 1), ('([1:/android/media/cts/MediaMetadataRetrieverTest.java]:[VIEW]:[1]:method_text:[tch (Exception e) {             fail(""Unable to open file"");         }         return ds;     }     ])', 1), ('([1:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[VIEW]:[1]:method_text:[     }             }          } finally {             receiverDeinitializer.run();         }     } }])', 1), ('([10:/android/webkit/cts/WebViewDataDirTest.java]:[VIEW]:[10]:method_text:[throw IllegalStateException"");             } catch (IllegalStateException e) {}         }     }     ])', 1), ('([2:/android/webkit/cts/WebViewDataDirTest.java]:[VIEW]:[2]:method_text:[))) {             process.run(TestDisableThenUseImpl.class, REMOTE_TIMEOUT_MS);         }     }     ])', 1), ('([5:/android/webkit/cts/WebViewDataDirTest.java]:[VIEW]:[5]:method_text:[ fail(""didn\'t throw IllegalStateException"");         } catch (IllegalStateException e) {}     }     ])', 1), ('([5:/android/webkit/cts/WebViewDataDirTest.java]:[VIEW]:[5]:method_text:[IllegalArgumentException"");             } catch (IllegalArgumentException e) {}         }     }     ])', 1), ('([3:/android/webkit/cts/WebViewDataDirTest.java]:[VIEW]:[3]:method_text:[l(""didn\'t throw RuntimeException"");             } catch (RuntimeException e) {}         }     }     ])', 1), ('([4:/android/webkit/cts/WebViewDataDirTest.java]:[VIEW]:[4]:method_text:[_URL);             assertNull(""cookie leaked to alternate cookie jar"", cookie);         }     }     ])', 1), ('([2:/android/webkit/cts/WebViewDataDirTest.java]:[VIEW]:[2]:method_text:[))) {             processA.run(TestCookieInAlternateDir.class, REMOTE_TIMEOUT_MS);         }     } }])', 1), ('([2:/android/server/wm/AnrTests.java]:[VIEW]:[2]:method_text:[SIVE_ACTIVITY.getPackageName());         stopTestPackage(HOST_ACTIVITY.getPackageName());     }     ])', 1), ('([1:/android/widget/cts/ToolbarWithMarginsTest.java]:[VIEW]:[1]:method_text:[(35, toolbar.getTitleMarginEnd());         assertEquals(40, toolbar.getTitleMarginBottom());     } }])', 1), ('([1:/android/hardware/camera2/cts/HeifWriterTest.java]:[VIEW]:[1]:method_text:[ }      @Override     public void tearDown() throws Exception {         super.tearDown();     }     ])', 1), ('([12:/android/hardware/camera2/cts/HeifWriterTest.java]:[VIEW]:[12]:method_text:[           }             // TODO: add more key validations.         }         return result;     } }])', 1), ('([1:/android/hardware/camera2/cts/ImageWriterTest.java]:[VIEW]:[1]:method_text:[. This validates the ImageWriter explicit buffer copy      * interface.</li>      * </p>      */    ])', 1), ('([1:/android/hardware/camera2/cts/ImageWriterTest.java]:[VIEW]:[1]:method_text:[""Opaque image number planes should be zero"",                 image.getPlanes().length == 0);     } }])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[SMS]:[5]:method_text:[tchUser(USER_SYSTEM);             removeTestUsers();         }          super.tearDown();     }     ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[SMS]:[5]:method_text:[estSetDefaultSmsApplication"");          getDevice().uninstallPackage(SIMPLE_SMS_APP_PKG);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[VIEW]:[1]:method_text:[S: WebView unsupported"", mIsWatch);         executeDeviceOwnerTest(""proxy.PacProxyTest"");     }     ])', 1), ('([2:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[VIEW]:[2]:method_text:[rActivityLaunched() {                 mActivity = getActivity();             }         };     }     ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[VIEW]:[1]:method_text:[ mUiBot.assertChild(saveUi, ""second"", (o) -> assertThat(o.getText()).isEqualTo(""12-10""));     }     ])', 1), ('([2:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[VIEW]:[2]:method_text:[int resourceId) {         return new RemoteViews(getContext().getPackageName(), resourceId);     } }])', 1), ('([3:/android/assist/cts/TextViewTest.java]:[VIEW]:[3]:method_text:[rotected void customSetup() throws Exception {         startTestActivity(TEST_CASE_TYPE);     }     ])', 1), ('([13:/android/assist/cts/TextViewTest.java]:[VIEW]:[13]:method_text:[le.putInt(Utils.SCROLL_Y_POSITION, scrollY);         m3pActivityCallback.sendResult(bundle);     } }])', 1), ('([25:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[25]:method_text:[ST_MAX_WAIT_TIME, TEST_GEOS,                 TEST_RECEIVED_TIME, TEST_SLOT, TEST_SUB_ID);     }     ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[void testSubId() {         assertEquals(TEST_SUB_ID, mSmsCbMessage.getSubscriptionId());     }      ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[icalScope() {         assertEquals(TEST_GEO_SCOPE, mSmsCbMessage.getGeographicalScope());     }     ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[ testSerialNumber() {         assertEquals(TEST_SERIAL, mSmsCbMessage.getSerialNumber());     }     ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[c void testLocation() {         assertEquals(TEST_LOCATION, mSmsCbMessage.getLocation());     }     ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[gory() {         assertEquals(TEST_SERVICE_CATEGORY, mSmsCbMessage.getServiceCategory());     }     ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[id testLanguage() {         assertEquals(TEST_LANGUAGE, mSmsCbMessage.getLanguageCode());     }     ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[public void testBody() {         assertEquals(TEST_BODY, mSmsCbMessage.getMessageBody());     }     ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[c void testGeometries() {         assertEquals(TEST_GEOS, mSmsCbMessage.getGeometries());     }     ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[() {         assertEquals(TEST_MAX_WAIT_TIME, mSmsCbMessage.getMaximumWaitingDuration());     }     ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[ceivedTime() {         assertEquals(TEST_RECEIVED_TIME, mSmsCbMessage.getReceivedTime());     }     ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[lic void testSlotIndex() {         assertEquals(TEST_SLOT, mSmsCbMessage.getSlotIndex());     }     ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[sagePriority() {         assertEquals(TEST_PRIORITY, mSmsCbMessage.getMessagePriority());     }     ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[geFormat() {         assertEquals(TEST_MESSAGE_FORMAT, mSmsCbMessage.getMessageFormat());     }     ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[estEtwsInfo() {         assertEquals(TEST_ETWS_INFO, mSmsCbMessage.getEtwsWarningInfo());     }     ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[DataCodingScheme() {         assertEquals(TEST_DCS, mSmsCbMessage.getDataCodingScheme());     }     ])', 1), ('([11:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[11]:method_text:[ TEST_SLOT, TEST_SUB_ID);         assertEquals(info, mSmsCbMessage.getCmasWarningInfo());     }     ])', 1), ('([8:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[8]:method_text:[TEST_SLOT, TEST_SUB_ID);         assertEquals(false, mSmsCbMessage.isEmergencyMessage());     }     ])', 1), ('([8:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[8]:method_text:[      TEST_SLOT, TEST_SUB_ID);         assertEquals(true, mSmsCbMessage.isEtwsMessage());     }     ])', 1), ('([8:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[8]:method_text:[      TEST_SLOT, TEST_SUB_ID);         assertEquals(true, mSmsCbMessage.isCmasMessage());     }     ])', 1), ('([5:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[5]:method_text:[TEST_SLOT, TEST_SUB_ID);         assertEquals(true, mSmsCbMessage.needGeoFencingCheck());     }     ])', 1), ('([1:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[1]:method_text:[teger(Telephony.CellBroadcasts.SERIAL_NUMBER);         assertEquals(TEST_SERIAL, serial);     }     ])', 1), ('([2:/android/telephony/cts/SmsCbMessageTest.java]:[SMS]:[2]:method_text:[ertNull(cbMessage.getEtwsWarningInfo());         assertNull(cbMessage.getCmasWarningInfo());     } }])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-14-1		[('android.content.cts.AvailableIntentsTest', 2), ('android.telecom.cts.CallRedirectionServiceTest', 2), ('android.autofillservice.cts.SettingsIntentTest', 2)]		[('CtsContentTestCases', 2), ('CtsTelecomTestCases', 2), ('CtsAutoFillServiceTestCases', 2)]		3.2.3.5/C-14-1	"""C-14-1] MUST fully implement the AutofillService and AutofillManager APIs and honor the android.settings.REQUEST_SET_AUTOFILL_SERVICE intent to show a default app settings menu to enable and disable autofill and change the default autofill service for the user. If device implementations include a pre-installed app or wish to allow third-party apps to access the usage statistics, they: """	03020305.671401	REQUEST_SET_AUTOFILL_SERVICE 3.2.3.5/C-14-1 3.2.3.5 android.settings.REQUEST C-14-1				[('REQUEST_SET_AUTOFILL_SERVICE', 4), ('3.2.3.5', 2)]		CtsContentTestCases:android.content.cts.AvailableIntentsTest.testRequestSetAutofillServiceIntent CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.testWarningShown_userRejectsByTappingBack CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsAutoFillServiceTestCases:android.autofillservice.cts.SettingsIntentTest.testWarningShown_userRejectsByTappingBack CtsContentTestCases:android.content.cts.AvailableIntentsTest.testRequestSetAutofillServiceIntent		[('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallRedirectionServiceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/SettingsIntentTest.java', 2)]	[('/android/content/cts/AvailableIntentsTest.java', 4), ('/android/telecom/cts/CallRedirectionServiceTest.java', 4), ('/android/autofillservice/cts/SettingsIntentTest.java', 4)]	"[('([1:/android/content/cts/AvailableIntentsTest.java]:[REQUEST_SET_AUTOFILL_SERVICE]:[1]:method_text:[  .setData(Uri.parse(""package:android.content.cts""));         assertCanBeHandled(intent);     }     ])', 2), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 2), ('([1:/android/autofillservice/cts/SettingsIntentTest.java]:[REQUEST_SET_AUTOFILL_SERVICE]:[1]:method_text:[FLAG_ACTIVITY_NEW_TASK)                 .setData(Uri.parse(""package:"" + Helper.MY_PACKAGE));     } }])', 2)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-11-1		[('android.webkit.cts.WebSettingsTest', 52), ('android.media.tv.tuner.cts.TunerFilterTest', 12), ('android.media.cts.AudioManagerTest', 7), ('android.view.inputmethod.cts.InputMethodServiceTest', 6), ('android.media.cts.MediaRoute2ProviderServiceTest', 4), ('android.systemintents.cts.TestSystemIntents', 3), ('android.media.cts.ParamsTest', 2), ('android.os.cts.StrictModeTest', 2), ('com.android.cts.externalstorageapp.ReadDefaultUris', 2), ('android.os.cts.PowerManagerTest', 2), ('android.media.tv.cts.TvContentRatingTest', 2), ('com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest', 2), ('android.server.wm.PinnedStackTests', 2), ('android.autofillservice.cts.FieldsClassificationTest', 2), ('android.jobscheduler.cts.BatteryConstraintTest', 1), ('android.server.wm.AnrTests', 1), ('android.hardware.camera2.cts.HeifWriterTest', 1), ('android.os.cts.batterysaving.BatterySaverAlarmTest', 1), ('com.android.cts.devicepolicy.DeviceOwnerTest', 1), ('android.database.sqlite.cts.SQLiteWalTest', 1), ('android.text.cts.BoringLayoutTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerTest', 1), ('android.server.wm.WindowInsetsAnimationControllerTests', 1), ('android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest', 1), ('android.accessibilityservice.cts.AccessibilityGlobalActionsTest', 1), ('com.android.cts.devicepolicy.ManagedProfileTest', 1), ('android.angle.cts.CtsAngleRulesFileTest', 1), ('android.telephony.ims.cts.RcsUceAdapterTest', 1)]	[('getInstrumentation', 25), ('setUp', 24), ('getContext', 20), ('tearDown', 9), ('getDevice', 7), ('getPackageName', 6), ('getContentResolver', 5), ('trim', 5), ('getUiAutomation', 4), ('getPackageManager', 4), ('elapsedRealtime', 4), ('updateTitle', 3), ('create', 3), ('newBuilder', 3), ('build', 3), ('getEventName', 3), ('getArguments', 3), ('Builder', 3), ('openEventStream', 3), ('ime', 3), ('getTargetContext', 2), ('run', 2), ('setup', 2), ('updateAlarmManagerConstants', 2), ('resetAlarmManagerConstants', 2), ('openDatabase', 2), ('getResources', 2), ('getSystem', 2), ('getReturnBooleanValue', 2), ('getWindow', 2), ('verifyLayoutInflaterContext', 2), ('getOnBackPressedCallCount', 2), ('onBackPressed', 2), ('getSimpleName', 2), ('Bundle', 2), ('getClass', 2), ('getNetworkImageHtml', 1), ('getApplicationContext', 1), ('getThreadPolicy', 1), ('getVmPolicy', 1), ('hashCode', 1), ('hasBattery', 1), ('getJobState', 1), ('assertJobReady', 1), ('assertJobWaiting', 1), ('assertJobNotReady', 1), ('separateLogs', 1), ('teardown', 1), ('close', 1), ('getRandomInt', 1), ('AtomicInteger', 1), ('BroadcastReceiver', 1), ('incrementAndGet', 1), ('getMainLooper', 1), ('delete', 1), ('prepareDatabase', 1), ('getPath', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getRingerMode', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('UnlockScreenRule', 1), ('requestFocus', 1), ('getLayoutInflater', 1), ('CancellationSignal', 1), ('LimitedErrorCollector', 1), ('types', 1), ('statusBars', 1), ('navigationBars', 1), ('nullValue', 1), ('getDecorView', 1), ('getExternalCacheDir', 1), ('RouteCallback', 1), ('newSingleThreadExecutor', 1), ('check', 1), ('getInstance', 1), ('supportsPip', 1), ('postActivityLaunched', 1), ('getAutofillManager', 1)]	[('CtsWebkitTestCases', 52), ('CtsTvTestCases', 14), ('CtsMediaTestCases', 13), ('CtsInputMethodTestCases', 6), ('CtsOsHostTestCases', 4), ('CtsWindowManagerDeviceTestCases', 4), ('CtsSystemIntentTestCases', 3), ('CtsAutoFillServiceTestCases', 2), ('CtsJobSchedulerTestCases', 1), ('CtsCameraTestCases', 1), ('CtsBatterySavingTestCases', 1), ('CtsDatabaseTestCases', 1), ('CtsTextTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsTelephonyTestCases', 1)]		3.2.3.5/C-11-1	"""C-11-1] MUST have an activity that handles the Settings.ACTION_IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS intent but MAY implement it as a no-op. If device implementations declare the support for camera via android.hardware.camera.any they: """	03020305.671101	ACTION_IGNORE_BACKGROUND_DATA_RESTRICTIONS_SET 3.2.3.5 C-11-1 android.hardware.camera.any 3.2.3.5/C-11-1 TINGS Settings.ACTION				[('TINGS', 112), ('ACTION_IGNORE_BACKGROUND_DATA_RESTRICTIONS_SET', 1), ('Settings.ACTION', 1)]		CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.adoptShellPermissionIdentity CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testAvSettings CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testDownloadSettings CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testPesSettings CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testRecordSettings CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testSectionSettingsWithSectionBits CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testSectionSettingsWithTableInfo CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testAlpFilterConfiguration CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testIpFilterConfiguration CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testMmtpFilterConfiguration CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testTlvFilterConfiguration CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testTsFilterConfiguration CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.WebSettingsTest CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testUserAgentString_default CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessUserAgentString CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessAllowFileAccess CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessCacheMode_defaultValue CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessCacheMode_cacheElseNetwork CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessCacheMode_noCache CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessCacheMode_cacheOnly CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessCursiveFontFamily CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessFantasyFontFamily CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessFixedFontFamily CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessSansSerifFontFamily CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessSerifFontFamily CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessStandardFontFamily CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessDefaultFontSize CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessDefaultFixedFontSize CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessDefaultTextEncodingName CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessJavaScriptCanOpenWindowsAutomatically CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessJavaScriptEnabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessLayoutAlgorithm CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessMinimumFontSize CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessMinimumLogicalFontSize CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessPluginsEnabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testOffscreenPreRaster CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessPluginsPath CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessTextSize CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessUseDoubleTree CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessUseWideViewPort CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testSetNeedInitialFocus CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testSetRenderPriority CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessSupportMultipleWindows CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessSupportZoom CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessBuiltInZoomControls CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAppCacheDisabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAppCacheEnabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testDatabaseDisabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testDisabledActionModeMenuItems CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLoadsImagesAutomatically_default CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLoadsImagesAutomatically_httpImagesLoaded CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLoadsImagesAutomatically_dataUriImagesLoaded CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLoadsImagesAutomatically_blockLoadingImages CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLoadsImagesAutomatically_loadImagesWithoutReload CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testBlockNetworkImage CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testBlockNetworkLoads CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLocalImageLoads CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testIframesWhenAccessFromFileURLsEnabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testIframesWhenAccessFromFileURLsDisabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testXHRWhenAccessFromFileURLsDisabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAllowMixedMode CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testEnableSafeBrowsing CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testForceDark_default CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testForceDark_rendersDark CtsMediaTestCases:android.media.cts.ParamsTest.testSyncParamsMultipleSettings CtsMediaTestCases:android.media.cts.ParamsTest.testPlaybackParamsMultipleSettings CtsOsHostTestCases:android.os.cts.StrictModeTest.testIncorrectContextUse_GetViewConfiguration CtsCameraTestCases:android.hardware.camera2.cts.HeifWriterTest.testHeif CtsBatterySavingTestCases:android.os.cts.batterysaving.BatterySaverAlarmTest.hasTestServiceResponse None:com.android.cts.externalstorageapp.ReadDefaultUris.testPlayDefaultUris None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_LowStorage CtsDatabaseTestCases:android.database.sqlite.cts.SQLiteWalTest.exists CtsTextTestCases:android.text.cts.BoringLayoutTest.testDraw CtsOsHostTestCases:android.os.cts.PowerManagerTest.testPowerManager_setDynamicPowerSavings None:com.android.cts.devicepolicy.MixedProfileOwnerTest.testLockTaskAfterReboot_tryOpeningSettings CtsMediaTestCases:android.media.cts.AudioManagerTest.isMicrophoneMute CtsMediaTestCases:android.media.cts.AudioManagerTest.testMicrophoneMute CtsMediaTestCases:android.media.cts.AudioManagerTest.testMicrophoneMuteIntent CtsMediaTestCases:android.media.cts.AudioManagerTest.testSoundEffects CtsMediaTestCases:android.media.cts.AudioManagerTest.testCheckingZenModeBlockDoesNotRequireNotificationPolicyAccess CtsMediaTestCases:android.media.cts.AudioManagerTest.testMusicActive CtsMediaTestCases:android.media.cts.AudioManagerTest.testAccessMode CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testRequestHideSelf CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testRequestShowSelf CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testSendDownUpKeyEvents CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testOnUpdateCursorAnchorInfo CtsWindowManagerDeviceTestCases:android.server.wm.WindowInsetsAnimationControllerTests.assumeTestCompatibility None:android.media.cts.bitstreams.app.MediaBitstreamsDeviceSideTest.isDebuggerConnected CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityGlobalActionsTest.testPerformGlobalActionQuickSettings CtsTvTestCases:android.media.tv.cts.TvContentRatingTest.testCreateRating CtsTvTestCases:android.media.tv.cts.TvContentRatingTest.testFlattenAndUnflatten CtsMediaTestCases:android.media.cts.MediaRoute2ProviderServiceTest.finishActivity CtsMediaTestCases:android.media.cts.MediaRoute2ProviderServiceTest.testGetSessionInfoAndGetAllSessionInfo CtsMediaTestCases:android.media.cts.MediaRoute2ProviderServiceTest.testSessionRelatedCallbacks CtsMediaTestCases:android.media.cts.MediaRoute2ProviderServiceTest.testNotifySessionReleased None:com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest.testAddGetAndClearUserRestriction_onParent None:com.android.cts.devicepolicy.ManagedProfileTest.testSettingsIntents CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testConfigurationChangeOrderDuringTransition CtsAutoFillServiceTestCases:android.autofillservice.cts.FieldsClassificationTest.testUserDataConstraints CtsTelephonyTestCases:android.telephony.ims.cts.RcsUceAdapterTest.testCapabilityDiscoveryIntentReceiverExists		[('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 52), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFilterTest.java', 12), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 7), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodServiceTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRoute2ProviderServiceTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ParamsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/StrictModeTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/ExternalStorageApp/src/com/android/cts/externalstorageapp/ReadDefaultUris.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/PowerManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/cts/TvContentRatingTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 2), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PinnedStackTests.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/FieldsClassificationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/BatteryConstraintTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AnrTests.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/batterysaving/src/android/os/cts/batterysaving/BatterySaverAlarmTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/sqlite/cts/SQLiteWalTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/BoringLayoutTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationControllerTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/media/bitstreams/app/src/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityGlobalActionsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/angle/src/android/angle/cts/CtsAngleRulesFileTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/RcsUceAdapterTest.java', 1)]	[('/android/webkit/cts/WebSettingsTest.java', 53), ('/android/media/tv/tuner/cts/TunerFilterTest.java', 13), ('/android/media/cts/AudioManagerTest.java', 8), ('/android/view/inputmethod/cts/InputMethodServiceTest.java', 7), ('/android/systemintents/cts/TestSystemIntents.java', 6), ('/android/media/cts/MediaRoute2ProviderServiceTest.java', 5), ('/android/media/cts/ParamsTest.java', 3), ('/android/os/cts/StrictModeTest.java', 3), ('/com/android/cts/externalstorageapp/ReadDefaultUris.java', 3), ('/android/os/cts/PowerManagerTest.java', 3), ('/android/media/tv/cts/TvContentRatingTest.java', 3), ('/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 3), ('/android/server/wm/PinnedStackTests.java', 3), ('/android/autofillservice/cts/FieldsClassificationTest.java', 3), ('/android/jobscheduler/cts/BatteryConstraintTest.java', 2), ('/android/server/wm/AnrTests.java', 2), ('/android/hardware/camera2/cts/HeifWriterTest.java', 2), ('/android/os/cts/batterysaving/BatterySaverAlarmTest.java', 2), ('/com/android/cts/devicepolicy/DeviceOwnerTest.java', 2), ('/android/database/sqlite/cts/SQLiteWalTest.java', 2), ('/android/text/cts/BoringLayoutTest.java', 2), ('/com/android/cts/devicepolicy/MixedProfileOwnerTest.java', 2), ('/android/server/wm/WindowInsetsAnimationControllerTests.java', 2), ('/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java', 2), ('/android/accessibilityservice/cts/AccessibilityGlobalActionsTest.java', 2), ('/com/android/cts/devicepolicy/ManagedProfileTest.java', 2), ('/android/angle/cts/CtsAngleRulesFileTest.java', 2), ('/android/telephony/ims/cts/RcsUceAdapterTest.java', 2)]	"[('([1:/android/media/cts/AudioManagerTest.java]:[TINGS]:[1]:method_text:[      @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")    ])', 3), ('([2:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[2]:method_text:[   assertFalse(config.isPassthrough());         assertEquals(null, config.getSettings());     }     ])', 2), ('([4:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[4]:method_text:[that javascript cross-domain request permissions matches file domain settings     // for iframes    ])', 2), ('([8:/android/media/tv/cts/TvContentRatingTest.java]:[TINGS]:[8]:method_text:[gs does not contain "" + SUB_RATING_2,                 subRatings.contains(SUB_RATING_2));     }     ])', 2), ('([6:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[6]:method_text:[       if (mTuner != null) {           mTuner.close();           mTuner = null;         }     }     ])', 1), ('([5:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[5]:method_text:[(false)                         .build();          assertFalse(settings.isPassthrough());     }     ])', 1), ('([5:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[5]:method_text:[(2)                         .build();          assertEquals(2, settings.getDownloadId());     }     ])', 1), ('([6:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[6]:method_text:[;          assertEquals(2, settings.getStreamId());         assertTrue(settings.isRaw());     }     ])', 1), ('([15:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[15]:method_text:[ype());         assertEquals(RecordSettings.SC_INDEX_I_FRAME, settings.getScIndexMask());     }     ])', 1), ('([10:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[10]:method_text:[etMask());         Assert.assertArrayEquals(new byte[] {22, 55, 33}, settings.getMode());     }     ])', 1), ('([9:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[9]:method_text:[nabled());         assertTrue(settings.isRepeat());         assertTrue(settings.isRaw());     }     ])', 1), ('([2:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[2]:method_text:[TIONAL_HEADER, config.getLengthType());         assertEquals(null, config.getSettings());     }     ])', 1), ('([2:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[2]:method_text:[ertEquals(3, config.getMmtpPacketId());         assertEquals(null, config.getSettings());     }     ])', 1), ('([10:/android/media/tv/tuner/cts/TunerFilterTest.java]:[TINGS]:[10]:method_text:[{         return mContext.getPackageManager().hasSystemFeature(""android.hardware.tv.tuner"");     } }])', 1), ('([10:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[10]:method_text:[>.<minor>      * Chrome/<major>.<minor>.<branch>.<build>[ Mobile] Safari/<major>.<minor>      */    ])', 1), (""([1:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[1]:method_text:[erifies that the useragent testing regex is actually correct, because it's very complex.      */    ])"", 1), ('([7:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[7]:method_text:[AndWaitForCompletion(url);         assertEquals(customUserAgent, mOnUiThread.getTitle());     }     ])', 1), ('([5:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[5]:method_text:[with file access disabled"",                 dataDirTitle.equals(mOnUiThread.getTitle()));     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[2]:method_text:[Sync();         Thread.sleep(100); // Wait for open to be received on the icon db thread.     }     ])', 1), ('([4:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[4]:method_text:[hing resource"",                 requestCountAfterSecondLoad, requestCountAfterFirstLoad);     }     ])', 1), ('([4:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[4]:method_text:[d of caching"",                 requestCountAfterSecondLoad > requestCountAfterFirstLoad);     }     ])', 1), ('([6:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[6]:method_text:[ of fetching resource"",                 requestCountAfterFirstLoad, initialRequestCount);     }     ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[ewCusiveFamily);         assertEquals(newCusiveFamily, mSettings.getCursiveFontFamily());     }     ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[FantasyFamily);         assertEquals(newFantasyFamily, mSettings.getFantasyFontFamily());     }     ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[ly(newFixedFamily);         assertEquals(newFixedFamily, mSettings.getFixedFontFamily());     }     ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[ewFixedFamily);         assertEquals(newFixedFamily, mSettings.getSansSerifFontFamily());     }     ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[ly(newSerifFamily);         assertEquals(newSerifFamily, mSettings.getSerifFontFamily());     }     ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[ndardFamily);         assertEquals(newStandardFamily, mSettings.getStandardFontFamily());     }     ])', 1), ('([7:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[7]:method_text:[ettings.setDefaultFontSize(10);         assertEquals(10, mSettings.getDefaultFontSize());     }     ])', 1), ('([7:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[7]:method_text:[tDefaultFixedFontSize(10);         assertEquals(10, mSettings.getDefaultFixedFontSize());     }     ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[dingName);         assertEquals(newEncodingName, mSettings.getDefaultTextEncodingName());     }     ])', 1), ('([6:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[6]:method_text:[Url(TestHtmlConstants.POPUP_URL));         WebkitUtils.waitForFuture(createWindowFuture);     }     ])', 1), ('([4:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[4]:method_text:[  return ""javascript off"".equals(mOnUiThread.getTitle());             }         }.run();      }     ])', 1), ('([10:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[10]:method_text:[ assertEquals(WebSettings.LayoutAlgorithm.SINGLE_COLUMN, mSettings.getLayoutAlgorithm());     }     ])', 1), ('([7:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[7]:method_text:[ettings.setMinimumFontSize(10);         assertEquals(10, mSettings.getMinimumFontSize());     }     ])', 1), ('([7:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[7]:method_text:[imumLogicalFontSize(10);         assertEquals(10, mSettings.getMinimumLogicalFontSize());     }     ])', 1), ('([4:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[4]:method_text:[   * should be reflected in that test as necessary. See http://go/modifying-webview-cts.      */    ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[tings.setOffscreenPreRaster(true);         assertTrue(mSettings.getOffscreenPreRaster());     }     ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[nPath);         assertEquals(""Plugin path always empty"", """", mSettings.getPluginsPath());     }     ])', 1), ('([10:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[10]:method_text:[ize(TextSize.SMALLEST);         assertEquals(TextSize.SMALLEST, mSettings.getTextSize());     }     ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[         assertFalse(""setUseDoubleTree should be a no-op"", mSettings.getUseDoubleTree());     }     ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[  mSettings.setUseWideViewPort(true);         assertTrue(mSettings.getUseWideViewPort());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[2]:method_text:[      mSettings.setNeedInitialFocus(false);          mSettings.setNeedInitialFocus(true);     }     ])', 1), ('([6:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[6]:method_text:[erPriority.LOW);          mSettings.setRenderPriority(WebSettings.RenderPriority.NORMAL);     }     ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[.setSupportMultipleWindows(true);         assertTrue(mSettings.supportMultipleWindows());     }     ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[;          mSettings.setSupportZoom(false);         assertFalse(mSettings.supportZoom());     }     ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[ngs.setBuiltInZoomControls(true);         assertTrue(mSettings.getBuiltInZoomControls());     }     ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[1]:method_text:[ccur.         Thread.sleep(1000);         assertEquals(""Loaded"", mOnUiThread.getTitle());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[2]:method_text:[res creating a     // webChromeClient and listening to Quota callbacks, which is not documented.    ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[test should be reflected in that test as necessary. See http://go/modifying-webview-cts.      */    ])', 1), ('([9:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[9]:method_text:[ms(i);             assertEquals(i, mSettings.getDisabledActionModeMenuItems());         }     }     ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[1]:method_text:[           return;         }         assertTrue(mSettings.getLoadsImagesAutomatically());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[2]:method_text:[, ""text/html"", null);         assertEquals(NETWORK_IMAGE_HEIGHT, mOnUiThread.getTitle());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[2]:method_text:[ ""text/html"", null);         assertEquals(DATA_URL_IMAGE_HEIGHT, mOnUiThread.getTitle());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[2]:method_text:[ML, ""text/html"", null);         assertEquals(EMPTY_IMAGE_HEIGHT, mOnUiThread.getTitle());     }     ])', 1), ('([5:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[5]:method_text:[tForNonEmptyImage();         assertEquals(DATA_URL_IMAGE_HEIGHT, mOnUiThread.getTitle());     }     ])', 1), ('([5:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[5]:method_text:[ ""text/html"", null);         assertEquals(DATA_URL_IMAGE_HEIGHT, mOnUiThread.getTitle());     }     ])', 1), ('([4:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[4]:method_text:[d.getTitle());     }      // Verify that an image in local file system can be loaded by an asset    ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[3]:method_text:[     // Verify that enabling file access from file URLs enable XmlHttpRequest (XHR) across files    ])', 1), ('([4:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[4]:method_text:[ename, Context.MODE_PRIVATE);         fos.write(content.getBytes());         fos.close();     }     ])', 1), ('([8:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[8]:method_text:[   * should be reflected in that test as necessary. See http://go/modifying-webview-cts.      */    ])', 1), ('([5:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[5]:method_text:[ram.put(pixel, histogram.getOrDefault(pixel, 0) + 1);         }         return histogram;     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[2]:method_text:[          params.width = width;             webView.setLayoutParams(params);         });      }     ])', 1), ('([8:/android/webkit/cts/WebSettingsTest.java]:[TINGS]:[8]:method_text:[e assertions.             WebkitUtils.waitForNextQueueElement(mReceivedIconQueue);         }     } }])', 1), ('([1:/android/media/cts/ParamsTest.java]:[TINGS]:[1]:method_text:[_TOLERANCE);             assertEquals(25.f, p.getFrameRate(), FLOAT_TOLERANCE);         }     }     ])', 1), ('([1:/android/media/cts/ParamsTest.java]:[TINGS]:[1]:method_text:[LOAT_TOLERANCE);             assertEquals(25.f, p.getSpeed(), FLOAT_TOLERANCE);         }     }     ])', 1), ('([1:/android/systemintents/cts/TestSystemIntents.java]:[ACTION_IGNORE_BACKGROUND_DATA_RESTRICTIONS_SET]:[1]:method_text:[etInstrumentation().getContext();         mPackageManager = mContext.getPackageManager();     }     ])', 1), ('([19:/android/systemintents/cts/TestSystemIntents.java]:[TINGS]:[19]:method_text:[etInstrumentation().getContext();         mPackageManager = mContext.getPackageManager();     }     ])', 1), ('([9:/android/systemintents/cts/TestSystemIntents.java]:[Settings.ACTION]:[9]:method_text:[etInstrumentation().getContext();         mPackageManager = mContext.getPackageManager();     }     ])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[TINGS]:[1]:method_text:[icy);     }      public interface ThrowingRunnable {         void run() throws Exception;     }     ])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[TINGS]:[1]:method_text:[nager.FEATURE_WIFI)                 || pm.hasSystemFeature(PackageManager.FEATURE_ETHERNET);     } }])', 1), ('([9:/android/jobscheduler/cts/BatteryConstraintTest.java]:[TINGS]:[9]:method_text:[ that requires the device is charging, when the battery reports it is      * plugged in.      */    ])', 1), ('([9:/android/server/wm/AnrTests.java]:[TINGS]:[9]:method_text:[SIVE_ACTIVITY.getPackageName());         stopTestPackage(HOST_ACTIVITY.getPackageName());     }     ])', 1), ('([1:/android/hardware/camera2/cts/HeifWriterTest.java]:[TINGS]:[1]:method_text:[           }             // TODO: add more key validations.         }         return result;     } }])', 1), ('([1:/android/os/cts/batterysaving/BatterySaverAlarmTest.java]:[TINGS]:[1]:method_text:[         runKill(packageName, /*wait=*/ true);         Thread.sleep(1000);     }      @LargeTest    ])', 1), ('([1:/com/android/cts/externalstorageapp/ReadDefaultUris.java]:[TINGS]:[1]:method_text:[         mAudioManager = (AudioManager) mContext.getSystemService(Context.AUDIO_SERVICE);     }     ])', 1), ('([3:/com/android/cts/externalstorageapp/ReadDefaultUris.java]:[TINGS]:[3]:method_text:[(timeToPlayMs);         mp.stop();         mp.release();         Thread.sleep(timeToPlayMs);     } }])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[TINGS]:[2]:method_text:[                     ""settings delete global sys_storage_threshold_max_bytes"");         }     }     ])', 1), ('([3:/android/database/sqlite/cts/SQLiteWalTest.java]:[TINGS]:[3]:method_text:[AL file size is bigger than the threshold, and make sure      * the file gets truncated.      */    ])', 1), ('([4:/android/text/cts/BoringLayoutTest.java]:[TINGS]:[4]:method_text:[ToBitmap(layoutWithPrecomputed);          assertTrue(msg, resultBMP.sameAs(expectedBMP));     }     ])', 1), ('([2:/android/os/cts/PowerManagerTest.java]:[TINGS]:[2]:method_text:[flags parameter      * 2 Force the device to go to sleep      * 3 User activity happened      */    ])', 1), ('([1:/android/os/cts/PowerManagerTest.java]:[TINGS]:[1]:method_text:[solver,                     Global.DYNAMIC_POWER_SAVINGS_DISABLE_THRESHOLD, 0));         });     } }])', 1), ('([2:/com/android/cts/devicepolicy/MixedProfileOwnerTest.java]:[TINGS]:[2]:method_text:[LockTaskAfterReboot_tryOpeningSettings();     }      @Override     @FlakyTest(bugId = 140932104)    ])', 1), ('([5:/android/media/cts/AudioManagerTest.java]:[TINGS]:[5]:method_text:[      @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")    ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[TINGS]:[1]:method_text:[);         mAudioManager.playSoundEffect(AudioManager.FX_FOCUS_NAVIGATION_RIGHT, volume);     }     ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[TINGS]:[1]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                     false);         }     }     ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[TINGS]:[1]:method_text:[)     @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")    ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[TINGS]:[1]:method_text:[ctivity.getWindow().setSoftInputMode(windowFlags);             return layout;         });     }     ])', 1), ('([2:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[TINGS]:[2]:method_text:[) {                 // This is fine.  We actually expect timeout.             }         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[TINGS]:[1]:method_text:[                 View.GONE, TIMEOUT);              expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[TINGS]:[1]:method_text:[ Test compatibility requirements of {@link InputMethodService#sendDownUpKeyEvents(int)}.      */    ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[TINGS]:[1]:method_text:[putMethodService#onUpdateCursorAnchorInfo(CursorAnchorInfo)}      * will be called back.      */    ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[TINGS]:[1]:method_text:[fo);             assertEquals(receivedCursorAnchorInfo, originalCursorAnchorInfo);         }     } }])', 1), ('([2:/android/server/wm/WindowInsetsAnimationControllerTests.java]:[TINGS]:[2]:method_text:[tView.getRootWindowInsets().getInsetsIgnoringVisibility(mType));         }     }      @Presubmit    ])', 1), ('([11:/android/media/cts/bitstreams/app/MediaBitstreamsDeviceSideTest.java]:[TINGS]:[11]:method_text:[(out);             out.flush();          } finally {              out.close();          }     }     ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityGlobalActionsTest.java]:[TINGS]:[2]:method_text:[S));          // Sleep a bit so the UI is settled.         waitForIdle();     }      @MediumTest    ])', 1), ('([1:/android/media/cts/MediaRoute2ProviderServiceTest.java]:[TINGS]:[1]:method_text:[(mService != null) {             mService.clear();             mService = null;         }     }     ])', 1), ('([4:/android/media/cts/MediaRoute2ProviderServiceTest.java]:[TINGS]:[4]:method_text:[e.getAllSessionInfo().size());         assertNull(mService.getSessionInfo(SESSION_ID_2));     }     ])', 1), ('([11:/android/media/cts/MediaRoute2ProviderServiceTest.java]:[TINGS]:[11]:method_text:[HintsListener(null);             releaseControllers(mRouter2.getControllers());         }     }     ])', 1), ('([2:/android/media/cts/MediaRoute2ProviderServiceTest.java]:[TINGS]:[2]:method_text:[(transferCallback);             releaseControllers(mRouter2.getControllers());         }     }      ])', 1), ('([1:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[TINGS]:[1]:method_text:[not used in test.                     // UserManager.DISALLOW_DEBUGGING_FEATURES             );     ])', 1), ('([4:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[TINGS]:[4]:method_text:[ns(ADMIN_RECEIVER_COMPONENT);         assertThat(restrictions.get(restriction)).isNull();     }     ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[TINGS]:[2]:method_text:[IntentsTest"",                 mProfileUserId);     }      /** Tests for the API helper class. */    ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[TINGS]:[3]:method_text:[void setUp() throws Exception {         super.setUp();         assumeTrue(supportsPip());     }     ])', 1), ('([5:/android/server/wm/PinnedStackTests.java]:[TINGS]:[5]:method_text:[        } catch (InterruptedException impossible) {}         }     }      @Ignore(""b/149946388"")    ])', 1), ('([19:/android/autofillservice/cts/FieldsClassificationTest.java]:[TINGS]:[19]:method_text:[G_MAX_CC_LENGTH"", 19);         mCreditCardBundle.putInt(""OPTIONAL_ARG_SUFFIX_LENGTH"", 4);     }     ])', 1), ('([1:/android/autofillservice/cts/FieldsClassificationTest.java]:[TINGS]:[1]:method_text:[ength()).isEqualTo(50);         assertThat(UserData.getMaxCategoryCount()).isEqualTo(42);     }     ])', 1), ('([7:/android/angle/cts/CtsAngleRulesFileTest.java]:[TINGS]:[7]:method_text:[sFile);     }      /**      * Test ANGLE is not loaded when an empty rules file is used.      */    ])', 1), ('([1:/android/telephony/ims/cts/RcsUceAdapterTest.java]:[TINGS]:[1]:method_text:[                + "" activity intent filter must have a > 0 priority."", 0, info.priority);     }     ])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-7-1		[('android.systemintents.cts.TestSystemIntents', 1), ('android.telecom.cts.CallRedirectionServiceTest', 1)]	[('create', 1), ('setUp', 1), ('getInstrumentation', 1), ('getContext', 1), ('getPackageManager', 1)]	[('CtsSystemIntentTestCases', 1), ('CtsTelecomTestCases', 1)]		3.2.3.5/C-7-1	"""C-7-1] MUST provide a user-accessible mechanism to add and configure third-party input methods in response to the android.settings.INPUT_METHOD_SETTINGS intent. If device implementations support third-party accessibility services, they: """	03020305.670701	android.settings.INPUT INPUT_METHOD_SETTINGS 3.2.3.5 3.2.3.5/C-7-1 C-7-1				[('INPUT_METHOD_SETTINGS', 1), ('3.2.3.5', 1)]		CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified		[('/home/gpoor/cts-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallRedirectionServiceTest.java', 1)]	[('/android/systemintents/cts/TestSystemIntents.java', 2), ('/android/telecom/cts/CallRedirectionServiceTest.java', 2)]	[('([1:/android/systemintents/cts/TestSystemIntents.java]:[INPUT_METHOD_SETTINGS]:[1]:method_text:[etInstrumentation().getContext();         mPackageManager = mContext.getPackageManager();     }     ])', 1), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 1)]					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-13-2		[('com.android.cts.managedprofile.ProvisioningTest', 4), ('com.android.cts.comp.provisioning.ManagedProfileProvisioningTest', 2), ('com.android.cts.managedprofile.PreManagedProfileTest', 2), ('com.android.cts.deviceowner.PreDeviceOwnerTest', 2), ('com.android.cts.deviceowner.DeviceOwnerProvisioningTest', 2), ('com.android.cts.devicepolicy.singleadmin.ProvisioningSingleAdminTest', 2), ('com.android.cts.profileowner.ManagementTest', 1), ('com.android.cts.comp.ManagementTest', 1), ('com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest', 1), ('android.telecom.cts.CallRedirectionServiceTest', 1), ('com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 1)]	[('setUp', 5), ('getContext', 2), ('getName', 2), ('getSimpleName', 2), ('getPackageManager', 1), ('getPackage', 1), ('getTargetContext', 1)]	[('CtsTelecomTestCases', 1)]		3.2.3.5/C-13-2	"""C-13-2] MUST honor the intents android.app.action.ADMIN_POLICY_COMPLIANCE, android.app.action.GET_PROVISIONING_MODE, android.app.action.PROVISIONING_SUCCESSFUL, android.app.action.PROVISION_MANAGED_DEVICE, android.app.action.PROVISION_MANAGED_PROFILE, android.app.action.SET_NEW_PARENT_PROFILE_PASSWORD, android.app.action.SET_NEW_PASSWORD & android.app.action.START_ENCRYPTION and have an activity to provide fulfillment for these intents as described in SDK here. If device implementations declare the android.software.autofill feature flag, they: """	03020305.671302	START_ENCRYPTION android.app.action.SET PROVISION_MANAGED_PROFILE android.app.action.PROVISION SET_NEW_PASSWORD android.software.autofill android.app.action.PROVISIONING android.app.action.ADMIN PROVISIONING_SUCCESSFUL 3.2.3.5 PROVISION_MANAGED_DEVICE ADMIN_POLICY_COMPLIANCE SET_NEW_PARENT_PROFILE_PASSWORD C-13-2 android.app.action.START GET_PROVISIONING_MODE android.app.action.GET 3.2.3.5/C-13-2				[('PROVISION_MANAGED_PROFILE', 13), ('PROVISION_MANAGED_DEVICE', 3), ('PROVISIONING_SUCCESSFUL', 2), ('3.2.3.5', 1), ('android.software.autofill', 1)]		None:com.android.cts.comp.provisioning.ManagedProfileProvisioningTest.testProvisioningCorpOwnedManagedProfile None:com.android.cts.profileowner.ManagementTest.testProvisionManagedProfileNotAllowed None:com.android.cts.managedprofile.PreManagedProfileTest.testIsProvisioningAllowedTrue None:com.android.cts.managedprofile.PreManagedProfileTest.testIsProvisioningAllowedFalse None:com.android.cts.deviceowner.PreDeviceOwnerTest.testIsProvisioningNotAllowedForManagedProfileAction None:com.android.cts.deviceowner.PreDeviceOwnerTest.testIsProvisioningAllowedFalse None:com.android.cts.comp.ManagementTest.testProvisionManagedProfileNotAllowed None:com.android.cts.deviceowner.DeviceOwnerProvisioningTest.getSystemPackageNameList None:com.android.cts.deviceowner.DeviceOwnerProvisioningTest.testProvisionDeviceOwner_withAllSystemAppsEnabled None:com.android.cts.devicepolicy.singleadmin.ProvisioningSingleAdminTest.testManagedProfileProvisioning None:com.android.cts.devicepolicy.ManagedProfileProvisioningSingleAdminTest.removeTestUsers CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified None:com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest.testCannotAddManagedProfileViaManagedProvisioning None:com.android.cts.devicepolicy.DeviceAndProfileOwnerTest.testDisallowAutofill_allowed None:com.android.cts.managedprofile.ProvisioningTest.PersistableBundle None:com.android.cts.managedprofile.ProvisioningTest.testAccountNotExist None:com.android.cts.managedprofile.ProvisioningTest.PersistableBundle None:com.android.cts.managedprofile.ProvisioningTest.testVerifySuccessfulIntentWasReceived		[('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ProvisioningTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/PreManagedProfileTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DeviceOwnerProvisioningTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/SingleAdminApp/src/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/ManagementTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/ManagementTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallRedirectionServiceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 1)]	[('/com/android/cts/managedprofile/ProvisioningTest.java', 6), ('/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 4), ('/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 3), ('/com/android/cts/managedprofile/PreManagedProfileTest.java', 3), ('/com/android/cts/deviceowner/DeviceOwnerProvisioningTest.java', 3), ('/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java', 3), ('/com/android/cts/profileowner/ManagementTest.java', 2), ('/com/android/cts/comp/ManagementTest.java', 2), ('/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java', 2), ('/android/telecom/cts/CallRedirectionServiceTest.java', 2), ('/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 2), ('/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 2)]	"[('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[tends AndroidTestCase {     private static final String TAG = ""ManagedProfileProvisioningTest"";     ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ntent) {         return intent != null && intent.getExtras().containsKey(Intent.EXTRA_USER);     } }])', 1), ('([1:/com/android/cts/profileowner/ManagementTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ProvisioningAllowed(                 DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     } }])', 1), ('([1:/com/android/cts/managedprofile/PreManagedProfileTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[           .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }     ])', 1), ('([1:/com/android/cts/managedprofile/PreManagedProfileTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[             .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }  }])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[             .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }  }])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[PROVISION_MANAGED_DEVICE]:[1]:method_text:[olicyManager.isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_DEVICE));     }     ])', 1), ('([1:/com/android/cts/comp/ManagementTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[visioningAllowed(                 DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }     ])', 1), ('([1:/com/android/cts/deviceowner/DeviceOwnerProvisioningTest.java]:[PROVISION_MANAGED_DEVICE]:[1]:method_text:[d tearDown() throws Exception {         enableUninstalledApp();         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/deviceowner/DeviceOwnerProvisioningTest.java]:[PROVISION_MANAGED_DEVICE]:[1]:method_text:[pInfo) -> appInfo.packageName)                 .sorted()                 .collect(toList());     } }])', 1), ('([1:/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[     public void setUp() {         mContext = InstrumentationRegistry.getTargetContext();     }     ])', 1), ('([1:/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[TestManager(mContext);         assertTrue(provisioningMgr.startProvisioningAndWait(intent));     } }])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileProvisioningSingleAdminTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[().uninstallPackage(SINGLE_ADMIN_PKG);         }         super.tearDown();     }      @FlakyTest    ])', 1), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 1), (""([1:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[se when called with      * ACTION_PROVISION_MANAGED_PROFILE when there's a device owner.      */    ])"", 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[android.software.autofill]:[1]:method_text:[eTestMethod("".AutofillRestrictionsTest"",                 ""testDisallowAutofill_allowed"");     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[.getTargetContext();         mDpm = mContext.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[PROVISION_MANAGED_PROFILE]:[1]:method_text:[ext context) {         return context.getSharedPreferences(SHARED_PREFERENCE_FILE_NAME, 0);     }  }])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[PROVISIONING_SUCCESSFUL]:[1]:method_text:[.getTargetContext();         mDpm = mContext.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[PROVISIONING_SUCCESSFUL]:[1]:method_text:[ences(mContext).getBoolean(KEY_PROVISIONING_SUCCESSFUL_RECEIVED,                 false));     }     ])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-12-1		[('com.android.cts.managedprofile.DisallowSharingIntoProfileTest', 2), ('android.content.cts.AvailableIntentsTest', 1), ('android.telecom.cts.CallRedirectionServiceTest', 1)]	[('setUp', 4), ('getInstrumentation', 2), ('getContext', 2)]	[('CtsContentTestCases', 1), ('CtsTelecomTestCases', 1)]		3.2.3.5/C-12-1	"""C-12-1] MUST honor the android.media.action.STILL_IMAGE_CAMERA and android.media.action.STILL_IMAGE_CAMERA_SECURE intent and launch the camera in still image mode as described in the SDK. """	03020305.671201	STILL_IMAGE_CAMERA C-12-1 android.media.action.STILL STILL_IMAGE_CAMERA_SECURE 3.2.3.5 3.2.3.5/C-12-1				[('STILL_IMAGE_CAMERA', 2), ('STILL_IMAGE_CAMERA_SECURE', 1), ('3.2.3.5', 1)]		CtsContentTestCases:android.content.cts.AvailableIntentsTest.testCamera CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified		[('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallRedirectionServiceTest.java', 1)]	[('/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java', 4), ('/android/content/cts/AvailableIntentsTest.java', 2), ('/android/telecom/cts/CallRedirectionServiceTest.java', 2)]	[('([1:/android/content/cts/AvailableIntentsTest.java]:[STILL_IMAGE_CAMERA]:[1]:method_text:[it can more easily be suppressed while we      * fix targets that are out of compliance.      */    ])', 1), ('([2:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[STILL_IMAGE_CAMERA]:[2]:method_text:[getSystemService(DevicePolicyManager.class);         assertNotNull(mDevicePolicyManager);     }     ])', 1), ('([1:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[STILL_IMAGE_CAMERA_SECURE]:[1]:method_text:[getSystemService(DevicePolicyManager.class);         assertNotNull(mDevicePolicyManager);     }     ])', 1), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 1)]					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-15-1		[('android.content.cts.AvailableIntentsTest', 2), ('android.telecom.cts.CallRedirectionServiceTest', 2), ('android.cts.statsd.atom.AtomTestCase', 1), ('com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper', 1)]	[('setUp', 2), ('addIntentsThatDependOnDeviceConfigs', 2), ('addIntentsThatDependOnDeviceFeatures', 2), ('getPackageManager', 2), ('checkIntentForwardingFromPrimary', 2), ('checkIntentsWithOptionalForwardingFromManagedAreHandled', 2), ('hashCode', 1), ('supportsMultipleUsers', 1), ('getExternalStorageState', 1), ('checkIntentForwardingFromManaged', 1)]	[('CtsContentTestCases', 2), ('CtsTelecomTestCases', 2)]		3.2.3.5/C-15-1	"""C-15-1] MUST still have an activity that handles the android.settings.ACTION_USAGE_ACCESS_SETTINGS intent pattern but MUST implement it as a no-op, that is to have an equivalent behavior as when the user is declined for access. If device implementations report the feature android.hardware.audio.output, they: """	03020305.671501	C-15-1 android.hardware.audio.output 3.2.3.5 3.2.3.5/C-15-1 android.settings.ACTION ACTION_USAGE_ACCESS_SETTINGS				[('ACTION_USAGE_ACCESS_SETTINGS', 2), ('3.2.3.5', 2), ('android.hardware.audio.output', 1), ('android.settings.ACTION', 1)]		CtsContentTestCases:android.content.cts.AvailableIntentsTest.testUsageAccessSettings CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified None:android.cts.statsd.atom.AtomTestCase.getReportList None:com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper.isEmpty CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsContentTestCases:android.content.cts.AvailableIntentsTest.testUsageAccessSettings		[('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallRedirectionServiceTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/atom/AtomTestCase.java', 1), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java', 1)]	[('/android/content/cts/AvailableIntentsTest.java', 4), ('/android/telecom/cts/CallRedirectionServiceTest.java', 4), ('/android/cts/statsd/atom/AtomTestCase.java', 2), ('/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java', 2)]	"[('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_USAGE_ACCESS_SETTINGS]:[1]:method_text:[         assertCanBeHandled(new Intent(Settings.ACTION_USAGE_ACCESS_SETTINGS));         }     }     ])', 2), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 2), ('([1:/android/cts/statsd/atom/AtomTestCase.java]:[android.hardware.audio.output]:[1]:method_text:[estamp is not truncated"")                 .that(timestampNs % fiveMinutesInNs).isEqualTo(0);     } }])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java]:[android.settings.ACTION]:[1]:method_text:[orMessage);                 success = false;             }         }         return success;     } }])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-3-2		[('android.content.cts.AvailableIntentsTest', 4), ('android.telecom.cts.CallRedirectionServiceTest', 2), ('com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper', 1), ('com.android.cts.devicepolicy.BaseManagedProfileTest', 1)]	[('addIntentsThatDependOnDeviceConfigs', 2), ('addIntentsThatDependOnDeviceFeatures', 2), ('getPackageManager', 2), ('checkIntentForwardingFromPrimary', 2), ('checkIntentsWithOptionalForwardingFromManagedAreHandled', 2), ('setUp', 2), ('supportsMultipleUsers', 1), ('getExternalStorageState', 1), ('checkIntentForwardingFromManaged', 1)]	[('CtsContentTestCases', 4), ('CtsTelecomTestCases', 2)]		3.2.3.5/C-3-2	"""C-3-2] MUST honor android.nfc.cardemulation.action.ACTION_CHANGE_DEFAULT intent to show an activity which opens a dialog to ask the user to change the default card emulation service for a certain category as described in the SDK. If device implementations report android.hardware.nfc, they: """	03020305.670302	ACTION_CHANGE_DEFAULT 3.2.3.5 C-3-2 3.2.3.5/C-3-2 android.nfc.cardemulation.action.ACTION android.hardware.nfc				[('ACTION_CHANGE_DEFAULT', 5), ('3.2.3.5', 2), ('android.hardware.nfc', 1)]		CtsContentTestCases:android.content.cts.AvailableIntentsTest.testChangeDefaultSmsApplication CtsContentTestCases:android.content.cts.AvailableIntentsTest.testChangeDefaultDialer CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified None:com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper.isEmpty None:com.android.cts.devicepolicy.BaseManagedProfileTest.removeTestUsers CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsContentTestCases:android.content.cts.AvailableIntentsTest.testChangeDefaultSmsApplication CtsContentTestCases:android.content.cts.AvailableIntentsTest.testChangeDefaultDialer		[('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallRedirectionServiceTest.java', 2), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseManagedProfileTest.java', 1)]	[('/android/content/cts/AvailableIntentsTest.java', 6), ('/android/telecom/cts/CallRedirectionServiceTest.java', 4), ('/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java', 2), ('/com/android/cts/devicepolicy/BaseManagedProfileTest.java', 2)]	"[('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_CHANGE_DEFAULT]:[1]:method_text:[   assertCanBeHandled(new Intent(Telephony.Sms.Intents.ACTION_CHANGE_DEFAULT));         }     }     ])', 2), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_CHANGE_DEFAULT]:[1]:method_text:[   assertCanBeHandled(new Intent(TelecomManager.ACTION_CHANGE_DEFAULT_DIALER));         }     }     ])', 2), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 2), ('([1:/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java]:[ACTION_CHANGE_DEFAULT]:[1]:method_text:[orMessage);                 success = false;             }         }         return success;     } }])', 1), ('([1:/com/android/cts/devicepolicy/BaseManagedProfileTest.java]:[android.hardware.nfc]:[1]:method_text:[ for command "" + command + "": ""                 + getDevice().executeShellCommand(command));     } }])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-5-1		[('android.opengl.cts.OpenGlEsVersionTest', 2), ('android.content.cts.AvailableIntentsTest', 2), ('android.telecom.cts.CallRedirectionServiceTest', 2)]		[('CtsOpenGLTestCases', 2), ('CtsContentTestCases', 2), ('CtsTelecomTestCases', 2)]		3.2.3.5/C-5-1	"""C-5-1] MUST honor the ‘android.bluetooth.adapter.action.REQUEST_ENABLE’ intent and show a system activity to allow the user to turn on Bluetooth. """	03020305.670501	3.2.3.5/C-5-1 C-5-1 android.bluetooth.adapter.action.REQUEST 3.2.3.5 REQUEST_ENABLE				[('C-5-1', 2), ('REQUEST_ENABLE', 2), ('3.2.3.5', 2)]		CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions CtsContentTestCases:android.content.cts.AvailableIntentsTest.testRequestEnableContentCaptureIntent CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions CtsContentTestCases:android.content.cts.AvailableIntentsTest.testRequestEnableContentCaptureIntent		[('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallRedirectionServiceTest.java', 2)]	[('/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/android/content/cts/AvailableIntentsTest.java', 4), ('/android/telecom/cts/CallRedirectionServiceTest.java', 4)]	"[('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-5-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 2), ('([1:/android/content/cts/AvailableIntentsTest.java]:[REQUEST_ENABLE]:[1]:method_text:[tent(Settings.ACTION_REQUEST_ENABLE_CONTENT_CAPTURE);         assertCanBeHandled(intent);     }     ])', 2), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 2)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-8-1		[('android.content.cts.AvailableIntentsTest', 4), ('android.accessibilityservice.cts.AccessibilitySettingsTest', 2), ('android.telecom.cts.CallRedirectionServiceTest', 2), ('com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper', 2), ('com.android.cts.verifier.managedprovisioning.PolicyTransparencyTestListActivity', 1)]	[('addIntentsThatDependOnDeviceConfigs', 4), ('addIntentsThatDependOnDeviceFeatures', 4), ('getPackageManager', 4), ('checkIntentForwardingFromPrimary', 4), ('checkIntentsWithOptionalForwardingFromManagedAreHandled', 4), ('supportsMultipleUsers', 2), ('getExternalStorageState', 2), ('checkIntentForwardingFromManaged', 2)]	[('CtsContentTestCases', 4), ('CtsAccessibilityServiceTestCases', 2), ('CtsTelecomTestCases', 2)]		3.2.3.5/C-8-1	"""C-8-1] MUST honor the android.settings.ACCESSIBILITY_SETTINGS intent to provide a user-accessible mechanism to enable and disable the third-party accessibility services alongside the preloaded accessibility services. If device implementations include support for Wi-Fi Easy Connect and expose the functionality to third-party apps, they: """	03020305.670801	3.2.3.5/C-8-1 3.2.3.5 C-8-1 android.settings.ACCESSIBILITY ACCESSIBILITY_SETTINGS				[('ACCESSIBILITY_SETTINGS', 8), ('3.2.3.5', 2), ('android.settings.ACCESSIBILITY', 1)]		CtsContentTestCases:android.content.cts.AvailableIntentsTest.testChangePhoneAccounts CtsContentTestCases:android.content.cts.AvailableIntentsTest.testShowCallAccessibilitySettings CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilitySettingsTest.testAccessibilitySettingsIntentHandled CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified None:com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper.isEmpty None:com.android.cts.verifier.managedprovisioning.IntentFiltersTestHelper.isEmpty CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilitySettingsTest.testAccessibilitySettingsIntentHandled None:com.android.cts.verifier.managedprovisioning.PolicyTransparencyTestListActivity.setPassFailButtonClickListeners CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsContentTestCases:android.content.cts.AvailableIntentsTest.testChangePhoneAccounts CtsContentTestCases:android.content.cts.AvailableIntentsTest.testShowCallAccessibilitySettings		[('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 4), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilitySettingsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallRedirectionServiceTest.java', 2), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java', 2), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/PolicyTransparencyTestListActivity.java', 1)]	[('/android/content/cts/AvailableIntentsTest.java', 6), ('/android/accessibilityservice/cts/AccessibilitySettingsTest.java', 4), ('/android/telecom/cts/CallRedirectionServiceTest.java', 4), ('/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java', 4), ('/com/android/cts/verifier/managedprovisioning/PolicyTransparencyTestListActivity.java', 2)]	"[('([1:/android/content/cts/AvailableIntentsTest.java]:[ACCESSIBILITY_SETTINGS]:[1]:method_text:[ON_SHOW_CALL_ACCESSIBILITY_SETTINGS, it will display the call accessibility preferences.      */    ])', 2), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ACCESSIBILITY_SETTINGS]:[1]:method_text:[ }      /**      * Test ACTION_SHOW_CALL_SETTINGS, it will display the call preferences.      */    ])', 2), ('([2:/android/accessibilityservice/cts/AccessibilitySettingsTest.java]:[ACCESSIBILITY_SETTINGS]:[2]:method_text:[ACTION_ACCESSIBILITY_SETTINGS"";         assertTrue(message, !resolvedActivities.isEmpty());     } } ])', 2), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 2), ('([1:/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java]:[android.settings.ACCESSIBILITY]:[1]:method_text:[orMessage);                 success = false;             }         }         return success;     } }])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/IntentFiltersTestHelper.java]:[ACCESSIBILITY_SETTINGS]:[1]:method_text:[orMessage);                 success = false;             }         }         return success;     } }])', 1), ('([1:/com/android/cts/verifier/managedprovisioning/PolicyTransparencyTestListActivity.java]:[ACCESSIBILITY_SETTINGS]:[1]:method_text:[tExtra(PolicyTransparencyTestListActivity.EXTRA_MODE, mMode);         startActivity(intent);     } }])', 1)]"					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-13-1		[('android.admin.cts.DeviceAdminActivationTest', 2), ('android.telecom.cts.CallRedirectionServiceTest', 1)]	[('getSimpleName', 1)]	[('CtsAdminTestCases', 2), ('CtsTelecomTestCases', 1)]		3.2.3.5/C-13-1	"""C-13-1] MUST honor the intent android.app.action.ADD_DEVICE_ADMIN to invoke a UI to bring the user through adding the device administrator to the system (or allowing them to reject it). """	03020305.671301	3.2.3.5/C-13-1 C-13-1 ADD_DEVICE_ADMIN 3.2.3.5 android.app.action.ADD				[('ADD_DEVICE_ADMIN', 2), ('3.2.3.5', 1)]		CtsAdminTestCases:android.admin.cts.DeviceAdminActivationTest.DeviceAdminActivationTest CtsAdminTestCases:android.admin.cts.DeviceAdminActivationTest.testActivateBrokenReceiver5Fails CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified		[('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DeviceAdminActivationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallRedirectionServiceTest.java', 1)]	[('/android/admin/cts/DeviceAdminActivationTest.java', 3), ('/android/telecom/cts/CallRedirectionServiceTest.java', 2)]	[('([1:/android/admin/cts/DeviceAdminActivationTest.java]:[ADD_DEVICE_ADMIN]:[1]:method_text:[ctivateDeviceAdminActivity();         } finally {             super.tearDown();         }     }     ])', 1), ('([1:/android/admin/cts/DeviceAdminActivationTest.java]:[ADD_DEVICE_ADMIN]:[1]:method_text:[                new ComponentName(getInstrumentation().getTargetContext(), receiverClass)));     } }])', 1), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 1)]					
52:260955) 3.2.3.5  . Conditional Application Intents	3.2.3.5	C-9-1		[('android.content.cts.AvailableIntentsTest', 2), ('android.telecom.cts.CallRedirectionServiceTest', 2)]		[('CtsContentTestCases', 2), ('CtsTelecomTestCases', 2)]		3.2.3.5/C-9-1	"""C-9-1] MUST implement the Settings#ACTION_PROCESS_WIFI_EASY_CONNECT_URI Intent APIs as described in the SDK documentation. If device implementations provide the data saver mode, they: *"""	03020305.670901	C-9-1 3.2.3.5 3.2.3.5/C-9-1 ACTION_PROCESS_WIFI_EASY_CONNECT_URI				[('ACTION_PROCESS_WIFI_EASY_CONNECT_URI', 2), ('3.2.3.5', 2)]		CtsContentTestCases:android.content.cts.AvailableIntentsTest.testEasyConnectIntent CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsTelecomTestCases:android.telecom.cts.CallRedirectionServiceTest.testPlaceCallUnmodified CtsContentTestCases:android.content.cts.AvailableIntentsTest.testEasyConnectIntent		[('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallRedirectionServiceTest.java', 2)]	[('/android/content/cts/AvailableIntentsTest.java', 4), ('/android/telecom/cts/CallRedirectionServiceTest.java', 4)]	[('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_PROCESS_WIFI_EASY_CONNECT_URI]:[1]:method_text:[     intent.setData(Uri.parse(QRCODE));             assertCanBeHandled(intent);         }     }     ])', 2), ('([2:/android/telecom/cts/CallRedirectionServiceTest.java]:[3.2.3.5]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 2)]					
83:338286) 3.8.16  . Device Controls	3.8.16	H-1-1		[('android.opengl.cts.OpenGlEsVersionTest', 2), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2)]		[('CtsOpenGLTestCases', 2), ('CtsCameraTestCases', 2)]		3.8.16/H-1-1	""">3.8.16/H-1-1] MUST declare the feature flag android.software.controls and set it to true. [<a href=""#3_8_user_interface_compatibility"""""	03081600.720101	android.software.controls H-1-1 3.8.16 3.8.16/H-1-1				[('H-1-1', 4)]		CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensions CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensions CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics		[('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2)]	[('/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 4)]	"[('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[H-1-1]:[1]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");         }     }      @CddTest(requirement=""7.1.4.5/H-1-1"")    ])', 2), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-1]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 2)]"					
83:338286) 3.8.16  . Device Controls	3.8.16	H-1-2		[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2)]		[('CtsCameraTestCases', 2)]		3.8.16/H-1-2	""">3.8.16/H-1-2] MUST provide a user affordance with the ability to add, edit, select, and operate the user’s favorite device controls from the controls registered by the third-party applications through the ControlsProviderService and the Control APIs. [<a href=""#3_8_user_interface_compatibility"""""	03081600.720102	3.8.16/H-1-2 3.8.16 H-1-2				[('H-1-2', 2)]		CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics		[('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2)]	[('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 4)]	"[('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-2]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 2)]"					
83:338286) 3.8.16  . Device Controls	3.8.16	H-1-3		[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2)]		[('CtsCameraTestCases', 2)]		3.8.16/H-1-3	""">3.8.16/H-1-3] MUST provide access to this user affordance within three interactions from a default Launcher. [<a href=""#3_8_user_interface_compatibility"""""	03081600.720103	H-1-3 3.8.16 3.8.16/H-1-3				[('H-1-3', 2)]		CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics		[('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2)]	[('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 4)]	"[('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-3]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 2)]"					
83:338286) 3.8.16  . Device Controls	3.8.16	H-1-4		[('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2)]		[('CtsCameraTestCases', 2)]		3.8.16/H-1-4	""">3.8.16/H-1-4] MUST accurately render in this user affordance the name and icon of each third-party app that provides controls via the ControlsProviderService API as well as any specified fields provided by the Control APIs. Conversely, If Handheld device implementations do not implement such controls, they: [<a href=""#3_8_user_interface_compatibility"""""	03081600.720104	3.8.16/H-1-4 3.8.16 H-1-4				[('H-1-4', 2)]		CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics		[('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2)]	[('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 4)]	"[('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-4]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 2)]"					
83:338286) 3.8.16  . Device Controls	3.8.16	H-2-1						3.8.16/H-2-1	""">3.8.16/H-2-1] MUST report null for the ControlsProviderService and the Control APIs. [<a href=""#3_8_user_interface_compatibility"""""	03081600.720201	3.8.16/H-2-1 3.8.16 H-2-1															
83:338286) 3.8.16  . Device Controls	3.8.16	H-2-2						3.8.16/H-2-2	""">3.8.16/H-2-2] MUST declare the feature flag android.software.controls and set it to false. Handheld device implementations: [<a href=""#3_10_accessibility"""""	03081600.720202	android.software.controls 3.8.16/H-2-2 H-2-2 3.8.16															
3.9.2	3.9.2	C-2-1		[('com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest', 5), ('android.hardware.cts.SensorSupportTest', 4), ('com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest', 3), ('android.telephony.embms.cts.MbmsDownloadCallbackTest', 3), ('com.android.cts.managedprofile.PreManagedProfileTest', 2), ('com.android.cts.deviceowner.PreDeviceOwnerTest', 2), ('com.android.cts.deviceandprofileowner.SuspendPackageTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.media.mediaparser.cts.MediaParserTest', 1), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest', 1), ('com.android.cts.comp.provisioning.ManagedProfileProvisioningTest', 1), ('com.android.cts.transferowner.TransferProfileOwnerOutgoingTest', 1), ('android.admin.cts.DeviceAdminActivationTest', 1), ('com.android.cts.profileowner.ManagementTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTestApi25', 1), ('com.android.cts.delegate.CertInstallDelegateTest', 1), ('com.android.cts.transferowner.TransferDeviceOwnerOutgoingTest', 1), ('com.android.cts.comp.BindDeviceAdminServiceFailsTest', 1), ('com.android.cts.deviceandprofileowner.ResetPasswordTest', 1), ('com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest', 1), ('com.android.cts.deviceandprofileowner.AlwaysOnVpnTest', 1), ('com.android.cts.comp.ManagementTest', 1), ('com.android.cts.managedprofile.DisallowSharingIntoProfileTest', 1), ('com.android.cts.deviceowner.DeviceOwnerProvisioningTest', 1), ('com.android.cts.devicepolicy.singleadmin.ProvisioningSingleAdminTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.location.cts.fine.ScanningSettingsTest', 1), ('android.media.tv.tuner.cts.TunerFrontendTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 1), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 1), ('android.net.ipsec.ike.cts.IkeSessionParamsTest', 1), ('android.media.cts.DecoderTest', 1), ('android.appwidget.cts.RequestPinAppWidgetTest', 1), ('com.android.cts.managedprofile.ProvisioningTest', 1), ('com.android.cts.certinstaller.CertSelectionDelegateTest', 1)]	[('setUp', 17), ('tearDown', 6), ('getContext', 6), ('getDevice', 4), ('getPackageManager', 3), ('obtain', 2), ('release', 2), ('clearFreezeRecord', 2), ('getName', 2), ('getTargetContext', 2), ('getSimpleName', 2), ('ServiceConnection', 1), ('getPackageName', 1), ('size', 1), ('getInstrumentation', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('IntentFilter', 1), ('getContentResolver', 1), ('now', 1), ('getAirplaneMode', 1), ('setSystemDate', 1), ('getPackage', 1), ('setup', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('build', 1), ('getResources', 1), ('getConfiguration', 1)]	[('CtsSensorTestCases', 4), ('CtsTelephonyTestCases', 3), ('CtsAppTestCases', 1), ('CtsMediaParserTestCases', 1), ('CtsAdminTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsTvTestCases', 1), ('CtsIkeTestCases', 1), ('CtsMediaTestCases', 1), ('CtsAppWidgetTestCases', 1)]		3.9.2/C-2-1	"""C-2-1] MUST support the ability to specify a separate lock screen meeting the following requirements to grant access to apps running in a managed profile only. Device implementations MUST honor the DevicePolicyManager.ACTION_SET_NEW_PASSWORD intent and show an interface to configure a separate lock screen credential for the managed profile. The lock screen credentials of the managed profile MUST use the same credential storage and management mechanisms as the parent profile, as documented on the Android Open Source Project Site. The DPC password policies MUST apply to only the managed profile's lock screen credentials unless called upon the DevicePolicyManager instance returned by getParentProfileInstance. When contacts from the managed profile are displayed in the preinstalled call log, in-call UI, in-progress and missed-call notifications, contacts and messaging apps they SHOULD be badged with the same badge used to indicate managed profile applications. <h4 id="""	03090200.670201	3.9.2/C-2-1 ACTION_SET_NEW_PASSWORD C-2-1 DPC DevicePolicyManager.ACTION 3.9.2				[('DPC', 26), ('DevicePolicyManager.ACTION', 15), ('C-2-1', 10)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsMediaParserTestCases:android.media.mediaparser.cts.MediaParserTest.testWavWithImaAdpcm None:com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest.testInstallKeyPair CtsAdminTestCases:android.admin.cts.DeviceAdminActivationTest.testActivateBrokenReceiver5Fails None:com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest.testCannotBind_unprotectedCrossUserService None:com.android.cts.comp.BindDeviceAdminServiceGoodSetupTest.testCheckCannotBind_nonManagingPackage None:com.android.cts.profileowner.ManagementTest.testProvisionManagedProfileNotAllowed None:com.android.cts.managedprofile.PreManagedProfileTest.testIsProvisioningAllowedTrue None:com.android.cts.managedprofile.PreManagedProfileTest.testIsProvisioningAllowedFalse CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions None:com.android.cts.deviceowner.PreDeviceOwnerTest.testIsProvisioningAllowedFalse None:com.android.cts.deviceowner.PreDeviceOwnerTest.testIsProvisioningNotAllowedForManagedProfileAction CtsTelephonyTestCases:android.telephony.embms.cts.MbmsDownloadCallbackTest.testFullCallback CtsTelephonyTestCases:android.telephony.embms.cts.MbmsDownloadCallbackTest.testDeregistration None:com.android.cts.comp.BindDeviceAdminServiceFailsTest.testCannotBind None:com.android.cts.deviceandprofileowner.AlwaysOnVpnTest.testSetNonVpnAlwaysOn None:com.android.cts.comp.ManagementTest.testProvisionManagedProfileNotAllowed None:com.android.cts.managedprofile.DisallowSharingIntoProfileTest.testDisableSharingIntoProfile None:com.android.cts.deviceowner.DeviceOwnerProvisioningTest.getSystemPackageNameList CtsLocationFineTestCases:android.location.cts.fine.ScanningSettingsTest.isTV None:com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest.testProvisioningNotAllowedWithDeviceOwner None:com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest.testBindDeviceAdminServiceAsUser_secondaryUser None:com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest.testNetworkAndSecurityLoggingAvailableIfAffiliated None:com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest.testRequestBugreportAvailableIfAffiliated CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsSignificantMotion CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepDetector CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepCounter CtsTvTestCases:android.media.tv.tuner.cts.TunerFrontendTest.testAtsc3FrontendSettings None:com.android.cts.devicepolicy.DeviceAndProfileOwnerTest.testApplicationRestrictions None:com.android.cts.deviceandprofileowner.KeyManagementTest.testCanSetKeyPairCertChain CtsIkeTestCases:android.net.ipsec.ike.cts.IkeSessionParamsTest.testSetPcscfConfigRequests None:com.android.cts.deviceandprofileowner.SuspendPackageTest.testSetPackagesNotSuspended None:com.android.cts.deviceandprofileowner.SuspendPackageTest.testSuspendNotSuspendablePackages CtsMediaTestCases:android.media.cts.DecoderTest.testTrackSelectionMkv CtsAppWidgetTestCases:android.appwidget.cts.RequestPinAppWidgetTest.testPinWidget_launcher2 None:com.android.cts.managedprofile.ProvisioningTest.PersistableBundle None:com.android.cts.certinstaller.CertSelectionDelegateTest.testNotChosenAnyAlias		[('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 5), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/embms/cts/MbmsDownloadCallbackTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/PreManagedProfileTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/TransferOwnerOutgoingApp/src/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/admin/src/android/admin/cts/DeviceAdminActivationTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ProfileOwner/src/com/android/cts/profileowner/ManagementTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/TransferOwnerOutgoingApp/src/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/ManagementTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DeviceOwnerProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/SingleAdminApp/src/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/ScanningSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFrontendTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionParamsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DecoderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CertInstaller/src/com/android/cts/certinstaller/CertSelectionDelegateTest.java', 1)]	[('/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 6), ('/android/hardware/cts/SensorSupportTest.java', 5), ('/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java', 4), ('/android/telephony/embms/cts/MbmsDownloadCallbackTest.java', 4), ('/com/android/cts/managedprofile/PreManagedProfileTest.java', 3), ('/com/android/cts/deviceowner/PreDeviceOwnerTest.java', 3), ('/com/android/cts/deviceandprofileowner/SuspendPackageTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 2), ('/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 2), ('/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java', 2), ('/android/admin/cts/DeviceAdminActivationTest.java', 2), ('/com/android/cts/profileowner/ManagementTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java', 2), ('/com/android/cts/delegate/CertInstallDelegateTest.java', 2), ('/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java', 2), ('/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java', 2), ('/com/android/cts/deviceandprofileowner/ResetPasswordTest.java', 2), ('/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java', 2), ('/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 2), ('/com/android/cts/comp/ManagementTest.java', 2), ('/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java', 2), ('/com/android/cts/deviceowner/DeviceOwnerProvisioningTest.java', 2), ('/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/location/cts/fine/ScanningSettingsTest.java', 2), ('/android/media/tv/tuner/cts/TunerFrontendTest.java', 2), ('/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 2), ('/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 2), ('/android/net/ipsec/ike/cts/IkeSessionParamsTest.java', 2), ('/android/media/cts/DecoderTest.java', 2), ('/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/com/android/cts/managedprofile/ProvisioningTest.java', 2), ('/com/android/cts/certinstaller/CertSelectionDelegateTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-2-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[DPC]:[2]:method_text:[hImaAdpcm() throws IOException {         testAssetExtraction(""wav/sample_ima_adpcm.wav"");     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[DPC]:[1]:method_text:[N+, @{link IllegalArgumentException } should be thrown if the package      * is missing.      */    ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[tends AndroidTestCase {     private static final String TAG = ""ManagedProfileProvisioningTest"";     ])', 1), ('([1:/com/android/cts/transferowner/TransferProfileOwnerOutgoingTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[r.setUp();         setupTestParameters(DevicePolicyManager.ACTION_PROFILE_OWNER_CHANGED);     }     ])', 1), ('([1:/android/admin/cts/DeviceAdminActivationTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[                new ComponentName(getInstrumentation().getTargetContext(), receiverClass)));     } }])', 1), ('([2:/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java]:[DPC]:[2]:method_text:[entName(mContext));         assertTrue(""No target users found"", mTargetUsers.size() > 0);     }     ])', 1), ('([1:/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java]:[DPC]:[1]:method_text:[ }      /**      * Talk to a DPC package that is neither device owner nor profile owner.      */    ])', 1), ('([1:/com/android/cts/comp/BindDeviceAdminServiceGoodSetupTest.java]:[DPC]:[1]:method_text:[   }     }      /**      * Talk to the same DPC in same user, that is talking to itself.      */    ])', 1), ('([1:/com/android/cts/profileowner/ManagementTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[ProvisioningAllowed(                 DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     } }])', 1), ('([1:/com/android/cts/managedprofile/PreManagedProfileTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[           .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }     ])', 1), ('([1:/com/android/cts/managedprofile/PreManagedProfileTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[             .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }  }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-2-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-2-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTestApi25.java]:[DPC]:[1]:method_text:[ getDevice().executeShellCommand(""input keyevent 3"");         }         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[olicyManager.isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_DEVICE));     }     ])', 1), ('([1:/com/android/cts/deviceowner/PreDeviceOwnerTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[             .isProvisioningAllowed(DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }  }])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[DPC]:[2]:method_text:[ation().getContext();         mDpm = context.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([1:/com/android/cts/transferowner/TransferDeviceOwnerOutgoingTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[er.setUp();         setupTestParameters(DevicePolicyManager.ACTION_DEVICE_OWNER_CHANGED);     }     ])', 1), ('([1:/android/telephony/embms/cts/MbmsDownloadCallbackTest.java]:[DPC]:[1]:method_text:[  } catch (InterruptedException e) {                 return null;             }         }     }     ])', 1), ('([2:/android/telephony/embms/cts/MbmsDownloadCallbackTest.java]:[DPC]:[2]:method_text:[oadService.FILE_INFO_1, stateArgs.arg2);         assertEquals(sampleInt, stateArgs.arg3);     }     ])', 1), ('([2:/android/telephony/embms/cts/MbmsDownloadCallbackTest.java]:[DPC]:[2]:method_text:[ull, 0, 0, 0, 0);         assertNull(progressCallback.waitOnProgressUpdated(SHORT_TIMEOUT));     } }])', 1), ('([2:/com/android/cts/comp/BindDeviceAdminServiceFailsTest.java]:[DPC]:[2]:method_text:[t),                 serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE, userHandle);     } }])', 1), ('([2:/com/android/cts/deviceandprofileowner/ResetPasswordTest.java]:[DPC]:[2]:method_text:[s these two negative cases.  *  */ public class ResetPasswordTest extends BaseDeviceAdminTest {     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java]:[DevicePolicyManager.ACTION]:[2]:method_text:[alue.             setAirplaneModeAndWaitBroadcast(0);         }         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[DPC]:[1]:method_text:[    fail(""Connectivity isn\'t available while expected: "" + message);             }         }     } }])', 1), ('([1:/com/android/cts/comp/ManagementTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[visioningAllowed(                 DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE));     }     ])', 1), ('([1:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[vityInfo.name)) {                 return true;             }         }         return false;     } }])', 1), ('([1:/com/android/cts/deviceowner/DeviceOwnerProvisioningTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[d tearDown() throws Exception {         enableUninstalledApp();         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/devicepolicy/singleadmin/ProvisioningSingleAdminTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[     public void setUp() {         mContext = InstrumentationRegistry.getTargetContext();     }     ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-2-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/location/cts/fine/ScanningSettingsTest.java]:[C-2-1]:[1]:method_text:[r.MATCH_DEFAULT_ONLY).activityInfo.packageName;     }      @CddTest(requirement = ""7.4.2/C-2-1"")    ])', 1), ('([16:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[16]:method_text:[th device owner and profile are the same package ({@link #COMP_DPC_PKG}).      */     @LargeTest    ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[2]:method_text:[package ({@link #COMP_DPC_PKG}), as setup      * by createAndManagedUser.      */     @FlakyTest    ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[2]:method_text:[   verifyBindDeviceAdminServiceAsUser(secondaryUserId);     }      @FlakyTest(bugId = 141161038)    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[5]:method_text:[lingNetworkAndSecurityLogging"",                 mPrimaryUserId);         }     }      @FlakyTest    ])', 1), ('([22:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[DPC]:[22]:method_text:[              ""testOtherProfilesEqualsBindTargetUsers"",                 otherProfileUserId);     } }])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[sMag = hasSensorType(Sensor.TYPE_MAGNETIC_FIELD);     }      @CddTest(requirement=""7.3.9/C-2-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[VrSensorSupport(Sensor.TYPE_SIGNIFICANT_MOTION);     }      @CddTest(requirement=""7.3.9/C-2-10"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[kHifiVrSensorSupport(Sensor.TYPE_STEP_DETECTOR);     }      @CddTest(requirement=""7.3.9/C-2-11"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[ckHifiVrSensorSupport(Sensor.TYPE_STEP_COUNTER);     }      @CddTest(requirement=""7.3.9/C-2-12"")    ])', 1), ('([4:/android/media/tv/tuner/cts/TunerFrontendTest.java]:[DPC]:[4]:method_text:[tCodeRate());         assertEquals(Atsc3FrontendSettings.FEC_LDPC_16K, plps[1].getFec());     }     ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[DPC]:[3]:method_text:[Delegations} to test that      *    the scope can only be delegatd to one app at a time.      */    ])', 1), ('([1:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[DPC]:[1]:method_text:[ationSupported() {         return mDevicePolicyManager.isUniqueDeviceAttestationSupported();     } }])', 1), ('([6:/android/net/ipsec/ike/cts/IkeSessionParamsTest.java]:[DPC]:[6]:method_text:[);             }         }         assertEquals(EXPECTED_PCSCF_SERVERS, resultAddresses);     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[1]:method_text:[(isSuspended);     }      /**      * Verify that we cannot suspend launcher and dpc app.      */    ])', 1), ('([2:/com/android/cts/deviceandprofileowner/SuspendPackageTest.java]:[DPC]:[2]:method_text:[      assertTrue(new HashSet(Arrays.asList(a)).containsAll(new HashSet(Arrays.asList(b))));     }  }])', 1), ('([4:/android/media/cts/DecoderTest.java]:[DPC]:[4]:method_text:[testTrackSelection(R.raw.mkv_avc_mp2);         Log.d(TAG, ""mkv_avc_mp2 finished!!!!!! "");     }     ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[C-2-1]:[1]:method_text:[                 AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[DevicePolicyManager.ACTION]:[1]:method_text:[.getTargetContext();         mDpm = mContext.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([1:/com/android/cts/certinstaller/CertSelectionDelegateTest.java]:[DPC]:[1]:method_text:[y.getInstance(""X.509"").generateCertificate(                 new ByteArrayInputStream(cert));     } }])', 1)]"					
99:375923) 4  . Application Packaging Compatibility	4	C-0-8		[('android.app.cts.SystemFeaturesTest', 3)]		[('CtsAppTestCases', 3)]		4/C-0-8	"""C-0-8] MUST implement support for Incremental File System as documented here.  | C-0-8] and"""	04000000.670008	C-0-8 4/C-0-8				[('C-0-8', 2), ('4/C-0-8', 1)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testCameraFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testCameraFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testCameraFeatures		[('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 3)]	[('/android/app/cts/SystemFeaturesTest.java', 6)]	[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-0-8]:[1]:method_text:[          if (camera != null) {                 camera.release();             }         }     }     ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[4/C-0-8]:[1]:method_text:[          if (camera != null) {                 camera.release();             }         }     }     ])', 1)]					
99:375923) 4  . Application Packaging Compatibility	4	C-0-9		[('com.android.tests.stagedinstall.StagedInstallTest', 70), ('com.android.cts.devicepolicy.DeviceOwnerTest', 9), ('android.appsecurity.cts.UseProcessTest', 7), ('android.appsecurity.cts.UseEmbeddedDexTest', 7), ('android.permission.cts.RemovePermissionTest', 5), ('android.sample.cts.SampleHostTest', 2), ('com.android.cts.devicepolicy.UserRestrictionsTest', 2), ('android.content.pm.cts.InstantAppTest', 1), ('android.signature.cts.intent.IntentTest', 1), ('android.app.cts.ActivityManagerProcessStateTest', 1), ('com.android.cts.devicepolicy.MixedProfileOwnerTest', 1), ('android.net.wifi.cts.WifiLocationInfoTest', 1)]	[('setUp', 10), ('getDevice', 7), ('tearDown', 5), ('getContext', 3), ('getInstrumentation', 3), ('Intent', 3), ('getPackageManager', 2), ('getTargetContext', 2), ('trim', 2), ('getSimpleName', 1), ('setupPackageManager', 1), ('getName', 1), ('Object', 1), ('setContextAndInstrumentation', 1), ('wakeUpScreen', 1), ('getUiAutomation', 1)]	[('CtsPermissionTestCases', 5), ('CtsContentTestCases', 1), ('CtsIntentSignatureTestCases', 1), ('CtsAppTestCases', 1), ('CtsWifiTestCases', 1)]		4/C-0-9	"""C-0-9] MUST support verifying .apk files using the APK Signature Scheme v4. If device implementations are already launched on an earlier Android version and cannot meet the requirements | C-0-9] through a system software update, they MAY be exempted from these requirements. <h2 id="""	04000000.670009	APK 4/C-0-9 C-0-9				[('APK', 107)]		CtsContentTestCases:android.content.pm.cts.InstantAppTest.testInstantAppInstallerQuery None:android.sample.cts.SampleHostTest.testLogcat CtsIntentSignatureTestCases:android.signature.cts.intent.IntentTest.getIntentWhitelist None:com.android.cts.devicepolicy.DeviceOwnerTest.removeTestUsers None:com.android.cts.devicepolicy.DeviceOwnerTest.testWifiConfigLockdown None:com.android.cts.devicepolicy.DeviceOwnerTest.testCannotSetDeviceOwnerAgain None:com.android.cts.devicepolicy.DeviceOwnerTest.testDisallowFactoryReset None:com.android.cts.devicepolicy.DeviceOwnerTest.testPackageInstallCache None:com.android.cts.devicepolicy.DeviceOwnerTest.testPackageInstallCache_multiUser None:com.android.cts.devicepolicy.DeviceOwnerTest.testDefaultSmsApplication None:com.android.cts.devicepolicy.DeviceOwnerTest.testNoHiddenActivityFoundTest None:com.android.cts.devicepolicy.DeviceOwnerTest.testSetUserControlDisabledPackages None:android.appsecurity.cts.UseProcessTest.testInstallUsePackageSuccess_instant None:android.appsecurity.cts.UseProcessTest.testInstallUsePackageFailApplication_instant None:android.appsecurity.cts.UseProcessTest.testInstallUsePackageFailActivity_instant None:android.appsecurity.cts.UseProcessTest.testInstallUsePackageFailService_instant None:android.appsecurity.cts.UseProcessTest.testInstallUsePackageFailReceiver_instant None:android.appsecurity.cts.UseProcessTest.testInstallUsePackageFailProvider_instant CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.removeTestAppFromWhitelists CtsPermissionTestCases:android.permission.cts.RemovePermissionTest.permissionShouldBeRevokedIfRemoved CtsPermissionTestCases:android.permission.cts.RemovePermissionTest.permissionShouldRemainGrantedAfterAppUpdate CtsPermissionTestCases:android.permission.cts.RemovePermissionTest.runtimePermissionDependencyTest CtsPermissionTestCases:android.permission.cts.RemovePermissionTest.installtimePermissionDependencyTest None:android.appsecurity.cts.UseEmbeddedDexTest.testCanonicalInstall None:android.appsecurity.cts.UseEmbeddedDexTest.testBadInstallWithCompressedDex None:android.appsecurity.cts.UseEmbeddedDexTest.testCanonicalInstallWithSplit None:android.appsecurity.cts.UseEmbeddedDexTest.testBadInstallWithDexCompressedSplit None:android.appsecurity.cts.UseEmbeddedDexTest.testCanonicalInstallWithBaseThenSplit None:android.appsecurity.cts.UseEmbeddedDexTest.testBadInstallWithBaseThenDexCompressedSplit CtsWifiTestCases:android.net.wifi.cts.WifiLocationInfoTest.isNotNull None:com.android.cts.devicepolicy.UserRestrictionsTest.removeTestUsers None:com.android.cts.devicepolicy.UserRestrictionsTest.testUserRestrictions_ProfileGlobalRestrictionsAsPo None:com.android.tests.stagedinstall.StagedInstallTest.testInstallStagedApk None:com.android.tests.stagedinstall.StagedInstallTest.testInstallStagedApk_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testInstallStagedApk_VerifyPostReboot None:com.android.tests.stagedinstall.StagedInstallTest.testInstallStagedApk_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testInstallStagedApk_VerifyPostReboot None:com.android.tests.stagedinstall.StagedInstallTest.testInstallStagedApk_AbandonSessionIsNoop None:com.android.tests.stagedinstall.StagedInstallTest.testInstallMultipleStagedApks_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testInstallMultipleStagedApks_VerifyPostReboot None:com.android.tests.stagedinstall.StagedInstallTest.testAbandonStagedApkBeforeReboot_CommitAndAbandon None:com.android.tests.stagedinstall.StagedInstallTest.testAbandonStagedApkBeforeReboot_VerifyPostReboot None:com.android.tests.stagedinstall.StagedInstallTest.testAbandonStagedApkBeforeReady_CommitAndAbandon None:com.android.tests.stagedinstall.StagedInstallTest.testAbandonStagedApkBeforeReady_VerifyPostReboot None:com.android.tests.stagedinstall.StagedInstallTest.testStageAnotherSessionImmediatelyAfterAbandon None:com.android.tests.stagedinstall.StagedInstallTest.testStageAnotherSessionImmediatelyAfterAbandonMultiPackage None:com.android.tests.stagedinstall.StagedInstallTest.testNoSessionUpdatedBroadcastSentForStagedSessionAbandon None:com.android.tests.stagedinstall.StagedInstallTest.testGetActiveStagedSessions None:com.android.tests.stagedinstall.StagedInstallTest.testIsStagedSessionActive None:com.android.tests.stagedinstall.StagedInstallTest.testGetActiveStagedSessions_MultiApkSession None:com.android.tests.stagedinstall.StagedInstallTest.testStagedInstallDowngrade_DowngradeNotRequested_Fails_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testStagedInstallDowngrade_DowngradeRequested_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testStagedInstallDowngrade_DowngradeRequested_Fails_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testInstallStagedApex_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testInstallStagedApexAndApk_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testInstallStagedApexAndApk_VerifyPostReboot None:com.android.tests.stagedinstall.StagedInstallTest.testInstallStagedNonPreInstalledApex_Fails None:com.android.tests.stagedinstall.StagedInstallTest.testInstallStagedDifferentPackageNameWithInstalledApex_Fails None:com.android.tests.stagedinstall.StagedInstallTest.testStageApkWithSameNameAsApexShouldFail_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testStageApkWithSameNameAsApexShouldFail_VerifyPostReboot None:com.android.tests.stagedinstall.StagedInstallTest.testNonStagedInstallApkWithSameNameAsApexShouldFail None:com.android.tests.stagedinstall.StagedInstallTest.testInstallV2Apex_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testInstallV2Apex_VerifyPostReboot None:com.android.tests.stagedinstall.StagedInstallTest.testInstallV2SignedBobApex_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testInstallV3Apex_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testInstallV3SignedBobApex_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testStagedInstallDowngradeApex_DowngradeNotRequested_Fails_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testStagedInstallDowngradeApex_DowngradeRequested_DebugBuild_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testStagedInstallDowngradeApex_DowngradeRequested_UserBuild_Fails_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testStagedInstallDowngradeApexToSystemVersion_DebugBuild_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testFailsInvalidApexInstall_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testStagedApkSessionCallbacks None:com.android.tests.stagedinstall.StagedInstallTest.testInstallStagedApexWithoutApexSuffix_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testRejectsApexDifferentCertificate None:com.android.tests.stagedinstall.StagedInstallTest.testUpdateWithDifferentKeyButNoRotation None:com.android.tests.stagedinstall.StagedInstallTest.testUpdateWithDifferentKey_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testUntrustedOldKeyIsRejected None:com.android.tests.stagedinstall.StagedInstallTest.testTrustedOldKeyIsAccepted_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testTrustedOldKeyIsAccepted_CommitPostReboot None:com.android.tests.stagedinstall.StagedInstallTest.testAfterRotationNewKeyCanUpdateFurther_CommitPostReboot None:com.android.tests.stagedinstall.StagedInstallTest.testAfterRotationNewKeyCanUpdateFurtherWithoutLineage None:com.android.tests.stagedinstall.StagedInstallTest.testFailStagingMultipleSessionsIfNoCheckPoint None:com.android.tests.stagedinstall.StagedInstallTest.testFailOverlappingMultipleStagedInstall_BothSinglePackage_Apk None:com.android.tests.stagedinstall.StagedInstallTest.testAllowNonOverlappingMultipleStagedInstall_MultiPackageSinglePackage_Apk None:com.android.tests.stagedinstall.StagedInstallTest.testFailOverlappingMultipleStagedInstall_BothMultiPackage_Apk None:com.android.tests.stagedinstall.StagedInstallTest.testMultipleStagedInstall_ApkOnly_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testMultipleStagedInstall_ApkOnly_VerifyPostReboot None:com.android.tests.stagedinstall.StagedInstallTest.testInstallMultipleStagedSession_PartialFail_ApkOnly_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testInstallMultipleStagedSession_PartialFail_ApkOnly_VerifyPostReboot None:com.android.tests.stagedinstall.StagedInstallTest.testFailureReasonPersists_SingleSession_VerifyPostReboot None:com.android.tests.stagedinstall.StagedInstallTest.testSamegradeSystemApex_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testInstallApkChangingFingerprint None:com.android.tests.stagedinstall.StagedInstallTest.testInstallApkChangingFingerprint_VerifyAborted None:com.android.tests.stagedinstall.StagedInstallTest.testInstallStagedNoHashtreeApex_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testInstallStagedApex_SameGrade_NewOneWins_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testInstallStagedApex_SameGrade_NewOneWins_VerifyPostReboot None:com.android.tests.stagedinstall.StagedInstallTest.testApexTargetingOldDevSdkFailsVerification None:com.android.tests.stagedinstall.StagedInstallTest.testApexFailsToInstallIfApkInApexFailsToScan_Commit None:com.android.tests.stagedinstall.StagedInstallTest.testApexFailsToInstallIfApkInApexFailsToScan_VerifyPostReboot None:com.android.tests.stagedinstall.StagedInstallTest.testCorruptedApexFailsVerification_b146895998 None:com.android.tests.stagedinstall.StagedInstallTest.testApexWithUnsignedApkFailsVerification None:com.android.tests.stagedinstall.StagedInstallTest.testApexWithUnsignedPayloadFailsVerification		[('/home/gpoor/cts-source/cts/hostsidetests/stagedinstall/app/src/com/android/tests/stagedinstall/StagedInstallTest.java', 70), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 9), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/UseProcessTest.java', 7), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/UseEmbeddedDexTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/RemovePermissionTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/sample/src/android/sample/cts/SampleHostTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/InstantAppTest.java', 1), ('/home/gpoor/cts-source/cts/tests/signature/intent-check/src/android/signature/cts/intent/IntentTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLocationInfoTest.java', 1)]	[('/com/android/tests/stagedinstall/StagedInstallTest.java', 71), ('/com/android/cts/devicepolicy/DeviceOwnerTest.java', 10), ('/android/appsecurity/cts/UseProcessTest.java', 8), ('/android/appsecurity/cts/UseEmbeddedDexTest.java', 8), ('/android/permission/cts/RemovePermissionTest.java', 6), ('/android/sample/cts/SampleHostTest.java', 3), ('/com/android/cts/devicepolicy/UserRestrictionsTest.java', 3), ('/android/content/pm/cts/InstantAppTest.java', 2), ('/android/signature/cts/intent/IntentTest.java', 2), ('/android/app/cts/ActivityManagerProcessStateTest.java', 2), ('/com/android/cts/devicepolicy/MixedProfileOwnerTest.java', 2), ('/android/net/wifi/cts/WifiLocationInfoTest.java', 2)]	"[('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[ast(sessionId);         assertSessionReady(sessionId);         storeSessionId(sessionId);     }     ])', 7), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[o = waitForBroadcast(sessionId);         assertThat(sessionInfo).isStagedSessionFailed();     }     ])', 3), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[2]:method_text:[InstalledVersion(TestApp.A)).isEqualTo(-1);         assertNoSessionCommitBroadcastSent();     }     ])', 2), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[tInstalledVersion(TestApp.A)).isEqualTo(1);         assertNoSessionCommitBroadcastSent();     }     ])', 2), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[ot() throws Exception {         assertThat(getInstalledVersion(TestApp.A)).isEqualTo(-1);     }     ])', 2), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[2]:method_text:[     abandonSession(sessionId);         stageSingleApk(TestApp.Apex2).assertSuccessful();     }     ])', 2), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[ionFailed(sessionId);         assertThat(getInstalledVersion(TestApp.Apex)).isEqualTo(1);     }     ])', 2), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[ackageManager.         assertSessionFailed(sessionId);         storeSessionId(sessionId);     }     ])', 2), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[change before reboot.         assertThat(getInstalledVersion(TestApp.Apex)).isEqualTo(1);     }     ])', 2), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[nedBobRot).assertSuccessful().getSessionId();         waitForIsReadyBroadcast(sessionId);     }     ])', 2), ('([3:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[3]:method_text:[).isEqualTo(-1);         storeSessionIds(Arrays.asList(firstSessionId, secondSessionId));     }     ])', 2), ('([1:/android/content/pm/cts/InstantAppTest.java]:[APK]:[1]:method_text:[ctivities(intent, resolveFlags);         assertTrue(matches == null || matches.size() <= 1);     } }])', 1), ('([4:/android/sample/cts/SampleHostTest.java]:[APK]:[4]:method_text:[ing was successfully logged to Logcat from the activity.      *      * @throws Exception      */    ])', 1), ('([1:/android/sample/cts/SampleHostTest.java]:[APK]:[1]:method_text:[hes the test string.         assertEquals(""Incorrect test string"", TEST_STRING, testString);     } }])', 1), ('([1:/android/signature/cts/intent/IntentTest.java]:[APK]:[1]:method_text:[nRegistry.getContext().getPackageManager();       intentWhitelist = getIntentWhitelist();     }     ])', 1), ('([17:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[APK]:[17]:method_text:[tchUser(USER_SYSTEM);             removeTestUsers();         }          super.tearDown();     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[APK]:[1]:method_text:[         }         }     }      /**      * Execute WifiSetHttpProxyTest as device owner.      */    ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[APK]:[1]:method_text:[D_PROFILE_PKG);         }     }      // Execute HardwarePropertiesManagerTest as a device owner.    ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[APK]:[3]:method_text:[e().uninstallPackage(DeviceAdminHelper.getDeviceAdminApkPackage(adminVersion));         }     }     ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[APK]:[5]:method_text:[ommand);             getDevice().uninstallPackage(TEST_APP_PKG);         }     }      @LargeTest    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[APK]:[5]:method_text:[eShellCommand(command);             getDevice().uninstallPackage(TEST_APP_PKG);         }     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[APK]:[1]:method_text:[estSetDefaultSmsApplication"");          getDevice().uninstallPackage(SIMPLE_SMS_APP_PKG);     }     ])', 1), ('([6:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[APK]:[6]:method_text:[         getDevice().uninstallPackage(BaseLauncherAppsTest.LAUNCHER_TESTS_APK);         }     }     ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[APK]:[4]:method_text:[int newUserId = newUsers.get(0);          assertFalse(getDevice().isUserRunning(newUserId));     } }])', 1), ('([12:/android/appsecurity/cts/UseProcessTest.java]:[APK]:[12]:method_text:[     public void tearDown() throws Exception {         getDevice().uninstallPackage(PKG);     }     ])', 1), ('([1:/android/appsecurity/cts/UseProcessTest.java]:[APK]:[1]:method_text:[      Utils.runDeviceTestsAsCurrentUser(getDevice(), PKG, SUCCESS_UNIT_TEST_CLASS, null);     }     ])', 1), ('([1:/android/appsecurity/cts/UseProcessTest.java]:[APK]:[1]:method_text:[application"");         assertTrue(!getDevice().getInstalledPackageNames().contains(PKG));     }     ])', 1), ('([1:/android/appsecurity/cts/UseProcessTest.java]:[APK]:[1]:method_text:[mmyActivity"");         assertTrue(!getDevice().getInstalledPackageNames().contains(PKG));     }     ])', 1), ('([1:/android/appsecurity/cts/UseProcessTest.java]:[APK]:[1]:method_text:[ummyService"");         assertTrue(!getDevice().getInstalledPackageNames().contains(PKG));     }     ])', 1), ('([1:/android/appsecurity/cts/UseProcessTest.java]:[APK]:[1]:method_text:[mmyReceiver"");         assertTrue(!getDevice().getInstalledPackageNames().contains(PKG));     }     ])', 1), ('([1:/android/appsecurity/cts/UseProcessTest.java]:[APK]:[1]:method_text:[.DummyProvider"");         assertTrue(!getDevice().getInstalledPackageNames().contains(PKG));     } }])', 1), ('([2:/android/app/cts/ActivityManagerProcessStateTest.java]:[APK]:[2]:method_text:[ * Test basic state changes as processes go up and down due to services running in them.      */    ])', 1), ('([1:/com/android/cts/devicepolicy/MixedProfileOwnerTest.java]:[APK]:[1]:method_text:[R_TEST_CLASS, mUserId));         }         super.tearDown();     }      @Override     @FlakyTest    ])', 1), ('([10:/android/permission/cts/RemovePermissionTest.java]:[APK]:[10]:method_text:[iAutomation().grantRuntimePermission(                 pkg, permission);     }      @SecurityTest    ])', 1), ('([3:/android/permission/cts/RemovePermissionTest.java]:[APK]:[3]:method_text:[RIAL_PERMISSION_USER_PKG_NAME);         uninstallApp(VICTIM_PERMISSION_DEFINER_PKG_NAME);     }     ])', 1), ('([3:/android/permission/cts/RemovePermissionTest.java]:[APK]:[3]:method_text:[IME_PERMISSION_USER_PKG_NAME);         uninstallApp(RUNTIME_PERMISSION_DEFINER_PKG_NAME);     }     ])', 1), ('([2:/android/permission/cts/RemovePermissionTest.java]:[APK]:[2]:method_text:[PKG_NAME, TEST_PERMISSION));          uninstallApp(ADVERSARIAL_PERMISSION_USER_PKG_NAME);     }     ])', 1), ('([3:/android/permission/cts/RemovePermissionTest.java]:[APK]:[3]:method_text:[ME_PERMISSION_DEFINER_PKG_NAME);         uninstallApp(INSTALLTIME_PERMISSION_USER_PKG_NAME);     } }])', 1), ('([8:/android/appsecurity/cts/UseEmbeddedDexTest.java]:[APK]:[8]:method_text:[al String APK_SPLIT_COMPRESSED_DEX =             ""CtsUseEmbeddedDexAppSplit_CompressedDex.apk"";     ])', 1), ('([1:/android/appsecurity/cts/UseEmbeddedDexTest.java]:[APK]:[1]:method_text:[lInstall() throws Exception {         new InstallMultiple().addFile(APK_CANONICAL).run();     }     ])', 1), ('([1:/android/appsecurity/cts/UseEmbeddedDexTest.java]:[APK]:[1]:method_text:[eption {         new InstallMultiple().addFile(APK_DEX_COMPRESSED).runExpectingFailure();     }     ])', 1), ('([2:/android/appsecurity/cts/UseEmbeddedDexTest.java]:[APK]:[2]:method_text:[         new InstallMultiple().addFile(APK_CANONICAL).addFile(APK_SPLIT_CANONICAL).run();     }     ])', 1), ('([2:/android/appsecurity/cts/UseEmbeddedDexTest.java]:[APK]:[2]:method_text:[(APK_CANONICAL).addFile(APK_SPLIT_COMPRESSED_DEX)                 .runExpectingFailure();     }     ])', 1), ('([2:/android/appsecurity/cts/UseEmbeddedDexTest.java]:[APK]:[2]:method_text:[      new InstallMultiple().inheritFrom(PACKAGE_NAME).addFile(APK_SPLIT_CANONICAL).run();     }     ])', 1), ('([2:/android/appsecurity/cts/UseEmbeddedDexTest.java]:[APK]:[2]:method_text:[From(PACKAGE_NAME).addFile(APK_SPLIT_COMPRESSED_DEX)                 .runExpectingFailure();     } }])', 1), ('([5:/android/net/wifi/cts/WifiLocationInfoTest.java]:[APK]:[5]:method_text:[_NAME,                 WIFI_LOCATION_TEST_APP_RETRIEVE_CONNECTION_INFO_SERVICE), status);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[APK]:[2]:method_text:[          throws DeviceNotAvailableException {         runTests(className, null, userId);     }     ])', 1), ('([2:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[APK]:[2]:method_text:[throws Exception {         runTests(GLOBAL_RESTRICTIONS_TEST_CLASS, testMethodName, userId);     } }])', 1), ('([3:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[3]:method_text:[evice().reboot();  *  runPhase(""testInstallStagedApk_VerifyPostReboot"");  * }  * - In this class:  *])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[ public void testInstallStagedApk_Commit() throws Exception;  * ])', 1), ('([12:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[12]:method_text:[  SessionUpdateBroadcastReceiver.sessionCommittedBroadcasts.clear();     }      // This is marked as])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[ion database.         abandonSession(sessionId);         assertSessionApplied(sessionId);     }     ])', 1), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[2]:method_text:[InstalledVersion(TestApp.B)).isEqualTo(-1);         assertNoSessionCommitBroadcastSent();     }     ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[tInstalledVersion(TestApp.B)).isEqualTo(1);         assertNoSessionCommitBroadcastSent();     }     ])', 1), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[2]:method_text:[ow new RuntimeException(e);             }         }         assertThat(session).isNull();     }     ])', 1), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[2]:method_text:[ abandonSession(sessionId);         assertThat(getStagedSessionInfo(sessionId)).isNull();     }     ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[getStagedSessionInfo(sessionId)).isNull();         assertNoSessionUpdatedBroadcastSent();     }     ])', 1), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[2]:method_text:[s conditions stated at      * {@link PackageInstaller.SessionInfo#isStagedSessionActive}      */    ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[ind any active staged session"")                 .that(activeStagedSessionFound).isTrue();     }     ])', 1), ('([3:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[3]:method_text:[);         assertThat(stagedSessionIds).containsExactly(firstSessionId, secondSessionId);     }     ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[stalledVersion(TestApp.Apex)).isEqualTo(1);         assertNoSessionCommitBroadcastSent();     }     ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[rorMessage()).contains(                 ""It is forbidden to install new APEX packages."");     }     ])', 1), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[2]:method_text:[ast(sessionId);         assertSessionReady(sessionId);         storeSessionId(sessionId);     }     ])', 1), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[2]:method_text:[_SAME_NAME_AS_APEX));         assertThat(getInstalledVersion(TestApp.Apex)).isEqualTo(1);     }     ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[alTo(2);         assertThat(getInstalledVersion(APK_SHIM_PACKAGE_NAME)).isNotEqualTo(-1);     }     ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[st(sessionId);         assertSessionFailed(sessionId);         storeSessionId(sessionId);     }     ])', 1), ('([3:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[3]:method_text:[containsExactly(sessionId);         }         packageInstaller.abandonSession(sessionId);     }     ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[ew key"".      */      // The update should fail if it is signed with a different non-rotated key    ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[dcast(sessionId);     }      // The update should pass if it is signed with a proper rotated key    ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[ledBroadcast(sessionId);     }      // Should be able to update with an old key which is trusted    ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[tRollback).assertSuccessful().getSessionId();         waitForIsReadyBroadcast(sessionId);     }     ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[App.Apex3).assertSuccessful().getSessionId();         waitForIsReadyBroadcast(sessionId);     }     ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[ssions.      */      // Should fail to stage multiple sessions when check-point is not available    ])', 1), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[2]:method_text:[).contains(                 ""Cannot stage multiple sessions without checkpoint support"");     }     ])', 1), ('([3:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[3]:method_text:[esult.getErrorMessage()).contains(                 ""has been staged already by session"");     }     ])', 1), ('([3:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[3]:method_text:[1, TestApp.B1).assertSuccessful();         stageSingleApk(TestApp.C1).assertSuccessful();     }     ])', 1), ('([3:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[3]:method_text:[ready by session"");     }      // Should succeed in installing multiple staged sessions together    ])', 1), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[2]:method_text:[ }      // If apk installation fails in one staged session, then all staged session should fail.    ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[o(-1);     }      // Failure reason of staged install should be be persisted for single sessions    ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[ }      // If apk installation fails in one staged session, then all staged session should fail.    ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[ssionId();         waitForIsReadyBroadcast(sessionId);         storeSessionId(sessionId);     }     ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[nId = Install.single(TestApp.A1).setStaged().commit();         storeSessionId(sessionId);     }     ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[         int sessionId = retrieveLastSessionId();         assertSessionFailed(sessionId);     }     ])', 1), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[2]:method_text:[ged().commit();         assertSessionReady(sessionId);         storeSessionId(sessionId);     }     ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[1]:method_text:[.isEqualTo(-1);     }      /**      * Should fail to verify apex targeting older dev sdk      */    ])', 1), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[2]:method_text:[);     }      /**      * Apex should fail to install if apk-in-apex fails to get scanned      */    ])', 1), ('([3:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[3]:method_text:[ssionId();         waitForIsReadyBroadcast(sessionId);         storeSessionId(sessionId);     }     ])', 1), ('([2:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[2]:method_text:[).isStagedSessionFailed();     }      /**      * Should fail to pass apk signature check      */    ])', 1), ('([3:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[3]:method_text:[O_CERTIFICATES"");     }      /**      * Should fail to verify apex with unsigned payload      */    ])', 1), ('([18:/com/android/tests/stagedinstall/StagedInstallTest.java]:[APK]:[18]:method_text:[ts.poll(10,                         TimeUnit.SECONDS);         assertThat(info).isNull();     }     ])', 1)]"					
146:486059) 6.1  . Developer Tools	6.1	C-3-2		[('android.hardware.cts.LowRamDeviceTest', 3), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 2), ('android.telephony.cts.CellInfoTest', 2), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 1), ('android.content.res.cts.FractionTest', 1), ('android.view.cts.VelocityTrackerTest', 1), ('android.net.cts.InetAddressesTest', 1), ('android.app.cts.DownloadManagerTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.mediapc.cts.PerformanceClassTest', 1)]	[('setUp', 2), ('notifyAll', 2), ('validNumericAddressesAndStringRepresentation', 1), ('invalidNumericAddresses', 1), ('getAllCellInfo', 1), ('onCellInfoChanged', 1), ('Executor', 1), ('run', 1), ('getTargetContext', 1), ('getPackageManager', 1)]	[('CtsTelephonyTestCases', 3), ('CtsHardwareTestCases', 3), ('CtsContentTestCases', 1), ('CtsViewTestCases', 1), ('CtsAppTestCases', 1), ('CtsMediaTestCases', 1), ('CtsMediaPerformanceClassTestCases', 1)]		6.1/C-3-2	"""C-3-2] MUST provide drivers for Windows 7, 8 and 10, allowing developers to connect to the device using the adb protocol. If device implementations support adb connections to a host machine via Wi-Fi, they: """	06010000.670302	6.1 C-3-2 6.1/C-3-2				[('6.1', 14)]		CtsContentTestCases:android.content.res.cts.FractionTest.testFractions CtsViewTestCases:android.view.cts.VelocityTrackerTest.testUsesRawCoordinates CtsAppTestCases:android.app.cts.DownloadManagerTest.testDownloadManagerSupportsHttpsWithExternalWebServer CtsMediaTestCases:android.media.cts.AudioTrackTest.testPlayStreamData None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported CtsMediaPerformanceClassTestCases:android.mediapc.cts.PerformanceClassTest.testMinimumMemory CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.isCamped CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.testCellInfo CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.DisplayMetrics CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinimumMemory CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinDataPartitionSize		[('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellInfoTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/FractionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/VelocityTrackerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/InetAddressesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/DownloadManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java', 1)]	[('/android/hardware/cts/LowRamDeviceTest.java', 4), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 3), ('/android/telephony/cts/CellInfoTest.java', 3), ('/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/android/content/res/cts/FractionTest.java', 2), ('/android/view/cts/VelocityTrackerTest.java', 2), ('/android/net/cts/InetAddressesTest.java', 2), ('/android/app/cts/DownloadManagerTest.java', 2), ('/android/media/cts/AudioTrackTest.java', 2), ('/android/mediapc/cts/PerformanceClassTest.java', 2)]	"[('([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[6.1]:[1]:method_text:[ mDownloadableSubscription = DownloadableSubscription.forActivationCode(ACTIVATION_CODE);     }     ])', 1), ('([6:/android/content/res/cts/FractionTest.java]:[6.1]:[6]:method_text:[ in resource 0x""                 + Integer.toHexString(resid) + "" "" + mValue, diff > prec);     } } ])', 1), ('([17:/android/view/cts/VelocityTrackerTest.java]:[6.1]:[17]:method_text:[d) < 0.001f) {             return 1;         }         return absError / Math.abs(expected);     } }])', 1), ('([1:/android/net/cts/InetAddressesTest.java]:[6.1]:[1]:method_text:[22]"",         };     }      @Parameters(method = ""validNumericAddressesAndStringRepresentation"")    ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[6.1]:[1]:method_text:[       mContext.unregisterReceiver(receiver);         }     }      @CddTest(requirement=""7.6.1"")    ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[6.1]:[1]:method_text:[         track.release();         Thread.sleep(waitMsec); // wait for release to complete     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([2:/android/mediapc/cts/PerformanceClassTest.java]:[6.1]:[2]:method_text:[fo();         activityManager.getMemoryInfo(memoryInfo);         return memoryInfo.totalMem;     } }])', 1), ('([2:/android/telephony/cts/CellInfoTest.java]:[6.1]:[2]:method_text:[er receives callbacks every time that new CellInfo      * is received and not otherwise.      */    ])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[6.1]:[1]:method_text:[nge"", csgInfo.getCsgIdentity() > 0                 && csgInfo.getCsgIdentity() <= 0x7FFFFF);     } }])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[ces reported memory to ensure it meets the minimum values described      * in CDD 7.6.1.      */    ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[44);             } else {                 assertMinMemoryMb(592);             }         }     }     ])', 1), ('([4:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[4]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                 size > minSizeBytes);     } }])', 1)]"					
146:486059) 6.1  . Developer Tools	6.1	C-4-1		[('android.adbmanager.cts.AdbManagerHostDeviceTest', 3), ('android.hardware.cts.LowRamDeviceTest', 3), ('android.telephony.cts.CellInfoTest', 2), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 1), ('android.content.res.cts.FractionTest', 1), ('android.view.cts.VelocityTrackerTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerThrottlingTest', 1), ('android.net.cts.InetAddressesTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.app.cts.DownloadManagerTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMiscTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerClientApiTest', 1), ('android.location.cts.fine.ScanningSettingsTest', 1), ('android.hardware.cts.SensorSupportTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1), ('android.mediapc.cts.PerformanceClassTest', 1)]	[('setUp', 8), ('getClass', 2), ('getTargetException', 2), ('tearDown', 2), ('notifyAll', 2), ('validNumericAddressesAndStringRepresentation', 1), ('invalidNumericAddresses', 1), ('NoSuchFieldError', 1), ('getDeclaredMethods', 1), ('getName', 1), ('NoSuchMethodError', 1), ('getMessage', 1), ('getOverrideConfig', 1), ('getInstrumentation', 1), ('getAllCellInfo', 1), ('onCellInfoChanged', 1), ('Executor', 1), ('run', 1), ('getTargetContext', 1), ('getPackageManager', 1)]	[('CtsShortcutManagerTestCases', 7), ('CtsTelephonyTestCases', 3), ('CtsHardwareTestCases', 3), ('CtsContentTestCases', 1), ('CtsViewTestCases', 1), ('CtsAppTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsMediaTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaPerformanceClassTestCases', 1)]		6.1/C-4-1	"""C-4-1] MUST have the AdbManager#isAdbWifiSupported() method return true. If device implementations support adb connections to a host machine via Wi-Fi and includes at least one camera, they: """	06010000.670401	6.1 C-4-1 isAdbWifiSupported() 6.1/C-4-1				[('6.1', 14), ('C-4-1', 10), ('isAdbWifiSupported()', 1)]		CtsContentTestCases:android.content.res.cts.FractionTest.testFractions CtsViewTestCases:android.view.cts.VelocityTrackerTest.testUsesRawCoordinates CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerThrottlingTest.getTestContext CtsAppTestCases:android.app.cts.DownloadManagerTest.testDownloadManagerSupportsHttpsWithExternalWebServer CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions CtsMediaTestCases:android.media.cts.AudioTrackTest.testPlayStreamData CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest.getTestContext CtsLocationFineTestCases:android.location.cts.fine.ScanningSettingsTest.testWifiScanningSettings CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGravityAndLinearAccelIfHasAG CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest.getTestContext None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported CtsMediaPerformanceClassTestCases:android.mediapc.cts.PerformanceClassTest.testMinimumMemory CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.isCamped CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.testCellInfo CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.DisplayMetrics CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinimumMemory CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinDataPartitionSize		[('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellInfoTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/FractionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/VelocityTrackerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/InetAddressesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/DownloadManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerClientApiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/ScanningSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java', 1)]	[('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 5), ('/android/hardware/cts/LowRamDeviceTest.java', 4), ('/android/telephony/cts/CellInfoTest.java', 3), ('/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/android/content/res/cts/FractionTest.java', 2), ('/android/view/cts/VelocityTrackerTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java', 2), ('/android/net/cts/InetAddressesTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/app/cts/DownloadManagerTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 2), ('/android/media/cts/AudioTrackTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerClientApiTest.java', 2), ('/android/location/cts/fine/ScanningSettingsTest.java', 2), ('/android/hardware/cts/SensorSupportTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 2), ('/android/mediapc/cts/PerformanceClassTest.java', 2)]	"[('([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[6.1]:[1]:method_text:[ mDownloadableSubscription = DownloadableSubscription.forActivationCode(ACTIVATION_CODE);     }     ])', 1), ('([6:/android/content/res/cts/FractionTest.java]:[6.1]:[6]:method_text:[ in resource 0x""                 + Integer.toHexString(resid) + "" "" + mValue, diff > prec);     } } ])', 1), ('([17:/android/view/cts/VelocityTrackerTest.java]:[6.1]:[17]:method_text:[d) < 0.001f) {             return 1;         }         return absError / Math.abs(expected);     } }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java]:[C-4-1]:[1]:method_text:[          runCommandForNoOutput(getInstrumentation(), ""am force-stop "" + TARGET_PACKAGE);     }     ])', 1), ('([1:/android/net/cts/InetAddressesTest.java]:[6.1]:[1]:method_text:[22]"",         };     }      @Parameters(method = ""validNumericAddressesAndStringRepresentation"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-4-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[6.1]:[1]:method_text:[       mContext.unregisterReceiver(receiver);         }     }      @CddTest(requirement=""7.6.1"")    ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-4-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[C-4-1]:[1]:method_text:[tsBase {     /**      * Basic tests: single app, single activity, no manifest shortcuts.      */    ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[6.1]:[1]:method_text:[         track.release();         Thread.sleep(waitMsec); // wait for release to complete     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java]:[C-4-1]:[1]:method_text:[    }         }     }      /**      * Make sure the internal AIDL methods are protected.      */    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java]:[C-4-1]:[1]:method_text:[ase {     @Override     protected void setUp() throws Exception {         super.setUp();      }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerClientApiTest.java]:[C-4-1]:[1]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/location/cts/fine/ScanningSettingsTest.java]:[C-4-1]:[1]:method_text:[ wifiManager.isScanAlwaysAvailable()         );     }      @CddTest(requirement = ""7.4.3/C-4-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-4-1]:[1]:method_text:[Type(Sensor.TYPE_LINEAR_ACCELERATION));         }     }      @CddTest(requirement=""7.3.1/C-4-1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[C-4-1]:[1]:method_text:[ortcutId())) {                 return true;             }         }         return false;     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[isAdbWifiSupported()]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([2:/android/mediapc/cts/PerformanceClassTest.java]:[6.1]:[2]:method_text:[fo();         activityManager.getMemoryInfo(memoryInfo);         return memoryInfo.totalMem;     } }])', 1), ('([2:/android/telephony/cts/CellInfoTest.java]:[6.1]:[2]:method_text:[er receives callbacks every time that new CellInfo      * is received and not otherwise.      */    ])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[6.1]:[1]:method_text:[nge"", csgInfo.getCsgIdentity() > 0                 && csgInfo.getCsgIdentity() <= 0x7FFFFF);     } }])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[ces reported memory to ensure it meets the minimum values described      * in CDD 7.6.1.      */    ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[44);             } else {                 assertMinMemoryMb(592);             }         }     }     ])', 1), ('([4:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[4]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                 size > minSizeBytes);     } }])', 1)]"					
146:486059) 6.1  . Developer Tools	6.1	C-0-11		[('android.hardware.cts.LowRamDeviceTest', 3), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 2), ('android.telephony.cts.CellInfoTest', 2), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 1), ('android.content.res.cts.FractionTest', 1), ('android.view.cts.VelocityTrackerTest', 1), ('android.net.cts.InetAddressesTest', 1), ('android.app.cts.DownloadManagerTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.mediapc.cts.PerformanceClassTest', 1)]	[('setUp', 2), ('notifyAll', 2), ('validNumericAddressesAndStringRepresentation', 1), ('invalidNumericAddresses', 1), ('getAllCellInfo', 1), ('onCellInfoChanged', 1), ('Executor', 1), ('run', 1), ('getTargetContext', 1), ('getPackageManager', 1)]	[('CtsTelephonyTestCases', 3), ('CtsHardwareTestCases', 3), ('CtsContentTestCases', 1), ('CtsViewTestCases', 1), ('CtsAppTestCases', 1), ('CtsCameraTestCases', 1), ('CtsMediaTestCases', 1), ('CtsMediaPerformanceClassTestCases', 1)]		6.1/C-0-11	"""C-0-11] MUST support the shell command cmd testharness. Upgrading device implementations from an earlier Android version without a persistent data block MAY be exempted from C-0-11. """	06010000.670011	6.1/C-0-11 C-0-11 6.1				[('6.1', 14), ('C-0-11', 1)]		CtsContentTestCases:android.content.res.cts.FractionTest.testFractions CtsViewTestCases:android.view.cts.VelocityTrackerTest.testUsesRawCoordinates CtsAppTestCases:android.app.cts.DownloadManagerTest.testDownloadManagerSupportsHttpsWithExternalWebServer CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testMonochromeCharacteristics CtsMediaTestCases:android.media.cts.AudioTrackTest.testPlayStreamData None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported CtsMediaPerformanceClassTestCases:android.mediapc.cts.PerformanceClassTest.testMinimumMemory CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.isCamped CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.testCellInfo CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.DisplayMetrics CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinimumMemory CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinDataPartitionSize		[('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellInfoTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/FractionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/VelocityTrackerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/InetAddressesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/DownloadManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java', 1)]	[('/android/hardware/cts/LowRamDeviceTest.java', 4), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 3), ('/android/telephony/cts/CellInfoTest.java', 3), ('/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/android/content/res/cts/FractionTest.java', 2), ('/android/view/cts/VelocityTrackerTest.java', 2), ('/android/net/cts/InetAddressesTest.java', 2), ('/android/app/cts/DownloadManagerTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/media/cts/AudioTrackTest.java', 2), ('/android/mediapc/cts/PerformanceClassTest.java', 2)]	"[('([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[6.1]:[1]:method_text:[ mDownloadableSubscription = DownloadableSubscription.forActivationCode(ACTIVATION_CODE);     }     ])', 1), ('([6:/android/content/res/cts/FractionTest.java]:[6.1]:[6]:method_text:[ in resource 0x""                 + Integer.toHexString(resid) + "" "" + mValue, diff > prec);     } } ])', 1), ('([17:/android/view/cts/VelocityTrackerTest.java]:[6.1]:[17]:method_text:[d) < 0.001f) {             return 1;         }         return absError / Math.abs(expected);     } }])', 1), ('([1:/android/net/cts/InetAddressesTest.java]:[6.1]:[1]:method_text:[22]"",         };     }      @Parameters(method = ""validNumericAddressesAndStringRepresentation"")    ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[6.1]:[1]:method_text:[       mContext.unregisterReceiver(receiver);         }     }      @CddTest(requirement=""7.6.1"")    ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-0-11]:[1]:method_text:[acy API are also      * accessible via Camera2.      */     @CddTest(requirement=""7.5.4/C-0-11"")    ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[6.1]:[1]:method_text:[         track.release();         Thread.sleep(waitMsec); // wait for release to complete     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([2:/android/mediapc/cts/PerformanceClassTest.java]:[6.1]:[2]:method_text:[fo();         activityManager.getMemoryInfo(memoryInfo);         return memoryInfo.totalMem;     } }])', 1), ('([2:/android/telephony/cts/CellInfoTest.java]:[6.1]:[2]:method_text:[er receives callbacks every time that new CellInfo      * is received and not otherwise.      */    ])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[6.1]:[1]:method_text:[nge"", csgInfo.getCsgIdentity() > 0                 && csgInfo.getCsgIdentity() <= 0x7FFFFF);     } }])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[ces reported memory to ensure it meets the minimum values described      * in CDD 7.6.1.      */    ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[44);             } else {                 assertMinMemoryMb(592);             }         }     }     ])', 1), ('([4:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[4]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                 size > minSizeBytes);     } }])', 1)]"					
146:486059) 6.1  . Developer Tools	6.1	C-3-1		[('android.hardware.cts.LowRamDeviceTest', 3), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 2), ('android.telephony.cts.CellInfoTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 1), ('android.content.res.cts.FractionTest', 1), ('android.view.cts.VelocityTrackerTest', 1), ('android.net.cts.InetAddressesTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.app.cts.DownloadManagerTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.incrementalinstall.cts.IncrementalFeatureTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.hardware.cts.SensorSupportTest', 1), ('android.mediapc.cts.PerformanceClassTest', 1)]	[('setUp', 2), ('notifyAll', 2), ('validNumericAddressesAndStringRepresentation', 1), ('invalidNumericAddresses', 1), ('getAllCellInfo', 1), ('onCellInfoChanged', 1), ('Executor', 1), ('run', 1), ('getTargetContext', 1), ('getPackageManager', 1)]	[('CtsTelephonyTestCases', 3), ('CtsHardwareTestCases', 3), ('CtsAppTestCases', 2), ('CtsContentTestCases', 1), ('CtsViewTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsMediaTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaPerformanceClassTestCases', 1)]		6.1/C-3-1	"""C-3-1] MUST implement adb via local-area network (such as Ethernet or Wi-Fi). """	06010000.670301	6.1 C-3-1 6.1/C-3-1				[('6.1', 14), ('C-3-1', 5)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsContentTestCases:android.content.res.cts.FractionTest.testFractions CtsViewTestCases:android.view.cts.VelocityTrackerTest.testUsesRawCoordinates CtsAppTestCases:android.app.cts.DownloadManagerTest.testDownloadManagerSupportsHttpsWithExternalWebServer CtsMediaTestCases:android.media.cts.AudioTrackTest.testPlayStreamData None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkanHardwareFeatures CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsTiltDetector None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported CtsMediaPerformanceClassTestCases:android.mediapc.cts.PerformanceClassTest.testMinimumMemory CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.isCamped CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.testCellInfo CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.DisplayMetrics CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinimumMemory CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinDataPartitionSize		[('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellInfoTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/FractionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/VelocityTrackerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/InetAddressesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/DownloadManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java', 1)]	[('/android/hardware/cts/LowRamDeviceTest.java', 4), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 3), ('/android/telephony/cts/CellInfoTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/android/content/res/cts/FractionTest.java', 2), ('/android/view/cts/VelocityTrackerTest.java', 2), ('/android/net/cts/InetAddressesTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/app/cts/DownloadManagerTest.java', 2), ('/android/media/cts/AudioTrackTest.java', 2), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/hardware/cts/SensorSupportTest.java', 2), ('/android/mediapc/cts/PerformanceClassTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-3-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[6.1]:[1]:method_text:[ mDownloadableSubscription = DownloadableSubscription.forActivationCode(ACTIVATION_CODE);     }     ])', 1), ('([6:/android/content/res/cts/FractionTest.java]:[6.1]:[6]:method_text:[ in resource 0x""                 + Integer.toHexString(resid) + "" "" + mValue, diff > prec);     } } ])', 1), ('([17:/android/view/cts/VelocityTrackerTest.java]:[6.1]:[17]:method_text:[d) < 0.001f) {             return 1;         }         return absError / Math.abs(expected);     } }])', 1), ('([1:/android/net/cts/InetAddressesTest.java]:[6.1]:[1]:method_text:[22]"",         };     }      @Parameters(method = ""validNumericAddressesAndStringRepresentation"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-3-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[6.1]:[1]:method_text:[       mContext.unregisterReceiver(receiver);         }     }      @CddTest(requirement=""7.6.1"")    ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[6.1]:[1]:method_text:[         track.release();         Thread.sleep(waitMsec); // wait for release to complete     }     ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-3-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-3-1]:[1]:method_text:[l, mVulkanHardwareCompute.version);         }     }      @CddTest(requirement = ""7.1.4.2/C-3-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-3-1]:[1]:method_text:[    checkHifiVrSensorSupport(TYPE_TILT_DETECTOR);     }      @CddTest(requirement=""7.3.1/C-3-1"")    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([2:/android/mediapc/cts/PerformanceClassTest.java]:[6.1]:[2]:method_text:[fo();         activityManager.getMemoryInfo(memoryInfo);         return memoryInfo.totalMem;     } }])', 1), ('([2:/android/telephony/cts/CellInfoTest.java]:[6.1]:[2]:method_text:[er receives callbacks every time that new CellInfo      * is received and not otherwise.      */    ])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[6.1]:[1]:method_text:[nge"", csgInfo.getCsgIdentity() > 0                 && csgInfo.getCsgIdentity() <= 0x7FFFFF);     } }])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[ces reported memory to ensure it meets the minimum values described      * in CDD 7.6.1.      */    ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[44);             } else {                 assertMinMemoryMb(592);             }         }     }     ])', 1), ('([4:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[4]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                 size > minSizeBytes);     } }])', 1)]"					
146:486059) 6.1  . Developer Tools	6.1	C-5-1		[('android.adbmanager.cts.AdbManagerHostDeviceTest', 3), ('android.hardware.cts.LowRamDeviceTest', 3), ('android.telephony.cts.CellInfoTest', 2), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 1), ('android.content.res.cts.FractionTest', 1), ('android.view.cts.VelocityTrackerTest', 1), ('android.net.cts.InetAddressesTest', 1), ('android.app.cts.DownloadManagerTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.mediapc.cts.PerformanceClassTest', 1)]	[('setUp', 2), ('notifyAll', 2), ('validNumericAddressesAndStringRepresentation', 1), ('invalidNumericAddresses', 1), ('getAllCellInfo', 1), ('onCellInfoChanged', 1), ('Executor', 1), ('run', 1), ('getTargetContext', 1), ('getPackageManager', 1)]	[('CtsTelephonyTestCases', 3), ('CtsHardwareTestCases', 3), ('CtsContentTestCases', 1), ('CtsViewTestCases', 1), ('CtsAppTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsMediaTestCases', 1), ('CtsMediaPerformanceClassTestCases', 1)]		6.1/C-5-1	"""C-5-1] MUST have the AdbManager#isAdbWifiQrSupported() method return true. Dalvik Debug Monitor Service (ddms) """	06010000.670501	C-5-1 6.1 6.1/C-5-1 isAdbWifiQrSupported()				[('6.1', 14), ('C-5-1', 1), ('isAdbWifiQrSupported()', 1)]		CtsContentTestCases:android.content.res.cts.FractionTest.testFractions CtsViewTestCases:android.view.cts.VelocityTrackerTest.testUsesRawCoordinates CtsAppTestCases:android.app.cts.DownloadManagerTest.testDownloadManagerSupportsHttpsWithExternalWebServer CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions CtsMediaTestCases:android.media.cts.AudioTrackTest.testPlayStreamData None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported CtsMediaPerformanceClassTestCases:android.mediapc.cts.PerformanceClassTest.testMinimumMemory CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.isCamped CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.testCellInfo CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.DisplayMetrics CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinimumMemory CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinDataPartitionSize		[('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellInfoTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/FractionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/VelocityTrackerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/InetAddressesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/DownloadManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java', 1)]	[('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 5), ('/android/hardware/cts/LowRamDeviceTest.java', 4), ('/android/telephony/cts/CellInfoTest.java', 3), ('/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/android/content/res/cts/FractionTest.java', 2), ('/android/view/cts/VelocityTrackerTest.java', 2), ('/android/net/cts/InetAddressesTest.java', 2), ('/android/app/cts/DownloadManagerTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/media/cts/AudioTrackTest.java', 2), ('/android/mediapc/cts/PerformanceClassTest.java', 2)]	"[('([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[6.1]:[1]:method_text:[ mDownloadableSubscription = DownloadableSubscription.forActivationCode(ACTIVATION_CODE);     }     ])', 1), ('([6:/android/content/res/cts/FractionTest.java]:[6.1]:[6]:method_text:[ in resource 0x""                 + Integer.toHexString(resid) + "" "" + mValue, diff > prec);     } } ])', 1), ('([17:/android/view/cts/VelocityTrackerTest.java]:[6.1]:[17]:method_text:[d) < 0.001f) {             return 1;         }         return absError / Math.abs(expected);     } }])', 1), ('([1:/android/net/cts/InetAddressesTest.java]:[6.1]:[1]:method_text:[22]"",         };     }      @Parameters(method = ""validNumericAddressesAndStringRepresentation"")    ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[6.1]:[1]:method_text:[       mContext.unregisterReceiver(receiver);         }     }      @CddTest(requirement=""7.6.1"")    ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-5-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[6.1]:[1]:method_text:[         track.release();         Thread.sleep(waitMsec); // wait for release to complete     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[isAdbWifiQrSupported()]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([2:/android/mediapc/cts/PerformanceClassTest.java]:[6.1]:[2]:method_text:[fo();         activityManager.getMemoryInfo(memoryInfo);         return memoryInfo.totalMem;     } }])', 1), ('([2:/android/telephony/cts/CellInfoTest.java]:[6.1]:[2]:method_text:[er receives callbacks every time that new CellInfo      * is received and not otherwise.      */    ])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[6.1]:[1]:method_text:[nge"", csgInfo.getCsgIdentity() > 0                 && csgInfo.getCsgIdentity() <= 0x7FFFFF);     } }])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[ces reported memory to ensure it meets the minimum values described      * in CDD 7.6.1.      */    ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[44);             } else {                 assertMinMemoryMb(592);             }         }     }     ])', 1), ('([4:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[4]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                 size > minSizeBytes);     } }])', 1)]"					
146:486059) 6.1  . Developer Tools	6.1	C-0-10		[('android.hardware.cts.LowRamDeviceTest', 3), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 2), ('android.telephony.cts.CellInfoTest', 2), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 1), ('android.content.res.cts.FractionTest', 1), ('android.view.cts.VelocityTrackerTest', 1), ('android.net.cts.InetAddressesTest', 1), ('android.app.cts.DownloadManagerTest', 1), ('android.media.cts.AudioTrackTest', 1), ('android.cts.statsd.atom.UidAtomTests', 1), ('android.mediapc.cts.PerformanceClassTest', 1)]	[('setUp', 2), ('notifyAll', 2), ('validNumericAddressesAndStringRepresentation', 1), ('invalidNumericAddresses', 1), ('getAllCellInfo', 1), ('onCellInfoChanged', 1), ('Executor', 1), ('run', 1), ('getTargetContext', 1), ('getPackageManager', 1)]	[('CtsTelephonyTestCases', 3), ('CtsHardwareTestCases', 3), ('CtsContentTestCases', 1), ('CtsViewTestCases', 1), ('CtsAppTestCases', 1), ('CtsMediaTestCases', 1), ('CtsMediaPerformanceClassTestCases', 1)]		6.1/C-0-10	"""C-0-10] MUST record, without omission, and make the following events accessible and available to the cmd stats shell command and the StatsManager System API class. ActivityForegroundStateChanged AnomalyDetected AppBreadcrumbReported AppCrashOccurred AppStartOccurred BatteryLevelChanged BatterySaverModeStateChanged BleScanResultReceived BleScanStateChanged ChargingStateChanged DeviceIdleModeStateChanged ForegroundServiceStateChanged GpsScanStateChanged JobStateChanged PluggedStateChanged ScheduledJobStateChanged ScreenStateChanged SyncStateChanged SystemElapsedRealtime UidProcessStateChanged WakelockStateChanged WakeupAlarmOccurred WifiLockStateChanged WifiMulticastLockStateChanged WifiScanStateChanged  | C-0-10] MUST write a LMK_KILL_OCCURRED_FIELD_NUMBER Atom to the statsd log when an app is terminated by the Low Memory Killer. Test Harness Mode If device implementations support the shell command cmd testharness and run cmd testharness enable, they: """	06010000.670010	6.1 LMK_KILL_OCCURRED_FIELD_NUMBER C-0-10 6.1/C-0-10				[('6.1', 14), ('LMK_KILL_OCCURRED_FIELD_NUMBER', 1)]		CtsContentTestCases:android.content.res.cts.FractionTest.testFractions CtsViewTestCases:android.view.cts.VelocityTrackerTest.testUsesRawCoordinates CtsAppTestCases:android.app.cts.DownloadManagerTest.testDownloadManagerSupportsHttpsWithExternalWebServer CtsMediaTestCases:android.media.cts.AudioTrackTest.testPlayStreamData None:android.cts.statsd.atom.UidAtomTests.testLmkKillOccurred None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported CtsMediaPerformanceClassTestCases:android.mediapc.cts.PerformanceClassTest.testMinimumMemory CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.isCamped CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.testCellInfo CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.DisplayMetrics CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinimumMemory CtsHardwareTestCases:android.hardware.cts.LowRamDeviceTest.testMinDataPartitionSize		[('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellInfoTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/FractionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/VelocityTrackerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/InetAddressesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/DownloadManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioTrackTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/atom/UidAtomTests.java', 1), ('/home/gpoor/cts-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java', 1)]	[('/android/hardware/cts/LowRamDeviceTest.java', 4), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 3), ('/android/telephony/cts/CellInfoTest.java', 3), ('/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/android/content/res/cts/FractionTest.java', 2), ('/android/view/cts/VelocityTrackerTest.java', 2), ('/android/net/cts/InetAddressesTest.java', 2), ('/android/app/cts/DownloadManagerTest.java', 2), ('/android/media/cts/AudioTrackTest.java', 2), ('/android/cts/statsd/atom/UidAtomTests.java', 2), ('/android/mediapc/cts/PerformanceClassTest.java', 2)]	"[('([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[6.1]:[1]:method_text:[ mDownloadableSubscription = DownloadableSubscription.forActivationCode(ACTIVATION_CODE);     }     ])', 1), ('([6:/android/content/res/cts/FractionTest.java]:[6.1]:[6]:method_text:[ in resource 0x""                 + Integer.toHexString(resid) + "" "" + mValue, diff > prec);     } } ])', 1), ('([17:/android/view/cts/VelocityTrackerTest.java]:[6.1]:[17]:method_text:[d) < 0.001f) {             return 1;         }         return absError / Math.abs(expected);     } }])', 1), ('([1:/android/net/cts/InetAddressesTest.java]:[6.1]:[1]:method_text:[22]"",         };     }      @Parameters(method = ""validNumericAddressesAndStringRepresentation"")    ])', 1), ('([1:/android/app/cts/DownloadManagerTest.java]:[6.1]:[1]:method_text:[       mContext.unregisterReceiver(receiver);         }     }      @CddTest(requirement=""7.6.1"")    ])', 1), ('([1:/android/media/cts/AudioTrackTest.java]:[6.1]:[1]:method_text:[         track.release();         Thread.sleep(waitMsec); // wait for release to complete     }     ])', 1), ('([1:/android/cts/statsd/atom/UidAtomTests.java]:[LMK_KILL_OCCURRED_FIELD_NUMBER]:[1]:method_text:[ven if running multiple processes, LMK is not worked.         fail(""LMK is not worked."");     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[6.1]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([2:/android/mediapc/cts/PerformanceClassTest.java]:[6.1]:[2]:method_text:[fo();         activityManager.getMemoryInfo(memoryInfo);         return memoryInfo.totalMem;     } }])', 1), ('([2:/android/telephony/cts/CellInfoTest.java]:[6.1]:[2]:method_text:[er receives callbacks every time that new CellInfo      * is received and not otherwise.      */    ])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[6.1]:[1]:method_text:[nge"", csgInfo.getCsgIdentity() > 0                 && csgInfo.getCsgIdentity() <= 0x7FFFFF);     } }])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[ces reported memory to ensure it meets the minimum values described      * in CDD 7.6.1.      */    ])', 1), ('([1:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[1]:method_text:[44);             } else {                 assertMinMemoryMb(592);             }         }     }     ])', 1), ('([4:/android/hardware/cts/LowRamDeviceTest.java]:[6.1]:[4]:method_text:[%d, Minimum = %d"", partitionName, size, minSizeBytes),                 size > minSizeBytes);     } }])', 1)]"					
151:495871) 7.1.1.1  . Screen Size and Shape	7.1.1.1	C-3-1		[('android.app.cts.SystemFeaturesTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.graphics.cts.VulkanFeaturesTest', 2), ('android.hardware.cts.SensorSupportTest', 2)]		[('CtsAppTestCases', 2), ('CtsShortcutManagerTestCases', 2), ('CtsGraphicsTestCases', 2), ('CtsSensorTestCases', 2)]		7.1.1.1/C-3-1	"""C-3-1] MUST report the position, bounds and state of hinge or fold through extensions or sidecar APIs to the application. For details on correctly implementing the sidecar or extension APIs refer to the public documentation of Window Manager Jetpack. <h5 id="""	07010101.670301	7.1.1.1 C-3-1 7.1.1.1/C-3-1				[('C-3-1', 10)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkanHardwareFeatures CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsTiltDetector CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkanHardwareFeatures CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsTiltDetector		[('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 2)]	[('/android/app/cts/SystemFeaturesTest.java', 4), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 4), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 4), ('/android/graphics/cts/VulkanFeaturesTest.java', 4), ('/android/hardware/cts/SensorSupportTest.java', 4)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-3-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 2), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-3-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 2), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-3-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 2), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-3-1]:[1]:method_text:[l, mVulkanHardwareCompute.version);         }     }      @CddTest(requirement = ""7.1.4.2/C-3-1"")    ])', 2), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-3-1]:[1]:method_text:[    checkHifiVrSensorSupport(TYPE_TILT_DETECTOR);     }      @CddTest(requirement=""7.3.1/C-3-1"")    ])', 2)]"					
151:495871) 7.1.1.1  . Screen Size and Shape	7.1.1.1	C-2-1		[('android.hardware.cts.SensorSupportTest', 4), ('android.app.cts.SystemFeaturesTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.location.cts.fine.ScanningSettingsTest', 1), ('android.appwidget.cts.RequestPinAppWidgetTest', 1)]	[('getContext', 3), ('getPackageManager', 2), ('setUp', 2), ('getSimpleName', 1), ('setup', 1), ('getTargetContext', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('getResources', 1), ('getConfiguration', 1)]	[('CtsSensorTestCases', 4), ('CtsAppTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsAppWidgetTestCases', 1)]		7.1.1.1/C-2-1	"""C-2-1] MUST implement the latest available stable version of the extensions API or the stable version of sidecar API to be used by Window Manager Jetpack library. If device implementations include an Android-compatible display(s) that is foldable, or includes a folding hinge between multiple display panels and if the hinge or fold crosses a fullscreen application window, they: """	07010101.670201	7.1.1.1/C-2-1 display(s) C-2-1 7.1.1.1				[('C-2-1', 10)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions CtsLocationFineTestCases:android.location.cts.fine.ScanningSettingsTest.isTV CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsSignificantMotion CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepDetector CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepCounter CtsAppWidgetTestCases:android.appwidget.cts.RequestPinAppWidgetTest.testPinWidget_launcher2		[('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 4), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/ScanningSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 1)]	[('/android/hardware/cts/SensorSupportTest.java', 5), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/location/cts/fine/ScanningSettingsTest.java', 2), ('/android/appwidget/cts/RequestPinAppWidgetTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-2-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-2-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-2-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-2-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/location/cts/fine/ScanningSettingsTest.java]:[C-2-1]:[1]:method_text:[r.MATCH_DEFAULT_ONLY).activityInfo.packageName;     }      @CddTest(requirement = ""7.4.2/C-2-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[sMag = hasSensorType(Sensor.TYPE_MAGNETIC_FIELD);     }      @CddTest(requirement=""7.3.9/C-2-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[VrSensorSupport(Sensor.TYPE_SIGNIFICANT_MOTION);     }      @CddTest(requirement=""7.3.9/C-2-10"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[kHifiVrSensorSupport(Sensor.TYPE_STEP_DETECTOR);     }      @CddTest(requirement=""7.3.9/C-2-11"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[ckHifiVrSensorSupport(Sensor.TYPE_STEP_COUNTER);     }      @CddTest(requirement=""7.3.9/C-2-12"")    ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[C-2-1]:[1]:method_text:[                 AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());     }     ])', 1)]"					
151:495871) 7.1.1.1  . Screen Size and Shape	7.1.1.1	H-1-1		[('android.opengl.cts.OpenGlEsVersionTest', 2), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2)]		[('CtsOpenGLTestCases', 2), ('CtsCameraTestCases', 2)]		7.1.1.1/H-1-1	""">7.1.1.1/H-1-1]* MUST make the logical screen that is made available for third party applications be at least 2 inches on the short edge(s) and 2.7 inches on the long edge(s). Devices which launched on an API level earlier than that of this document are exempted from this requirement. If Handheld device implementations do not support software screen rotation, they: [<a href=""#7_1_display_and_graphics"""""	07010101.720101	H-1-1 7.1.1.1/H-1-1 edge(s) 7.1.1.1				[('H-1-1', 4)]		CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensions CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensions CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics		[('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2)]	[('/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 4)]	"[('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[H-1-1]:[1]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");         }     }      @CddTest(requirement=""7.1.4.5/H-1-1"")    ])', 2), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-1]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 2)]"					
151:495871) 7.1.1.1  . Screen Size and Shape	7.1.1.1	H-2-1		[('android.opengl.cts.OpenGlEsVersionTest', 2), ('android.content.res.cts.ConfigurationTest', 2)]		[('CtsOpenGLTestCases', 2), ('CtsContentTestCases', 2)]		7.1.1.1/H-2-1	""">7.1.1.1/H-2-1]* MUST make the logical screen that is made available for third party applications be at least 2.7 inches on the short edge(s). Devices which launched on an API level earlier than that of this document are exempted from this requirement. If Handheld device implementations claim support for high dynamic range displays through Configuration.isScreenHdr() , they: [<a href=""#7_1_display-and-graphics"""""	07010101.720201	Configuration.isScreenHdr 7.1.1.1/H-2-1 edge(s) 7.1.1.1 H-2-1 isScreenHdr()				[('isScreenHdr()', 4)]		CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensionsForHdrCapableDisplay CtsContentTestCases:android.content.res.cts.ConfigurationTest.testIsScreenHdr CtsContentTestCases:android.content.res.cts.ConfigurationTest.testIsScreenHdr CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensionsForHdrCapableDisplay		[('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/ConfigurationTest.java', 2)]	[('/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/android/content/res/cts/ConfigurationTest.java', 4)]	"[('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[isScreenHdr()]:[1]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");         }     }      @CddTest(requirement=""7.1.4.5/C-1-4"")    ])', 2), ('([3:/android/content/res/cts/ConfigurationTest.java]:[isScreenHdr()]:[3]:method_text:[.colorMode |= Configuration.COLOR_MODE_HDR_YES;         assertTrue(config.isScreenHdr());     }     ])', 2)]"					
158:512795) 7.1.4.2  . These are in the Android source tree at	7.1.4.2	C-1-10		[('android.graphics.cts.VulkanDeqpLevelTest', 4), ('android.graphics.cts.VulkanFeaturesTest', 2), ('android.hardware.camera2.cts.HeifWriterTest', 1), ('android.net.ipsec.ike.cts.IkeSessionDigitalSignatureTest', 1), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 1)]	[('getSimpleName', 4), ('setup', 4), ('getTargetContext', 4), ('getPackageManager', 4), ('getSystemAvailableFeatures', 4), ('getVulkanDevices', 1), ('getBestDevice', 1)]	[('CtsGraphicsTestCases', 6), ('CtsIkeTestCases', 2), ('CtsCameraTestCases', 1)]		7.1.4.2/C-1-10	"""C-1-10] MUST pass all Vulkan dEQP Tests in the test lists between version 132317953 and the version specified in the android.software.vulkan.deqp.level feature flag. """	07010402.670110	EQP C-1-10 7.1.4.2 7.1.4.2/C-1-10 android.software.vulkan.deqp.level				[('EQP', 5), ('7.1.4.2', 3), ('android.software.vulkan.deqp.level', 1)]		CtsCameraTestCases:android.hardware.camera2.cts.HeifWriterTest.testHeif CtsIkeTestCases:android.net.ipsec.ike.cts.IkeSessionDigitalSignatureTest.testIkeSessionSetupAndChildSessionSetupWithTransportMode CtsGraphicsTestCases:android.graphics.cts.VulkanDeqpLevelTest.testVulkanDeqpLevel CtsIkeTestCases:android.net.ipsec.ike.cts.IkeSessionPskTest.testIkeSessionSetupAndChildSessionSetupWithTunnelModeV6 CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkanHardwareFeatures		[('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 1)]	[('/android/graphics/cts/VulkanDeqpLevelTest.java', 7), ('/android/graphics/cts/VulkanFeaturesTest.java', 3), ('/android/hardware/camera2/cts/HeifWriterTest.java', 2), ('/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java', 2), ('/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 2)]	"[('([3:/android/hardware/camera2/cts/HeifWriterTest.java]:[EQP]:[3]:method_text:[           }             // TODO: add more key validations.         }         return result;     } }])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionDigitalSignatureTest.java]:[EQP]:[1]:method_text:[RESP);         verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);     } }])', 1), ('([4:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[4]:method_text:[              }             }         }     }      @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")    ])', 1), ('([6:/android/graphics/cts/VulkanDeqpLevelTest.java]:[EQP]:[6]:method_text:[ATURE_VULKAN_DEQP_LEVEL,                             MINIMUM_VULKAN_DEQP_LEVEL));         }     }  }])', 1), ('([1:/android/graphics/cts/VulkanDeqpLevelTest.java]:[7.1.4.2]:[1]:method_text:[              }             }         }     }      @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")    ])', 1), ('([1:/android/graphics/cts/VulkanDeqpLevelTest.java]:[android.software.vulkan.deqp.level]:[1]:method_text:[              }             }         }     }      @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")    ])', 1), ('([1:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[EQP]:[1]:method_text:[p);         verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);     }     ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[7.1.4.2]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[7.1.4.2]:[1]:method_text:[l, mVulkanHardwareCompute.version);         }     }      @CddTest(requirement = ""7.1.4.2/C-3-1"")    ])', 1)]"					
	7.1.4.6	H-0-1		[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 16), ('android.hardware.camera2.cts.MultiViewTest', 2), ('android.graphics.cts.BitmapTest', 2), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.security.cts.Poc17_01', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.graphics.cts.BasicVulkanGpuTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.hardware.camera2.cts.ImageReaderTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('android.graphics.cts.SyncTest', 1), ('android.hardware.cts.HardwareBufferTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.hardware.camera2.cts.RobustnessTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1)]	[('getDevice', 24), ('cleanup', 4), ('getWidth', 3), ('run', 2), ('getMessage', 2), ('init', 2), ('getHeight', 2), ('data', 1), ('trim', 1), ('getTime', 1), ('LogScanResult', 1), ('setUp', 1), ('getOverrideConfig', 1), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('getSimpleName', 1), ('setup', 1), ('teardown', 1)]	[('CtsGraphicsTestCases', 8), ('CtsCameraTestCases', 4), ('CtsShortcutManagerTestCases', 3), ('CtsRenderscriptTestCases', 1), ('CtsNativeHardwareTestCases', 1), ('CtsViewTestCases', 1), ('CtsDeviceConfigTestCases', 1), ('CtsHardwareTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaTestCases', 1)]		7.1.4.6/H-0-1	""">7.1.4.6/H-0-1] MUST report whether the device supports the GPU profiling capability via a system property graphics.gpu.profiler.support. If Handheld device implementations declare support via a system property graphics.gpu.profiler.support, they: [<a href=""#7_1_display_and_graphics"""""	07010406.720001	7.1.4.6 graphics.gpu.profiler.support 7.1.4.6/H-0-1 GPU H-0-1				[('GPU', 48), ('graphics.gpu.profiler.support', 1)]		CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testSharedSurfaceSwitch CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testTextureImageWriterReaderOperation CtsRenderscriptTestCases:android.renderscript.cts.refocus.RefocusTest.testNewRefocus CtsCameraTestCases:android.hardware.camera2.cts.ImageReaderTest.testUsageRespected None:android.appsecurity.cts.KeySetHostTest.testBadUpgradeMissingPubKey None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkCompressBadParameter None:android.gputools.cts.CtsRootlessGpuDebugHostTest.currentTimeMillis None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testInjectLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testReleaseLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testMultipleExternalApps CtsNativeHardwareTestCases:android.hardware.nativehardware.cts.HardwareBufferVrTest.testLayeredBuffersForVr None:android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest.isEmpty None:android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest.isEmpty CtsViewTestCases:android.view.cts.ASurfaceControlTest.testSurfaceTransaction_setBufferOpaque_transparent CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest.testSpoofingPublisher None:android.security.cts.Poc17_01.testPocCVE_2016_8426 None:android.security.cts.Poc17_01.testPocCVE_2016_8427 CtsDeviceConfigTestCases:android.deviceconfig.cts.DeviceConfigApiPermissionTests.testDeviceConfigPublicNamespacesWithoutReadPermission None:com.android.server.cts.GraphicsStatsValidationTest.testJankyDrawFrame None:com.android.server.cts.GraphicsStatsValidationTest.testDaveyDrawFrame CtsHardwareTestCases:android.hardware.cts.HardwareBufferTest.testIsSupported None:com.android.cts.deviceowner.HardwarePropertiesManagerTest.testHardwarePropertiesManager None:com.android.cts.deviceowner.VrTemperatureTest.testVrTemperatures CtsCameraTestCases:android.hardware.camera2.cts.RobustnessTest.testVerifyMandatoryOutputCombinationTables CtsGraphicsTestCases:android.graphics.cts.CameraGpuTest.testCameraImageCaptureAndRendering CtsSensorTestCases:android.hardware.cts.SensorDirectReportTest.testCloseWithoutConfigStop CtsMediaTestCases:android.media.cts.PresentationSyncTest.testThroughput CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest.testSpoofingPublisher		[('/home/gpoor/cts-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/GraphicsStatsValidationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/KeySetHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/nativehardware/src/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/MediaVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/SyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/VrTemperatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 1)]	[('/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 17), ('/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 4), ('/android/hardware/camera2/cts/MultiViewTest.java', 3), ('/android/graphics/cts/BitmapTest.java', 3), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 3), ('/android/security/cts/Poc17_01.java', 3), ('/com/android/server/cts/GraphicsStatsValidationTest.java', 3), ('/android/graphics/cts/CameraGpuTest.java', 3), ('/android/graphics/cts/BasicVulkanGpuTest.java', 2), ('/android/renderscript/cts/refocus/RefocusTest.java', 2), ('/android/hardware/camera2/cts/ImageReaderTest.java', 2), ('/android/appsecurity/cts/KeySetHostTest.java', 2), ('/android/graphics/cts/CameraVulkanGpuTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 2), ('/android/view/cts/ASurfaceControlTest.java', 2), ('/android/graphics/cts/MediaVulkanGpuTest.java', 2), ('/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 2), ('/android/graphics/cts/SyncTest.java', 2), ('/android/hardware/cts/HardwareBufferTest.java', 2), ('/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 2), ('/com/android/cts/deviceowner/VrTemperatureTest.java', 2), ('/android/hardware/camera2/cts/RobustnessTest.java', 2), ('/android/hardware/cts/SensorDirectReportTest.java', 2), ('/android/media/cts/PresentationSyncTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 2)]	"[('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;      public BasicVulkanGpuTest(String name, int format) {         mFormat = format;     }     ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap      * from the first TextureView is identical to the second TextureView.      */    ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[     }      /*      * Verify behavior of sharing surfaces within one OutputConfiguration      */    ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                 context.getResources().getResourceEntryName(resID));         return path;     }  }])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.      */     private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer); }])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.      */    ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {      static {         System.loadLibrary(""ctsgraphics_jni"");     }     ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();         options.inPreferredConfig = Config.HARDWARE;         return options;     } }])', 1), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are      * loaded in the correct order.      */    ])', 1), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[      * This test ensures we can still use properties if no layer specified via Settings      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     /**      * This test ensures system properties are ignored if Settings load a layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**      * This test ensures a debuggable app can load layers from an external package      */    ])', 1), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures we can still use properties if no GLES layers are specified      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures system properties are ignored if Settings load a GLES layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**      * This test ensures that external GLES layers can be loaded by a debuggable app      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);         Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);     } }])', 1), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());             assertEquals(flags, buffer.getUsage());         }     } }])', 1), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                 FEATURE_WATCH, FEATURE_TELEVISION);     }     ])', 1), ('([1:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[graphics.gpu.profiler.support]:[1]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.      */    ])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.      */    ])', 1), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                     }                 });     }     ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                 () -> runWithCaller(callerContext, () -> r.run())         );     } }])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                          bitmap.getHeight());         return framePixels;     }     ])', 1), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);         }     }      /**      *  b/31799885      */    ])', 1), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);         }     }      /**      *  b/31993456      */    ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {         violations.append(message).append("": "").append(e).append(""\\n"");     } }])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er     public void teardown() throws Throwable {         EGL14.eglTerminate(mEglDisplay);     }     ])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";             orgiRefreshRate[1] = """";         }         return orgiRefreshRate;     }     ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                 latest = proto;             }         }         return latest;     } }])', 1), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));     } }])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);              oldFanSpeeds = fanSpeeds;             oldCpuUsages = cpuUsages;         }     } }])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                 skinVrThrottlingThresholds);     } }])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are      * present and advertised accordingly.      */    ])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =             new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);     ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);         activity.waitToFinishRendering();         activity.finish();     } }])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());          return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned     } }])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                 catch (InterruptedException ignored) {}             }         }     } }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                     });         });     }     ])', 1)]"					
	7.1.4.6	H-1-1		[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 16), ('android.hardware.camera2.cts.MultiViewTest', 2), ('android.graphics.cts.BitmapTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.security.cts.Poc17_01', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.graphics.cts.BasicVulkanGpuTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.hardware.camera2.cts.ImageReaderTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('android.graphics.cts.SyncTest', 1), ('android.hardware.cts.HardwareBufferTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.hardware.camera2.cts.RobustnessTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1)]	[('getDevice', 16), ('getWidth', 3), ('cleanup', 2), ('getHeight', 2), ('data', 1), ('trim', 1), ('getTime', 1), ('LogScanResult', 1), ('setUp', 1), ('run', 1), ('getMessage', 1), ('init', 1), ('getOverrideConfig', 1), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('getSimpleName', 1), ('setup', 1), ('teardown', 1)]	[('CtsGraphicsTestCases', 8), ('CtsCameraTestCases', 5), ('CtsShortcutManagerTestCases', 3), ('CtsRenderscriptTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsNativeHardwareTestCases', 1), ('CtsViewTestCases', 1), ('CtsDeviceConfigTestCases', 1), ('CtsHardwareTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaTestCases', 1)]		7.1.4.6/H-1-1	""">7.1.4.6/H-1-1] MUST report as output a protobuf trace that complies with the schema for GPU counters and GPU renderstages defined in the Perfetto documentation. [<a href=""#7_1_display_and_graphics"""""	07010406.720101	7.1.4.6/H-1-1 H-1-1 7.1.4.6 GPU				[('GPU', 48), ('H-1-1', 2)]		CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testSharedSurfaceSwitch CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testTextureImageWriterReaderOperation CtsRenderscriptTestCases:android.renderscript.cts.refocus.RefocusTest.testNewRefocus CtsCameraTestCases:android.hardware.camera2.cts.ImageReaderTest.testUsageRespected None:android.appsecurity.cts.KeySetHostTest.testBadUpgradeMissingPubKey CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensions None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkCompressBadParameter CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics None:android.gputools.cts.CtsRootlessGpuDebugHostTest.currentTimeMillis None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testInjectLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testReleaseLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testMultipleExternalApps CtsNativeHardwareTestCases:android.hardware.nativehardware.cts.HardwareBufferVrTest.testLayeredBuffersForVr None:android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest.isEmpty CtsViewTestCases:android.view.cts.ASurfaceControlTest.testSurfaceTransaction_setBufferOpaque_transparent CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest.testSpoofingPublisher None:android.security.cts.Poc17_01.testPocCVE_2016_8426 None:android.security.cts.Poc17_01.testPocCVE_2016_8427 CtsDeviceConfigTestCases:android.deviceconfig.cts.DeviceConfigApiPermissionTests.testDeviceConfigPublicNamespacesWithoutReadPermission None:com.android.server.cts.GraphicsStatsValidationTest.testJankyDrawFrame None:com.android.server.cts.GraphicsStatsValidationTest.testDaveyDrawFrame CtsHardwareTestCases:android.hardware.cts.HardwareBufferTest.testIsSupported None:com.android.cts.deviceowner.HardwarePropertiesManagerTest.testHardwarePropertiesManager None:com.android.cts.deviceowner.VrTemperatureTest.testVrTemperatures CtsCameraTestCases:android.hardware.camera2.cts.RobustnessTest.testVerifyMandatoryOutputCombinationTables CtsGraphicsTestCases:android.graphics.cts.CameraGpuTest.testCameraImageCaptureAndRendering CtsSensorTestCases:android.hardware.cts.SensorDirectReportTest.testCloseWithoutConfigStop CtsMediaTestCases:android.media.cts.PresentationSyncTest.testThroughput CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest.testSpoofingPublisher		[('/home/gpoor/cts-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/GraphicsStatsValidationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/KeySetHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/nativehardware/src/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/MediaVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/SyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/VrTemperatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 1)]	[('/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 17), ('/android/hardware/camera2/cts/MultiViewTest.java', 3), ('/android/graphics/cts/BitmapTest.java', 3), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 3), ('/android/security/cts/Poc17_01.java', 3), ('/com/android/server/cts/GraphicsStatsValidationTest.java', 3), ('/android/graphics/cts/CameraGpuTest.java', 3), ('/android/graphics/cts/BasicVulkanGpuTest.java', 2), ('/android/renderscript/cts/refocus/RefocusTest.java', 2), ('/android/hardware/camera2/cts/ImageReaderTest.java', 2), ('/android/appsecurity/cts/KeySetHostTest.java', 2), ('/android/graphics/cts/CameraVulkanGpuTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 2), ('/android/view/cts/ASurfaceControlTest.java', 2), ('/android/graphics/cts/MediaVulkanGpuTest.java', 2), ('/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 2), ('/android/graphics/cts/SyncTest.java', 2), ('/android/hardware/cts/HardwareBufferTest.java', 2), ('/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 2), ('/com/android/cts/deviceowner/VrTemperatureTest.java', 2), ('/android/hardware/camera2/cts/RobustnessTest.java', 2), ('/android/hardware/cts/SensorDirectReportTest.java', 2), ('/android/media/cts/PresentationSyncTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 2)]	"[('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;      public BasicVulkanGpuTest(String name, int format) {         mFormat = format;     }     ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap      * from the first TextureView is identical to the second TextureView.      */    ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[     }      /*      * Verify behavior of sharing surfaces within one OutputConfiguration      */    ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                 context.getResources().getResourceEntryName(resID));         return path;     }  }])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.      */     private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer); }])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.      */    ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {      static {         System.loadLibrary(""ctsgraphics_jni"");     }     ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[H-1-1]:[1]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");         }     }      @CddTest(requirement=""7.1.4.5/H-1-1"")    ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();         options.inPreferredConfig = Config.HARDWARE;         return options;     } }])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-1]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 1), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are      * loaded in the correct order.      */    ])', 1), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[      * This test ensures we can still use properties if no layer specified via Settings      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     /**      * This test ensures system properties are ignored if Settings load a layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**      * This test ensures a debuggable app can load layers from an external package      */    ])', 1), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures we can still use properties if no GLES layers are specified      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures system properties are ignored if Settings load a GLES layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**      * This test ensures that external GLES layers can be loaded by a debuggable app      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);         Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);     } }])', 1), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());             assertEquals(flags, buffer.getUsage());         }     } }])', 1), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                 FEATURE_WATCH, FEATURE_TELEVISION);     }     ])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.      */    ])', 1), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                     }                 });     }     ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                 () -> runWithCaller(callerContext, () -> r.run())         );     } }])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                          bitmap.getHeight());         return framePixels;     }     ])', 1), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);         }     }      /**      *  b/31799885      */    ])', 1), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);         }     }      /**      *  b/31993456      */    ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {         violations.append(message).append("": "").append(e).append(""\\n"");     } }])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er     public void teardown() throws Throwable {         EGL14.eglTerminate(mEglDisplay);     }     ])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";             orgiRefreshRate[1] = """";         }         return orgiRefreshRate;     }     ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                 latest = proto;             }         }         return latest;     } }])', 1), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));     } }])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);              oldFanSpeeds = fanSpeeds;             oldCpuUsages = cpuUsages;         }     } }])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                 skinVrThrottlingThresholds);     } }])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are      * present and advertised accordingly.      */    ])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =             new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);     ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);         activity.waitToFinishRendering();         activity.finish();     } }])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());          return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned     } }])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                 catch (InterruptedException ignored) {}             }         }     } }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                     });         });     }     ])', 1)]"					
	7.1.4.6	H-1-2		[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 16), ('android.hardware.camera2.cts.MultiViewTest', 2), ('android.graphics.cts.BitmapTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.security.cts.Poc17_01', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.graphics.cts.BasicVulkanGpuTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.hardware.camera2.cts.ImageReaderTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('android.graphics.cts.SyncTest', 1), ('android.hardware.cts.HardwareBufferTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.hardware.camera2.cts.RobustnessTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1)]	[('getDevice', 16), ('getWidth', 3), ('cleanup', 2), ('getHeight', 2), ('data', 1), ('trim', 1), ('getTime', 1), ('LogScanResult', 1), ('setUp', 1), ('run', 1), ('getMessage', 1), ('init', 1), ('getOverrideConfig', 1), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('getSimpleName', 1), ('setup', 1), ('teardown', 1)]	[('CtsGraphicsTestCases', 8), ('CtsCameraTestCases', 5), ('CtsShortcutManagerTestCases', 3), ('CtsRenderscriptTestCases', 1), ('CtsNativeHardwareTestCases', 1), ('CtsViewTestCases', 1), ('CtsDeviceConfigTestCases', 1), ('CtsHardwareTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaTestCases', 1)]		7.1.4.6/H-1-2	""">7.1.4.6/H-1-2] MUST report conformant values for the device’s GPU counters following the gpu counter trace packet proto. [<a href=""#7_1_display_and_graphics"""""	07010406.720102	7.1.4.6 7.1.4.6/H-1-2 H-1-2 GPU				[('GPU', 48), ('H-1-2', 1)]		CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testSharedSurfaceSwitch CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testTextureImageWriterReaderOperation CtsRenderscriptTestCases:android.renderscript.cts.refocus.RefocusTest.testNewRefocus CtsCameraTestCases:android.hardware.camera2.cts.ImageReaderTest.testUsageRespected None:android.appsecurity.cts.KeySetHostTest.testBadUpgradeMissingPubKey None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkCompressBadParameter CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics None:android.gputools.cts.CtsRootlessGpuDebugHostTest.currentTimeMillis None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testInjectLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testReleaseLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testMultipleExternalApps CtsNativeHardwareTestCases:android.hardware.nativehardware.cts.HardwareBufferVrTest.testLayeredBuffersForVr None:android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest.isEmpty CtsViewTestCases:android.view.cts.ASurfaceControlTest.testSurfaceTransaction_setBufferOpaque_transparent CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest.testSpoofingPublisher None:android.security.cts.Poc17_01.testPocCVE_2016_8426 None:android.security.cts.Poc17_01.testPocCVE_2016_8427 CtsDeviceConfigTestCases:android.deviceconfig.cts.DeviceConfigApiPermissionTests.testDeviceConfigPublicNamespacesWithoutReadPermission None:com.android.server.cts.GraphicsStatsValidationTest.testJankyDrawFrame None:com.android.server.cts.GraphicsStatsValidationTest.testDaveyDrawFrame CtsHardwareTestCases:android.hardware.cts.HardwareBufferTest.testIsSupported None:com.android.cts.deviceowner.HardwarePropertiesManagerTest.testHardwarePropertiesManager None:com.android.cts.deviceowner.VrTemperatureTest.testVrTemperatures CtsCameraTestCases:android.hardware.camera2.cts.RobustnessTest.testVerifyMandatoryOutputCombinationTables CtsGraphicsTestCases:android.graphics.cts.CameraGpuTest.testCameraImageCaptureAndRendering CtsSensorTestCases:android.hardware.cts.SensorDirectReportTest.testCloseWithoutConfigStop CtsMediaTestCases:android.media.cts.PresentationSyncTest.testThroughput CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest.testSpoofingPublisher		[('/home/gpoor/cts-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/GraphicsStatsValidationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/KeySetHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/nativehardware/src/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/MediaVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/SyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/VrTemperatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 1)]	[('/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 17), ('/android/hardware/camera2/cts/MultiViewTest.java', 3), ('/android/graphics/cts/BitmapTest.java', 3), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 3), ('/android/security/cts/Poc17_01.java', 3), ('/com/android/server/cts/GraphicsStatsValidationTest.java', 3), ('/android/graphics/cts/CameraGpuTest.java', 3), ('/android/graphics/cts/BasicVulkanGpuTest.java', 2), ('/android/renderscript/cts/refocus/RefocusTest.java', 2), ('/android/hardware/camera2/cts/ImageReaderTest.java', 2), ('/android/appsecurity/cts/KeySetHostTest.java', 2), ('/android/graphics/cts/CameraVulkanGpuTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 2), ('/android/view/cts/ASurfaceControlTest.java', 2), ('/android/graphics/cts/MediaVulkanGpuTest.java', 2), ('/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 2), ('/android/graphics/cts/SyncTest.java', 2), ('/android/hardware/cts/HardwareBufferTest.java', 2), ('/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 2), ('/com/android/cts/deviceowner/VrTemperatureTest.java', 2), ('/android/hardware/camera2/cts/RobustnessTest.java', 2), ('/android/hardware/cts/SensorDirectReportTest.java', 2), ('/android/media/cts/PresentationSyncTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 2)]	"[('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;      public BasicVulkanGpuTest(String name, int format) {         mFormat = format;     }     ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap      * from the first TextureView is identical to the second TextureView.      */    ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[     }      /*      * Verify behavior of sharing surfaces within one OutputConfiguration      */    ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                 context.getResources().getResourceEntryName(resID));         return path;     }  }])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.      */     private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer); }])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.      */    ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {      static {         System.loadLibrary(""ctsgraphics_jni"");     }     ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();         options.inPreferredConfig = Config.HARDWARE;         return options;     } }])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-2]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 1), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are      * loaded in the correct order.      */    ])', 1), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[      * This test ensures we can still use properties if no layer specified via Settings      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     /**      * This test ensures system properties are ignored if Settings load a layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**      * This test ensures a debuggable app can load layers from an external package      */    ])', 1), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures we can still use properties if no GLES layers are specified      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures system properties are ignored if Settings load a GLES layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**      * This test ensures that external GLES layers can be loaded by a debuggable app      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);         Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);     } }])', 1), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());             assertEquals(flags, buffer.getUsage());         }     } }])', 1), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                 FEATURE_WATCH, FEATURE_TELEVISION);     }     ])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.      */    ])', 1), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                     }                 });     }     ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                 () -> runWithCaller(callerContext, () -> r.run())         );     } }])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                          bitmap.getHeight());         return framePixels;     }     ])', 1), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);         }     }      /**      *  b/31799885      */    ])', 1), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);         }     }      /**      *  b/31993456      */    ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {         violations.append(message).append("": "").append(e).append(""\\n"");     } }])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er     public void teardown() throws Throwable {         EGL14.eglTerminate(mEglDisplay);     }     ])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";             orgiRefreshRate[1] = """";         }         return orgiRefreshRate;     }     ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                 latest = proto;             }         }         return latest;     } }])', 1), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));     } }])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);              oldFanSpeeds = fanSpeeds;             oldCpuUsages = cpuUsages;         }     } }])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                 skinVrThrottlingThresholds);     } }])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are      * present and advertised accordingly.      */    ])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =             new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);     ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);         activity.waitToFinishRendering();         activity.finish();     } }])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());          return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned     } }])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                 catch (InterruptedException ignored) {}             }         }     } }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                     });         });     }     ])', 1)]"					
	7.1.4.6	H-1-3		[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 16), ('android.hardware.camera2.cts.MultiViewTest', 2), ('android.graphics.cts.BitmapTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.security.cts.Poc17_01', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.graphics.cts.BasicVulkanGpuTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.hardware.camera2.cts.ImageReaderTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('android.graphics.cts.SyncTest', 1), ('android.hardware.cts.HardwareBufferTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.hardware.camera2.cts.RobustnessTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1)]	[('getDevice', 16), ('getWidth', 3), ('cleanup', 2), ('getHeight', 2), ('data', 1), ('trim', 1), ('getTime', 1), ('LogScanResult', 1), ('setUp', 1), ('run', 1), ('getMessage', 1), ('init', 1), ('getOverrideConfig', 1), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('getSimpleName', 1), ('setup', 1), ('teardown', 1)]	[('CtsGraphicsTestCases', 8), ('CtsCameraTestCases', 5), ('CtsShortcutManagerTestCases', 3), ('CtsRenderscriptTestCases', 1), ('CtsNativeHardwareTestCases', 1), ('CtsViewTestCases', 1), ('CtsDeviceConfigTestCases', 1), ('CtsHardwareTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaTestCases', 1)]		7.1.4.6/H-1-3	""">7.1.4.6/H-1-3] MUST report conformant values for the device’s GPU RenderStages following the render stage trace packet proto. [<a href=""#7_1_display_and_graphics"""""	07010406.720103	7.1.4.6 7.1.4.6/H-1-3 GPU H-1-3				[('GPU', 48), ('H-1-3', 1)]		CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testSharedSurfaceSwitch CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testTextureImageWriterReaderOperation CtsRenderscriptTestCases:android.renderscript.cts.refocus.RefocusTest.testNewRefocus CtsCameraTestCases:android.hardware.camera2.cts.ImageReaderTest.testUsageRespected None:android.appsecurity.cts.KeySetHostTest.testBadUpgradeMissingPubKey None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkCompressBadParameter CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics None:android.gputools.cts.CtsRootlessGpuDebugHostTest.currentTimeMillis None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testInjectLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testReleaseLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testMultipleExternalApps CtsNativeHardwareTestCases:android.hardware.nativehardware.cts.HardwareBufferVrTest.testLayeredBuffersForVr None:android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest.isEmpty CtsViewTestCases:android.view.cts.ASurfaceControlTest.testSurfaceTransaction_setBufferOpaque_transparent CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest.testSpoofingPublisher None:android.security.cts.Poc17_01.testPocCVE_2016_8426 None:android.security.cts.Poc17_01.testPocCVE_2016_8427 CtsDeviceConfigTestCases:android.deviceconfig.cts.DeviceConfigApiPermissionTests.testDeviceConfigPublicNamespacesWithoutReadPermission None:com.android.server.cts.GraphicsStatsValidationTest.testJankyDrawFrame None:com.android.server.cts.GraphicsStatsValidationTest.testDaveyDrawFrame CtsHardwareTestCases:android.hardware.cts.HardwareBufferTest.testIsSupported None:com.android.cts.deviceowner.HardwarePropertiesManagerTest.testHardwarePropertiesManager None:com.android.cts.deviceowner.VrTemperatureTest.testVrTemperatures CtsCameraTestCases:android.hardware.camera2.cts.RobustnessTest.testVerifyMandatoryOutputCombinationTables CtsGraphicsTestCases:android.graphics.cts.CameraGpuTest.testCameraImageCaptureAndRendering CtsSensorTestCases:android.hardware.cts.SensorDirectReportTest.testCloseWithoutConfigStop CtsMediaTestCases:android.media.cts.PresentationSyncTest.testThroughput CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest.testSpoofingPublisher		[('/home/gpoor/cts-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/GraphicsStatsValidationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/KeySetHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/nativehardware/src/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/MediaVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/SyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/VrTemperatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 1)]	[('/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 17), ('/android/hardware/camera2/cts/MultiViewTest.java', 3), ('/android/graphics/cts/BitmapTest.java', 3), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 3), ('/android/security/cts/Poc17_01.java', 3), ('/com/android/server/cts/GraphicsStatsValidationTest.java', 3), ('/android/graphics/cts/CameraGpuTest.java', 3), ('/android/graphics/cts/BasicVulkanGpuTest.java', 2), ('/android/renderscript/cts/refocus/RefocusTest.java', 2), ('/android/hardware/camera2/cts/ImageReaderTest.java', 2), ('/android/appsecurity/cts/KeySetHostTest.java', 2), ('/android/graphics/cts/CameraVulkanGpuTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 2), ('/android/view/cts/ASurfaceControlTest.java', 2), ('/android/graphics/cts/MediaVulkanGpuTest.java', 2), ('/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 2), ('/android/graphics/cts/SyncTest.java', 2), ('/android/hardware/cts/HardwareBufferTest.java', 2), ('/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 2), ('/com/android/cts/deviceowner/VrTemperatureTest.java', 2), ('/android/hardware/camera2/cts/RobustnessTest.java', 2), ('/android/hardware/cts/SensorDirectReportTest.java', 2), ('/android/media/cts/PresentationSyncTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 2)]	"[('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;      public BasicVulkanGpuTest(String name, int format) {         mFormat = format;     }     ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap      * from the first TextureView is identical to the second TextureView.      */    ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[     }      /*      * Verify behavior of sharing surfaces within one OutputConfiguration      */    ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                 context.getResources().getResourceEntryName(resID));         return path;     }  }])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.      */     private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer); }])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.      */    ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {      static {         System.loadLibrary(""ctsgraphics_jni"");     }     ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();         options.inPreferredConfig = Config.HARDWARE;         return options;     } }])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-3]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 1), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are      * loaded in the correct order.      */    ])', 1), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[      * This test ensures we can still use properties if no layer specified via Settings      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     /**      * This test ensures system properties are ignored if Settings load a layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**      * This test ensures a debuggable app can load layers from an external package      */    ])', 1), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures we can still use properties if no GLES layers are specified      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures system properties are ignored if Settings load a GLES layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**      * This test ensures that external GLES layers can be loaded by a debuggable app      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);         Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);     } }])', 1), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());             assertEquals(flags, buffer.getUsage());         }     } }])', 1), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                 FEATURE_WATCH, FEATURE_TELEVISION);     }     ])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.      */    ])', 1), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                     }                 });     }     ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                 () -> runWithCaller(callerContext, () -> r.run())         );     } }])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                          bitmap.getHeight());         return framePixels;     }     ])', 1), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);         }     }      /**      *  b/31799885      */    ])', 1), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);         }     }      /**      *  b/31993456      */    ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {         violations.append(message).append("": "").append(e).append(""\\n"");     } }])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er     public void teardown() throws Throwable {         EGL14.eglTerminate(mEglDisplay);     }     ])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";             orgiRefreshRate[1] = """";         }         return orgiRefreshRate;     }     ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                 latest = proto;             }         }         return latest;     } }])', 1), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));     } }])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);              oldFanSpeeds = fanSpeeds;             oldCpuUsages = cpuUsages;         }     } }])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                 skinVrThrottlingThresholds);     } }])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are      * present and advertised accordingly.      */    ])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =             new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);     ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);         activity.waitToFinishRendering();         activity.finish();     } }])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());          return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned     } }])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                 catch (InterruptedException ignored) {}             }         }     } }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                     });         });     }     ])', 1)]"					
	7.1.4.6	H-1-4		[('android.gputools.cts.CtsRootlessGpuDebugHostTest', 16), ('android.hardware.camera2.cts.MultiViewTest', 2), ('android.graphics.cts.BitmapTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest', 2), ('android.security.cts.Poc17_01', 2), ('com.android.server.cts.GraphicsStatsValidationTest', 2), ('android.graphics.cts.CameraGpuTest', 2), ('android.graphics.cts.BasicVulkanGpuTest', 1), ('android.renderscript.cts.refocus.RefocusTest', 1), ('android.hardware.camera2.cts.ImageReaderTest', 1), ('android.appsecurity.cts.KeySetHostTest', 1), ('android.graphics.cts.CameraVulkanGpuTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.hardware.nativehardware.cts.HardwareBufferVrTest', 1), ('android.graphics.gpuprofiling.cts.CtsFrameTracerDataSourceTest', 1), ('android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest', 1), ('android.view.cts.ASurfaceControlTest', 1), ('android.graphics.cts.MediaVulkanGpuTest', 1), ('android.deviceconfig.cts.DeviceConfigApiPermissionTests', 1), ('android.graphics.cts.SyncTest', 1), ('android.hardware.cts.HardwareBufferTest', 1), ('com.android.cts.deviceowner.HardwarePropertiesManagerTest', 1), ('com.android.cts.deviceowner.VrTemperatureTest', 1), ('android.hardware.camera2.cts.RobustnessTest', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest', 1)]	[('getDevice', 16), ('getWidth', 3), ('cleanup', 2), ('getHeight', 2), ('data', 1), ('trim', 1), ('getTime', 1), ('LogScanResult', 1), ('setUp', 1), ('run', 1), ('getMessage', 1), ('init', 1), ('getOverrideConfig', 1), ('getFramePixels', 1), ('getContext', 1), ('getAssets', 1), ('getSimpleName', 1), ('setup', 1), ('teardown', 1)]	[('CtsGraphicsTestCases', 8), ('CtsCameraTestCases', 5), ('CtsShortcutManagerTestCases', 3), ('CtsRenderscriptTestCases', 1), ('CtsNativeHardwareTestCases', 1), ('CtsViewTestCases', 1), ('CtsDeviceConfigTestCases', 1), ('CtsHardwareTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaTestCases', 1)]		7.1.4.6/H-1-4	""">7.1.4.6/H-1-4] MUST report a GPU Frequency tracepoint as specified by the format: power/gpu_frequency. Handheld device implementations: [<a href=""#7_1_display_and_graphics"""""	07010406.720104	7.1.4.6 7.1.4.6/H-1-4 H-1-4 GPU				[('GPU', 48), ('H-1-4', 1)]		CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testSharedSurfaceSwitch CtsCameraTestCases:android.hardware.camera2.cts.MultiViewTest.testTextureImageWriterReaderOperation CtsRenderscriptTestCases:android.renderscript.cts.refocus.RefocusTest.testNewRefocus CtsCameraTestCases:android.hardware.camera2.cts.ImageReaderTest.testUsageRespected None:android.appsecurity.cts.KeySetHostTest.testBadUpgradeMissingPubKey None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testWrapHardwareBufferWithRgbBufferButNonRgbColorSpaceFails CtsGraphicsTestCases:android.graphics.cts.BitmapTest.testNdkCompressBadParameter CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics None:android.gputools.cts.CtsRootlessGpuDebugHostTest.currentTimeMillis None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testInjectLayerLoadVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreVulkan None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testReleaseLayerLoadGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNotEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugWrongAppGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testDebugNoLayersEnabledGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyEnableGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testSystemPropertyIgnoreGLES None:android.gputools.cts.CtsRootlessGpuDebugHostTest.testMultipleExternalApps CtsNativeHardwareTestCases:android.hardware.nativehardware.cts.HardwareBufferVrTest.testLayeredBuffersForVr None:android.graphics.gpuprofiling.cts.CtsGpuProfilingDataTest.isEmpty CtsViewTestCases:android.view.cts.ASurfaceControlTest.testSurfaceTransaction_setBufferOpaque_transparent CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerFakingPublisherTest.testSpoofingPublisher None:android.security.cts.Poc17_01.testPocCVE_2016_8426 None:android.security.cts.Poc17_01.testPocCVE_2016_8427 CtsDeviceConfigTestCases:android.deviceconfig.cts.DeviceConfigApiPermissionTests.testDeviceConfigPublicNamespacesWithoutReadPermission None:com.android.server.cts.GraphicsStatsValidationTest.testJankyDrawFrame None:com.android.server.cts.GraphicsStatsValidationTest.testDaveyDrawFrame CtsHardwareTestCases:android.hardware.cts.HardwareBufferTest.testIsSupported None:com.android.cts.deviceowner.HardwarePropertiesManagerTest.testHardwarePropertiesManager None:com.android.cts.deviceowner.VrTemperatureTest.testVrTemperatures CtsCameraTestCases:android.hardware.camera2.cts.RobustnessTest.testVerifyMandatoryOutputCombinationTables CtsGraphicsTestCases:android.graphics.cts.CameraGpuTest.testCameraImageCaptureAndRendering CtsSensorTestCases:android.hardware.cts.SensorDirectReportTest.testCloseWithoutConfigStop CtsMediaTestCases:android.media.cts.PresentationSyncTest.testThroughput CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerSpoofingTest.testSpoofingPublisher		[('/home/gpoor/cts-source/cts/hostsidetests/gputools/src/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 16), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BitmapTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_01.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/GraphicsStatsValidationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraGpuTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/refocus/RefocusTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/KeySetHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/nativehardware/src/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/graphics/gpuprofiling/src/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ASurfaceControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/MediaVulkanGpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/deviceconfig/src/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/SyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/HardwareBufferTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/VrTemperatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 1)]	[('/android/gputools/cts/CtsRootlessGpuDebugHostTest.java', 17), ('/android/hardware/camera2/cts/MultiViewTest.java', 3), ('/android/graphics/cts/BitmapTest.java', 3), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java', 3), ('/android/security/cts/Poc17_01.java', 3), ('/com/android/server/cts/GraphicsStatsValidationTest.java', 3), ('/android/graphics/cts/CameraGpuTest.java', 3), ('/android/graphics/cts/BasicVulkanGpuTest.java', 2), ('/android/renderscript/cts/refocus/RefocusTest.java', 2), ('/android/hardware/camera2/cts/ImageReaderTest.java', 2), ('/android/appsecurity/cts/KeySetHostTest.java', 2), ('/android/graphics/cts/CameraVulkanGpuTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/hardware/nativehardware/cts/HardwareBufferVrTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java', 2), ('/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java', 2), ('/android/view/cts/ASurfaceControlTest.java', 2), ('/android/graphics/cts/MediaVulkanGpuTest.java', 2), ('/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java', 2), ('/android/graphics/cts/SyncTest.java', 2), ('/android/hardware/cts/HardwareBufferTest.java', 2), ('/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java', 2), ('/com/android/cts/deviceowner/VrTemperatureTest.java', 2), ('/android/hardware/camera2/cts/RobustnessTest.java', 2), ('/android/hardware/cts/SensorDirectReportTest.java', 2), ('/android/media/cts/PresentationSyncTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java', 2)]	"[('([2:/android/graphics/cts/BasicVulkanGpuTest.java]:[GPU]:[2]:method_text:[rmat;      public BasicVulkanGpuTest(String name, int format) {         mFormat = format;     }     ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[ify the Bitmap      * from the first TextureView is identical to the second TextureView.      */    ])', 1), ('([1:/android/hardware/camera2/cts/MultiViewTest.java]:[GPU]:[1]:method_text:[     }      /*      * Verify behavior of sharing surfaces within one OutputConfiguration      */    ])', 1), ('([1:/android/renderscript/cts/refocus/RefocusTest.java]:[GPU]:[1]:method_text:[+                 context.getResources().getResourceEntryName(resID));         return path;     }  }])', 1), ('([4:/android/hardware/camera2/cts/ImageReaderTest.java]:[GPU]:[4]:method_text:[.      */     private static native boolean validateDynamicDepthNative(byte[] dynamicDepthBuffer); }])', 1), ('([1:/android/appsecurity/cts/KeySetHostTest.java]:[GPU]:[1]:method_text:[k that an apk with an upgrade key that has no corresponding public key fails to install.      */    ])', 1), ('([1:/android/graphics/cts/CameraVulkanGpuTest.java]:[GPU]:[1]:method_text:[ class CameraVulkanGpuTest {      static {         System.loadLibrary(""ctsgraphics_jni"");     }     ])', 1), ('([2:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[GPU]:[2]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[ap bitmap = Bitmap.wrapHardwareBuffer(hwBuffer, ColorSpace.get(Named.CIE_LAB));         }     }     ])', 1), ('([1:/android/graphics/cts/BitmapTest.java]:[GPU]:[1]:method_text:[tory.Options();         options.inPreferredConfig = Config.HARDWARE;         return options;     } }])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-4]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 1), ('([30:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[30]:method_text:[es layers to our debuggable app and ensures they are      * loaded in the correct order.      */    ])', 1), (""([6:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[6]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([1:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[1]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[e apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[      * This test ensures we can still use properties if no layer specified via Settings      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[     /**      * This test ensures system properties are ignored if Settings load a layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[  /**      * This test ensures a debuggable app can load layers from an external package      */    ])', 1), (""([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[es non-debuggable apps ignore Settings and don't enumerate layers in the base directory.      */    ])"", 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[not enumerate layers in base      * directory if enable_gpu_debug_layers is not enabled.      */    ])', 1), ('([4:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[4]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_app does not match.      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[S apps do not enumerate layers in base      * directory if gpu_debug_layers are not set.      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures we can still use properties if no GLES layers are specified      */    ])', 1), ('([3:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[3]:method_text:[/**      * This test ensures system properties are ignored if Settings load a GLES layer      */    ])', 1), ('([7:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[7]:method_text:[/**      * This test ensures that external GLES layers can be loaded by a debuggable app      */    ])', 1), ('([5:/android/gputools/cts/CtsRootlessGpuDebugHostTest.java]:[GPU]:[5]:method_text:[ppStartTime);         Assert.assertTrue(GLES_LAYER_C + "" was not loaded"", glesResult.found);     } }])', 1), ('([2:/android/hardware/nativehardware/cts/HardwareBufferVrTest.java]:[GPU]:[2]:method_text:[s(format, buffer.getFormat());             assertEquals(flags, buffer.getUsage());         }     } }])', 1), ('([2:/android/graphics/gpuprofiling/cts/CtsFrameTracerDataSourceTest.java]:[GPU]:[2]:method_text:[TURE_EMBEDDED, FEATURE_LEANBACK_ONLY,                 FEATURE_WATCH, FEATURE_TELEVISION);     }     ])', 1), ('([23:/android/graphics/gpuprofiling/cts/CtsGpuProfilingDataTest.java]:[GPU]:[23]:method_text:[t of the feature. We check that gpu.counters and gpu.renderstages sources are available.      */    ])', 1), ('([1:/android/view/cts/ASurfaceControlTest.java]:[GPU]:[1]:method_text:[                        return pixelCount == 0;                     }                 });     }     ])', 1), ('([2:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[2]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerFakingPublisherTest.java]:[GPU]:[1]:method_text:[name mismatch"",                 () -> runWithCaller(callerContext, () -> r.run())         );     } }])', 1), ('([1:/android/graphics/cts/MediaVulkanGpuTest.java]:[GPU]:[1]:method_text:[map.getWidth(),                          bitmap.getHeight());         return framePixels;     }     ])', 1), ('([1:/android/security/cts/Poc17_01.java]:[GPU]:[1]:method_text:[ls.runPoc(""CVE-2016-8426"", getDevice(), 60);         }     }      /**      *  b/31799885      */    ])', 1), ('([2:/android/security/cts/Poc17_01.java]:[GPU]:[2]:method_text:[ls.runPoc(""CVE-2016-8427"", getDevice(), 60);         }     }      /**      *  b/31993456      */    ])', 1), ('([1:/android/deviceconfig/cts/DeviceConfigApiPermissionTests.java]:[GPU]:[1]:method_text:[      Exception e) {         violations.append(message).append("": "").append(e).append(""\\n"");     } }])', 1), ('([2:/android/graphics/cts/SyncTest.java]:[GPU]:[2]:method_text:[er     public void teardown() throws Throwable {         EGL14.eglTerminate(mEglDisplay);     }     ])', 1), ('([4:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[4]:method_text:[e[0] = """";             orgiRefreshRate[1] = """";         }         return orgiRefreshRate;     }     ])', 1), ('([3:/com/android/server/cts/GraphicsStatsValidationTest.java]:[GPU]:[3]:method_text:[tStatsEnd());                 latest = proto;             }         }         return latest;     } }])', 1), ('([3:/android/hardware/cts/HardwareBufferTest.java]:[GPU]:[3]:method_text:[        1, HardwareBuffer.USAGE_GPU_SAMPLED_IMAGE | HardwareBuffer.USAGE_GPU_COLOR_OUTPUT));     } }])', 1), ('([14:/com/android/cts/deviceowner/HardwarePropertiesManagerTest.java]:[GPU]:[14]:method_text:[ges);              oldFanSpeeds = fanSpeeds;             oldCpuUsages = cpuUsages;         }     } }])', 1), ('([9:/com/android/cts/deviceowner/VrTemperatureTest.java]:[GPU]:[9]:method_text:[inThrottlingThresholds, skinShutdownThresholds,                 skinVrThrottlingThresholds);     } }])', 1), ('([2:/android/hardware/camera2/cts/RobustnessTest.java]:[GPU]:[2]:method_text:[processable mandatory stream combinations are      * present and advertised accordingly.      */    ])', 1), ('([4:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[4]:method_text:[> mActivityRule =             new ActivityTestRule<>(CameraGpuCtsActivity.class, false, false);     ])', 1), ('([1:/android/graphics/cts/CameraGpuTest.java]:[GPU]:[1]:method_text:[e.launchActivity(null);         activity.waitToFinishRendering();         activity.finish();     } }])', 1), ('([1:/android/hardware/cts/SensorDirectReportTest.java]:[GPU]:[1]:method_text:[der.nativeOrder());          return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned     } }])', 1), ('([3:/android/media/cts/PresentationSyncTest.java]:[GPU]:[3]:method_text:[sleep(10); }                 catch (InterruptedException ignored) {}             }         }     } }])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerSpoofingTest.java]:[GPU]:[1]:method_text:[           assertEquals(""title3"", s.getShortLabel());                     });         });     }     ])', 1)]"					
168:530476) 7.2.3  . Navigation Keys	7.2.3	C-3-1		[('android.app.cts.SystemFeaturesTest', 2), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.graphics.cts.VulkanFeaturesTest', 2), ('android.hardware.cts.SensorSupportTest', 2)]		[('CtsAppTestCases', 2), ('CtsShortcutManagerTestCases', 2), ('CtsGraphicsTestCases', 2), ('CtsSensorTestCases', 2)]		7.2.3/C-3-1	"""C-3-1] MUST make the Menu function available to applications when targetSdkVersion is less than 10, either by a physical button, a software key, or gestures. This Menu function should be accessible unless hidden together with other navigation functions. If device implementations provide the Assist function, they: """	07020300.670301	C-3-1 7.2.3 7.2.3/C-3-1				[('C-3-1', 10)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkanHardwareFeatures CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsTiltDetector CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkanHardwareFeatures CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsTiltDetector		[('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 2)]	[('/android/app/cts/SystemFeaturesTest.java', 4), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 4), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 4), ('/android/graphics/cts/VulkanFeaturesTest.java', 4), ('/android/hardware/cts/SensorSupportTest.java', 4)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-3-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 2), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-3-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 2), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-3-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 2), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-3-1]:[1]:method_text:[l, mVulkanHardwareCompute.version);         }     }      @CddTest(requirement = ""7.1.4.2/C-3-1"")    ])', 2), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-3-1]:[1]:method_text:[    checkHifiVrSensorSupport(TYPE_TILT_DETECTOR);     }      @CddTest(requirement=""7.3.1/C-3-1"")    ])', 2)]"					
169:533444) 7.2.4  . Touchscreen Input	7.2.4	C-3-3		[('android.content.res.cts.ConfigTest', 8), ('android.content.res.cts.ConfigurationTest', 5), ('android.app.cts.SystemFeaturesTest', 4), ('android.server.wm.ActivityManagerGetConfigTests', 1)]	[('setUp', 5), ('Configuration', 5), ('makeConfiguration', 4), ('size', 3), ('getInstrumentation', 2), ('toLanguageTag', 2), ('setToDefaults', 2), ('getDefault', 2), ('getTargetContext', 1), ('getPackageManager', 1), ('getUiAutomation', 1), ('ByteArrayOutputStream', 1), ('close', 1), ('toByteArray', 1), ('getGlExtensionsFromDriver', 1), ('getEGL', 1), ('getConfigs', 1), ('addExtensionsForConfig', 1), ('getLocales', 1), ('getTotalRam', 1), ('newTheme', 1), ('recycle', 1), ('TotalConfig', 1)]	[('CtsContentTestCases', 13), ('CtsAppTestCases', 4), ('CtsWindowManagerDeviceTestCases', 1)]		7.2.4/C-3-3	"""C-3-3] MUST report TOUCHSCREEN_NOTOUCH for the Configuration.touchscreen API field. <h4 id="""	07020400.670303	Configuration.touchscreen 7.2.4 TOUCHSCREEN_NOTOUCH 7.2.4/C-3-3 C-3-3				[('Configuration.touchscreen', 12), ('TOUCHSCREEN_NOTOUCH', 6)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsWindowManagerDeviceTestCases:android.server.wm.ActivityManagerGetConfigTests.isLowRamDevice CtsContentTestCases:android.content.res.cts.ConfigurationTest.testSetToDefaults CtsContentTestCases:android.content.res.cts.ConfigurationTest.testUnset CtsContentTestCases:android.content.res.cts.ConfigurationTest.testSetLocale_overridesSetLocales CtsContentTestCases:android.content.res.cts.ConfigTest.DisplayMetrics CtsContentTestCases:android.content.res.cts.ConfigTest.testAllEmptyConfigs CtsContentTestCases:android.content.res.cts.ConfigTest.testAllClassicConfigs CtsContentTestCases:android.content.res.cts.ConfigTest.testPrecedence CtsContentTestCases:android.content.res.cts.ConfigTest.testCombinations CtsContentTestCases:android.content.res.cts.ConfigTest.testAllEmptyConfigs CtsContentTestCases:android.content.res.cts.ConfigTest.testAllClassicConfigs CtsContentTestCases:android.content.res.cts.ConfigTest.testPrecedence		[('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/ConfigTest.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/res/cts/ConfigurationTest.java', 5), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 4), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityManagerGetConfigTests.java', 1)]	[('/android/content/res/cts/ConfigTest.java', 10), ('/android/content/res/cts/ConfigurationTest.java', 7), ('/android/app/cts/SystemFeaturesTest.java', 6), ('/android/server/wm/ActivityManagerGetConfigTests.java', 2)]	"[('([1:/android/content/res/cts/ConfigurationTest.java]:[Configuration.touchscreen]:[1]:method_text:[.densityDpi);         assertEquals(Configuration.COLOR_MODE_UNDEFINED, config.colorMode);     }     ])', 2), ('([2:/android/app/cts/SystemFeaturesTest.java]:[Configuration.touchscreen]:[2]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([3:/android/app/cts/SystemFeaturesTest.java]:[Configuration.touchscreen]:[3]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[TOUCHSCREEN_NOTOUCH]:[2]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/server/wm/ActivityManagerGetConfigTests.java]:[Configuration.touchscreen]:[1]:method_text:[""Expected features does not match"",                 featureNames, deviceConfig.features);     }     ])', 1), ('([1:/android/content/res/cts/ConfigurationTest.java]:[Configuration.touchscreen]:[1]:method_text:[ation.NAVIGATION_NONAV;         mConfig.orientation = Configuration.ORIENTATION_PORTRAIT;     }     ])', 1), ('([1:/android/content/res/cts/ConfigurationTest.java]:[Configuration.touchscreen]:[1]:method_text:[ assertEquals(config, readConf);         } finally {             parcel.recycle();         }     } }])', 1), ('([1:/android/content/res/cts/ConfigurationTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[ation.NAVIGATION_NONAV;         mConfig.orientation = Configuration.ORIENTATION_PORTRAIT;     }     ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[1]:method_text:[{             fail(""Should be able to find application info for this package"");         }     }     ])', 1), ('([2:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[2]:method_text:[, R.configVarying.bag,                 R.styleable.TestConfig, new String[]{""bag h670""});     }     ])', 1), ('([2:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[2]:method_text:[configVarying.bag,                 R.styleable.TestConfig, new String[]{""bag h670""});     }         ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[1]:method_text:[gVarying.bag,                 R.styleable.TestConfig, new String[]{""bag mcc111 mnc222""});     }     ])', 1), ('([3:/android/content/res/cts/ConfigTest.java]:[Configuration.touchscreen]:[3]:method_text:[nfigVarying.bag,                 R.styleable.TestConfig, new String[]{""bag dpad 63x57""});     }     ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[, R.configVarying.bag,                 R.styleable.TestConfig, new String[]{""bag h670""});     }     ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[configVarying.bag,                 R.styleable.TestConfig, new String[]{""bag h670""});     }         ])', 1), ('([1:/android/content/res/cts/ConfigTest.java]:[TOUCHSCREEN_NOTOUCH]:[1]:method_text:[gVarying.bag,                 R.styleable.TestConfig, new String[]{""bag mcc111 mnc222""});     }     ])', 1)]"					
169:533444) 7.2.4  . Touchscreen Input	7.2.4	C-3-2		[('android.app.cts.SystemFeaturesTest', 4)]		[('CtsAppTestCases', 4)]		7.2.4/C-3-2	"""C-3-2] MUST report only android.hardware.faketouch. """	07020400.670302	android.hardware.faketouch 7.2.4 C-3-2 7.2.4/C-3-2				[('android.hardware.faketouch', 4)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures		[('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 4)]	[('/android/app/cts/SystemFeaturesTest.java', 6)]	[('([1:/android/app/cts/SystemFeaturesTest.java]:[android.hardware.faketouch]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 2), ('([5:/android/app/cts/SystemFeaturesTest.java]:[android.hardware.faketouch]:[5]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 2)]					
172:544587) 7.2.6.1  . Button Mappings	7.2.6.1	C-2-1		[('android.view.cts.TooltipTest', 16), ('android.autofillservice.cts.AuthenticationTest', 14), ('android.view.inputmethod.cts.InputMethodServiceTest', 5), ('android.autofillservice.cts.LoginActivityTest', 5), ('android.server.wm.AnrTests', 4), ('android.server.wm.WindowInsetsAnimationControllerTests', 4), ('android.server.wm.PinnedStackTests', 4), ('android.view.cts.KeyEventInterceptTest', 4), ('com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest', 4), ('android.suspendapps.cts.DistractingPackageTest', 3), ('android.net.wifi.nl80211.cts.PnoNetworkTest', 3), ('android.net.wifi.cts.WifiManagerTest', 3), ('android.autofillservice.cts.inline.InlineAugmentedLoginActivityTest', 3), ('android.media.mediaparser.cts.MediaParserTest', 2), ('android.transition.cts.SlideBadEdgeTest', 2), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 2), ('android.widget.cts.SpinnerTest', 2), ('android.autofillservice.cts.VirtualContainerActivityTest', 2), ('android.server.wm.ToastWindowTest', 2), ('android.permission2.cts.PermissionPolicyTest', 2), ('android.app.cts.AlertDialogTest', 2), ('android.autofillservice.cts.SimpleSaveActivityTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.os.cts.StrictModeTest', 1), ('android.app.cts.AlertDialog_BuilderTest', 1), ('com.android.cts.devicepolicy.DeviceOwnerTest', 1), ('android.app.cts.ActivityManagerProcessStateTest', 1), ('android.widget.cts.ZoomControlsTest', 1), ('android.server.wm.KeyguardInputTests', 1), ('android.animation.cts.AnimatorSetTest', 1), ('com.android.cts.devicepolicy.ManagedProfileTest', 1), ('android.hdmicec.cts.playback.HdmiCecPowerStatusTest', 1), ('android.text.cts.AnnotationTest', 1), ('android.app.cts.ZenPolicyTest', 1), ('com.android.cts.devicepolicy.LimitAppIconHidingTest', 1), ('android.widget.cts.TextViewTest', 1), ('android.net.eap.cts.EapSessionConfigTest', 1), ('android.net.wifi.cts.WifiInfoTest', 1), ('android.provider.cts.media.MediaStoreUtils', 1), ('android.jdwptunnel.cts.JdwpTunnelTest', 1), ('android.provider.cts.media.MediaStore_Audio_AlbumsTest', 1), ('com.android.cts.managedprofile.CrossProfileUtils', 1), ('android.widget.cts.ActionMenuViewTest', 1), ('android.widget.cts.PopupWindowTest', 1), ('android.os.cts.HwBinderTest', 1), ('android.accessibilityservice.cts.AccessibilityTakeScreenshotTest', 1), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('android.media.tv.cts.TvInputInfoTest', 1)]	[('setUp', 11), ('getInstrumentation', 10), ('setup', 5), ('getContext', 5), ('getPackageName', 4), ('getEventName', 4), ('getDevice', 4), ('tearDown', 4), ('clickCloseAppOnAnrDialog', 3), ('getReturnBooleanValue', 3), ('Builder', 3), ('UnlockScreenRule', 2), ('getArguments', 2), ('requestFocus', 2), ('getWindow', 2), ('verifyLayoutInflaterContext', 2), ('getUiAutomation', 2), ('openEventStream', 2), ('getOnBackPressedCallCount', 2), ('onBackPressed', 2), ('getTargetContext', 2), ('getPackageManager', 2), ('getSsid', 2), ('getActivity', 2), ('getContentResolver', 2), ('separateLogs', 1), ('teardown', 1), ('close', 1), ('slowOnCreateWithKeyEventTriggersAnr', 1), ('slowUiThreadWithKeyEventTriggersAnr', 1), ('slowOnKeyEventHandleTriggersAnr', 1), ('getLayoutInflater', 1), ('getMainLooper', 1), ('getCurrentUserId', 1), ('canSerializeAndDeserialize', 1), ('PnoNetwork', 1), ('obtain', 1), ('getFrequenciesMhz', 1), ('cect_11_2_14_2_PowerStatusWhenOff', 1), ('getApiLevel', 1), ('getCurrentUser', 1), ('getBytes', 1), ('moveToHomeScreen', 1), ('virtualMachineManager', 1), ('attachingConnectors', 1), ('stream', 1), ('transport', 1), ('name', 1), ('findFirst', 1), ('defaultArguments', 1), ('trim', 1), ('getName', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('open', 1), ('IntentFilter', 1), ('createBuilderWithCommonParams', 1), ('getWifiConfiguration', 1), ('getBssid', 1), ('toString', 1)]	[('CtsAutoFillServiceTestCases', 26), ('CtsViewTestCases', 20), ('CtsWindowManagerDeviceTestCases', 15), ('CtsWifiTestCases', 8), ('CtsAppTestCases', 6), ('CtsWidgetTestCases', 6), ('CtsInputMethodTestCases', 5), ('CtsSuspendAppsTestCases', 3), ('CtsOsHostTestCases', 2), ('CtsMediaParserTestCases', 2), ('CtsTransitionTestCases', 2), ('CtsTelephonyTestCases', 2), ('CtsProviderTestCases', 2), ('CtsPermission2TestCases', 2), ('CtsAnimationTestCases', 1), ('CtsTextTestCases', 1), ('CtsIkeTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsTvTestCases', 1)]		7.2.6.1/C-2-1	"""C-2-1] MUST declare the feature flag android.hardware.gamepad Button HID Usage2 Android Button A1 0x09 0x0001 KEYCODE_BUTTON_A (96) B1 0x09 0x0002 KEYCODE_BUTTON_B (97) X1 0x09 0x0004 KEYCODE_BUTTON_X (99) Y1 0x09 0x0005 KEYCODE_BUTTON_Y (100) D-pad up1 D-pad down1 0x01 0x00393 AXIS_HAT_Y4 D-pad left1 D-pad right1 0x01 0x00393 AXIS_HAT_X4 Left shoulder button1 0x09 0x0007 KEYCODE_BUTTON_L1 (102) Right shoulder button1 0x09 0x0008 KEYCODE_BUTTON_R1 (103) Left stick click1 0x09 0x000E KEYCODE_BUTTON_THUMBL (106) Right stick click1 0x09 0x000F KEYCODE_BUTTON_THUMBR (107) Home1 0x0c 0x0223 KEYCODE_HOME (3) Back1 0x0c 0x0224 KEYCODE_BACK (4) 1 KeyEvent 2 The above HID usages must be declared within a Game pad CA (0x01 0x0005). 3 This usage must have a Logical Minimum of 0, a Logical Maximum of 7, a Physical Minimum of 0, a Physical Maximum of 315, Units in Degrees, and a Report Size of 4. The logical value is defined to be the clockwise rotation away from the vertical axis; for example, a logical value of 0 represents no rotation and the up button being pressed, while a logical value of 1 represents a rotation of 45 degrees and both the up and left keys being pressed. 4 MotionEvent Analog Controls1 HID Usage Android Button Left Trigger 0x02 0x00C5 AXIS_LTRIGGER Right Trigger 0x02 0x00C4 AXIS_RTRIGGER Left Joystick 0x01 0x0030 0x01 0x0031 AXIS_X AXIS_Y Right Joystick 0x01 0x0032 0x01 0x0035 AXIS_Z AXIS_RZ 1 MotionEvent <h4 id="""	07020601.670201	AXIS_Y AXIS_HAT_Y4 KEYCODE_BUTTON_X AXIS_LTRIGGER KEYCODE_BUTTON_Y KEYCODE_BUTTON_B 7.2.6.1/C-2-1 KEYCODE_BUTTON_THUMBL KEYCODE_BUTTON_R1 HID android.hardware.gamepad C-2-1 KEYCODE_BUTTON_THUMBR AXIS_HAT_X4 KEYCODE_HOME AXIS_Z KEYCODE_BACK 7.2.6.1 KEYCODE_BUTTON_L1 KEYCODE_BUTTON_A AXIS_RZ AXIS_RTRIGGER AXIS_X				[('HID', 95), ('KEYCODE_BACK', 13), ('KEYCODE_HOME', 5), ('C-2-1', 1), ('AXIS_Y', 1), ('AXIS_X', 1)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsOsHostTestCases:android.os.cts.StrictModeTest.testNonSdkApiUsage CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetNeutralButtonWithParamCharSequence CtsMediaParserTestCases:android.media.mediaparser.cts.MediaParserTest.testFlacWithId3 CtsMediaParserTestCases:android.media.mediaparser.cts.MediaParserTest.testMp3WithId3 None:com.android.cts.devicepolicy.DeviceOwnerTest.testNoHiddenActivityFoundTest CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testCycleFgAppAndAlert CtsWidgetTestCases:android.widget.cts.ZoomControlsTest.testShowAndHide CtsWindowManagerDeviceTestCases:android.server.wm.KeyguardInputTests.testReceiveKeysOnTopOfKeyguard CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testRequestHideSelf CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testRequestShowSelf CtsWindowManagerDeviceTestCases:android.server.wm.WindowInsetsAnimationControllerTests.testControl_immediately_hide CtsWindowManagerDeviceTestCases:android.server.wm.WindowInsetsAnimationControllerTests.testControl_transition_hide CtsWindowManagerDeviceTestCases:android.server.wm.WindowInsetsAnimationControllerTests.testControl_transition_hide_interpolator CtsWindowManagerDeviceTestCases:android.server.wm.WindowInsetsAnimationControllerTests.testImeControl_isntInterruptedByStartingInput CtsSuspendAppsTestCases:android.suspendapps.cts.DistractingPackageTest.isEmpty CtsSuspendAppsTestCases:android.suspendapps.cts.DistractingPackageTest.testShouldHideFromSuggestions CtsSuspendAppsTestCases:android.suspendapps.cts.DistractingPackageTest.testCannotRestrictWhenUninstallBlocked CtsAnimationTestCases:android.animation.cts.AnimatorSetTest.testManipulateChildOutsideOfSet CtsWifiTestCases:android.net.wifi.nl80211.cts.PnoNetworkTest.testGetters CtsWifiTestCases:android.net.wifi.nl80211.cts.PnoNetworkTest.isHidden CtsWifiTestCases:android.net.wifi.nl80211.cts.PnoNetworkTest.testEquals None:com.android.cts.devicepolicy.ManagedProfileTest.testChooserActivityLaunchedFromWorkProfileWithSelectedPersonalTab CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testRemovePipWithHiddenFullscreenOrFreeformStack CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testMovePipToBackWithHiddenFullscreenOrFreeformStack CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testEnterPipWithResumeWhilePausingActivityNoStop CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testPinnedStackWithDockedStack CtsTextTestCases:android.text.cts.AnnotationTest.testGetSpanTypeId CtsAppTestCases:android.app.cts.ZenPolicyTest.testDisallowAllVisualEffects CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthTwoFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthTwoFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthTwoFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthTwoFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthTwoFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthFilteringUsingRegex CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthFilteringUsingRegex CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthFilteringUsingRegex CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testDatasetAuthFilteringUsingRegex CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testFillResponseAuthBothFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testFillResponseAuthBothFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testFillResponseAuthBothFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testFillResponseAuthBothFields CtsAutoFillServiceTestCases:android.autofillservice.cts.AuthenticationTest.testFillResponseFiltering None:com.android.cts.devicepolicy.LimitAppIconHidingTest.uninstallTestApps CtsTelephonyTestCases:android.telephony.euicc.cts.DownloadableSubscriptionTest.testGetConfirmationCode CtsTelephonyTestCases:android.telephony.euicc.cts.DownloadableSubscriptionTest.testWriteToParcel CtsWidgetTestCases:android.widget.cts.TextViewTest.testUndo_imeEmptyBatch CtsWidgetTestCases:android.widget.cts.SpinnerTest.testDropDownBackgroundDropdownMode CtsWidgetTestCases:android.widget.cts.SpinnerTest.testDropDownBackgroundDialogMode CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testMaxNumberOfNetworkSuggestionsPerApp CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testSetGetSoftApConfigurationAndSoftApCapabilityCallback CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testStartSubscriptionProvisioning CtsWifiTestCases:android.net.wifi.cts.WifiInfoTest.testWifiInfoProperties CtsProviderTestCases:android.provider.cts.media.MediaStoreUtils.testStub None:android.jdwptunnel.cts.JdwpTunnelTest.startupTest CtsProviderTestCases:android.provider.cts.media.MediaStore_Audio_AlbumsTest.testAlbumArt CtsViewTestCases:android.view.cts.KeyEventInterceptTest.testKeyCodeHome CtsViewTestCases:android.view.cts.KeyEventInterceptTest.testKeyCodeBackShortcutRightMeta CtsAutoFillServiceTestCases:android.autofillservice.cts.VirtualContainerActivityTest.testAutofillCallbacks CtsAutoFillServiceTestCases:android.autofillservice.cts.VirtualContainerActivityTest.testDatasetFiltering None:com.android.cts.managedprofile.CrossProfileUtils.testDisableAllBrowsers CtsWidgetTestCases:android.widget.cts.ActionMenuViewTest.testMenuOverflowShowHide CtsViewTestCases:android.view.cts.TooltipTest.testTooltipHidesOnActivityFocusChange CtsViewTestCases:android.view.cts.TooltipTest.testTooltipHidesOnWindowFocusChange CtsViewTestCases:android.view.cts.TooltipTest.testLongClickTooltipHidesAfterUp CtsViewTestCases:android.view.cts.TooltipTest.testLongClickTooltipHidesOnClick CtsViewTestCases:android.view.cts.TooltipTest.testLongClickTooltipHidesOnClickElsewhere CtsViewTestCases:android.view.cts.TooltipTest.testLongClickTooltipHidesOnKey CtsViewTestCases:android.view.cts.TooltipTest.testLongKeyPressTooltipHidesAfterUp CtsViewTestCases:android.view.cts.TooltipTest.testLongKeyPressTooltipHidesOnClick CtsViewTestCases:android.view.cts.TooltipTest.testLongKeyPressTooltipHidesOnClickElsewhere CtsViewTestCases:android.view.cts.TooltipTest.testLongKeyPressTooltipHidesOnKey CtsViewTestCases:android.view.cts.TooltipTest.testMouseHoverTooltipHidesOnExit CtsViewTestCases:android.view.cts.TooltipTest.testMouseHoverTooltipHidesOnClick CtsViewTestCases:android.view.cts.TooltipTest.testMouseHoverTooltipHidesOnClickOnElsewhere CtsViewTestCases:android.view.cts.TooltipTest.testMouseHoverTooltipHidesOnKey CtsViewTestCases:android.view.cts.TooltipTest.testMouseHoverTooltipHidesOnTimeout CtsViewTestCases:android.view.cts.TooltipTest.testMouseHoverTooltipHidesOnShortTimeout CtsWidgetTestCases:android.widget.cts.PopupWindowTest.testAccessSoftInputMode CtsWindowManagerDeviceTestCases:android.server.wm.ToastWindowTest.testToastWindowTokenIsRemovedAfterToastIsHidden CtsAutoFillServiceTestCases:android.autofillservice.cts.inline.InlineAugmentedLoginActivityTest.testAugmentedAutoFill_twoDatasetThenFilledSecond CtsAutoFillServiceTestCases:android.autofillservice.cts.inline.InlineAugmentedLoginActivityTest.testAugmentedAutoFill_selectDatasetThenHideInlineSuggestion CtsAutoFillServiceTestCases:android.autofillservice.cts.inline.InlineAugmentedLoginActivityTest.testAugmentedAutoFill_startTypingThenHideInlineSuggestion CtsAutoFillServiceTestCases:android.autofillservice.cts.LoginActivityTest.testDatasetPickerPosition CtsAutoFillServiceTestCases:android.autofillservice.cts.LoginActivityTest.testAutofillTapOutside CtsAutoFillServiceTestCases:android.autofillservice.cts.LoginActivityTest.testAutofillCallbacks CtsAutoFillServiceTestCases:android.autofillservice.cts.LoginActivityTest.testAutoFillOneDatasetAndSaveHidingOverlays CtsAutoFillServiceTestCases:android.autofillservice.cts.LoginActivityTest.testCommitMultipleTimes CtsPermission2TestCases:android.permission2.cts.PermissionPolicyTest.platformPermissionPolicyIsUnaltered CtsAppTestCases:android.app.cts.AlertDialogTest.testAlertDialogCancelable CtsAppTestCases:android.app.cts.AlertDialogTest.testAlertDialogNotCancelable CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testTapHomeWhileDatasetPickerUiIsShowing CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testTapUrlSpanOnSuccinctDescription_tapBackWithoutFinish None:com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest.isNotNull None:com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest.testSetApplicationHidden_systemPackage None:com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest.testSetApplicationHidden_nonSystemPackage None:com.android.cts.deviceandprofileowner.ApplicationHiddenParentTest.testSetApplicationHidden_nonSystemPackageStackTrace CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityTakeScreenshotTest.testTakeScreenshotWithSecureWindow_GetScreenshotAndVerifyBitmap CtsWifiTestCases:android.net.wifi.cts.WifiNetworkSuggestionTest.isEnhancedOpen CtsTvTestCases:android.media.tv.cts.TvInputInfoTest.testIsHidden		[('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/TooltipTest.java', 16), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/AuthenticationTest.java', 14), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodServiceTest.java', 5), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/LoginActivityTest.java', 5), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AnrTests.java', 4), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationControllerTests.java', 4), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PinnedStackTests.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyEventInterceptTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java', 4), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DistractingPackageTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/nl80211/cts/PnoNetworkTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineAugmentedLoginActivityTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/transition/src/android/transition/cts/SlideBadEdgeTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/SpinnerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/VirtualContainerActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ToastWindowTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionPolicyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlertDialogTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/SimpleSaveActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/StrictModeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ZoomControlsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardInputTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/animation/src/android/animation/cts/AnimatorSetTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/playback/HdmiCecPowerStatusTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/AnnotationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ZenPolicyTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/LimitAppIconHidingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TextViewTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/eap/cts/EapSessionConfigTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStoreUtils.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/jdwptunnel/src/android/jdwptunnel/cts/JdwpTunnelTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileUtils.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ActionMenuViewTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/PopupWindowTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityTakeScreenshotTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/cts/TvInputInfoTest.java', 1)]	[('/android/view/cts/TooltipTest.java', 17), ('/android/autofillservice/cts/AuthenticationTest.java', 15), ('/android/view/inputmethod/cts/InputMethodServiceTest.java', 7), ('/android/server/wm/AnrTests.java', 6), ('/android/view/cts/KeyEventInterceptTest.java', 6), ('/android/autofillservice/cts/LoginActivityTest.java', 6), ('/android/server/wm/WindowInsetsAnimationControllerTests.java', 5), ('/android/server/wm/PinnedStackTests.java', 5), ('/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java', 5), ('/android/transition/cts/SlideBadEdgeTest.java', 4), ('/android/suspendapps/cts/DistractingPackageTest.java', 4), ('/android/net/wifi/nl80211/cts/PnoNetworkTest.java', 4), ('/android/net/wifi/cts/WifiManagerTest.java', 4), ('/android/autofillservice/cts/inline/InlineAugmentedLoginActivityTest.java', 4), ('/android/media/mediaparser/cts/MediaParserTest.java', 3), ('/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 3), ('/android/widget/cts/SpinnerTest.java', 3), ('/android/autofillservice/cts/VirtualContainerActivityTest.java', 3), ('/android/server/wm/ToastWindowTest.java', 3), ('/android/permission2/cts/PermissionPolicyTest.java', 3), ('/android/app/cts/AlertDialogTest.java', 3), ('/android/autofillservice/cts/SimpleSaveActivityTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/os/cts/StrictModeTest.java', 2), ('/android/app/cts/AlertDialog_BuilderTest.java', 2), ('/com/android/cts/devicepolicy/DeviceOwnerTest.java', 2), ('/android/app/cts/ActivityManagerProcessStateTest.java', 2), ('/android/widget/cts/ZoomControlsTest.java', 2), ('/android/server/wm/KeyguardInputTests.java', 2), ('/android/animation/cts/AnimatorSetTest.java', 2), ('/com/android/cts/devicepolicy/ManagedProfileTest.java', 2), ('/android/hdmicec/cts/playback/HdmiCecPowerStatusTest.java', 2), ('/android/text/cts/AnnotationTest.java', 2), ('/android/app/cts/ZenPolicyTest.java', 2), ('/com/android/cts/devicepolicy/LimitAppIconHidingTest.java', 2), ('/android/widget/cts/TextViewTest.java', 2), ('/android/net/eap/cts/EapSessionConfigTest.java', 2), ('/android/net/wifi/cts/WifiInfoTest.java', 2), ('/android/provider/cts/media/MediaStoreUtils.java', 2), ('/android/jdwptunnel/cts/JdwpTunnelTest.java', 2), ('/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java', 2), ('/com/android/cts/managedprofile/CrossProfileUtils.java', 2), ('/android/widget/cts/ActionMenuViewTest.java', 2), ('/android/widget/cts/PopupWindowTest.java', 2), ('/android/os/cts/HwBinderTest.java', 2), ('/android/accessibilityservice/cts/AccessibilityTakeScreenshotTest.java', 2), ('/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 2), ('/android/media/tv/cts/TvInputInfoTest.java', 2)]	"[('([1:/android/server/wm/AnrTests.java]:[KEYCODE_BACK]:[1]:method_text:[eAppOnAnrDialog();         assertEventLogsContainsAnr(UnresponsiveActivity.PROCESS_NAME);     }     ])', 3), ('([1:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[1]:method_text:[.assertNoDatasets();          // Check the results.         mActivity.assertAutoFilled();     }     ])', 3), ('([1:/android/view/cts/TooltipTest.java]:[HID]:[1]:method_text:[;          injectShortClick(mTooltipView);         assertFalse(hasTooltip(mTooltipView));     }     ])', 3), ('([1:/android/view/cts/TooltipTest.java]:[HID]:[1]:method_text:[         injectShortClick(mNoTooltipView);         assertFalse(hasTooltip(mTooltipView));     }     ])', 3), ('([1:/android/server/wm/WindowInsetsAnimationControllerTests.java]:[HID]:[1]:method_text:[awaitAndAssert(FINISHED);         mListener.assertWasNotCalled(CANCELLED);     }      @Presubmit    ])', 2), ('([3:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[3]:method_text:[.assertNoDatasets();          // Check the results.         mActivity.assertAutoFilled();     }     ])', 2), ('([3:/android/view/cts/TooltipTest.java]:[HID]:[3]:method_text:[uration.getLongPressTooltipHideTimeout());         assertFalse(hasTooltip(mTooltipView));     }     ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-2-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[HID]:[1]:method_text:[VmPolicy(oldVmPolicy);             StrictMode.setThreadPolicy(oldThreadPolicy);         }     }     ])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[KEYCODE_BACK]:[1]:method_text:[wing                     return showing;                 }             }         }.run();     }     ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[HID]:[1]:method_text:[lacWithId3() throws IOException {         testAssetExtraction(""flac/bear_with_id3.flac"");     }     ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[HID]:[1]:method_text:[hId3() throws IOException {         testAssetExtraction(""mp3/bear-id3.mp3"");     }      // WAV.     ])', 1), ('([6:/android/server/wm/AnrTests.java]:[HID]:[6]:method_text:[SIVE_ACTIVITY.getPackageName());         stopTestPackage(HOST_ACTIVITY.getPackageName());     }     ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[HID]:[2]:method_text:[         getDevice().uninstallPackage(BaseLauncherAppsTest.LAUNCHER_TESTS_APK);         }     }     ])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[HID]:[1]:method_text:[cher.finish();             uid2Watcher.finish();             uid3Watcher.finish();         }     } }])', 1), ('([2:/android/widget/cts/ZoomControlsTest.java]:[HID]:[2]:method_text:[ow();         assertEquals(View.VISIBLE, zoomControls.getVisibility());     }      @UiThreadTest    ])', 1), ('([1:/android/server/wm/KeyguardInputTests.java]:[KEYCODE_BACK]:[1]:method_text:[sertNoMoreEvents() {         KeyEvent event = mActivity.popKey();         assertNull(event);     } }])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[HID]:[1]:method_text:[ctivity.getWindow().setSoftInputMode(windowFlags);             return layout;         });     }     ])', 1), ('([3:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[HID]:[3]:method_text:[                 View.GONE, TIMEOUT);              expectImeInvisible(TIMEOUT);         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[HID]:[1]:method_text:[ Test compatibility requirements of {@link InputMethodService#sendDownUpKeyEvents(int)}.      */    ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[KEYCODE_BACK]:[1]:method_text:[ctivity.getWindow().setSoftInputMode(windowFlags);             return layout;         });     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[KEYCODE_BACK]:[1]:method_text:[) {                 // This is fine.  We actually expect timeout.             }         }     }     ])', 1), ('([1:/android/server/wm/WindowInsetsAnimationControllerTests.java]:[HID]:[1]:method_text:[     mListener.awaitAndAssert(FINISHED);         mListener.assertWasNotCalled(CANCELLED);     }     ])', 1), ('([3:/android/server/wm/WindowInsetsAnimationControllerTests.java]:[HID]:[3]:method_text:[(mCount - LIMIT) + "" errors skipped.""));             }             super.verify();         }     } }])', 1), ('([2:/android/transition/cts/SlideBadEdgeTest.java]:[AXIS_Y]:[2]:method_text:[,             { Gravity.VERTICAL_GRAVITY_MASK, ""VERTICAL_GRAVITY_MASK"" },     };      @SmallTest    ])', 1), ('([2:/android/transition/cts/SlideBadEdgeTest.java]:[AXIS_X]:[2]:method_text:[,             { Gravity.VERTICAL_GRAVITY_MASK, ""VERTICAL_GRAVITY_MASK"" },     };      @SmallTest    ])', 1), ('([2:/android/suspendapps/cts/DistractingPackageTest.java]:[HID]:[2]:method_text:[           failed) + ""; expected to fail: "" + Arrays.toString(expectedToFail));         }     }     ])', 1), ('([6:/android/suspendapps/cts/DistractingPackageTest.java]:[HID]:[6]:method_text:[uggestions(TEST_APP_PACKAGE_NAME,                         UserHandle.of(currentUserId)));     }     ])', 1), ('([2:/android/suspendapps/cts/DistractingPackageTest.java]:[HID]:[2]:method_text:[ALL_TEST_PACKAGES, RESTRICTION_HIDE_FROM_SUGGESTIONS,                 ALL_TEST_PACKAGES);     }     ])', 1), (""([7:/android/animation/cts/AnimatorSetTest.java]:[HID]:[7]:method_text:[     *      * This test verifies that custom ValueAnimators will be start()'ed in a set.      */    ])"", 1), ('([2:/android/net/wifi/nl80211/cts/PnoNetworkTest.java]:[HID]:[2]:method_text:[nciesMhz()).isEqualTo(TEST_FREQUENCIES);         assertThat(network.isHidden()).isTrue();     }     ])', 1), ('([2:/android/net/wifi/nl80211/cts/PnoNetworkTest.java]:[HID]:[2]:method_text:[twork);         assertThat(networkDeserialized.hashCode()).isEqualTo(network.hashCode());     }     ])', 1), ('([2:/android/net/wifi/nl80211/cts/PnoNetworkTest.java]:[HID]:[2]:method_text:[3 });         network.setHidden(false);          assertThat(network2).isNotEqualTo(network);     } }])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[KEYCODE_HOME]:[1]:method_text:[ return hasDeviceFeature(FEATURE_TELEPHONY) && hasDeviceFeature(FEATURE_CONNECTION_SERVICE);     } }])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[HID]:[3]:method_text:[P_ACTIVITY,                 WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_HOME, windowingMode);     }     ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[HID]:[3]:method_text:[              PIP_ACTIVITY, WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_HOME, windowingMode);     }     ])', 1), ('([1:/android/server/wm/PinnedStackTests.java]:[HID]:[1]:method_text:[        launchActivity(RESUME_WHILE_PAUSING_ACTIVITY);         assertPinnedStackExists();     }     ])', 1), ('([1:/android/server/wm/PinnedStackTests.java]:[HID]:[1]:method_text:[G_ACTIVITY, true);             mWmState.assertVisibility(TEST_ACTIVITY, false);         }     }     ])', 1), ('([1:/android/hdmicec/cts/playback/HdmiCecPowerStatusTest.java]:[KEYCODE_HOME]:[1]:method_text:[device */             device.executeShellCommand(""input keyevent KEYCODE_WAKEUP"");         }     } }])', 1), (""([1:/android/text/cts/AnnotationTest.java]:[HID]:[1]:method_text:[an assert the return value isn't 0.         assertTrue(mAnnotation.getSpanTypeId() != 0);     }     ])"", 1), ('([1:/android/app/cts/ZenPolicyTest.java]:[HID]:[1]:method_text:[isualEffectsUnset(ZenPolicy policy) {         assertAllVisualEffectsUnsetExcept(policy, -1);     } }])', 1), ('([6:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[6]:method_text:[.assertNoDatasets();          // Check the results.         mActivity.assertAutoFilled();     }     ])', 1), ('([2:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[2]:method_text:[String(""clientStateKey1"");         assertThat(extraValue).isEqualTo(""clientStateValue1"");     }     ])', 1), ('([4:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[4]:method_text:[.assertNoDatasets();          // Check the results.         mActivity.assertAutoFilled();     }     ])', 1), ('([2:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[2]:method_text:[.assertNoDatasets();          // Check the results.         mActivity.assertAutoFilled();     }     ])', 1), ('([7:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[7]:method_text:[alue = data.getString(""numbers"");         assertThat(extraValue).isEqualTo(""4815162342"");     }     ])', 1), ('([3:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[3]:method_text:[alue = data.getString(""numbers"");         assertThat(extraValue).isEqualTo(""4815162342"");     }     ])', 1), ('([1:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[1]:method_text:[ore finishing the Auth UI.         latch.countDown();          mUiBot.assertNoDatasets();     }     ])', 1), ('([1:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[1]:method_text:[veRequest.structure, ID_PASSWORD);         assertTextAndValue(passwordNode, ""malkovich"");     }     ])', 1), ('([4:/android/autofillservice/cts/AuthenticationTest.java]:[HID]:[4]:method_text:[raValue = data.getString(""numbers"");         assertThat(extraValue).isEqualTo(""4815162342"");     } }])', 1), ('([2:/com/android/cts/devicepolicy/LimitAppIconHidingTest.java]:[HID]:[2]:method_text:[ITY_APK);         getDevice().uninstallPackage(LAUNCHER_TESTS_HAS_LAUNCHER_ACTIVITY_APK);     }     ])', 1), ('([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[HID]:[1]:method_text:[adableSubscription);         assertNull(mDownloadableSubscription.getConfirmationCode());     }     ])', 1), (""([1:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[HID]:[1]:method_text:[r         // DownloadableSubscription#accessRules on Android P so we can't verify them here.     } }])"", 1), ('([1:/android/widget/cts/TextViewTest.java]:[HID]:[1]:method_text:[uItem(android.R.id.redo);         assertEquals(""flower"", mTextView.getText().toString());     }     ])', 1), ('([1:/android/widget/cts/SpinnerTest.java]:[KEYCODE_BACK]:[1]:method_text:[, dropDownBackground.getBounds().height(),                 false, Color.YELLOW, 1, true);     }     ])', 1), ('([1:/android/widget/cts/SpinnerTest.java]:[KEYCODE_BACK]:[1]:method_text:[erruptedException e) {             fail(""unexpected InterruptedException : ""+ e);         }      } }])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[HID]:[2]:method_text:[tap capability callback to test different      * configuration.      * @throws Exception      */    ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[HID]:[1]:method_text:[ Verify that startTetheredHotspot with specific channel config.      * @throws Exception      */    ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[HID]:[1]:method_text:[**      * Tests {@link WifiManager#setTdlsEnabled(InetAddress, boolean)} does not crash.      */    ])', 1), ('([1:/android/net/eap/cts/EapSessionConfigTest.java]:[HID]:[1]:method_text:[APV2_USERNAME = ""username"";     private static final String EAP_MSCHAPV2_PASSWORD = ""password"";     ])', 1), ('([1:/android/net/wifi/cts/WifiInfoTest.java]:[HID]:[1]:method_text:[ that was set, and that      * calling build multiple times returns different instances.      */    ])', 1), ('([5:/android/provider/cts/media/MediaStoreUtils.java]:[HID]:[5]:method_text:[least we can inform people that no             // progress is being actively made.         }     } }])', 1), ('([1:/android/jdwptunnel/cts/JdwpTunnelTest.java]:[KEYCODE_HOME]:[1]:method_text:[t on the onCreate function.      *      * TODO: We should expand this to more functions.      */    ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java]:[HID]:[1]:method_text:[xception expected) {             }          } finally {             path.delete();         }     } }])', 1), ('([3:/android/view/cts/KeyEventInterceptTest.java]:[KEYCODE_HOME]:[3]:method_text:[y = mActivityRule.getActivity();         PollingCheck.waitFor(mActivity::hasWindowFocus);     }     ])', 1), ('([1:/android/view/cts/KeyEventInterceptTest.java]:[KEYCODE_HOME]:[1]:method_text:[     public void testKeyCodeHome() {         testKey(KeyEvent.KEYCODE_HOME);     }      ])', 1), ('([2:/android/view/cts/KeyEventInterceptTest.java]:[KEYCODE_BACK]:[2]:method_text:[y = mActivityRule.getActivity();         PollingCheck.waitFor(mActivity::hasWindowFocus);     }     ])', 1), ('([2:/android/view/cts/KeyEventInterceptTest.java]:[KEYCODE_BACK]:[2]:method_text:[tEquals(keyCode, keyEvent.getKeyCode());         assertEquals(action, keyEvent.getAction());     } }])', 1), ('([1:/android/autofillservice/cts/VirtualContainerActivityTest.java]:[HID]:[1]:method_text:[         callback.assertUiShownEvent(mActivity.mCustomView, mActivity.mPassword.text.id);     }     ])', 1), ('([1:/android/autofillservice/cts/VirtualContainerActivityTest.java]:[HID]:[1]:method_text:[nCompatMode() {         assumeTrue(""test not applicable when on compat mode"", !mCompatMode);     } }])', 1), ('([2:/com/android/cts/managedprofile/CrossProfileUtils.java]:[HID]:[2]:method_text:[ApplicationHidden(ADMIN_RECEIVER_COMPONENT, ri.activityInfo.packageName, true);         }     }     ])', 1), ('([3:/android/widget/cts/ActionMenuViewTest.java]:[HID]:[3]:method_text:[enuView::hideOverflowMenu);         assertFalse(mActionMenuView.isOverflowMenuShowing());     }     ])', 1), ('([1:/android/view/cts/TooltipTest.java]:[HID]:[1]:method_text:[WindowFocus());         assertFalse(hasTooltip(mTooltipView));         activity.finish();     }     ])', 1), ('([1:/android/view/cts/TooltipTest.java]:[HID]:[1]:method_text:[ssertFalse(hasTooltip(mTooltipView));     }      // Tests for tooltips triggered by long click.     ])', 1), ('([1:/android/view/cts/TooltipTest.java]:[HID]:[1]:method_text:[tFalse(hasTooltip(mTooltipView));     }      // Tests for tooltips triggered by long key press.     ])', 1), ('([1:/android/view/cts/TooltipTest.java]:[HID]:[1]:method_text:[sertFalse(hasTooltip(mTooltipView));     }      // Tests for tooltips triggered by mouse hover.     ])', 1), ('([2:/android/view/cts/TooltipTest.java]:[HID]:[2]:method_text:[.         injectHoverMove(mNoTooltipView);         assertFalse(hasTooltip(mTooltipView));     }     ])', 1), ('([1:/android/view/cts/TooltipTest.java]:[HID]:[1]:method_text:[;          injectArbitraryShortKeyPress();         assertFalse(hasTooltip(mTooltipView));     }     ])', 1), ('([2:/android/view/cts/TooltipTest.java]:[HID]:[2]:method_text:[nfiguration.getHoverTooltipHideTimeout());         assertFalse(hasTooltip(mTooltipView));     }     ])', 1), ('([2:/android/view/cts/TooltipTest.java]:[HID]:[2]:method_text:[ration.getHoverTooltipHideShortTimeout());         assertFalse(hasTooltip(mTooltipView));     }     ])', 1), ('([2:/android/widget/cts/PopupWindowTest.java]:[HID]:[2]:method_text:[r.LayoutParams.SOFT_INPUT_STATE_HIDDEN,                 mPopupWindow.getSoftInputMode());     }     ])', 1), ('([3:/android/os/cts/HwBinderTest.java]:[HID]:[3]:method_text:[fset), 0.0);             assertEquals(2.0, blob.getDouble(offset + 8), 0.0);         }),     };     ])', 1), ('([8:/android/server/wm/ToastWindowTest.java]:[HID]:[8]:method_text:[(), SETTING_HIDDEN_API_POLICY,                     mPreviousHiddenApiPolicy);         });     }     ])', 1), ('([2:/android/server/wm/ToastWindowTest.java]:[HID]:[2]:method_text:[ate(TOAST_WINDOW_TITLE).isEmpty(),                 ""Toast token wasn\'t removed on time"");     }     ])', 1), ('([1:/android/autofillservice/cts/inline/InlineAugmentedLoginActivityTest.java]:[HID]:[1]:method_text:[);         mUiBot.assertNoDatasetsEver();         callback.assertUiHiddenEvent(username);     }     ])', 1), ('([1:/android/autofillservice/cts/inline/InlineAugmentedLoginActivityTest.java]:[HID]:[1]:method_text:[.selectDataset(""dude"");         mUiBot.waitForIdle();          mUiBot.assertNoDatasets();     }     ])', 1), ('([1:/android/autofillservice/cts/inline/InlineAugmentedLoginActivityTest.java]:[HID]:[1]:method_text:[         // Expect the inline suggestion to disappear.         mUiBot.assertNoDatasets();     }     ])', 1), ('([3:/android/autofillservice/cts/LoginActivityTest.java]:[HID]:[3]:method_text:[daries1);          // Final sanity check         callback.assertNumberUnhandledEvents(0);     }     ])', 1), ('([2:/android/autofillservice/cts/LoginActivityTest.java]:[HID]:[2]:method_text:[()));         callback.assertUiHiddenEvent(username);          mUiBot.assertNoDatasets();     }     ])', 1), ('([1:/android/autofillservice/cts/LoginActivityTest.java]:[HID]:[1]:method_text:[Dataset(""The Dude"");          // Check the results.         mActivity.assertAutoFilled();     }     ])', 1), ('([2:/android/autofillservice/cts/LoginActivityTest.java]:[HID]:[2]:method_text:[ } catch (Exception e) {                 mSafeCleanerRule.add(e);             }         }     }     ])', 1), ('([1:/android/autofillservice/cts/LoginActivityTest.java]:[HID]:[1]:method_text:[) {                 throw new Throwable(""Error on step "" + i, t);             }         }     }     ])', 1), ('([3:/android/permission2/cts/PermissionPolicyTest.java]:[HID]:[3]:method_text:[Context sContext =             InstrumentationRegistry.getInstrumentation().getTargetContext();     ])', 1), ('([2:/android/permission2/cts/PermissionPolicyTest.java]:[HID]:[2]:method_text:[           this.flags = flags;             this.protectionLevel = protectionLevel;         }     } }])', 1), ('([1:/android/app/cts/AlertDialogTest.java]:[KEYCODE_BACK]:[1]:method_text:[ync(KeyEvent.KEYCODE_BACK);         PollingCheck.waitFor(() -> mActivity.onCancelCalled);     }     ])', 1), ('([1:/android/app/cts/AlertDialogTest.java]:[KEYCODE_BACK]:[1]:method_text:[.sendKeyDownUpSync(KeyEvent.KEYCODE_BACK);         assertFalse(mActivity.onCancelCalled);     }     ])', 1), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[HID]:[1]:method_text:[UiBot.selectDataset(datasetPicker, ""YO2"");         autofillExpecation.assertAutoFilled();     }     ])', 1), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[HID]:[1]:method_text:[     /* start= */ 8,  /* end= */ 15, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);         return ss;     } }])', 1), ('([4:/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java]:[HID]:[4]:method_text:[IVER_COMPONENT,                 SYSTEM_PACKAGE_TO_HIDE, false);         super.tearDown();     }     ])', 1), ('([12:/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java]:[HID]:[12]:method_text:[       assertThat(mPackageManager.getPackageInfo(SYSTEM_PACKAGE_TO_HIDE, 0)).isNotNull();     }     ])', 1), ('([5:/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java]:[HID]:[5]:method_text:[IN_RECEIVER_COMPONENT,                     NON_SYSTEM_NON_INSTALLED_PACKAGE);         });     }     ])', 1), ('([3:/com/android/cts/deviceandprofileowner/ApplicationHiddenParentTest.java]:[HID]:[3]:method_text:[      assertThat(stackTrace1[i].toString()).isEqualTo(stackTrace2[i].toString());         }     }  }])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityTakeScreenshotTest.java]:[HID]:[2]:method_text:[tmap = Bitmap.wrapHardwareBuffer(hardwareBuffer, colorSpace);         assertNotNull(bitmap);     } }])', 1), ('([2:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[HID]:[2]:method_text:[   }      /**      * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.      */    ])', 1), ('([2:/android/media/tv/cts/TvInputInfoTest.java]:[HID]:[2]:method_text:[)) {             return;         }         assertFalse(mStubInfo.isHidden(getContext()));     }     ])', 1)]"					
174:551285) 7.3  . Sensors	7.3	C-1-6		[('android.hardware.cts.SensorSupportTest', 14), ('android.view.inputmethod.cts.InputMethodServiceTest', 2), ('android.view.inputmethod.cts.InputMethodStartInputLifecycleTest', 2), ('android.media.cts.AudioRecordTest', 2), ('android.hardware.cts.SensorTest', 2), ('android.location.cts.gnss.GnssPseudorangeVerificationTest', 2), ('android.telephony.cts.SmsManagerTest', 2), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 2), ('android.server.wm.KeyguardLockedTests', 1), ('android.print.cts.PrintAttributesTest', 1), ('android.print.cts.PrinterCapabilitiesTest', 1), ('android.view.inputmethod.cts.InputConnectionBlockingMethodTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.database.cts.CursorWindowTest', 1), ('android.server.wm.ActivityViewTest', 1), ('android.server.wm.MultiDisplaySystemDecorationTests', 1), ('android.net.cts.DnsTest', 1), ('android.print.cts.InterfaceForAppsTest', 1), ('android.hardware.camera2.cts.CaptureResultTest', 1), ('android.location.cts.fine.GnssAntennaInfoTest', 1), ('android.hardware.cts.helpers.sensorverification.InitialValueVerificationTest', 1), ('android.inputmethodservice.cts.devicetest.MultiUserDeviceTest', 1), ('android.view.inputmethod.cts.FocusHandlingTest', 1), ('android.view.inputmethod.cts.ImeInsetsVisibilityTest', 1), ('android.hardware.camera2.cts.DngCreatorTest', 1), ('android.location.cts.coarse.LocationManagerCoarseTest', 1), ('android.print.cts.PrintJobTest', 1), ('android.server.wm.WindowInsetsControllerTests', 1), ('android.hardware.cts.SensorDirectReportTest', 1), ('android.hardware.cts.GeomagneticFieldTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.webkit.cts.GeolocationTest', 1), ('android.view.inputmethod.cts.KeyboardVisibilityControlTest', 1), ('android.telephony.cts.CellInfoTest', 1), ('android.location.cts.gnss.GnssTtffTests', 1), ('android.view.inputmethod.cts.PackageVisibilityTest', 1), ('android.hardware.consumerir.cts.ConsumerIrTest', 1)]	[('getContext', 7), ('setUp', 6), ('size', 4), ('getDefaults', 4), ('build', 3), ('UnlockScreenRule', 3), ('getMock', 2), ('getSession', 2), ('toString', 2), ('getMediaSizes', 2), ('getResolutions', 2), ('hasWindowFocus', 2), ('getPackageManager', 2), ('tearDown', 2), ('initiate_getCurrentPosition', 2), ('Builder', 1), ('getPrinters', 1), ('sanePrinterCapabilityInfos', 1), ('getService', 1), ('getCapabilities', 1), ('getMediaSize', 1), ('getResolution', 1), ('getColorModes', 1), ('getColorMode', 1), ('getDuplexModes', 1), ('getDuplexMode', 1), ('getMinMargins', 1), ('changedPrintJobInfo', 1), ('requestFocus', 1), ('get', 1), ('getViewTreeObserver', 1), ('getResources', 1), ('getConfiguration', 1), ('advancedOption', 1), ('gotLocation', 1), ('errorDenied', 1), ('errorUnavailable', 1), ('errorTimeout', 1), ('getValidTimestamp', 1), ('elapsedRealtimeNanos', 1), ('getInvalidTimestamp', 1)]	[('CtsSensorTestCases', 21), ('CtsInputMethodTestCases', 9), ('CtsWindowManagerDeviceTestCases', 4), ('CtsPrintTestCases', 4), ('CtsLocationGnssTestCases', 3), ('CtsTelephonyTestCases', 3), ('CtsMediaTestCases', 2), ('CtsCameraTestCases', 2), ('CtsHardwareTestCases', 2), ('CtsOpenGLTestCases', 1), ('CtsDatabaseTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsLocationCoarseTestCases', 1), ('CtsWebkitTestCases', 1)]		7.3/C-1-6	"""C-1-6] MUST report the event time in nanoseconds as defined in the Android SDK documentation, representing the time the event happened and synchronized with the SystemClock.elapsedRealtimeNano() clock.  | C-1-6] MUST set a non-zero resolution for all sensors, and report the value via the Sensor.getResolution() API method. Some sensor types are composite, meaning they can be derived from data provided by one or more other sensors. (Examples include the orientation sensor and the linear acceleration sensor.) Device implementations: SHOULD implement these sensor types, when they include the prerequisite physical sensors as described in sensor types. If device implementations include a composite sensor, they: """	07030000.670106	7.3/C-1-6 elapsedRealtimeNano() 7.3 getResolution() Sensor.getResolution C-1-6 SystemClock.elapsedRealtimeNano				[('SystemClock.elapsedRealtimeNano', 27), ('7.3', 23), ('getResolution()', 5), ('C-1-6', 1), ('Sensor.getResolution', 1)]		CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testSendDownUpKeyEvents CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testOnUpdateCursorAnchorInfo CtsWindowManagerDeviceTestCases:android.server.wm.KeyguardLockedTests.testImeShowsAfterLockScreenOnEditorTap CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodStartInputLifecycleTest.testInputConnectionStateWhenScreenStateChanges CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodStartInputLifecycleTest.testNoStartNewInputWhileOtherProcessHasWindowFocus CtsPrintTestCases:android.print.cts.PrintAttributesTest.isEmpty CtsPrintTestCases:android.print.cts.PrinterCapabilitiesTest.onPrinterDiscoverySessionCreateCalled CtsMediaTestCases:android.media.cts.AudioRecordTest.testTimestamp CtsMediaTestCases:android.media.cts.AudioRecordTest.testGetActiveRecordingConfiguration CtsInputMethodTestCases:android.view.inputmethod.cts.InputConnectionBlockingMethodTest.getTestMarker CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testOpenGlEsVersionForVrHighPerformance CtsDatabaseTestCases:android.database.cts.CursorWindowTest.testAccessDataValues CtsWindowManagerDeviceTestCases:android.server.wm.ActivityViewTest.testInputMethod CtsWindowManagerDeviceTestCases:android.server.wm.MultiDisplaySystemDecorationTests.testImeWindowCanShownWhenActivityMovedToDisplay None:android.net.cts.DnsTest.testDnsWorks CtsPrintTestCases:android.print.cts.InterfaceForAppsTest.currentTimeMillis CtsCameraTestCases:android.hardware.camera2.cts.CaptureResultTest.testResultTimestamps CtsSensorTestCases:android.hardware.cts.helpers.sensorverification.InitialValueVerificationTest.testVerify CtsSensorTestCases:android.hardware.cts.SensorTest.testBatchAndFlushWithMultipleSensors CtsSensorTestCases:android.hardware.cts.SensorTest.testBatchAndFlushWithMultipleSensors None:android.inputmethodservice.cts.devicetest.MultiUserDeviceTest.testConnectingToTheSameUserIme CtsInputMethodTestCases:android.view.inputmethod.cts.FocusHandlingTest.getTestMarker CtsInputMethodTestCases:android.view.inputmethod.cts.ImeInsetsVisibilityTest.getTestMarker CtsCameraTestCases:android.hardware.camera2.cts.DngCreatorTest.testSingleImageThumbnail CtsLocationCoarseTestCases:android.location.cts.coarse.LocationManagerCoarseTest.testGnssProvidedClock CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsAccelerometer CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsAccelerometerUncalibrated CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGyroscope CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGyroscopeUncalibrated CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGeoMagneticField CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsMagneticFieldUncalibrated CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsPressure CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGameRotationVector CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsSignificantMotion CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepDetector CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepCounter CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsTiltDetector CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGravityAndLinearAccelIfHasAG CtsPrintTestCases:android.print.cts.PrintJobTest.createFirstMockPrinterDiscoverySessionCallbacks CtsWindowManagerDeviceTestCases:android.server.wm.WindowInsetsControllerTests.testWindowInsetsController_availableAfterAddView CtsLocationGnssTestCases:android.location.cts.gnss.GnssPseudorangeVerificationTest.testPseudorangeValue CtsSensorTestCases:android.hardware.cts.SensorDirectReportTest.testCloseWithoutConfigStop CtsHardwareTestCases:android.hardware.cts.GeomagneticFieldTest.testGeomagneticField CtsWebkitTestCases:android.webkit.cts.GeolocationTest.GeolocationTest CtsTelephonyTestCases:android.telephony.cts.SmsManagerTest.testSmsRetriever CtsTelephonyTestCases:android.telephony.cts.SmsManagerTest.testSmsBlocking CtsSensorTestCases:android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest.uptimeMillis CtsSensorTestCases:android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest.testVerify_no_events_fail CtsInputMethodTestCases:android.view.inputmethod.cts.KeyboardVisibilityControlTest.getTestMarker CtsTelephonyTestCases:android.telephony.cts.CellInfoTest.testCellInfo CtsInputMethodTestCases:android.view.inputmethod.cts.PackageVisibilityTest.getTestMarker CtsHardwareTestCases:android.hardware.consumerir.cts.ConsumerIrTest.test_timing		[('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 14), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodServiceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioRecordTest.java', 2), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorTest.java', 2), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssPseudorangeVerificationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SmsManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/print/src/android/print/cts/PrintAttributesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/print/src/android/print/cts/PrinterCapabilitiesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/database/src/android/database/cts/CursorWindowTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityViewTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySystemDecorationTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/DnsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/print/src/android/print/cts/InterfaceForAppsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/GnssAntennaInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/InitialValueVerificationTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/MultiUserDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/FocusHandlingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_coarse/src/android/location/cts/coarse/LocationManagerCoarseTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/print/src/android/print/cts/PrintJobTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsControllerTests.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorDirectReportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/cts/GeomagneticFieldTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/GeolocationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssTtffTests.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/PackageVisibilityTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/consumerir/cts/ConsumerIrTest.java', 1)]	[('/android/hardware/cts/SensorSupportTest.java', 15), ('/android/hardware/cts/SensorTest.java', 4), ('/android/view/inputmethod/cts/InputMethodServiceTest.java', 3), ('/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java', 3), ('/android/media/cts/AudioRecordTest.java', 3), ('/android/location/cts/gnss/GnssPseudorangeVerificationTest.java', 3), ('/android/telephony/cts/SmsManagerTest.java', 3), ('/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 3), ('/android/server/wm/KeyguardLockedTests.java', 2), ('/android/print/cts/PrintAttributesTest.java', 2), ('/android/print/cts/PrinterCapabilitiesTest.java', 2), ('/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/database/cts/CursorWindowTest.java', 2), ('/android/server/wm/ActivityViewTest.java', 2), ('/android/server/wm/MultiDisplaySystemDecorationTests.java', 2), ('/android/net/cts/DnsTest.java', 2), ('/android/print/cts/InterfaceForAppsTest.java', 2), ('/android/hardware/camera2/cts/CaptureResultTest.java', 2), ('/android/location/cts/fine/GnssAntennaInfoTest.java', 2), ('/android/hardware/cts/helpers/sensorverification/InitialValueVerificationTest.java', 2), ('/android/inputmethodservice/cts/devicetest/MultiUserDeviceTest.java', 2), ('/android/view/inputmethod/cts/FocusHandlingTest.java', 2), ('/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java', 2), ('/android/hardware/camera2/cts/DngCreatorTest.java', 2), ('/android/location/cts/coarse/LocationManagerCoarseTest.java', 2), ('/android/print/cts/PrintJobTest.java', 2), ('/android/server/wm/WindowInsetsControllerTests.java', 2), ('/android/hardware/cts/SensorDirectReportTest.java', 2), ('/android/hardware/cts/GeomagneticFieldTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/webkit/cts/GeolocationTest.java', 2), ('/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java', 2), ('/android/telephony/cts/CellInfoTest.java', 2), ('/android/location/cts/gnss/GnssTtffTests.java', 2), ('/android/view/inputmethod/cts/PackageVisibilityTest.java', 2), ('/android/hardware/consumerir/cts/ConsumerIrTest.java', 2)]	"[('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[putMethodService#onUpdateCursorAnchorInfo(CursorAnchorInfo)}      * will be called back.      */    ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[fo);             assertEquals(receivedCursorAnchorInfo, originalCursorAnchorInfo);         }     } }])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[_PINNED)                 .setActivityType(ACTIVITY_TYPE_STANDARD)                 .build());     } }])', 1), ('([1:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[able window hosted by a different process      * temporarily becomes the focused window.      */    ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[Matcher() {         return event -> TextUtils.equals(""onFinishInput"", event.getEventName());     } }])', 1), ('([2:/android/print/cts/PrintAttributesTest.java]:[getResolution()]:[2]:method_text:[ibutes to the first selection.      *      * @throws Exception If anything is unexpected      */    ])', 1), ('([1:/android/print/cts/PrinterCapabilitiesTest.java]:[getResolution()]:[1]:method_text:[      * of historical reasons.      *      * @throws Exception If anything is unexpected      */    ])', 1), ('([1:/android/media/cts/AudioRecordTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[                 record.release();                 record = null;             }         }     }     ])', 1), ('([1:/android/media/cts/AudioRecordTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[nstrumentation().getTargetContext();     }      /*      * Microphone Direction API tests      */    ])', 1), ('([1:/android/view/inputmethod/cts/InputConnectionBlockingMethodTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[ /**      * Test {@link InputConnection#getTextAfterCursor(int, int)} works as expected.      */    ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-1-6]:[1]:method_text:[  (major == 3 && minor >= 2) || major > 3);     }      @CddTest(requirement=""7.9.2/C-1-6,C-1-8"")    ])', 1), ('([5:/android/database/cts/CursorWindowTest.java]:[7.3]:[5]:method_text:[ndow.isNull(0, 4));         // Test isBlob         assertTrue(cursorWindow.isBlob(0, 4));     }     ])', 1), ('([1:/android/server/wm/ActivityViewTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[     }          ActivityView getActivityView() {             return mActivityView;         }     } }])', 1), ('([3:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[SystemClock.elapsedRealtimeNano]:[3]:method_text:[e);         assertEquals(""Display bounds not the same"", displayBounds, displayBoundsForIme);     } }])', 1), ('([4:/android/net/cts/DnsTest.java]:[SystemClock.elapsedRealtimeNano]:[4]:method_text:[ECONDS));         } finally {             mCm.unregisterNetworkCallback(callback);         }     } }])', 1), ('([1:/android/print/cts/InterfaceForAppsTest.java]:[getResolution()]:[1]:method_text:[etCreationTime());         assertTrue(job.getInfo().getCreationTime() <= afterStart + 5000);     } }])', 1), ('([2:/android/hardware/camera2/cts/CaptureResultTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[* End generated code      *~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~@~O@*/ }])', 1), ('([2:/android/location/cts/fine/GnssAntennaInfoTest.java]:[7.3]:[2]:method_text:[ {2.13, 4.30, 1.36, 3.86, 1.02, 2.96},             {3.22, 3.95, 3.75, 1.73, 1.91, 4.93}      };     ])', 1), ('([1:/android/hardware/cts/helpers/sensorverification/InitialValueVerificationTest.java]:[7.3]:[1]:method_text:[Means[i], 0.1);             assertEquals(laterMeans[i], actualLaterMeans[i], 0.1);         }     } }])', 1), ('([8:/android/hardware/cts/SensorTest.java]:[getResolution()]:[8]:method_text:[ sensor.getFifoReservedEventCount() == 0);         }     }      @SuppressWarnings(""deprecation"")    ])', 1), ('([8:/android/hardware/cts/SensorTest.java]:[Sensor.getResolution]:[8]:method_text:[ sensor.getFifoReservedEventCount() == 0);         }     }      @SuppressWarnings(""deprecation"")    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/MultiUserDeviceTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[EOUT_MILLISEC, TimeUnit.MILLISECONDS);         assertEquals(Process.myUserHandle(), result);     } }])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[KER_PREFIX + ""/""  + SystemClock.elapsedRealtimeNanos();     }      @FlakyTest(bugId = 149246840)    ])', 1), ('([1:/android/view/inputmethod/cts/ImeInsetsVisibilityTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[     }      @Rule     public final UnlockScreenRule mUnlockScreenRule = new UnlockScreenRule();     ])', 1), ('([2:/android/hardware/camera2/cts/DngCreatorTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[s test      * using:      * adb shell setprop log.tag.DngCreatorTest VERBOSE      * </p>      */    ])', 1), ('([2:/android/location/cts/coarse/LocationManagerCoarseTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[  return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_LOCATION_GPS);     } }])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[sMag = hasSensorType(Sensor.TYPE_MAGNETIC_FIELD);     }      @CddTest(requirement=""7.3.9/C-2-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[ckHifiVrSensorSupport(Sensor.TYPE_ACCELEROMETER);     }      @CddTest(requirement=""7.3.9/C-2-2"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[ensor.TYPE_ACCELEROMETER_UNCALIBRATED);         }     }      @CddTest(requirement=""7.3.9/C-2-3"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[ checkHifiVrSensorSupport(Sensor.TYPE_GYROSCOPE);     }      @CddTest(requirement=""7.3.9/C-2-4"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[ensorSupport(Sensor.TYPE_GYROSCOPE_UNCALIBRATED);     }      @CddTest(requirement=""7.3.9/C-2-5"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[kHifiVrSensorSupport(Sensor.TYPE_MAGNETIC_FIELD);     }      @CddTest(requirement=""7.3.9/C-2-6"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[Support(Sensor.TYPE_MAGNETIC_FIELD_UNCALIBRATED);     }      @CddTest(requirement=""7.3.9/C-2-7"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[  checkHifiVrSensorSupport(Sensor.TYPE_PRESSURE);     }      @CddTest(requirement=""7.3.9/C-2-8"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[rSensorSupport(Sensor.TYPE_GAME_ROTATION_VECTOR);     }      @CddTest(requirement=""7.3.9/C-2-9"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[VrSensorSupport(Sensor.TYPE_SIGNIFICANT_MOTION);     }      @CddTest(requirement=""7.3.9/C-2-10"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[kHifiVrSensorSupport(Sensor.TYPE_STEP_DETECTOR);     }      @CddTest(requirement=""7.3.9/C-2-11"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[ckHifiVrSensorSupport(Sensor.TYPE_STEP_COUNTER);     }      @CddTest(requirement=""7.3.9/C-2-12"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[    checkHifiVrSensorSupport(TYPE_TILT_DETECTOR);     }      @CddTest(requirement=""7.3.1/C-3-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[7.3]:[1]:method_text:[Type(Sensor.TYPE_LINEAR_ACCELERATION));         }     }      @CddTest(requirement=""7.3.1/C-4-1"")    ])', 1), ('([1:/android/print/cts/PrintJobTest.java]:[getResolution()]:[1]:method_text:[     if (!testSuccess[0]) {             throw new Exception(""Did not succeed"");         }     }     ])', 1), ('([1:/android/server/wm/WindowInsetsControllerTests.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[ck(ANIMATION_CALLBACK);             getWindow().getInsetsController().show(ime());         }     } }])', 1), ('([1:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[7.3]:[1]:method_text:[d.    * This tests uses actual data retrieved from Gnss HAL.    */   @CddTest(requirement=""7.3.3"")  ])', 1), ('([1:/android/location/cts/gnss/GnssPseudorangeVerificationTest.java]:[7.3]:[1]:method_text:[instant mode"")     @RequiresDevice  // emulated devices do not support real measurements so far.    ])', 1), ('([5:/android/hardware/cts/SensorDirectReportTest.java]:[SystemClock.elapsedRealtimeNano]:[5]:method_text:[der.nativeOrder());          return ((long) b.getInt()) & 0xFFFFFFFFl; // signed => unsigned     } }])', 1), ('([2:/android/hardware/cts/GeomagneticFieldTest.java]:[7.3]:[2]:method_text:[           inclinationDegree = inc;             fieldStrengthNanoTesla = strength;         }     } }])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[7.3]:[1]:method_text:[deHighPerformance = pm.hasSystemFeature(PackageManager.FEATURE_VR_MODE_HIGH_PERFORMANCE);     }     ])', 1), ('([1:/android/webkit/cts/GeolocationTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[ept, mRetain);         }     }      // Test loading a page and accepting the domain for one load    ])', 1), (""([2:/android/telephony/cts/SmsManagerTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[network doesn't support Data(binary) SMS message.             // Skip the test.         }     }     ])"", 1), (""([1:/android/telephony/cts/SmsManagerTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[SM network doesn't support Multipart SMS message.             // Skip the test.         }     }     ])"", 1), ('([2:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[ }       /**      * Test that the verification passes when there are not missing events.      */    ])', 1), ('([2:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[SystemClock.elapsedRealtimeNano]:[2]:method_text:[tion(expectedUs);         verification.addSensorEvents(events);         return verification;     } }])', 1), ('([1:/android/view/inputmethod/cts/KeyboardVisibilityControlTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[onNull String marker) {         return launchTestActivity(marker, getTestMarker()).first;     }     ])', 1), ('([1:/android/telephony/cts/CellInfoTest.java]:[7.3]:[1]:method_text:[nge"", csgInfo.getCsgIdentity() > 0                 && csgInfo.getCsgIdentity() <= 0x7FFFFF);     } }])', 1), ('([1:/android/location/cts/gnss/GnssTtffTests.java]:[7.3]:[1]:method_text:[  @AppModeFull(reason = ""permission ACCESS_LOCATION_EXTRA_COMMANDS not available to instant apps"")  ])', 1), ('([1:/android/view/inputmethod/cts/PackageVisibilityTest.java]:[SystemClock.elapsedRealtimeNano]:[1]:method_text:[il.hasObject(By.pkg(TEST_ACTIVITY.getPackageName()).depth(0)), timeout);     }      @AppModeFull    ])', 1), ('([4:/android/hardware/consumerir/cts/ConsumerIrTest.java]:[SystemClock.elapsedRealtimeNano]:[4]:method_text:[ assertTrue(msg, newTime - currentTime <= totalXmitTimeNanos * (1.0 + margin));         }     }     ])', 1)]"					
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-3-4		[('android.server.wm.PinnedStackTests', 50), ('android.app.cts.ActivityManagerProcessStateTest', 11), ('android.media.cts.MediaDrmClearkeyTest', 8), ('android.suspendapps.cts.SuspendPackagesTest', 6), ('android.dpi.cts.DefaultManifestAttributesTest', 6), ('android.server.wm.KeyguardLockedTests', 6), ('android.os.cts.SeccompTest', 4), ('com.android.tests.stagedinstall.StagedInstallTest', 3), ('android.content.pm.cts.shortcut.backup.publisher1.ShortcutManagerPostBackupTest', 2), ('android.hardware.camera2.cts.ImageWriterTest', 2), ('android.autofillservice.cts.InlinePresentationTest', 2), ('com.android.cts.devicepolicy.DeviceOwnerTest', 2), ('android.provider.cts.BlockedNumberBackupRestoreTest', 2), ('android.media.cts.AudioManagerTest', 2), ('android.accessibilityservice.cts.AccessibilityGestureDispatchTest', 2), ('android.hardware.camera2.cts.AllocationTest', 2), ('android.content.cts.ContentResolverTest', 2), ('android.content.pm.cts.InstantAppTest', 1), ('android.media.cts.MediaCodecListTest', 1), ('android.signature.cts.intent.IntentTest', 1), ('android.autofillservice.cts.CustomDescriptionDateTest', 1), ('com.android.server.cts.ActivityManagerIncidentTest', 1), ('android.media.cts.AdaptivePlaybackTest', 1), ('android.content.pm.cts.PackageInfoTest', 1), ('android.permission.cts.RemovePermissionTest', 1), ('android.net.cts.IpSecManagerTest', 1), ('android.animation.cts.AnimatorSetTest', 1), ('android.dpi2.cts.DefaultManifestAttributesCupcakeTest', 1)]	[('setUp', 10), ('getWidth', 4), ('getTargetContext', 3), ('getPackageManager', 3), ('trim', 3), ('Intent', 3), ('getInstrumentation', 2), ('getContext', 2), ('getPackageName', 2), ('tearDown', 2), ('getHeight', 2), ('addAndAssertDeviceOwner', 1), ('addAndAssertDeviceAdmin', 1), ('shouldNotFindUnexpectedIntents', 1), ('lookupPlatformIntents', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('getActivity', 1), ('getName', 1), ('getAppInfo', 1), ('Object', 1), ('setContextAndInstrumentation', 1), ('wakeUpScreen', 1), ('getUiAutomation', 1), ('start', 1), ('getLooper', 1), ('BlockingStateCallback', 1), ('CameraIterable', 1), ('SizeIterable', 1), ('ResultIterable', 1), ('clearContext', 1), ('quitSafely', 1), ('getSourceSize', 1), ('getSize', 1), ('getLaunchOptions', 1), ('LaunchOptions', 1), ('toRectF', 1), ('BlockingSessionCallback', 1), ('CaptureCallback', 1), ('advanceInputWaiting', 1), ('execute', 1), ('stopCapture', 1), ('close', 1), ('getStateWaiter', 1), ('getInputData', 1), ('getOutputAllocation', 1), ('getBytesSize', 1), ('getOutputData', 1), ('supportsSecureLock', 1), ('getSimpleName', 1), ('supportsPip', 1)]	[('CtsWindowManagerDeviceTestCases', 56), ('CtsMediaTestCases', 12), ('CtsAppTestCases', 11), ('CtsDpiTestCases', 7), ('CtsSuspendAppsTestCases', 6), ('CtsContentTestCases', 4), ('CtsOsHostTestCases', 4), ('CtsCameraTestCases', 4), ('CtsAutoFillServiceTestCases', 3), ('CtsProviderTestCases', 2), ('CtsAccessibilityServiceTestCases', 2), ('CtsIntentSignatureTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsAnimationTestCases', 1)]		7.3.10/C-3-4	"""C-3-4] MUST challenge the user for the recommended primary authentication (e.g. PIN, pattern, password) once every 72 hours or less. <h4 id="""	07031000.670304	7.3.10/C-3-4 7.3.10 PIN C-3-4				[('PIN', 123)]		CtsContentTestCases:android.content.pm.cts.InstantAppTest.testInstantAppInstallerQuery CtsMediaTestCases:android.media.cts.MediaCodecListTest.testRegularMediaCodecListIsASubsetOfAll None:android.content.pm.cts.shortcut.backup.publisher1.ShortcutManagerPostBackupTest.testWithUninstall None:android.content.pm.cts.shortcut.backup.publisher1.ShortcutManagerPostBackupTest.testWithNoUninstall CtsOsHostTestCases:android.os.cts.SeccompTest.testKernelBasicTests CtsOsHostTestCases:android.os.cts.SeccompTest.testKernelTSYNCTests CtsOsHostTestCases:android.os.cts.SeccompTest.testIsolatedServicePolicy CtsOsHostTestCases:android.os.cts.SeccompTest.testViolateIsolatedServicePolicy CtsSuspendAppsTestCases:android.suspendapps.cts.SuspendPackagesTest.testSuspendedStateFromApp CtsSuspendAppsTestCases:android.suspendapps.cts.SuspendPackagesTest.testMyPackageSuspendedUnsuspended CtsSuspendAppsTestCases:android.suspendapps.cts.SuspendPackagesTest.testUpdatingAppExtras CtsSuspendAppsTestCases:android.suspendapps.cts.SuspendPackagesTest.testActivityStoppedOnSuspend CtsSuspendAppsTestCases:android.suspendapps.cts.SuspendPackagesTest.testOpCameraOnSuspend CtsIntentSignatureTestCases:android.signature.cts.intent.IntentTest.isEmpty CtsCameraTestCases:android.hardware.camera2.cts.ImageWriterTest.testYuvImageWriterReaderOperation CtsCameraTestCases:android.hardware.camera2.cts.ImageWriterTest.testYuvImageWriterReaderOperationAlt CtsAutoFillServiceTestCases:android.autofillservice.cts.InlinePresentationTest.testInlinePresentationValues CtsAutoFillServiceTestCases:android.autofillservice.cts.InlinePresentationTest.testtInlinePresentationParcelizeDeparcelize None:com.android.cts.devicepolicy.DeviceOwnerTest.testAdminActionBookkeeping None:com.android.cts.devicepolicy.DeviceOwnerTest.testNoHiddenActivityFoundTest CtsProviderTestCases:android.provider.cts.BlockedNumberBackupRestoreTest.testBackupAndRestoreForSingleNumber CtsProviderTestCases:android.provider.cts.BlockedNumberBackupRestoreTest.testBackupAndRestoreWithDeletion CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.removeTestAppFromWhitelists CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testUidImportanceListener CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBackgroundCheckService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBackgroundCheckStopsService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBackgroundCheckActivityService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testCantSaveStateLaunchAndBackground CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testCantSaveStateLaunchAndSwitch CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testCycleFgs CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testCycleFgsTriangle CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testFgsLocationBind CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testTopBind CtsDpiTestCases:android.dpi.cts.DefaultManifestAttributesTest.testSmallScreenDefault CtsDpiTestCases:android.dpi.cts.DefaultManifestAttributesTest.testNormalScreenDefault CtsDpiTestCases:android.dpi.cts.DefaultManifestAttributesTest.testLargeScreenDefault CtsDpiTestCases:android.dpi.cts.DefaultManifestAttributesTest.testResizableDefault CtsDpiTestCases:android.dpi.cts.DefaultManifestAttributesTest.testAnyDensityDefault None:com.android.server.cts.ActivityManagerIncidentTest.testDumpServices CtsMediaTestCases:android.media.cts.AdaptivePlaybackTest.testH263_flushConfigureDrc CtsContentTestCases:android.content.pm.cts.PackageInfoTest.testApplicationInfoSame CtsMediaTestCases:android.media.cts.AudioManagerTest.testVolume CtsMediaTestCases:android.media.cts.AudioManagerTest.testGetMicrophones CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityGestureDispatchTest.testAngledPinch_looksReasonable CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityGestureDispatchTest.testContinuingGesture_withNothingToContinue_isCancelled CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testOfflineKeyManagement CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testGetProperties CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testSetProperties CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testGetNumberOfSessions CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testHdcpLevels CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testSecurityLevels CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testSecureStop CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testIsCryptoSchemeSupportedWithSecurityLevel CtsCameraTestCases:android.hardware.camera2.cts.AllocationTest.testParamSensitivity None:android.net.cts.IpSecManagerTest.testAllocSpi CtsContentTestCases:android.content.cts.ContentResolverTest.testQuery_SqlSortingFromBundleArgs_Locale CtsContentTestCases:android.content.cts.ContentResolverTest.testNotifyChange_MultipleSplit CtsWindowManagerDeviceTestCases:android.server.wm.KeyguardLockedTests.testEnterPipOverKeyguard CtsWindowManagerDeviceTestCases:android.server.wm.KeyguardLockedTests.testShowWhenLockedActivityAndPipActivity CtsWindowManagerDeviceTestCases:android.server.wm.KeyguardLockedTests.testShowWhenLockedPipActivity CtsWindowManagerDeviceTestCases:android.server.wm.KeyguardLockedTests.testDismissKeyguardPipActivity CtsWindowManagerDeviceTestCases:android.server.wm.KeyguardLockedTests.testImeShowsAfterLockScreenOnEditorTap CtsAnimationTestCases:android.animation.cts.AnimatorSetTest.testGetCurrentPlayTime None:com.android.tests.stagedinstall.StagedInstallTest.testFailOverlappingMultipleStagedInstall_BothSinglePackage_Apk None:com.android.tests.stagedinstall.StagedInstallTest.testAllowNonOverlappingMultipleStagedInstall_MultiPackageSinglePackage_Apk None:com.android.tests.stagedinstall.StagedInstallTest.testFailOverlappingMultipleStagedInstall_BothMultiPackage_Apk CtsDpiTestCases:android.dpi2.cts.DefaultManifestAttributesCupcakeTest.testPackageHasExpectedSdkVersion CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testEnterPictureInPictureMode CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testMoveTopActivityToPinnedStack CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testAlwaysFocusablePipActivity CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testLaunchIntoPinnedStack CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testNonTappablePipActivity CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testPinnedStackInBoundsAfterRotation CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testEnterPipToOtherOrientation CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testEnterPipWithMinimalSize CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testEnterPipAspectRatioMax CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testResizePipAspectRatioMax CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testEnterPipExtremeAspectRatioMax CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testSetPipExtremeAspectRatioMax CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testDisallowPipLaunchFromStoppedActivity CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testAutoEnterPictureInPicture CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testAutoEnterPictureInPictureOnUserLeaveHintWhenPipRequestedNotOverridden CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testAutoEnterPictureInPictureOnPictureInPictureRequested CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testAutoEnterPictureInPictureLaunchActivity CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testAutoEnterPictureInPictureFinish CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testAutoEnterPictureInPictureAspectRatio CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testAutoEnterPictureInPictureOverPip CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testDismissPipWhenLaunchNewOne CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testDisallowMultipleTasksInPinnedStack CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testPipUnPipOverHome CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testPipUnPipOverApp CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testRemovePipWithNoFullscreenOrFreeformStack CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testRemovePipWithVisibleFullscreenOrFreeformStack CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testRemovePipWithHiddenFullscreenOrFreeformStack CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testMovePipToBackWithNoFullscreenOrFreeformStack CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testMovePipToBackWithVisibleFullscreenOrFreeformStack CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testMovePipToBackWithHiddenFullscreenOrFreeformStack CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testPinnedStackAlwaysOnTop CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testAppOpsDenyPipOnPause CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testEnterPipFromTaskWithMultipleActivities CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testLaunchStoppedActivityWithPiPInSameProcessPreQ CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testEnterPipWithResumeWhilePausingActivityNoStop CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testDisallowEnterPipActivityLocked CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testConfigurationChangeOrderDuringTransition CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testEnterPipInterruptedCallbacks CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testStopBeforeMultiWindowCallbacksOnDismiss CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testPreventSetAspectRatioWhileExpanding CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testSetRequestedOrientationWhilePinned CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testWindowButtonEntersPip CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testFinishPipActivityWithTaskOverlay CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testNoResumeAfterTaskOverlayFinishes CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testPinnedStackWithDockedStack CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testLaunchTaskByComponentMatchMultipleTasks CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testLaunchTaskByAffinityMatchMultipleTasks CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testLaunchTaskByAffinityMatchSingleTask CtsWindowManagerDeviceTestCases:android.server.wm.PinnedStackTests.testDisplayMetricsPinUnpin		[('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PinnedStackTests.java', 50), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 11), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaDrmClearkeyTest.java', 8), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/SuspendPackagesTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/dpi/src/android/dpi/cts/DefaultManifestAttributesTest.java', 6), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SeccompTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/stagedinstall/app/src/com/android/tests/stagedinstall/StagedInstallTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher1/src/android/content/pm/cts/shortcut/backup/publisher1/ShortcutManagerPostBackupTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageWriterTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/InlinePresentationTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/BlockedNumberBackupRestoreTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ContentResolverTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/InstantAppTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-source/cts/tests/signature/intent-check/src/android/signature/cts/intent/IntentTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/CustomDescriptionDateTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/ActivityManagerIncidentTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AdaptivePlaybackTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/RemovePermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpSecManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/animation/src/android/animation/cts/AnimatorSetTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/dpi2/src/android/dpi2/cts/DefaultManifestAttributesCupcakeTest.java', 1)]	[('/android/server/wm/PinnedStackTests.java', 51), ('/android/app/cts/ActivityManagerProcessStateTest.java', 12), ('/android/media/cts/MediaDrmClearkeyTest.java', 9), ('/android/suspendapps/cts/SuspendPackagesTest.java', 7), ('/android/dpi/cts/DefaultManifestAttributesTest.java', 7), ('/android/server/wm/KeyguardLockedTests.java', 7), ('/android/os/cts/SeccompTest.java', 5), ('/com/android/tests/stagedinstall/StagedInstallTest.java', 4), ('/android/content/pm/cts/shortcut/backup/publisher1/ShortcutManagerPostBackupTest.java', 3), ('/android/hardware/camera2/cts/ImageWriterTest.java', 3), ('/android/autofillservice/cts/InlinePresentationTest.java', 3), ('/com/android/cts/devicepolicy/DeviceOwnerTest.java', 3), ('/android/provider/cts/BlockedNumberBackupRestoreTest.java', 3), ('/android/media/cts/AudioManagerTest.java', 3), ('/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java', 3), ('/android/hardware/camera2/cts/AllocationTest.java', 3), ('/android/content/cts/ContentResolverTest.java', 3), ('/android/content/pm/cts/InstantAppTest.java', 2), ('/android/media/cts/MediaCodecListTest.java', 2), ('/android/signature/cts/intent/IntentTest.java', 2), ('/android/autofillservice/cts/CustomDescriptionDateTest.java', 2), ('/com/android/server/cts/ActivityManagerIncidentTest.java', 2), ('/android/media/cts/AdaptivePlaybackTest.java', 2), ('/android/content/pm/cts/PackageInfoTest.java', 2), ('/android/permission/cts/RemovePermissionTest.java', 2), ('/android/net/cts/IpSecManagerTest.java', 2), ('/android/animation/cts/AnimatorSetTest.java', 2), ('/android/dpi2/cts/DefaultManifestAttributesCupcakeTest.java', 2)]	"[('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[PIN]:[1]:method_text:[ound      * service, app should go back to cached state.      *      * @throws Exception      */    ])', 2), ('([2:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[2]:method_text:[tKeyguardShowingAndNotOccluded();         mWmState.assertVisibility(PIP_ACTIVITY, false);     }     ])', 2), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[P_ACTIVITY,                 WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_HOME, windowingMode);     }     ])', 2), ('([1:/android/content/pm/cts/InstantAppTest.java]:[PIN]:[1]:method_text:[ctivities(intent, resolveFlags);         assertTrue(matches == null || matches.size() <= 1);     } }])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[PIN]:[1]:method_text:[           ""some regular codecs are not listed in all codecs"", ix, mRegularInfos.length);     }     ])', 1), ('([2:/android/content/pm/cts/shortcut/backup/publisher1/ShortcutManagerPostBackupTest.java]:[PIN]:[2]:method_text:[ .haveIds(""ms1"", ""ms2"")                 .areAllPinned()                 .areAllEnabled();     }     ])', 1), ('([1:/android/content/pm/cts/shortcut/backup/publisher1/ShortcutManagerPostBackupTest.java]:[PIN]:[1]:method_text:[anifestShortcuts())                 .haveIds(""ms1"", ""ms2"")                 .areAllEnabled();     } }])', 1), ('([1:/android/os/cts/SeccompTest.java]:[PIN]:[1]:method_text:[al.ERRNO_capped"", // presently fails */         };         runKernelUnitTestSuite(tests);     }     ])', 1), ('([1:/android/os/cts/SeccompTest.java]:[PIN]:[1]:method_text:[ious operations in an isolated process under a      * fairly restrictive seccomp policy.      */    ])', 1), ('([1:/android/os/cts/SeccompTest.java]:[PIN]:[1]:method_text:[rocess, where the      * process then violates the policy and gets killed by the kernel.      */    ])', 1), ('([1:/android/os/cts/SeccompTest.java]:[PIN]:[1]:method_text:[policy specified by installTestFilter().      */     private native static int getClockBootTime(); }])', 1), ('([2:/android/suspendapps/cts/SuspendPackagesTest.java]:[PIN]:[2]:method_text:[ackageManager();         mAppOpsManager = mContext.getSystemService(AppOpsManager.class);     }     ])', 1), ('([6:/android/suspendapps/cts/SuspendPackagesTest.java]:[PIN]:[6]:method_text:[kageAppExtras different to the ones supplied"",                 appExtras, extrasFromApp);     }     ])', 1), ('([6:/android/suspendapps/cts/SuspendPackagesTest.java]:[PIN]:[6]:method_text:[CKAGE_UNSUSPENDED + "" not reported"",                 mTestAppInterface.awaitBroadcast());     }     ])', 1), ('([6:/android/suspendapps/cts/SuspendPackagesTest.java]:[PIN]:[6]:method_text:[ved app extras different to the ones supplied"", extras2,                 receivedExtras);     }     ])', 1), ('([4:/android/suspendapps/cts/SuspendPackagesTest.java]:[PIN]:[4]:method_text:[tyStop());     }      @SystemUserOnly(reason = ""Device owner can be set up only on system user"")    ])', 1), ('([2:/android/suspendapps/cts/SuspendPackagesTest.java]:[PIN]:[2]:method_text:[lable(String[] packageNames, UserHandle user,                 boolean replacing) {         }     } }])', 1), ('([5:/android/signature/cts/intent/IntentTest.java]:[PIN]:[5]:method_text:[t add: %s"", intent));            whitelist.add(intent);         }          return whitelist;     } }])', 1), ('([1:/android/hardware/camera2/cts/ImageWriterTest.java]:[PIN]:[1]:method_text:[ut use the alternative      * factory method of ImageReader and ImageWriter.      * </p>      */    ])', 1), ('([1:/android/hardware/camera2/cts/ImageWriterTest.java]:[PIN]:[1]:method_text:[, true);             } finally {                 closeDevice(id);             }         }     }     ])', 1), ('([1:/android/autofillservice/cts/InlinePresentationTest.java]:[PIN]:[1]:method_text:[.isNotNull();         assertThat(presentation.getSlice().getItems().size()).isEqualTo(0);     }     ])', 1), ('([3:/android/autofillservice/cts/InlinePresentationTest.java]:[PIN]:[3]:method_text:[100)).build() : null;         return new InlinePresentation(slice, spec, /* pined */ false);     } }])', 1), ('([6:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[PIN]:[6]:method_text:[e);         } catch (DeviceNotAvailableException e) {             return false;         }     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[PIN]:[1]:method_text:[         getDevice().uninstallPackage(BaseLauncherAppsTest.LAUNCHER_TESTS_APK);         }     }     ])', 1), ('([5:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[PIN]:[5]:method_text:[rActivityLaunched() {                 mActivity = getActivity();             }         };     }     ])', 1), ('([1:/android/provider/cts/BlockedNumberBackupRestoreTest.java]:[PIN]:[1]:method_text:[ring blocked numbers."");         runRestore();         verifyBlockedNumbers(""123456789"");     }     ])', 1), ('([1:/android/provider/cts/BlockedNumberBackupRestoreTest.java]:[PIN]:[1]:method_text:[ontext context) {         return context.getSystemService(UserManager.class).isSystemUser();     } }])', 1), ('([4:/android/app/cts/ActivityManagerProcessStateTest.java]:[PIN]:[4]:method_text:[ * Test basic state changes as processes go up and down due to services running in them.      */    ])', 1), ('([4:/android/app/cts/ActivityManagerProcessStateTest.java]:[PIN]:[4]:method_text:[vents idle services from running but allows      * whitelisted apps to bypass the check.      */    ])', 1), ('([4:/android/app/cts/ActivityManagerProcessStateTest.java]:[PIN]:[4]:method_text:[nd: first      * allowing a service to be started, then stopped by the system when idle.      */    ])', 1), ('([4:/android/app/cts/ActivityManagerProcessStateTest.java]:[PIN]:[4]:method_text:[t allow services to be started from broadcasts except when in      * the correct states.      */    ])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[PIN]:[1]:method_text:[   /**      * Test that the foreground service app op does prevent the foreground state.      */    ])', 1), ('([5:/android/app/cts/ActivityManagerProcessStateTest.java]:[PIN]:[5]:method_text:[ /**      * Test that switching between two ""can\'t save state"" apps is handled properly.      */    ])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[PIN]:[1]:method_text:[ound service,      * app should go back to cached state.      *      * @throws Exception      */    ])', 1), ('([16:/android/app/cts/ActivityManagerProcessStateTest.java]:[PIN]:[16]:method_text:[g.      * Bound app should be TOP w/flag and BTOP without flag.      * @throws Exception      */    ])', 1), ('([4:/android/app/cts/ActivityManagerProcessStateTest.java]:[PIN]:[4]:method_text:[tivity(STUB_PACKAGE_NAME, activityClass, null);         return monitor.waitForActivity();     }     ])', 1), ('([5:/android/dpi/cts/DefaultManifestAttributesTest.java]:[PIN]:[5]:method_text:[{             fail(""Should be able to find application info for this package"");         }     }     ])', 1), ('([1:/android/dpi/cts/DefaultManifestAttributesTest.java]:[PIN]:[1]:method_text:[                (getAppInfo().flags & ApplicationInfo.FLAG_SUPPORTS_SMALL_SCREENS) != 0);     }     ])', 1), ('([1:/android/dpi/cts/DefaultManifestAttributesTest.java]:[PIN]:[1]:method_text:[               (getAppInfo().flags & ApplicationInfo.FLAG_SUPPORTS_NORMAL_SCREENS) != 0);     }     ])', 1), ('([1:/android/dpi/cts/DefaultManifestAttributesTest.java]:[PIN]:[1]:method_text:[                (getAppInfo().flags & ApplicationInfo.FLAG_SUPPORTS_LARGE_SCREENS) != 0);     }     ])', 1), ('([1:/android/dpi/cts/DefaultManifestAttributesTest.java]:[PIN]:[1]:method_text:[                (getAppInfo().flags & ApplicationInfo.FLAG_RESIZEABLE_FOR_SCREENS) != 0);     }     ])', 1), ('([1:/android/dpi/cts/DefaultManifestAttributesTest.java]:[PIN]:[1]:method_text:[                (getAppInfo().flags & ApplicationInfo.FLAG_SUPPORTS_SCREEN_DENSITIES) != 0);     } }])', 1), ('([7:/com/android/server/cts/ActivityManagerIncidentTest.java]:[PIN]:[7]:method_text:[eDescriptor()));         }     }      /**      * Tests activity manager dumps processes.      */    ])', 1), ('([5:/android/media/cts/AdaptivePlaybackTest.java]:[PIN]:[5]:method_text:[it is reusable     }     public boolean needsToRunInSeparateThread() {         return false;     } }])', 1), ('([2:/android/content/pm/cts/PackageInfoTest.java]:[PIN]:[2]:method_text:[  assertNull(actual);         } else {             assertEquals(0, actual.length);         }     } }])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[PIN]:[1]:method_text:[sicPlayingBeforeTest) {             assertFalse(mAudioManager.isMusicActive());         }     }     ])', 1), ('([2:/android/media/cts/AudioManagerTest.java]:[PIN]:[2]:method_text:[:"" + microphone.getDirectionality());             Log.i(TAG, ""--------------"");         }     }     ])', 1), ('([9:/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java]:[PIN]:[9]:method_text:[ith some surroundings     // and should work for rectangular, round and round with chin screens.    ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java]:[PIN]:[2]:method_text:[             .addStroke(new StrokeDescription(path2, 0, duration))                 .build();     } }])', 1), ('([4:/android/permission/cts/RemovePermissionTest.java]:[PIN]:[4]:method_text:[iAutomation().grantRuntimePermission(                 pkg, permission);     }      @SecurityTest    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[PIN]:[1]:method_text:[        closeSession(drm, mSessionId);             stopDrm(drm);         }     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[PIN]:[1]:method_text:[y"");             }         } finally {             stopDrm(drm);         }     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[PIN]:[1]:method_text:[(drm);         }     }      private final static int CLEARKEY_MAX_SESSIONS = 10;      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[PIN]:[1]:method_text:[Id);             }         } finally {             stopDrm(drm);         }     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[PIN]:[1]:method_text:[   if (drm != null) {                 drm.close();             }         }     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[PIN]:[1]:method_text:[  if (drm != null) {                 drm.close();             }         }      }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[PIN]:[1]:method_text:[MediaDrm.SessionException with      * errorCode ERROR_RESOURCE_CONTENTION      */     @Presubmit    ])', 1), ('([6:/android/media/cts/MediaDrmClearkeyTest.java]:[PIN]:[6]:method_text:[getSurfaces() {         return Arrays.asList(getActivity().getSurfaceHolder().getSurface());     } }])', 1), ('([1:/android/hardware/camera2/cts/AllocationTest.java]:[PIN]:[1]:method_text:[alSizeOut);          if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);     }     ])', 1), ('([2:/android/hardware/camera2/cts/AllocationTest.java]:[PIN]:[2]:method_text:[             // TODO: Make a Configure decorator or some such for configureOutputs         }     } }])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[PIN]:[1]:method_text:[      * send data on socket      * release transform      * send data (expect exception)      */    ])', 1), ('([2:/android/content/cts/ContentResolverTest.java]:[PIN]:[2]:method_text:[ayed, and that      * honored arguments from a supporting client are returned correctly.      */    ])', 1), ('([1:/android/content/cts/ContentResolverTest.java]:[PIN]:[1]:method_text:[rectly grouped and delivered      * to overlapping listeners, including untouched flags.      */    ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[1]:method_text:[tUp() throws Exception {         super.setUp();         assumeTrue(supportsSecureLock());     }     ])', 1), ('([4:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[4]:method_text:[t contain pinned stack."", WINDOWING_MODE_PINNED,                 ACTIVITY_TYPE_STANDARD);     }     ])', 1), ('([2:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[2]:method_text:[SHOW_WHEN_LOCKED_ACTIVITY, true);         mWmState.assertVisibility(PIP_ACTIVITY, false);     }     ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[PIN]:[1]:method_text:[_PINNED)                 .setActivityType(ACTIVITY_TYPE_STANDARD)                 .build());     } }])', 1), ('([1:/android/animation/cts/AnimatorSetTest.java]:[PIN]:[1]:method_text:[nother 100ms to end.         verify(setListener, within(200)).onAnimationEnd(set, false);     }     ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[PIN]:[1]:method_text:[esult.getErrorMessage()).contains(                 ""has been staged already by session"");     }     ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[PIN]:[1]:method_text:[1, TestApp.B1).assertSuccessful();         stageSingleApk(TestApp.C1).assertSuccessful();     }     ])', 1), ('([1:/com/android/tests/stagedinstall/StagedInstallTest.java]:[PIN]:[1]:method_text:[ready by session"");     }      // Should succeed in installing multiple staged sessions together    ])', 1), ('([1:/android/dpi2/cts/DefaultManifestAttributesCupcakeTest.java]:[PIN]:[1]:method_text:[id testPackageHasExpectedSdkVersion() {         assertEquals(3, getAppInfo().minSdkVersion);     } }])', 1), ('([5:/android/server/wm/PinnedStackTests.java]:[PIN]:[5]:method_text:[void setUp() throws Exception {         super.setUp();         assumeTrue(supportsPip());     }     ])', 1), ('([2:/android/server/wm/PinnedStackTests.java]:[PIN]:[2]:method_text:[PIP_ACTIVITY, false /* moveTopToPinnedStack */,                 false /* isFocusable */);     }     ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[*/);     }      // This test is black-listed in cts-known-failures.xml (b/35314835).     @Ignore    ])', 1), ('([2:/android/server/wm/PinnedStackTests.java]:[PIN]:[2]:method_text:[*/);     }      // This test is black-listed in cts-known-failures.xml (b/35314835).     @Ignore    ])', 1), ('([5:/android/server/wm/PinnedStackTests.java]:[PIN]:[5]:method_text:[_PIP_ACTIVITY,                 false /* moveTopToPinnedStack */, true /* isFocusable */);     }     ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[ValidActivityState(PIP_ACTIVITY));         mWmState.assertVisibility(PIP_ACTIVITY, true);     }     ])', 1), ('([7:/android/server/wm/PinnedStackTests.java]:[PIN]:[7]:method_text:[sion.set(ROTATION_270);         assertPinnedStackActivityIsInDisplayBounds(PIP_ACTIVITY);     }     ])', 1), ('([2:/android/server/wm/PinnedStackTests.java]:[PIN]:[2]:method_text:[smaller than limitation and verify the minWidth/minHeight     // is respected after b/149338177.    ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[minSize.getHeight()                         && pipBounds.width() >= minSize.getWidth()));     }     ])', 1), ('([5:/android/server/wm/PinnedStackTests.java]:[PIN]:[5]:method_text:[edStackBounds.width() / pinnedStackBounds.height(),                 (float) num / denom);     }     ])', 1), ('([2:/android/server/wm/PinnedStackTests.java]:[PIN]:[2]:method_text:[        assertFloatEquals((float) bounds.width() / bounds.height(), (float) num / denom);     }     ])', 1), ('([2:/android/server/wm/PinnedStackTests.java]:[PIN]:[2]:method_text:[ECT_RATIO_DENOMINATOR, Integer.toString(denom));         assertPinnedStackDoesNotExist();     }     ])', 1), ('([6:/android/server/wm/PinnedStackTests.java]:[PIN]:[6]:method_text:[ht(),                 (float) MAX_ASPECT_RATIO_NUMERATOR / MAX_ASPECT_RATIO_DENOMINATOR);     }     ])', 1), ('([2:/android/server/wm/PinnedStackTests.java]:[PIN]:[2]:method_text:[nned stack (that enterPictureInPicture() failed)         assertPinnedStackDoesNotExist();     }     ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[HomeActivity();         waitForEnterPip(PIP_ACTIVITY);         assertPinnedStackExists();     }     ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[pected user leave hint"",                 firstUserLeaveIndex < firstPipModeChangedIndex);     }     ])', 1), ('([2:/android/server/wm/PinnedStackTests.java]:[PIN]:[2]:method_text:[            firstUserLeaveIndex == -1 || firstUserLeaveIndex > firstPipModeChangedIndex);     }     ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[ivity is not PIPed         launchHomeActivity();         assertPinnedStackDoesNotExist();     }     ])', 1), ('([2:/android/server/wm/PinnedStackTests.java]:[PIN]:[2]:method_text:[           EXTRA_FINISH_SELF_ON_RESUME, ""true"");         assertPinnedStackDoesNotExist();     }     ])', 1), ('([2:/android/server/wm/PinnedStackTests.java]:[PIN]:[2]:method_text:[ht(),                 (float) MAX_ASPECT_RATIO_NUMERATOR / MAX_ASPECT_RATIO_DENOMINATOR);     }     ])', 1), ('([7:/android/server/wm/PinnedStackTests.java]:[PIN]:[7]:method_text:[ assertEquals(getActivityName(ALWAYS_FOCUSABLE_PIP_ACTIVITY), pinnedStack.mRealActivity);     }     ])', 1), ('([6:/android/server/wm/PinnedStackTests.java]:[PIN]:[6]:method_text:[    assertEquals(1, mWmState.countStacks(WINDOWING_MODE_PINNED, ACTIVITY_TYPE_STANDARD));     }     ])', 1), ('([5:/android/server/wm/PinnedStackTests.java]:[PIN]:[5]:method_text:[(mWmState.containsActivityInWindowingMode(                 PIP_ACTIVITY, windowingMode));     }     ])', 1), ('([1:/android/server/wm/PinnedStackTests.java]:[PIN]:[1]:method_text:[nterPipAnimationComplete(PIP_ACTIVITY);         mWmState.assertHomeActivityVisible(true);     }     ])', 1), ('([1:/android/server/wm/PinnedStackTests.java]:[PIN]:[1]:method_text:[pAnimationComplete(PIP_ACTIVITY);         mWmState.assertVisibility(TEST_ACTIVITY, true);     }     ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[CTIVITY,                 testAppWindowingMode, ACTIVITY_TYPE_STANDARD, pipWindowingMode);     }     ])', 1), ('([2:/android/server/wm/PinnedStackTests.java]:[PIN]:[2]:method_text:[P_ACTIVITY,                 WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_HOME, windowingMode);     }     ])', 1), ('([2:/android/server/wm/PinnedStackTests.java]:[PIN]:[2]:method_text:[CTIVITY,                 testAppWindowingMode, ACTIVITY_TYPE_STANDARD, pipWindowingMode);     }     ])', 1), ('([2:/android/server/wm/PinnedStackTests.java]:[PIN]:[2]:method_text:[              PIP_ACTIVITY, WINDOWING_MODE_UNDEFINED, ACTIVITY_TYPE_HOME, windowingMode);     }     ])', 1), ('([10:/android/server/wm/PinnedStackTests.java]:[PIN]:[10]:method_text:[nchHomeActivity();         assertPinnedStackExists();         assertPinnedStackIsOnTop();     }     ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[             launchHomeActivity();             assertPinnedStackDoesNotExist();         }     }     ])', 1), ('([1:/android/server/wm/PinnedStackTests.java]:[PIN]:[1]:method_text:[_PIP_ACTIVITY);         waitForEnterPip(PIP_ACTIVITY);         assertPinnedStackExists();     }     ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[ertVisibility(SDK_27_LAUNCH_ENTER_PIP_ACTIVITY, true);         assertPinnedStackExists();     }     ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[        launchActivity(RESUME_WHILE_PAUSING_ACTIVITY);         assertPinnedStackExists();     }     ])', 1), ('([2:/android/server/wm/PinnedStackTests.java]:[PIN]:[2]:method_text:[     } finally {                 mAtm.stopSystemLockTaskMode();             }         });     }     ])', 1), ('([1:/android/server/wm/PinnedStackTests.java]:[PIN]:[1]:method_text:[        } catch (InterruptedException impossible) {}         }     }      @Ignore(""b/149946388"")    ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[                lifecycleCounts.getCount(ActivityCallback.ON_MULTI_WINDOW_MODE_CHANGED));     }     ])', 1), ('([7:/android/server/wm/PinnedStackTests.java]:[PIN]:[7]:method_text:[e before onMultiWindowModeChanged"",                 lastPipIndex, lessThan(lastMwIndex));     }     ])', 1), ('([1:/android/server/wm/PinnedStackTests.java]:[PIN]:[1]:method_text:[       waitForExitPipToFullscreen(PIP_ACTIVITY);         assertPinnedStackDoesNotExist();     }     ])', 1), ('([4:/android/server/wm/PinnedStackTests.java]:[PIN]:[4]:method_text:[ assertEquals(ORIENTATION_LANDSCAPE, pipActivityTask.mOverrideConfiguration.orientation);     }     ])', 1), ('([1:/android/server/wm/PinnedStackTests.java]:[PIN]:[1]:method_text:[WindowButton();         waitForEnterPip(PIP_ACTIVITY);         assertPinnedStackExists();     }     ])', 1), ('([6:/android/server/wm/PinnedStackTests.java]:[PIN]:[6]:method_text:[ON_FINISH);         waitForPinnedStackRemoved();         assertPinnedStackDoesNotExist();     }     ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[         assertEquals(""onPause"", 0, lifecycleCounts.getCount(ActivityCallback.ON_PAUSE));     }     ])', 1), ('([1:/android/server/wm/PinnedStackTests.java]:[PIN]:[1]:method_text:[G_ACTIVITY, true);             mWmState.assertVisibility(TEST_ACTIVITY, false);         }     }     ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[, mWmState.getTaskByActivity(                 TEST_ACTIVITY_WITH_SAME_AFFINITY).mTaskId);     }     ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[(rootActivityTaskId, mWmState.getTaskByActivity(                 TEST_ACTIVITY).mTaskId);     }     ])', 1), ('([3:/android/server/wm/PinnedStackTests.java]:[PIN]:[3]:method_text:[;     }      /** Test that reported display size corresponds to fullscreen after exiting PiP. */    ])', 1), ('([75:/android/server/wm/PinnedStackTests.java]:[PIN]:[75]:method_text:[inned stack."",                     WINDOWING_MODE_PINNED, ACTIVITY_TYPE_STANDARD);         }     } }])', 1)]"					
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-6-2		[('android.keystore.cts.KeyProtectionTest', 4), ('android.keystore.cts.KeyGenParameterSpecTest', 4), ('android.hardware.biometrics.cts.BiometricPromptTest', 2)]		[('CtsKeystoreTestCases', 8), ('CtsHardwareTestCases', 2)]		7.3.10/C-6-2	"""C-6-2] MUST present only Class 3 biometrics when the authentication requires BIOMETRIC_STRONG, or the authentication is invoked with a CryptoObject. If device implementations wish to treat a biometric sensor as Class 1 (formerly Convenience), they: """	07031000.670602	7.3.10 BIOMETRIC_STRONG C-6-2 7.3.10/C-6-2				[('BIOMETRIC_STRONG', 10)]		CtsKeystoreTestCases:android.keystore.cts.KeyProtectionTest.testDefaults CtsKeystoreTestCases:android.keystore.cts.KeyProtectionTest.testSettersReflectedInGetters CtsKeystoreTestCases:android.keystore.cts.KeyGenParameterSpecTest.testDefaults CtsKeystoreTestCases:android.keystore.cts.KeyGenParameterSpecTest.testSettersReflectedInGetters CtsHardwareTestCases:android.hardware.biometrics.cts.BiometricPromptTest.test_setAllowedAuthenticators_withoutDeviceCredential CtsHardwareTestCases:android.hardware.biometrics.cts.BiometricPromptTest.test_setAllowedAuthenticators_withDeviceCredential CtsKeystoreTestCases:android.keystore.cts.KeyProtectionTest.testDefaults CtsKeystoreTestCases:android.keystore.cts.KeyProtectionTest.testSettersReflectedInGetters CtsKeystoreTestCases:android.keystore.cts.KeyGenParameterSpecTest.testDefaults CtsKeystoreTestCases:android.keystore.cts.KeyGenParameterSpecTest.testSettersReflectedInGetters		[('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyProtectionTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyGenParameterSpecTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/hardware/src/android/hardware/biometrics/cts/BiometricPromptTest.java', 2)]	[('/android/keystore/cts/KeyProtectionTest.java', 6), ('/android/keystore/cts/KeyGenParameterSpecTest.java', 6), ('/android/hardware/biometrics/cts/BiometricPromptTest.java', 3)]	[('([1:/android/keystore/cts/KeyProtectionTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[.getBoundToSpecificSecureUserId());         assertFalse(spec.isUnlockedDeviceRequired());     }     ])', 2), ('([2:/android/keystore/cts/KeyProtectionTest.java]:[BIOMETRIC_STRONG]:[2]:method_text:[c.getBoundToSpecificSecureUserId());         assertTrue(spec.isUnlockedDeviceRequired());     }     ])', 2), ('([1:/android/keystore/cts/KeyGenParameterSpecTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[ spec.getUserAuthenticationType());         assertFalse(spec.isUnlockedDeviceRequired());     }     ])', 2), ('([2:/android/keystore/cts/KeyGenParameterSpecTest.java]:[BIOMETRIC_STRONG]:[2]:method_text:[  spec.getUserAuthenticationType());         assertTrue(spec.isUnlockedDeviceRequired());     }     ])', 2), ('([1:/android/hardware/biometrics/cts/BiometricPromptTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[assertEquals(authenticators, prompt.getAllowedAuthenticators());         }     }      @Presubmit    ])', 1), ('([1:/android/hardware/biometrics/cts/BiometricPromptTest.java]:[BIOMETRIC_STRONG]:[1]:method_text:[ld();             assertEquals(authenticators, prompt.getAllowedAuthenticators());         }     } }])', 1)]					
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-4-2						7.3.10/C-4-2	"""C-4-2] MUST recognize and honor each parameter name defined as a constant in the Authenticators class and any combinations thereof. Conversely, MUST NOT honor or recognize integer constants passed to the canAuthenticate(int) and setAllowedAuthenticators(int) methods other than those documented as public constants in Authenticators and any combinations thereof. """	07031000.670402	canAuthenticate(int) 7.3.10 setAllowedAuthenticators(int) 7.3.10/C-4-2 C-4-2															
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-4-3						7.3.10/C-4-3	"""C-4-3] MUST implement the ACTION_BIOMETRIC_ENROLL action on devices that have either Class 3 or Class 2 biometrics. This action MUST only present the enrollment entry points for Class 3 or Class 2 biometrics. If device implementations support passive biometrics, they: """	07031000.670403	7.3.10 7.3.10/C-4-3 C-4-3 ACTION_BIOMETRIC_ENROLL															
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-5-1		[('android.opengl.cts.OpenGlEsVersionTest', 2)]		[('CtsOpenGLTestCases', 2)]		7.3.10/C-5-1	"""C-5-1] MUST by default require an additional confirmation step (e.g. a button press). """	07031000.670501	7.3.10/C-5-1 7.3.10 C-5-1				[('C-5-1', 2)]		CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions		[('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 2)]	[('/android/opengl/cts/OpenGlEsVersionTest.java', 4)]	"[('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-5-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 2)]"					
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-5-2						7.3.10/C-5-2	"""C-5-2] MUST additionally implement an implicit authentication flow (without confirmation step) corresponding to setConfirmationRequired(boolean), which applications can set to utilize for sign-in flows. If device implementations have multiple biometric sensors, they: """	07031000.670502	7.3.10 7.3.10/C-5-2 C-5-2 setConfirmationRequired(boolean)															
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-4-1		[('android.content.pm.cts.shortcutmanager.ShortcutManagerThrottlingTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMiscTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerClientApiTest', 1), ('android.location.cts.fine.ScanningSettingsTest', 1), ('android.hardware.cts.SensorSupportTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1)]	[('setUp', 6), ('getClass', 2), ('getTargetException', 2), ('tearDown', 2), ('NoSuchFieldError', 1), ('getDeclaredMethods', 1), ('getName', 1), ('NoSuchMethodError', 1), ('getMessage', 1), ('getOverrideConfig', 1), ('getInstrumentation', 1)]	[('CtsShortcutManagerTestCases', 7), ('CtsOpenGLTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsSensorTestCases', 1)]		7.3.10/C-4-1	"""C-4-1] MUST meet the requirements for Class 3 or Class 2 biometric as defined in this document. """	07031000.670401	7.3.10 7.3.10/C-4-1 C-4-1				[('C-4-1', 10)]		CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerThrottlingTest.getTestContext CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest.getTestContext CtsLocationFineTestCases:android.location.cts.fine.ScanningSettingsTest.testWifiScanningSettings CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGravityAndLinearAccelIfHasAG CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest.getTestContext		[('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerClientApiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/ScanningSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1)]	[('/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerClientApiTest.java', 2), ('/android/location/cts/fine/ScanningSettingsTest.java', 2), ('/android/hardware/cts/SensorSupportTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 2)]	"[('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java]:[C-4-1]:[1]:method_text:[          runCommandForNoOutput(getInstrumentation(), ""am force-stop "" + TARGET_PACKAGE);     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-4-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-4-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[C-4-1]:[1]:method_text:[tsBase {     /**      * Basic tests: single app, single activity, no manifest shortcuts.      */    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java]:[C-4-1]:[1]:method_text:[    }         }     }      /**      * Make sure the internal AIDL methods are protected.      */    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java]:[C-4-1]:[1]:method_text:[ase {     @Override     protected void setUp() throws Exception {         super.setUp();      }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerClientApiTest.java]:[C-4-1]:[1]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/location/cts/fine/ScanningSettingsTest.java]:[C-4-1]:[1]:method_text:[ wifiManager.isScanAlwaysAvailable()         );     }      @CddTest(requirement = ""7.4.3/C-4-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-4-1]:[1]:method_text:[Type(Sensor.TYPE_LINEAR_ACCELERATION));         }     }      @CddTest(requirement=""7.3.1/C-4-1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[C-4-1]:[1]:method_text:[ortcutId())) {                 return true;             }         }         return false;     }     ])', 1)]"					
184:592822) 7.3.10  . Biometric Sensors	7.3.10	C-6-1		[('android.opengl.cts.OpenGlEsVersionTest', 2)]		[('CtsOpenGLTestCases', 2)]		7.3.10/C-6-1	"""C-6-1] MUST meet the requirements for Class 3 as defined in this section below. """	07031000.670601	7.3.10 7.3.10/C-6-1 C-6-1				[('C-6-1', 2)]		CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensionsForVrHighPerformance CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensionsForVrHighPerformance		[('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 2)]	[('/android/opengl/cts/OpenGlEsVersionTest.java', 4)]	"[('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-6-1]:[1]:method_text:[ns, requiredExtension));             }         }     }     @CddTest(requirement=""7.1.4.1/C-6-1"")    ])', 2)]"					
186:594441) 7.3.13  . Hinge Angle Sensor	7.3.13	C-1-2		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 1), ('android.graphics.cts.PaintTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1)]	[('setUp', 2), ('getHeight', 1), ('getWidth', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsCameraTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsSensorTestCases', 1)]		7.3.13/C-1-2	"""C-1-2] MUST support at least two readings between 0 and 360 degrees (inclusive i.e including 0 and 360 degrees). """	07031300.670102	C-1-2 7.3.13 7.3.13/C-1-2				[('C-1-2', 9)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest.testGetShortcutIcon CtsGraphicsTestCases:android.graphics.cts.PaintTest.testGetTextPathStringCountTooHigh CtsSensorTestCases:android.hardware.cts.SensorParameterRangeTest.testPressureRange None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported		[('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1)]	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/android/graphics/cts/PaintTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-2]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-2]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-2]:[1]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[C-1-2]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));     }     @CddTest(requirement=""3.8.1/C-1-2"")    ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[C-1-2]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());     }      @CddTest(requirement=""3.8.13/C-1-2"")    ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[C-1-2]:[1]:method_text:[Frequency),                     actualMinFrequency <=  hifiMinFrequency + 0.1);         }     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-2]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1)]"					
186:594441) 7.3.13  . Hinge Angle Sensor	7.3.13	C-1-1		[('android.appsecurity.cts.ApkVerityInstallTest', 10), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.vr.cts.VrDisplayTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.vr.cts.VrCpuTest', 1), ('android.text.cts.FontCoverageTest', 1), ('android.media.cts.AudioRecord_BufferSizeTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.content.cts.AvailableIntentsTest', 1), ('android.media.cts.HeifWriterTest', 1), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1)]	[('setUp', 3), ('getSimpleName', 2), ('HashMap', 1), ('Builder', 1), ('build', 1), ('toLanguageTag', 1), ('getDevice', 1), ('getLaunchApiLevel', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsVrTestCases', 3), ('CtsSecurityTestCases', 3), ('CtsMediaTestCases', 2), ('CtsCameraTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsTextTestCases', 1), ('CtsContentTestCases', 1), ('CtsGraphicsTestCases', 1)]		7.3.13/C-1-1	"""C-1-1] MUST implement and report TYPE_HINGLE_ANGLE. """	07031300.670101	C-1-1 TYPE_HINGLE_ANGLE 7.3.13/C-1-1 7.3.13				[('C-1-1', 30)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsVrTestCases:android.vr.cts.VrCpuTest.VrCpuTest None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testLegacyCameraDeviceParity CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsContentTestCases:android.content.cts.AvailableIntentsTest.testPowerUsageSummarySettings CtsMediaTestCases:android.media.cts.HeifWriterTest.testInputBitmap_Grid_Handler CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsVrTestCases:android.vr.cts.VrDisplayTest.VrDisplayTest CtsVrTestCases:android.vr.cts.VrDisplayTest.testRefreshRateIsAtLeast60Hz None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported		[('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 10), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/vr/src/android/vr/cts/VrDisplayTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/vr/src/android/vr/cts/VrCpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioRecord_BufferSizeTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1)]	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 11), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/vr/cts/VrDisplayTest.java', 3), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/vr/cts/VrCpuTest.java', 2), ('/android/text/cts/FontCoverageTest.java', 2), ('/android/media/cts/AudioRecord_BufferSizeTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/content/cts/AvailableIntentsTest.java', 2), ('/android/media/cts/HeifWriterTest.java', 2), ('/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-1]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/vr/cts/VrCpuTest.java]:[C-1-1]:[1]:method_text:[ic VrCpuTest() {         super(CtsActivity.class);     }     @CddTest(requirement=""7.9.2/C-1-1"")    ])', 1), ('([1:/android/text/cts/FontCoverageTest.java]:[C-1-1]:[1]:method_text:[      }          // Unknown locale. Return an empty set.         return UnicodeSet.EMPTY;     }     ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/media/cts/AudioRecord_BufferSizeTest.java]:[C-1-1]:[1]:method_text:[   48000,     };      private AudioRecord mAudioRecord;      @CddTest(requirement=""5.4.1/C-1-1"")    ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-1]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-1]:[1]:method_text:[ck camera orientation against device orientation      */     @CddTest(requirement=""7.5.5/C-1-1"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[C-1-1]:[1]:method_text:[ntent.ACTION_POWER_USAGE_SUMMARY));         }     }      @CddTest(requirement = ""7.4.2.6/C-1-1"")    ])', 1), ('([1:/android/media/cts/HeifWriterTest.java]:[C-1-1]:[1]:method_text:[ediaFormat#MIMETYPE_IMAGE_ANDROID_HEIC} encoder.      */     @CddTest(requirement=""5.1.4/C-1-1"")    ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[C-1-1]:[1]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ Tests that the refresh rate is at least 60Hz.      */      @CddTest(requirement=""7.9.2/C-1-15"")    ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ that the display resolution is at least 1080p.      */     @CddTest(requirement=""7.9.2/C-1-14"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);     }      @CddTest(requirement=""4/C-1-1"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-1-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1)]"					
186:594441) 7.3.13  . Hinge Angle Sensor	7.3.13	C-1-3		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.webkit.cts.WebSettingsTest', 1), ('android.telecom.cts.BasicInCallServiceTest', 1)]	[('getInstrumentation', 4), ('setUp', 2), ('tearDown', 2), ('getContext', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsWebkitTestCases', 1), ('CtsTelecomTestCases', 1)]		7.3.13/C-1-3	"""C-1-3] MUST return a wakeup sensor for getDefaultSensor(SENSOR_TYPE_HINGE_ANGLE). <h3 id="""	07031300.670103	getDefaultSensor(SENSOR_TYPE_HINGE_ANGLE) 7.3.13/C-1-3 SENSOR_TYPE_HINGE_ANGLE C-1-3 7.3.13				[('C-1-3', 4)]		CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testUserAgentStringTest CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount		[('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/BasicInCallServiceTest.java', 1)]	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/webkit/cts/WebSettingsTest.java', 2), ('/android/telecom/cts/BasicInCallServiceTest.java', 2)]	"[('([1:/android/webkit/cts/WebSettingsTest.java]:[C-1-3]:[1]:method_text:[l:\\n%s"", patternString, useragent),                     patternMatcher.find());         }     }     ])', 1), ('([1:/android/telecom/cts/BasicInCallServiceTest.java]:[C-1-3]:[1]:method_text:[tDialer);         }         super.tearDown();     }      @CddTest(requirement = ""7.4.1.2/C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1)]"					
180:566614) 7.3.6  . Thermometer	7.3.6	C-2-1		[('android.hardware.cts.SensorSupportTest', 4), ('android.app.cts.SystemFeaturesTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.location.cts.fine.ScanningSettingsTest', 1), ('android.appwidget.cts.RequestPinAppWidgetTest', 1)]	[('getContext', 3), ('getPackageManager', 2), ('setUp', 2), ('getSimpleName', 1), ('setup', 1), ('getTargetContext', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('getResources', 1), ('getConfiguration', 1)]	[('CtsSensorTestCases', 4), ('CtsAppTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsAppWidgetTestCases', 1)]		7.3.6/C-2-1	"""C-2-1] MUST NOT define SENSOR_TYPE_AMBIENT_TEMPERATURE for the temperature sensor. <h4 id="""	07030600.670201	SENSOR_TYPE_AMBIENT_TEMPERATURE 7.3.6/C-2-1 7.3.6 C-2-1				[('C-2-1', 10)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions CtsLocationFineTestCases:android.location.cts.fine.ScanningSettingsTest.isTV CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsSignificantMotion CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepDetector CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepCounter CtsAppWidgetTestCases:android.appwidget.cts.RequestPinAppWidgetTest.testPinWidget_launcher2		[('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 4), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/ScanningSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 1)]	[('/android/hardware/cts/SensorSupportTest.java', 5), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/location/cts/fine/ScanningSettingsTest.java', 2), ('/android/appwidget/cts/RequestPinAppWidgetTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-2-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-2-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-2-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-2-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/location/cts/fine/ScanningSettingsTest.java]:[C-2-1]:[1]:method_text:[r.MATCH_DEFAULT_ONLY).activityInfo.packageName;     }      @CddTest(requirement = ""7.4.2/C-2-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[sMag = hasSensorType(Sensor.TYPE_MAGNETIC_FIELD);     }      @CddTest(requirement=""7.3.9/C-2-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[VrSensorSupport(Sensor.TYPE_SIGNIFICANT_MOTION);     }      @CddTest(requirement=""7.3.9/C-2-10"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[kHifiVrSensorSupport(Sensor.TYPE_STEP_DETECTOR);     }      @CddTest(requirement=""7.3.9/C-2-11"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[ckHifiVrSensorSupport(Sensor.TYPE_STEP_COUNTER);     }      @CddTest(requirement=""7.3.9/C-2-12"")    ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[C-2-1]:[1]:method_text:[                 AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());     }     ])', 1)]"					
203:629423) 7.4.5.2  . IPv6	7.4.5.2	C-4-1		[('android.content.pm.cts.shortcutmanager.ShortcutManagerThrottlingTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMaxCountTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerMiscTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerClientApiTest', 1), ('android.location.cts.fine.ScanningSettingsTest', 1), ('android.hardware.cts.SensorSupportTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest', 1)]	[('setUp', 6), ('getClass', 2), ('getTargetException', 2), ('tearDown', 2), ('NoSuchFieldError', 1), ('getDeclaredMethods', 1), ('getName', 1), ('NoSuchMethodError', 1), ('getMessage', 1), ('getOverrideConfig', 1), ('getInstrumentation', 1)]	[('CtsShortcutManagerTestCases', 7), ('CtsOpenGLTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsSensorTestCases', 1)]		7.4.5.2/C-4-1	"""C-4-1] MUST simultaneously meet the above requirements on each network when the device is simultaneously connected to more than one network type. <h5 id="""	07040502.670401	7.4.5.2/C-4-1 7.4.5.2 C-4-1				[('C-4-1', 10)]		CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerThrottlingTest.getTestContext CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerNegativeTest.getTestContext CtsLocationFineTestCases:android.location.cts.fine.ScanningSettingsTest.testWifiScanningSettings CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsGravityAndLinearAccelIfHasAG CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerUsageTest.getTestContext		[('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerClientApiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/ScanningSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 1)]	[('/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerClientApiTest.java', 2), ('/android/location/cts/fine/ScanningSettingsTest.java', 2), ('/android/hardware/cts/SensorSupportTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java', 2)]	"[('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerThrottlingTest.java]:[C-4-1]:[1]:method_text:[          runCommandForNoOutput(getInstrumentation(), ""am force-stop "" + TARGET_PACKAGE);     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-4-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-4-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMaxCountTest.java]:[C-4-1]:[1]:method_text:[tsBase {     /**      * Basic tests: single app, single activity, no manifest shortcuts.      */    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerNegativeTest.java]:[C-4-1]:[1]:method_text:[    }         }     }      /**      * Make sure the internal AIDL methods are protected.      */    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerMiscTest.java]:[C-4-1]:[1]:method_text:[ase {     @Override     protected void setUp() throws Exception {         super.setUp();      }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerClientApiTest.java]:[C-4-1]:[1]:method_text:[dp_lowram=96,""                 + ""icon_format=PNG,""                 + ""icon_quality=100"";     }     ])', 1), ('([1:/android/location/cts/fine/ScanningSettingsTest.java]:[C-4-1]:[1]:method_text:[ wifiManager.isScanAlwaysAvailable()         );     }      @CddTest(requirement = ""7.4.3/C-4-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-4-1]:[1]:method_text:[Type(Sensor.TYPE_LINEAR_ACCELERATION));         }     }      @CddTest(requirement=""7.3.1/C-4-1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerUsageTest.java]:[C-4-1]:[1]:method_text:[ortcutId())) {                 return true;             }         }         return false;     }     ])', 1)]"					
204:632149) 7.4.5.3  . Captive Portals	7.4.5.3	C-1-2		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 1), ('android.graphics.cts.PaintTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1)]	[('setUp', 2), ('getHeight', 1), ('getWidth', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsCameraTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsSensorTestCases', 1)]		7.4.5.3/C-1-2	"""C-1-2] MUST perform detection of captive portals and support login through the captive portal application when the device is connected to any network type, including cellular/mobile network, WiFi, Ethernet or Bluetooth. """	07040503.670102	7.4.5.3 C-1-2 7.4.5.3/C-1-2				[('C-1-2', 9)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest.testGetShortcutIcon CtsGraphicsTestCases:android.graphics.cts.PaintTest.testGetTextPathStringCountTooHigh CtsSensorTestCases:android.hardware.cts.SensorParameterRangeTest.testPressureRange None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported		[('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1)]	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/android/graphics/cts/PaintTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-2]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-2]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-2]:[1]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[C-1-2]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));     }     @CddTest(requirement=""3.8.1/C-1-2"")    ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[C-1-2]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());     }      @CddTest(requirement=""3.8.13/C-1-2"")    ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[C-1-2]:[1]:method_text:[Frequency),                     actualMinFrequency <=  hifiMinFrequency + 0.1);         }     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-2]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1)]"					
204:632149) 7.4.5.3  . Captive Portals	7.4.5.3	C-1-1		[('android.appsecurity.cts.ApkVerityInstallTest', 10), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.vr.cts.VrDisplayTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.vr.cts.VrCpuTest', 1), ('android.net.wifi.cts.WifiManagerTest', 1), ('android.text.cts.FontCoverageTest', 1), ('android.media.cts.AudioRecord_BufferSizeTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.content.cts.AvailableIntentsTest', 1), ('android.media.cts.HeifWriterTest', 1), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1)]	[('setUp', 3), ('getSimpleName', 2), ('HashMap', 1), ('Builder', 1), ('build', 1), ('toLanguageTag', 1), ('getDevice', 1), ('getLaunchApiLevel', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsVrTestCases', 3), ('CtsSecurityTestCases', 3), ('CtsMediaTestCases', 2), ('CtsCameraTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsWifiTestCases', 1), ('CtsTextTestCases', 1), ('CtsContentTestCases', 1), ('CtsGraphicsTestCases', 1)]		7.4.5.3/C-1-1	"""C-1-1] MUST provide a captive portal application to handle the intent ACTION_CAPTIVE_PORTAL_SIGN_IN and display the captive portal login page, by sending that intent, on call to the System API ConnectivityManager#startCaptivePortalApp(Network, Bundle). """	07040503.670101	ACTION_CAPTIVE_PORTAL_SIGN_IN C-1-1 7.4.5.3 7.4.5.3/C-1-1				[('C-1-1', 30), ('ACTION_CAPTIVE_PORTAL_SIGN_IN', 1)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsVrTestCases:android.vr.cts.VrCpuTest.VrCpuTest CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testNetworkSettingsPermission None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testLegacyCameraDeviceParity CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsContentTestCases:android.content.cts.AvailableIntentsTest.testPowerUsageSummarySettings CtsMediaTestCases:android.media.cts.HeifWriterTest.testInputBitmap_Grid_Handler CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsVrTestCases:android.vr.cts.VrDisplayTest.VrDisplayTest CtsVrTestCases:android.vr.cts.VrDisplayTest.testRefreshRateIsAtLeast60Hz None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported		[('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 10), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/vr/src/android/vr/cts/VrDisplayTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/vr/src/android/vr/cts/VrCpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioRecord_BufferSizeTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1)]	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 11), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/vr/cts/VrDisplayTest.java', 3), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/vr/cts/VrCpuTest.java', 2), ('/android/net/wifi/cts/WifiManagerTest.java', 2), ('/android/text/cts/FontCoverageTest.java', 2), ('/android/media/cts/AudioRecord_BufferSizeTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/content/cts/AvailableIntentsTest.java', 2), ('/android/media/cts/HeifWriterTest.java', 2), ('/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-1]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/vr/cts/VrCpuTest.java]:[C-1-1]:[1]:method_text:[ic VrCpuTest() {         super(CtsActivity.class);     }     @CddTest(requirement=""7.9.2/C-1-1"")    ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[ACTION_CAPTIVE_PORTAL_SIGN_IN]:[1]:method_text:[unctionality.  The permission is intended to be granted to only the device setup wizard.      */    ])', 1), ('([1:/android/text/cts/FontCoverageTest.java]:[C-1-1]:[1]:method_text:[      }          // Unknown locale. Return an empty set.         return UnicodeSet.EMPTY;     }     ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/media/cts/AudioRecord_BufferSizeTest.java]:[C-1-1]:[1]:method_text:[   48000,     };      private AudioRecord mAudioRecord;      @CddTest(requirement=""5.4.1/C-1-1"")    ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-1]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-1]:[1]:method_text:[ck camera orientation against device orientation      */     @CddTest(requirement=""7.5.5/C-1-1"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[C-1-1]:[1]:method_text:[ntent.ACTION_POWER_USAGE_SUMMARY));         }     }      @CddTest(requirement = ""7.4.2.6/C-1-1"")    ])', 1), ('([1:/android/media/cts/HeifWriterTest.java]:[C-1-1]:[1]:method_text:[ediaFormat#MIMETYPE_IMAGE_ANDROID_HEIC} encoder.      */     @CddTest(requirement=""5.1.4/C-1-1"")    ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[C-1-1]:[1]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ Tests that the refresh rate is at least 60Hz.      */      @CddTest(requirement=""7.9.2/C-1-15"")    ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ that the display resolution is at least 1080p.      */     @CddTest(requirement=""7.9.2/C-1-14"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);     }      @CddTest(requirement=""4/C-1-1"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-1-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1)]"					
204:632149) 7.4.5.3  . Captive Portals	7.4.5.3	C-1-3		[('android.security.SELinuxTargetSdkTest', 10), ('android.net.cts.DnsResolverTest', 9), ('com.android.cts.deviceowner.PrivateDnsPolicyTest', 7), ('android.telephony.cts.DataCallResponseTest', 5), ('android.net.cts.MultinetworkApiTest', 3), ('com.android.cts.deviceowner.NetworkLoggingTest', 2), ('android.net.cts.IpSecManagerTest', 2), ('android.net.cts.ConnectivityDiagnosticsManagerTest', 2), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.net.wifi.cts.WifiBackupRestoreTest', 2), ('android.net.cts.DnsTest', 2), ('android.net.ipsec.ike.cts.ChildSessionParamsTest', 2), ('android.webkit.cts.WebSettingsTest', 1), ('com.android.cts.devicepolicy.DeviceOwnerTest', 1), ('com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest', 1), ('android.net.cts.IpConfigurationTest', 1), ('android.appsecurity.cts.ListeningPortsTest', 1), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 1), ('android.telecom.cts.BasicInCallServiceTest', 1), ('com.android.cts.net.hostside.VpnTest', 1), ('android.net.cts.legacy.api22.ConnectivityManagerLegacyTest', 1), ('android.hardware.cts.helpers.sensorverification.JitterVerificationTest', 1), ('android.net.wifi.cts.NsdManagerTest', 1), ('android.hardware.camera2.cts.CaptureRequestTest', 1), ('android.permission.cts.NoNetworkStatePermissionTest', 1), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 1)]	[('setUp', 16), ('getContext', 12), ('tearDown', 11), ('getInstrumentation', 9), ('getWho', 4), ('getContentResolver', 3), ('getPackageName', 3), ('Builder', 3), ('build', 3), ('getSoftLifetimeSeconds', 3), ('run', 2), ('getPackageManager', 2), ('storePrivateDnsSetting', 2), ('restorePrivateDnsSetting', 2), ('Object', 2), ('getSaProposals', 2), ('getHardLifetimeSeconds', 2), ('getInboundTrafficSelectors', 2), ('getOutboundTrafficSelectors', 2), ('BroadcastReceiver', 1), ('getAction', 1), ('getCount', 1), ('countDown', 1), ('getSimpleName', 1), ('Binder', 1), ('getInstance', 1), ('getMainLooper', 1), ('supportedHardware', 1), ('getTargetContext', 1), ('bind', 1), ('waitForIdle', 1), ('unbind', 1), ('stopVpn', 1), ('buildChildSaProposalWithCombinedModeCipher', 1)]	[('CtsTelephonyTestCases', 5), ('CtsIkeTestCases', 3), ('CtsWifiTestCases', 3), ('CtsSelinuxTargetSdk29TestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsSensorTestCases', 2), ('CtsSelinuxTargetSdk28TestCases', 2), ('CtsSelinuxTargetSdk25TestCases', 2), ('CtsSelinuxTargetSdkCurrentTestCases', 2), ('CtsSelinuxTargetSdk27TestCases', 2), ('CtsWebkitTestCases', 1), ('CtsTelecomTestCases', 1), ('CtsNetTestCases', 1), ('CtsCameraTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsMediaTestCases', 1)]		7.4.5.3/C-1-3	"""C-1-3] MUST support logging in to captive portals using cleartext DNS when the device is configured to use private DNS strict mode. """	07040503.670103	7.4.5.3 7.4.5.3/C-1-3 C-1-3 DNS				[('DNS', 60), ('C-1-3', 4)]		CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testUserAgentStringTest None:com.android.cts.devicepolicy.DeviceOwnerTest.testPrivateDnsPolicy None:com.android.cts.deviceowner.NetworkLoggingTest.testNetworkLoggingAndRetrieval None:android.net.cts.IpSecManagerTest.testAllocSpi None:android.net.cts.ConnectivityDiagnosticsManagerTest.TestNetworkCallback None:android.net.cts.ConnectivityDiagnosticsManagerTest.testOnDataStallSuspected_DnsEvents CtsSelinuxTargetSdk29TestCases:android.security.SELinuxTargetSdkTest.testNoDns None:android.appsecurity.cts.ListeningPortsTest.testNoListeningLoopbackUdp6Ports CtsIkeTestCases:android.net.ipsec.ike.cts.IkeSessionPskTest.testIkeSessionSetupAndChildSessionSetupWithTunnelModeV6 None:android.net.cts.DnsResolverTest.getTestableNetworks None:android.net.cts.DnsResolverTest.testRawQueryNXDomainWithPrivateDns None:android.net.cts.DnsResolverTest.testRawQueryNXDomainInlineWithPrivateDns None:android.net.cts.DnsResolverTest.testRawQueryCancel None:android.net.cts.DnsResolverTest.testRawQueryBlobCancel None:android.net.cts.DnsResolverTest.testCancelBeforeQuery None:android.net.cts.DnsResolverTest.testContinuousQueriesInline None:android.net.cts.DnsResolverTest.testQueryCancelForInetAddress None:android.net.cts.DnsResolverTest.testPrivateDnsBypass None:com.android.cts.net.hostside.VpnTest.finish CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsNetTestCases:android.net.cts.legacy.api22.ConnectivityManagerLegacyTest.testStartUsingNetworkFeature_enableHipri CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testConstructorAndGetters CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testEquals CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testNotEquals CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testParcel CtsWifiTestCases:android.net.wifi.cts.WifiBackupRestoreTest.isNotNull CtsWifiTestCases:android.net.wifi.cts.WifiBackupRestoreTest.testCanRestoreSoftApBackupData CtsSensorTestCases:android.hardware.cts.helpers.sensorverification.JitterVerificationTest.testCalculateDelta CtsWifiTestCases:android.net.wifi.cts.NsdManagerTest.testNDSManager None:android.net.cts.DnsTest.testNativeDns None:android.net.cts.DnsTest.testDnsWorks CtsCameraTestCases:android.hardware.camera2.cts.CaptureRequestTest.testExtendedSceneModes None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testDisallowPrivateDnsConfigurationRestriction None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testClearDisallowPrivateDnsConfigurationRestriction None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testSetOpportunisticMode None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testSetSpecificHostMode None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testSetModeWithIncorrectHost None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testCanSetModeDespiteUserRestriction CtsSelinuxTargetSdk28TestCases:android.security.SELinuxTargetSdkTest.testNoDns CtsSelinuxTargetSdk25TestCases:android.security.SELinuxTargetSdkTest.testCanExecuteFromHomeDir CtsSelinuxTargetSdk25TestCases:android.security.SELinuxTargetSdkTest.testNoDns CtsIkeTestCases:android.net.ipsec.ike.cts.ChildSessionParamsTest.testBuildChildSessionParamsWithConfigReq CtsPermissionTestCases:android.permission.cts.NoNetworkStatePermissionTest.testSecurityExceptionFromDns CtsSelinuxTargetSdkCurrentTestCases:android.security.SELinuxTargetSdkTest.testNoDns CtsSelinuxTargetSdk27TestCases:android.security.SELinuxTargetSdkTest.testNoDns None:com.android.cts.deviceandprofileowner.UserRestrictionsParentTest.testPerProfileUserRestriction_onParent CtsMediaTestCases:android.media.cts.PresentationSyncTest.testThroughput None:android.net.cts.MultinetworkApiTest.getTestableNetworks None:android.net.cts.MultinetworkApiTest.testResNApi None:android.net.cts.MultinetworkApiTest.testResNApiNXDomainPrivateDns CtsSensorTestCases:android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest.testVerify_no_events_fail		[('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/DnsResolverTest.java', 9), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PrivateDnsPolicyTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/DataCallResponseTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/MultinetworkApiTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/NetworkLoggingTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpSecManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk29/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiBackupRestoreTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/DnsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk28/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk25/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/ChildSessionParamsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdkCurrent/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk27/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ListeningPortsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/BasicInCallServiceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/net/app/src/com/android/cts/net/hostside/VpnTest.java', 1), ('/home/gpoor/cts-source/cts/tests/netlegacy22.api/src/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/NsdManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/NoNetworkStatePermissionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 1)]	[('/android/security/SELinuxTargetSdkTest.java', 15), ('/android/net/cts/DnsResolverTest.java', 10), ('/com/android/cts/deviceowner/PrivateDnsPolicyTest.java', 8), ('/android/telephony/cts/DataCallResponseTest.java', 6), ('/android/net/cts/MultinetworkApiTest.java', 4), ('/com/android/cts/deviceowner/NetworkLoggingTest.java', 3), ('/android/net/cts/IpSecManagerTest.java', 3), ('/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 3), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/net/wifi/cts/WifiBackupRestoreTest.java', 3), ('/android/net/cts/DnsTest.java', 3), ('/android/net/ipsec/ike/cts/ChildSessionParamsTest.java', 3), ('/android/webkit/cts/WebSettingsTest.java', 2), ('/com/android/cts/devicepolicy/DeviceOwnerTest.java', 2), ('/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 2), ('/android/net/cts/IpConfigurationTest.java', 2), ('/android/appsecurity/cts/ListeningPortsTest.java', 2), ('/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 2), ('/android/telecom/cts/BasicInCallServiceTest.java', 2), ('/com/android/cts/net/hostside/VpnTest.java', 2), ('/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java', 2), ('/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java', 2), ('/android/net/wifi/cts/NsdManagerTest.java', 2), ('/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/android/permission/cts/NoNetworkStatePermissionTest.java', 2), ('/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 2), ('/android/media/cts/PresentationSyncTest.java', 2), ('/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 2)]	"[('([1:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[1]:method_text:[SELinuxTargetSdkTestBase {     /**      * Verify that net.dns properties may not be read      */    ])', 4), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[public void testNoDns() throws IOException {         noDns();     }      ])', 2), ('([2:/android/net/cts/DnsResolverTest.java]:[DNS]:[2]:method_text:[  latch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));             } while (retry);         }     }     ])', 2), ('([1:/android/webkit/cts/WebSettingsTest.java]:[C-1-3]:[1]:method_text:[l:\\n%s"", patternString, useragent),                     patternMatcher.find());         }     }     ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DNS]:[2]:method_text:[) {             return;         }         executeDeviceOwnerTest(""PrivateDnsPolicyTest"");     }     ])', 1), (""([1:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[DNS]:[1]:method_text:[ there's one user on the device or all      * secondary users / profiles are affiliated.      */    ])"", 1), ('([28:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[DNS]:[28]:method_text:[s addr) {         return ((addr instanceof Inet4Address) || (addr instanceof Inet6Address));     } }])', 1), ('([5:/android/net/cts/IpSecManagerTest.java]:[DNS]:[5]:method_text:[loc the same SPI that was specifically created (expect SpiUnavailable)      * Close SPIs      */    ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[DNS]:[1]:method_text:[      * send data on socket      * release transform      * send data (expect exception)      */    ])', 1), ('([1:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[DNS]:[1]:method_text:[not used in test.                     // UserManager.DISALLOW_DEBUGGING_FEATURES             );     ])', 1), ('([9:/android/net/cts/IpConfigurationTest.java]:[DNS]:[9]:method_text:[NS)                 .build();          mProxy = ProxyInfo.buildDirectProxy(""test"", 8888);     }     ])', 1), ('([3:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[DNS]:[3]:method_text:[redCallbacks) {             mCdm.unregisterConnectivityDiagnosticsCallback(cb);         }     }     ])', 1), ('([4:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[DNS]:[4]:method_text:[TS);          verifyOnDataStallSuspected(DETECTION_METHOD_DNS_EVENTS, TIMESTAMP, extras);     }     ])', 1), ('([2:/android/appsecurity/cts/ListeningPortsTest.java]:[DNS]:[2]:method_text:[);             }         }         contents.append(""\'"");         return contents.toString();     } }])', 1), ('([2:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[DNS]:[2]:method_text:[p);         verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);     }     ])', 1), ('([43:/android/net/cts/DnsResolverTest.java]:[DNS]:[43]:method_text:[    assertGreaterThan(mMsg + "" No question found"", mDnsAnswer.getQDCount(), 0);         }     }     ])', 1), ('([2:/android/net/cts/DnsResolverTest.java]:[DNS]:[2]:method_text:[hPrivateDns() throws Exception {         doTestRawQueryNXDomainWithPrivateDns(mExecutor);     }     ])', 1), ('([22:/android/net/cts/DnsResolverTest.java]:[DNS]:[22]:method_text:[              callback.waitForAnswer());             callback.assertNXDomain();         }     }     ])', 1), ('([4:/android/net/cts/DnsResolverTest.java]:[DNS]:[4]:method_text:[solver.DnsException error) {             mErrorMsg = mMsg + error.getMessage();         }     }     ])', 1), ('([1:/android/net/cts/DnsResolverTest.java]:[DNS]:[1]:method_text:[            assertTrue(msg + "" returned 0 results"", !callback.isAnswerEmpty());         }     }     ])', 1), ('([4:/android/net/cts/DnsResolverTest.java]:[DNS]:[4]:method_text:[         assertTrue(msg + "" returned Ipv4 results"", !callback.hasIpv4Answer());         }     }     ])', 1), ('([28:/android/net/cts/DnsResolverTest.java]:[DNS]:[28]:method_text:[   queryV6 ? !callback.hasIpv4Answer() : !callback.hasIpv6Answer());             }         }     } }])', 1), ('([1:/android/telecom/cts/BasicInCallServiceTest.java]:[C-1-3]:[1]:method_text:[tDialer);         }         super.tearDown();     }      @CddTest(requirement = ""7.4.1.2/C-1-3"")    ])', 1), ('([57:/com/android/cts/net/hostside/VpnTest.java]:[DNS]:[57]:method_text:[      super.onReceive(context, intent);             }             received = true;         }     } }])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([2:/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java]:[DNS]:[2]:method_text:[led && isWifiConnected()) {                 disconnectFromWifi();             }         }     }     ])', 1), ('([1:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[1]:method_text:[.55""));     private static final int MTU_V4 = 1440;     private static final int MTU_V6 = 1400;     ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[getMtuV4()).isEqualTo(MTU_V4);         assertThat(response.getMtuV6()).isEqualTo(MTU_V6);     }     ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[TU_V6)                 .build();          assertThat(response).isEqualTo(equalsResponse);     }     ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[t(response).isNotEqualTo(null);         assertThat(response).isNotEqualTo(new String[1]);     }     ])', 1), ('([2:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[2]:method_text:[EATOR.createFromParcel(stateParcel);         assertThat(response).isEqualTo(parcelResponse);     } }])', 1), (""([1:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[DNS]:[1]:method_text:[     * a no-op, will only ensure that the device does not crash when invoking the API's.      */    ])"", 1), ('([2:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[DNS]:[2]:method_text:[ is deserialized correctly from AOSP      * legacy supplicant/ipconf backup data format.      */    ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java]:[DNS]:[4]:method_text:[Double) stats.getValue(SensorStats.JITTER_95_PERCENTILE_PERCENT_KEY),                 0.01);     } }])', 1), ('([3:/android/net/wifi/cts/NsdManagerTest.java]:[DNS]:[3]:method_text:[l);         }         catch (InterruptedException ex) {             return false;         }     } } ])', 1), ('([7:/android/net/cts/DnsTest.java]:[DNS]:[7]:method_text:[     */     @SkipPresubmit(reason = ""IPv6 support may be missing on presubmit virtual hardware"")    ])', 1), ('([11:/android/net/cts/DnsTest.java]:[DNS]:[11]:method_text:[ECONDS));         } finally {             mCm.unregisterNetworkCallback(callback);         }     } }])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[DNS]:[2]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;             }         }     } }])', 1), ('([9:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[9]:method_text:[DNS, false);         mDevicePolicyManager.setGlobalPrivateDnsModeOpportunistic(getWho());     }     ])', 1), ('([3:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[3]:method_text:[r.hasUserRestriction(                 UserManager.DISALLOW_CONFIG_PRIVATE_DNS)).isTrue();     }     ])', 1), ('([14:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[14]:method_text:[privateDnsHost, expectedResult, resultCode),                 expectedResult, resultCode);     }     ])', 1), ('([5:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[5]:method_text:[IC);         assertThat(mDevicePolicyManager.getGlobalPrivateDnsHost(getWho())).isNull();     }     ])', 1), ('([7:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[7]:method_text:[er.getGlobalPrivateDnsHost(getWho())).isEqualTo(                 VALID_PRIVATE_DNS_HOST);     }     ])', 1), ('([4:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[4]:method_text:[TE_DNS_HOST,                 DevicePolicyManager.PRIVATE_DNS_SET_ERROR_HOST_NOT_SERVING);     }     ])', 1), ('([11:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[11]:method_text:[ISTIC);         assertThat(mDevicePolicyManager.getGlobalPrivateDnsHost(getWho())).isNull();     } }])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[Verify that selinux context is the expected domain based on      * targetSdkVersion = 28      */    ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[1]:method_text:[cuteFromHomeDir());     }      /**      * Verify that net.dns properties may not be read      */    ])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[Verify that selinux context is the expected domain based on      * targetSdkVersion = 25      */    ])', 1), ('([2:/android/net/ipsec/ike/cts/ChildSessionParamsTest.java]:[DNS]:[2]:method_text:[BOUND_V4_TS, OUTBOUND_V6_TS),                 childParams.getOutboundTrafficSelectors());     }     ])', 1), ('([4:/android/net/ipsec/ike/cts/ChildSessionParamsTest.java]:[DNS]:[4]:method_text:[any expected address is not found in result         assertTrue(expectedAddresses.isEmpty());     } }])', 1), ('([1:/android/permission/cts/NoNetworkStatePermissionTest.java]:[DNS]:[1]:method_text:[w.google.com"");             fail();         } catch (SecurityException expected) {         }     } }])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[ify that selinux context is the expected domain based on      * targetSdkVersion = 26-27      */    ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[DNS]:[1]:method_text:[ISALLOW_CONFIG_DATE_TIME,                     UserManager.DISALLOW_AIRPLANE_MODE             );     ])', 1), ('([8:/android/media/cts/PresentationSyncTest.java]:[DNS]:[8]:method_text:[sleep(10); }                 catch (InterruptedException ignored) {}             }         }     } }])', 1), ('([3:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[3]:method_text:[  testableNetworks.size() >= 1);         return testableNetworks.toArray(new Network[0]);     }     ])', 1), ('([2:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[2]:method_text:[      @AppModeFull(reason = ""WRITE_SECURE_SETTINGS permission can\'t be granted to instant apps"")    ])', 1), ('([11:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[11]:method_text:[        }         } finally {             mCtsNetUtils.restorePrivateDnsSetting();         }     } }])', 1), ('([2:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[DNS]:[2]:method_text:[tion(expectedUs);         verification.addSensorEvents(events);         return verification;     } }])', 1)]"					
204:632149) 7.4.5.3  . Captive Portals	7.4.5.3	C-1-4		[('android.security.SELinuxTargetSdkTest', 10), ('android.net.cts.DnsResolverTest', 9), ('com.android.cts.deviceowner.PrivateDnsPolicyTest', 7), ('android.telephony.cts.DataCallResponseTest', 5), ('android.opengl.cts.OpenGlEsVersionTest', 3), ('android.net.cts.MultinetworkApiTest', 3), ('com.android.cts.deviceowner.NetworkLoggingTest', 2), ('android.net.cts.IpSecManagerTest', 2), ('android.net.cts.ConnectivityDiagnosticsManagerTest', 2), ('android.net.wifi.cts.WifiBackupRestoreTest', 2), ('android.net.cts.DnsTest', 2), ('android.net.ipsec.ike.cts.ChildSessionParamsTest', 2), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 1), ('com.android.cts.devicepolicy.DeviceOwnerTest', 1), ('android.media.cts.AudioManagerTest', 1), ('com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest', 1), ('android.net.cts.IpConfigurationTest', 1), ('android.media.cts.AudioRecordTest', 1), ('android.appsecurity.cts.ListeningPortsTest', 1), ('android.net.ipsec.ike.cts.IkeSessionPskTest', 1), ('com.android.cts.net.hostside.VpnTest', 1), ('android.net.cts.legacy.api22.ConnectivityManagerLegacyTest', 1), ('android.hardware.cts.helpers.sensorverification.JitterVerificationTest', 1), ('android.net.wifi.cts.NsdManagerTest', 1), ('android.hardware.camera2.cts.CaptureRequestTest', 1), ('android.media.cts.MediaRecorderTest', 1), ('android.permission.cts.NoNetworkStatePermissionTest', 1), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 1), ('android.media.cts.PresentationSyncTest', 1), ('android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest', 1)]	[('setUp', 14), ('getContext', 11), ('tearDown', 9), ('getInstrumentation', 5), ('getWho', 4), ('getContentResolver', 3), ('getPackageName', 3), ('Builder', 3), ('build', 3), ('getSoftLifetimeSeconds', 3), ('run', 2), ('getPackageManager', 2), ('storePrivateDnsSetting', 2), ('restorePrivateDnsSetting', 2), ('Object', 2), ('getSaProposals', 2), ('getHardLifetimeSeconds', 2), ('getInboundTrafficSelectors', 2), ('getOutboundTrafficSelectors', 2), ('BroadcastReceiver', 1), ('getAction', 1), ('getCount', 1), ('countDown', 1), ('getSimpleName', 1), ('Binder', 1), ('getInstance', 1), ('getMainLooper', 1), ('supportedHardware', 1), ('getTargetContext', 1), ('bind', 1), ('waitForIdle', 1), ('unbind', 1), ('stopVpn', 1), ('buildChildSaProposalWithCombinedModeCipher', 1)]	[('CtsTelephonyTestCases', 5), ('CtsMediaTestCases', 4), ('CtsIkeTestCases', 3), ('CtsOpenGLTestCases', 3), ('CtsWifiTestCases', 3), ('CtsSelinuxTargetSdk29TestCases', 2), ('CtsSensorTestCases', 2), ('CtsSelinuxTargetSdk28TestCases', 2), ('CtsSelinuxTargetSdk25TestCases', 2), ('CtsSelinuxTargetSdkCurrentTestCases', 2), ('CtsSelinuxTargetSdk27TestCases', 2), ('CtsContactsProviderTestCases', 1), ('CtsNetTestCases', 1), ('CtsCameraTestCases', 1), ('CtsPermissionTestCases', 1)]		7.4.5.3/C-1-4	"""C-1-4] MUST use encrypted DNS as per the SDK documentation for android.net.LinkProperties.getPrivateDnsServerName and android.net.LinkProperties.isPrivateDnsActive for all network traffic that is not explicitly communicating with the captive portal. """	07040503.670104	android.net.LinkProperties.getPrivateDnsServerName DNS 7.4.5.3/C-1-4 android.net.LinkProperties.isPrivateDnsActive C-1-4 7.4.5.3				[('DNS', 60), ('C-1-4', 7)]		CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest.testAccountRemovalWithMergedContact_deletesContacts None:com.android.cts.devicepolicy.DeviceOwnerTest.testPrivateDnsPolicy None:com.android.cts.deviceowner.NetworkLoggingTest.testNetworkLoggingAndRetrieval CtsMediaTestCases:android.media.cts.AudioManagerTest.testAdjustSuggestedStreamVolumeWithIllegalArguments None:android.net.cts.IpSecManagerTest.testAllocSpi None:android.net.cts.ConnectivityDiagnosticsManagerTest.TestNetworkCallback None:android.net.cts.ConnectivityDiagnosticsManagerTest.testOnDataStallSuspected_DnsEvents CtsSelinuxTargetSdk29TestCases:android.security.SELinuxTargetSdkTest.testNoDns CtsMediaTestCases:android.media.cts.AudioRecordTest.testMediaMetrics None:android.appsecurity.cts.ListeningPortsTest.testNoListeningLoopbackUdp6Ports CtsIkeTestCases:android.net.ipsec.ike.cts.IkeSessionPskTest.testIkeSessionSetupAndChildSessionSetupWithTunnelModeV6 CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testExtensionPack CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensionsForHdrCapableDisplay CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredGLESVersion None:android.net.cts.DnsResolverTest.getTestableNetworks None:android.net.cts.DnsResolverTest.testRawQueryNXDomainWithPrivateDns None:android.net.cts.DnsResolverTest.testRawQueryNXDomainInlineWithPrivateDns None:android.net.cts.DnsResolverTest.testRawQueryCancel None:android.net.cts.DnsResolverTest.testRawQueryBlobCancel None:android.net.cts.DnsResolverTest.testCancelBeforeQuery None:android.net.cts.DnsResolverTest.testContinuousQueriesInline None:android.net.cts.DnsResolverTest.testQueryCancelForInetAddress None:android.net.cts.DnsResolverTest.testPrivateDnsBypass None:com.android.cts.net.hostside.VpnTest.finish CtsNetTestCases:android.net.cts.legacy.api22.ConnectivityManagerLegacyTest.testStartUsingNetworkFeature_enableHipri CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testConstructorAndGetters CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testEquals CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testNotEquals CtsTelephonyTestCases:android.telephony.cts.DataCallResponseTest.testParcel CtsWifiTestCases:android.net.wifi.cts.WifiBackupRestoreTest.isNotNull CtsWifiTestCases:android.net.wifi.cts.WifiBackupRestoreTest.testCanRestoreSoftApBackupData CtsSensorTestCases:android.hardware.cts.helpers.sensorverification.JitterVerificationTest.testCalculateDelta CtsWifiTestCases:android.net.wifi.cts.NsdManagerTest.testNDSManager None:android.net.cts.DnsTest.testNativeDns None:android.net.cts.DnsTest.testDnsWorks CtsCameraTestCases:android.hardware.camera2.cts.CaptureRequestTest.testExtendedSceneModes None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testDisallowPrivateDnsConfigurationRestriction None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testClearDisallowPrivateDnsConfigurationRestriction None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testSetOpportunisticMode None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testSetSpecificHostMode None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testSetModeWithIncorrectHost None:com.android.cts.deviceowner.PrivateDnsPolicyTest.testCanSetModeDespiteUserRestriction CtsSelinuxTargetSdk28TestCases:android.security.SELinuxTargetSdkTest.testNoDns CtsMediaTestCases:android.media.cts.MediaRecorderTest.testRecordingAudioInRawFormats CtsSelinuxTargetSdk25TestCases:android.security.SELinuxTargetSdkTest.testCanExecuteFromHomeDir CtsSelinuxTargetSdk25TestCases:android.security.SELinuxTargetSdkTest.testNoDns CtsIkeTestCases:android.net.ipsec.ike.cts.ChildSessionParamsTest.testBuildChildSessionParamsWithConfigReq CtsPermissionTestCases:android.permission.cts.NoNetworkStatePermissionTest.testSecurityExceptionFromDns CtsSelinuxTargetSdkCurrentTestCases:android.security.SELinuxTargetSdkTest.testNoDns CtsSelinuxTargetSdk27TestCases:android.security.SELinuxTargetSdkTest.testNoDns None:com.android.cts.deviceandprofileowner.UserRestrictionsParentTest.testPerProfileUserRestriction_onParent CtsMediaTestCases:android.media.cts.PresentationSyncTest.testThroughput None:android.net.cts.MultinetworkApiTest.getTestableNetworks None:android.net.cts.MultinetworkApiTest.testResNApi None:android.net.cts.MultinetworkApiTest.testResNApiNXDomainPrivateDns CtsSensorTestCases:android.hardware.cts.helpers.sensorverification.TimestampClockSourceVerificationTest.testVerify_no_events_fail		[('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/DnsResolverTest.java', 9), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PrivateDnsPolicyTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/DataCallResponseTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/MultinetworkApiTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/NetworkLoggingTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpSecManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk29/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiBackupRestoreTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/DnsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk28/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk25/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/ChildSessionParamsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdkCurrent/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/selinux/selinuxTargetSdk27/src/android/security/SELinuxTargetSdkTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioRecordTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ListeningPortsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/net/app/src/com/android/cts/net/hostside/VpnTest.java', 1), ('/home/gpoor/cts-source/cts/tests/netlegacy22.api/src/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/NsdManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRecorderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/NoNetworkStatePermissionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 1)]	[('/android/security/SELinuxTargetSdkTest.java', 15), ('/android/net/cts/DnsResolverTest.java', 10), ('/com/android/cts/deviceowner/PrivateDnsPolicyTest.java', 8), ('/android/telephony/cts/DataCallResponseTest.java', 6), ('/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/android/net/cts/MultinetworkApiTest.java', 4), ('/com/android/cts/deviceowner/NetworkLoggingTest.java', 3), ('/android/net/cts/IpSecManagerTest.java', 3), ('/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 3), ('/android/net/wifi/cts/WifiBackupRestoreTest.java', 3), ('/android/net/cts/DnsTest.java', 3), ('/android/net/ipsec/ike/cts/ChildSessionParamsTest.java', 3), ('/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/com/android/cts/devicepolicy/DeviceOwnerTest.java', 2), ('/android/media/cts/AudioManagerTest.java', 2), ('/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 2), ('/android/net/cts/IpConfigurationTest.java', 2), ('/android/media/cts/AudioRecordTest.java', 2), ('/android/appsecurity/cts/ListeningPortsTest.java', 2), ('/android/net/ipsec/ike/cts/IkeSessionPskTest.java', 2), ('/com/android/cts/net/hostside/VpnTest.java', 2), ('/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java', 2), ('/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java', 2), ('/android/net/wifi/cts/NsdManagerTest.java', 2), ('/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/android/media/cts/MediaRecorderTest.java', 2), ('/android/permission/cts/NoNetworkStatePermissionTest.java', 2), ('/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 2), ('/android/media/cts/PresentationSyncTest.java', 2), ('/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java', 2)]	"[('([1:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[1]:method_text:[SELinuxTargetSdkTestBase {     /**      * Verify that net.dns properties may not be read      */    ])', 4), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[public void testNoDns() throws IOException {         noDns();     }      ])', 2), ('([2:/android/net/cts/DnsResolverTest.java]:[DNS]:[2]:method_text:[  latch.await(TIMEOUT_MS, TimeUnit.MILLISECONDS));             } while (retry);         }     }     ])', 2), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[C-1-4]:[1]:method_text:[ut this should not be done for the local account.      */     @CddTest(requirement=""3.18/C-1-4"")    ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DNS]:[2]:method_text:[) {             return;         }         executeDeviceOwnerTest(""PrivateDnsPolicyTest"");     }     ])', 1), (""([1:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[DNS]:[1]:method_text:[ there's one user on the device or all      * secondary users / profiles are affiliated.      */    ])"", 1), ('([28:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[DNS]:[28]:method_text:[s addr) {         return ((addr instanceof Inet4Address) || (addr instanceof Inet6Address));     } }])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[C-1-4]:[1]:method_text:[treamVolume(AudioManager.ADJUST_RAISE, 66747, 0);     }      @CddTest(requirement=""5.4.1/C-1-4"")    ])', 1), ('([5:/android/net/cts/IpSecManagerTest.java]:[DNS]:[5]:method_text:[loc the same SPI that was specifically created (expect SpiUnavailable)      * Close SPIs      */    ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[DNS]:[1]:method_text:[      * send data on socket      * release transform      * send data (expect exception)      */    ])', 1), ('([1:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[DNS]:[1]:method_text:[not used in test.                     // UserManager.DISALLOW_DEBUGGING_FEATURES             );     ])', 1), ('([9:/android/net/cts/IpConfigurationTest.java]:[DNS]:[9]:method_text:[NS)                 .build();          mProxy = ProxyInfo.buildDirectProxy(""test"", 8888);     }     ])', 1), ('([3:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[DNS]:[3]:method_text:[redCallbacks) {             mCdm.unregisterConnectivityDiagnosticsCallback(cb);         }     }     ])', 1), ('([4:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[DNS]:[4]:method_text:[TS);          verifyOnDataStallSuspected(DETECTION_METHOD_DNS_EVENTS, TIMESTAMP, extras);     }     ])', 1), ('([1:/android/media/cts/AudioRecordTest.java]:[C-1-4]:[1]:method_text:[tDirectionality());         Log.i(TAG, ""******"");     }      @CddTest(requirement=""5.4.1/C-1-4"")    ])', 1), ('([2:/android/appsecurity/cts/ListeningPortsTest.java]:[DNS]:[2]:method_text:[);             }         }         contents.append(""\'"");         return contents.toString();     } }])', 1), ('([2:/android/net/ipsec/ike/cts/IkeSessionPskTest.java]:[DNS]:[2]:method_text:[p);         verifyCloseIkeAndChildBlocking(firstTransformRecordA, firstTransformRecordB);     }     ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-1-4]:[1]:method_text:[st."",             hasAepFeature, hasAepExtension);     }     @CddTest(requirement=""7.9.2/C-1-4"")    ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-1-4]:[1]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");         }     }      @CddTest(requirement=""7.1.4.5/C-1-4"")    ])', 1), ('([2:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-1-4]:[2]:method_text:[        2 == getMinorVersion(reportedVersion));     }      @CddTest(requirement=""7.1.4.5/C-1-5"")    ])', 1), ('([43:/android/net/cts/DnsResolverTest.java]:[DNS]:[43]:method_text:[    assertGreaterThan(mMsg + "" No question found"", mDnsAnswer.getQDCount(), 0);         }     }     ])', 1), ('([2:/android/net/cts/DnsResolverTest.java]:[DNS]:[2]:method_text:[hPrivateDns() throws Exception {         doTestRawQueryNXDomainWithPrivateDns(mExecutor);     }     ])', 1), ('([22:/android/net/cts/DnsResolverTest.java]:[DNS]:[22]:method_text:[              callback.waitForAnswer());             callback.assertNXDomain();         }     }     ])', 1), ('([4:/android/net/cts/DnsResolverTest.java]:[DNS]:[4]:method_text:[solver.DnsException error) {             mErrorMsg = mMsg + error.getMessage();         }     }     ])', 1), ('([1:/android/net/cts/DnsResolverTest.java]:[DNS]:[1]:method_text:[            assertTrue(msg + "" returned 0 results"", !callback.isAnswerEmpty());         }     }     ])', 1), ('([4:/android/net/cts/DnsResolverTest.java]:[DNS]:[4]:method_text:[         assertTrue(msg + "" returned Ipv4 results"", !callback.hasIpv4Answer());         }     }     ])', 1), ('([28:/android/net/cts/DnsResolverTest.java]:[DNS]:[28]:method_text:[   queryV6 ? !callback.hasIpv4Answer() : !callback.hasIpv6Answer());             }         }     } }])', 1), ('([57:/com/android/cts/net/hostside/VpnTest.java]:[DNS]:[57]:method_text:[      super.onReceive(context, intent);             }             received = true;         }     } }])', 1), ('([2:/android/net/cts/legacy/api22/ConnectivityManagerLegacyTest.java]:[DNS]:[2]:method_text:[led && isWifiConnected()) {                 disconnectFromWifi();             }         }     }     ])', 1), ('([1:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[1]:method_text:[.55""));     private static final int MTU_V4 = 1440;     private static final int MTU_V6 = 1400;     ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[getMtuV4()).isEqualTo(MTU_V4);         assertThat(response.getMtuV6()).isEqualTo(MTU_V6);     }     ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[TU_V6)                 .build();          assertThat(response).isEqualTo(equalsResponse);     }     ])', 1), ('([4:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[4]:method_text:[t(response).isNotEqualTo(null);         assertThat(response).isNotEqualTo(new String[1]);     }     ])', 1), ('([2:/android/telephony/cts/DataCallResponseTest.java]:[DNS]:[2]:method_text:[EATOR.createFromParcel(stateParcel);         assertThat(response).isEqualTo(parcelResponse);     } }])', 1), (""([1:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[DNS]:[1]:method_text:[     * a no-op, will only ensure that the device does not crash when invoking the API's.      */    ])"", 1), ('([2:/android/net/wifi/cts/WifiBackupRestoreTest.java]:[DNS]:[2]:method_text:[ is deserialized correctly from AOSP      * legacy supplicant/ipconf backup data format.      */    ])', 1), ('([4:/android/hardware/cts/helpers/sensorverification/JitterVerificationTest.java]:[DNS]:[4]:method_text:[Double) stats.getValue(SensorStats.JITTER_95_PERCENTILE_PERCENT_KEY),                 0.01);     } }])', 1), ('([3:/android/net/wifi/cts/NsdManagerTest.java]:[DNS]:[3]:method_text:[l);         }         catch (InterruptedException ex) {             return false;         }     } } ])', 1), ('([7:/android/net/cts/DnsTest.java]:[DNS]:[7]:method_text:[     */     @SkipPresubmit(reason = ""IPv6 support may be missing on presubmit virtual hardware"")    ])', 1), ('([11:/android/net/cts/DnsTest.java]:[DNS]:[11]:method_text:[ECONDS));         } finally {             mCm.unregisterNetworkCallback(callback);         }     } }])', 1), ('([2:/android/hardware/camera2/cts/CaptureRequestTest.java]:[DNS]:[2]:method_text:[                  maxDist, Math.abs(a.bottom - e.bottom))) continue;             }         }     } }])', 1), ('([9:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[9]:method_text:[DNS, false);         mDevicePolicyManager.setGlobalPrivateDnsModeOpportunistic(getWho());     }     ])', 1), ('([3:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[3]:method_text:[r.hasUserRestriction(                 UserManager.DISALLOW_CONFIG_PRIVATE_DNS)).isTrue();     }     ])', 1), ('([14:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[14]:method_text:[privateDnsHost, expectedResult, resultCode),                 expectedResult, resultCode);     }     ])', 1), ('([5:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[5]:method_text:[IC);         assertThat(mDevicePolicyManager.getGlobalPrivateDnsHost(getWho())).isNull();     }     ])', 1), ('([7:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[7]:method_text:[er.getGlobalPrivateDnsHost(getWho())).isEqualTo(                 VALID_PRIVATE_DNS_HOST);     }     ])', 1), ('([4:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[4]:method_text:[TE_DNS_HOST,                 DevicePolicyManager.PRIVATE_DNS_SET_ERROR_HOST_NOT_SERVING);     }     ])', 1), ('([11:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[DNS]:[11]:method_text:[ISTIC);         assertThat(mDevicePolicyManager.getGlobalPrivateDnsHost(getWho())).isNull();     } }])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[Verify that selinux context is the expected domain based on      * targetSdkVersion = 28      */    ])', 1), ('([1:/android/media/cts/MediaRecorderTest.java]:[C-1-4]:[1]:method_text:[MediaRecorder.setMaxFileSize(MAX_FILE_SIZE * 10);     }      @CddTest(requirement=""5.4.1/C-1-4"")    ])', 1), ('([1:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[1]:method_text:[cuteFromHomeDir());     }      /**      * Verify that net.dns properties may not be read      */    ])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[Verify that selinux context is the expected domain based on      * targetSdkVersion = 25      */    ])', 1), ('([2:/android/net/ipsec/ike/cts/ChildSessionParamsTest.java]:[DNS]:[2]:method_text:[BOUND_V4_TS, OUTBOUND_V6_TS),                 childParams.getOutboundTrafficSelectors());     }     ])', 1), ('([4:/android/net/ipsec/ike/cts/ChildSessionParamsTest.java]:[DNS]:[4]:method_text:[any expected address is not found in result         assertTrue(expectedAddresses.isEmpty());     } }])', 1), ('([1:/android/permission/cts/NoNetworkStatePermissionTest.java]:[DNS]:[1]:method_text:[w.google.com"");             fail();         } catch (SecurityException expected) {         }     } }])', 1), ('([2:/android/security/SELinuxTargetSdkTest.java]:[DNS]:[2]:method_text:[ify that selinux context is the expected domain based on      * targetSdkVersion = 26-27      */    ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[DNS]:[1]:method_text:[ISALLOW_CONFIG_DATE_TIME,                     UserManager.DISALLOW_AIRPLANE_MODE             );     ])', 1), ('([8:/android/media/cts/PresentationSyncTest.java]:[DNS]:[8]:method_text:[sleep(10); }                 catch (InterruptedException ignored) {}             }         }     } }])', 1), ('([3:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[3]:method_text:[  testableNetworks.size() >= 1);         return testableNetworks.toArray(new Network[0]);     }     ])', 1), ('([2:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[2]:method_text:[      @AppModeFull(reason = ""WRITE_SECURE_SETTINGS permission can\'t be granted to instant apps"")    ])', 1), ('([11:/android/net/cts/MultinetworkApiTest.java]:[DNS]:[11]:method_text:[        }         } finally {             mCtsNetUtils.restorePrivateDnsSetting();         }     } }])', 1), ('([2:/android/hardware/cts/helpers/sensorverification/TimestampClockSourceVerificationTest.java]:[DNS]:[2]:method_text:[tion(expectedUs);         verification.addSensorEvents(events);         return verification;     } }])', 1)]"					
204:632149) 7.4.5.3  . Captive Portals	7.4.5.3	C-1-5		[('android.media.cts.MediaBrowserTest', 8), ('android.net.wifi.cts.WifiManagerTest', 6), ('android.app.cts.ActivityManagerProcessStateTest', 5), ('android.bluetooth.cts.HearingAidProfileTest', 5), ('android.media.cts.MediaScannerTest', 5), ('android.telecom.cts.BackgroundCallAudioTest', 3), ('android.permission.cts.NoWifiStatePermissionTest', 3), ('com.android.cts.deviceowner.NetworkLoggingTest', 2), ('android.car.cts.CarAppFocusManagerTest', 2), ('android.net.cts.ConnectivityManagerTest', 2), ('android.car.cts.CarTest', 2), ('android.net.cts.IpSecBaseTest', 2), ('android.quickaccesswallet.cts.QuickAccessWalletClientTest', 2), ('android.telecom.cts.RemoteConnectionTest', 2), ('android.media.cts.MediaScannerConnectionTest', 2), ('android.telecom.cts.HandoverTest', 2), ('android.net.wifi.cts.ConnectedNetworkScorerTest', 2), ('com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity', 2), ('android.os.cts.StrictModeTest', 1), ('android.suspendapps.cts.SuspendPackagesTest', 1), ('android.net.wifi.cts.WifiLocationInfoTest', 1), ('android.media.cts.NativeDecoderTest', 1), ('android.security.cts.StagefrightTest', 1), ('android.net.wifi.cts.WifiInfoTest', 1), ('android.security.cts.MetadataEncryptionTest', 1), ('android.telecom.cts.RemoteConferenceTest', 1), ('android.telecom.cts.PhoneAccountSuggestionServiceTest', 1), ('android.appsecurity.cts.listeningports.ListeningPortsTest', 1), ('android.media.cts.StreamingMediaPlayerTest', 1), ('android.telecom.cts.VideoCallTest', 1), ('android.security.NetworkSecurityPolicyTestBase', 1), ('android.telecom.cts.CallDetailsTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.media.cts.MediaBrowserServiceTest', 1), ('com.android.cts.appaccessdata.AccessPrivateDataTest', 1), ('android.net.cts.SSLCertificateSocketFactoryTest', 1), ('android.telecom.cts.BasicInCallServiceTest', 1), ('com.android.cts.net.hostside.VpnTest', 1), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 1), ('android.net.cts.network.permission.UpdateStatsPermissionTest', 1), ('android.os.cts.ParcelFileDescriptorTest', 1), ('android.suspendapps.cts.DualSuspendTests', 1), ('com.android.cts.deviceandprofileowner.AlwaysOnVpnTest', 1), ('com.android.cts.delegate.NetworkLoggingDelegateTest', 1), ('com.android.server.cts.device.statsd.AtomTests', 1), ('android.media.cts.MediaSession2ServiceTest', 1), ('android.keystore.cts.KeyPairGeneratorTest', 1), ('android.jvmti.cts.JvmtiAttachingHostTest', 1), ('android.telecom.cts.OutgoingCallTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.app.usage.cts.NetworkUsageStatsTest', 1), ('android.graphics.cts.ColorSpaceTest', 1), ('android.permission.cts.NoNetworkStatePermissionTest', 1), ('com.android.cts.deviceowner.proxy.PacProxyTest', 1), ('android.telecom.cts.ExtendedInCallServiceTest', 1), ('android.net.cts.TrafficStatsTest', 1), ('android.net.wifi.cts.ScanResultTest', 1), ('android.media.cts.ConnectionStatus', 1), ('android.net.cts.VpnServiceTest', 1), ('android.net.cts.network.permission.InternetPermissionTest', 1), ('android.media.cts.MediaSession2Test', 1), ('android.suspendapps.cts.DialogTests', 1), ('android.security.net.config.cts.DownloadManagerTest', 1), ('android.cts.statsd.subscriber.ShellSubscriberTest', 1), ('android.media.cts.MediaPlayerFlakyNetworkTest', 1), ('com.android.cts.appwithdata.CreatePrivateDataTest', 1)]	[('setUp', 23), ('tearDown', 14), ('getInstrumentation', 12), ('getContext', 10), ('getSimpleName', 4), ('getPort', 4), ('receive', 4), ('notify', 4), ('size', 4), ('getWho', 3), ('getResources', 3), ('getTargetContext', 3), ('run', 2), ('getService', 2), ('getLastCall', 2), ('getBytes', 2), ('close', 2), ('getPackageName', 2), ('getDefaultHostnameVerifier', 2), ('waitForPacDownload', 2), ('getApplicationContext', 1), ('getThreadPolicy', 1), ('getVmPolicy', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('getCount', 1), ('countDown', 1), ('getUserSelectedOutgoingPhoneAccount', 1), ('getArguments', 1), ('getPackageManager', 1), ('getUiAutomation', 1), ('cellConnectAttempted', 1), ('StubConnectionCallback', 1), ('StubSubscriptionCallback', 1), ('StubItemCallback', 1), ('Object', 1), ('ConnectionCallback', 1), ('onConnected', 1), ('SubscriptionCallback', 1), ('ItemCallback', 1), ('Runnable', 1), ('Bundle', 1), ('myPid', 1), ('myUid', 1), ('connect', 1), ('getExternalMediaDirs', 1), ('getAbsolutePath', 1), ('cleanup', 1), ('getDevice', 1), ('getCurrentUser', 1), ('getNetworkType', 1), ('getTransportType', 1), ('getMetered', 1), ('startServer', 1), ('stopServer', 1), ('setPacURLAndWaitForDownload', 1), ('getPacURL', 1), ('getNotConnectedReason', 1), ('getActiveNetworkInfo', 1), ('getReason', 1), ('VpnService', 1), ('releaseMediaPlayer', 1), ('releaseHttpServer', 1)]	[('CtsMediaTestCases', 22), ('CtsTelecomTestCases', 14), ('CtsWifiTestCases', 11), ('CtsAppTestCases', 5), ('CtsBluetoothTestCases', 5), ('CtsCarTestCases', 4), ('CtsPermissionTestCases', 4), ('CtsSuspendAppsTestCases', 3), ('CtsOsHostTestCases', 2), ('CtsQuickAccessWalletTestCases', 2), ('CtsNetTestCases', 2), ('CtsGraphicsTestCases', 2), ('CtsSecurityTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsContactsProviderTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsUsageStatsTestCases', 1), ('CtsNetSecConfigDownloadManagerTestCases', 1)]		7.4.5.3/C-1-5	"""C-1-5] MUST ensure that, while the user is logging in to a captive portal, the default network used by applications (as returned by ConnectivityManager.getActiveNetwork, ConnectivityManager.registerDefaultNetworkCallback, and used by default by Java networking APIs such as java.net.Socket, and native APIs such as connect()) is any other available network that provides internet access, if available. <h4 id="""	07040503.670105	C-1-5 7.4.5.3/C-1-5 java.net.Socket 7.4.5.3 connect() ConnectivityManager.registerDefaultNetworkCallback ConnectivityManager.getActiveNetwork				[('connect()', 75), ('java.net.Socket', 23), ('C-1-5', 4), ('ConnectivityManager.getActiveNetwork', 3)]		CtsSuspendAppsTestCases:android.suspendapps.cts.SuspendPackagesTest.testOpCameraOnSuspend CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBackgroundCheckService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBackgroundCheckStopsService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBackgroundCheckBroadcastService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBackgroundCheckActivityService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testForegroundServiceAppOp None:com.android.cts.deviceowner.NetworkLoggingTest.testNetworkLoggingAndRetrieval CtsWifiTestCases:android.net.wifi.cts.WifiLocationInfoTest.isNotNull CtsSecurityTestCases:android.security.cts.StagefrightTest.TestName CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testDeprecatedApis CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testIsStaApConcurrencySupported CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testGetCurrentNetwork CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testDisableEphemeralNetwork CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testAllowAutojoin CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testAllowAutojoinGlobal CtsWifiTestCases:android.net.wifi.cts.WifiInfoTest.testWifiInfoProperties CtsTelecomTestCases:android.telecom.cts.RemoteConferenceTest.testRemoteConferenceCallbacks_Disconnect CtsTelecomTestCases:android.telecom.cts.PhoneAccountSuggestionServiceTest.disconnect CtsTelecomTestCases:android.telecom.cts.VideoCallTest.testSetZoom None:android.security.NetworkSecurityPolicyTestBase.testDefaultHttpURLConnection CtsCarTestCases:android.car.cts.CarAppFocusManagerTest.testFocusChange CtsCarTestCases:android.car.cts.CarAppFocusManagerTest.testFilter None:android.net.cts.ConnectivityManagerTest.disconnectFromCell None:android.net.cts.ConnectivityManagerTest.testOpenConnection CtsMediaTestCases:android.media.cts.MediaBrowserTest.disconnect CtsMediaTestCases:android.media.cts.MediaBrowserTest.testMediaBrowser CtsMediaTestCases:android.media.cts.MediaBrowserTest.testConnectTwice CtsMediaTestCases:android.media.cts.MediaBrowserTest.testConnectionFailed CtsMediaTestCases:android.media.cts.MediaBrowserTest.testReconnection CtsMediaTestCases:android.media.cts.MediaBrowserTest.testConnectionCallbackNotCalledAfterDisconnect CtsMediaTestCases:android.media.cts.MediaBrowserTest.testSubscriptionCallbackNotCalledAfterDisconnect CtsMediaTestCases:android.media.cts.MediaBrowserTest.testItemCallbackNotCalledAfterDisconnect CtsCarTestCases:android.car.cts.CarTest.isConnected CtsCarTestCases:android.car.cts.CarTest.testConnection None:android.net.cts.IpSecBaseTest.currentTimeMillis None:android.net.cts.IpSecBaseTest.currentTimeMillis CtsTelecomTestCases:android.telecom.cts.CallDetailsTest.testLogFeatures CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredGLESVersion CtsMediaTestCases:android.media.cts.MediaBrowserServiceTest.disconnect CtsQuickAccessWalletTestCases:android.quickaccesswallet.cts.QuickAccessWalletClientTest.testDisconnect_shouldClearListenersAndDisconnect CtsQuickAccessWalletTestCases:android.quickaccesswallet.cts.QuickAccessWalletClientTest.testConnect_disconnect_reconnect_shouldWork CtsTelecomTestCases:android.telecom.cts.RemoteConnectionTest.testRemoteConnectionOutgoingCall CtsTelecomTestCases:android.telecom.cts.RemoteConnectionTest.testRemoteConnectionCallbacks_Disconnect None:android.net.cts.SSLCertificateSocketFactoryTest.toList CtsTelecomTestCases:android.telecom.cts.BasicInCallServiceTest.testTelephonyCall_bindsToInCallServiceAndAddsCall CtsMediaTestCases:android.media.cts.MediaScannerConnectionTest.currentTimeMillis CtsMediaTestCases:android.media.cts.MediaScannerConnectionTest.testMediaScannerConnection CtsTelecomTestCases:android.telecom.cts.HandoverTest.testHandoverSourceFailed CtsTelecomTestCases:android.telecom.cts.HandoverTest.testHandoverDestinationFailed CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactDelete_setsDeleteFlag CtsTelecomTestCases:android.telecom.cts.BackgroundCallAudioTest.testAudioProcessingFromCallScreeningDisallow CtsTelecomTestCases:android.telecom.cts.BackgroundCallAudioTest.testManualAudioCallScreenReject CtsTelecomTestCases:android.telecom.cts.BackgroundCallAudioTest.testLowerApiLevelCompatibility2 CtsPermissionTestCases:android.permission.cts.NoWifiStatePermissionTest.testGetDhcpInfo CtsPermissionTestCases:android.permission.cts.NoWifiStatePermissionTest.testDisconnect CtsPermissionTestCases:android.permission.cts.NoWifiStatePermissionTest.testReconnect CtsSuspendAppsTestCases:android.suspendapps.cts.DualSuspendTests.testCannotSuspendUnderDisallowUninstallApps CtsWifiTestCases:android.net.wifi.cts.ConnectedNetworkScorerTest.isNotNull CtsWifiTestCases:android.net.wifi.cts.ConnectedNetworkScorerTest.testSetWifiConnectedNetworkScorer None:com.android.cts.delegate.NetworkLoggingDelegateTest.testNetworkLogging None:com.android.server.cts.device.statsd.AtomTests.testGenerateMobileTraffic CtsBluetoothTestCases:android.bluetooth.cts.HearingAidProfileTest.test_getProxyServiceConnect CtsBluetoothTestCases:android.bluetooth.cts.HearingAidProfileTest.test_getConnectionState CtsBluetoothTestCases:android.bluetooth.cts.HearingAidProfileTest.test_getConnectedDevices CtsBluetoothTestCases:android.bluetooth.cts.HearingAidProfileTest.test_getDevicesMatchingConnectionStates CtsBluetoothTestCases:android.bluetooth.cts.HearingAidProfileTest.test_getConnectionStateChangedIntent CtsMediaTestCases:android.media.cts.MediaScannerTest.currentTimeMillis CtsMediaTestCases:android.media.cts.MediaScannerTest.testLocalizeRingtoneTitles CtsMediaTestCases:android.media.cts.MediaScannerTest.testMediaScanner CtsMediaTestCases:android.media.cts.MediaScannerTest.testWildcardPaths CtsMediaTestCases:android.media.cts.MediaScannerTest.testCanonicalize CtsMediaTestCases:android.media.cts.MediaSession2ServiceTest.testOnGetSession_returnsSession CtsKeystoreTestCases:android.keystore.cts.KeyPairGeneratorTest.currentTimeMillis CtsTelecomTestCases:android.telecom.cts.OutgoingCallTest.testExtraPhoneAccountHandleAvailable CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkan1_1Requirements CtsUsageStatsTestCases:android.app.usage.cts.NetworkUsageStatsTest.getIsDefault CtsGraphicsTestCases:android.graphics.cts.ColorSpaceTest.testConnect CtsPermissionTestCases:android.permission.cts.NoNetworkStatePermissionTest.testGetActiveNetworkInfo CtsTelecomTestCases:android.telecom.cts.ExtendedInCallServiceTest.testAddNewOutgoingCallAndThenDisconnect CtsWifiTestCases:android.net.wifi.cts.ScanResultTest.testScanResultMatchesWifiInfo CtsMediaTestCases:android.media.cts.ConnectionStatus.isAvailable CtsMediaTestCases:android.media.cts.MediaSession2Test.testCallback_onConnect_onDisconnect CtsSuspendAppsTestCases:android.suspendapps.cts.DialogTests.testInterceptorActivity_moreDetails None:android.cts.statsd.subscriber.ShellSubscriberTest.testShellSubscriptionReconnect None:com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity.startTest None:com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity.startTest		[('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaBrowserTest.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 6), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/HearingAidProfileTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaScannerTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/BackgroundCallAudioTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/NoWifiStatePermissionTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/NetworkLoggingTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarAppFocusManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/car/src/android/car/cts/CarTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpSecBaseTest.java', 2), ('/home/gpoor/cts-source/cts/tests/quickaccesswallet/src/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/RemoteConnectionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaScannerConnectionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/HandoverTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConnectedNetworkScorerTest.java', 2), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/StrictModeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/SuspendPackagesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLocationInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/NativeDecoderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/StagefrightTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiInfoTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/MetadataEncryptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/RemoteConferenceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/PhoneAccountSuggestionServiceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/ListeningPortsApp/src/android/appsecurity/cts/listeningports/ListeningPortsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/StreamingMediaPlayerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/VideoCallTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/netsecpolicy/src/android/security/NetworkSecurityPolicyTestBase.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallDetailsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaBrowserServiceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/AppAccessData/src/com/android/cts/appaccessdata/AccessPrivateDataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/SSLCertificateSocketFactoryTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/BasicInCallServiceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/net/app/src/com/android/cts/net/hostside/VpnTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/netpermission/updatestatspermission/src/android/net/cts/network/permission/UpdateStatsPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/ParcelFileDescriptorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DualSuspendTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/NetworkLoggingDelegateTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/apps/statsdapp/src/com/android/server/cts/device/statsd/AtomTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaSession2ServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyPairGeneratorTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/jvmti/attaching/host/src/android/jvmti/cts/JvmtiAttachingHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/OutgoingCallTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/app.usage/src/android/app/usage/cts/NetworkUsageStatsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/ColorSpaceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/NoNetworkStatePermissionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/proxy/PacProxyTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/ExtendedInCallServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/TrafficStatsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ScanResultTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ConnectionStatus.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/VpnServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/netpermission/internetpermission/src/android/net/cts/network/permission/InternetPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaSession2Test.java', 1), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DialogTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/networksecurityconfig/networksecurityconfig-downloadmanager/src/android/security/net/config/cts/DownloadManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/subscriber/ShellSubscriberTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaPlayerFlakyNetworkTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/AppWithData/src/com/android/cts/appwithdata/CreatePrivateDataTest.java', 1)]	[('/android/media/cts/MediaBrowserTest.java', 9), ('/android/net/wifi/cts/WifiManagerTest.java', 7), ('/android/app/cts/ActivityManagerProcessStateTest.java', 6), ('/android/bluetooth/cts/HearingAidProfileTest.java', 6), ('/android/media/cts/MediaScannerTest.java', 6), ('/com/android/cts/deviceowner/NetworkLoggingTest.java', 4), ('/android/net/cts/ConnectivityManagerTest.java', 4), ('/android/net/cts/IpSecBaseTest.java', 4), ('/android/telecom/cts/BackgroundCallAudioTest.java', 4), ('/android/permission/cts/NoWifiStatePermissionTest.java', 4), ('/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 4), ('/android/car/cts/CarAppFocusManagerTest.java', 3), ('/android/car/cts/CarTest.java', 3), ('/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java', 3), ('/android/telecom/cts/RemoteConnectionTest.java', 3), ('/android/media/cts/MediaScannerConnectionTest.java', 3), ('/android/telecom/cts/HandoverTest.java', 3), ('/android/net/wifi/cts/ConnectedNetworkScorerTest.java', 3), ('/android/os/cts/StrictModeTest.java', 2), ('/android/suspendapps/cts/SuspendPackagesTest.java', 2), ('/android/net/wifi/cts/WifiLocationInfoTest.java', 2), ('/android/media/cts/NativeDecoderTest.java', 2), ('/android/security/cts/StagefrightTest.java', 2), ('/android/net/wifi/cts/WifiInfoTest.java', 2), ('/android/security/cts/MetadataEncryptionTest.java', 2), ('/android/telecom/cts/RemoteConferenceTest.java', 2), ('/android/telecom/cts/PhoneAccountSuggestionServiceTest.java', 2), ('/android/appsecurity/cts/listeningports/ListeningPortsTest.java', 2), ('/android/media/cts/StreamingMediaPlayerTest.java', 2), ('/android/telecom/cts/VideoCallTest.java', 2), ('/android/security/NetworkSecurityPolicyTestBase.java', 2), ('/android/telecom/cts/CallDetailsTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/media/cts/MediaBrowserServiceTest.java', 2), ('/com/android/cts/appaccessdata/AccessPrivateDataTest.java', 2), ('/android/net/cts/SSLCertificateSocketFactoryTest.java', 2), ('/android/telecom/cts/BasicInCallServiceTest.java', 2), ('/com/android/cts/net/hostside/VpnTest.java', 2), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/android/net/cts/network/permission/UpdateStatsPermissionTest.java', 2), ('/android/os/cts/ParcelFileDescriptorTest.java', 2), ('/android/suspendapps/cts/DualSuspendTests.java', 2), ('/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 2), ('/com/android/cts/delegate/NetworkLoggingDelegateTest.java', 2), ('/com/android/server/cts/device/statsd/AtomTests.java', 2), ('/android/media/cts/MediaSession2ServiceTest.java', 2), ('/android/keystore/cts/KeyPairGeneratorTest.java', 2), ('/android/jvmti/cts/JvmtiAttachingHostTest.java', 2), ('/android/telecom/cts/OutgoingCallTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/app/usage/cts/NetworkUsageStatsTest.java', 2), ('/android/graphics/cts/ColorSpaceTest.java', 2), ('/android/permission/cts/NoNetworkStatePermissionTest.java', 2), ('/com/android/cts/deviceowner/proxy/PacProxyTest.java', 2), ('/android/telecom/cts/ExtendedInCallServiceTest.java', 2), ('/android/net/cts/TrafficStatsTest.java', 2), ('/android/net/wifi/cts/ScanResultTest.java', 2), ('/android/media/cts/ConnectionStatus.java', 2), ('/android/net/cts/VpnServiceTest.java', 2), ('/android/net/cts/network/permission/InternetPermissionTest.java', 2), ('/android/media/cts/MediaSession2Test.java', 2), ('/android/suspendapps/cts/DialogTests.java', 2), ('/android/security/net/config/cts/DownloadManagerTest.java', 2), ('/android/cts/statsd/subscriber/ShellSubscriberTest.java', 2), ('/android/media/cts/MediaPlayerFlakyNetworkTest.java', 2), ('/com/android/cts/appwithdata/CreatePrivateDataTest.java', 2)]	"[('([1:/android/telecom/cts/BackgroundCallAudioTest.java]:[connect()]:[1]:method_text:[assertEquals(DisconnectCause.REJECTED, call.getDetails().getDisconnectCause().getCode());     }     ])', 2), ('([1:/android/os/cts/StrictModeTest.java]:[java.net.Socket]:[1]:method_text:[icy);     }      public interface ThrowingRunnable {         void run() throws Exception;     }     ])', 1), ('([1:/android/suspendapps/cts/SuspendPackagesTest.java]:[connect()]:[1]:method_text:[lable(String[] packageNames, UserHandle user,                 boolean replacing) {         }     } }])', 1), ('([4:/android/app/cts/ActivityManagerProcessStateTest.java]:[connect()]:[4]:method_text:[nd: first      * allowing a service to be started, then stopped by the system when idle.      */    ])', 1), ('([5:/android/app/cts/ActivityManagerProcessStateTest.java]:[connect()]:[5]:method_text:[t allow services to be started from broadcasts except when in      * the correct states.      */    ])', 1), ('([4:/android/app/cts/ActivityManagerProcessStateTest.java]:[connect()]:[4]:method_text:[/**      * Test that background check does allow services to be started from activities.      */    ])', 1), ('([4:/android/app/cts/ActivityManagerProcessStateTest.java]:[connect()]:[4]:method_text:[   /**      * Test that the foreground service app op does prevent the foreground state.      */    ])', 1), ('([8:/android/app/cts/ActivityManagerProcessStateTest.java]:[connect()]:[8]:method_text:[ound services demoted to      * ordinary service state when it is no longer the top app.      */    ])', 1), (""([1:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[java.net.Socket]:[1]:method_text:[ there's one user on the device or all      * secondary users / profiles are affiliated.      */    ])"", 1), ('([1:/com/android/cts/deviceowner/NetworkLoggingTest.java]:[connect()]:[1]:method_text:[s addr) {         return ((addr instanceof Inet4Address) || (addr instanceof Inet6Address));     } }])', 1), ('([1:/android/net/wifi/cts/WifiLocationInfoTest.java]:[connect()]:[1]:method_text:[_NAME,                 WIFI_LOCATION_TEST_APP_RETRIEVE_CONNECTION_INFO_SERVICE), status);     }     ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[java.net.Socket]:[1]:method_text:["", Arrays.toString(a2));                 fail(message + "": at index "" + i);             }     }     ])', 1), ('([1:/android/security/cts/StagefrightTest.java]:[java.net.Socket]:[1]:method_text:[ore any existing test methods      ***********************************************************/     ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[2]:method_text:[spot request at a time.      *      * Note: Location mode must be enabled for this test.      */    ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[1]:method_text:[ateCallback(Executor,      * WifiManager.TrafficStateCallback)} by sending some traffic.      */    ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[1]:method_text:[));     }      /**      * Tests {@link WifiManager#isWpa3SaeSupported()} does not crash.      */    ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[1]:method_text:[;         }     }      /**      * Tests {@link WifiManager#allowAutojoin(int, boolean)}.      */    ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[1]:method_text:[    }      /**      * Tests {@link WifiManager#allowAutojoinPasspoint(String, boolean)}.      */    ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[connect()]:[1]:method_text:[     }     }      /**      * Tests {@link WifiManager#isWapiSupported()} does not crash.      */    ])', 1), ('([1:/android/net/wifi/cts/WifiInfoTest.java]:[connect()]:[1]:method_text:[ that was set, and that      * calling build multiple times returns different instances.      */    ])', 1), ('([1:/android/security/cts/MetadataEncryptionTest.java]:[C-1-5]:[1]:method_text:[ryption/metadata      *      * @throws Exception      */     @CddTest(requirement=""9.9.3/C-1-5"")    ])', 1), ('([1:/android/telecom/cts/RemoteConferenceTest.java]:[connect()]:[1]:method_text:[backInvoker.getArgs(0)[1]);         mRemoteConferenceObject.unregisterCallback(callback);     }     ])', 1), ('([1:/android/telecom/cts/PhoneAccountSuggestionServiceTest.java]:[connect()]:[1]:method_text:[oneAccountSuggestionService.disableService(mContext);         }         super.tearDown();     }     ])', 1), ('([1:/android/appsecurity/cts/listeningports/ListeningPortsTest.java]:[java.net.Socket]:[1]:method_text:[e file and the boolean      * values are received as parameters from the host side test.      */    ])', 1), ('([1:/android/media/cts/StreamingMediaPlayerTest.java]:[java.net.Socket]:[1]:method_text:[ondition.    Disable until better solution is available     // Streaming RTSP video from YouTube    ])', 1), ('([1:/android/telecom/cts/VideoCallTest.java]:[connect()]:[1]:method_text:[(10.0f);         assertZoomChanged(mockVideoProvider, 10.0f);          call.disconnect();     }     ])', 1), ('([2:/android/security/NetworkSecurityPolicyTestBase.java]:[connect()]:[2]:method_text:[l).build();         assertFalse(mHttpOnlyWebServer.wasResourceRequested(uri.toString()));     }     ])', 1), ('([1:/android/car/cts/CarAppFocusManagerTest.java]:[connect()]:[1]:method_text:[Manager.APP_FOCUS_TYPE_NAVIGATION, true));         mManager.removeFocusListener(change);      }     ])', 1), ('([1:/android/car/cts/CarAppFocusManagerTest.java]:[connect()]:[1]:method_text:[T_WAIT_TIMEOUT_MS,                 CarAppFocusManager.APP_FOCUS_TYPE_NAVIGATION, false));     }     ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[java.net.Socket]:[1]:method_text:[he network may not be connected or ready yet         return mCtsNetUtils.connectToWifi();     }     ])', 1), ('([1:/android/net/cts/ConnectivityManagerTest.java]:[connect()]:[1]:method_text:[in the current API version"");         } catch (UnsupportedOperationException expected) {}     }     ])', 1), ('([1:/android/media/cts/MediaBrowserTest.java]:[connect()]:[1]:method_text:[ll) {             mMediaBrowser.disconnect();             mMediaBrowser = null;         }     }     ])', 1), ('([1:/android/media/cts/MediaBrowserTest.java]:[connect()]:[1]:method_text:[k() {                 return !mMediaBrowser.isConnected();             }         }.run();     }     ])', 1), ('([1:/android/media/cts/MediaBrowserTest.java]:[connect()]:[1]:method_text:[    fail();         } catch (IllegalStateException e) {             // expected         }     }     ])', 1), ('([1:/android/media/cts/MediaBrowserTest.java]:[connect()]:[1]:method_text:[    && mConnectionCallback.mConnectionSuspendedCount == 0;             }         }.run();     }     ])', 1), ('([3:/android/media/cts/MediaBrowserTest.java]:[connect()]:[3]:method_text:[              return mItemCallback.mLastMediaItem != null;             }         }.run();     }     ])', 1), ('([3:/android/media/cts/MediaBrowserTest.java]:[connect()]:[3]:method_text:[tionFailedCount);         assertEquals(0, mConnectionCallback.mConnectionSuspendedCount);     }     ])', 1), ('([2:/android/media/cts/MediaBrowserTest.java]:[connect()]:[2]:method_text:[mChildrenLoadedWithOptionCount);         assertNull(mSubscriptionCallback.mLastParentId);     }     ])', 1), ('([3:/android/media/cts/MediaBrowserTest.java]:[connect()]:[3]:method_text:[ @Override         public void onError(String id) {             mLastErrorId = id;         }     } }])', 1), ('([1:/android/car/cts/CarTest.java]:[connect()]:[1]:method_text:[       if (mCar != null && mCar.isConnected()) {             mCar.disconnect();         }     }     ])', 1), ('([2:/android/car/cts/CarTest.java]:[connect()]:[2]:method_text:[ertThat(mCar.isConnected()).isFalse();         assertThat(mCar.isConnecting()).isFalse();     }     ])', 1), ('([2:/android/net/cts/IpSecBaseTest.java]:[java.net.Socket]:[2]:method_text:[uildIpSecTransform(InstrumentationRegistry.getContext(), spi, null, localAddr);         }     }     ])', 1), ('([1:/android/net/cts/IpSecBaseTest.java]:[connect()]:[1]:method_text:[uildIpSecTransform(InstrumentationRegistry.getContext(), spi, null, localAddr);         }     }     ])', 1), ('([1:/android/telecom/cts/CallDetailsTest.java]:[connect()]:[1]:method_text:[OLTE);     }      /**      * Verifies operation of the test telecom call ID system APIs.      */    ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-1-5]:[1]:method_text:[        2 == getMinorVersion(reportedVersion));     }      @CddTest(requirement=""7.1.4.5/C-1-5"")    ])', 1), ('([2:/android/media/cts/MediaBrowserServiceTest.java]:[connect()]:[2]:method_text:[ll) {             mMediaBrowser.disconnect();             mMediaBrowser = null;         }     }     ])', 1), ('([1:/com/android/cts/appaccessdata/AccessPrivateDataTest.java]:[java.net.Socket]:[1]:method_text:[accessed. It includes file      * and detailed traffic stats.      * @throws IOException      */    ])', 1), ('([2:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[connect()]:[2]:method_text:[t.disconnect();         TestQuickAccessWalletService.awaitUnbinding(3, TimeUnit.SECONDS);     }     ])', 1), ('([1:/android/quickaccesswallet/cts/QuickAccessWalletClientTest.java]:[connect()]:[1]:method_text:[hat(callback.mResponse).isNotNull();         assertThat(callback2.mResponse).isNotNull();     }     ])', 1), ('([1:/android/telecom/cts/RemoteConnectionTest.java]:[connect()]:[1]:method_text:[NECTED);         assertConnectionState(mRemoteConnection, Connection.STATE_DISCONNECTED);     }     ])', 1), ('([1:/android/telecom/cts/RemoteConnectionTest.java]:[connect()]:[1]:method_text:[ection#pullExternalCall()} is proxied to      * {@link Connection#onPullExternalCall()}.      */    ])', 1), ('([2:/android/net/cts/SSLCertificateSocketFactoryTest.java]:[java.net.Socket]:[2]:method_text:[nameVerifier() {         HttpsURLConnection.setDefaultHostnameVerifier(mDefaultVerifier);     }     ])', 1), ('([1:/android/telecom/cts/BasicInCallServiceTest.java]:[connect()]:[1]:method_text:[onnect();                 lock.release();             }         };         return callbacks;     } }])', 1), ('([1:/android/media/cts/MediaScannerConnectionTest.java]:[connect()]:[1]:method_text:[ediaScannerConnection.disconnect();             mMediaScannerConnection = null;         }     }     ])', 1), ('([3:/android/media/cts/MediaScannerConnectionTest.java]:[connect()]:[3]:method_text:[th;             if (uri != null) {                 mediaUri = uri;             }         }      }  }])', 1), ('([2:/com/android/cts/net/hostside/VpnTest.java]:[java.net.Socket]:[2]:method_text:[l  *  */ public class VpnTest extends InstrumentationTestCase {      // These are neither public nor])', 1), ('([1:/android/telecom/cts/HandoverTest.java]:[connect()]:[1]:method_text:[     * does not declare {@link android.telecom.PhoneAccount#EXTRA_SUPPORTS_HANDOVER_TO}.      */    ])', 1), ('([1:/android/telecom/cts/HandoverTest.java]:[connect()]:[1]:method_text:[ support handover that an outgoing handover      * request will be successfully relayed.      */    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-5]:[1]:method_text:[d deleted.         assertEquals(""1"", result[1]);     }      @CddTest(requirement = ""3.18/C-1-5"")    ])', 1), ('([2:/android/telecom/cts/BackgroundCallAudioTest.java]:[connect()]:[2]:method_text:[olean result = queue.poll(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);         assertTrue(result);     } }])', 1), ('([1:/android/net/cts/network/permission/UpdateStatsPermissionTest.java]:[java.net.Socket]:[1]:method_text:[ission:      *   {@link android.Manifest.permission#UPDATE_DEVICE_STATS}.      */     @SmallTest    ])', 1), ('([1:/android/permission/cts/NoWifiStatePermissionTest.java]:[connect()]:[1]:method_text:[ <p>Requires Permission:      *   {@link android.Manifest.permission#CHANGE_WIFI_STATE}.      */    ])', 1), ('([3:/android/permission/cts/NoWifiStatePermissionTest.java]:[connect()]:[3]:method_text:[ <p>Requires Permission:      *   {@link android.Manifest.permission#CHANGE_WIFI_STATE}.      */    ])', 1), ('([2:/android/permission/cts/NoWifiStatePermissionTest.java]:[connect()]:[2]:method_text:[ <p>Requires Permission:      *   {@link android.Manifest.permission#CHANGE_WIFI_STATE}.      */    ])', 1), ('([1:/android/os/cts/ParcelFileDescriptorTest.java]:[java.net.Socket]:[1]:method_text:[      private Context getContext() {         return InstrumentationRegistry.getContext();     }     ])', 1), ('([1:/android/suspendapps/cts/DualSuspendTests.java]:[connect()]:[1]:method_text:[verHandler);         }         removeDeviceAdmin();         SuspendTestUtils.unsuspendAll();     } }])', 1), ('([1:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[java.net.Socket]:[1]:method_text:[MPONENT, VPN_PACKAGE,                 /* restrictions */ null);         super.tearDown();     }     ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[connect()]:[1]:method_text:[ilityStatsEntry} retrieved from      * {@link WifiManager.OnWifiUsabilityStatsListener}.      */    ])', 1), ('([2:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[connect()]:[2]:method_text:[d() != -1);             }              uiAutomation.dropShellPermissionIdentity();         }     } }])', 1), ('([1:/com/android/cts/delegate/NetworkLoggingDelegateTest.java]:[connect()]:[1]:method_text:[tch (IOException e) {             Log.w(TAG, ""Failed to connect to "" + server, e);         }     } }])', 1), ('([2:/com/android/server/cts/device/statsd/AtomTests.java]:[connect()]:[2]:method_text:[           if (urlc != null) {                 urlc.disconnect();             }         }     }     ])', 1), ('([2:/android/bluetooth/cts/HearingAidProfileTest.java]:[connect()]:[2]:method_text:[ * Basic test case to make sure that a fictional device is disconnected.      */     @MediumTest    ])', 1), ('([1:/android/bluetooth/cts/HearingAidProfileTest.java]:[connect()]:[1]:method_text:[     * Basic test case to get the list of connected Hearing Aid devices.      */     @MediumTest    ])', 1), ('([1:/android/bluetooth/cts/HearingAidProfileTest.java]:[connect()]:[1]:method_text:[matching Hearing Aid devices for each of the 4 connection      * states.      */     @MediumTest    ])', 1), ('([1:/android/bluetooth/cts/HearingAidProfileTest.java]:[connect()]:[1]:method_text:[ changed intent is called, the parameters and      * device are correct.      */     @MediumTest    ])', 1), ('([2:/android/bluetooth/cts/HearingAidProfileTest.java]:[connect()]:[2]:method_text:[ t) {         try {             Thread.sleep(t);         } catch (InterruptedException e) {}     } }])', 1), ('([1:/android/media/cts/MediaScannerTest.java]:[connect()]:[1]:method_text:[tContentUri(""external""),                 ""_data like ?"", new String[] { mFileDir + ""%""});     }     ])', 1), ('([2:/android/media/cts/MediaScannerTest.java]:[connect()]:[2]:method_text:[Title, c.getString(0));          mMediaScannerConnection.disconnect();         c.close();     }     ])', 1), ('([2:/android/media/cts/MediaScannerTest.java]:[connect()]:[2]:method_text:[1b);          mMediaScannerConnection.disconnect();          checkConnectionState(false);     }     ])', 1), ('([2:/android/media/cts/MediaScannerTest.java]:[connect()]:[2]:method_text:[ll);          mMediaScannerConnection.disconnect();          checkConnectionState(false);     }     ])', 1), ('([1:/android/media/cts/MediaScannerTest.java]:[connect()]:[1]:method_text:[_mixed_3,                     new String[] {""谭咏麟"", ""二十年白金畅销金曲全记录"", null, ""知心当玩偶"", null})     };     ])', 1), ('([1:/android/media/cts/MediaSession2ServiceTest.java]:[connect()]:[1]:method_text:[Session(ControllerInfo)}      * can return different sessions for different controllers.      */    ])', 1), ('([1:/android/keystore/cts/KeyPairGeneratorTest.java]:[java.net.Socket]:[1]:method_text:[ mKeyStore = KeyStore.getInstance(""AndroidKeyStore"");         mKeyStore.load(null, null);     }     ])', 1), ('([1:/android/jvmti/cts/JvmtiAttachingHostTest.java]:[java.net.Socket]:[1]:method_text:[cted void setUp() throws Exception {         mCurrentUser = getDevice().getCurrentUser();     }     ])', 1), ('([1:/android/telecom/cts/OutgoingCallTest.java]:[connect()]:[1]:method_text:[ils.TEST_PHONE_ACCOUNT_HANDLE_2, conn.getPhoneAccountHandle());         conn.onDisconnect();     } }])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-1-5]:[1]:method_text:[Features"", 0x3 /* importable + exportable */));     }      @CddTest(requirement = ""7.9.2/C-1-5"")    ])', 1), ('([2:/android/app/usage/cts/NetworkUsageStatsTest.java]:[connect()]:[2]:method_text:[er) -> telephonyManager.getSubscriberId());         }         return """";     }      @AppModeFull    ])', 1), ('([1:/android/graphics/cts/ColorSpaceTest.java]:[connect()]:[1]:method_text:[pace.Named.SRGB));         assertSame(connector.getSource(), connector.getDestination());     }     ])', 1), ('([2:/android/permission/cts/NoNetworkStatePermissionTest.java]:[ConnectivityManager.getActiveNetwork]:[2]:method_text:[ssion:      *   {@link android.Manifest.permission#ACCESS_NETWORK_STATE}.      */     @SmallTest    ])', 1), ('([1:/com/android/cts/deviceowner/proxy/PacProxyTest.java]:[java.net.Socket]:[1]:method_text:[ the PAC file can be set and it downloads it    * from the local HTTP server we are hosting.    */  ])', 1), ('([1:/android/telecom/cts/ExtendedInCallServiceTest.java]:[connect()]:[1]:method_text:[);         inCallService.disconnectLastCall();          assertNumCalls(inCallService, 0);     }     ])', 1), ('([1:/android/net/cts/TrafficStatsTest.java]:[java.net.Socket]:[1]:method_text:[not within range ["" + lower + "", "" + upper + ""]"",                 range.contains(value));     }     ])', 1), ('([1:/android/net/wifi/cts/ScanResultTest.java]:[connect()]:[1]:method_text:[sidQuoted);         assertThat(currentNetwork.frequency).isEqualTo(wifiInfo.getFrequency());     } }])', 1), ('([3:/android/media/cts/ConnectionStatus.java]:[ConnectivityManager.getActiveNetwork]:[3]:method_text:[       break;             }         }          // ping test timeout         return false;     }     ])', 1), ('([1:/android/net/cts/VpnServiceTest.java]:[java.net.Socket]:[1]:method_text:[ @AppModeFull(reason = ""PackageManager#queryIntentActivities cannot access in instant app mode"")    ])', 1), ('([1:/android/net/cts/network/permission/InternetPermissionTest.java]:[java.net.Socket]:[1]:method_text:[>Tests Permission:      *   {@link android.Manifest.permission#INTERNET}.      */     @SmallTest    ])', 1), ('([1:/android/media/cts/MediaSession2Test.java]:[connect()]:[1]:method_text:[ession);             assertEquals(controllerInfo, sessionCallback.mController);         }     }     ])', 1), ('([1:/android/suspendapps/cts/DialogTests.java]:[connect()]:[1]:method_text:[      if (mTestAppInterface != null) {             mTestAppInterface.disconnect();         }     } }])', 1), ('([1:/android/security/net/config/cts/DownloadManagerTest.java]:[java.net.Socket]:[1]:method_text:[ength: 5\\r\\n\\r\\nhello"";     private static final long TIMEOUT = 3 * DateUtils.SECOND_IN_MILLIS;     ])', 1), ('([1:/android/cts/statsd/subscriber/ShellSubscriberTest.java]:[connect()]:[1]:method_text:[    value += ((int) arr[j + startIndex] & 0xffL) << (8 * j);         }         return value;     } }])', 1), ('([1:/android/media/cts/MediaPlayerFlakyNetworkTest.java]:[java.net.Socket]:[1]:method_text:[on {         releaseMediaPlayer();         releaseHttpServer();         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/appwithdata/CreatePrivateDataTest.java]:[java.net.Socket]:[1]:method_text:[d traffic stats.      * @throws IOException if any error occurred when creating the file      */    ])', 1), ('([5:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[connect()]:[5]:method_text:[}     }      private interface SetWifiCallback {         void onComplete(boolean isSuccess);     } }])', 1), ('([1:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[ConnectivityManager.getActiveNetwork]:[1]:method_text:[}     }      private interface SetWifiCallback {         void onComplete(boolean isSuccess);     } }])', 1)]"					
207:635317) 7.4.8  . Secure Elements	7.4.8	C-1-2		[('android.telephony.euicc.cts.EuiccManagerTest', 18), ('android.telephony.euicc.cts.EuiccServiceTest', 16), ('android.telephony.euicc.cts.EuiccProfileInfoTest', 9), ('android.telephony.cts.TelephonyManagerTest', 8), ('android.carrierapi.cts.CarrierApiTest', 6), ('android.omapi.cts.OmapiTest', 5), ('android.telephony.euicc.cts.EuiccInfoTest', 4), ('android.telephony.euicc.cts.GetDownloadableSubscriptionMetadataResultTest', 3), ('android.telephony.euicc.cts.GetDefaultDownloadableSubscriptionListResultTest', 3), ('android.telephony.euicc.cts.GetEuiccProfileInfoListResultTest', 3), ('android.telephony4.cts.SimRestrictedApisTest', 2), ('android.net.eap.cts.EapSessionConfigTest', 2), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.telephony.euicc.cts.DownloadableSubscriptionTest', 1), ('android.net.cts.ConnectivityDiagnosticsManagerTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 1), ('android.carrierapi.cts.ApnDatabaseTest', 1), ('android.omapi.accesscontrol2.cts.AccessControlTest', 1), ('android.graphics.cts.PaintTest', 1), ('android.omapi.accesscontrol3.cts.AccessControlTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('android.omapi.accesscontrol1.cts.AccessControlTest', 1)]	[('getContext', 20), ('setUp', 13), ('Object', 5), ('getPackageManager', 4), ('tearDown', 4), ('ServiceConnectionTimerTask', 4), ('hasCellular', 3), ('getContentResolver', 3), ('Builder', 2), ('build', 2), ('getPackageName', 2), ('getPhoneCount', 2), ('getBytes', 1), ('run', 1), ('Binder', 1), ('getHeight', 1), ('getWidth', 1), ('start', 1), ('quit', 1), ('getAction', 1), ('countDown', 1), ('clearQueue', 1), ('waitForCarrierConfigChanged', 1), ('getDefaultSubscriptionId', 1), ('getRadioHalVersion', 1), ('toByteArray', 1), ('failMessage', 1)]	[('CtsTelephonyTestCases', 65), ('CtsCarrierApiTestCases', 7), ('CtsOmapiTestCases', 5), ('CtsSecureElementAccessControlTestCases', 3), ('CtsSimRestrictedApisTestCases', 2), ('CtsIkeTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsCameraTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsSensorTestCases', 1)]		7.4.8/C-1-2	"""C-1-2] MUST declare the correct feature flags via android.hardware.se.omapi.uicc for the device with UICC-based secure elements, android.hardware.se.omapi.ese for the device with eSE-based secure elements and android.hardware.se.omapi.sd for the device with SD-based secure elements. <h3 id="""	07040800.670102	7.4.8/C-1-2 android.hardware.se.omapi.uicc android.hardware.se.omapi.sd 7.4.8 C-1-2 UICC android.hardware.se.omapi.ese				[('UICC', 85), ('C-1-2', 9)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsSimRestrictedApisTestCases:android.telephony4.cts.SimRestrictedApisTest.testGetIccAuthentication CtsSimRestrictedApisTestCases:android.telephony4.cts.SimRestrictedApisTest.testGetUiccCardsInfo CtsIkeTestCases:android.net.eap.cts.EapSessionConfigTest.testBuildWithAllEapMethods CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.ServiceTestRule CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnGetEid CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnGetOtaStatus CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnGetDownloadableSubscriptionMetadata CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnStartOtaIfNecessary CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnGetDefaultDownloadableSubscriptionList CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnDownloadSubscription CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnGetEuiccProfileInfoList CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnGetEuiccInfo CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnDeleteSubscription CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnSwitchToSubscription CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnUpdateSubscriptionNickname CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnEraseSubscriptions CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testOnRetainSubscriptionsForFactoryReset CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testDump CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccServiceTest.testEncodeSmdxSubjectAndReasonCode None:android.net.cts.ConnectivityDiagnosticsManagerTest.TestNetworkCallback None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsTelephonyTestCases:android.telephony.euicc.cts.GetDownloadableSubscriptionMetadataResultTest.testGetResult CtsTelephonyTestCases:android.telephony.euicc.cts.GetDownloadableSubscriptionMetadataResultTest.testWriteToParcel CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsTelephonyTestCases:android.telephony.euicc.cts.GetDefaultDownloadableSubscriptionListResultTest.testGetResult CtsTelephonyTestCases:android.telephony.euicc.cts.GetDefaultDownloadableSubscriptionListResultTest.testWriteToParcel CtsCarrierApiTestCases:android.carrierapi.cts.CarrierApiTest.isSimCardPresent CtsCarrierApiTestCases:android.carrierapi.cts.CarrierApiTest.testIccTransmitApduLogicalChannel CtsCarrierApiTestCases:android.carrierapi.cts.CarrierApiTest.testIccTransmitApduLogicalChannelWithInvalidInputs CtsCarrierApiTestCases:android.carrierapi.cts.CarrierApiTest.testOpportunistic CtsCarrierApiTestCases:android.carrierapi.cts.CarrierApiTest.testIccExchangeSimIO CtsCarrierApiTestCases:android.carrierapi.cts.CarrierApiTest.testEapAkaAuthentication CtsTelephonyTestCases:android.telephony.euicc.cts.GetEuiccProfileInfoListResultTest.testGetResult CtsTelephonyTestCases:android.telephony.euicc.cts.GetEuiccProfileInfoListResultTest.testWriteToParcel CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccInfoTest.testGetOsVersion CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccInfoTest.testDescribeContents CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccInfoTest.testWriteToParcel CtsTelephonyTestCases:android.telephony.cts.TelephonyManagerTest.testHasCarrierPrivilegesViaCarrierConfigs CtsTelephonyTestCases:android.telephony.cts.TelephonyManagerTest.testGetManualNetworkSelectionPlmnPersisted CtsTelephonyTestCases:android.telephony.cts.TelephonyManagerTest.testGetCardIdForDefaultEuicc CtsTelephonyTestCases:android.telephony.cts.TelephonyManagerTest.testGetUiccCardsInfoException CtsTelephonyTestCases:android.telephony.cts.TelephonyManagerTest.testGetUiccCardsInfo CtsTelephonyTestCases:android.telephony.cts.TelephonyManagerTest.testIsApplicationOnUicc CtsTelephonyTestCases:android.telephony.cts.TelephonyManagerTest.testGetSimCardState CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest.testGetShortcutIcon CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testGetEid CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testCreateForCardId CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testDownloadSubscription CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testGetEuiccInfo CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testDeleteSubscription CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testSwitchToSubscription CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testEraseSubscriptions CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testStartResolutionActivity CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testOperationCode CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testErrorCode CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testSetSupportedCountries CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testSetUnsupportedCountries CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testIsSupportedCountry_returnsTrue_ifCountryIsOnSupportedList CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testIsSupportedCountry_returnsTrue_ifCountryIsNotOnUnsupportedList CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testIsSupportedCountry_returnsFalse_ifCountryIsNotOnSupportedList CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testIsSupportedCountry_returnsFalse_ifCountryIsOnUnsupportedList CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccManagerTest.testIsSupportedCountry_returnsFalse_ifBothListsAreEmpty CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testWriteToParcel CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testWriteToParcelNullCarrierId CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testBuilderAndGetters CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testBuilder_BasedOnAnotherProfile CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testEqualsHashCode CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testBuilderBuild_IllegalIccid CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testBuilderSetOperatorMccMnc_Illegal CtsTelephonyTestCases:android.telephony.euicc.cts.EuiccProfileInfoTest.testCreatorNewArray CtsOmapiTestCases:android.omapi.cts.OmapiTest.OnConnectedListener CtsOmapiTestCases:android.omapi.cts.OmapiTest.testGetReaders CtsOmapiTestCases:android.omapi.cts.OmapiTest.testATR CtsOmapiTestCases:android.omapi.cts.OmapiTest.testOpenBasicChannelNullAid CtsOmapiTestCases:android.omapi.cts.OmapiTest.testOpenBasicChannelNonNullAid CtsSecureElementAccessControlTestCases:android.omapi.accesscontrol2.cts.AccessControlTest.OnConnectedListener CtsGraphicsTestCases:android.graphics.cts.PaintTest.testGetTextPathStringCountTooHigh CtsSecureElementAccessControlTestCases:android.omapi.accesscontrol3.cts.AccessControlTest.OnConnectedListener CtsSensorTestCases:android.hardware.cts.SensorParameterRangeTest.testPressureRange None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported CtsSecureElementAccessControlTestCases:android.omapi.accesscontrol1.cts.AccessControlTest.OnConnectedListener		[('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/EuiccManagerTest.java', 18), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/EuiccServiceTest.java', 16), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/EuiccProfileInfoTest.java', 9), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/CarrierApiTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/omapi/src/android/omapi/cts/OmapiTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/EuiccInfoTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/GetDefaultDownloadableSubscriptionListResultTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/GetEuiccProfileInfoListResultTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony4/src/android/telephony4/cts/SimRestrictedApisTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/net/ipsec/src/android/net/eap/cts/EapSessionConfigTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/ApnDatabaseTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp2/src/android/omapi/accesscontrol2/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp3/src/android/omapi/accesscontrol3/cts/AccessControlTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/secure_element/access_control/AccessControlApp1/src/android/omapi/accesscontrol1/cts/AccessControlTest.java', 1)]	[('/android/telephony/euicc/cts/EuiccManagerTest.java', 19), ('/android/telephony/euicc/cts/EuiccServiceTest.java', 17), ('/android/telephony/euicc/cts/EuiccProfileInfoTest.java', 10), ('/android/telephony/cts/TelephonyManagerTest.java', 9), ('/android/carrierapi/cts/CarrierApiTest.java', 7), ('/android/omapi/cts/OmapiTest.java', 6), ('/android/telephony/euicc/cts/EuiccInfoTest.java', 5), ('/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java', 4), ('/android/telephony/euicc/cts/GetDefaultDownloadableSubscriptionListResultTest.java', 4), ('/android/telephony/euicc/cts/GetEuiccProfileInfoListResultTest.java', 4), ('/android/telephony4/cts/SimRestrictedApisTest.java', 3), ('/android/net/eap/cts/EapSessionConfigTest.java', 3), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/telephony/euicc/cts/DownloadableSubscriptionTest.java', 2), ('/android/net/cts/ConnectivityDiagnosticsManagerTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/android/carrierapi/cts/ApnDatabaseTest.java', 2), ('/android/omapi/accesscontrol2/cts/AccessControlTest.java', 2), ('/android/graphics/cts/PaintTest.java', 2), ('/android/omapi/accesscontrol3/cts/AccessControlTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/android/omapi/accesscontrol1/cts/AccessControlTest.java', 2)]	"[('([2:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[2]:method_text:[           fail(e.toString());         }          assertTrue(mCallback.isMethodCalled());     }     ])', 9), ('([3:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[3]:method_text:[           fail(e.toString());         }          assertTrue(mCallback.isMethodCalled());     }     ])', 3), ('([3:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[3]:method_text:[     EuiccManager.EMBEDDED_SUBSCRIPTION_RESULT_ERROR, mCallbackReceiver.getResultCode());     }     ])', 3), ('([6:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[6]:method_text:[ginal country list         mEuiccManager.setSupportedCountries(originalSupportedCountry);     }     ])', 3), ('([9:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[9]:method_text:[ortedCountry);         mEuiccManager.setUnsupportedCountries(originalUnsupportedCountry);     }     ])', 2), ('([9:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[9]:method_text:[ EuiccProfileInfo.CREATOR.createFromParcel(parcel);          assertEquals(p, fromParcel);     }     ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-2]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([2:/android/telephony/euicc/cts/DownloadableSubscriptionTest.java]:[UICC]:[2]:method_text:[ mDownloadableSubscription = DownloadableSubscription.forActivationCode(ACTIVATION_CODE);     }     ])', 1), ('([2:/android/telephony4/cts/SimRestrictedApisTest.java]:[UICC]:[2]:method_text:[ts a SecurityException since the test apk is not signed by certficate on the      * SIM.      */    ])', 1), ('([2:/android/telephony4/cts/SimRestrictedApisTest.java]:[UICC]:[2]:method_text:[arrier privileges."");             }         } catch (SecurityException expected) {         }     } }])', 1), ('([1:/android/net/eap/cts/EapSessionConfigTest.java]:[UICC]:[1]:method_text:[APV2_USERNAME = ""username"";     private static final String EAP_MSCHAPV2_PASSWORD = ""password"";     ])', 1), ('([5:/android/net/eap/cts/EapSessionConfigTest.java]:[UICC]:[5]:method_text:[tEquals(SUB_ID, config.getSubId());         assertEquals(APPTYPE_USIM, config.getAppType());     } }])', 1), ('([56:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[56]:method_text:[      private Context getContext() {         return InstrumentationRegistry.getContext();     }     ])', 1), ('([6:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[6]:method_text:[           fail(e.toString());         }          assertTrue(mCallback.isMethodCalled());     }     ])', 1), ('([9:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[9]:method_text:[           fail(e.toString());         }          assertTrue(mCallback.isMethodCalled());     }     ])', 1), ('([4:/android/telephony/euicc/cts/EuiccServiceTest.java]:[UICC]:[4]:method_text:[;         assertEquals(mEuiccService.encodeSmdxSubjectAndReasonCode(""8.1"", ""5""), 0xA081005);     } }])', 1), ('([1:/android/net/cts/ConnectivityDiagnosticsManagerTest.java]:[UICC]:[1]:method_text:[redCallbacks) {             mCdm.unregisterConnectivityDiagnosticsCallback(cb);         }     }     ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-2]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-2]:[1]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([5:/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java]:[UICC]:[5]:method_text:[(                         EuiccService.RESULT_RESOLVABLE_ERRORS, null /*subscriptions*/);     }     ])', 1), ('([1:/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java]:[UICC]:[1]:method_text:[     assertEquals(EuiccService.RESULT_RESOLVABLE_ERRORS, mSubMetadataResult.getResult());     }     ])', 1), ('([1:/android/telephony/euicc/cts/GetDownloadableSubscriptionMetadataResultTest.java]:[UICC]:[1]:method_text:[RORS, fromParcel.getResult());         assertNull(fromParcel.getDownloadableSubscription());     } }])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([5:/android/telephony/euicc/cts/GetDefaultDownloadableSubscriptionListResultTest.java]:[UICC]:[5]:method_text:[(                         EuiccService.RESULT_RESOLVABLE_ERRORS, null /*subscriptions*/);     }     ])', 1), ('([1:/android/telephony/euicc/cts/GetDefaultDownloadableSubscriptionListResultTest.java]:[UICC]:[1]:method_text:[  assertEquals(EuiccService.RESULT_RESOLVABLE_ERRORS, mDefaultSubListResult.getResult());     }     ])', 1), ('([1:/android/telephony/euicc/cts/GetDefaultDownloadableSubscriptionListResultTest.java]:[UICC]:[1]:method_text:[ORS, fromParcel.getResult());         assertNull(fromParcel.getDownloadableSubscriptions());     } }])', 1), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[             ""Visit https://source.android.com/devices/tech/config/uicc.html"");         }     }     ])', 1), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[r a logical channel and makes sure appropriate      * errors are returned from the UICC.      */    ])', 1), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[ss, as it process involves several file-reads. The ICCID is one of the first files read.      */    ])', 1), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[lected via a      * SELECT apdu via the basic channel, then a STATUS AT-command is sent.      */    ])', 1), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[envelope to the UICC via      * {@link TelephonyManager#sendEnvelopeWithStatus(String)}.      */    ])', 1), ('([1:/android/carrierapi/cts/CarrierApiTest.java]:[UICC]:[1]:method_text:[d"",                 hexStringToBytes(EXPECTED_EAP_AKA_RESULT),                 akaResponse);     } }])', 1), ('([9:/android/telephony/euicc/cts/GetEuiccProfileInfoListResultTest.java]:[UICC]:[9]:method_text:[                       null /*profiles*/,                         false /*isRemovable*/);     }     ])', 1), ('([1:/android/telephony/euicc/cts/GetEuiccProfileInfoListResultTest.java]:[UICC]:[1]:method_text:[     assertEquals(EuiccService.RESULT_RESOLVABLE_ERRORS, mProfileListResult.getResult());     }     ])', 1), ('([3:/android/telephony/euicc/cts/GetEuiccProfileInfoListResultTest.java]:[UICC]:[3]:method_text:[mProfileListResult.getProfiles());         assertFalse(mProfileListResult.getIsRemovable());     } }])', 1), ('([8:/android/telephony/euicc/cts/EuiccInfoTest.java]:[UICC]:[8]:method_text:[   public void setUp() throws Exception {         mEuiccInfo = new EuiccInfo(OS_VERSION);     }     ])', 1), ('([2:/android/telephony/euicc/cts/EuiccInfoTest.java]:[UICC]:[2]:method_text:[  assertNotNull(mEuiccInfo);         assertEquals(OS_VERSION, mEuiccInfo.getOsVersion());     }     ])', 1), ('([2:/android/telephony/euicc/cts/EuiccInfoTest.java]:[UICC]:[2]:method_text:[ts();         assertTrue(bitmask == 0 || bitmask == Parcelable.CONTENTS_FILE_DESCRIPTOR);     }     ])', 1), ('([7:/android/telephony/euicc/cts/EuiccInfoTest.java]:[UICC]:[7]:method_text:[ateFromParcel(parcel);         assertEquals(OS_VERSION, euiccInfoFromParcel.getOsVersion());     } }])', 1), ('([3:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[3]:method_text:[ckageManager.FEATURE_TELEPHONY)                 && mTelephonyManager.getPhoneCount() > 0;     }     ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[1]:method_text:[ uiAutomation.grantRuntimePermission(packageName, permission.ACCESS_BACKGROUND_LOCATION);     }     ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[1]:method_text:[ returns a positive value or either      * UNINITIALIZED_CARD_ID or UNSUPPORTED_CARD_ID.      */    ])', 1), ('([4:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[4]:method_text:[/**      * Tests that a SecurityException is thrown when trying to access UiccCardsInfo.      */    ])', 1), (""([4:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[4]:method_text:[ption e) {         }     }      /**      * Tests that UiccCardsInfo methods don't crash.      */    ])"", 1), ('([5:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[5]:method_text:[  /**      * Tests that the device properly reports the contents of NetworkSelectionMode      */    ])', 1), ('([3:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[3]:method_text:[ntation().getUiAutomation()                     .dropShellPermissionIdentity();         }     }     ])', 1), ('([7:/android/telephony/cts/TelephonyManagerTest.java]:[UICC]:[7]:method_text:[ minor) {         if (major < 0 || minor < 0) return 0;         return major * 100 + minor;     } } ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[C-1-2]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));     }     @CddTest(requirement=""3.8.1/C-1-2"")    ])', 1), ('([14:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[14]:method_text:[iver != null) {             getContext().unregisterReceiver(mCallbackReceiver);         }     }     ])', 1), ('([2:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[2]:method_text:[ eid = mEuiccManager.getEid();          // verify result is null         assertNull(eid);     }     ])', 1), ('([4:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[4]:method_text:[     mEuiccManager = mEuiccManager.createForCardId(TelephonyManager.UNSUPPORTED_CARD_ID);     }     ])', 1), ('([8:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[8]:method_text:[cManager.getEuiccInfo();          // verify result is null         assertNull(euiccInfo);     }     ])', 1), ('([4:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[4]:method_text:[     EuiccManager.EMBEDDED_SUBSCRIPTION_RESULT_ERROR, mCallbackReceiver.getResultCode());     }     ])', 1), ('([7:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[7]:method_text:[tionActivity.RESULT_CODE_TEST_PASSED,                 mCallbackReceiver.getResultCode());     }     ])', 1), ('([13:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[13]:method_text:[ION_SMDX_SUBJECT_REASON_CODE, 10);         assertEquals(EuiccManager.OPERATION_HTTP, 11);     }     ])', 1), ('([19:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[19]:method_text:[INVALID_RESPONSE, 10015);         assertEquals(EuiccManager.ERROR_OPERATION_BUSY, 10016);     }     ])', 1), ('([6:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[6]:method_text:[l country list         mEuiccManager.setUnsupportedCountries(originalUnsupportedCountry);     }     ])', 1), ('([9:/android/telephony/euicc/cts/EuiccManagerTest.java]:[UICC]:[9]:method_text:[tDownLatch.countDown();                     break;                 }             }         }     } }])', 1), ('([7:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[7]:method_text:[BuilderBuild_IllegalIccid}  */ @RunWith(AndroidJUnit4.class) public class EuiccProfileInfoTest {    ])', 1), ('([15:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[15]:method_text:[UiccAccessRule(new byte[0], null, 0)},                 p.getUiccAccessRules().toArray());     }     ])', 1), ('([9:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[9]:method_text:[          assertEquals(p, copied);         assertEquals(p.hashCode(), copied.hashCode());     }     ])', 1), ('([20:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[20]:method_text:[);         assertFalse(p.equals(t));         assertNotEquals(p.hashCode(), t.hashCode());     }     ])', 1), ('([1:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[1]:method_text:[id testBuilderBuild_IllegalIccid() {         new EuiccProfileInfo.Builder(""abc"").build();     }     ])', 1), ('([1:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[1]:method_text:[       .setCarrierIdentifier(new CarrierIdentifier(new byte[] {1, 2, 3, 4}, null, null));     }     ])', 1), ('([2:/android/telephony/euicc/cts/EuiccProfileInfoTest.java]:[UICC]:[2]:method_text:[ofiles = EuiccProfileInfo.CREATOR.newArray(123);         assertEquals(123, profiles.length);     } }])', 1), ('([4:/android/omapi/cts/OmapiTest.java]:[UICC]:[4]:method_text:[        connectionTimer.cancel();             }         }     }      /** Tests getReaders API */    ])', 1), ('([16:/android/omapi/cts/OmapiTest.java]:[UICC]:[16]:method_text:[e) {             fail(""Unexpected Exception "" + e);         }     }      /** Tests getATR API */    ])', 1), ('([4:/android/omapi/cts/OmapiTest.java]:[UICC]:[4]:method_text:[pected Exception "" + e);         }     }      /** Tests OpenBasicChannel API when aid is null */    ])', 1), ('([2:/android/omapi/cts/OmapiTest.java]:[UICC]:[2]:method_text:[ed Exception "" + e);         }     }      /** Tests OpenBasicChannel API when aid is provided */    ])', 1), ('([2:/android/omapi/cts/OmapiTest.java]:[UICC]:[2]:method_text:[e) {             fail(""Unexpected Exception "" + e);         }     }      /** Tests Select API */    ])', 1), ('([1:/android/carrierapi/cts/ApnDatabaseTest.java]:[UICC]:[1]:method_text:[e.      * Verify that the inserted values match the result of the query and are deleted.      */    ])', 1), ('([2:/android/omapi/accesscontrol2/cts/AccessControlTest.java]:[UICC]:[2]:method_text:[nectionTimer != null) {                 connectionTimer.cancel();             }         }     }     ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[C-1-2]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());     }      @CddTest(requirement=""3.8.13/C-1-2"")    ])', 1), ('([2:/android/omapi/accesscontrol3/cts/AccessControlTest.java]:[UICC]:[2]:method_text:[nectionTimer != null) {                 connectionTimer.cancel();             }         }     }     ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[C-1-2]:[1]:method_text:[Frequency),                     actualMinFrequency <=  hifiMinFrequency + 0.1);         }     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-2]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([2:/android/omapi/accesscontrol1/cts/AccessControlTest.java]:[UICC]:[2]:method_text:[nectionTimer != null) {                 connectionTimer.cancel();             }         }     }     ])', 1)]"					
212:651746) 7.5.4  . Camera API Behavior	7.5.4	H-1-1		[('android.autofillservice.cts.SimpleSaveActivityTest', 10), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 5), ('android.autofillservice.cts.CustomDescriptionTest', 4), ('android.location.cts.fine.GnssAntennaInfoTest', 4), ('com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity', 3), ('android.autofillservice.cts.CustomDescriptionDateTest', 2), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 2), ('android.autofillservice.cts.CheckoutActivityTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.autofillservice.cts.ValidatorTest', 1), ('android.mediav2.cts.ExtractorTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.hardware.cts.SensorAdditionalInfoTest', 1), ('android.accessibilityservice.cts.AccessibilityMagnificationTest', 1), ('android.hardware.cts.Camera_SizeTest', 1), ('android.hardware.camera2.cts.RobustnessTest', 1), ('android.autofillservice.cts.OnClickActionTest', 1), ('android.view.inputmethod.cts.InlineSuggestionInfoTest', 1)]	[('build', 3), ('setUp', 2), ('size', 2), ('enableService', 1), ('Builder', 1), ('onFill', 1), ('getNextFillRequest', 1), ('tapLogin', 1), ('run', 1), ('getNextSaveRequest', 1), ('applyCharSequenceTransformationToImageView', 1), ('getSimpleName', 1), ('length', 1), ('getSize', 1), ('close', 1)]	[('CtsAutoFillServiceTestCases', 20), ('CtsCameraTestCases', 9), ('CtsLocationFineTestCases', 4), ('CtsAppTestCases', 1), ('CtsMediaV2TestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsSensorTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsInputMethodTestCases', 1)]		7.5.4/H-1-1	""">7.5.4/H-1-1] MUST have normal field of view (FOV) by default and it MUST be between 50 and 90 degrees. Handheld device implementations: [<a href=""#7_6_memory_and_storage"""""	07050400.720101	FOV 7.5.4/H-1-1 H-1-1 7.5.4				[('FOV', 37), ('7.5.4', 3), ('H-1-1', 2)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testCameraFeatures CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionDateTest.testCustomSave CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionDateTest.testSaveSameValue_withoutSanitization CtsAutoFillServiceTestCases:android.autofillservice.cts.ValidatorTest.testDontShowUiWhenValidatorFails CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionTest.testSanitizationBeforeBatchUpdates CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionTest.testSanitizationBeforeTransformations CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionTest.assertSaveUiWithoutCustomDescriptionIsShown CtsMediaV2TestCases:android.mediav2.cts.ExtractorTest.isClosed CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testTapHomeWhileSaveUiIsShowing CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testSelectedDatasetsAreSentOnSaveRequest CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testSanitizeOnSaveWhenAppChangeValues CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testSanitizeOnSaveWhenAppChangeValues CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testSanitizeOnSaveWhenAppChangeValues CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testSanitizeOnSaveWhenAppChangeValues CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testSanitizeOnSaveWhenAppChangeValues CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testSanitizeOnSaveWhenAppChangeValues CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testExplicitlySaveButtonOnly CtsAutoFillServiceTestCases:android.autofillservice.cts.SimpleSaveActivityTest.testTapUrlSpanOnSuccinctDescription_tapBackWithoutFinish CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensions CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testCameraPerfClassCharacteristics CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testMonochromeCharacteristics CtsSensorTestCases:android.hardware.cts.SensorAdditionalInfoTest.testSensorAdditionalInfo CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityMagnificationTest.testA11yNodeInfoVisibility_whenOutOfMagnifiedArea_shouldVisible CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testLogicalCameraZoomSwitch CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testActivePhysicalId CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsLocationFineTestCases:android.location.cts.fine.GnssAntennaInfoTest.testFullAntennaInfoWriteToParcel CtsLocationFineTestCases:android.location.cts.fine.GnssAntennaInfoTest.testPartialAntennaInfoWriteToParcel CtsLocationFineTestCases:android.location.cts.fine.GnssAntennaInfoTest.testCreateFullGnssAntennaInfoAndGetValues CtsLocationFineTestCases:android.location.cts.fine.GnssAntennaInfoTest.testCreatePartialGnssAntennaInfoAndGetValues CtsAutoFillServiceTestCases:android.autofillservice.cts.CheckoutActivityTest.testCustomizedSaveUiWithContentDescription CtsAutoFillServiceTestCases:android.autofillservice.cts.CheckoutActivityTest.testCustomizedSaveUiWhenListResolutionFails CtsCameraTestCases:android.hardware.cts.Camera_SizeTest.testConstructor CtsCameraTestCases:android.hardware.camera2.cts.RobustnessTest.testVerifyReprocessMandatoryOutputCombinationTables CtsAutoFillServiceTestCases:android.autofillservice.cts.OnClickActionTest.testHideAndShow CtsInputMethodTestCases:android.view.inputmethod.cts.InlineSuggestionInfoTest.testInlineSuggestionInfoValues None:com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity.testStarted None:com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity.startTest		[('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/SimpleSaveActivityTest.java', 10), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 5), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/CustomDescriptionTest.java', 4), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/GnssAntennaInfoTest.java', 4), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 3), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/CustomDescriptionDateTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/CheckoutActivityTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/ValidatorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/media/src/android/mediav2/cts/ExtractorTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorAdditionalInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityMagnificationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/cts/Camera_SizeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/OnClickActionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InlineSuggestionInfoTest.java', 1)]	[('/android/autofillservice/cts/SimpleSaveActivityTest.java', 11), ('/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 7), ('/android/autofillservice/cts/CustomDescriptionTest.java', 5), ('/android/location/cts/fine/GnssAntennaInfoTest.java', 5), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 4), ('/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 4), ('/android/autofillservice/cts/CustomDescriptionDateTest.java', 3), ('/android/autofillservice/cts/CheckoutActivityTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/autofillservice/cts/ValidatorTest.java', 2), ('/android/mediav2/cts/ExtractorTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/hardware/cts/SensorAdditionalInfoTest.java', 2), ('/android/accessibilityservice/cts/AccessibilityMagnificationTest.java', 2), ('/android/hardware/cts/Camera_SizeTest.java', 2), ('/android/hardware/camera2/cts/RobustnessTest.java', 2), ('/android/autofillservice/cts/OnClickActionTest.java', 2), ('/android/view/inputmethod/cts/InlineSuggestionInfoTest.java', 2)]	"[('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[performClick();         });          mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_GENERIC);     }     ])', 4), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[       assertTextValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""pass"");     }     ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[7.5.4]:[1]:method_text:[          if (camera != null) {                 camera.release();             }         }     }     ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[FOV]:[1]:method_text:[ mUiBot.assertChild(saveUi, ""second"", (o) -> assertThat(o.getText()).isEqualTo(""12-10""));     }     ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[FOV]:[1]:method_text:[int resourceId) {         return new RemoteViews(getContext().getPackageName(), resourceId);     } }])', 1), ('([1:/android/autofillservice/cts/ValidatorTest.java]:[FOV]:[1]:method_text:[).findByAutofillId(id);         assertThat(validator.isValid(valueFinder)).isEqualTo(valid);     } }])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[Bot.saveForAutofill(true, SAVE_DATA_TYPE_GENERIC);         sReplier.getNextSaveRequest();     }     ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[         mActivity.tapLogin();          assertSaveUiIsShownWithTwoLines(""batch updated"");     }     ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[);         mActivity.tapLogin();          assertSaveUiIsShownWithTwoLines(""transformed"");     }     ])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionTest.java]:[FOV]:[1]:method_text:[xt = matchFirst ? ""polo"" : ""POLO"";         assertSaveUiIsShownWithTwoLines(expectedText);     }     ])', 1), ('([2:/android/mediav2/cts/ExtractorTest.java]:[FOV]:[2]:method_text:[   testExtractor.unselectTrack(trackID);             }             return result;         }         ])', 1), ('([3:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[3]:method_text:[uts.ACTIVITY_RESURRECTION);          mUiBot.assertSaveNotShowing(SAVE_DATA_TYPE_GENERIC);     }     ])', 1), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[      assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""42"");     }     ])', 1), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[on, then the new activity      * finishes:      * the Save UI should have been restored.      */    ])', 1), ('([1:/android/autofillservice/cts/SimpleSaveActivityTest.java]:[FOV]:[1]:method_text:[     /* start= */ 8,  /* end= */ 15, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);         return ss;     } }])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[H-1-1]:[1]:method_text:[g.e(TAG, ""Couldn\'t initialize EGL."");         }     }      @CddTest(requirement=""7.1.4.5/H-1-1"")    ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[H-1-1]:[1]:method_text:[      Log.w(TAG, ""Unknown hardware level "" + level);         return Integer.toString(level);     } }])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[7.5.4]:[1]:method_text:[acy API are also      * accessible via Camera2.      */     @CddTest(requirement=""7.5.4/C-0-11"")    ])', 1), ('([4:/android/hardware/cts/SensorAdditionalInfoTest.java]:[FOV]:[4]:method_text:[boolean vec3CalibrationDuplicate() {             return mVec3CalibrationDuplicate;         }     } }])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityMagnificationTest.java]:[FOV]:[1]:method_text:[ayoutParams));         // Waiting for UI refresh         mInstrumentation.waitForIdleSync();     } }])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[FOV]:[1]:method_text:[agtion behaves as expected      * for logical multi-camera and non-logical multi-camera.      */    ])', 1), ('([8:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[FOV]:[8]:method_text:[camera, the activePhysicalId is valid, and is the same      * for all capture templates.      */    ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[FOV]:[1]:method_text:[d device, the default FOV is      * between 50 and 90 degrees for all capture templates.      */    ])', 1), ('([36:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[FOV]:[36]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[7.5.4]:[1]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([1:/android/location/cts/fine/GnssAntennaInfoTest.java]:[FOV]:[1]:method_text:[ verifyFullGnssAntennaInfoValuesAndGetters(newGnssAntennaInfo);         parcel.recycle();     }     ])', 1), ('([1:/android/location/cts/fine/GnssAntennaInfoTest.java]:[FOV]:[1]:method_text:[rifyPartialGnssAntennaInfoValuesAndGetters(newGnssAntennaInfo);         parcel.recycle();     }     ])', 1), ('([1:/android/location/cts/fine/GnssAntennaInfoTest.java]:[FOV]:[1]:method_text:[estGnssAntennaInfo();         verifyFullGnssAntennaInfoValuesAndGetters(gnssAntennaInfo);     }     ])', 1), ('([3:/android/location/cts/fine/GnssAntennaInfoTest.java]:[FOV]:[3]:method_text:[ION_UNCERTAINTIES,                 signalGainCorrections.getCorrectionUncertaintiesArray());     } }])', 1), ('([1:/android/autofillservice/cts/CheckoutActivityTest.java]:[FOV]:[1]:method_text:[nored when the selected spinner element is not      * available in the autofill options.      */    ])', 1), ('([1:/android/autofillservice/cts/CheckoutActivityTest.java]:[FOV]:[1]:method_text:[         assertThat(saveUi.findObject(By.res(packageName, Helper.ID_STATIC_TEXT))).isNull();     } }])', 1), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[FOV]:[1]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}      */    ])', 1), ('([15:/android/hardware/camera2/cts/RobustnessTest.java]:[FOV]:[15]:method_text:[AG, ""getMaxPreviewSize Failed. ""+e.toString());         }         return PREVIEW_SIZE_BOUND;     } }])', 1), ('([1:/android/autofillservice/cts/OnClickActionTest.java]:[FOV]:[1]:method_text:[esourceId) {         mUiBot.assertGoneByRelativeId(saveUi, resourceId, Timeouts.UI_TIMEOUT);     } }])', 1), ('([1:/android/view/inputmethod/cts/InlineSuggestionInfoTest.java]:[FOV]:[1]:method_text:[()).isEqualTo(InlineSuggestionInfo.TYPE_SUGGESTION);         assertTrue(info.isPinned());     }     ])', 1), ('([1:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[FOV]:[1]:method_text:[ultinetwork_connectivity_test_running);                 }                  @Override                ])', 1), ('([1:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[FOV]:[1]:method_text:[iew.setText(progressMessageResourceId);                 }                  @Override                ])', 1), ('([6:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[FOV]:[6]:method_text:[}     }      private interface SetWifiCallback {         void onComplete(boolean isSuccess);     } }])', 1)]"					
212:651746) 7.5.4  . Camera API Behavior	7.5.4	C-0-12		[('android.hardware.cts.CameraTest', 12), ('android.hardware.camera2.cts.FastBasicsTest', 4), ('android.hardware.camera2.cts.CameraDeviceTest', 4), ('android.hardware.cts.Camera_SizeTest', 4), ('android.app.cts.SystemFeaturesTest', 3), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 3), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 3), ('android.hardware.camera2.cts.HeifWriterTest', 2), ('android.hardware.camera2.cts.ImageWriterTest', 2), ('android.hardware.camera2.cts.AllocationTest', 2), ('android.media.cts.MediaPlayerDrmTest', 2), ('com.android.cts.devicepolicy.ManagedProfileTest', 2), ('android.hardware.camera2.cts.NativeCameraDeviceTest', 2), ('android.hardware.camera2.cts.MultiViewTest', 2), ('android.hardware.camera2.cts.NativeImageReaderTest', 2), ('android.security.cts.OutputConfigurationTest', 2), ('android.view.cts.TextureViewCameraTest', 2), ('com.android.cts.verifier.camera.performance.CameraPerformanceActivity', 2), ('android.hardware.cts.LegacyCameraPerformanceTest', 2), ('android.hardware.cts.Camera_ParametersTest', 2), ('android.content.cts.BroadcastReceiverTest', 2), ('android.hardware.multiprocess.camera.cts.CameraEvictionTest', 2), ('android.hardware.camera2.cts.ImageReaderTest', 2), ('com.android.cts.ephemeralapp1.ClientTest', 2), ('android.graphics.cts.CameraVulkanGpuTest', 2), ('android.hardware.camera2.cts.ConcurrentCameraTest', 2), ('android.media.cts.MediaPlayerTest', 2), ('android.hardware.camera2.cts.PerformanceTest', 2), ('android.hardware.camera2.cts.IdleUidTest', 2), ('android.hardware.cts.CameraGLTest', 2), ('android.hardware.camera2.cts.NativeCameraManagerTest', 2), ('android.hardware.camera2.cts.CaptureRequestTest', 2), ('android.hardware.camera2.cts.BurstCaptureTest', 2), ('android.hardware.camera2.cts.CaptureResultTest', 2), ('android.hardware.camera2.cts.StaticMetadataTest', 2), ('com.android.server.cts.device.statsd.AtomTests', 2), ('android.hardware.camera2.cts.ReprocessCaptureTest', 2), ('android.media.cts.MediaRecorderTest', 2), ('android.hardware.camera2.cts.DngCreatorTest', 2), ('android.permission.cts.CameraPermissionTest', 2), ('android.hardware.camera2.cts.RecordingTest', 2), ('android.hardware.camera2.cts.CameraManagerTest', 2), ('android.hardware.camera2.cts.RobustnessTest', 2), ('android.camera.cts.api25test.EnableZslTest', 2), ('android.content.pm.cts.FeatureGroupInfoTest', 2), ('android.permission.cts.Camera2PermissionTest', 2), ('com.android.cts.deviceandprofileowner.UserRestrictionsParentTest', 2), ('android.hardware.camera2.cts.FlashlightTest', 2), ('com.android.cts.managedprofile.CameraPolicyTest', 2), ('android.media.cts.CameraProfileTest', 2), ('android.hardware.camera2.cts.BurstCaptureRawTest', 2), ('android.hardware.camera2.cts.StillCaptureTest', 2), ('android.mediastress.cts.MediaRecorderStressTest', 2), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 2), ('android.hardware.camera2.cts.OfflineSessionTest', 2), ('android.media.cts.CamcorderProfileTest', 2), ('android.hardware.camera2.cts.SurfaceViewPreviewTest', 2), ('android.hardware.camera2.cts.NativeStillCaptureTest', 2)]	[('setUp', 94), ('tearDown', 60), ('getWidth', 10), ('getContext', 10), ('getInstrumentation', 8), ('getPackageManager', 6), ('getHeight', 6), ('Monitor', 6), ('getTargetContext', 4), ('getSystemAvailableFeatures', 4), ('getSimpleName', 4), ('close', 4), ('start', 4), ('BlockingStateCallback', 4), ('clearContext', 4), ('getDownloadedFolder', 4), ('getActivity', 4), ('Object', 4), ('getExternalStorageDirectory', 4), ('toString', 4), ('never', 4), ('PreviewCallback', 4), ('ConditionVariable', 4), ('startBackgroundThread', 4), ('getLooper', 2), ('CameraIterable', 2), ('SizeIterable', 2), ('ResultIterable', 2), ('quitSafely', 2), ('getSourceSize', 2), ('getSize', 2), ('getLaunchOptions', 2), ('LaunchOptions', 2), ('toRectF', 2), ('BlockingSessionCallback', 2), ('CaptureCallback', 2), ('advanceInputWaiting', 2), ('execute', 2), ('stopCapture', 2), ('getStateWaiter', 2), ('getInputData', 2), ('getOutputAllocation', 2), ('getBytesSize', 2), ('getOutputData', 2), ('getPath', 2), ('setup', 2), ('getNumberOfCameras', 2), ('initializeAvailabilityCallbacksNative', 2), ('getAbsolutePath', 2), ('startHandlerThread', 2), ('stopHandlerThread', 2), ('quit', 2), ('getCacheDir', 2), ('anyInt', 2), ('SurfaceTextureCallback', 2), ('SurfaceTextureBurstCallback', 2), ('beforeActivityLaunched', 2), ('Renderer', 2), ('getView', 2), ('getVideoEncoders', 2), ('onShutter', 2), ('flush', 2), ('getContentResolver', 2), ('getUiAutomation', 2), ('hasFlash', 2), ('stopBackgroundThread', 2), ('getTopDirString', 2), ('CameraErrorCallback', 2), ('RecorderErrorCallback', 2), ('getDevice', 2), ('getStdout', 2), ('trim', 2), ('hasProfile', 2)]	[('CtsCameraTestCases', 90), ('CtsMediaTestCases', 10), ('CtsContentTestCases', 4), ('CtsPermissionTestCases', 4), ('CtsAppTestCases', 3), ('CtsSecurityTestCases', 2), ('CtsViewTestCases', 2), ('CtsGraphicsTestCases', 2), ('CtsCameraApi25TestCases', 2), ('CtsMediaStressTestCases', 2)]		7.5.4/C-0-12	"""C-0-12] MUST ensure that the facial appearance is NOT altered, including but not limited to altering facial geometry, facial skin tone, or facial skin smoothening for any android.hardware.camera2 or android.hardware.Camera API. """	07050400.670012	android.hardware.camera 7.5.4/C-0-12 android.hardware.Camera 7.5.4 C-0-12				[('android.hardware.camera', 66), ('android.hardware.Camera', 66), ('7.5.4', 3)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testCameraFeatures CtsCameraTestCases:android.hardware.camera2.cts.HeifWriterTest.isInstantApp CtsCameraTestCases:android.hardware.camera2.cts.HeifWriterTest.isInstantApp None:com.android.cts.verifier.camera.performance.CameraPerformanceActivity.CameraTestInstrumentation None:com.android.cts.verifier.camera.performance.CameraPerformanceActivity.CameraTestInstrumentation CtsCameraTestCases:android.hardware.cts.LegacyCameraPerformanceTest.CameraPerformanceTestHelper CtsCameraTestCases:android.hardware.cts.LegacyCameraPerformanceTest.CameraPerformanceTestHelper CtsContentTestCases:android.content.cts.BroadcastReceiverTest.BroadcastReceiverTest CtsContentTestCases:android.content.cts.BroadcastReceiverTest.BroadcastReceiverTest CtsCameraTestCases:android.hardware.multiprocess.camera.cts.CameraEvictionTest.CameraEvictionTest CtsCameraTestCases:android.hardware.multiprocess.camera.cts.CameraEvictionTest.CameraEvictionTest CtsCameraTestCases:android.hardware.camera2.cts.FastBasicsTest.testCamera1 CtsCameraTestCases:android.hardware.camera2.cts.FastBasicsTest.testCamera1 CtsMediaTestCases:android.media.cts.MediaPlayerTest.exists CtsMediaTestCases:android.media.cts.MediaPlayerTest.exists CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testMonochromeCharacteristics CtsCameraTestCases:android.hardware.camera2.cts.CameraDeviceTest.testCameraDeviceRepeatingBurst CtsCameraTestCases:android.hardware.camera2.cts.CameraDeviceTest.testCameraDeviceRepeatingBurst CtsCameraTestCases:android.hardware.cts.CameraGLTest.deriveCameraIdsUnderTest CtsCameraTestCases:android.hardware.cts.CameraGLTest.deriveCameraIdsUnderTest CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsMediaTestCases:android.media.cts.MediaRecorderTest.MediaRecorderTest CtsMediaTestCases:android.media.cts.MediaRecorderTest.MediaRecorderTest CtsCameraTestCases:android.hardware.camera2.cts.RecordingTest.isColorOutputSupported CtsCameraTestCases:android.hardware.camera2.cts.RecordingTest.isColorOutputSupported CtsCameraTestCases:android.hardware.cts.Camera_SizeTest.testConstructor CtsCameraTestCases:android.hardware.cts.Camera_SizeTest.testConstructor CtsCameraTestCases:android.hardware.camera2.cts.CameraManagerTest.NoopCameraListener CtsCameraTestCases:android.hardware.camera2.cts.CameraManagerTest.NoopCameraListener CtsCameraApi25TestCases:android.camera.cts.api25test.EnableZslTest.getCameraIdList CtsCameraApi25TestCases:android.camera.cts.api25test.EnableZslTest.getCameraIdList CtsContentTestCases:android.content.pm.cts.FeatureGroupInfoTest.testFeatureGroupsAreCorrect CtsContentTestCases:android.content.pm.cts.FeatureGroupInfoTest.testFeatureGroupsAreCorrect CtsPermissionTestCases:android.permission.cts.Camera2PermissionTest.getCameraIdList CtsPermissionTestCases:android.permission.cts.Camera2PermissionTest.getCameraIdList None:com.android.cts.deviceandprofileowner.UserRestrictionsParentTest.dropShellPermissionIdentity None:com.android.cts.deviceandprofileowner.UserRestrictionsParentTest.dropShellPermissionIdentity CtsCameraTestCases:android.hardware.cts.CameraTest.TestShutterCallback CtsCameraTestCases:android.hardware.cts.CameraTest.testPreviewCallbackWithBuffer CtsCameraTestCases:android.hardware.cts.CameraTest.testSmoothZoom CtsCameraTestCases:android.hardware.cts.CameraTest.testPreviewPictureSizesCombination CtsCameraTestCases:android.hardware.cts.CameraTest.testPreviewFpsRange CtsCameraTestCases:android.hardware.cts.CameraTest.testMultiCameraRelease CtsCameraTestCases:android.hardware.cts.CameraTest.TestShutterCallback CtsCameraTestCases:android.hardware.cts.CameraTest.testPreviewCallbackWithBuffer CtsCameraTestCases:android.hardware.cts.CameraTest.testSmoothZoom CtsCameraTestCases:android.hardware.cts.CameraTest.testPreviewPictureSizesCombination CtsCameraTestCases:android.hardware.cts.CameraTest.testPreviewFpsRange CtsCameraTestCases:android.hardware.cts.CameraTest.testMultiCameraRelease CtsMediaStressTestCases:android.mediastress.cts.MediaRecorderStressTest.MediaRecorderStressTest CtsMediaStressTestCases:android.mediastress.cts.MediaRecorderStressTest.MediaRecorderStressTest		[('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/cts/CameraTest.java', 12), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/FastBasicsTest.java', 4), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 4), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/cts/Camera_SizeTest.java', 4), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 3), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/HeifWriterTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageWriterTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/AllocationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaPlayerDrmTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/MultiViewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeImageReaderTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/OutputConfigurationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/TextureViewCameraTest.java', 2), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/cts/LegacyCameraPerformanceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/cts/Camera_ParametersTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/BroadcastReceiverTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ImageReaderTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/EphemeralApp1/src/com/android/cts/ephemeralapp1/ClientTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/CameraVulkanGpuTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ConcurrentCameraTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaPlayerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/IdleUidTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/cts/CameraGLTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeCameraManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureResultTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/StaticMetadataTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/apps/statsdapp/src/com/android/server/cts/device/statsd/AtomTests.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ReprocessCaptureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRecorderTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/DngCreatorTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/CameraPermissionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/RobustnessTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/api25test/src/android/camera/cts/api25test/EnableZslTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/FeatureGroupInfoTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/Camera2PermissionTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/FlashlightTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CameraPolicyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/CameraProfileTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/BurstCaptureRawTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/StillCaptureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/MediaRecorderStressTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/CamcorderProfileTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/SurfaceViewPreviewTest.java', 2), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeStillCaptureTest.java', 2)]	[('/android/hardware/cts/CameraTest.java', 14), ('/android/app/cts/SystemFeaturesTest.java', 6), ('/android/hardware/camera2/cts/FastBasicsTest.java', 6), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 6), ('/android/hardware/camera2/cts/CameraDeviceTest.java', 6), ('/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 6), ('/android/hardware/cts/Camera_SizeTest.java', 6), ('/android/hardware/camera2/cts/HeifWriterTest.java', 4), ('/android/hardware/camera2/cts/ImageWriterTest.java', 4), ('/android/hardware/camera2/cts/AllocationTest.java', 4), ('/android/media/cts/MediaPlayerDrmTest.java', 4), ('/com/android/cts/devicepolicy/ManagedProfileTest.java', 4), ('/android/hardware/camera2/cts/NativeCameraDeviceTest.java', 4), ('/android/hardware/camera2/cts/MultiViewTest.java', 4), ('/android/hardware/camera2/cts/NativeImageReaderTest.java', 4), ('/android/security/cts/OutputConfigurationTest.java', 4), ('/android/view/cts/TextureViewCameraTest.java', 4), ('/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java', 4), ('/android/hardware/cts/LegacyCameraPerformanceTest.java', 4), ('/android/hardware/cts/Camera_ParametersTest.java', 4), ('/android/content/cts/BroadcastReceiverTest.java', 4), ('/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java', 4), ('/android/hardware/camera2/cts/ImageReaderTest.java', 4), ('/com/android/cts/ephemeralapp1/ClientTest.java', 4), ('/android/graphics/cts/CameraVulkanGpuTest.java', 4), ('/android/hardware/camera2/cts/ConcurrentCameraTest.java', 4), ('/android/media/cts/MediaPlayerTest.java', 4), ('/android/hardware/camera2/cts/PerformanceTest.java', 4), ('/android/hardware/camera2/cts/IdleUidTest.java', 4), ('/android/hardware/cts/CameraGLTest.java', 4), ('/android/hardware/camera2/cts/NativeCameraManagerTest.java', 4), ('/android/hardware/camera2/cts/CaptureRequestTest.java', 4), ('/android/hardware/camera2/cts/BurstCaptureTest.java', 4), ('/android/hardware/camera2/cts/CaptureResultTest.java', 4), ('/android/hardware/camera2/cts/StaticMetadataTest.java', 4), ('/com/android/server/cts/device/statsd/AtomTests.java', 4), ('/android/hardware/camera2/cts/ReprocessCaptureTest.java', 4), ('/android/media/cts/MediaRecorderTest.java', 4), ('/android/hardware/camera2/cts/DngCreatorTest.java', 4), ('/android/permission/cts/CameraPermissionTest.java', 4), ('/android/hardware/camera2/cts/RecordingTest.java', 4), ('/android/hardware/camera2/cts/CameraManagerTest.java', 4), ('/android/hardware/camera2/cts/RobustnessTest.java', 4), ('/android/camera/cts/api25test/EnableZslTest.java', 4), ('/android/content/pm/cts/FeatureGroupInfoTest.java', 4), ('/android/permission/cts/Camera2PermissionTest.java', 4), ('/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 4), ('/android/hardware/camera2/cts/FlashlightTest.java', 4), ('/com/android/cts/managedprofile/CameraPolicyTest.java', 4), ('/android/media/cts/CameraProfileTest.java', 4), ('/android/hardware/camera2/cts/BurstCaptureRawTest.java', 4), ('/android/hardware/camera2/cts/StillCaptureTest.java', 4), ('/android/mediastress/cts/MediaRecorderStressTest.java', 4), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 4), ('/android/hardware/camera2/cts/OfflineSessionTest.java', 4), ('/android/media/cts/CamcorderProfileTest.java', 4), ('/android/hardware/camera2/cts/SurfaceViewPreviewTest.java', 4), ('/android/hardware/camera2/cts/NativeStillCaptureTest.java', 4)]	"[('([7:/android/app/cts/SystemFeaturesTest.java]:[android.hardware.camera]:[7]:method_text:[properly prefixed with ""android."" that are not defined in      * {@link PackageManager}.      */    ])', 1), ('([7:/android/app/cts/SystemFeaturesTest.java]:[android.hardware.Camera]:[7]:method_text:[properly prefixed with ""android."" that are not defined in      * {@link PackageManager}.      */    ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[7.5.4]:[1]:method_text:[          if (camera != null) {                 camera.release();             }         }     }     ])', 1), ('([11:/android/hardware/camera2/cts/HeifWriterTest.java]:[android.hardware.camera]:[11]:method_text:[ }      @Override     public void tearDown() throws Exception {         super.tearDown();     }     ])', 1), ('([11:/android/hardware/camera2/cts/HeifWriterTest.java]:[android.hardware.Camera]:[11]:method_text:[ }      @Override     public void tearDown() throws Exception {         super.tearDown();     }     ])', 1), ('([7:/android/hardware/camera2/cts/ImageWriterTest.java]:[android.hardware.camera]:[7]:method_text:[. This validates the ImageWriter explicit buffer copy      * interface.</li>      * </p>      */    ])', 1), ('([7:/android/hardware/camera2/cts/ImageWriterTest.java]:[android.hardware.Camera]:[7]:method_text:[. This validates the ImageWriter explicit buffer copy      * interface.</li>      * </p>      */    ])', 1), ('([25:/android/hardware/camera2/cts/AllocationTest.java]:[android.hardware.camera]:[25]:method_text:[alSizeOut);          if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);     }     ])', 1), ('([25:/android/hardware/camera2/cts/AllocationTest.java]:[android.hardware.Camera]:[25]:method_text:[alSizeOut);          if (VERBOSE) Log.v(TAG, ""validating Buffer , size = "" + actualSize);     }     ])', 1), ('([1:/android/media/cts/MediaPlayerDrmTest.java]:[android.hardware.camera]:[1]:method_text:[inal Uri CENC_VIDEO_URL_DOWNLOADED = getUriFromFile(""car_cenc-20120827-88.mp4"");       // Tests     ])', 1), ('([1:/android/media/cts/MediaPlayerDrmTest.java]:[android.hardware.Camera]:[1]:method_text:[inal Uri CENC_VIDEO_URL_DOWNLOADED = getUriFromFile(""car_cenc-20120827-88.mp4"");       // Tests     ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[android.hardware.camera]:[1]:method_text:[ DEVICE_OWNER_ADMIN =             DEVICE_OWNER_PKG + "".BaseDeviceOwnerTest$BasicAdminReceiver"";     ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[android.hardware.Camera]:[1]:method_text:[ DEVICE_OWNER_ADMIN =             DEVICE_OWNER_PKG + "".BaseDeviceOwnerTest$BasicAdminReceiver"";     ])', 1), ('([2:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[android.hardware.camera]:[2]:method_text:[dLibrary(""ctscamera2_jni"");         Log.i(""NativeCameraDeviceTest"", ""after loadlibrary"");     }     ])', 1), ('([2:/android/hardware/camera2/cts/NativeCameraDeviceTest.java]:[android.hardware.Camera]:[2]:method_text:[dLibrary(""ctscamera2_jni"");         Log.i(""NativeCameraDeviceTest"", ""after loadlibrary"");     }     ])', 1), ('([13:/android/hardware/camera2/cts/MultiViewTest.java]:[android.hardware.camera]:[13]:method_text:[atic int YUV_IMG_READER_COUNT = 3;     private final static double BITMAP_DIFF_THRESHOLD = 0.1;     ])', 1), ('([13:/android/hardware/camera2/cts/MultiViewTest.java]:[android.hardware.Camera]:[13]:method_text:[atic int YUV_IMG_READER_COUNT = 3;     private final static double BITMAP_DIFF_THRESHOLD = 0.1;     ])', 1), ('([2:/android/hardware/camera2/cts/NativeImageReaderTest.java]:[android.hardware.camera]:[2]:method_text:[adLibrary(""ctscamera2_jni"");         Log.i(""NativeImageReaderTest"", ""after loadlibrary"");     }     ])', 1), ('([2:/android/hardware/camera2/cts/NativeImageReaderTest.java]:[android.hardware.Camera]:[2]:method_text:[adLibrary(""ctscamera2_jni"");         Log.i(""NativeImageReaderTest"", ""after loadlibrary"");     }     ])', 1), ('([1:/android/security/cts/OutputConfigurationTest.java]:[android.hardware.camera]:[1]:method_text:[arcel properly.  */ @SecurityTest public class OutputConfigurationTest extends AndroidTestCase {    ])', 1), ('([1:/android/security/cts/OutputConfigurationTest.java]:[android.hardware.Camera]:[1]:method_text:[arcel properly.  */ @SecurityTest public class OutputConfigurationTest extends AndroidTestCase {    ])', 1), ('([1:/android/view/cts/TextureViewCameraTest.java]:[android.hardware.camera]:[1]:method_text:[ty = mActivityRule.getActivity();         mNumberOfCameras = Camera.getNumberOfCameras();     }     ])', 1), ('([1:/android/view/cts/TextureViewCameraTest.java]:[android.hardware.Camera]:[1]:method_text:[ty = mActivityRule.getActivity();         mNumberOfCameras = Camera.getNumberOfCameras();     }     ])', 1), ('([1:/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java]:[android.hardware.camera]:[1]:method_text:[ends RunListener {         private volatile boolean mCurrentTestReported;          @Override        ])', 1), ('([1:/com/android/cts/verifier/camera/performance/CameraPerformanceActivity.java]:[android.hardware.Camera]:[1]:method_text:[ends RunListener {         private volatile boolean mCurrentTestReported;          @Override        ])', 1), ('([2:/android/hardware/cts/LegacyCameraPerformanceTest.java]:[android.hardware.camera]:[2]:method_text:[  if (mHelper.getCamera() != null) {             mHelper.getCamera().release();         }     }     ])', 1), ('([2:/android/hardware/cts/LegacyCameraPerformanceTest.java]:[android.hardware.Camera]:[2]:method_text:[  if (mHelper.getCamera() != null) {             mHelper.getCamera().release();         }     }     ])', 1), ('([1:/android/hardware/cts/Camera_ParametersTest.java]:[android.hardware.camera]:[1]:method_text:[port android.hardware.Camera.Parameters;  public class Camera_ParametersTest extends TestCase {     ])', 1), ('([1:/android/hardware/cts/Camera_ParametersTest.java]:[android.hardware.Camera]:[1]:method_text:[port android.hardware.Camera.Parameters;  public class Camera_ParametersTest extends TestCase {     ])', 1), ('([1:/android/content/cts/BroadcastReceiverTest.java]:[android.hardware.camera]:[1]:method_text:[    }      @Override     protected void setUp() throws Exception {         super.setUp();     }     ])', 1), ('([1:/android/content/cts/BroadcastReceiverTest.java]:[android.hardware.Camera]:[1]:method_text:[    }      @Override     protected void setUp() throws Exception {         super.setUp();     }     ])', 1), ('([4:/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java]:[android.hardware.camera]:[4]:method_text:[per.tearDown();     }      /**      * Test basic eviction scenarios for the Camera1 API.      */    ])', 1), ('([4:/android/hardware/multiprocess/camera/cts/CameraEvictionTest.java]:[android.hardware.Camera]:[4]:method_text:[per.tearDown();     }      /**      * Test basic eviction scenarios for the Camera1 API.      */    ])', 1), ('([16:/android/hardware/camera2/cts/ImageReaderTest.java]:[android.hardware.camera]:[16]:method_text:[ }      @Override     public void tearDown() throws Exception {         super.tearDown();     }     ])', 1), ('([16:/android/hardware/camera2/cts/ImageReaderTest.java]:[android.hardware.Camera]:[16]:method_text:[ }      @Override     public void tearDown() throws Exception {         super.tearDown();     }     ])', 1), ('([2:/com/android/cts/ephemeralapp1/ClientTest.java]:[android.hardware.camera]:[2]:method_text:[s Exception {         InstrumentationRegistry.getContext().unregisterReceiver(mReceiver);     }     ])', 1), ('([2:/com/android/cts/ephemeralapp1/ClientTest.java]:[android.hardware.Camera]:[2]:method_text:[s Exception {         InstrumentationRegistry.getContext().unregisterReceiver(mReceiver);     }     ])', 1), ('([2:/android/graphics/cts/CameraVulkanGpuTest.java]:[android.hardware.camera]:[2]:method_text:[ class CameraVulkanGpuTest {      static {         System.loadLibrary(""ctsgraphics_jni"");     }     ])', 1), ('([2:/android/graphics/cts/CameraVulkanGpuTest.java]:[android.hardware.Camera]:[2]:method_text:[ class CameraVulkanGpuTest {      static {         System.loadLibrary(""ctsgraphics_jni"");     }     ])', 1), ('([11:/android/hardware/camera2/cts/FastBasicsTest.java]:[android.hardware.camera]:[11]:method_text:[IMEOUT_MS = 5000;     private static final int FRAMES_TO_WAIT_FOR_CAPTURE = 100;      @Presubmit    ])', 1), ('([1:/android/hardware/camera2/cts/FastBasicsTest.java]:[android.hardware.camera]:[1]:method_text:[a != null) {                     camera.release();                 }             }         }     } }])', 1), ('([11:/android/hardware/camera2/cts/FastBasicsTest.java]:[android.hardware.Camera]:[11]:method_text:[IMEOUT_MS = 5000;     private static final int FRAMES_TO_WAIT_FOR_CAPTURE = 100;      @Presubmit    ])', 1), ('([1:/android/hardware/camera2/cts/FastBasicsTest.java]:[android.hardware.Camera]:[1]:method_text:[a != null) {                     camera.release();                 }             }         }     } }])', 1), ('([15:/android/hardware/camera2/cts/ConcurrentCameraTest.java]:[android.hardware.camera]:[15]:method_text:[ this.substituteY8 = substituteY8;             this.combination = combination;         }     };     ])', 1), ('([15:/android/hardware/camera2/cts/ConcurrentCameraTest.java]:[android.hardware.Camera]:[15]:method_text:[ this.substituteY8 = substituteY8;             this.combination = combination;         }     };     ])', 1), ('([1:/android/media/cts/MediaPlayerTest.java]:[android.hardware.camera]:[1]:method_text:[e != null && mOutFile.exists()) {             mOutFile.delete();         }     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaPlayerTest.java]:[android.hardware.Camera]:[1]:method_text:[e != null && mOutFile.exists()) {             mOutFile.delete();         }     }      @Presubmit    ])', 1), ('([18:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[android.hardware.camera]:[18]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([18:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[android.hardware.Camera]:[18]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[7.5.4]:[1]:method_text:[acy API are also      * accessible via Camera2.      */     @CddTest(requirement=""7.5.4/C-0-11"")    ])', 1), ('([16:/android/hardware/camera2/cts/PerformanceTest.java]:[android.hardware.camera]:[16]:method_text:[   * For depth-only devices, timing is done with the DEPTH16 format instead.      * </p>      */    ])', 1), ('([16:/android/hardware/camera2/cts/PerformanceTest.java]:[android.hardware.Camera]:[16]:method_text:[   * For depth-only devices, timing is done with the DEPTH16 format instead.      * </p>      */    ])', 1), ('([6:/android/hardware/camera2/cts/IdleUidTest.java]:[android.hardware.camera]:[6]:method_text:[);     }      /**      * Tests that a UID has access to the camera only in active state.      */    ])', 1), ('([6:/android/hardware/camera2/cts/IdleUidTest.java]:[android.hardware.Camera]:[6]:method_text:[);     }      /**      * Tests that a UID has access to the camera only in active state.      */    ])', 1), ('([20:/android/hardware/camera2/cts/CameraDeviceTest.java]:[android.hardware.camera]:[20]:method_text:[ure the stable frame rate is guaranteed for the given      * settings.</li>      * </ul>      */    ])', 1), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[android.hardware.camera]:[2]:method_text:[progress work. Once the abort is complete, the idle callback will be called.      * </p>      */    ])', 1), ('([20:/android/hardware/camera2/cts/CameraDeviceTest.java]:[android.hardware.Camera]:[20]:method_text:[ure the stable frame rate is guaranteed for the given      * settings.</li>      * </ul>      */    ])', 1), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[android.hardware.Camera]:[2]:method_text:[progress work. Once the abort is complete, the idle callback will be called.      * </p>      */    ])', 1), ('([4:/android/hardware/cts/CameraGLTest.java]:[android.hardware.camera]:[4]:method_text:[.setPreviewTexture in conjunction with the standard Camera preview callback */     @UiThreadTest    ])', 1), ('([4:/android/hardware/cts/CameraGLTest.java]:[android.hardware.Camera]:[4]:method_text:[.setPreviewTexture in conjunction with the standard Camera preview callback */     @UiThreadTest    ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraManagerTest.java]:[android.hardware.camera]:[1]:method_text:[Library(""ctscamera2_jni"");         Log.i(""NativeCameraManagerTest"", ""after loadlibrary"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/NativeCameraManagerTest.java]:[android.hardware.Camera]:[1]:method_text:[Library(""ctscamera2_jni"");         Log.i(""NativeCameraManagerTest"", ""after loadlibrary"");     }     ])', 1), ('([19:/android/hardware/camera2/cts/CaptureRequestTest.java]:[android.hardware.camera]:[19]:method_text:[        super.tearDown();     }      /**      * Test CaptureRequest settings parcelling.      */    ])', 1), ('([19:/android/hardware/camera2/cts/CaptureRequestTest.java]:[android.hardware.Camera]:[19]:method_text:[        super.tearDown();     }      /**      * Test CaptureRequest settings parcelling.      */    ])', 1), ('([18:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[android.hardware.camera]:[18]:method_text:[agtion behaves as expected      * for logical multi-camera and non-logical multi-camera.      */    ])', 1), ('([18:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[android.hardware.Camera]:[18]:method_text:[agtion behaves as expected      * for logical multi-camera and non-logical multi-camera.      */    ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[7.5.4]:[1]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([11:/android/hardware/camera2/cts/BurstCaptureTest.java]:[android.hardware.camera]:[11]:method_text:[ol.      * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.      */    ])', 1), ('([11:/android/hardware/camera2/cts/BurstCaptureTest.java]:[android.hardware.Camera]:[11]:method_text:[ol.      * Also verifies sensor settings operation if READ_SENSOR_SETTINGS is available.      */    ])', 1), ('([14:/android/hardware/camera2/cts/CaptureResultTest.java]:[android.hardware.camera]:[14]:method_text:[y times, and checks if there is any null entries in      * a capture result.      * </p>      */    ])', 1), ('([14:/android/hardware/camera2/cts/CaptureResultTest.java]:[android.hardware.Camera]:[14]:method_text:[y times, and checks if there is any null entries in      * a capture result.      * </p>      */    ])', 1), ('([11:/android/hardware/camera2/cts/StaticMetadataTest.java]:[android.hardware.camera]:[11]:method_text:[  /**      * Test the available capability for different hardware support level devices.      */    ])', 1), ('([11:/android/hardware/camera2/cts/StaticMetadataTest.java]:[android.hardware.Camera]:[11]:method_text:[  /**      * Test the available capability for different hardware support level devices.      */    ])', 1), ('([3:/com/android/server/cts/device/statsd/AtomTests.java]:[android.hardware.camera]:[3]:method_text:[NSTALLER, 98);         APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_NO_ISOLATED_STORAGE, 99);     }     ])', 1), ('([3:/com/android/server/cts/device/statsd/AtomTests.java]:[android.hardware.Camera]:[3]:method_text:[NSTALLER, 98);         APP_OPS_ENUM_MAP.put(AppOpsManager.OPSTR_NO_ISOLATED_STORAGE, 99);     }     ])', 1), ('([12:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[android.hardware.camera]:[12]:method_text:[KEYS,     }      /**      * Test YUV_420_888 -> YUV_420_888 with maximal supported sizes      */    ])', 1), ('([12:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[android.hardware.Camera]:[12]:method_text:[KEYS,     }      /**      * Test YUV_420_888 -> YUV_420_888 with maximal supported sizes      */    ])', 1), ('([1:/android/media/cts/MediaRecorderTest.java]:[android.hardware.camera]:[1]:method_text:[   mNextOutputFileStartedCond = null;         mActivity = null;         super.tearDown();     }     ])', 1), ('([1:/android/media/cts/MediaRecorderTest.java]:[android.hardware.Camera]:[1]:method_text:[   mNextOutputFileStartedCond = null;         mActivity = null;         super.tearDown();     }     ])', 1), ('([14:/android/hardware/camera2/cts/DngCreatorTest.java]:[android.hardware.camera]:[14]:method_text:[captured for the first reported camera device to be saved to an output file.      * </p>      */    ])', 1), ('([14:/android/hardware/camera2/cts/DngCreatorTest.java]:[android.hardware.Camera]:[14]:method_text:[captured for the first reported camera device to be saved to an output file.      * </p>      */    ])', 1), ('([1:/android/permission/cts/CameraPermissionTest.java]:[android.hardware.camera]:[1]:method_text:[ Requires Permission:      * {@link android.Manifest.permission#CAMERA}.      */     @MediumTest    ])', 1), ('([1:/android/permission/cts/CameraPermissionTest.java]:[android.hardware.Camera]:[1]:method_text:[ Requires Permission:      * {@link android.Manifest.permission#CAMERA}.      */     @MediumTest    ])', 1), ('([13:/android/hardware/camera2/cts/RecordingTest.java]:[android.hardware.camera]:[13]:method_text:[on and validate the      * recorded video. Preview is set to the video size.      * </p>      */    ])', 1), ('([13:/android/hardware/camera2/cts/RecordingTest.java]:[android.hardware.Camera]:[13]:method_text:[on and validate the      * recorded video. Preview is set to the video size.      * </p>      */    ])', 1), ('([2:/android/hardware/cts/Camera_SizeTest.java]:[android.hardware.camera]:[2]:method_text:[float ASPECT_RATIO_TOLERANCE = 0.05f;      private static final String TAG = ""Camera_SizeTest"";     ])', 1), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[android.hardware.camera]:[1]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}      */    ])', 1), ('([2:/android/hardware/cts/Camera_SizeTest.java]:[android.hardware.Camera]:[2]:method_text:[float ASPECT_RATIO_TOLERANCE = 0.05f;      private static final String TAG = ""Camera_SizeTest"";     ])', 1), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[android.hardware.Camera]:[1]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}      */    ])', 1), ('([10:/android/hardware/camera2/cts/CameraManagerTest.java]:[android.hardware.camera]:[10]:method_text:[fail(""Invalid CameraAccessException code: "" + reason);          return -1; // unreachable     }     ])', 1), ('([10:/android/hardware/camera2/cts/CameraManagerTest.java]:[android.hardware.Camera]:[10]:method_text:[fail(""Invalid CameraAccessException code: "" + reason);          return -1; // unreachable     }     ])', 1), ('([20:/android/hardware/camera2/cts/RobustnessTest.java]:[android.hardware.camera]:[20]:method_text:[uffer size in the      * available stream configurations for a surface with this format.      */    ])', 1), ('([20:/android/hardware/camera2/cts/RobustnessTest.java]:[android.hardware.Camera]:[20]:method_text:[uffer size in the      * available stream configurations for a surface with this format.      */    ])', 1), ('([8:/android/camera/cts/api25test/EnableZslTest.java]:[android.hardware.camera]:[8]:method_text:[ <p>Verify CaptureRequest.CONTROL_ENABLE_ZSL is false if available in all templates.</p>      */    ])', 1), ('([8:/android/camera/cts/api25test/EnableZslTest.java]:[android.hardware.Camera]:[8]:method_text:[ <p>Verify CaptureRequest.CONTROL_ENABLE_ZSL is false if available in all templates.</p>      */    ])', 1), ('([2:/android/content/pm/cts/FeatureGroupInfoTest.java]:[android.hardware.camera]:[2]:method_text:[o2.flags);                     }                     return diff;                 }             }; }])', 1), ('([2:/android/content/pm/cts/FeatureGroupInfoTest.java]:[android.hardware.Camera]:[2]:method_text:[o2.flags);                     }                     return diff;                 }             }; }])', 1), ('([4:/android/permission/cts/Camera2PermissionTest.java]:[android.hardware.camera]:[4]:method_text:[ to open camera. Requires Permission:      * {@link android.Manifest.permission#CAMERA}.      */    ])', 1), ('([4:/android/permission/cts/Camera2PermissionTest.java]:[android.hardware.Camera]:[4]:method_text:[ to open camera. Requires Permission:      * {@link android.Manifest.permission#CAMERA}.      */    ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[android.hardware.camera]:[1]:method_text:[ad.sleep(1000);         }         throw new AssertionError(""Failed to get UiAutomation"");     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[android.hardware.Camera]:[1]:method_text:[ad.sleep(1000);         }         throw new AssertionError(""Failed to get UiAutomation"");     }     ])', 1), ('([7:/android/hardware/camera2/cts/FlashlightTest.java]:[android.hardware.camera]:[7]:method_text:[f (info.hasFlash()) {                 mFlashCameraIdList.add(id);             }         }     }     ])', 1), ('([7:/android/hardware/camera2/cts/FlashlightTest.java]:[android.hardware.Camera]:[7]:method_text:[f (info.hasFlash()) {                 mFlashCameraIdList.add(id);             }         }     }     ])', 1), ('([1:/com/android/cts/managedprofile/CameraPolicyTest.java]:[android.hardware.camera]:[1]:method_text:[d tearDown() throws Exception {         stopBackgroundThread();         super.tearDown();     }     ])', 1), ('([1:/com/android/cts/managedprofile/CameraPolicyTest.java]:[android.hardware.Camera]:[1]:method_text:[d tearDown() throws Exception {         stopBackgroundThread();         super.tearDown();     }     ])', 1), ('([13:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[13]:method_text:[ture and verify all the callback      * functions are called properly.      */     @UiThreadTest    ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[1]:method_text:[r3 == 1) {                 mPreviewDone.open();             }         }     }      @UiThreadTest    ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[1]:method_text:[f (stopped) {                 mZoomDone.open();             }         }     }      @UiThreadTest    ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[1]:method_text:[= PREVIEW_CALLBACK_RECEIVED;             mPreviewDone.open();         }     }      @UiThreadTest    ])', 1), ('([2:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[2]:method_text:[ "")"",                     Character.isLetter(c) && c != \'x\');         }     }      @UiThreadTest    ])', 1), ('([4:/android/hardware/cts/CameraTest.java]:[android.hardware.camera]:[4]:method_text:[callback, id "" + mId + ""."");             mPreviewDone.open();         }     }      @UiThreadTest    ])', 1), ('([13:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[13]:method_text:[ture and verify all the callback      * functions are called properly.      */     @UiThreadTest    ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[1]:method_text:[r3 == 1) {                 mPreviewDone.open();             }         }     }      @UiThreadTest    ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[1]:method_text:[f (stopped) {                 mZoomDone.open();             }         }     }      @UiThreadTest    ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[1]:method_text:[= PREVIEW_CALLBACK_RECEIVED;             mPreviewDone.open();         }     }      @UiThreadTest    ])', 1), ('([2:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[2]:method_text:[ "")"",                     Character.isLetter(c) && c != \'x\');         }     }      @UiThreadTest    ])', 1), ('([4:/android/hardware/cts/CameraTest.java]:[android.hardware.Camera]:[4]:method_text:[callback, id "" + mId + ""."");             mPreviewDone.open();         }     }      @UiThreadTest    ])', 1), ('([1:/android/media/cts/CameraProfileTest.java]:[android.hardware.camera]:[1]:method_text:[     assertTrue(high >= 0 && high <= 100);         assertTrue(low <= mid && mid <= high);     }     ])', 1), ('([1:/android/media/cts/CameraProfileTest.java]:[android.hardware.Camera]:[1]:method_text:[     assertTrue(high >= 0 && high <= 100);         assertTrue(low <= mid && mid <= high);     }     ])', 1), ('([12:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[android.hardware.camera]:[12]:method_text:[own();     }      /**      * Verify raw sensor size information is correctly configured.      */    ])', 1), ('([12:/android/hardware/camera2/cts/BurstCaptureRawTest.java]:[android.hardware.Camera]:[12]:method_text:[own();     }      /**      * Verify raw sensor size information is correctly configured.      */    ])', 1), ('([14:/android/hardware/camera2/cts/StillCaptureTest.java]:[android.hardware.camera]:[14]:method_text:[  super.tearDown();     }      /**      * Test JPEG capture exif fields for each camera.      */    ])', 1), ('([14:/android/hardware/camera2/cts/StillCaptureTest.java]:[android.hardware.Camera]:[14]:method_text:[  super.tearDown();     }      /**      * Test JPEG capture exif fields for each camera.      */    ])', 1), ('([4:/android/mediastress/cts/MediaRecorderStressTest.java]:[android.hardware.camera]:[4]:method_text:[order error"");         }     }      //Test case for stressing the camera preview.     @LargeTest    ])', 1), ('([4:/android/mediastress/cts/MediaRecorderStressTest.java]:[android.hardware.Camera]:[4]:method_text:[order error"");         }     }      //Test case for stressing the camera preview.     @LargeTest    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.camera]:[1]:method_text:[has-feature "" + feature);         return Boolean.parseBoolean(result.getStdout().trim());     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[android.hardware.Camera]:[1]:method_text:[has-feature "" + feature);         return Boolean.parseBoolean(result.getStdout().trim());     }     ])', 1), ('([13:/android/hardware/camera2/cts/OfflineSessionTest.java]:[android.hardware.camera]:[13]:method_text:[* surfaces not registered with camera or surfaces used in      * repeating requests.</p>      */    ])', 1), ('([13:/android/hardware/camera2/cts/OfflineSessionTest.java]:[android.hardware.Camera]:[13]:method_text:[* surfaces not registered with camera or surfaces used in      * repeating requests.</p>      */    ])', 1), ('([3:/android/media/cts/CamcorderProfileTest.java]:[android.hardware.camera]:[3]:method_text:[dProfile, highHighSpeedProfile,                 specificHighSpeedProfileQualities, null);     }     ])', 1), ('([3:/android/media/cts/CamcorderProfileTest.java]:[android.hardware.Camera]:[3]:method_text:[dProfile, highHighSpeedProfile,                 specificHighSpeedProfileQualities, null);     }     ])', 1), ('([14:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[android.hardware.camera]:[14]:method_text:[e capture timestamp      * (monotonically increasing) ordering are verified.      * </p>      */    ])', 1), ('([14:/android/hardware/camera2/cts/SurfaceViewPreviewTest.java]:[android.hardware.Camera]:[14]:method_text:[e capture timestamp      * (monotonically increasing) ordering are verified.      * </p>      */    ])', 1), ('([2:/android/hardware/camera2/cts/NativeStillCaptureTest.java]:[android.hardware.camera]:[2]:method_text:[dLibrary(""ctscamera2_jni"");         Log.i(""NativeStillCaptureTest"", ""after loadlibrary"");     }     ])', 1), ('([2:/android/hardware/camera2/cts/NativeStillCaptureTest.java]:[android.hardware.Camera]:[2]:method_text:[dLibrary(""ctscamera2_jni"");         Log.i(""NativeStillCaptureTest"", ""after loadlibrary"");     }     ])', 1)]"					
239:709221) 9.1  . Permissions	9.1	C-2-1		[('android.appsecurity.cts.ApkVerityInstallTest', 12), ('android.appsecurity.cts.PkgInstallSignatureVerificationTest', 7), ('android.hardware.cts.SensorSupportTest', 4), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.app.cts.SystemFeaturesTest', 1), ('android.systemintents.cts.TestManageOverlayPermissionIntents', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerRequestPinTest', 1), ('android.opengl.cts.OpenGlEsVersionTest', 1), ('android.security.cts.KernelConfigTest', 1), ('android.keystore.cts.KeyAttestationTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.location.cts.fine.ScanningSettingsTest', 1), ('android.appwidget.cts.RequestPinAppWidgetTest', 1), ('com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity', 1)]	[('setUp', 5), ('getContext', 4), ('getDevice', 2), ('getPackageManager', 2), ('size', 2), ('getLaunchApiLevel', 1), ('tearDown', 1), ('getSimpleName', 1), ('setup', 1), ('getTargetContext', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('getInstrumentation', 1), ('getResources', 1), ('getConfiguration', 1)]	[('CtsSensorTestCases', 4), ('CtsSecurityTestCases', 3), ('CtsAppTestCases', 1), ('CtsSystemIntentTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsOpenGLTestCases', 1), ('CtsKeystoreTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsAppWidgetTestCases', 1)]		9.1/C-2-1	"""C-2-1] MUST ensure that all activities with intent filters for the ACTION_MANAGE_OVERLAY_PERMISSION intent have the same UI screen, regardless of the initiating app or any information it provides. <h3 id="""	09010000.670201	C-2-1 ACTION_MANAGE_OVERLAY_PERMISSION 9.1/C-2-1 9.1				[('9.1', 24), ('C-2-1', 10), ('ACTION_MANAGE_OVERLAY_PERMISSION', 2)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsSystemIntentTestCases:android.systemintents.cts.TestManageOverlayPermissionIntents.testManageOverlayPermissionIntentWithDataResolvesToSameIntentWithoutData None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBase None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig None:android.appsecurity.cts.PkgInstallSignatureVerificationTest.testInstallV1OneSignerMD5withRSA None:android.appsecurity.cts.PkgInstallSignatureVerificationTest.testInstallV1OneSignerSHA1withRSA None:android.appsecurity.cts.PkgInstallSignatureVerificationTest.testInstallV1OneSignerSHA224withRSA None:android.appsecurity.cts.PkgInstallSignatureVerificationTest.testInstallV1OneSignerSHA256withRSA None:android.appsecurity.cts.PkgInstallSignatureVerificationTest.testInstallV1OneSignerSHA384withRSA None:android.appsecurity.cts.PkgInstallSignatureVerificationTest.testInstallV1OneSignerSHA512withRSA None:android.appsecurity.cts.PkgInstallSignatureVerificationTest.testCorrectCertUsedFromPkcs7SignedDataCertsSet CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredExtensions None:android.security.cts.KernelConfigTest.testConfigDisableUsermodehelper CtsKeystoreTestCases:android.keystore.cts.KeyAttestationTest.testVersionParser CtsLocationFineTestCases:android.location.cts.fine.ScanningSettingsTest.isTV CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsSignificantMotion CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepDetector CtsSensorTestCases:android.hardware.cts.SensorSupportTest.testSupportsStepCounter CtsAppWidgetTestCases:android.appwidget.cts.RequestPinAppWidgetTest.testPinWidget_launcher2 None:com.android.cts.verifier.net.MultiNetworkConnectivityTestActivity.startTest		[('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 12), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java', 7), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorSupportTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestManageOverlayPermissionIntents.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/KernelConfigTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAttestationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/ScanningSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/appwidget/src/android/appwidget/cts/RequestPinAppWidgetTest.java', 1), ('/home/gpoor/cts-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 1)]	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 13), ('/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java', 8), ('/android/hardware/cts/SensorSupportTest.java', 5), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/systemintents/cts/TestManageOverlayPermissionIntents.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java', 2), ('/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/android/security/cts/KernelConfigTest.java', 2), ('/android/keystore/cts/KeyAttestationTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/location/cts/fine/ScanningSettingsTest.java', 2), ('/android/appwidget/cts/RequestPinAppWidgetTest.java', 2), ('/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-2-1]:[1]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([3:/android/systemintents/cts/TestManageOverlayPermissionIntents.java]:[ACTION_MANAGE_OVERLAY_PERMISSION]:[3]:method_text:[ty.packageName);         assertEquals(errorMessage, genericActivity.name, appActivity.name);     } }])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[       getDevice().uninstallPackage(PACKAGE_NAME);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[  .run();         verifyFsverityInstall(BASE_APK);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.1]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerRequestPinTest.java]:[C-2-1]:[1]:method_text:[ic final String SHORTCUT_ID = ""s12345"";      @CddTest(requirement=""[3.8.1/C-2-1],[3.8.1/C-3-1]"")    ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[9.1]:[2]:method_text:[                ""v1-only-with-rsa-pkcs1-md5-1.2.840.113549.1.1.4-%s.apk"", RSA_KEY_NAMES);     }     ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[9.1]:[2]:method_text:[               ""v1-only-with-rsa-pkcs1-sha1-1.2.840.113549.1.1.5-%s.apk"", RSA_KEY_NAMES);     }     ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[9.1]:[2]:method_text:[            ""v1-only-with-rsa-pkcs1-sha224-1.2.840.113549.1.1.14-%s.apk"", RSA_KEY_NAMES);     }     ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[9.1]:[2]:method_text:[            ""v1-only-with-rsa-pkcs1-sha256-1.2.840.113549.1.1.11-%s.apk"", RSA_KEY_NAMES);     }     ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[9.1]:[2]:method_text:[            ""v1-only-with-rsa-pkcs1-sha384-1.2.840.113549.1.1.12-%s.apk"", RSA_KEY_NAMES);     }     ])', 1), ('([2:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[9.1]:[2]:method_text:[            ""v1-only-with-rsa-pkcs1-sha512-1.2.840.113549.1.1.13-%s.apk"", RSA_KEY_NAMES);     }     ])', 1), ('([3:/android/appsecurity/cts/PkgInstallSignatureVerificationTest.java]:[9.1]:[3]:method_text:[      assertInstallSucceeds(""v1-only-with-rsa-pkcs1-sha1-1.2.840.113549.1.1.1-2048.apk"");     }     ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-2-1]:[1]:method_text:[s, es31RequiredList[i]));         }     }      @CddTest(requirement=""7.1.4.1/C-2-1,C-5-1,C-4-1"")    ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[9.1]:[1]:method_text:[l enables fs-verity and its built-in signature support.      */     @CddTest(requirement=""9.10"")    ])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[9.1]:[2]:method_text:[00.99""));         assertEquals(0, parseSystemOsVersion(""99.99.100""));     }      @RequiresDevice    ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-2-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/location/cts/fine/ScanningSettingsTest.java]:[C-2-1]:[1]:method_text:[r.MATCH_DEFAULT_ONLY).activityInfo.packageName;     }      @CddTest(requirement = ""7.4.2/C-2-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.1]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.1]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.1]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[sMag = hasSensorType(Sensor.TYPE_MAGNETIC_FIELD);     }      @CddTest(requirement=""7.3.9/C-2-1"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[VrSensorSupport(Sensor.TYPE_SIGNIFICANT_MOTION);     }      @CddTest(requirement=""7.3.9/C-2-10"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[kHifiVrSensorSupport(Sensor.TYPE_STEP_DETECTOR);     }      @CddTest(requirement=""7.3.9/C-2-11"")    ])', 1), ('([1:/android/hardware/cts/SensorSupportTest.java]:[C-2-1]:[1]:method_text:[ckHifiVrSensorSupport(Sensor.TYPE_STEP_COUNTER);     }      @CddTest(requirement=""7.3.9/C-2-12"")    ])', 1), ('([1:/android/appwidget/cts/RequestPinAppWidgetTest.java]:[C-2-1]:[1]:method_text:[                 AppWidgetManager.getInstance(context).isRequestPinAppWidgetSupported());     }     ])', 1), ('([1:/com/android/cts/verifier/net/MultiNetworkConnectivityTestActivity.java]:[ACTION_MANAGE_OVERLAY_PERMISSION]:[1]:method_text:[}     }      private interface SetWifiCallback {         void onComplete(boolean isSuccess);     } }])', 1)]"					
265:761698) 9.10  . Device Integrity	9.10	C-0-4		[('android.appsecurity.cts.ApkVerityInstallTest', 12), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.security.cts.KernelConfigTest', 1), ('android.keystore.cts.KeyAttestationTest', 1)]	[('setUp', 3), ('getDevice', 2), ('getLaunchApiLevel', 1), ('tearDown', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsSecurityTestCases', 3), ('CtsKeystoreTestCases', 1)]		9.10/C-0-4	"""C-0-4] MUST NOT allow the read requests on a protected file to succeed when the read content do not verify against a trusted key. """	09100000.670004	9.10 C-0-4 9.10/C-0-4				[('9.10', 17)]		None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBase None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig None:android.security.cts.KernelConfigTest.testConfigDisableUsermodehelper CtsKeystoreTestCases:android.keystore.cts.KeyAttestationTest.testVersionParser CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted		[('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 12), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/KernelConfigTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAttestationTest.java', 1)]	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 13), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/security/cts/KernelConfigTest.java', 2), ('/android/keystore/cts/KeyAttestationTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[       getDevice().uninstallPackage(PACKAGE_NAME);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[  .run();         verifyFsverityInstall(BASE_APK);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[9.10]:[1]:method_text:[l enables fs-verity and its built-in signature support.      */     @CddTest(requirement=""9.10"")    ])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[9.10]:[2]:method_text:[00.99""));         assertEquals(0, parseSystemOsVersion(""99.99.100""));     }      @RequiresDevice    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1)]"					
265:761698) 9.10  . Device Integrity	9.10	C-0-5		[('android.appsecurity.cts.ApkVerityInstallTest', 12), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.security.cts.KernelConfigTest', 1), ('android.keystore.cts.KeyAttestationTest', 1)]	[('setUp', 3), ('getDevice', 2), ('getLaunchApiLevel', 1), ('tearDown', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsSecurityTestCases', 3), ('CtsKeystoreTestCases', 1)]		9.10/C-0-5	"""C-0-5] MUST enable the above-described cryptographic file verification protection for all files for the package that is installed with trusted signature files as described here. If device implementations are already launched without the ability to verify file content against a trusted key on an earlier Android version and can not add support for this feature with a system software update, they MAY be exempted from the requirement. The upstream Android Open Source project provides a preferred implementation of this feature based on the Linux kernel fs-verity feature. Device implementations: """	09100000.670005	9.10 9.10/C-0-5 C-0-5				[('9.10', 17)]		None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBase None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig None:android.security.cts.KernelConfigTest.testConfigDisableUsermodehelper CtsKeystoreTestCases:android.keystore.cts.KeyAttestationTest.testVersionParser CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted		[('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 12), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/KernelConfigTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAttestationTest.java', 1)]	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 13), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/security/cts/KernelConfigTest.java', 2), ('/android/keystore/cts/KeyAttestationTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[       getDevice().uninstallPackage(PACKAGE_NAME);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[  .run();         verifyFsverityInstall(BASE_APK);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[9.10]:[1]:method_text:[l enables fs-verity and its built-in signature support.      */     @CddTest(requirement=""9.10"")    ])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[9.10]:[2]:method_text:[00.99""));         assertEquals(0, parseSystemOsVersion(""99.99.100""));     }      @RequiresDevice    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1)]"					
265:761698) 9.10  . Device Integrity	9.10	C-1-10		[('android.appsecurity.cts.ApkVerityInstallTest', 12), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.security.cts.KernelConfigTest', 1), ('android.keystore.cts.KeyAttestationTest', 1)]	[('setUp', 3), ('getDevice', 2), ('getLaunchApiLevel', 1), ('tearDown', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsSecurityTestCases', 3), ('CtsKeystoreTestCases', 1)]		9.10/C-1-10	"""C-1-10] MUST implement rollback protection for partitions used by Android (e.g. boot, system partitions) and use tamper-evident storage for storing the metadata used for determining the minimum allowable OS version. """	09100000.670110	9.10 C-1-10 9.10/C-1-10				[('9.10', 17)]		None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBase None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig None:android.security.cts.KernelConfigTest.testConfigDisableUsermodehelper CtsKeystoreTestCases:android.keystore.cts.KeyAttestationTest.testVersionParser CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted		[('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 12), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/KernelConfigTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAttestationTest.java', 1)]	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 13), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/security/cts/KernelConfigTest.java', 2), ('/android/keystore/cts/KeyAttestationTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[       getDevice().uninstallPackage(PACKAGE_NAME);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[  .run();         verifyFsverityInstall(BASE_APK);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[9.10]:[1]:method_text:[l enables fs-verity and its built-in signature support.      */     @CddTest(requirement=""9.10"")    ])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[9.10]:[2]:method_text:[00.99""));         assertEquals(0, parseSystemOsVersion(""99.99.100""));     }      @RequiresDevice    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1)]"					
265:761698) 9.10  . Device Integrity	9.10	C-1-9		[('android.appsecurity.cts.ApkVerityInstallTest', 12), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.graphics.cts.VulkanDeqpLevelTest', 1), ('android.security.cts.KernelConfigTest', 1), ('android.keystore.cts.KeyAttestationTest', 1)]	[('setUp', 3), ('getDevice', 2), ('getLaunchApiLevel', 1), ('tearDown', 1), ('getSimpleName', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getSystemAvailableFeatures', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsSecurityTestCases', 3), ('CtsGraphicsTestCases', 1), ('CtsKeystoreTestCases', 1)]		9.10/C-1-9	"""C-1-9] MUST prompt the user, while using the device, and require physical confirmation before allowing a transition from bootloader locked mode to bootloader unlocked mode. """	09100000.670109	9.10 9.10/C-1-9 C-1-9				[('9.10', 17), ('C-1-9', 1)]		None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBase None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig None:android.security.cts.KernelConfigTest.testConfigDisableUsermodehelper CtsKeystoreTestCases:android.keystore.cts.KeyAttestationTest.testVersionParser CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted		[('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 12), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanDeqpLevelTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/KernelConfigTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAttestationTest.java', 1)]	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 13), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/graphics/cts/VulkanDeqpLevelTest.java', 2), ('/android/security/cts/KernelConfigTest.java', 2), ('/android/keystore/cts/KeyAttestationTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[       getDevice().uninstallPackage(PACKAGE_NAME);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[  .run();         verifyFsverityInstall(BASE_APK);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[9.10]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/graphics/cts/VulkanDeqpLevelTest.java]:[C-1-9]:[1]:method_text:[              }             }         }     }      @CddTest(requirement = ""7.1.4.2/C-1-8,C-1-9"")    ])', 1), ('([1:/android/security/cts/KernelConfigTest.java]:[9.10]:[1]:method_text:[l enables fs-verity and its built-in signature support.      */     @CddTest(requirement=""9.10"")    ])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[9.10]:[2]:method_text:[00.99""));         assertEquals(0, parseSystemOsVersion(""99.99.100""));     }      @RequiresDevice    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[9.10]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1)]"					
269:784393) 9.11.3  . Identity Credential	9.11.3	C-0-2		[('com.android.cts.devicepolicy.DeviceOwnerTest', 18), ('android.content.cts.ClipboardManagerTest', 11), ('android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest', 10), ('android.cts.statsd.metric.ValueMetricsTests', 6), ('android.cts.statsd.uidmap.UidMapTests', 5), ('android.inputmethodservice.cts.devicetest.ShellCommandDeviceTest', 5), ('android.cts.statsd.metric.CountMetricsTests', 4), ('android.widget.cts.TextViewTest', 4), ('android.autofillservice.cts.LoginActivityTest', 4), ('android.text.cts.ClipboardManagerTest', 3), ('android.server.wm.KeyguardLockedTests', 3), ('android.view.inputmethod.cts.InputMethodStartInputLifecycleTest', 3), ('android.content.cts.ClipDescriptionTest', 2), ('android.view.inputmethod.cts.InputMethodServiceTest', 2), ('android.server.wm.WindowInsetsAnimationControllerTests', 2), ('android.security.identity.cts.ProvisioningTest', 2), ('android.media.cts.MediaExtractorTest', 2), ('android.app.cts.DownloadManagerInstallerTest', 2), ('android.keystore.cts.MacTest', 2), ('android.display.cts.DisplayTest', 2), ('android.net.wifi.cts.WifiManagerTest', 2), ('android.autofillservice.cts.augmented.ClipboardAccessTest', 2), ('android.cts.statsd.validation.ValidationTests', 2), ('android.content.type.cts.MimeMapTest', 2), ('android.bluetooth.cts.ScanFilterTest', 2), ('android.security.NetworkSecurityPolicyTestBase', 2), ('com.android.cts.devicepolicy.ManagedProfileCrossProfileTest', 2), ('android.view.inputmethod.cts.SearchViewTest', 2), ('com.android.cts.instrumentationdiffcertapp.InstrumentationFailToRunTest', 2), ('android.webkit.cts.WebSettingsTest', 1), ('android.app.cts.SystemFeaturesTest', 1), ('android.security.identity.cts.CreateItemsRequestTest', 1), ('android.server.wm.ActivityMetricsLoggerTests', 1), ('android.graphics.cts.ImageDecoderTest', 1), ('android.os.cts.ParcelTest', 1), ('android.permission2.cts.ProtectedBroadcastsTest', 1), ('com.android.cts.managedprofile.CrossProfileUtils', 1), ('android.keystore.cts.RSASignatureTest', 1), ('android.uirendering.cts.testclasses.ColorSpaceTests', 1), ('android.server.wm.ToastWindowTest', 1), ('android.media.cts.AudioMetadataTest', 1), ('android.renderscript.cts.SamplerTest', 1), ('com.android.cts.deviceowner.OverrideApnTest', 1), ('com.android.cts.comp.provisioning.ManagedProfileProvisioningTest', 1), ('android.app.cts.KeyguardManagerKeyguardLockTest', 1), ('android.autofillservice.cts.LoginActivity', 1)]	[('setUp', 16), ('build', 11), ('tearDown', 10), ('getInstrumentation', 7), ('Builder', 6), ('getBytes', 6), ('printStackTrace', 6), ('getTargetContext', 4), ('getExampleDrivingPrivilegesCbor', 4), ('end', 4), ('getDevice', 3), ('requestFocus', 3), ('ime', 3), ('getContext', 3), ('getWho', 3), ('setup', 2), ('wakeUp', 2), ('UnlockScreenRule', 2), ('getWindow', 2), ('ByteArrayOutputStream', 2), ('CborBuilder', 2), ('addArray', 2), ('addMap', 2), ('toByteArray', 2), ('iterator', 2), ('next', 2), ('getPublicKey', 2), ('getResources', 2), ('clearPrimaryClip', 2), ('getDefault', 2), ('getContentResolver', 2), ('get', 2), ('getEventName', 1), ('getArguments', 1), ('getReturnBooleanValue', 1), ('CancellationSignal', 1), ('LimitedErrorCollector', 1), ('types', 1), ('statusBars', 1), ('navigationBars', 1), ('nullValue', 1), ('getUiAutomation', 1), ('openEventStream', 1), ('getDecorView', 1), ('MediaExtractor', 1), ('release', 1), ('supportsSecureLock', 1), ('hasAutoFillFeature', 1), ('prepareClipboardManager', 1), ('cleanYourself', 1), ('resetBatteryStatus', 1), ('unplugDevice', 1), ('turnScreenOn', 1), ('containsAllStockAndroidMappings_mimeToExt', 1), ('mimeTypes', 1), ('containsAllExpectedMappings_extToMime', 1), ('extensions', 1), ('getFileNameMap', 1), ('loadMask', 1), ('getActivity', 1), ('getWidth', 1), ('getHeight', 1), ('setUpInputMethodManager', 1), ('tearDownInputMethodManager', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('open', 1), ('getPackageName', 1), ('IntentFilter', 1), ('getCode', 1), ('getException', 1), ('getId', 1), ('shutdown', 1), ('getCurrentActivity', 1), ('getContentView', 1), ('login', 1), ('save', 1), ('getAutofillManager', 1), ('cancel', 1)]	[('CtsContentTestCases', 13), ('CtsWindowManagerDeviceTestCases', 7), ('CtsInputMethodTestCases', 7), ('CtsAutoFillServiceTestCases', 7), ('CtsWidgetTestCases', 4), ('CtsIdentityTestCases', 3), ('CtsTextTestCases', 3), ('CtsMediaTestCases', 3), ('CtsKeystoreTestCases', 3), ('CtsAppTestCases', 2), ('CtsDisplayTestCases', 2), ('CtsWifiTestCases', 2), ('CtsMimeMapTestCases', 2), ('CtsBluetoothTestCases', 2), ('CtsWebkitTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsOsHostTestCases', 1), ('CtsPermission2TestCases', 1), ('CtsUiRenderingTestCases', 1), ('CtsRenderscriptTestCases', 1)]		9.11.3/C-0-2	"""C-0-2] MUST implement the Identity Credential System (e.g. the android.security.identity.* APIs) with code communicating with a trusted application in an area that is securely isolated from the code running on the kernel and above. Secure isolation MUST block all potential mechanisms by which kernel or userspace code might access the internal state of the isolated environment, including DMA. """	09110300.670002	DMA 9.11.3/C-0-2 C-0-2 android.security.identity 9.11.3				[('DMA', 125), ('android.security.identity', 2)]		CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testUserAgentStringTest CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTelephonyFeatures CtsTextTestCases:android.text.cts.ClipboardManagerTest.testAccessText CtsTextTestCases:android.text.cts.ClipboardManagerTest.testHasText CtsContentTestCases:android.content.cts.ClipDescriptionTest.testGetTimestamp CtsWindowManagerDeviceTestCases:android.server.wm.ActivityMetricsLoggerTests.testLaunchTimeEventLogNonProcessSwitch None:com.android.cts.devicepolicy.DeviceOwnerTest.removeTestUsers None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_LowStorage None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_MaxUsers None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_GetSecondaryUsers None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_SwitchUser None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_CannotStopCurrentUser None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_StartInBackground None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_StartInBackground_MaxRunningUsers None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_StopUser None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_StopEphemeralUser_DisallowRemoveUser None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_LogoutUser None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_Affiliated None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_Ephemeral None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_LeaveAllSystemApps None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_SkipSetupWizard None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_AddRestrictionSet None:com.android.cts.devicepolicy.DeviceOwnerTest.testCreateAndManageUser_RemoveRestrictionSet None:com.android.cts.devicepolicy.DeviceOwnerTest.testUserAddedOrRemovedBroadcasts CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodServiceTest.testOnUpdateCursorAnchorInfo CtsWindowManagerDeviceTestCases:android.server.wm.WindowInsetsAnimationControllerTests.assumeTestCompatibility CtsWindowManagerDeviceTestCases:android.server.wm.WindowInsetsAnimationControllerTests.testImeControl_isntInterruptedByStartingInput CtsMediaTestCases:android.media.cts.MediaExtractorTest.testVideoPresentationTimeStampsMatch CtsWindowManagerDeviceTestCases:android.server.wm.KeyguardLockedTests.testLockAndUnlock CtsWindowManagerDeviceTestCases:android.server.wm.KeyguardLockedTests.testDisableKeyguard_thenSettingCredential_reenablesKeyguard_b119322269 None:android.app.cts.DownloadManagerInstallerTest.testSetDestinationUri_otherAppObbDir CtsKeystoreTestCases:android.keystore.cts.MacTest.testSmallMsgKat CtsKeystoreTestCases:android.keystore.cts.MacTest.testLargeMsgKat CtsGraphicsTestCases:android.graphics.cts.ImageDecoderTest.testPostProcessorAndMadeOpaque None:android.cts.statsd.metric.CountMetricsTests.testEventCountWithCondition None:android.cts.statsd.metric.CountMetricsTests.testEventCountWithConditionAndActivation None:android.cts.statsd.metric.CountMetricsTests.testSlicedStateCountMetricNoReset CtsDisplayTestCases:android.display.cts.DisplayTest.testDefaultDisplayHdrCapability CtsDisplayTestCases:android.display.cts.DisplayTest.testGetSupportWideColorGamut_displayIsWideColorGamut CtsOsHostTestCases:android.os.cts.ParcelTest.testWriteMap None:android.cts.statsd.uidmap.UidMapTests.testUidSnapshotIncluded None:android.cts.statsd.uidmap.UidMapTests.testChangeFromInstallation None:android.cts.statsd.uidmap.UidMapTests.testChangeFromReinstall None:android.cts.statsd.uidmap.UidMapTests.testChangeFromUninstall CtsWidgetTestCases:android.widget.cts.TextViewTest.testEllipsizeAndMaxLinesForSingleLine CtsWidgetTestCases:android.widget.cts.TextViewTest.testEllipsizeAndMaxLinesForMultiLine CtsWidgetTestCases:android.widget.cts.TextViewTest.testEllipsizeAndMaxLinesForHint CtsWidgetTestCases:android.widget.cts.TextViewTest.testAutoSizeUniform_equivalentConfigurations CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testIsApMacRandomizationSupported CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testIsConnectedMacRandomizationSupported CtsContentTestCases:android.content.cts.ClipboardManagerTest.testSetGetText CtsContentTestCases:android.content.cts.ClipboardManagerTest.testHasPrimaryClip CtsContentTestCases:android.content.cts.ClipboardManagerTest.testSetPrimaryClip_intent CtsContentTestCases:android.content.cts.ClipboardManagerTest.testSetPrimaryClip_contentUri CtsContentTestCases:android.content.cts.ClipboardManagerTest.testSetPrimaryClip_complexItem CtsContentTestCases:android.content.cts.ClipboardManagerTest.testSetPrimaryClip_multipleItems CtsContentTestCases:android.content.cts.ClipboardManagerTest.testSetPrimaryClip_multipleMimeTypes CtsContentTestCases:android.content.cts.ClipboardManagerTest.testPrimaryClipChangedListener CtsContentTestCases:android.content.cts.ClipboardManagerTest.testClearPrimaryClip CtsContentTestCases:android.content.cts.ClipboardManagerTest.testPrimaryClipNotAvailableWithoutFocus CtsAutoFillServiceTestCases:android.autofillservice.cts.augmented.ClipboardAccessTest.testDoIt CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodStartInputLifecycleTest.DisableScreenDozeRule CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodStartInputLifecycleTest.testInputConnectionStateWhenScreenStateChanges CtsInputMethodTestCases:android.view.inputmethod.cts.InputMethodStartInputLifecycleTest.testNoStartNewInputWhileOtherProcessHasWindowFocus None:android.cts.statsd.validation.ValidationTests.testPartialWakelockLoad None:com.android.cts.managedprofile.CrossProfileUtils.testAddManagedCanAccessParentFilters CtsKeystoreTestCases:android.keystore.cts.RSASignatureTest.testMaxMessageSizeWhenNoDigestUsed CtsBluetoothTestCases:android.bluetooth.cts.ScanFilterTest.testsetServiceUuidFilter CtsBluetoothTestCases:android.bluetooth.cts.ScanFilterTest.testsetServiceSolicitationUuidFilter None:android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest.getInputMethodList None:android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest.testIme1InInputMethodList None:android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest.testIme1NotInInputMethodList None:android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest.testIme1InEnabledInputMethodList None:android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest.testIme1NotInEnabledInputMethodList None:android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest.testIme2InInputMethodList None:android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest.testIme2NotInInputMethodList None:android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest.testIme2InEnabledInputMethodList None:android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest.testIme2NotInEnabledInputMethodList None:android.inputmethodservice.cts.devicetest.InputMethodManagerDeviceTest.testIme1ImplicitlyEnabledSubtypeExists CtsRenderscriptTestCases:android.renderscript.cts.SamplerTest.testSamplerBuilder None:android.inputmethodservice.cts.devicetest.ShellCommandDeviceTest.testShellCommand None:android.inputmethodservice.cts.devicetest.ShellCommandDeviceTest.testShellCommandIme None:android.inputmethodservice.cts.devicetest.ShellCommandDeviceTest.testShellCommandImeList None:android.inputmethodservice.cts.devicetest.ShellCommandDeviceTest.testShellCommandDump CtsAutoFillServiceTestCases:android.autofillservice.cts.LoginActivityTest.testAutoFillOneDatasetAndSave CtsAutoFillServiceTestCases:android.autofillservice.cts.LoginActivityTest.testAutoFillOneDatasetAndSave CtsAutoFillServiceTestCases:android.autofillservice.cts.LoginActivityTest.testAutoFillOneDataset None:com.android.cts.comp.provisioning.ManagedProfileProvisioningTest.testProvisioningCorpOwnedManagedProfile None:android.security.NetworkSecurityPolicyTestBase.testDownloadManager None:android.cts.statsd.metric.ValueMetricsTests.testValueMetric None:android.cts.statsd.metric.ValueMetricsTests.testPullerAcrossBuckets None:android.cts.statsd.metric.ValueMetricsTests.testMultipleEventsPerBucket None:android.cts.statsd.metric.ValueMetricsTests.testPullerAcrossBucketsWithActivation None:android.cts.statsd.metric.ValueMetricsTests.testValueMetricWithConditionAndActivation None:com.android.cts.devicepolicy.ManagedProfileCrossProfileTest.testCrossProfileContent None:com.android.cts.devicepolicy.ManagedProfileCrossProfileTest.testCrossProfileCopyPaste CtsInputMethodTestCases:android.view.inputmethod.cts.SearchViewTest.testShowImeWithSearchViewFocus None:com.android.cts.instrumentationdiffcertapp.InstrumentationFailToRunTest.testInstrumentationNotAllowed_exception None:com.android.cts.instrumentationdiffcertapp.InstrumentationFailToRunTest.testInstrumentationNotAllowed_fail CtsAutoFillServiceTestCases:android.autofillservice.cts.LoginActivity.finish		[('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 18), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ClipboardManagerTest.java', 11), ('/home/gpoor/cts-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java', 10), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/metric/ValueMetricsTests.java', 6), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/uidmap/UidMapTests.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/inputmethodservice/deviceside/devicetest/src/android/inputmethodservice/cts/devicetest/ShellCommandDeviceTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/metric/CountMetricsTests.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TextViewTest.java', 4), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/LoginActivityTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/ClipboardManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 3), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ClipDescriptionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputMethodServiceTest.java', 2), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationControllerTests.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/DownloadManagerInstallerTest/src/android/app/cts/DownloadManagerInstallerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/MacTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/display/src/android/display/cts/DisplayTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/augmented/ClipboardAccessTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/validation/ValidationTests.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mimemap/src/android/content/type/cts/MimeMapTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/bluetooth/src/android/bluetooth/cts/ScanFilterTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/netsecpolicy/src/android/security/NetworkSecurityPolicyTestBase.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java', 2), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/SearchViewTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/InstrumentationAppDiffCert/src/com/android/cts/instrumentationdiffcertapp/InstrumentationFailToRunTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/CreateItemsRequestTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityMetricsLoggerTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/ImageDecoderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/ParcelTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission2/src/android/permission2/cts/ProtectedBroadcastsTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileUtils.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/RSASignatureTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ColorSpaceTests.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ToastWindowTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioMetadataTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/SamplerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/OverrideApnTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/KeyguardManagerKeyguardLockTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/LoginActivity.java', 1)]	[('/com/android/cts/devicepolicy/DeviceOwnerTest.java', 19), ('/android/content/cts/ClipboardManagerTest.java', 12), ('/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java', 11), ('/android/cts/statsd/metric/ValueMetricsTests.java', 7), ('/android/cts/statsd/uidmap/UidMapTests.java', 6), ('/android/inputmethodservice/cts/devicetest/ShellCommandDeviceTest.java', 6), ('/android/cts/statsd/metric/CountMetricsTests.java', 5), ('/android/widget/cts/TextViewTest.java', 5), ('/android/autofillservice/cts/LoginActivityTest.java', 5), ('/android/text/cts/ClipboardManagerTest.java', 4), ('/android/security/identity/cts/ProvisioningTest.java', 4), ('/android/server/wm/KeyguardLockedTests.java', 4), ('/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java', 4), ('/android/content/cts/ClipDescriptionTest.java', 3), ('/android/view/inputmethod/cts/InputMethodServiceTest.java', 3), ('/android/server/wm/WindowInsetsAnimationControllerTests.java', 3), ('/android/media/cts/MediaExtractorTest.java', 3), ('/android/app/cts/DownloadManagerInstallerTest.java', 3), ('/android/keystore/cts/MacTest.java', 3), ('/android/display/cts/DisplayTest.java', 3), ('/android/net/wifi/cts/WifiManagerTest.java', 3), ('/android/autofillservice/cts/augmented/ClipboardAccessTest.java', 3), ('/android/cts/statsd/validation/ValidationTests.java', 3), ('/android/content/type/cts/MimeMapTest.java', 3), ('/android/bluetooth/cts/ScanFilterTest.java', 3), ('/android/security/NetworkSecurityPolicyTestBase.java', 3), ('/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java', 3), ('/android/view/inputmethod/cts/SearchViewTest.java', 3), ('/com/android/cts/instrumentationdiffcertapp/InstrumentationFailToRunTest.java', 3), ('/android/webkit/cts/WebSettingsTest.java', 2), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/security/identity/cts/CreateItemsRequestTest.java', 2), ('/android/server/wm/ActivityMetricsLoggerTests.java', 2), ('/android/graphics/cts/ImageDecoderTest.java', 2), ('/android/os/cts/ParcelTest.java', 2), ('/android/permission2/cts/ProtectedBroadcastsTest.java', 2), ('/com/android/cts/managedprofile/CrossProfileUtils.java', 2), ('/android/keystore/cts/RSASignatureTest.java', 2), ('/android/uirendering/cts/testclasses/ColorSpaceTests.java', 2), ('/android/server/wm/ToastWindowTest.java', 2), ('/android/media/cts/AudioMetadataTest.java', 2), ('/android/renderscript/cts/SamplerTest.java', 2), ('/com/android/cts/deviceowner/OverrideApnTest.java', 2), ('/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java', 2), ('/android/app/cts/KeyguardManagerKeyguardLockTest.java', 2), ('/android/autofillservice/cts/LoginActivity.java', 2)]	"[('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[r.      * {@link android.app.admin.DevicePolicyManager#startUserInBackground} is tested.      */    ])', 2), ('([1:/android/bluetooth/cts/ScanFilterTest.java]:[DMA]:[1]:method_text:[());         assertTrue(""uuid filter fails"", filter.matches(mScanResult));     }      @SmallTest    ])', 2), ('([1:/android/autofillservice/cts/LoginActivityTest.java]:[DMA]:[1]:method_text:[Structure(""saveOnlyTest() failed"", saveRequest.structure);             throw e;         }     }     ])', 2), ('([2:/android/webkit/cts/WebSettingsTest.java]:[DMA]:[2]:method_text:[l:\\n%s"", patternString, useragent),                     patternMatcher.find());         }     }     ])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[DMA]:[2]:method_text:[row new IllegalArgumentException(""Did you add a new phone type? "" + phoneType);         }     }     ])', 1), ('([1:/android/security/identity/cts/CreateItemsRequestTest.java]:[android.security.identity]:[1]:method_text:[t java.util.Map;  import co.nstant.in.cbor.CborException;  public class CreateItemsRequestTest {    ])', 1), ('([7:/android/text/cts/ClipboardManagerTest.java]:[DMA]:[7]:method_text:[nstrumentationRegistry.getInstrumentation());         launchActivity(MockActivity.class);     }     ])', 1), ('([2:/android/text/cts/ClipboardManagerTest.java]:[DMA]:[2]:method_text:[rdManager.setText(expected);         assertEquals(expected, mClipboardManager.getText());     }     ])', 1), ('([6:/android/text/cts/ClipboardManagerTest.java]:[DMA]:[6]:method_text:[text.startActivity(intent);         mUiDevice.wait(Until.hasObject(By.clazz(clazz)), 5000);     }  }])', 1), ('([1:/android/content/cts/ClipDescriptionTest.java]:[DMA]:[1]:method_text:[        mUiDevice.wakeUp();         launchActivity(MockActivity.class);     }      @UiThreadTest    ])', 1), ('([6:/android/content/cts/ClipDescriptionTest.java]:[DMA]:[6]:method_text:[ntext.startActivity(intent);         mUiDevice.wait(Until.hasObject(By.clazz(clazz)), 5000);     } }])', 1), ('([1:/android/server/wm/ActivityMetricsLoggerTests.java]:[DMA]:[1]:method_text:[       }         fail(""Expected to find \'"" + expectedLog + ""\' in "" + Arrays.toString(logs));     } }])', 1), ('([3:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[3]:method_text:[tchUser(USER_SYSTEM);             removeTestUsers();         }          super.tearDown();     }     ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[                     ""settings delete global sys_storage_threshold_max_bytes"");         }     }     ])', 1), ('([8:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[8]:method_text:[eUser.      * {@link android.app.admin.DevicePolicyManager#getSecondaryUsers} is tested.      */    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[d.app.admin.DevicePolicyManager#switchUser} is tested.      */     @FlakyTest(bugId = 131743223)    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[ in foreground.      * {@link android.app.admin.DevicePolicyManager#stopUser} is tested.      */    ])', 1), ('([10:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[10]:method_text:[s on that user.      * {@link android.app.admin.DevicePolicyManager#stopUser} is tested.      */    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[. The user should be removed      * automatically even when DISALLOW_REMOVE_USER is set.      */    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[on that user.      * {@link android.app.admin.DevicePolicyManager#logoutUser} is tested.      */    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[t user.      * {@link android.app.admin.DevicePolicyManager#isAffiliatedUser} is tested.      */    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[at user.      * {@link android.app.admin.DevicePolicyManager#isEphemeralUser} is tested.      */    ])', 1), ('([5:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[5]:method_text:[* {@link android.app.admin.DevicePolicyManager#LEAVE_ALL_SYSTEM_APPS_ENABLED} is tested.      */    ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[4]:method_text:[.CreateAndManageUserTest"",                 ""testCreateAndManageUser_LeaveAllSystemApps"");     }     ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[4]:method_text:[ManageUserTest"",                     ""testCreateAndManageUser_SkipSetupWizard"");        }     }     ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[4]:method_text:[ageUserTest"",                     ""testCreateAndManageUser_AddRestrictionSet"");         }     }     ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[4]:method_text:[stCreateAndManageUser_RemoveRestrictionSet"");         }     }      @FlakyTest(bugId = 126955083)    ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[DMA]:[2]:method_text:[ateAndManageUserTest"",                     ""testUserAddedOrRemovedBroadcasts"");         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[DMA]:[1]:method_text:[ctivity.getWindow().setSoftInputMode(windowFlags);             return layout;         });     }     ])', 1), ('([1:/android/view/inputmethod/cts/InputMethodServiceTest.java]:[DMA]:[1]:method_text:[fo);             assertEquals(receivedCursorAnchorInfo, originalCursorAnchorInfo);         }     } }])', 1), ('([1:/android/server/wm/WindowInsetsAnimationControllerTests.java]:[DMA]:[1]:method_text:[tView.getRootWindowInsets().getInsetsIgnoringVisibility(mType));         }     }      @Presubmit    ])', 1), ('([1:/android/server/wm/WindowInsetsAnimationControllerTests.java]:[DMA]:[1]:method_text:[(mCount - LIMIT) + "" errors skipped.""));             }             super.verify();         }     } }])', 1), ('([1:/android/security/identity/cts/ProvisioningTest.java]:[DMA]:[1]:method_text:[tStackTrace();             assertTrue(false);         }          return certificateChain;     }     ])', 1), ('([16:/android/security/identity/cts/ProvisioningTest.java]:[android.security.identity]:[16]:method_text:[tStackTrace();             assertTrue(false);         }          return certificateChain;     }     ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[DMA]:[1]:method_text:[ce ds = getDataSourceFor(resid);         mExtractor.setDataSource(ds);         return ds;     }     ])', 1), ('([1:/android/media/cts/MediaExtractorTest.java]:[DMA]:[1]:method_text:[ mExtractor.release();             }             mFormat = null;         }     }      @SmallTest    ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[DMA]:[1]:method_text:[tUp() throws Exception {         super.setUp();         assumeTrue(supportsSecureLock());     }     ])', 1), ('([6:/android/server/wm/KeyguardLockedTests.java]:[DMA]:[6]:method_text:[guardManager.isDeviceLocked());         assertFalse(mKeyguardManager.isKeyguardLocked());     }     ])', 1), ('([6:/android/server/wm/KeyguardLockedTests.java]:[DMA]:[6]:method_text:[uardSecure());         } finally {             keyguardLock.reenableKeyguard();         }     }     ])', 1), ('([3:/android/app/cts/DownloadManagerInstallerTest.java]:[DMA]:[3]:method_text:[ndroidJUnit4.class) public class DownloadManagerInstallerTest extends DownloadManagerTestBase {     ])', 1), ('([4:/android/app/cts/DownloadManagerInstallerTest.java]:[DMA]:[4]:method_text:[oad(id, 0);         } finally {             mContext.unregisterReceiver(receiver);         }     } }])', 1), ('([11:/android/keystore/cts/MacTest.java]:[DMA]:[11]:method_text:[code(keyBytes),                             e);                 }             }         }     }     ])', 1), ('([5:/android/keystore/cts/MacTest.java]:[DMA]:[5]:method_text:[        throw new RuntimeException(""Failed for "" + algorithm, e);             }         }     }     ])', 1), ('([1:/android/graphics/cts/ImageDecoderTest.java]:[DMA]:[1]:method_text:[ed with exception "" + e);                     }                 }             }         }     }     ])', 1), ('([1:/android/cts/statsd/metric/CountMetricsTests.java]:[DMA]:[1]:method_text:[import java.util.stream.IntStream;  public class CountMetricsTests extends DeviceAtomTestCase {     ])', 1), ('([5:/android/cts/statsd/metric/CountMetricsTests.java]:[DMA]:[5]:method_text:[an(0);         assertThat(countData.getData(0).getBucketInfo(0).getCount()).isEqualTo(1);     }     ])', 1), ('([8:/android/cts/statsd/metric/CountMetricsTests.java]:[DMA]:[8]:method_text:[To(2);         assertThat(countData.getData(0).getBucketInfo(1).getCount()).isEqualTo(1);     }     ])', 1), ('([10:/android/cts/statsd/metric/CountMetricsTests.java]:[DMA]:[10]:method_text:[ntBucketInfo::getCount)                 .sum();         assertThat(totalCount).isEqualTo(3);     } }])', 1), ('([5:/android/display/cts/DisplayTest.java]:[DMA]:[5]:method_text:[play.isHdr());         }     }      /**      * Verify that there is a secondary display.      */    ])', 1), ('([2:/android/display/cts/DisplayTest.java]:[DMA]:[2]:method_text:[untime().exec(""cmd display set-brightness "" + value);         return 0 == process.waitFor();     } }])', 1), ('([2:/android/os/cts/ParcelTest.java]:[DMA]:[2]:method_text:[Equals(true, map.get(""boolean""));         p.recycle();     }      @SuppressWarnings(""unchecked"")    ])', 1), ('([4:/android/cts/statsd/uidmap/UidMapTests.java]:[DMA]:[4]:method_text:[MapTests extends DeviceAtomTestCase {      // Tests that every report has at least one snapshot.    ])', 1), ('([9:/android/cts/statsd/uidmap/UidMapTests.java]:[DMA]:[9]:method_text:[  }         return false;     }      // Tests that delta event included during app installation.    ])', 1), ('([1:/android/cts/statsd/uidmap/UidMapTests.java]:[DMA]:[1]:method_text:[     }      // We check that a re-installation gives a change event (similar to an app upgrade).    ])', 1), ('([1:/android/cts/statsd/uidmap/UidMapTests.java]:[DMA]:[1]:method_text:[                found = true;             }         }         assertThat(found).isTrue();     }     ])', 1), ('([1:/android/cts/statsd/uidmap/UidMapTests.java]:[DMA]:[1]:method_text:[ {                 found = true;             }         }         assertThat(found).isTrue();     } }])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[DMA]:[1]:method_text:[Layout().getLineBaseline(0),                 tvNoMaxLine.getLayout().getLineBaseline(0));     }     ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[DMA]:[1]:method_text:[neBaseline(i),                     tvNoMaxLine.getLayout().getLineBaseline(i));         }     }     ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[DMA]:[1]:method_text:["",                 tvTwoLines.getHeight(), tvEllipsizeEnd.getHeight());     }      @UiThreadTest    ])', 1), ('([3:/android/widget/cts/TextViewTest.java]:[DMA]:[3]:method_text:[       assertEquals(granularityTextView.getTextSize(), presetTextView.getTextSize(), 0f);     }     ])', 1), ('([1:/android/net/wifi/cts/WifiManagerTest.java]:[DMA]:[1]:method_text:[      * Tests {@link WifiManager#isConnectedMacRandomizationSupported()} does not crash.      */    ])', 1), ('([2:/android/net/wifi/cts/WifiManagerTest.java]:[DMA]:[2]:method_text:[**      * Tests {@link WifiManager#isPreferredNetworkOffloadSupported()} does not crash.      */    ])', 1), ('([7:/android/content/cts/ClipboardManagerTest.java]:[DMA]:[7]:method_text:[strumentation());         mUiDevice.wakeUp();         launchActivity(MockActivity.class);     }     ])', 1), ('([7:/android/content/cts/ClipboardManagerTest.java]:[DMA]:[7]:method_text:[.setText(""Test Text 2"");         assertEquals(""Test Text 2"", clipboardManager.getText());     }     ])', 1), ('([10:/android/content/cts/ClipboardManagerTest.java]:[DMA]:[10]:method_text:[ta.newPlainText(""Label"", ""Text""));         assertTrue(clipboardManager.hasPrimaryClip());     }     ])', 1), ('([1:/android/content/cts/ClipboardManagerTest.java]:[DMA]:[1]:method_text:[ription.MIMETYPE_TEXT_INTENT},                 new ExpectedClipItem(null, intent, null));     }     ])', 1), ('([1:/android/content/cts/ClipboardManagerTest.java]:[DMA]:[1]:method_text:[on.MIMETYPE_TEXT_URILIST},                 new ExpectedClipItem(null, null, contentUri));     }     ])', 1), ('([1:/android/content/cts/ClipboardManagerTest.java]:[DMA]:[1]:method_text:[ption.MIMETYPE_TEXT_URILIST},                 new ExpectedClipItem(""Text"", intent, uri));     }     ])', 1), ('([1:/android/content/cts/ClipboardManagerTest.java]:[DMA]:[1]:method_text:[ctedClipItem(null, intent, null),                 new ExpectedClipItem(null, null, uri));     }     ])', 1), ('([1:/android/content/cts/ClipboardManagerTest.java]:[DMA]:[1]:method_text:[null, null, contentUri7),                 new ExpectedClipItem(null, null, contentUri8));     }     ])', 1), ('([2:/android/content/cts/ClipboardManagerTest.java]:[DMA]:[2]:method_text:[   mClipboardManager.setPrimaryClip(clipData);          latch.await(5, TimeUnit.SECONDS);     }     ])', 1), ('([10:/android/content/cts/ClipboardManagerTest.java]:[DMA]:[10]:method_text:[ger.getPrimaryClip());         assertNull(mClipboardManager.getPrimaryClipDescription());     }     ])', 1), ('([23:/android/content/cts/ClipboardManagerTest.java]:[DMA]:[23]:method_text:[text.getPackageManager().hasSystemFeature(                 PackageManager.FEATURE_AUTOFILL);     } }])', 1), ('([8:/android/autofillservice/cts/augmented/ClipboardAccessTest.java]:[DMA]:[8]:method_text:[   @After     public void cleanYourself() {         mClipboardManager.clearPrimaryClip();     }     ])', 1), ('([4:/android/autofillservice/cts/augmented/ClipboardAccessTest.java]:[DMA]:[4]:method_text:[lipboard now"").that(mClipboardManager.getText())                 .isEqualTo(""YES, WE CAN!"");     } }])', 1), ('([1:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[DMA]:[1]:method_text:[ new UnlockScreenRule();      private static final long TIMEOUT = TimeUnit.SECONDS.toMillis(5);     ])', 1), ('([3:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[DMA]:[3]:method_text:[able window hosted by a different process      * temporarily becomes the focused window.      */    ])', 1), ('([2:/android/view/inputmethod/cts/InputMethodStartInputLifecycleTest.java]:[DMA]:[2]:method_text:[Matcher() {         return event -> TextUtils.equals(""onFinishInput"", event.getEventName());     } }])', 1), ('([1:/android/permission2/cts/ProtectedBroadcastsTest.java]:[DMA]:[1]:method_text:[K_OTHERS"",     };      /**      * Verify that protected broadcast actions can\'t be sent.      */    ])', 1), ('([1:/android/cts/statsd/validation/ValidationTests.java]:[DMA]:[1]:method_text:[ugDevice().         turnScreenOn(); // Reset screen to on state         super.tearDown();     }     ])', 1), ('([19:/android/cts/statsd/validation/ValidationTests.java]:[DMA]:[19]:method_text:[eenIsOff)                 .addPredicate(screenOffBatteryOn);          uploadConfig(builder);     } }])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileUtils.java]:[DMA]:[1]:method_text:[;         intentFilter.addAction(ACTION_OBSERVE_URI_CHANGE);         return intentFilter;     }     ])', 1), ('([6:/android/keystore/cts/RSASignatureTest.java]:[DMA]:[6]:method_text:[untimeException(""Failed for "" + modulusSizeBits + "" bit key"", e);             }         }     }     ])', 1), ('([1:/android/content/type/cts/MimeMapTest.java]:[DMA]:[1]:method_text:[.guessExtensionFromMimeType(mimeType));         }         assertEquals(expected, actual);     }     ])', 1), ('([1:/android/content/type/cts/MimeMapTest.java]:[DMA]:[1]:method_text:[eMap.getDefault(), i.e. that they are implemented on      * top of MimeMap.getDefault().      */    ])', 1), ('([1:/android/uirendering/cts/testclasses/ColorSpaceTests.java]:[DMA]:[1]:method_text:[ig.ALPHA_8);         Canvas c = new Canvas(mMask);         c.drawBitmap(res, 0, 0, null);     }     ])', 1), ('([8:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[8]:method_text:[k InputMethodManager#getInputMethodList()} contains      * {@link Ime1Constants#IME_ID}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[ethodManager#getInputMethodList()} does not contain      * {@link Ime1Constants#IME_ID}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[MethodManager#getEnabledInputMethodList()} contains      * {@link Ime1Constants#IME_ID}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[nager#getEnabledInputMethodList()} does not contain      * {@link Ime1Constants#IME_ID}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[k InputMethodManager#getInputMethodList()} contains      * {@link Ime2Constants#IME_ID}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[ethodManager#getInputMethodList()} does not contain      * {@link Ime2Constants#IME_ID}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[MethodManager#getEnabledInputMethodList()} contains      * {@link Ime2Constants#IME_ID}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[nager#getEnabledInputMethodList()} does not contain      * {@link Ime2Constants#IME_ID}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[oolean)} for      * {@link Ime1Constants#IME_ID} returns the implicitly enabled subtype.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/InputMethodManagerDeviceTest.java]:[DMA]:[1]:method_text:[ for      * {@link Ime1Constants#IME_ID} does not return the implicitly enabled subtype.      */    ])', 1), ('([1:/android/server/wm/ToastWindowTest.java]:[DMA]:[1]:method_text:[(), SETTING_HIDDEN_API_POLICY,                     mPreviousHiddenApiPolicy);         });     }     ])', 1), ('([1:/android/media/cts/AudioMetadataTest.java]:[DMA]:[1]:method_text:[a.BaseMap>         KEY_BASE_MAP = AudioMetadata.createKey(""data"", AudioMetadata.BaseMap.class);     ])', 1), ('([3:/android/renderscript/cts/SamplerTest.java]:[DMA]:[3]:method_text:[                       }                     }                 }             }         }     }      ])', 1), ('([2:/android/inputmethodservice/cts/devicetest/ShellCommandDeviceTest.java]:[DMA]:[2]:method_text:[in, out, err, new String[]{}, null, receiver)}      * returns {@link SecurityException}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/ShellCommandDeviceTest.java]:[DMA]:[1]:method_text:[ut, err, new String[]{""ime""}, null, receiver)}      * returns {@link SecurityException}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/ShellCommandDeviceTest.java]:[DMA]:[1]:method_text:[ new String[]{""ime"", ""list""}, null,      * receiver)} returns {@link SecurityException}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/ShellCommandDeviceTest.java]:[DMA]:[1]:method_text:[t, err, new String[]{""dump""}, null, receiver)}      * returns {@link SecurityException}.      */    ])', 1), ('([1:/android/inputmethodservice/cts/devicetest/ShellCommandDeviceTest.java]:[DMA]:[1]:method_text:[t, err, new String[]{""help""}, null, receiver)}      * returns {@link SecurityException}.      */    ])', 1), ('([1:/android/autofillservice/cts/LoginActivityTest.java]:[DMA]:[1]:method_text:[tends LoginActivityCommonTestCase {      private static final String TAG = ""LoginActivityTest"";     ])', 1), ('([2:/android/autofillservice/cts/LoginActivityTest.java]:[DMA]:[2]:method_text:[ mActivity.assertAutoFilled();          // clear clipboard         cm.clearPrimaryClip();     }     ])', 1), ('([1:/com/android/cts/deviceowner/OverrideApnTest.java]:[DMA]:[1]:method_text:[deleted);         }         mDevicePolicyManager.setOverrideApnsEnabled(getWho(), false);     }     ])', 1), ('([1:/com/android/cts/comp/provisioning/ManagedProfileProvisioningTest.java]:[DMA]:[1]:method_text:[ntent) {         return intent != null && intent.getExtras().containsKey(Intent.EXTRA_USER);     } }])', 1), ('([1:/android/security/NetworkSecurityPolicyTestBase.java]:[DMA]:[1]:method_text:[HttpOnlyWebServer.shutdown();         } finally {             super.tearDown();         }     }     ])', 1), ('([25:/android/security/NetworkSecurityPolicyTestBase.java]:[DMA]:[25]:method_text:[) {             synchronized (mLock) {                 return mDone;             }         }     } }])', 1), ('([1:/android/app/cts/KeyguardManagerKeyguardLockTest.java]:[DMA]:[1]:method_text:[tationTestCase;  public class KeyguardManagerKeyguardLockTest extends InstrumentationTestCase {     ])', 1), ('([1:/android/cts/statsd/metric/ValueMetricsTests.java]:[DMA]:[1]:method_text:[TED_A_MATCH_STOP_ID = 1;   private static final int APP_BREADCRUMB_REPORTED_B_MATCH_START_ID = 2;   ])', 1), ('([3:/android/cts/statsd/metric/ValueMetricsTests.java]:[DMA]:[3]:method_text:[otalValue).isEqualTo(8);   }    // Test value metric with pulled atoms and across multiple buckets  ])', 1), ('([2:/android/cts/statsd/metric/ValueMetricsTests.java]:[DMA]:[2]:method_text:[rThan(130_000 - 60_000);   }    // Test value metric with pulled atoms and across multiple buckets  ])', 1), ('([2:/android/cts/statsd/metric/ValueMetricsTests.java]:[DMA]:[2]:method_text:[ * NUM_EVENTS - 60_000);   }    // Test value metric with pulled atoms and across multiple buckets  ])', 1), ('([2:/android/cts/statsd/metric/ValueMetricsTests.java]:[DMA]:[2]:method_text:[ipped(0).getDropEvent(0).getDropReason())             .isEqualTo(BucketDropReason.NO_DATA);   }     ])', 1), ('([3:/android/cts/statsd/metric/ValueMetricsTests.java]:[DMA]:[3]:method_text:[etValueLong())                 .sum();         assertThat(totalValue).isEqualTo(6_000_000);     }  }])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java]:[DMA]:[1]:method_text:[ runDeviceTestsAsUser(INTENT_SENDER_PKG, "".ContentTest"", mProfileUserId);      }      @FlakyTest    ])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileCrossProfileTest.java]:[DMA]:[1]:method_text:[t"",                     ""testCannotReadAcrossProfiles"", userId);         }     }      @FlakyTest    ])', 1), ('([1:/android/view/inputmethod/cts/SearchViewTest.java]:[DMA]:[1]:method_text:[            }              return layout;         });         return searchViewRef.get();     }     ])', 1), ('([1:/android/view/inputmethod/cts/SearchViewTest.java]:[DMA]:[1]:method_text:[       CHECK_EXIT_EVENT_ONLY, TIMEOUT);              expectImeVisible(TIMEOUT);         }     }     ])', 1), ('([1:/com/android/cts/instrumentationdiffcertapp/InstrumentationFailToRunTest.java]:[DMA]:[1]:method_text:[""SecurityException not thrown"");         } catch (SecurityException expected) {         }     }     ])', 1), ('([1:/com/android/cts/instrumentationdiffcertapp/InstrumentationFailToRunTest.java]:[DMA]:[1]:method_text:[            myContext.startInstrumentation(appDiffCertInstrumentation, null, new Bundle()));     } }])', 1), ('([3:/android/autofillservice/cts/LoginActivity.java]:[DMA]:[3]:method_text:[re checking autofill      * behavior.      * <pre>      * An example usage is:      * <code>      * ])', 1)]"					
269:784393) 9.11.3  . Identity Credential	9.11.3	C-0-4		[('android.net.cts.IpSecManagerTest', 41), ('android.animation.cts.CreationTest', 11), ('android.accessibilityservice.cts.AccessibilityWindowReportingTest', 8), ('android.opengl.cts.NativeColorBufferTest', 8), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 7), ('android.widget.cts.ExpandableListViewBasicTest', 7), ('android.net.cts.MacAddressTest', 6), ('android.preference.cts.PreferenceActivityTest', 5), ('android.app.cts.SystemFeaturesTest', 3), ('android.autofillservice.cts.CustomDescriptionDateTest', 3), ('com.android.cts.deviceandprofileowner.WifiTest', 3), ('android.graphics.cts.VulkanPreTransformTest', 3), ('android.suspendapps.cts.DistractingPackageTest', 3), ('android.vr.cts.VrCpuTest', 2), ('android.widget.cts.ToolbarWithMarginsTest', 2), ('android.view.cts.GestureDetectorTest', 2), ('android.server.wm.KeyguardInputTests', 2), ('android.view.cts.View_IdsTest', 2), ('android.view.cts.DisplayRefreshRateTest', 2), ('android.accessibilityservice.cts.AccessibilityGestureDispatchTest', 2), ('android.server.wm.WindowInsetsAnimationControllerTests', 2), ('com.android.server.cts.device.graphicsstats.SimpleDrawFrameTests', 2), ('android.media.cts.MediaCodecListTest', 1), ('android.app.cts.AlertDialog_BuilderTest', 1), ('android.text.style.cts.TtsSpanTest', 1), ('android.view.cts.KeyEventInjectionTest', 1), ('android.os.cts.batterysaving.BatterySaverAlarmTest', 1), ('com.android.cts.deviceandprofileowner.DelegatedCertInstallerTest', 1), ('android.assist.cts.TextViewTest', 1), ('android.text.method.cts.ReplacementTransformationMethodTest', 1), ('android.media.cts.AudioManagerTest', 1), ('android.acceleration.cts.WindowFlagHardwareAccelerationTest', 1), ('android.accessibilityservice.cts.AccessibilityGlobalActionsTest', 1), ('android.net.wifi.cts.WifiLocationInfoTest', 1), ('android.media.cts.MediaController2Test', 1)]	[('setUp', 14), ('getActivity', 11), ('getContext', 9), ('getInstrumentation', 8), ('setup', 6), ('tearDown', 5), ('getPackageManager', 3), ('getUiAutomation', 3), ('newBuilder', 3), ('getName', 3), ('getRefreshRate', 3), ('ime', 3), ('getTargetContext', 2), ('getSystemAvailableFeatures', 2), ('AccessibilityDumpOnFailureRule', 2), ('clear', 2), ('updateAlarmManagerConstants', 2), ('resetAlarmManagerConstants', 2), ('BroadcastReceiver', 2), ('elapsedRealtime', 2), ('getMainLooper', 2), ('build', 2), ('getRenderedFramesCount', 2), ('getDroppedReportsCount', 2), ('oneTimeSetup', 1), ('getServiceInfo', 1), ('finalTearDown', 1), ('destroy', 1), ('putWindowInPictureInPicture_generatesEventAndReportsProperty', 1), ('enterPictureInPictureMode', 1), ('getEventType', 1), ('getWindows', 1), ('size', 1), ('moveFocusToAnotherWindow_generatesEventsAndMovesActiveAndFocus', 1), ('showTopWindowAndWaitForItToShowUp', 1), ('getRoot', 1), ('getContentResolver', 1), ('getMainToolbar', 1), ('getRandomInt', 1), ('AtomicInteger', 1), ('incrementAndGet', 1), ('getAction', 1), ('release', 1), ('IntentFilter', 1), ('getBytes', 1), ('getActivityRule', 1), ('afterActivityLaunched', 1), ('getGestureDetector', 1), ('supportsInsecureLock', 1), ('getPackage', 1), ('eglSwapBuffers', 1), ('getFpsResult', 1), ('getSimpleName', 1), ('CancellationSignal', 1), ('LimitedErrorCollector', 1), ('types', 1), ('statusBars', 1), ('navigationBars', 1), ('nullValue', 1), ('Builder', 1), ('openEventStream', 1), ('getWindow', 1), ('getDecorView', 1), ('waitForReady', 1), ('getCurrentUserId', 1)]	[('CtsAccessibilityServiceTestCases', 11), ('CtsAnimationTestCases', 11), ('CtsWidgetTestCases', 9), ('CtsOpenGLTestCases', 8), ('CtsContactsProviderTestCases', 7), ('CtsViewTestCases', 7), ('CtsPreferenceTestCases', 5), ('CtsAppTestCases', 4), ('CtsWindowManagerDeviceTestCases', 4), ('CtsMediaTestCases', 3), ('CtsAutoFillServiceTestCases', 3), ('CtsGraphicsTestCases', 3), ('CtsSuspendAppsTestCases', 3), ('CtsTextTestCases', 2), ('CtsVrTestCases', 2), ('CtsBatterySavingTestCases', 1), ('CtsAssistTestCases', 1), ('CtsAccelerationTestCases', 1), ('CtsWifiTestCases', 1)]		9.11.3/C-0-4	"""C-0-4] The trusted application MUST be implemented in a way such that its security properties are not affected (e.g. credential data is not released unless access control conditions are satisfied, MACs can't be produced for arbitrary data) even if Android is misbehaving or compromised. <h3 id="""	09110300.670004	C-0-4 MAC 9.11.3/C-0-4 9.11.3				[('MAC', 139)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testLowRamFeature CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsMediaTestCases:android.media.cts.MediaCodecListTest.testVideoPerformancePointsSanity CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.perDisplayFocusEnabled CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.testUpdatedWindowTitle_generatesEventAndIsReturnedByGetTitle CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.testWindowAddedMovedAndRemoved_generatesEventsForAllThree CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.isInPictureInPictureMode CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.isFocused CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.moveFocusToAnotherDisplay_movesActiveAndFocusWindow CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.testChangeAccessibilityFocusWindow_getEvent CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.testGetAnchorForDropDownForAutoCompleteTextView_returnsTextViewNode CtsTextTestCases:android.text.style.cts.TtsSpanTest.testSemioticClassBuilder CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest.testAccountRemoval_deletesContacts CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest.testAccountRemoval_hasDeleteLogsForContacts CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest.testAccountRemovalWithMergedContact_deletesContacts CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest.testAccountRemoval_doesNotDeleteLocalAccountContacts CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest.testAccountRemovalWithMergedContact_doesNotDeleteContactAndTimestampUpdated CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest.testAccountRemovalWithMergedContact_hasDeleteLogsForContacts CtsVrTestCases:android.vr.cts.VrCpuTest.VrCpuTest CtsVrTestCases:android.vr.cts.VrCpuTest.testHasAtLeastTwoCores CtsPreferenceTestCases:android.preference.cts.PreferenceActivityTest.PreferenceActivityTest CtsPreferenceTestCases:android.preference.cts.PreferenceActivityTest.testAddPreferencesFromIntent CtsPreferenceTestCases:android.preference.cts.PreferenceActivityTest.testAddPreferencesFromResource CtsPreferenceTestCases:android.preference.cts.PreferenceActivityTest.testGetPreferenceManager CtsPreferenceTestCases:android.preference.cts.PreferenceActivityTest.testGetPreferenceScreen CtsWidgetTestCases:android.widget.cts.ToolbarWithMarginsTest.testSetTitleMargins CtsBatterySavingTestCases:android.os.cts.batterysaving.BatterySaverAlarmTest.hasTestServiceResponse CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionDateTest.testCustomSave CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionDateTest.testSaveSameValue_withoutSanitization CtsAssistTestCases:android.assist.cts.TextViewTest.testTextView CtsAnimationTestCases:android.animation.cts.CreationTest.testValueAnimatorResourceCreation CtsAnimationTestCases:android.animation.cts.CreationTest.testValueAnimatorPvh1 CtsAnimationTestCases:android.animation.cts.CreationTest.testValueAnimatorPvh2 CtsAnimationTestCases:android.animation.cts.CreationTest.testValueAnimatorPvhKf1 CtsAnimationTestCases:android.animation.cts.CreationTest.testValueAnimatorPvhKf2 CtsAnimationTestCases:android.animation.cts.CreationTest.testValueAnimatorPvhKf3 CtsAnimationTestCases:android.animation.cts.CreationTest.testValueAnimatorPvhKf4 CtsAnimationTestCases:android.animation.cts.CreationTest.testObjectAnimator CtsAnimationTestCases:android.animation.cts.CreationTest.testObjectAnimatorPvh1 CtsAnimationTestCases:android.animation.cts.CreationTest.testObjectAnimatorPvhKf1 CtsViewTestCases:android.view.cts.GestureDetectorTest.getListener CtsViewTestCases:android.view.cts.GestureDetectorTest.testConstructor CtsWindowManagerDeviceTestCases:android.server.wm.KeyguardInputTests.testReceiveKeysOnTopOfKeyguard CtsViewTestCases:android.view.cts.View_IdsTest.testIds None:com.android.cts.deviceandprofileowner.WifiTest.testGetWifiMacAddress None:com.android.cts.deviceandprofileowner.WifiTest.testCannotGetWifiMacAddress CtsWidgetTestCases:android.widget.cts.ExpandableListViewBasicTest.getExpandableListView CtsWidgetTestCases:android.widget.cts.ExpandableListViewBasicTest.testPreconditions CtsWidgetTestCases:android.widget.cts.ExpandableListViewBasicTest.testCollapseGroup CtsWidgetTestCases:android.widget.cts.ExpandableListViewBasicTest.testExpandedGroupMovement CtsWidgetTestCases:android.widget.cts.ExpandableListViewBasicTest.testContextMenus CtsWidgetTestCases:android.widget.cts.ExpandableListViewBasicTest.testConvertionBetweenFlatAndPacked CtsWidgetTestCases:android.widget.cts.ExpandableListViewBasicTest.testSelectedPosition CtsViewTestCases:android.view.cts.DisplayRefreshRateTest.testRefreshRate CtsMediaTestCases:android.media.cts.AudioManagerTest.testSpeakerphoneIntent CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityGestureDispatchTest.MyTouchListener CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityGestureDispatchTest.testClickWhenMagnified_matchesActualTouch CtsWindowManagerDeviceTestCases:android.server.wm.WindowInsetsAnimationControllerTests.assumeTestCompatibility CtsWindowManagerDeviceTestCases:android.server.wm.WindowInsetsAnimationControllerTests.testImeControl_isntInterruptedByStartingInput CtsGraphicsTestCases:android.graphics.cts.VulkanPreTransformTest.testVulkanPreTransformSetToMatchCurrentTransform CtsGraphicsTestCases:android.graphics.cts.VulkanPreTransformTest.testVulkanPreTransformSetToMatchCurrentTransform CtsGraphicsTestCases:android.graphics.cts.VulkanPreTransformTest.testVulkanPreTransformNotSetToMatchCurrentTransform None:android.net.cts.MacAddressTest.testMacAddress None:android.net.cts.MacAddressTest.testConstructorInputValidation None:android.net.cts.MacAddressTest.testMatches None:android.net.cts.MacAddressTest.testLinkLocalFromMacGeneration None:android.net.cts.MacAddressTest.testParcelMacAddress CtsOpenGLTestCases:android.opengl.cts.NativeColorBufferTest.NativeColorBufferTest CtsOpenGLTestCases:android.opengl.cts.NativeColorBufferTest.test_RGBA_1001 CtsOpenGLTestCases:android.opengl.cts.NativeColorBufferTest.test_RGBA_1101 CtsOpenGLTestCases:android.opengl.cts.NativeColorBufferTest.test_RGBA_1111 CtsOpenGLTestCases:android.opengl.cts.NativeColorBufferTest.test_RGBA_0101 CtsOpenGLTestCases:android.opengl.cts.NativeColorBufferTest.test_RGBA_0011 CtsOpenGLTestCases:android.opengl.cts.NativeColorBufferTest.test_RGBA_0000 CtsOpenGLTestCases:android.opengl.cts.NativeColorBufferTest.test_RGBA_rand_val_one CtsAccelerationTestCases:android.acceleration.cts.WindowFlagHardwareAccelerationTest.testIsHardwareAccelerated CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityGlobalActionsTest.testPerformActionScreenshot CtsWifiTestCases:android.net.wifi.cts.WifiLocationInfoTest.isNotNull None:com.android.server.cts.device.graphicsstats.SimpleDrawFrameTests.testNothing CtsSuspendAppsTestCases:android.suspendapps.cts.DistractingPackageTest.isEmpty CtsSuspendAppsTestCases:android.suspendapps.cts.DistractingPackageTest.testCannotRestrictWhenUninstallBlocked CtsSuspendAppsTestCases:android.suspendapps.cts.DistractingPackageTest.testCannotRestrictUnderDisallowUninstallApps CtsMediaTestCases:android.media.cts.MediaController2Test.testCallback_onSessionCommand None:android.net.cts.IpSecManagerTest.testCreateTransform None:android.net.cts.IpSecManagerTest.testIkeOverUdpEncapSocket None:android.net.cts.IpSecManagerTest.testInterfaceCountersUdp4 None:android.net.cts.IpSecManagerTest.testInterfaceCountersUdp6 None:android.net.cts.IpSecManagerTest.testInterfaceCountersUdp4UdpEncap None:android.net.cts.IpSecManagerTest.testAesCbcHmacMd5Tcp4 None:android.net.cts.IpSecManagerTest.testAesCbcHmacMd5Tcp6 None:android.net.cts.IpSecManagerTest.testAesCbcHmacMd5Udp4 None:android.net.cts.IpSecManagerTest.testAesCbcHmacMd5Udp6 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha1Tcp4 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha1Tcp6 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha1Udp4 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha1Udp6 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha256Tcp4 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha256Tcp6 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha256Udp4 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha256Udp6 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha384Tcp4 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha384Tcp6 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha384Udp4 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha384Udp6 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha512Tcp4 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha512Tcp6 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha512Udp4 None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha512Udp6 None:android.net.cts.IpSecManagerTest.testAesCbcHmacMd5Tcp4UdpEncap None:android.net.cts.IpSecManagerTest.testAesCbcHmacMd5Udp4UdpEncap None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha1Tcp4UdpEncap None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha1Udp4UdpEncap None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha256Tcp4UdpEncap None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha256Udp4UdpEncap None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha384Tcp4UdpEncap None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha384Udp4UdpEncap None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha512Tcp4UdpEncap None:android.net.cts.IpSecManagerTest.testAesCbcHmacSha512Udp4UdpEncap None:android.net.cts.IpSecManagerTest.testAuthUdp4 None:android.net.cts.IpSecManagerTest.testAuthUdp6 None:android.net.cts.IpSecManagerTest.testAuthTcp4 None:android.net.cts.IpSecManagerTest.testAuthTcp6 None:android.net.cts.IpSecManagerTest.testAuthUdp4UdpEncap None:android.net.cts.IpSecManagerTest.testAuthTcp4UdpEncap		[('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpSecManagerTest.java', 41), ('/home/gpoor/cts-source/cts/tests/tests/animation/src/android/animation/cts/CreationTest.java', 11), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/NativeColorBufferTest.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ExpandableListViewBasicTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/MacAddressTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/preference/src/android/preference/cts/PreferenceActivityTest.java', 5), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 3), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/CustomDescriptionDateTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/WifiTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanPreTransformTest.java', 3), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DistractingPackageTest.java', 3), ('/home/gpoor/cts-source/cts/tests/vr/src/android/vr/cts/VrCpuTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/ToolbarWithMarginsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/GestureDetectorTest.java', 2), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardInputTests.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/View_IdsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/DisplayRefreshRateTest.java', 2), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java', 2), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationControllerTests.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/apps/graphicsstatsapp/src/com/android/server/cts/device/graphicsstats/SimpleDrawFrameTests.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/style/cts/TtsSpanTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyEventInjectionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/batterysaving/src/android/os/cts/batterysaving/BatterySaverAlarmTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/assist/src/android/assist/cts/TextViewTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/ReplacementTransformationMethodTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/acceleration/src/android/acceleration/cts/WindowFlagHardwareAccelerationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityGlobalActionsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiLocationInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaController2Test.java', 1)]	[('/android/net/cts/IpSecManagerTest.java', 42), ('/android/animation/cts/CreationTest.java', 12), ('/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java', 9), ('/android/opengl/cts/NativeColorBufferTest.java', 9), ('/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 8), ('/android/widget/cts/ExpandableListViewBasicTest.java', 8), ('/android/net/cts/MacAddressTest.java', 7), ('/android/preference/cts/PreferenceActivityTest.java', 6), ('/android/app/cts/SystemFeaturesTest.java', 4), ('/android/autofillservice/cts/CustomDescriptionDateTest.java', 4), ('/com/android/cts/deviceandprofileowner/WifiTest.java', 4), ('/android/graphics/cts/VulkanPreTransformTest.java', 4), ('/android/suspendapps/cts/DistractingPackageTest.java', 4), ('/android/vr/cts/VrCpuTest.java', 3), ('/android/widget/cts/ToolbarWithMarginsTest.java', 3), ('/android/view/cts/GestureDetectorTest.java', 3), ('/android/server/wm/KeyguardInputTests.java', 3), ('/android/view/cts/View_IdsTest.java', 3), ('/android/view/cts/DisplayRefreshRateTest.java', 3), ('/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java', 3), ('/android/server/wm/WindowInsetsAnimationControllerTests.java', 3), ('/com/android/server/cts/device/graphicsstats/SimpleDrawFrameTests.java', 3), ('/android/media/cts/MediaCodecListTest.java', 2), ('/android/app/cts/AlertDialog_BuilderTest.java', 2), ('/android/text/style/cts/TtsSpanTest.java', 2), ('/android/view/cts/KeyEventInjectionTest.java', 2), ('/android/os/cts/batterysaving/BatterySaverAlarmTest.java', 2), ('/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java', 2), ('/android/assist/cts/TextViewTest.java', 2), ('/android/text/method/cts/ReplacementTransformationMethodTest.java', 2), ('/android/media/cts/AudioManagerTest.java', 2), ('/android/acceleration/cts/WindowFlagHardwareAccelerationTest.java', 2), ('/android/accessibilityservice/cts/AccessibilityGlobalActionsTest.java', 2), ('/android/net/wifi/cts/WifiLocationInfoTest.java', 2), ('/android/media/cts/MediaController2Test.java', 2)]	"[('([4:/android/opengl/cts/NativeColorBufferTest.java]:[MAC]:[4]:method_text:[[] actualColor = mActivity.getActualColor();         compare(expectedColor, actualColor);     }     ])', 6), ('([2:/android/net/cts/IpSecManagerTest.java]:[MAC]:[2]:method_text:[);         checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, crypt, auth, null, false, 1, true);     }     ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[MAC]:[2]:method_text:[);         checkTransform(IPPROTO_TCP, IPV6_LOOPBACK, crypt, auth, null, false, 1, true);     }     ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[MAC]:[2]:method_text:[);         checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, auth, null, false, 1, true);     }     ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[MAC]:[2]:method_text:[);         checkTransform(IPPROTO_UDP, IPV6_LOOPBACK, crypt, auth, null, false, 1, true);     }     ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[MAC]:[2]:method_text:[e);         checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, crypt, auth, null, true, 1, true);     }     ])', 5), ('([2:/android/net/cts/IpSecManagerTest.java]:[MAC]:[2]:method_text:[e);         checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, auth, null, true, 1, true);     }     ])', 5), ('([2:/android/app/cts/SystemFeaturesTest.java]:[MAC]:[2]:method_text:[properly prefixed with ""android."" that are not defined in      * {@link PackageManager}.      */    ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[MAC]:[1]:method_text:[       } else {             assertAvailable(PackageManager.FEATURE_RAM_NORMAL);         }     }     ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[MAC]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([14:/android/media/cts/MediaCodecListTest.java]:[MAC]:[14]:method_text:[                  pp2 != pp && pp2.covers(pp));                 }             }         }     }     ])', 1), ('([8:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[MAC]:[8]:method_text:[getResources()                 .getBoolean(android.R.bool.config_perDisplayFocusEnabled);     }     ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[MAC]:[1]:method_text:[(""Updated window title not reported to accessibility"", window);         window.recycle();     }     ])', 1), ('([4:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[MAC]:[4]:method_text:[hangedWithChangeTypes(WINDOWS_CHANGE_REMOVED),                 TIMEOUT_ASYNC_PROCESSING);     }     ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[MAC]:[1]:method_text:[reWindows++;             }         }         assertTrue(numPictureInPictureWindows >= 1);     }     ])', 1), ('([5:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[MAC]:[5]:method_text:[NDOWS_CHANGE_FOCUSED | WINDOWS_CHANGE_ACTIVE),                 TIMEOUT_ASYNC_PROCESSING);     }     ])', 1), ('([3:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[MAC]:[3]:method_text:[   assertTrue(activityWindow.isActive());         assertTrue(activityWindow.isFocused());     }     ])', 1), ('([3:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[MAC]:[3]:method_text:[REQUEST_TOUCH_EXPLORATION_MODE;             sUiAutomation.setServiceInfo(info);         }     }     ])', 1), ('([8:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[MAC]:[8]:method_text:[ = mActivity.getWindow().getDecorView().getWindowToken();         });         return params;     } }])', 1), ('([2:/android/app/cts/AlertDialog_BuilderTest.java]:[MAC]:[2]:method_text:[y();         mContext = activity;         PollingCheck.waitFor(activity::hasWindowFocus);     }     ])', 1), ('([4:/android/text/style/cts/TtsSpanTest.java]:[MAC]:[4]:method_text:[ICITY));         assertEquals(TtsSpan.CASE_NOMINATIVE, args.getString(TtsSpan.ARG_CASE));     }     ])', 1), ('([2:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[MAC]:[2]:method_text:[     @Override     protected void tearDown() throws Exception {         super.tearDown();     }     ])', 1), ('([4:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[MAC]:[4]:method_text:[ull, null);         assertContactsDeletedEventually(System.currentTimeMillis(), acc1Ids);     }     ])', 1), ('([4:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[MAC]:[4]:method_text:[ contacts from a single account.  Contact should be deleted upon      * account removal.      */    ])', 1), ('([2:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[MAC]:[2]:method_text:[ut this should not be done for the local account.      */     @CddTest(requirement=""3.18/C-1-4"")    ])', 1), ('([2:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[MAC]:[2]:method_text:[      * one account is removed.  But contact should have last updated timestamp updated.      */    ])', 1), ('([4:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[MAC]:[4]:method_text:[EP_BETWEEN_POLL_MS);         }         mAccountManager.removeAccount(ACCT_2, null, null);     }     ])', 1), ('([2:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[MAC]:[2]:method_text:[aseAsserts.assertAndCreateContact(mResolver, account));         }         return accountIds;     } }])', 1), ('([5:/android/view/cts/KeyEventInjectionTest.java]:[MAC]:[5]:method_text:[nts.clear();     }      /**      * Long press event can be injected through UiAutomation      */    ])', 1), ('([1:/android/vr/cts/VrCpuTest.java]:[MAC]:[1]:method_text:[ic VrCpuTest() {         super(CtsActivity.class);     }     @CddTest(requirement=""7.9.2/C-1-1"")    ])', 1), ('([2:/android/vr/cts/VrCpuTest.java]:[MAC]:[2]:method_text:[MANCE)) {             assertTrue(Runtime.getRuntime().availableProcessors() >= 2);         }     } }])', 1), ('([2:/android/preference/cts/PreferenceActivityTest.java]:[MAC]:[2]:method_text:[void setUp() throws Exception {         super.setUp();         mActivity = getActivity();     }     ])', 1), ('([4:/android/preference/cts/PreferenceActivityTest.java]:[MAC]:[4]:method_text:[t);          assertNotNull(mActivity.findPreference(""check_box_preference_from_intent""));     }     ])', 1), ('([3:/android/preference/cts/PreferenceActivityTest.java]:[MAC]:[3]:method_text:[;          assertNotNull(mActivity.findPreference(""check_box_preference_from_resource""));     }     ])', 1), ('([1:/android/preference/cts/PreferenceActivityTest.java]:[MAC]:[1]:method_text:[oid testGetPreferenceManager() {         assertNotNull(mActivity.getPreferenceManager());     }     ])', 1), ('([5:/android/preference/cts/PreferenceActivityTest.java]:[MAC]:[5]:method_text:[renceScreen(prefScreen);          assertEquals(prefScreen, mActivity.getPreferenceScreen());     } }])', 1), ('([5:/android/widget/cts/ToolbarWithMarginsTest.java]:[MAC]:[5]:method_text:[yRule.getActivity();         mMainToolbar = mActivity.getMainToolbar();     }      @UiThreadTest    ])', 1), ('([1:/android/widget/cts/ToolbarWithMarginsTest.java]:[MAC]:[1]:method_text:[(35, toolbar.getTitleMarginEnd());         assertEquals(40, toolbar.getTitleMarginBottom());     } }])', 1), ('([1:/android/os/cts/batterysaving/BatterySaverAlarmTest.java]:[MAC]:[1]:method_text:[         runKill(packageName, /*wait=*/ true);         Thread.sleep(1000);     }      @LargeTest    ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DelegatedCertInstallerTest.java]:[MAC]:[1]:method_text:[  mDpm.setCertInstallerPackage(ADMIN_RECEIVER_COMPONENT, null);         super.tearDown();     }     ])', 1), ('([2:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[MAC]:[2]:method_text:[rActivityLaunched() {                 mActivity = getActivity();             }         };     }     ])', 1), ('([3:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[MAC]:[3]:method_text:[ mUiBot.assertChild(saveUi, ""second"", (o) -> assertThat(o.getText()).isEqualTo(""12-10""));     }     ])', 1), ('([4:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[MAC]:[4]:method_text:[int resourceId) {         return new RemoteViews(getContext().getPackageName(), resourceId);     } }])', 1), ('([1:/android/assist/cts/TextViewTest.java]:[MAC]:[1]:method_text:[le.putInt(Utils.SCROLL_Y_POSITION, scrollY);         m3pActivityCallback.sendResult(bundle);     } }])', 1), ('([4:/android/animation/cts/CreationTest.java]:[MAC]:[4]:method_text:[setInTouchMode(false);         mActivity = mActivityRule.getActivity();     }      @UiThreadTest    ])', 1), ('([1:/android/animation/cts/CreationTest.java]:[MAC]:[1]:method_text:[vity, R.animator.value_animator);         verifyValues(animator, 0, 1);     }      @UiThreadTest    ])', 1), ('([1:/android/animation/cts/CreationTest.java]:[MAC]:[1]:method_text:[ R.animator.value_animator_pvh1);         verifyValues(animator, 0, 1);     }      @UiThreadTest    ])', 1), ('([1:/android/animation/cts/CreationTest.java]:[MAC]:[1]:method_text:[ R.animator.value_animator_pvh2);         verifyValues(animator, 0, 1);     }      @UiThreadTest    ])', 1), ('([1:/android/animation/cts/CreationTest.java]:[MAC]:[1]:method_text:[animator.value_animator_pvh_kf1);         verifyValues(animator, 0, 1);     }      @UiThreadTest    ])', 1), ('([1:/android/animation/cts/CreationTest.java]:[MAC]:[1]:method_text:[animator.value_animator_pvh_kf2);         verifyValues(animator, 0, 1);     }      @UiThreadTest    ])', 1), ('([1:/android/animation/cts/CreationTest.java]:[MAC]:[1]:method_text:[tor.value_animator_pvh_kf3);         verifyValues(animator, 0, .2f, 1);     }      @UiThreadTest    ])', 1), ('([1:/android/animation/cts/CreationTest.java]:[MAC]:[1]:method_text:[tor.value_animator_pvh_kf4);         verifyValues(animator, 0, .2f, 1);     }      @UiThreadTest    ])', 1), ('([1:/android/animation/cts/CreationTest.java]:[MAC]:[1]:method_text:[(new DummyAnimatorTarget());         verifyValues(animator, ""x"", 0, 1);     }      @UiThreadTest    ])', 1), ('([1:/android/animation/cts/CreationTest.java]:[MAC]:[1]:method_text:[lues(animator, ""x"", 0, 1);         verifyValues(animator, ""y"", 10, 11);     }      @UiThreadTest    ])', 1), ('([1:/android/animation/cts/CreationTest.java]:[MAC]:[1]:method_text:[nimator.getAnimatedValue(propertyName), values[values.length - 1],                 EPSILON);     } }])', 1), ('([6:/android/view/cts/GestureDetectorTest.java]:[MAC]:[6]:method_text:[ressSecondaryMotionEvent.setActionButton(MotionEvent.BUTTON_SECONDARY);     }      @UiThreadTest    ])', 1), ('([2:/android/view/cts/GestureDetectorTest.java]:[MAC]:[2]:method_text:[Looper()));         new GestureDetector(new SimpleOnGestureListener());     }      @UiThreadTest    ])', 1), ('([5:/android/server/wm/KeyguardInputTests.java]:[MAC]:[5]:method_text:[the keyguard, and inject BACK key. Ensure that the BACK key goes      * to the activity.      */    ])', 1), ('([3:/android/server/wm/KeyguardInputTests.java]:[MAC]:[3]:method_text:[sertNoMoreEvents() {         KeyEvent event = mActivity.popKey();         assertNull(event);     } }])', 1), ('([1:/android/view/cts/View_IdsTest.java]:[MAC]:[1]:method_text:[tivityRule =             new ActivityTestRule<>(UsingViewsCtsActivity.class);      @UiThreadTest    ])', 1), ('([1:/android/view/cts/View_IdsTest.java]:[MAC]:[1]:method_text:[onCancel.getId());         assertSame(buttonCancel, (Button) activity.findViewById(0x9999));     } }])', 1), ('([2:/com/android/cts/deviceandprofileowner/WifiTest.java]:[MAC]:[2]:method_text:[ss.getPackage().getName(),             BaseDeviceAdminTest.BasicAdminReceiver.class.getName());     ])', 1), ('([8:/com/android/cts/deviceandprofileowner/WifiTest.java]:[MAC]:[8]:method_text:[ned an empty string.  WiFi not enabled?"",                 TextUtils.isEmpty(macAddress));     }     ])', 1), ('([3:/com/android/cts/deviceandprofileowner/WifiTest.java]:[MAC]:[3]:method_text:[t be able to get the MAC address"");         } catch (SecurityException expected) {         }     } }])', 1), ('([6:/android/widget/cts/ExpandableListViewBasicTest.java]:[MAC]:[6]:method_text:[leListAdapter();         mListUtil = new ListUtil(mExpandableListView, mInstrumentation);     }     ])', 1), ('([4:/android/widget/cts/ExpandableListViewBasicTest.java]:[MAC]:[4]:method_text:[id not expand"", mExpandableListView.isGroupExpanded(groupPos));          return groupPos;     }     ])', 1), ('([1:/android/widget/cts/ExpandableListViewBasicTest.java]:[MAC]:[1]:method_text:[    assertFalse(""Group did not collapse"", mExpandableListView.isGroupExpanded(groupPos));     }     ])', 1), ('([4:/android/widget/cts/ExpandableListViewBasicTest.java]:[MAC]:[4]:method_text:[as given to the inserted group"",                 mExpandableListView.isGroupExpanded(0));     }     ])', 1), ('([1:/android/widget/cts/ExpandableListViewBasicTest.java]:[MAC]:[1]:method_text:[andableListTester(mActivityRule, mExpandableListView);         tester.testContextMenus();     }     ])', 1), ('([1:/android/widget/cts/ExpandableListViewBasicTest.java]:[MAC]:[1]:method_text:[enFlatAndPackedOnGroups();         tester.testConversionBetweenFlatAndPackedOnChildren();     }     ])', 1), ('([1:/android/widget/cts/ExpandableListViewBasicTest.java]:[MAC]:[1]:method_text:[     tester.testSelectedPositionOnGroups();         tester.testSelectedPositionOnChildren();     } }])', 1), ('([5:/android/view/cts/DisplayRefreshRateTest.java]:[MAC]:[5]:method_text:[  mActivity = mActivityRule.getActivity();         mFpsResult = mActivity.getFpsResult();     }     ])', 1), ('([2:/android/view/cts/DisplayRefreshRateTest.java]:[MAC]:[2]:method_text:[ateFlexibilityToken);                frameRateFlexibilityToken = 0;             }         }      } }])', 1), ('([2:/android/text/method/cts/ReplacementTransformationMethodTest.java]:[MAC]:[2]:method_text:[tivityRule.getActivity());         mEditText.setTextSize(TypedValue.COMPLEX_UNIT_SP, 10);     }     ])', 1), ('([3:/android/media/cts/AudioManagerTest.java]:[MAC]:[3]:method_text:[terruptedException e) { }                 return mIntentReceived;             }         }     }     ])', 1), ('([6:/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java]:[MAC]:[6]:method_text:[ServiceRule.enableService();          mMotionEvents.clear();         mGotUpEvent = false;     }     ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java]:[MAC]:[1]:method_text:[(3),                 both(IS_ACTION_UP).and(isAtPoint(magRegionOffsetPoint, POINT_TOL)));     }     ])', 1), ('([4:/android/server/wm/WindowInsetsAnimationControllerTests.java]:[MAC]:[4]:method_text:[tView.getRootWindowInsets().getInsetsIgnoringVisibility(mType));         }     }      @Presubmit    ])', 1), ('([6:/android/server/wm/WindowInsetsAnimationControllerTests.java]:[MAC]:[6]:method_text:[(mCount - LIMIT) + "" errors skipped.""));             }             super.verify();         }     } }])', 1), ('([1:/android/graphics/cts/VulkanPreTransformTest.java]:[MAC]:[1]:method_text:[        SystemClock.sleep(2000);         mContext = InstrumentationRegistry.getContext();     }     ])', 1), ('([1:/android/graphics/cts/VulkanPreTransformTest.java]:[MAC]:[1]:method_text:[ivity.testVulkanPreTransform(true);         sActivity.finish();         sActivity = null;     }     ])', 1), ('([1:/android/graphics/cts/VulkanPreTransformTest.java]:[MAC]:[1]:method_text:[iff(bitmap.getPixel(width - 1, height - 1), 0, 255, 0);         }          return diff < 10;     } }])', 1), ('([9:/android/net/cts/MacAddressTest.java]:[MAC]:[9]:method_text:[llyAssigned) {         return isLocallyAssigned ? ""LOCALLY_ASSIGNED"" : ""GLOBALLY_UNIQUE"";     }     ])', 1), ('([24:/android/net/cts/MacAddressTest.java]:[MAC]:[24]:method_text:[      MacAddress.fromBytes(bytes),                         mac));             }         }     }     ])', 1), ('([20:/android/net/cts/MacAddressTest.java]:[MAC]:[20]:method_text:[ailed, but returned "" + mac);         } catch (NullPointerException excepted) {         }     }     ])', 1), ('([19:/android/net/cts/MacAddressTest.java]:[MAC]:[19]:method_text:[0"")));     }      /**      * Tests that link-local address generation from MAC is valid.      */    ])', 1), ('([6:/android/net/cts/MacAddressTest.java]:[MAC]:[6]:method_text:[rtTrue(llv6.isLinkLocalAddress());         assertArrayEquals(inet6ll, llv6.getAddress());     }     ])', 1), ('([5:/android/net/cts/MacAddressTest.java]:[MAC]:[5]:method_text:[Address mac = MacAddress.fromString(""52:74:f2:b1:a8:7f"");          assertParcelSane(mac, 1);     } }])', 1), ('([2:/android/opengl/cts/NativeColorBufferTest.java]:[MAC]:[2]:method_text:[void setUp() throws Exception {         super.setUp();         mActivity = getActivity();     }     ])', 1), ('([4:/android/opengl/cts/NativeColorBufferTest.java]:[MAC]:[4]:method_text:[ being returned is always 1         //assertTrue(Math.abs(a - (actualColor[3]/255)) < 0.1f);     } }])', 1), ('([1:/android/acceleration/cts/WindowFlagHardwareAccelerationTest.java]:[MAC]:[1]:method_text:[ed());             assertFalse(mManualSoftwareView.isCanvasHardwareAccelerated());         }     } }])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityGlobalActionsTest.java]:[MAC]:[1]:method_text:[      sUiAutomation.waitForIdle(TIMEOUT_ACCESSIBILITY_STATE_IDLE, TIMEOUT_ASYNC_PROCESSING);     } }])', 1), ('([3:/android/net/wifi/cts/WifiLocationInfoTest.java]:[MAC]:[3]:method_text:[_NAME,                 WIFI_LOCATION_TEST_APP_RETRIEVE_CONNECTION_INFO_SERVICE), status);     }     ])', 1), ('([2:/com/android/server/cts/device/graphicsstats/SimpleDrawFrameTests.java]:[MAC]:[2]:method_text:[ctedFrameCount + 5));         assertThat(activity.getDroppedReportsCount()).isEqualTo(0);     }     ])', 1), ('([1:/com/android/server/cts/device/graphicsstats/SimpleDrawFrameTests.java]:[MAC]:[1]:method_text:[getActivity();         activity.waitForReady();         activity.drawFrames(new int[10]);     }     ])', 1), ('([1:/android/suspendapps/cts/DistractingPackageTest.java]:[MAC]:[1]:method_text:[           failed) + ""; expected to fail: "" + Arrays.toString(expectedToFail));         }     }     ])', 1), ('([2:/android/suspendapps/cts/DistractingPackageTest.java]:[MAC]:[2]:method_text:[ALL_TEST_PACKAGES, RESTRICTION_HIDE_FROM_SUGGESTIONS,                 ALL_TEST_PACKAGES);     }     ])', 1), ('([1:/android/suspendapps/cts/DistractingPackageTest.java]:[MAC]:[1]:method_text:[AGES, PackageManager.RESTRICTION_NONE,                 ArrayUtils.emptyArray(String.class));     } }])', 1), ('([1:/android/media/cts/MediaController2Test.java]:[MAC]:[1]:method_text:[{             assertTrue(controllerCallback.awaitOnDisconnected(WAIT_TIME_MS));         }     }     ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[MAC]:[1]:method_text:[     expectedPacketSize, expectedNumPkts, expectedPacketSize, expectedNumPkts);         }     }     ])', 1), ('([4:/android/net/cts/IpSecManagerTest.java]:[MAC]:[4]:method_text:[, 96);     //     checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, crypt, auth, true, 1000);     // }     ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[MAC]:[1]:method_text:[       checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, auth, null, false, 1000, false);     }     ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[MAC]:[1]:method_text:[       checkTransform(IPPROTO_UDP, IPV6_LOOPBACK, crypt, auth, null, false, 1000, false);     }     ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[MAC]:[1]:method_text:[        checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, crypt, auth, null, true, 1000, false);     }     ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[MAC]:[1]:method_text:[e);         checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, null, auth, null, false, 1, true);     }     ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[MAC]:[1]:method_text:[e);         checkTransform(IPPROTO_UDP, IPV6_LOOPBACK, null, auth, null, false, 1, true);     }     ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[MAC]:[1]:method_text:[e);         checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, null, auth, null, false, 1, true);     }     ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[MAC]:[1]:method_text:[e);         checkTransform(IPPROTO_TCP, IPV6_LOOPBACK, null, auth, null, false, 1, true);     }     ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[MAC]:[1]:method_text:[se);         checkTransform(IPPROTO_UDP, IPV4_LOOPBACK, null, auth, null, true, 1, true);     }     ])', 1), ('([1:/android/net/cts/IpSecManagerTest.java]:[MAC]:[1]:method_text:[se);         checkTransform(IPPROTO_TCP, IPV4_LOOPBACK, null, auth, null, true, 1, true);     }     ])', 1)]"					
269:784393) 9.11.3  . Identity Credential	9.11.3	C-0-1		[('android.app.cts.NotificationManagerTest', 16), ('android.widget.cts.TextViewTest', 9), ('android.text.method.cts.MetaKeyKeyListenerTest', 6), ('android.text.method.cts.BaseKeyListenerTest', 4), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 4), ('android.text.method.cts.CharacterPickerDialogTest', 4), ('android.text.method.cts.TimeKeyListenerTest', 3), ('android.view.inputmethod.cts.BaseInputConnectionTest', 3), ('android.text.method.cts.TextKeyListenerTest', 3), ('android.webkit.cts.WebViewDataDirTest', 2), ('android.text.method.cts.DialerKeyListenerTest', 2), ('android.text.method.cts.DateKeyListenerTest', 2), ('android.view.cts.FocusFinderTest', 2), ('android.security.cts.StagefrightTest', 2), ('android.security.net.config.cts.NestedDomainConfigTest', 2), ('android.opengl.cts.OpenGlEsVersionTest', 2), ('android.provider.cts.media.MediaStore_Audio_Playlists_MembersTest', 2), ('android.webkit.cts.WebSettingsTest', 1), ('android.content.cts.ClipDescriptionTest', 1), ('android.autofillservice.cts.CustomDescriptionDateTest', 1), ('android.security.net.config.cts.TestAttributes', 1), ('android.media.cts.MediaRoute2ProviderServiceTest', 1), ('android.webkit.cts.WebHistoryItemTest', 1), ('android.media.cts.MediaRouter2Test', 1), ('android.midi.cts.MidiEchoTest', 1), ('android.provider.cts.media.MediaStore_Audio_AlbumsTest', 1), ('android.webkit.cts.CookieTest', 1), ('android.os.cts.HwBinderTest', 1), ('android.text.method.cts.LinkMovementMethodTest', 1), ('android.security.NetworkSecurityPolicyTestBase', 1), ('android.text.cts.BidiFormatterTest', 1), ('android.provider.cts.media.MediaStore_Audio_GenresTest', 1), ('android.autofillservice.cts.TimePickerTestCase', 1), ('android.view.cts.ViewUnbufferedTest', 1), ('android.app.cts.BooleanTileServiceTest', 1), ('android.permission.cts.LocationAccessCheckTest', 1), ('com.android.cts.webkit.WebViewDeviceSideStartupTest', 1), ('android.keystore.cts.AndroidKeyStoreTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.net.http.cts.SslCertificateTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.text.method.cts.QwertyKeyListenerTest', 1), ('android.app.cts.AppTaskTests', 1), ('android.net.cts.DnsResolverTest', 1), ('android.widget.cts.TextClockTest', 1), ('android.text.method.cts.ArrowKeyMovementMethodTest', 1), ('android.provider.cts.media.MediaStore_Audio_ArtistsTest', 1), ('android.provider.cts.media.MediaStore_Audio_Artists_AlbumsTest', 1), ('android.keystore.cts.KeyStoreTest', 1), ('android.text.method.cts.ScrollingMovementMethodTest', 1), ('android.telephony.cts.PhoneNumberUtilsTest', 1), ('android.text.cts.SpannableStringBuilderSpanTest', 1), ('com.android.cts.deviceowner.AdminActionBookkeepingTest', 1), ('android.autofillservice.cts.DateTransformationTest', 1), ('android.text.cts.StaticLayoutTest', 1), ('com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest', 1)]	[('getInstance', 10), ('getInstrumentation', 9), ('setUp', 8), ('tearDown', 7), ('getId', 7), ('build', 6), ('getContentResolver', 6), ('toString', 5), ('getActiveNotifications', 5), ('getContext', 5), ('getTargetContext', 4), ('getPackageName', 4), ('getMessage', 4), ('getActivity', 3), ('size', 3), ('getSimpleName', 3), ('RouteCallback', 2), ('run', 2), ('setup', 2), ('getUiAutomation', 2), ('clear', 2), ('poll', 2), ('getPackageManager', 2), ('cancelAll', 2), ('printStackTrace', 2), ('moveToFirst', 2), ('close', 2), ('getKey', 2), ('getGroupKey', 2), ('newSingleThreadExecutor', 1), ('check', 1), ('nanoTime', 1), ('notifyAll', 1), ('FrameCallback', 1), ('getAction', 1), ('getX', 1), ('getY', 1), ('getEventTime', 1), ('getSource', 1), ('getWidth', 1), ('getHeight', 1), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('getCount', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getOverrideGroupKey', 1), ('getActivityIntent', 1), ('Intent', 1), ('removeAllAppTasks', 1), ('getMainLooper', 1), ('storePrivateDnsSetting', 1), ('restorePrivateDnsSetting', 1), ('data', 1), ('getSharedVolumeNames', 1)]	[('CtsTextTestCases', 31), ('CtsAppTestCases', 18), ('CtsWidgetTestCases', 10), ('CtsProviderTestCases', 6), ('CtsWebkitTestCases', 5), ('CtsLegacyNotification27TestCases', 4), ('CtsAutoFillServiceTestCases', 3), ('CtsViewTestCases', 3), ('CtsInputMethodTestCases', 3), ('CtsMediaTestCases', 2), ('CtsSecurityTestCases', 2), ('CtsNetSecConfigNestedDomainConfigTestCases', 2), ('CtsOpenGLTestCases', 2), ('CtsKeystoreTestCases', 2), ('CtsContentTestCases', 1), ('CtsNetSecConfigAttributeTestCases', 1), ('CtsMidiTestCases', 1), ('CtsOsHostTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsCameraTestCases', 1), ('CtsTelephonyTestCases', 1)]		9.11.3/C-0-1	"""C-0-1] MUST return non-null for the IdentityCredentialStore#getInstance() method. """	09110300.670001	C-0-1 getInstance() 9.11.3/C-0-1 9.11.3				[('getInstance()', 104), ('C-0-1', 4)]		CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessCacheMode_defaultValue CtsContentTestCases:android.content.cts.ClipDescriptionTest.testGetTimestamp CtsWebkitTestCases:android.webkit.cts.WebViewDataDirTest.testSameDirTwoProcesses CtsWebkitTestCases:android.webkit.cts.WebViewDataDirTest.testCookieJarsSeparate CtsAutoFillServiceTestCases:android.autofillservice.cts.CustomDescriptionDateTest.testSaveSameValue_withoutSanitization CtsNetSecConfigAttributeTestCases:android.security.net.config.cts.TestAttributes.testCleartextTrafficPermitted CtsTextTestCases:android.text.method.cts.DialerKeyListenerTest.testGetInstance CtsTextTestCases:android.text.method.cts.DialerKeyListenerTest.testGetInputType CtsMediaTestCases:android.media.cts.MediaRoute2ProviderServiceTest.finishActivity CtsWebkitTestCases:android.webkit.cts.WebHistoryItemTest.testWebHistoryItem CtsMediaTestCases:android.media.cts.MediaRouter2Test.emptyList CtsTextTestCases:android.text.method.cts.DateKeyListenerTest.testGetInstance CtsTextTestCases:android.text.method.cts.DateKeyListenerTest.testDateTimeKeyListener CtsTextTestCases:android.text.method.cts.MetaKeyKeyListenerTest.testPressKey CtsTextTestCases:android.text.method.cts.MetaKeyKeyListenerTest.testReleaseKey CtsTextTestCases:android.text.method.cts.MetaKeyKeyListenerTest.testAdjustMetaAfterKeypress CtsTextTestCases:android.text.method.cts.MetaKeyKeyListenerTest.testResetMetaState CtsTextTestCases:android.text.method.cts.MetaKeyKeyListenerTest.testClearMetaKeyState CtsTextTestCases:android.text.method.cts.MetaKeyKeyListenerTest.testClearMetaKeyState2 CtsViewTestCases:android.view.cts.FocusFinderTest.testGetInstance CtsWidgetTestCases:android.widget.cts.TextViewTest.testAccessKeyListener CtsWidgetTestCases:android.widget.cts.TextViewTest.testAccessMovementMethod CtsWidgetTestCases:android.widget.cts.TextViewTest.testSetEditableFactory CtsWidgetTestCases:android.widget.cts.TextViewTest.testSetSpannableFactory CtsWidgetTestCases:android.widget.cts.TextViewTest.testAccessError CtsWidgetTestCases:android.widget.cts.TextViewTest.testKeyNavigation CtsWidgetTestCases:android.widget.cts.TextViewTest.testAccessTransformationMethod CtsWidgetTestCases:android.widget.cts.TextViewTest.testSingleLine CtsWidgetTestCases:android.widget.cts.TextViewTest.testGetTextDirectionHeuristic_RtlLayout_TextDirectionLocale CtsSecurityTestCases:android.security.cts.StagefrightTest.testStagefright_bug_68342866 CtsSecurityTestCases:android.security.cts.StagefrightTest.testStagefright_cve_2016_3879 CtsNetSecConfigNestedDomainConfigTestCases:android.security.net.config.cts.NestedDomainConfigTest.testRootDomainConfig CtsNetSecConfigNestedDomainConfigTestCases:android.security.net.config.cts.NestedDomainConfigTest.testNestedDomainConfig CtsTextTestCases:android.text.method.cts.TimeKeyListenerTest.testGetInstance CtsTextTestCases:android.text.method.cts.TimeKeyListenerTest.testGetInputType CtsTextTestCases:android.text.method.cts.TimeKeyListenerTest.testTimeKeyListener CtsMidiTestCases:android.midi.cts.MidiEchoTest.currentTimeMillis CtsProviderTestCases:android.provider.cts.media.MediaStore_Audio_AlbumsTest.testStoreAudioAlbums CtsWebkitTestCases:android.webkit.cts.CookieTest.CookieTest CtsOsHostTestCases:android.os.cts.HwBinderTest.testHwBinder CtsTextTestCases:android.text.method.cts.LinkMovementMethodTest.testGetInstance None:android.security.NetworkSecurityPolicyTestBase.testNetworkSecurityPolicy CtsTextTestCases:android.text.cts.BidiFormatterTest.testCachedInstances CtsProviderTestCases:android.provider.cts.media.MediaStore_Audio_GenresTest.testGetContentUriForAudioId CtsAutoFillServiceTestCases:android.autofillservice.cts.TimePickerTestCase.testAutoFillAndSave CtsViewTestCases:android.view.cts.ViewUnbufferedTest.uptimeMillis CtsAppTestCases:android.app.cts.BooleanTileServiceTest.testValueTracksState CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensionsForWideColorDisplay CtsPermissionTestCases:android.permission.cts.LocationAccessCheckTest.getPermissionControllerPackageName None:com.android.cts.webkit.WebViewDeviceSideStartupTest.testCookieManagerBlockingUiThread CtsKeystoreTestCases:android.keystore.cts.AndroidKeyStoreTest.testKeyStore_Encrypting_RSA_NONE_NOPADDING None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis None:android.net.http.cts.SslCertificateTest.testConstructor CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testMonochromeCharacteristics CtsAppTestCases:android.app.cts.NotificationManagerTest.isGroup CtsAppTestCases:android.app.cts.NotificationManagerTest.testSuspendPackage CtsAppTestCases:android.app.cts.NotificationManagerTest.testSuspendedPackageSendsNotification CtsAppTestCases:android.app.cts.NotificationManagerTest.testCanBubble_ranking CtsAppTestCases:android.app.cts.NotificationManagerTest.testShowBadging_ranking CtsAppTestCases:android.app.cts.NotificationManagerTest.testGetSuppressedVisualEffectsOff_ranking CtsAppTestCases:android.app.cts.NotificationManagerTest.testGetSuppressedVisualEffects_ranking CtsAppTestCases:android.app.cts.NotificationManagerTest.testKeyChannelGroupOverrideImportanceExplanation_ranking CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationDelegate_cannotCancelNotificationsPostedByDelegator CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationListener_setNotificationsShown CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationListener_getNotificationChannels CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationListener_getNotificationChannelGroups CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationListener_updateNotificationChannel CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationListener_getActiveNotifications CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationListener_getCurrentRanking CtsAppTestCases:android.app.cts.NotificationManagerTest.testNotificationListener_cancelNotifications CtsTextTestCases:android.text.method.cts.QwertyKeyListenerTest.testGetInstance None:android.net.cts.DnsResolverTest.getTestableNetworks CtsInputMethodTestCases:android.view.inputmethod.cts.BaseInputConnectionTest.testOpTextMethods CtsInputMethodTestCases:android.view.inputmethod.cts.BaseInputConnectionTest.testFinishComposingText CtsInputMethodTestCases:android.view.inputmethod.cts.BaseInputConnectionTest.testReportFullscreenMode CtsTextTestCases:android.text.method.cts.BaseKeyListenerTest.testBackspace CtsTextTestCases:android.text.method.cts.BaseKeyListenerTest.testBackspace_withAlt CtsTextTestCases:android.text.method.cts.BaseKeyListenerTest.testBackspace_withCtrl CtsTextTestCases:android.text.method.cts.BaseKeyListenerTest.testForwardDelete_withCtrl CtsWidgetTestCases:android.widget.cts.TextClockTest.testUpdate12_24 CtsTextTestCases:android.text.method.cts.TextKeyListenerTest.testGetInstance2 CtsTextTestCases:android.text.method.cts.TextKeyListenerTest.testOnSpanChanged CtsTextTestCases:android.text.method.cts.TextKeyListenerTest.testOnSpanChangedNull CtsTextTestCases:android.text.method.cts.ArrowKeyMovementMethodTest.testGetInstance CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.LegacyNotificationManagerTest.testSuspendPackage CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.LegacyNotificationManagerTest.testSuspendedPackageSendNotification CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.LegacyNotificationManagerTest.testResetListenerHints_singleListener CtsLegacyNotification27TestCases:android.app.notification.legacy.cts.LegacyNotificationManagerTest.testResetListenerHints_multiListener CtsProviderTestCases:android.provider.cts.media.MediaStore_Audio_ArtistsTest.testStoreAudioArtists CtsProviderTestCases:android.provider.cts.media.MediaStore_Audio_Playlists_MembersTest.testStoreAudioPlaylistsMembersExternal CtsProviderTestCases:android.provider.cts.media.MediaStore_Audio_Artists_AlbumsTest.testStoreAudioArtistsAlbums CtsKeystoreTestCases:android.keystore.cts.KeyStoreTest.test_KeyStore_getInstance CtsTextTestCases:android.text.method.cts.ScrollingMovementMethodTest.testGetInstance CtsTelephonyTestCases:android.telephony.cts.PhoneNumberUtilsTest.testFormatMethods CtsTextTestCases:android.text.cts.SpannableStringBuilderSpanTest.testCopyConstructorDoesNotEnforceParagraphStyleConstraint None:com.android.cts.deviceowner.AdminActionBookkeepingTest.testRequestBugreport CtsAutoFillServiceTestCases:android.autofillservice.cts.DateTransformationTest.testValidAutofillValue CtsTextTestCases:android.text.cts.StaticLayoutTest.testImmutableStaticLayout None:com.android.cts.deviceandprofileowner.systemupdate.SystemUpdatePolicyTest.testWriteValidationFailedExceptionToParcel CtsTextTestCases:android.text.method.cts.CharacterPickerDialogTest.testConstructor CtsTextTestCases:android.text.method.cts.CharacterPickerDialogTest.testConstructorNullContext CtsTextTestCases:android.text.method.cts.CharacterPickerDialogTest.testOnItemClick CtsTextTestCases:android.text.method.cts.CharacterPickerDialogTest.testOnClick		[('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 16), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TextViewTest.java', 9), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/MetaKeyKeyListenerTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/BaseKeyListenerTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/CharacterPickerDialogTest.java', 4), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/TimeKeyListenerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/BaseInputConnectionTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/TextKeyListenerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewDataDirTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/DialerKeyListenerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/DateKeyListenerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/FocusFinderTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/StagefrightTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/networksecurityconfig/networksecurityconfig-nested-domains/src/android/security/net/config/cts/NestedDomainConfigTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ClipDescriptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/CustomDescriptionDateTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/networksecurityconfig/networksecurityconfig-attributes/src/android/security/net/config/cts/TestAttributes.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRoute2ProviderServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebHistoryItemTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaRouter2Test.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/midi/src/android/midi/cts/MidiEchoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/CookieTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/HwBinderTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/LinkMovementMethodTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/netsecpolicy/src/android/security/NetworkSecurityPolicyTestBase.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/BidiFormatterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_GenresTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/TimePickerTestCase.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/nativemidi/java/android/nativemidi/cts/NativeMidiEchoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewUnbufferedTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/BooleanTileServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/LocationAccessCheckTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/webkit/app/src/com/android/cts/webkit/WebViewDeviceSideStartupTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/AndroidKeyStoreTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/http/cts/SslCertificateTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/QwertyKeyListenerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AppTaskTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/DnsResolverTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/widget/src/android/widget/cts/TextClockTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/ArrowKeyMovementMethodTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_Audio_Artists_AlbumsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyStoreTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/method/cts/ScrollingMovementMethodTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/PhoneNumberUtilsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/SpannableStringBuilderSpanTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 1), ('/home/gpoor/cts-source/cts/tests/autofillservice/src/android/autofillservice/cts/DateTransformationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/StaticLayoutTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java', 1)]	[('/android/app/cts/NotificationManagerTest.java', 17), ('/android/widget/cts/TextViewTest.java', 10), ('/android/text/method/cts/MetaKeyKeyListenerTest.java', 7), ('/android/text/method/cts/BaseKeyListenerTest.java', 5), ('/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 5), ('/android/text/method/cts/CharacterPickerDialogTest.java', 5), ('/android/text/method/cts/TimeKeyListenerTest.java', 4), ('/android/view/inputmethod/cts/BaseInputConnectionTest.java', 4), ('/android/text/method/cts/TextKeyListenerTest.java', 4), ('/android/webkit/cts/WebViewDataDirTest.java', 3), ('/android/text/method/cts/DialerKeyListenerTest.java', 3), ('/android/text/method/cts/DateKeyListenerTest.java', 3), ('/android/view/cts/FocusFinderTest.java', 3), ('/android/security/cts/StagefrightTest.java', 3), ('/android/security/net/config/cts/NestedDomainConfigTest.java', 3), ('/android/opengl/cts/OpenGlEsVersionTest.java', 3), ('/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java', 3), ('/android/webkit/cts/WebSettingsTest.java', 2), ('/android/content/cts/ClipDescriptionTest.java', 2), ('/android/autofillservice/cts/CustomDescriptionDateTest.java', 2), ('/android/security/net/config/cts/TestAttributes.java', 2), ('/android/media/cts/MediaRoute2ProviderServiceTest.java', 2), ('/android/webkit/cts/WebHistoryItemTest.java', 2), ('/android/media/cts/MediaRouter2Test.java', 2), ('/android/midi/cts/MidiEchoTest.java', 2), ('/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java', 2), ('/android/webkit/cts/CookieTest.java', 2), ('/android/os/cts/HwBinderTest.java', 2), ('/android/text/method/cts/LinkMovementMethodTest.java', 2), ('/android/security/NetworkSecurityPolicyTestBase.java', 2), ('/android/text/cts/BidiFormatterTest.java', 2), ('/android/provider/cts/media/MediaStore_Audio_GenresTest.java', 2), ('/android/autofillservice/cts/TimePickerTestCase.java', 2), ('/android/view/cts/ViewUnbufferedTest.java', 2), ('/android/app/cts/BooleanTileServiceTest.java', 2), ('/android/permission/cts/LocationAccessCheckTest.java', 2), ('/com/android/cts/webkit/WebViewDeviceSideStartupTest.java', 2), ('/android/keystore/cts/AndroidKeyStoreTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/net/http/cts/SslCertificateTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/text/method/cts/QwertyKeyListenerTest.java', 2), ('/android/app/cts/AppTaskTests.java', 2), ('/android/net/cts/DnsResolverTest.java', 2), ('/android/widget/cts/TextClockTest.java', 2), ('/android/text/method/cts/ArrowKeyMovementMethodTest.java', 2), ('/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java', 2), ('/android/provider/cts/media/MediaStore_Audio_Artists_AlbumsTest.java', 2), ('/android/keystore/cts/KeyStoreTest.java', 2), ('/android/text/method/cts/ScrollingMovementMethodTest.java', 2), ('/android/telephony/cts/PhoneNumberUtilsTest.java', 2), ('/android/text/cts/SpannableStringBuilderSpanTest.java', 2), ('/com/android/cts/deviceowner/AdminActionBookkeepingTest.java', 2), ('/android/autofillservice/cts/DateTransformationTest.java', 2), ('/android/text/cts/StaticLayoutTest.java', 2), ('/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java', 2)]	"[('([3:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[getInstance()]:[3]:method_text:[      assertEquals(Spanned.SPAN_POINT_POINT, text.getSpanFlags(Selection.SELECTION_END));     }     ])', 3), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[sociations()"");         } catch (SecurityException e) {             // expected         }     }     ])', 3), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[ot set to null!"");         } catch (NullPointerException e) {         }     }      @UiThreadTest    ])', 2), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[tFalse(outRanking.isSuspended());             }         }          mListener.resetData();     }     ])', 2), ('([1:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[getInstance()]:[1]:method_text:[    InstrumentationRegistry.getInstrumentation(), false);          mListener.resetData();     }     ])', 2), ('([1:/android/webkit/cts/WebSettingsTest.java]:[getInstance()]:[1]:method_text:[Sync();         Thread.sleep(100); // Wait for open to be received on the icon db thread.     }     ])', 1), ('([1:/android/content/cts/ClipDescriptionTest.java]:[getInstance()]:[1]:method_text:[ntext.startActivity(intent);         mUiDevice.wait(Until.hasObject(By.clazz(clazz)), 5000);     } }])', 1), ('([1:/android/webkit/cts/WebViewDataDirTest.java]:[getInstance()]:[1]:method_text:[_URL);             assertNull(""cookie leaked to alternate cookie jar"", cookie);         }     }     ])', 1), ('([1:/android/webkit/cts/WebViewDataDirTest.java]:[getInstance()]:[1]:method_text:[))) {             processA.run(TestCookieInAlternateDir.class, REMOTE_TIMEOUT_MS);         }     } }])', 1), ('([1:/android/autofillservice/cts/CustomDescriptionDateTest.java]:[getInstance()]:[1]:method_text:[int resourceId) {         return new RemoteViews(getContext().getPackageName(), resourceId);     } }])', 1), ('([1:/android/security/net/config/cts/TestAttributes.java]:[getInstance()]:[1]:method_text:[ase-config\'s value.         assertTrue(instance.isCleartextTrafficPermitted(""example.com""));     } }])', 1), ('([4:/android/text/method/cts/DialerKeyListenerTest.java]:[getInstance()]:[4]:method_text:[rtTrue(listener2 instanceof DialerKeyListener);         assertSame(listener1, listener2);     }     ])', 1), ('([1:/android/text/method/cts/DialerKeyListenerTest.java]:[getInstance()]:[1]:method_text:[Event event, Spannable content) {             return super.lookup(event, content);         }     } }])', 1), ('([1:/android/media/cts/MediaRoute2ProviderServiceTest.java]:[getInstance()]:[1]:method_text:[(mService != null) {             mService.clear();             mService = null;         }     }     ])', 1), ('([1:/android/webkit/cts/WebHistoryItemTest.java]:[getInstance()]:[1]:method_text:[ assertNotNull(item);         assertEquals(TestHtmlConstants.BR_TAG_TITLE, item.getTitle());     } }])', 1), ('([1:/android/media/cts/MediaRouter2Test.java]:[getInstance()]:[1]:method_text:[(mService != null) {             mService.clear();             mService = null;         }     }     ])', 1), ('([3:/android/text/method/cts/DateKeyListenerTest.java]:[getInstance()]:[3]:method_text:[assertNotSame(usListener1, irListener);         assertNotSame(usListener1, nullListener);     }     ])', 1), ('([1:/android/text/method/cts/DateKeyListenerTest.java]:[getInstance()]:[1]:method_text:[protected char[] getAcceptedChars() {             return super.getAcceptedChars();         }     } }])', 1), (""([1:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[getInstance()]:[1]:method_text:[KeyEvent.ACTION_DOWN, KeyEvent.KEYCODE_3));         assertEquals('3', content.charAt(3));     }     ])"", 1), ('([1:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[getInstance()]:[1]:method_text:[CTION_DOWN, KeyEvent.KEYCODE_3));         assertEquals(str.charAt(3), content.charAt(3));     }     ])', 1), ('([3:/android/text/method/cts/MetaKeyKeyListenerTest.java]:[getInstance()]:[3]:method_text:[   assertEquals(Spanned.SPAN_POINT_POINT, content.getSpanFlags(Selection.SELECTION_END));     }     ])', 1), ('([1:/android/view/cts/FocusFinderTest.java]:[getInstance()]:[1]:method_text:[Left.setNextFocusLeftId(View.NO_ID);         mBottomRight.setNextFocusLeftId(View.NO_ID);     }     ])', 1), ('([1:/android/view/cts/FocusFinderTest.java]:[getInstance()]:[1]:method_text:[     public void testGetInstance() {         assertNotNull(mFocusFinder);     }      ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[ion.waitForIdleSync();         assertSame(qwertyKeyListener, mTextView.getKeyListener());     }     ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[rtEquals(selectionEnd, Selection.getSelectionEnd(mTextView.getText()));     }      @UiThreadTest    ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[ // the error message and icon will be cleared.         assertNull(mTextView.getError());     }     ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[t.setSource(source);         CtsKeyEventUtil.sendKey(instrumentation, targetView, event);     }     ])', 1), ('([4:/android/widget/cts/TextViewTest.java]:[getInstance()]:[4]:method_text:[ForIdleSync();         assertNull(mTextView.getTransformationMethod());     }      @UiThreadTest    ])', 1), ('([2:/android/widget/cts/TextViewTest.java]:[getInstance()]:[2]:method_text:[ertEquals(singleLineWidth, mTextView.getLayout().getWidth());         }     }      @UiThreadTest    ])', 1), ('([1:/android/widget/cts/TextViewTest.java]:[getInstance()]:[1]:method_text:[  s.replace(0, s.length(), builder.toString());             mChangingText = false;         }     } }])', 1), ('([1:/android/security/cts/StagefrightTest.java]:[getInstance()]:[1]:method_text:[     t.join();         policy.setCleartextTrafficPermitted(false);         server.join();     }     ])', 1), (""([1:/android/security/cts/StagefrightTest.java]:[getInstance()]:[1]:method_text:[or thread to exit so we're sure the player was released     }      /*      * b/135207745      */    ])"", 1), ('([1:/android/security/net/config/cts/NestedDomainConfigTest.java]:[getInstance()]:[1]:method_text:[y.getInstance();         assertTrue(instance.isCleartextTrafficPermitted(""android.com""));     }     ])', 1), ('([1:/android/security/net/config/cts/NestedDomainConfigTest.java]:[getInstance()]:[1]:method_text:[tance();         assertFalse(instance.isCleartextTrafficPermitted(""developer.android.com""));     } }])', 1), ('([3:/android/text/method/cts/TimeKeyListenerTest.java]:[getInstance()]:[3]:method_text:[assertNotSame(usListener1, irListener);         assertNotSame(usListener1, nullListener);     }     ])', 1), (""([1:/android/text/method/cts/TimeKeyListenerTest.java]:[getInstance()]:[1]:method_text:[ey could not be entered.      * 7. Remove TimeKeyListener, '1' key will not be accepted.      */    ])"", 1), ('([1:/android/text/method/cts/TimeKeyListenerTest.java]:[getInstance()]:[1]:method_text:[protected char[] getAcceptedChars() {             return super.getAcceptedChars();         }     } }])', 1), ('([2:/android/midi/cts/MidiEchoTest.java]:[getInstance()]:[2]:method_text:[o.TYPE_VIRTUAL,                 echoInfo.getType());     }      // Is the MidiManager supported?    ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_AlbumsTest.java]:[getInstance()]:[1]:method_text:[election, selectionArgs, null);         assertEquals(0, c.getCount());         c.close();     }     ])', 1), ('([1:/android/webkit/cts/CookieTest.java]:[getInstance()]:[1]:method_text:[             }         }         assertFalse(mCookieManager.hasCookies());     }      @Presubmit    ])', 1), ('([2:/android/os/cts/HwBinderTest.java]:[getInstance()]:[2]:method_text:[      notification.lock.unlock();         }          assertTrue(notification.registered);     }     ])', 1), ('([3:/android/text/method/cts/LinkMovementMethodTest.java]:[getInstance()]:[3]:method_text:[thod.getInstance();         assertNotNull(method1);         assertSame(method0, method1);     }     ])', 1), ('([1:/android/security/NetworkSecurityPolicyTestBase.java]:[getInstance()]:[1]:method_text:[tted,                 NetworkSecurityPolicy.getInstance().isCleartextTrafficPermitted());     }     ])', 1), ('([1:/android/text/cts/BidiFormatterTest.java]:[getInstance()]:[1]:method_text:[);         assertEquals(RTL_FMT, BidiFormatter.getInstance(Locale.forLanguageTag(""ar"")));     }     ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_GenresTest.java]:[getInstance()]:[1]:method_text:[ull));             assertEquals(1, mContentResolver.delete(genreUri, null, null));         }     } }])', 1), ('([1:/android/autofillservice/cts/TimePickerTestCase.java]:[getInstance()]:[1]:method_text:[        assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_OUTPUT), ""10:40"");     } }])', 1), (""([2:]:[getInstance()]:[2]:method_text:[d so don't test it.         }         tearDownEchoServer();          mMidiManager = null;     }     ])"", 1), ('([1:/android/view/cts/ViewUnbufferedTest.java]:[getInstance()]:[1]:method_text:[eCallback(mFrameCallback);     }      // Normal view would expect to receive the buffered event.    ])', 1), ('([1:/android/app/cts/BooleanTileServiceTest.java]:[getInstance()]:[1]:method_text:[HECK_DELAY);         }         assertEquals(state, ToggleableTestTileService.isConnected());     } }])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-0-1]:[1]:method_text:[       mActivity = mActivityRule.getActivity();     }      @CddTest(requirement=""7.1.4.1/C-0-1"")    ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-0-1]:[1]:method_text:[ption e) {             Log.e(TAG, ""Caught exception: "" + e);         }         return false;     } }])', 1), ('([2:/android/permission/cts/LocationAccessCheckTest.java]:[getInstance()]:[2]:method_text:[Unbind() throws Throwable {         unbindService();         getNotification(true, true);     }     ])', 1), ('([2:/com/android/cts/webkit/WebViewDeviceSideStartupTest.java]:[getInstance()]:[2]:method_text:[42"", m.group(1)); // value got incremented         syncLoader.detach();     }      @UiThreadTest    ])', 1), ('([1:/android/keystore/cts/AndroidKeyStoreTest.java]:[getInstance()]:[1]:method_text:[legalBlockSizeException e) {             // pass on exception as it is expected         }     }     ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-0-1]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/net/http/cts/SslCertificateTest.java]:[getInstance()]:[1]:method_text:[   public boolean hasUnsupportedCriticalExtension() {             return false;         }     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-0-1]:[1]:method_text:[acy API are also      * accessible via Camera2.      */     @CddTest(requirement=""7.5.4/C-0-11"")    ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[anupSendBubbleActivity() {         mContext.unregisterReceiver(mBubbleBroadcastReceiver);     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[ertFalse(outRanking.canBubble());             }         }          mListener.resetData();     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[                       Settings.Secure.NOTIFICATION_BADGING, originalBadging));         }     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[        assertEquals(0, outRanking.getSuppressedVisualEffects());             }         }     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[alFilter);             mNotificationManager.setNotificationPolicy(origPolicy);         }      }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[            assertNotNull(outRanking.getImportanceExplanation());             }         }     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[VITY_NEW_TASK);         mContext.startActivity(revokeIntent);         Thread.sleep(1000);     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[sn\'t granted"");         } catch (SecurityException e) {             // expected         }     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[fs[1].getId());         assertEquals(sbn1.getPackageName(), notifs[1].getPackageName());     }      ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[notification          assertEquals(mListener.mRankingMap, mListener.getCurrentRanking());     }     ])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[getInstance()]:[1]:method_text:[lse)) {             fail(""Failed to cancel notification id="" + notificationId);         }     }     ])', 1), ('([1:/android/text/method/cts/QwertyKeyListenerTest.java]:[getInstance()]:[1]:method_text:[        assertNotSame(listener1, listener4);         assertNotSame(listener4, listener3);     }     ])', 1), ('([1:/android/app/cts/AppTaskTests.java]:[getInstance()]:[1]:method_text:[Tasks();     }      /**      * Launch an activity and ensure it is in the app task list.      */    ])', 1), ('([1:/android/net/cts/DnsResolverTest.java]:[getInstance()]:[1]:method_text:[    assertGreaterThan(mMsg + "" No question found"", mDnsAnswer.getQDCount(), 0);         }     }     ])', 1), ('([1:/android/view/inputmethod/cts/BaseInputConnectionTest.java]:[getInstance()]:[1]:method_text:[en text into the editable,      *                  replacing any existing composing text      */    ])', 1), ('([1:/android/view/inputmethod/cts/BaseInputConnectionTest.java]:[getInstance()]:[1]:method_text:[ -1);     }      /**      * Updates InputMethodManager with the current fullscreen mode.      */    ])', 1), ('([1:/android/view/inputmethod/cts/BaseInputConnectionTest.java]:[getInstance()]:[1]:method_text:[    * Tests {@link BaseInputConnection#deleteSurroundingText(int, int)} comprehensively.      */    ])', 1), ('([3:/android/text/method/cts/BaseKeyListenerTest.java]:[getInstance()]:[3]:method_text:[    assertEquals(""\\u05D6\\u05D4\\u0020Anroid\\u0020\\u05E2\\u05D5\\u05D1"", content.toString());     }     ])', 1), ('([3:/android/text/method/cts/BaseKeyListenerTest.java]:[getInstance()]:[3]:method_text:[AltBackspace(content, mockBaseKeyListener);         assertEquals("""", content.toString());     }     ])', 1), ('([6:/android/text/method/cts/BaseKeyListenerTest.java]:[getInstance()]:[6]:method_text:[;         assertEquals("""", content.toString());         verifyCursorPosition(content, 0);     }     ])', 1), (""([6:/android/text/method/cts/BaseKeyListenerTest.java]:[getInstance()]:[6]:method_text:[    * 3. ACTION_MULTIPLE KEYCODE_UNKNOWN by inserting the event's text into the content.      */    ])"", 1), ('([1:/android/widget/cts/TextClockTest.java]:[getInstance()]:[1]:method_text:[) {                 throw new RuntimeException(t.getMessage());             }         });     }     ])', 1), ('([2:/android/text/method/cts/TextKeyListenerTest.java]:[getInstance()]:[2]:method_text:[ertSame(listener1, listener2);          listener1.release();         listener2.release();     }     ])', 1), ('([1:/android/text/method/cts/TextKeyListenerTest.java]:[getInstance()]:[1]:method_text:[anChanged(text, Selection.SELECTION_END, 0, 0, 0, 0);          textKeyListener.release();     }     ])', 1), ('([1:/android/text/method/cts/TextKeyListenerTest.java]:[getInstance()]:[1]:method_text:[xtKeyListener.onSpanChanged(null, Selection.SELECTION_END, 0, 0, 0, 0);     }      @UiThreadTest    ])', 1), ('([3:/android/text/method/cts/ArrowKeyMovementMethodTest.java]:[getInstance()]:[3]:method_text:[thod.getInstance();         assertNotNull(method1);         assertSame(method0, method1);     }     ])', 1), ('([1:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[getInstance()]:[1]:method_text:[istenerHints();        assertEquals(conditionValue, mListener.getCurrentListenerHints());     }     ])', 1), ('([2:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[getInstance()]:[2]:method_text:[ABLE_CALL_EFFECTS,               mSecondaryListener.getCurrentListenerHints());         }     }     ])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_ArtistsTest.java]:[getInstance()]:[1]:method_text:[, selection, selectionArgs, null);         assertEquals(0, c.getCount());         c.close();     } }])', 1), ('([5:/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java]:[getInstance()]:[5]:method_text:[Audio4, null);         mContentResolver.delete(uri, Media._ID + ""="" + mIdOfAudio5, null);     }     ])', 1), ('([3:/android/provider/cts/media/MediaStore_Audio_Playlists_MembersTest.java]:[getInstance()]:[3]:method_text:[),                         Playlists._ID + ""="" + playlist2Id, null);             }         }     } }])', 1), ('([1:/android/provider/cts/media/MediaStore_Audio_Artists_AlbumsTest.java]:[getInstance()]:[1]:method_text:[lbumsUri, null, null, null, null);         assertEquals(0, c.getCount());         c.close();     } }])', 1), ('([1:/android/keystore/cts/KeyStoreTest.java]:[getInstance()]:[1]:method_text:[eption expected) {         }         assertNotNull(KeyStore.getInstance(type, provider));     }     ])', 1), ('([3:/android/text/method/cts/ScrollingMovementMethodTest.java]:[getInstance()]:[3]:method_text:[od method1 = ScrollingMovementMethod.getInstance();         assertSame(method0, method1);     }     ])', 1), ('([8:/android/telephony/cts/PhoneNumberUtilsTest.java]:[getInstance()]:[8]:method_text:[  assertEquals(PhoneNumberUtils.TOA_Unknown, PhoneNumberUtils.toaFromString(""88888888""));     }     ])', 1), ('([1:/android/text/cts/SpannableStringBuilderSpanTest.java]:[getInstance()]:[1]:method_text:[opied.length(), AlignmentSpan.Standard.class);          assertEquals(0, copiedSpans.length);     } }])', 1), ('([2:/com/android/cts/deviceowner/AdminActionBookkeepingTest.java]:[getInstance()]:[2]:method_text:[     /**      * Test: Retrieving network logs should update the corresponding timestamp.      */    ])', 1), ('([1:/android/autofillservice/cts/DateTransformationTest.java]:[getInstance()]:[1]:method_text:[.setCharSequence(eq(0), any(),                 argThat(new CharSequenceMatcher(""12/2012"")));     } }])', 1), ('([1:/android/text/cts/StaticLayoutTest.java]:[getInstance()]:[1]:method_text:[, class: "" + seq.getClass().getName() +                 "", Normalization: "" + normalized;     }     ])', 1), ('([1:/com/android/cts/deviceandprofileowner/systemupdate/SystemUpdatePolicyTest.java]:[getInstance()]:[1]:method_text:[ finally {             mContext.unregisterReceiver(receiver);         }         return true;     } }])', 1), ('([1:/android/text/method/cts/CharacterPickerDialogTest.java]:[getInstance()]:[1]:method_text:[aracterPickerDialog(view.getContext(), view, content, ""\\u00A1"", false);     }      @UiThreadTest    ])', 1), ('([1:/android/text/method/cts/CharacterPickerDialogTest.java]:[getInstance()]:[1]:method_text:[       new CharacterPickerDialog(null, view, content, ""\\u00A1"", false);     }      @UiThreadTest    ])', 1), ('([2:/android/text/method/cts/CharacterPickerDialogTest.java]:[getInstance()]:[2]:method_text:[ text.toString());         assertFalse(insertPickerDialog.isShowing());     }      @UiThreadTest    ])', 1), ('([1:/android/text/method/cts/CharacterPickerDialogTest.java]:[getInstance()]:[1]:method_text:[just make sure onClick does not throw exception         characterPickerDialog.onClick(view);     } }])', 1)]"					
269:784393) 9.11.3  . Identity Credential	9.11.3	C-0-3		[('android.appsecurity.cts.ApkVerityInstallTest', 12), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.security.identity.cts.ProvisioningTest', 2), ('android.security.identity.cts.EphemeralKeyTest', 2), ('android.security.identity.cts.CreateItemsRequestTest', 1), ('android.security.identity.cts.UtilUnitTests', 1), ('android.security.identity.cts.AttestationTest', 1), ('android.security.identity.cts.HkdfTest', 1), ('android.security.cts.EncryptionTest', 1), ('android.security.identity.cts.IdentityApiTest', 1), ('android.security.identity.cts.X509CertificateSigningTest', 1), ('android.security.identity.cts.UserAuthTest', 1)]	[('build', 5), ('getBytes', 3), ('printStackTrace', 3), ('setUp', 3), ('getExampleDrivingPrivilegesCbor', 2), ('end', 2), ('Builder', 2), ('getDevice', 2), ('length', 2), ('ByteArrayOutputStream', 1), ('CborBuilder', 1), ('addArray', 1), ('addMap', 1), ('toByteArray', 1), ('iterator', 1), ('next', 1), ('getPublicKey', 1), ('getLaunchApiLevel', 1), ('tearDown', 1), ('createEphemeralKey', 1), ('Random', 1), ('toString', 1), ('getInstrumentation', 1), ('getContext', 1), ('DeviceLockSession', 1), ('LockScreenSession', 1), ('setLockCredential', 1), ('performDeviceLock', 1), ('sleepDevice', 1), ('getTargetContext', 1)]	[('CtsIdentityTestCases', 11), ('CtsSecurityTestCases', 4)]		9.11.3/C-0-3	"""C-0-3] The cryptographic operations needed to implement the Identity Credential System (e.g. the android.security.identity.* APIs) MUST be performed entirely in the trusted application and private key material MUST never leave the isolated execution environment unless specifically required by higher-level APIs (e.g. the createEphemeralKeyPair() method). """	09110300.670003	C-0-3 createEphemeralKeyPair() 9.11.3/C-0-3 android.security.identity 9.11.3				[('C-0-3', 16), ('android.security.identity', 9), ('createEphemeralKeyPair()', 2)]		CtsIdentityTestCases:android.security.identity.cts.ProvisioningTest.testProvisionAndRetrieveMultipleTimes None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBase None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig CtsIdentityTestCases:android.security.identity.cts.EphemeralKeyTest.isHalImplemented CtsSecurityTestCases:android.security.cts.EncryptionTest.aesIsFast CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted CtsIdentityTestCases:android.security.identity.cts.UserAuthTest.isDeviceLocked		[('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 12), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/ProvisioningTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/EphemeralKeyTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/CreateItemsRequestTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/UtilUnitTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/AttestationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/HkdfTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/EncryptionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/IdentityApiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/X509CertificateSigningTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/UserAuthTest.java', 1)]	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 13), ('/android/security/identity/cts/ProvisioningTest.java', 4), ('/android/security/identity/cts/EphemeralKeyTest.java', 4), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/security/identity/cts/CreateItemsRequestTest.java', 2), ('/android/security/identity/cts/UtilUnitTests.java', 2), ('/android/security/identity/cts/AttestationTest.java', 2), ('/android/security/identity/cts/HkdfTest.java', 2), ('/android/security/cts/EncryptionTest.java', 2), ('/android/security/identity/cts/IdentityApiTest.java', 2), ('/android/security/identity/cts/X509CertificateSigningTest.java', 2), ('/android/security/identity/cts/UserAuthTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/security/identity/cts/CreateItemsRequestTest.java]:[android.security.identity]:[1]:method_text:[t java.util.Map;  import co.nstant.in.cbor.CborException;  public class CreateItemsRequestTest {    ])', 1), ('([3:/android/security/identity/cts/ProvisioningTest.java]:[createEphemeralKeyPair()]:[3]:method_text:[;             assertTrue(false);         }          store.deleteCredentialByName(""test"");     }     ])', 1), ('([16:/android/security/identity/cts/ProvisioningTest.java]:[android.security.identity]:[16]:method_text:[tStackTrace();             assertTrue(false);         }          return certificateChain;     }     ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[       getDevice().uninstallPackage(PACKAGE_NAME);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[  .run();         verifyFsverityInstall(BASE_APK);     }      @CddTest(requirement=""9.10/C-0-3"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-0-3]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/identity/cts/UtilUnitTests.java]:[android.security.identity]:[1]:method_text:[del.UnicodeString; import co.nstant.in.cbor.model.UnsignedInteger;  public class UtilUnitTests {    ])', 1), ('([1:/android/security/identity/cts/EphemeralKeyTest.java]:[createEphemeralKeyPair()]:[1]:method_text:[             }             mMdlExpectedCounter += 1;             return plaintext;         }     } }])', 1), ('([4:/android/security/identity/cts/EphemeralKeyTest.java]:[android.security.identity]:[4]:method_text:[code. public class EphemeralKeyTest {     private static final String TAG = ""EphemeralKeyTest"";     ])', 1), ('([3:/android/security/identity/cts/AttestationTest.java]:[android.security.identity]:[3]:method_text:[STATION_APPLICATION_ID = 709;     public static final int KM_TAG_IDENTITY_CREDENTIAL_KEY = 721;     ])', 1), ('([1:/android/security/identity/cts/HkdfTest.java]:[android.security.identity]:[1]:method_text:[yte[] bytes = new byte[numBytes];         sRandom.nextBytes(bytes);         return bytes;     }     ])', 1), ('([1:/android/security/cts/EncryptionTest.java]:[C-0-3]:[1]:method_text:[able     // to instant apps     @AppModeFull     @CddTest(requirement=""9.9.2/C-0-1,C-0-2,C-0-3"")    ])', 1), ('([15:/android/security/identity/cts/IdentityApiTest.java]:[android.security.identity]:[15]:method_text:[quals;  public class IdentityApiTest {     private static final String TAG = ""IdentityApiTest"";     ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-0-3]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-0-3]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-0-3]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1), ('([1:/android/security/identity/cts/X509CertificateSigningTest.java]:[android.security.identity]:[1]:method_text:[09CertificateSigningTest {      private static final String TAG = ""X509CertificateSigningTest"";     ])', 1), ('([11:/android/security/identity/cts/UserAuthTest.java]:[android.security.identity]:[11]:method_text:[) {             throw new RuntimeException(""Error creating auth-bound key"", e);         }     }     ])', 1)]"					
274:790271) 9.16  . Application Data Migration	9.16	C-1-4		[('android.webkit.cts.WebSettingsTest', 21), ('android.app.cts.AlertDialog_BuilderTest', 14), ('android.media.tv.tuner.cts.TunerFilterTest', 12), ('android.app.cts.SystemFeaturesTest', 9), ('dot.junit.opcodes.invoke_direct.Test_invoke_direct', 9), ('android.accessibilityservice.cts.AccessibilityWindowReportingTest', 8), ('android.media.cts.ParamsTest', 7), ('android.os.cts.StrictModeTest', 6), ('android.media.cts.MediaCodecListTest', 5), ('android.content.pm.cts.ApplicationInfoTest', 5), ('android.media.cts.MidiSoloTest', 3), ('android.graphics.cts.BasicVulkanGpuTest', 3), ('android.view.cts.KeyboardShortcutGroupTest', 2), ('dot.junit.opcodes.return_object.Test_return_object', 2), ('android.content.pm.cts.InstantAppTest', 2), ('android.location.cts.gnss.GnssMeasurementWhenNoLocationTest', 2), ('android.sample.cts.SampleHostTest', 2), ('android.renderscript.cts.GetAllocationTest', 2), ('android.mediastress.cts.H263QcifShortPlayerTest', 1), ('android.renderscript.cts.generated.TestNativeSinpi', 1), ('android.telecom.cts.CallTest', 1), ('android.permission.cts.PermissionManagerTest', 1), ('android.systemintents.cts.TestSystemIntents', 1), ('android.os.cts.ParcelFileDescriptor_AutoCloseOutputStreamTest', 1), ('android.graphics.cts.Paint_FontMetricsIntTest', 1), ('android.net.wifi.cts.WifiFrameworkInitializerTest', 1), ('com.android.server.cts.device.statsd.DirectoryTests', 1), ('android.view.cts.ViewGroup_LayoutParamsTest', 1), ('dot.junit.opcodes.float_to_double.Test_float_to_double', 1), ('android.os.cts.EnvironmentHostTests', 1), ('android.telephony.cts.CellSignalStrengthTest', 1), ('android.provider.cts.media.MediaStore_AudioTest', 1), ('android.security.identity.cts.CreateItemsRequestTest', 1), ('android.renderscript.cts.generated.TestFastNormalize', 1), ('android.text.cts.ClipboardManagerTest', 1), ('android.media.cts.ResourceManagerTest', 1), ('android.content.pm.cts.shortcut.backup.publisher1.ShortcutManagerPostBackupTest', 1), ('android.transition.cts.SharedElementCallbackTest', 1)]	[('destroy', 44), ('toString', 37), ('setUp', 19), ('StringBuilder', 12), ('getContext', 11), ('tearDown', 9), ('getInstrumentation', 7), ('getPackageManager', 7), ('getTargetContext', 6), ('ArgumentsFloatFloat', 5), ('ArgumentsHalfHalf', 4), ('updateTitle', 3), ('ArgumentsFloatNFloatN', 3), ('getUiAutomation', 2), ('getSystemAvailableFeatures', 2), ('getCodecInfos', 2), ('setup', 2), ('checkNativeSinpiFloatFloat', 1), ('checkNativeSinpiFloat2Float2', 1), ('checkNativeSinpiFloat3Float3', 1), ('checkNativeSinpiFloat4Float4', 1), ('checkNativeSinpiHalfHalf', 1), ('checkNativeSinpiHalf2Half2', 1), ('checkNativeSinpiHalf3Half3', 1), ('checkNativeSinpiHalf4Half4', 1), ('getNetworkImageHtml', 1), ('canBeFound', 1), ('hasExpandedCodecInfo', 1), ('create', 1), ('getMaxMessageSize', 1), ('onFlush', 1), ('getPackageName', 1), ('verifyOwnInfo', 1), ('verifyDefaultValues', 1), ('myUserHandle', 1), ('getIdentifier', 1), ('AccessibilityDumpOnFailureRule', 1), ('oneTimeSetup', 1), ('getServiceInfo', 1), ('finalTearDown', 1), ('putWindowInPictureInPicture_generatesEventAndReportsProperty', 1), ('enterPictureInPictureMode', 1), ('getEventType', 1), ('getWindows', 1), ('size', 1), ('moveFocusToAnotherWindow_generatesEventsAndMovesActiveAndFocus', 1), ('showTopWindowAndWaitForItToShowUp', 1), ('getRoot', 1), ('getDevice', 1), ('data', 1), ('nextInt', 1), ('getType', 1), ('invoke_start', 1), ('checkFastNormalizeFloatFloat', 1), ('checkFastNormalizeFloat2Float2', 1), ('checkFastNormalizeFloat3Float3', 1), ('checkFastNormalizeFloat4Float4', 1), ('getApplicationContext', 1), ('getThreadPolicy', 1), ('getVmPolicy', 1), ('run', 1), ('getActivity', 1)]	[('CtsAppTestCases', 23), ('CtsWebkitTestCases', 21), ('CtsMediaTestCases', 16), ('CtsTvTestCases', 12), ('CtsAccessibilityServiceTestCases', 8), ('CtsContentTestCases', 7), ('CtsOsHostTestCases', 7), ('CtsRenderscriptTestCases', 4), ('CtsGraphicsTestCases', 4), ('CtsViewTestCases', 3), ('CtsLocationGnssTestCases', 2), ('CtsMediaStressTestCases', 1), ('CtsTelecomTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsSystemIntentTestCases', 1), ('CtsWifiTestCases', 1), ('CtsTelephonyTestCases', 1), ('CtsProviderTestCases', 1), ('CtsIdentityTestCases', 1), ('CtsTextTestCases', 1), ('CtsTransitionTestCases', 1)]		9.16/C-1-4	"""C-1-4] MUST only migrate application data to the same application on the target device, with the same package name AND signing certificate. """	09160000.670104	AND 9.16/C-1-4 C-1-4 9.16				[('AND', 134)]		CtsViewTestCases:android.view.cts.KeyboardShortcutGroupTest.testWriteToParcelAndRead CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.adoptShellPermissionIdentity CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testAvSettings CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testDownloadSettings CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testPesSettings CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testRecordSettings CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testSectionSettingsWithSectionBits CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testSectionSettingsWithTableInfo CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testAlpFilterConfiguration CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testIpFilterConfiguration CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testMmtpFilterConfiguration CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testTlvFilterConfiguration CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testTsFilterConfiguration None:dot.junit.opcodes.return_object.Test_return_object.testN4 None:dot.junit.opcodes.return_object.Test_return_object.testE1 CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.WebSettingsTest CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testUserAgentStringTest CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessUserAgentString CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessAllowFileAccess CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessStandardFontFamily CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessPluginsEnabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAppCacheDisabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAppCacheEnabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testDatabaseDisabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLoadsImagesAutomatically_httpImagesLoaded CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLoadsImagesAutomatically_dataUriImagesLoaded CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLoadsImagesAutomatically_blockLoadingImages CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLoadsImagesAutomatically_loadImagesWithoutReload CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testBlockNetworkImage CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testBlockNetworkLoads CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLocalImageLoads CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testIframesWhenAccessFromFileURLsEnabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testIframesWhenAccessFromFileURLsDisabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testXHRWhenAccessFromFileURLsDisabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAllowMixedMode CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testForceDark_rendersDark CtsMediaTestCases:android.media.cts.ParamsTest.testSyncParamsAudioAdjustMode CtsMediaTestCases:android.media.cts.ParamsTest.testSyncParamsSyncSource CtsMediaTestCases:android.media.cts.ParamsTest.testSyncParamsTolerance CtsMediaTestCases:android.media.cts.ParamsTest.testPlaybackParamsAudioFallbackMode CtsMediaTestCases:android.media.cts.ParamsTest.testPlaybackParamsAudioStretchMode CtsMediaTestCases:android.media.cts.ParamsTest.testPlaybackParamsPitch CtsContentTestCases:android.content.pm.cts.InstantAppTest.testInstantAppInstallerQuery CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFeatureNamespaces CtsAppTestCases:android.app.cts.SystemFeaturesTest.testCameraFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testScreenFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testFakeTouchFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testUsbAccessory CtsAppTestCases:android.app.cts.SystemFeaturesTest.testWifiFeature CtsAppTestCases:android.app.cts.SystemFeaturesTest.testAudioOutputFeature CtsMediaTestCases:android.media.cts.MediaCodecListTest.testMediaCodecXmlFileExist CtsMediaTestCases:android.media.cts.MediaCodecListTest.testRequiredMediaCodecList CtsMediaTestCases:android.media.cts.MediaCodecListTest.testCodecCharacterizations CtsMediaTestCases:android.media.cts.MediaCodecListTest.testVideoPerformancePointsSanity CtsMediaTestCases:android.media.cts.MediaCodecListTest.testAllHardwareAcceleratedVideoCodecsPublishPerformancePoints CtsMediaTestCases:android.media.cts.MidiSoloTest.testMidiManager CtsMediaTestCases:android.media.cts.MidiSoloTest.testMidiReceiverException CtsWifiTestCases:android.net.wifi.cts.WifiFrameworkInitializerTest.registerServiceWrappers CtsContentTestCases:android.content.pm.cts.ApplicationInfoTest.testConstructor CtsContentTestCases:android.content.pm.cts.ApplicationInfoTest.testWriteToParcelDontSquash CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.perDisplayFocusEnabled CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.testUpdatedWindowTitle_generatesEventAndIsReturnedByGetTitle CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.testWindowAddedMovedAndRemoved_generatesEventsForAllThree CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.isInPictureInPictureMode CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.isFocused CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.moveFocusToAnotherDisplay_movesActiveAndFocusWindow CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.testChangeAccessibilityFocusWindow_getEvent CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.testGetAnchorForDropDownForAutoCompleteTextView_returnsTextViewNode None:dot.junit.opcodes.float_to_double.Test_float_to_double.testVFE5 CtsLocationGnssTestCases:android.location.cts.gnss.GnssMeasurementWhenNoLocationTest.testGnssMeasurementWhenNoLocation CtsGraphicsTestCases:android.graphics.cts.BasicVulkanGpuTest.testBasicBufferImportAndRenderingExplicitFormat CtsGraphicsTestCases:android.graphics.cts.BasicVulkanGpuTest.testBasicBufferImportAndRenderingExternalFormat None:android.sample.cts.SampleHostTest.testLogcat CtsMediaTestCases:android.media.cts.ResourceManagerTest.ResourceManagerTest None:dot.junit.opcodes.invoke_direct.Test_invoke_direct.testE3 None:dot.junit.opcodes.invoke_direct.Test_invoke_direct.testE5 None:dot.junit.opcodes.invoke_direct.Test_invoke_direct.testVFE11 None:dot.junit.opcodes.invoke_direct.Test_invoke_direct.testVFE13 None:dot.junit.opcodes.invoke_direct.Test_invoke_direct.testVFE14 None:dot.junit.opcodes.invoke_direct.Test_invoke_direct.testVFE15 None:dot.junit.opcodes.invoke_direct.Test_invoke_direct.testVFE16 None:dot.junit.opcodes.invoke_direct.Test_invoke_direct.testVFE17 None:dot.junit.opcodes.invoke_direct.Test_invoke_direct.testVFE20 CtsOsHostTestCases:android.os.cts.StrictModeTest.testFileUriExposure CtsOsHostTestCases:android.os.cts.StrictModeTest.testContentUriWithoutPermission CtsOsHostTestCases:android.os.cts.StrictModeTest.testViolationAcrossBinder CtsOsHostTestCases:android.os.cts.StrictModeTest.testVmPenaltyListener CtsOsHostTestCases:android.os.cts.StrictModeTest.testIncorrectContextUse_GetViewConfiguration CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testConstructorWithThemeId CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetIconWithParamInt CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetIconWithParamDrawable CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetIconAttribute CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetPositiveButtonWithParamInt CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetPositiveButtonWithParamCharSequence CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetNegativeButtonWithParamCharSequence CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetNegativeButtonWithParamInt CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetNeutralButtonWithParamInt CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetNeutralButtonWithParamCharSequence CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetOnKeyListener CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetSingleChoiceItems CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testShow		[('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 21), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderTest.java', 14), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFilterTest.java', 12), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 9), ('/home/gpoor/cts-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java', 9), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ParamsTest.java', 7), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/StrictModeTest.java', 6), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/ApplicationInfoTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MidiSoloTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/KeyboardShortcutGroupTest.java', 2), ('/home/gpoor/cts-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/return_object/Test_return_object.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/InstantAppTest.java', 2), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/sample/src/android/sample/cts/SampleHostTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/GetAllocationTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/mediastress/src/android/mediastress/cts/H263QcifShortPlayerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeSinpi.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/CallTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/PermissionManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/ParcelFileDescriptor_AutoCloseOutputStreamTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/Paint_FontMetricsIntTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiFrameworkInitializerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/apps/statsdapp/src/com/android/server/cts/device/statsd/DirectoryTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewGroup_LayoutParamsTest.java', 1), ('/home/gpoor/cts-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/float_to_double/Test_float_to_double.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/os/src/android/os/cts/EnvironmentHostTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellSignalStrengthTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_AudioTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/CreateItemsRequestTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestFastNormalize.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/ClipboardManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ResourceManagerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher1/src/android/content/pm/cts/shortcut/backup/publisher1/ShortcutManagerPostBackupTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/transition/src/android/transition/cts/SharedElementCallbackTest.java', 1)]	[('/android/webkit/cts/WebSettingsTest.java', 22), ('/android/app/cts/AlertDialog_BuilderTest.java', 15), ('/android/media/tv/tuner/cts/TunerFilterTest.java', 13), ('/android/app/cts/SystemFeaturesTest.java', 10), ('/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java', 10), ('/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java', 9), ('/android/media/cts/ParamsTest.java', 8), ('/android/os/cts/StrictModeTest.java', 7), ('/android/media/cts/MediaCodecListTest.java', 6), ('/android/content/pm/cts/ApplicationInfoTest.java', 6), ('/android/media/cts/MidiSoloTest.java', 4), ('/android/graphics/cts/BasicVulkanGpuTest.java', 4), ('/android/view/cts/KeyboardShortcutGroupTest.java', 3), ('/dot/junit/opcodes/return_object/Test_return_object.java', 3), ('/android/content/pm/cts/InstantAppTest.java', 3), ('/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java', 3), ('/android/sample/cts/SampleHostTest.java', 3), ('/android/renderscript/cts/GetAllocationTest.java', 3), ('/android/mediastress/cts/H263QcifShortPlayerTest.java', 2), ('/android/renderscript/cts/generated/TestNativeSinpi.java', 2), ('/android/telecom/cts/CallTest.java', 2), ('/android/permission/cts/PermissionManagerTest.java', 2), ('/android/systemintents/cts/TestSystemIntents.java', 2), ('/android/os/cts/ParcelFileDescriptor_AutoCloseOutputStreamTest.java', 2), ('/android/graphics/cts/Paint_FontMetricsIntTest.java', 2), ('/android/net/wifi/cts/WifiFrameworkInitializerTest.java', 2), ('/com/android/server/cts/device/statsd/DirectoryTests.java', 2), ('/android/view/cts/ViewGroup_LayoutParamsTest.java', 2), ('/dot/junit/opcodes/float_to_double/Test_float_to_double.java', 2), ('/android/os/cts/EnvironmentHostTests.java', 2), ('/android/telephony/cts/CellSignalStrengthTest.java', 2), ('/android/provider/cts/media/MediaStore_AudioTest.java', 2), ('/android/security/identity/cts/CreateItemsRequestTest.java', 2), ('/android/renderscript/cts/generated/TestFastNormalize.java', 2), ('/android/text/cts/ClipboardManagerTest.java', 2), ('/android/media/cts/ResourceManagerTest.java', 2), ('/android/content/pm/cts/shortcut/backup/publisher1/ShortcutManagerPostBackupTest.java', 2), ('/android/transition/cts/SharedElementCallbackTest.java', 2)]	"[('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[AND]:[1]:method_text:[ener, times(1)).onDismiss(mDialog);         verifyNoMoreInteractions(mOnDismissListener);     }     ])', 3), ('([1:/android/media/tv/tuner/cts/TunerFilterTest.java]:[AND]:[1]:method_text:[   assertFalse(config.isPassthrough());         assertEquals(null, config.getSettings());     }     ])', 2), ('([1:/android/webkit/cts/WebSettingsTest.java]:[AND]:[1]:method_text:[that javascript cross-domain request permissions matches file domain settings     // for iframes    ])', 2), ('([1:/android/media/cts/ParamsTest.java]:[AND]:[1]:method_text:[y { fail(""got "" + p.getFrameRate());       } catch (IllegalStateException e) {}         }     }     ])', 2), ('([1:/android/media/cts/ParamsTest.java]:[AND]:[1]:method_text:[{ fail(""got "" + p.getSpeed());             } catch (IllegalStateException e) {}         }     }     ])', 2), ('([2:/android/app/cts/AlertDialog_BuilderTest.java]:[AND]:[2]:method_text:[ = mBuilder.show();             }         });         mInstrumentation.waitForIdleSync();     }     ])', 2), ('([3:/android/app/cts/AlertDialog_BuilderTest.java]:[AND]:[3]:method_text:[ener, times(1)).onDismiss(mDialog);         verifyNoMoreInteractions(mOnDismissListener);     }     ])', 2), ('([10:/android/view/cts/KeyboardShortcutGroupTest.java]:[AND]:[10]:method_text:[boardShortcutInfo(                 ""Item 2"", KeyEvent.KEYCODE_F, KeyEvent.META_CTRL_ON));     }     ])', 1), ('([1:/android/view/cts/KeyboardShortcutGroupTest.java]:[AND]:[1]:method_text:[ers(), result.getItems().get(1).getModifiers());         assertTrue(result.isSystemGroup());     } }])', 1), ('([20:/android/media/tv/tuner/cts/TunerFilterTest.java]:[AND]:[20]:method_text:[       if (mTuner != null) {           mTuner.close();           mTuner = null;         }     }     ])', 1), ('([1:/android/media/tv/tuner/cts/TunerFilterTest.java]:[AND]:[1]:method_text:[(false)                         .build();          assertFalse(settings.isPassthrough());     }     ])', 1), ('([1:/android/media/tv/tuner/cts/TunerFilterTest.java]:[AND]:[1]:method_text:[(2)                         .build();          assertEquals(2, settings.getDownloadId());     }     ])', 1), ('([1:/android/media/tv/tuner/cts/TunerFilterTest.java]:[AND]:[1]:method_text:[;          assertEquals(2, settings.getStreamId());         assertTrue(settings.isRaw());     }     ])', 1), ('([1:/android/media/tv/tuner/cts/TunerFilterTest.java]:[AND]:[1]:method_text:[ype());         assertEquals(RecordSettings.SC_INDEX_I_FRAME, settings.getScIndexMask());     }     ])', 1), ('([1:/android/media/tv/tuner/cts/TunerFilterTest.java]:[AND]:[1]:method_text:[etMask());         Assert.assertArrayEquals(new byte[] {22, 55, 33}, settings.getMode());     }     ])', 1), ('([1:/android/media/tv/tuner/cts/TunerFilterTest.java]:[AND]:[1]:method_text:[nabled());         assertTrue(settings.isRepeat());         assertTrue(settings.isRaw());     }     ])', 1), ('([1:/android/media/tv/tuner/cts/TunerFilterTest.java]:[AND]:[1]:method_text:[TIONAL_HEADER, config.getLengthType());         assertEquals(null, config.getSettings());     }     ])', 1), ('([1:/android/media/tv/tuner/cts/TunerFilterTest.java]:[AND]:[1]:method_text:[ertEquals(3, config.getMmtpPacketId());         assertEquals(null, config.getSettings());     }     ])', 1), ('([2:/android/media/tv/tuner/cts/TunerFilterTest.java]:[AND]:[2]:method_text:[{         return mContext.getPackageManager().hasSystemFeature(""android.hardware.tv.tuner"");     } }])', 1), ('([1:/android/mediastress/cts/H263QcifShortPlayerTest.java]:[AND]:[1]:method_text:[      ""bbb_short.ffmpeg.176x144.3gp.h263_56kbps_25fps.libfaac_stereo_24kbps_22050Hz.3gp""     };     ])', 1), ('([13:/android/renderscript/cts/generated/TestNativeSinpi.java]:[AND]:[13]:method_text:[ +                 (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);     }     ])', 1), ('([7:/android/telecom/cts/CallTest.java]:[AND]:[7]:method_text:[est.AndroidTestCase;  import java.util.Arrays;  public class CallTest extends AndroidTestCase {     ])', 1), ('([1:/dot/junit/opcodes/return_object/Test_return_object.java]:[AND]:[1]:method_text:[    }      /**      * @title check that frames are discarded and reinstananted correctly      */    ])', 1), (""([1:/dot/junit/opcodes/return_object/Test_return_object.java]:[AND]:[1]:method_text:[lass);     }       /**      * @constraint B11       * @title method's return type - void      */    ])"", 1), ('([33:/android/webkit/cts/WebSettingsTest.java]:[AND]:[33]:method_text:[>.<minor>      * Chrome/<major>.<minor>.<branch>.<build>[ Mobile] Safari/<major>.<minor>      */    ])', 1), ('([12:/android/webkit/cts/WebSettingsTest.java]:[AND]:[12]:method_text:[l:\\n%s"", patternString, useragent),                     patternMatcher.find());         }     }     ])', 1), ('([4:/android/webkit/cts/WebSettingsTest.java]:[AND]:[4]:method_text:[AndWaitForCompletion(url);         assertEquals(customUserAgent, mOnUiThread.getTitle());     }     ])', 1), ('([4:/android/webkit/cts/WebSettingsTest.java]:[AND]:[4]:method_text:[with file access disabled"",                 dataDirTitle.equals(mOnUiThread.getTitle()));     }     ])', 1), ('([7:/android/webkit/cts/WebSettingsTest.java]:[AND]:[7]:method_text:[ndardFamily);         assertEquals(newStandardFamily, mSettings.getStandardFontFamily());     }     ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[AND]:[1]:method_text:[   * should be reflected in that test as necessary. See http://go/modifying-webview-cts.      */    ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[AND]:[1]:method_text:[ccur.         Thread.sleep(1000);         assertEquals(""Loaded"", mOnUiThread.getTitle());     }     ])', 1), ('([5:/android/webkit/cts/WebSettingsTest.java]:[AND]:[5]:method_text:[res creating a     // webChromeClient and listening to Quota callbacks, which is not documented.    ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[AND]:[2]:method_text:[test should be reflected in that test as necessary. See http://go/modifying-webview-cts.      */    ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[AND]:[1]:method_text:[, ""text/html"", null);         assertEquals(NETWORK_IMAGE_HEIGHT, mOnUiThread.getTitle());     }     ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[AND]:[1]:method_text:[ ""text/html"", null);         assertEquals(DATA_URL_IMAGE_HEIGHT, mOnUiThread.getTitle());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[AND]:[2]:method_text:[ML, ""text/html"", null);         assertEquals(EMPTY_IMAGE_HEIGHT, mOnUiThread.getTitle());     }     ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[AND]:[2]:method_text:[tForNonEmptyImage();         assertEquals(DATA_URL_IMAGE_HEIGHT, mOnUiThread.getTitle());     }     ])', 1), ('([5:/android/webkit/cts/WebSettingsTest.java]:[AND]:[5]:method_text:[ ""text/html"", null);         assertEquals(DATA_URL_IMAGE_HEIGHT, mOnUiThread.getTitle());     }     ])', 1), ('([10:/android/webkit/cts/WebSettingsTest.java]:[AND]:[10]:method_text:[d.getTitle());     }      // Verify that an image in local file system can be loaded by an asset    ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[AND]:[1]:method_text:[     // Verify that enabling file access from file URLs enable XmlHttpRequest (XHR) across files    ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[AND]:[1]:method_text:[ename, Context.MODE_PRIVATE);         fos.write(content.getBytes());         fos.close();     }     ])', 1), ('([8:/android/webkit/cts/WebSettingsTest.java]:[AND]:[8]:method_text:[   * should be reflected in that test as necessary. See http://go/modifying-webview-cts.      */    ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[AND]:[3]:method_text:[e assertions.             WebkitUtils.waitForNextQueueElement(mReceivedIconQueue);         }     } }])', 1), ('([10:/android/permission/cts/PermissionManagerTest.java]:[AND]:[10]:method_text:[nManagerTest {     private final Context mContext = InstrumentationRegistry.getTargetContext();     ])', 1), ('([10:/android/media/cts/ParamsTest.java]:[AND]:[10]:method_text:[float FLOAT_TOLERANCE = .00001f;     private static final float MAX_DEFAULT_TOLERANCE = 1/24.f;     ])', 1), ('([1:/android/media/cts/ParamsTest.java]:[AND]:[1]:method_text:[equent iterations             p = new SyncParams();             update = false;         }     }     ])', 1), ('([1:/android/media/cts/ParamsTest.java]:[AND]:[1]:method_text:[nt iterations             p = new PlaybackParams();             update = false;         }     }     ])', 1), ('([14:/android/content/pm/cts/InstantAppTest.java]:[AND]:[14]:method_text:[anager = getContext().getPackageManager();     }      /** Ensure only one resolver is defined */    ])', 1), ('([1:/android/content/pm/cts/InstantAppTest.java]:[AND]:[1]:method_text:[ctivities(intent, resolveFlags);         assertTrue(matches == null || matches.size() <= 1);     } }])', 1), ('([36:/android/app/cts/SystemFeaturesTest.java]:[AND]:[36]:method_text:[properly prefixed with ""android."" that are not defined in      * {@link PackageManager}.      */    ])', 1), ('([3:/android/app/cts/SystemFeaturesTest.java]:[AND]:[3]:method_text:[Name,                         featureName.startsWith(""android""));             }         }     }     ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[AND]:[1]:method_text:[          if (camera != null) {                 camera.release();             }         }     }     ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[AND]:[1]:method_text:[ the sensors      * returned by {@link SensorManager#getSensorList(int)}.      */     @FlakyTest    ])', 1), ('([3:/android/app/cts/SystemFeaturesTest.java]:[AND]:[3]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([8:/android/app/cts/SystemFeaturesTest.java]:[AND]:[8]:method_text:[UCH_JAZZHAND)) {             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[AND]:[2]:method_text:[e negatives.             assertAvailable(PackageManager.FEATURE_USB_ACCESSORY);         }     }     ])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[AND]:[2]:method_text:[    SystemUtil.runShellCommand(""svc wifi "" + (enabled ? ""enable"" : ""disable""));         }     }     ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[AND]:[1]:method_text:[ssertAvailable(feature);         } else {             assertNotAvailable(feature);         }     } }])', 1), ('([23:/android/media/cts/MediaCodecListTest.java]:[AND]:[23]:method_text:[.getCodecInfo(), info);              codec.release();             codec = null;         }     }     ])', 1), ('([13:/android/media/cts/MediaCodecListTest.java]:[AND]:[13]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder             }         }          return list;     }     ])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[AND]:[1]:method_text:[            assertFalse(info.isHardwareAccelerated() && info.isSoftwareOnly());         }     }     ])', 1), ('([21:/android/media/cts/MediaCodecListTest.java]:[AND]:[21]:method_text:[                  pp2 != pp && pp2.covers(pp));                 }             }         }     }     ])', 1), ('([8:/android/media/cts/MediaCodecListTest.java]:[AND]:[8]:method_text:[ntial performance point data"",                     describedTypes.contains(type));         }     } }])', 1), ('([16:/android/systemintents/cts/TestSystemIntents.java]:[AND]:[16]:method_text:[etInstrumentation().getContext();         mPackageManager = mContext.getPackageManager();     }     ])', 1), ('([6:/android/os/cts/ParcelFileDescriptor_AutoCloseOutputStreamTest.java]:[AND]:[6]:method_text:[TestCase;  public class ParcelFileDescriptor_AutoCloseOutputStreamTest extends AndroidTestCase {    ])', 1), ('([7:/android/graphics/cts/Paint_FontMetricsIntTest.java]:[AND]:[7]:method_text:[unner.RunWith;  @SmallTest @RunWith(AndroidJUnit4.class) public class Paint_FontMetricsIntTest {    ])', 1), ('([19:/android/media/cts/MidiSoloTest.java]:[AND]:[19]:method_text:[id tearDown() throws Exception {         // Test case clean up.         super.tearDown();     }     ])', 1), ('([2:/android/media/cts/MidiSoloTest.java]:[AND]:[2]:method_text:[registerDeviceCallback(callback);         midiManager.unregisterDeviceCallback(callback);     }     ])', 1), ('([1:/android/media/cts/MidiSoloTest.java]:[AND]:[1]:method_text:[ "" + i + "" + "" + offset,                     bar[i + offset], myReceiver.data[i]);         }     } }])', 1), ('([4:/android/net/wifi/cts/WifiFrameworkInitializerTest.java]:[AND]:[4]:method_text:[ first initialized. Calling this API at      * any other time should throw an exception.      */    ])', 1), ('([1:/com/android/server/cts/device/statsd/DirectoryTests.java]:[AND]:[1]:method_text:[t.Assert.assertFalse; import static org.junit.Assert.assertTrue;  public class DirectoryTests {     ])', 1), ('([23:/android/content/pm/cts/ApplicationInfoTest.java]:[AND]:[23]:method_text:[ntext() {         return InstrumentationRegistry.getInstrumentation().getTargetContext();     }     ])', 1), ('([1:/android/content/pm/cts/ApplicationInfoTest.java]:[AND]:[1]:method_text:[py = new ApplicationInfo(info);         assertEquals(info.packageName, copy.packageName);     }     ])', 1), ('([2:/android/content/pm/cts/ApplicationInfoTest.java]:[AND]:[2]:method_text:[o.flags & flags);         assertEquals(CATEGORY_PRODUCTIVITY, mApplicationInfo.category);     }     ])', 1), ('([3:/android/content/pm/cts/ApplicationInfoTest.java]:[AND]:[3]:method_text:[tionInfo.uiOptions);         assertEquals(CATEGORY_UNDEFINED, mApplicationInfo.category);     }     ])', 1), ('([1:/android/content/pm/cts/ApplicationInfoTest.java]:[AND]:[1]:method_text:[als(mApplicationInfo.flags, copy2.flags);         assertEquals(copy1.flags, copy2.flags);     }     ])', 1), ('([54:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[AND]:[54]:method_text:[getResources()                 .getBoolean(android.R.bool.config_perDisplayFocusEnabled);     }     ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[AND]:[2]:method_text:[(""Updated window title not reported to accessibility"", window);         window.recycle();     }     ])', 1), ('([4:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[AND]:[4]:method_text:[hangedWithChangeTypes(WINDOWS_CHANGE_REMOVED),                 TIMEOUT_ASYNC_PROCESSING);     }     ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[AND]:[2]:method_text:[reWindows++;             }         }         assertTrue(numPictureInPictureWindows >= 1);     }     ])', 1), ('([7:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[AND]:[7]:method_text:[NDOWS_CHANGE_FOCUSED | WINDOWS_CHANGE_ACTIVE),                 TIMEOUT_ASYNC_PROCESSING);     }     ])', 1), ('([7:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[AND]:[7]:method_text:[   assertTrue(activityWindow.isActive());         assertTrue(activityWindow.isFocused());     }     ])', 1), ('([3:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[AND]:[3]:method_text:[REQUEST_TOUCH_EXPLORATION_MODE;             sUiAutomation.setServiceInfo(info);         }     }     ])', 1), ('([6:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[AND]:[6]:method_text:[ = mActivity.getWindow().getDecorView().getWindowToken();         });         return params;     } }])', 1), ('([12:/android/view/cts/ViewGroup_LayoutParamsTest.java]:[AND]:[12]:method_text:[     public void setup() {         mContext = InstrumentationRegistry.getTargetContext();     }     ])', 1), ('([1:/dot/junit/opcodes/float_to_double/Test_float_to_double.java]:[AND]:[1]:method_text:[ent - int. The verifier checks that ints      * and floats are not used interchangeably.      */    ])', 1), ('([22:/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java]:[AND]:[22]:method_text:[ocation fix.      */     @AppModeFull(reason = ""Requires use of extra LocationManager commands"")    ])', 1), ('([9:/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java]:[AND]:[9]:method_text:[ {                 TestUtils.setAirplaneModeOn(getContext(), false);             }         }     } }])', 1), ('([11:/android/os/cts/EnvironmentHostTests.java]:[AND]:[11]:method_text:[et --uid android.cts.environment ""                 + appOp + (val ? "" allow"" : "" deny""));     }     ])', 1), ('([5:/android/graphics/cts/BasicVulkanGpuTest.java]:[AND]:[5]:method_text:[rmat;      public BasicVulkanGpuTest(String name, int format) {         mFormat = format;     }     ])', 1), ('([1:/android/graphics/cts/BasicVulkanGpuTest.java]:[AND]:[1]:method_text:[erifyBasicBufferImport(InstrumentationRegistry.getContext().getAssets(), mFormat, false);     }     ])', 1), ('([1:/android/graphics/cts/BasicVulkanGpuTest.java]:[AND]:[1]:method_text:[er, int format,                                                        boolean useExternalFormat); }])', 1), ('([12:/android/sample/cts/SampleHostTest.java]:[AND]:[12]:method_text:[ing was successfully logged to Logcat from the activity.      *      * @throws Exception      */    ])', 1), ('([7:/android/sample/cts/SampleHostTest.java]:[AND]:[7]:method_text:[hes the test string.         assertEquals(""Incorrect test string"", TEST_STRING, testString);     } }])', 1), ('([5:/android/renderscript/cts/GetAllocationTest.java]:[AND]:[5]:method_text:[timeException; import java.util.Random;  public class GetAllocationTest extends RSBaseCompute {     ])', 1), ('([4:/android/renderscript/cts/GetAllocationTest.java]:[AND]:[4]:method_text:[ out[i]);         }          mTemp.destroy();         mOut.destroy();         ms.destroy();     }  }])', 1), ('([7:/android/telephony/cts/CellSignalStrengthTest.java]:[AND]:[7]:method_text:[5 as required by      * {@link SignalStrength#getLevel)} which returns value between 0 and 4. */    ])', 1), ('([5:/android/provider/cts/media/MediaStore_AudioTest.java]:[AND]:[5]:method_text:[ public void setUp() throws Exception {         mKeyForBeatles = Audio.keyFor(""beatles"");     }     ])', 1), ('([1:/android/security/identity/cts/CreateItemsRequestTest.java]:[AND]:[1]:method_text:[t java.util.Map;  import co.nstant.in.cbor.CborException;  public class CreateItemsRequestTest {    ])', 1), ('([9:/android/renderscript/cts/generated/TestFastNormalize.java]:[AND]:[9]:method_text:[ +                 (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);     }     ])', 1), ('([12:/android/text/cts/ClipboardManagerTest.java]:[AND]:[12]:method_text:[nstrumentationRegistry.getInstrumentation());         launchActivity(MockActivity.class);     }     ])', 1), ('([9:/android/media/cts/ResourceManagerTest.java]:[AND]:[9]:method_text:[, extras);         activity.testReclaimResource(type1, type2);         activity.finish();     }     ])', 1), (""([1:/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java]:[AND]:[1]:method_text:[ NullPointerException.class);     }      /**      * @title Native method can't be linked      */    ])"", 1), ('([1:/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java]:[AND]:[1]:method_text:[.class);     }      /**      * @constraint A13      * @title invalid constant pool index      */    ])', 1), ('([1:/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java]:[AND]:[1]:method_text:[ngeError.class);     }      /**      * @constraint A23      * @title number of registers      */    ])', 1), ('([1:/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java]:[AND]:[1]:method_text:[ss);     }      /**      * @constraint n/a      * @title Method has different signature.      */    ])', 1), ('([1:/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java]:[AND]:[1]:method_text:[tibleClassChangeError      * on first access. Dalvik threw VerifyError on class loading.      */    ])', 1), ('([1:/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java]:[AND]:[1]:method_text:[/**      * @constraint n/a      * @title Attempt to invoke private method of superclass.      */    ])', 1), ('([1:/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java]:[AND]:[1]:method_text:[;     }       /**      * @constraint n/a      * @title Attempt to invoke abstract method      */    ])', 1), ('([1:/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java]:[AND]:[1]:method_text:[     * @title An instance initializer must only be invoked on an uninitialized instance.      */    ])', 1), ('([1:/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java]:[AND]:[1]:method_text:[ B6      * @title instance methods may only be invoked on already initialized instances.      */    ])', 1), ('([3:/android/content/pm/cts/shortcut/backup/publisher1/ShortcutManagerPostBackupTest.java]:[AND]:[3]:method_text:[iceTestBase;  public class ShortcutManagerPostBackupTest extends ShortcutManagerDeviceTestBase {    ])', 1), ('([62:/android/os/cts/StrictModeTest.java]:[AND]:[62]:method_text:[icy);     }      public interface ThrowingRunnable {         void run() throws Exception;     }     ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[AND]:[2]:method_text:[image/jpeg"");                     getContext().startActivity(intent);                 });     }     ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[AND]:[2]:method_text:[                 getContext().startActivity(intent);                 });     }      @AppModeFull    ])', 1), ('([3:/android/os/cts/StrictModeTest.java]:[AND]:[3]:method_text:[(info.getStackTrace()).contains(""checkNonSdkApiUsageViolation"");             }         );     }     ])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[AND]:[1]:method_text:[t.SECONDS);         assertTrue(v instanceof FileUriExposedViolation);     }      @AppModeInstant    ])', 1), ('([3:/android/os/cts/StrictModeTest.java]:[AND]:[3]:method_text:[nager.FEATURE_WIFI)                 || pm.hasSystemFeature(PackageManager.FEATURE_ETHERNET);     } }])', 1), ('([17:/android/transition/cts/SharedElementCallbackTest.java]:[AND]:[17]:method_text:[ SharedElementCallbackTest {     private static class Callback extends SharedElementCallback {}     ])', 1), ('([30:/android/app/cts/AlertDialog_BuilderTest.java]:[AND]:[30]:method_text:[y();         mContext = activity;         PollingCheck.waitFor(activity::hasWindowFocus);     }     ])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[AND]:[1]:method_text:[= themedContext.obtainStyledAttributes(attrs);         assertEquals(20, ta.getInt(0, 0));     }     ])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[AND]:[1]:method_text:[ = mBuilder.show();             }         });         mInstrumentation.waitForIdleSync();     }     ])', 1), ('([2:/android/app/cts/AlertDialog_BuilderTest.java]:[AND]:[2]:method_text:[wing                     return showing;                 }             }         }.run();     }     ])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[AND]:[1]:method_text:[     assertEquals(KeyEvent.ACTION_UP, keyEvent1Captor.getAllValues().get(1).getAction());     }     ])', 1), ('([2:/android/app/cts/AlertDialog_BuilderTest.java]:[AND]:[2]:method_text:[tener, times(1)).onClick(mDialog, 0);         verifyNoMoreInteractions(mOnClickListener);     }     ])', 1), ('([6:/android/app/cts/AlertDialog_BuilderTest.java]:[AND]:[6]:method_text:[nregisterDataSetObserver(             android.database.DataSetObserver observer) {         }     } }])', 1)]"					
274:790271) 9.16  . Application Data Migration	9.16	C-1-2		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 1), ('android.graphics.cts.PaintTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1)]	[('setUp', 2), ('getHeight', 1), ('getWidth', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsCameraTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsSensorTestCases', 1)]		9.16/C-1-2	"""C-1-2] MUST securely confirm the primary authentication on the source device and confirm with the user intent to copy the data on the source device before any data is transferred. """	09160000.670102	C-1-2 9.16/C-1-2 9.16				[('C-1-2', 9)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest.testGetShortcutIcon CtsGraphicsTestCases:android.graphics.cts.PaintTest.testGetTextPathStringCountTooHigh CtsSensorTestCases:android.hardware.cts.SensorParameterRangeTest.testPressureRange None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported		[('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1)]	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/android/graphics/cts/PaintTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-2]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-2]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-2]:[1]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[C-1-2]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));     }     @CddTest(requirement=""3.8.1/C-1-2"")    ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[C-1-2]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());     }      @CddTest(requirement=""3.8.13/C-1-2"")    ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[C-1-2]:[1]:method_text:[Frequency),                     actualMinFrequency <=  hifiMinFrequency + 0.1);         }     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-2]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1)]"					
274:790271) 9.16  . Application Data Migration	9.16	C-1-1		[('android.appsecurity.cts.ApkVerityInstallTest', 10), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.vr.cts.VrDisplayTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.vr.cts.VrCpuTest', 1), ('android.text.cts.FontCoverageTest', 1), ('android.media.cts.AudioRecord_BufferSizeTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.content.cts.AvailableIntentsTest', 1), ('android.media.cts.HeifWriterTest', 1), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1)]	[('setUp', 3), ('getSimpleName', 2), ('HashMap', 1), ('Builder', 1), ('build', 1), ('toLanguageTag', 1), ('getDevice', 1), ('getLaunchApiLevel', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsVrTestCases', 3), ('CtsSecurityTestCases', 3), ('CtsMediaTestCases', 2), ('CtsCameraTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsTextTestCases', 1), ('CtsContentTestCases', 1), ('CtsGraphicsTestCases', 1)]		9.16/C-1-1	"""C-1-1] MUST NOT initiate transfers of application data from devices on which the user has not set a primary authentication as described in 9.11.1 Secure Lock Screen and Authentication. """	09160000.670101	C-1-1 9.16/C-1-1 9.16				[('C-1-1', 30)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsVrTestCases:android.vr.cts.VrCpuTest.VrCpuTest None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testLegacyCameraDeviceParity CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsContentTestCases:android.content.cts.AvailableIntentsTest.testPowerUsageSummarySettings CtsMediaTestCases:android.media.cts.HeifWriterTest.testInputBitmap_Grid_Handler CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsVrTestCases:android.vr.cts.VrDisplayTest.VrDisplayTest CtsVrTestCases:android.vr.cts.VrDisplayTest.testRefreshRateIsAtLeast60Hz None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported		[('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 10), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/vr/src/android/vr/cts/VrDisplayTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/vr/src/android/vr/cts/VrCpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioRecord_BufferSizeTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1)]	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 11), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/vr/cts/VrDisplayTest.java', 3), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/vr/cts/VrCpuTest.java', 2), ('/android/text/cts/FontCoverageTest.java', 2), ('/android/media/cts/AudioRecord_BufferSizeTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/content/cts/AvailableIntentsTest.java', 2), ('/android/media/cts/HeifWriterTest.java', 2), ('/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-1]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/vr/cts/VrCpuTest.java]:[C-1-1]:[1]:method_text:[ic VrCpuTest() {         super(CtsActivity.class);     }     @CddTest(requirement=""7.9.2/C-1-1"")    ])', 1), ('([1:/android/text/cts/FontCoverageTest.java]:[C-1-1]:[1]:method_text:[      }          // Unknown locale. Return an empty set.         return UnicodeSet.EMPTY;     }     ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/media/cts/AudioRecord_BufferSizeTest.java]:[C-1-1]:[1]:method_text:[   48000,     };      private AudioRecord mAudioRecord;      @CddTest(requirement=""5.4.1/C-1-1"")    ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-1]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-1]:[1]:method_text:[ck camera orientation against device orientation      */     @CddTest(requirement=""7.5.5/C-1-1"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[C-1-1]:[1]:method_text:[ntent.ACTION_POWER_USAGE_SUMMARY));         }     }      @CddTest(requirement = ""7.4.2.6/C-1-1"")    ])', 1), ('([1:/android/media/cts/HeifWriterTest.java]:[C-1-1]:[1]:method_text:[ediaFormat#MIMETYPE_IMAGE_ANDROID_HEIC} encoder.      */     @CddTest(requirement=""5.1.4/C-1-1"")    ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[C-1-1]:[1]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ Tests that the refresh rate is at least 60Hz.      */      @CddTest(requirement=""7.9.2/C-1-15"")    ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ that the display resolution is at least 1080p.      */     @CddTest(requirement=""7.9.2/C-1-14"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);     }      @CddTest(requirement=""4/C-1-1"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-1-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1)]"					
274:790271) 9.16  . Application Data Migration	9.16	C-1-5		[('android.security.cts.MetadataEncryptionTest', 2), ('android.opengl.cts.OpenGlEsVersionTest', 2), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.graphics.cts.VulkanFeaturesTest', 2)]		[('CtsOpenGLTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsGraphicsTestCases', 2)]		9.16/C-1-5	"""C-1-5] MUST show an indication that the source device has had data migrated by a device-to-device data migration in the settings menu. A user SHOULD NOT be able to remove this indication. <h2 id="""	09160000.670105	C-1-5 9.16/C-1-5 9.16				[('C-1-5', 8)]		CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredGLESVersion CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactDelete_setsDeleteFlag CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkan1_1Requirements CtsGraphicsTestCases:android.graphics.cts.VulkanFeaturesTest.testVulkan1_1Requirements CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredGLESVersion CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactDelete_setsDeleteFlag		[('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/MetadataEncryptionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 2)]	[('/android/security/cts/MetadataEncryptionTest.java', 4), ('/android/opengl/cts/OpenGlEsVersionTest.java', 4), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 4), ('/android/graphics/cts/VulkanFeaturesTest.java', 4)]	"[('([1:/android/security/cts/MetadataEncryptionTest.java]:[C-1-5]:[1]:method_text:[ryption/metadata      *      * @throws Exception      */     @CddTest(requirement=""9.9.3/C-1-5"")    ])', 2), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-1-5]:[1]:method_text:[        2 == getMinorVersion(reportedVersion));     }      @CddTest(requirement=""7.1.4.5/C-1-5"")    ])', 2), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-5]:[1]:method_text:[d deleted.         assertEquals(""1"", result[1]);     }      @CddTest(requirement = ""3.18/C-1-5"")    ])', 2), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-1-5]:[1]:method_text:[Features"", 0x3 /* importable + exportable */));     }      @CddTest(requirement = ""7.9.2/C-1-5"")    ])', 2)]"					
274:790271) 9.16  . Application Data Migration	9.16	C-1-3		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.webkit.cts.WebSettingsTest', 1), ('android.telecom.cts.BasicInCallServiceTest', 1)]	[('getInstrumentation', 4), ('setUp', 2), ('tearDown', 2), ('getContext', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsWebkitTestCases', 1), ('CtsTelecomTestCases', 1)]		9.16/C-1-3	"""C-1-3] MUST use security key attestation to ensure that both the source device and the target device in the device-to-device migration are legitimate Android devices and have a locked bootloader. """	09160000.670103	C-1-3 9.16/C-1-3 9.16				[('C-1-3', 4)]		CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testUserAgentStringTest CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount		[('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/BasicInCallServiceTest.java', 1)]	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/webkit/cts/WebSettingsTest.java', 2), ('/android/telecom/cts/BasicInCallServiceTest.java', 2)]	"[('([1:/android/webkit/cts/WebSettingsTest.java]:[C-1-3]:[1]:method_text:[l:\\n%s"", patternString, useragent),                     patternMatcher.find());         }     }     ])', 1), ('([1:/android/telecom/cts/BasicInCallServiceTest.java]:[C-1-3]:[1]:method_text:[tDialer);         }         super.tearDown();     }      @CddTest(requirement = ""7.4.1.2/C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1)]"					
243:715824) 9.5  . Multi	9.5	C-1-3		[('android.uirendering.cts.testclasses.ExactCanvasTests', 2), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.graphics.cts.RectFTest', 2), ('android.webkit.cts.WebSettingsTest', 1), ('android.graphics.drawable.cts.AdaptiveIconMaskTest', 1), ('android.telecom.cts.BasicInCallServiceTest', 1), ('android.location.cts.fine.GnssAntennaInfoTest', 1), ('android.host.multiuser.CreateUsersPermissionTest', 1), ('android.content.cts.IntentTest', 1), ('android.host.multiuser.SecondaryUsersTest', 1), ('android.media.cts.DynamicsProcessingTest', 1)]	[('getInstrumentation', 4), ('setUp', 2), ('tearDown', 2), ('getContext', 1)]	[('CtsGraphicsTestCases', 3), ('CtsUiRenderingTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsWebkitTestCases', 1), ('CtsTelecomTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsContentTestCases', 1), ('CtsMediaTestCases', 1)]		9.5/C-1-3	"""C-1-3] MUST have separate and isolated shared application storage (a.k.a. /sdcard) directories for each user instance. """	09050000.670103	9.5/C-1-3 C-1-3 9.5				[('9.5', 10), ('C-1-3', 4)]		CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testUserAgentStringTest CtsGraphicsTestCases:android.graphics.drawable.cts.AdaptiveIconMaskTest.testDeviceConfig_iconMask_useRoundIcon CtsUiRenderingTestCases:android.uirendering.cts.testclasses.ExactCanvasTests.testSaveLayerRounding CtsUiRenderingTestCases:android.uirendering.cts.testclasses.ExactCanvasTests.testUnclippedSaveLayerRounding CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsGraphicsTestCases:android.graphics.cts.RectFTest.testHeight CtsGraphicsTestCases:android.graphics.cts.RectFTest.testWidth None:android.host.multiuser.CreateUsersPermissionTest.testCantSetUserRestriction CtsContentTestCases:android.content.cts.IntentTest.testUris		[('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/RectFTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/AdaptiveIconMaskTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/BasicInCallServiceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/GnssAntennaInfoTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/multiuser/src/android/host/multiuser/CreateUsersPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/IntentTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/multiuser/src/android/host/multiuser/SecondaryUsersTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DynamicsProcessingTest.java', 1)]	[('/android/uirendering/cts/testclasses/ExactCanvasTests.java', 3), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/graphics/cts/RectFTest.java', 3), ('/android/webkit/cts/WebSettingsTest.java', 2), ('/android/graphics/drawable/cts/AdaptiveIconMaskTest.java', 2), ('/android/telecom/cts/BasicInCallServiceTest.java', 2), ('/android/location/cts/fine/GnssAntennaInfoTest.java', 2), ('/android/host/multiuser/CreateUsersPermissionTest.java', 2), ('/android/content/cts/IntentTest.java', 2), ('/android/host/multiuser/SecondaryUsersTest.java', 2), ('/android/media/cts/DynamicsProcessingTest.java', 2)]	"[('([2:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[9.5]:[2]:method_text:[ectVerifier(Color.WHITE, Color.BLACK,                         new Rect(20, 20, 70, 70)));     }     ])', 2), ('([1:/android/webkit/cts/WebSettingsTest.java]:[C-1-3]:[1]:method_text:[l:\\n%s"", patternString, useragent),                     patternMatcher.find());         }     }     ])', 1), ('([1:/android/graphics/drawable/cts/AdaptiveIconMaskTest.java]:[9.5]:[1]:method_text:[askPath.isEmpty();         return fullyEnclosedByLargerCircle && fullyEnclosesSmallerCircle;     } }])', 1), ('([1:/android/telecom/cts/BasicInCallServiceTest.java]:[C-1-3]:[1]:method_text:[tDialer);         }         super.tearDown();     }      @CddTest(requirement = ""7.4.1.2/C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/graphics/cts/RectFTest.java]:[9.5]:[1]:method_text:[ new RectF(1.0f, 1.0f, 20.5f, 20.5f);         assertEquals(19.5f, mRectF.height(), 0.0f);     }     ])', 1), ('([1:/android/graphics/cts/RectFTest.java]:[9.5]:[1]:method_text:[= new RectF(1.0f, 1.0f, 20.5f, 20.5f);         assertEquals(19.5f, mRectF.width(), 0.0f);     }     ])', 1), ('([1:/android/location/cts/fine/GnssAntennaInfoTest.java]:[9.5]:[1]:method_text:[ {2.13, 4.30, 1.36, 3.86, 1.02, 2.96},             {3.22, 3.95, 3.75, 1.73, 1.91, 4.93}      };     ])', 1), ('([1:/android/host/multiuser/CreateUsersPermissionTest.java]:[9.5]:[1]:method_text:[     + ""command output: "" + output, isErrorOutput);     }      @CddTest(requirement=""9.5/A-1-3"")    ])', 1), ('([2:/android/content/cts/IntentTest.java]:[9.5]:[2]:method_text:[ent + "" to android-app: uri"",                     androidAppSchemeUri, genUri);         }     }     ])', 1), ('([1:/android/host/multiuser/SecondaryUsersTest.java]:[9.5]:[1]:method_text:[0;      private static final long POLL_INTERVAL_MS = 100;      @CddTest(requirement=""9.5/A-1-2"")    ])', 1), ('([1:/android/media/cts/DynamicsProcessingTest.java]:[9.5]:[1]:method_text:[r and release     @AppModeFull(reason = ""Fails for instant but not enough to block the release"")    ])', 1)]"					
243:715824) 9.5  . Multi	9.5	C-1-2		[('android.uirendering.cts.testclasses.ExactCanvasTests', 2), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.graphics.cts.RectFTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.graphics.drawable.cts.AdaptiveIconMaskTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 1), ('android.location.cts.fine.GnssAntennaInfoTest', 1), ('android.host.multiuser.CreateUsersPermissionTest', 1), ('android.content.cts.IntentTest', 1), ('android.graphics.cts.PaintTest', 1), ('android.host.multiuser.SecondaryUsersTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1), ('android.media.cts.DynamicsProcessingTest', 1)]	[('setUp', 2), ('getHeight', 1), ('getWidth', 1)]	[('CtsGraphicsTestCases', 4), ('CtsUiRenderingTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsCameraTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsLocationFineTestCases', 1), ('CtsContentTestCases', 1), ('CtsSensorTestCases', 1), ('CtsMediaTestCases', 1)]		9.5/C-1-2	"""C-1-2] MUST, for each user, implement a security model consistent with the Android platform security model as defined in Security and Permissions reference document in the APIs. """	09050000.670102	9.5/C-1-2 C-1-2 9.5				[('9.5', 10), ('C-1-2', 9)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsGraphicsTestCases:android.graphics.drawable.cts.AdaptiveIconMaskTest.testDeviceConfig_iconMask_useRoundIcon None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsUiRenderingTestCases:android.uirendering.cts.testclasses.ExactCanvasTests.testSaveLayerRounding CtsUiRenderingTestCases:android.uirendering.cts.testclasses.ExactCanvasTests.testUnclippedSaveLayerRounding CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsGraphicsTestCases:android.graphics.cts.RectFTest.testHeight CtsGraphicsTestCases:android.graphics.cts.RectFTest.testWidth CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest.testGetShortcutIcon None:android.host.multiuser.CreateUsersPermissionTest.testCantSetUserRestriction CtsContentTestCases:android.content.cts.IntentTest.testUris CtsGraphicsTestCases:android.graphics.cts.PaintTest.testGetTextPathStringCountTooHigh CtsSensorTestCases:android.hardware.cts.SensorParameterRangeTest.testPressureRange None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported		[('/home/gpoor/cts-source/cts/tests/tests/uirendering/src/android/uirendering/cts/testclasses/ExactCanvasTests.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/RectFTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/AdaptiveIconMaskTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_fine/src/android/location/cts/fine/GnssAntennaInfoTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/multiuser/src/android/host/multiuser/CreateUsersPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/IntentTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/multiuser/src/android/host/multiuser/SecondaryUsersTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/DynamicsProcessingTest.java', 1)]	[('/android/uirendering/cts/testclasses/ExactCanvasTests.java', 3), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/graphics/cts/RectFTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/graphics/drawable/cts/AdaptiveIconMaskTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/android/location/cts/fine/GnssAntennaInfoTest.java', 2), ('/android/host/multiuser/CreateUsersPermissionTest.java', 2), ('/android/content/cts/IntentTest.java', 2), ('/android/graphics/cts/PaintTest.java', 2), ('/android/host/multiuser/SecondaryUsersTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2), ('/android/media/cts/DynamicsProcessingTest.java', 2)]	"[('([2:/android/uirendering/cts/testclasses/ExactCanvasTests.java]:[9.5]:[2]:method_text:[ectVerifier(Color.WHITE, Color.BLACK,                         new Rect(20, 20, 70, 70)));     }     ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-2]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/graphics/drawable/cts/AdaptiveIconMaskTest.java]:[9.5]:[1]:method_text:[askPath.isEmpty();         return fullyEnclosedByLargerCircle && fullyEnclosesSmallerCircle;     } }])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-2]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-2]:[1]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/graphics/cts/RectFTest.java]:[9.5]:[1]:method_text:[ new RectF(1.0f, 1.0f, 20.5f, 20.5f);         assertEquals(19.5f, mRectF.height(), 0.0f);     }     ])', 1), ('([1:/android/graphics/cts/RectFTest.java]:[9.5]:[1]:method_text:[= new RectF(1.0f, 1.0f, 20.5f, 20.5f);         assertEquals(19.5f, mRectF.width(), 0.0f);     }     ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[C-1-2]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));     }     @CddTest(requirement=""3.8.1/C-1-2"")    ])', 1), ('([1:/android/location/cts/fine/GnssAntennaInfoTest.java]:[9.5]:[1]:method_text:[ {2.13, 4.30, 1.36, 3.86, 1.02, 2.96},             {3.22, 3.95, 3.75, 1.73, 1.91, 4.93}      };     ])', 1), ('([1:/android/host/multiuser/CreateUsersPermissionTest.java]:[9.5]:[1]:method_text:[     + ""command output: "" + output, isErrorOutput);     }      @CddTest(requirement=""9.5/A-1-3"")    ])', 1), ('([2:/android/content/cts/IntentTest.java]:[9.5]:[2]:method_text:[ent + "" to android-app: uri"",                     androidAppSchemeUri, genUri);         }     }     ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[C-1-2]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());     }      @CddTest(requirement=""3.8.13/C-1-2"")    ])', 1), ('([1:/android/host/multiuser/SecondaryUsersTest.java]:[9.5]:[1]:method_text:[0;      private static final long POLL_INTERVAL_MS = 100;      @CddTest(requirement=""9.5/A-1-2"")    ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[C-1-2]:[1]:method_text:[Frequency),                     actualMinFrequency <=  hifiMinFrequency + 0.1);         }     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-2]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1), ('([1:/android/media/cts/DynamicsProcessingTest.java]:[9.5]:[1]:method_text:[r and release     @AppModeFull(reason = ""Fails for instant but not enough to block the release"")    ])', 1)]"					
256:742768) 9.8.10  . Connectivity Bug Report	9.8.10	C-1-1		[('android.appsecurity.cts.ApkVerityInstallTest', 10), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.vr.cts.VrDisplayTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.bugreport.cts.BugreportManagerTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.vr.cts.VrCpuTest', 1), ('android.text.cts.FontCoverageTest', 1), ('android.media.cts.AudioRecord_BufferSizeTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.content.cts.AvailableIntentsTest', 1), ('android.media.cts.HeifWriterTest', 1), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1)]	[('setUp', 3), ('getSimpleName', 2), ('HashMap', 1), ('Builder', 1), ('build', 1), ('toLanguageTag', 1), ('getDevice', 1), ('getLaunchApiLevel', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsVrTestCases', 3), ('CtsSecurityTestCases', 3), ('CtsMediaTestCases', 2), ('CtsCameraTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsBugreportTestCases', 2), ('CtsAppTestCases', 1), ('CtsTextTestCases', 1), ('CtsContentTestCases', 1), ('CtsGraphicsTestCases', 1)]		9.8.10/C-1-1	"""C-1-1] MUST obtain user consent every time the System API BUGREPORT_MODE_TELEPHONY is called to generate a report and MUST NOT prompt the user to consent to all future requests from the application. """	09081000.670101	9.8.10/C-1-1 9.8.10 C-1-1 BUGREPORT_MODE_TELEPHONY				[('C-1-1', 30), ('BUGREPORT_MODE_TELEPHONY', 2)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsVrTestCases:android.vr.cts.VrCpuTest.VrCpuTest None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testLegacyCameraDeviceParity CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsContentTestCases:android.content.cts.AvailableIntentsTest.testPowerUsageSummarySettings CtsMediaTestCases:android.media.cts.HeifWriterTest.testInputBitmap_Grid_Handler CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsVrTestCases:android.vr.cts.VrDisplayTest.VrDisplayTest CtsVrTestCases:android.vr.cts.VrDisplayTest.testRefreshRateIsAtLeast60Hz None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported CtsBugreportTestCases:android.bugreport.cts.BugreportManagerTest.testTelephonyBugreport CtsBugreportTestCases:android.bugreport.cts.BugreportManagerTest.testFullBugreport		[('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 10), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/vr/src/android/vr/cts/VrDisplayTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/bugreport/src/android/bugreport/cts/BugreportManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/vr/src/android/vr/cts/VrCpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioRecord_BufferSizeTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1)]	[('/android/appsecurity/cts/ApkVerityInstallTest.java', 11), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/vr/cts/VrDisplayTest.java', 3), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 3), ('/android/bugreport/cts/BugreportManagerTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/vr/cts/VrCpuTest.java', 2), ('/android/text/cts/FontCoverageTest.java', 2), ('/android/media/cts/AudioRecord_BufferSizeTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/content/cts/AvailableIntentsTest.java', 2), ('/android/media/cts/HeifWriterTest.java', 2), ('/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-1]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/vr/cts/VrCpuTest.java]:[C-1-1]:[1]:method_text:[ic VrCpuTest() {         super(CtsActivity.class);     }     @CddTest(requirement=""7.9.2/C-1-1"")    ])', 1), ('([1:/android/text/cts/FontCoverageTest.java]:[C-1-1]:[1]:method_text:[      }          // Unknown locale. Return an empty set.         return UnicodeSet.EMPTY;     }     ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/media/cts/AudioRecord_BufferSizeTest.java]:[C-1-1]:[1]:method_text:[   48000,     };      private AudioRecord mAudioRecord;      @CddTest(requirement=""5.4.1/C-1-1"")    ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-1]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-1]:[1]:method_text:[ck camera orientation against device orientation      */     @CddTest(requirement=""7.5.5/C-1-1"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[C-1-1]:[1]:method_text:[ntent.ACTION_POWER_USAGE_SUMMARY));         }     }      @CddTest(requirement = ""7.4.2.6/C-1-1"")    ])', 1), ('([1:/android/media/cts/HeifWriterTest.java]:[C-1-1]:[1]:method_text:[ediaFormat#MIMETYPE_IMAGE_ANDROID_HEIC} encoder.      */     @CddTest(requirement=""5.1.4/C-1-1"")    ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[C-1-1]:[1]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ Tests that the refresh rate is at least 60Hz.      */      @CddTest(requirement=""7.9.2/C-1-15"")    ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ that the display resolution is at least 1080p.      */     @CddTest(requirement=""7.9.2/C-1-14"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);     }      @CddTest(requirement=""4/C-1-1"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-1-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[telephony bugreport does not take any screenshot         assertThat(screenshot).isNull();     }     ])', 1), ('([1:/android/bugreport/cts/BugreportManagerTest.java]:[BUGREPORT_MODE_TELEPHONY]:[1]:method_text:[ringExtra(EXTRA_SCREENSHOT);         return new Pair<String, String>(bugreport, screenshot);     } }])', 1)]"					
256:742768) 9.8.10  . Connectivity Bug Report	9.8.10	C-1-4		[('android.media.cts.MediaDrmClearkeyTest', 19), ('android.app.cts.ActivityManagerProcessStateTest', 17), ('com.android.cts.storagestatsapp.StorageStatsTest', 9), ('android.os.storage.cts.StorageManagerTest', 5), ('android.externalservice.cts.ExternalServiceTest', 5), ('android.cts.statsd.uidmap.UidMapTests', 5), ('android.media.cts.MediaDrmMetricsTest', 4), ('android.server.wm.ActivityTaskAffinityTests', 4), ('android.jobscheduler.cts.shareduidtests.ClipDataJobTest', 3), ('android.net.wifi.cts.WifiManagerTest', 3), ('android.permission.cts.OneTimePermissionTest', 3), ('android.content.pm.cts.ApplicationInfoTest', 2), ('android.text.cts.ClipboardManagerTest', 2), ('android.content.cts.ClipDescriptionTest', 2), ('android.server.wm.AnrTests', 2), ('com.android.server.cts.ActivityManagerIncidentTest', 2), ('android.media.cts.MediaMetricsTest', 2), ('android.media.cts.MediaExtractorTest', 2), ('android.media.cts.MediaController2Test', 2), ('android.media.cts.NativeDecoderTest', 2), ('com.android.cts.appcompat.CompatChangesSystemApiTest', 2), ('android.content.cts.ClipboardManagerTest', 2), ('android.media.cts.MediaCodecListTest', 1), ('android.os.cts.EnvironmentHostTests', 1), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 1), ('android.suspendapps.cts.SuspendPackagesTest', 1), ('android.os.cts.batterysaving.BatterySaverAlarmTest', 1), ('android.server.wm.KeyguardInputTests', 1), ('android.content.pm.cts.PackageInfoTest', 1), ('android.media.cts.AudioManagerTest', 1), ('android.media.cts.MediaPlayerDrmTest', 1), ('android.net.cts.IpSecManagerTest', 1), ('android.content.cts.ContentResolverTest', 1), ('android.systemui.cts.LightBarThemeTest', 1), ('android.server.wm.KeyguardLockedTests', 1), ('com.android.cts.devicepolicy.ManagedProfileTest', 1), ('android.server.wm.PinnedStackTests', 1), ('android.security.cts.FileSystemPermissionTest', 1), ('android.dumpsys.cts.StoragedDumpsysTest', 1), ('android.seccomp.cts.app.SeccompDeviceTest', 1), ('android.cts.statsd.metric.CountMetricsTests', 1), ('android.media.cts.AudioPlaybackConfigurationTest', 1), ('android.net.http.cts.HttpResponseCacheTest', 1), ('android.permission.cts.PermissionUpdateListenerTest', 1)]	[('setUp', 23), ('getContext', 9), ('tearDown', 9), ('getInstrumentation', 8), ('getTargetContext', 5), ('getSimpleName', 4), ('notifyAll', 4), ('getPackageManager', 3), ('newBuilder', 3), ('Intent', 3), ('myUserHandle', 2), ('getIdentifier', 2), ('setup', 2), ('wakeUp', 2), ('close', 2), ('getPackageName', 2), ('updateAlarmManagerConstants', 2), ('resetAlarmManagerConstants', 2), ('BroadcastReceiver', 2), ('elapsedRealtime', 2), ('getMainLooper', 2), ('build', 2), ('Object', 2), ('getDownloadedFolder', 2), ('getPath', 2), ('getResources', 2), ('installApp', 2), ('verifyDefaultValues', 1), ('getDevice', 1), ('separateLogs', 1), ('teardown', 1), ('embeddedWindowTriggersAnr', 1), ('getRandomInt', 1), ('AtomicInteger', 1), ('incrementAndGet', 1), ('getName', 1), ('supportsInsecureLock', 1), ('getActivity', 1), ('getBytes', 1), ('Monitor', 1), ('MediaExtractor', 1), ('release', 1), ('getCurrentUser', 1), ('supportsSecureLock', 1), ('supportsPip', 1), ('hashCode', 1), ('getContentResolver', 1), ('keySet', 1), ('toString', 1), ('MockWebServer', 1), ('randomUUID', 1), ('mkdirs', 1), ('shutdown', 1), ('getAction', 1), ('getScanResults', 1), ('getState', 1), ('unInstallApp', 1), ('hasAutoFillFeature', 1), ('wakeUpScreen', 1), ('prepareDeviceForOneTime', 1), ('uninstallApp', 1), ('restoreDeviceForOneTime', 1)]	[('CtsMediaTestCases', 35), ('CtsAppTestCases', 17), ('CtsWindowManagerDeviceTestCases', 9), ('CtsContentTestCases', 8), ('CtsOsHostTestCases', 5), ('CtsExternalServiceTestCases', 5), ('CtsPermissionTestCases', 4), ('CtsJobSchedulerSharedUidTestCases', 3), ('CtsWifiTestCases', 3), ('CtsTextTestCases', 2), ('CtsContactsProviderTestCases', 1), ('CtsSuspendAppsTestCases', 1), ('CtsBatterySavingTestCases', 1), ('CtsSystemUiTestCases', 1)]		9.8.10/C-1-4	"""C-1-4] MUST NOT include the following in the generated reports: Any kind of information unrelated to connectivity debugging. Any kind of user-installed application traffic logs or detailed profiles of user-installed applications/packages (UIDs are okay, package names are not). MAY include additional information that is not associated with any user identity. (e.g. vendor logs). If device implementations include additional information (e.g vendor logs) in the bug report and that information has privacy/security/battery/storage/memory impact, they: """	09081000.670104	9.8.10 C-1-4 UID 9.8.10/C-1-4				[('UID', 119), ('C-1-4', 2)]		CtsMediaTestCases:android.media.cts.MediaCodecListTest.testRequiredMediaCodecList CtsContentTestCases:android.content.pm.cts.ApplicationInfoTest.testWriteToParcel CtsTextTestCases:android.text.cts.ClipboardManagerTest.testHasText CtsContentTestCases:android.content.cts.ClipDescriptionTest.testGetTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest.testAccountRemovalWithMergedContact_deletesContacts CtsSuspendAppsTestCases:android.suspendapps.cts.SuspendPackagesTest.testDeviceAdminUnsuspendable CtsWindowManagerDeviceTestCases:android.server.wm.AnrTests.computeState CtsBatterySavingTestCases:android.os.cts.batterysaving.BatterySaverAlarmTest.hasTestServiceResponse CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.removeTestAppFromWhitelists CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testUidImportanceListener CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBackgroundCheckService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBackgroundCheckStopsService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBackgroundCheckBroadcastService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBackgroundCheckActivityService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testForegroundServiceAppOp CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testBgRestrictedForegroundService CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testCantSaveStateLaunchAndBackground CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testCantSaveStateLaunchAndSwitch CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testCycleFgs CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testCycleFgsTriangle CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testCycleFgsTriangleBiDi CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testFgsLocationBind CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testTopBind CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testCycleTop CtsAppTestCases:android.app.cts.ActivityManagerProcessStateTest.testCycleFgAppAndAlert None:com.android.server.cts.ActivityManagerIncidentTest.testDumpProcesses CtsMediaTestCases:android.media.cts.MediaMetricsTest.testBasicItem CtsMediaTestCases:android.media.cts.MediaMetricsTest.testBigItem CtsContentTestCases:android.content.pm.cts.PackageInfoTest.testApplicationInfoSame CtsMediaTestCases:android.media.cts.AudioManagerTest.testAdjustSuggestedStreamVolumeWithIllegalArguments CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.MediaDrmClearkeyTest CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testReleaseOfflineLicense CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testQueryKeyStatus CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testOfflineKeyManagement CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testClearKeyPlaybackCenc CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testClearKeyPlaybackCenc2 CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testClearKeyPlaybackOfflineCenc CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testClearKeyPlaybackWebm CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testClearKeyPlaybackMpeg2ts CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testPlaybackMpeg2ts CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testGetProperties CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testSetProperties CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testGetNumberOfSessions CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testHdcpLevels CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testSecurityLevels CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testSecureStop CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testResourceContentionError CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testSessionLostStateError CtsMediaTestCases:android.media.cts.MediaDrmClearkeyTest.testIsCryptoSchemeSupportedWithSecurityLevel CtsMediaTestCases:android.media.cts.MediaExtractorTest.testGetDrmInitData CtsMediaTestCases:android.media.cts.MediaController2Test.testBuilder_setConnectionHints_withFrameworkParcelable CtsMediaTestCases:android.media.cts.MediaController2Test.testCancelSessionCommand None:android.net.cts.IpSecManagerTest.testCreateTransform CtsMediaTestCases:android.media.cts.NativeDecoderTest.testPssh CtsContentTestCases:android.content.cts.ContentResolverTest.testCheckUriPermission CtsOsHostTestCases:android.os.storage.cts.StorageManagerTest.testGetPrimaryVolume CtsOsHostTestCases:android.os.storage.cts.StorageManagerTest.testGetStorageVolume CtsOsHostTestCases:android.os.storage.cts.StorageManagerTest.testGetUuidForPath CtsOsHostTestCases:android.os.storage.cts.StorageManagerTest.testGetExternalUuidForPath CtsSystemUiTestCases:android.systemui.cts.LightBarThemeTest.TestName None:com.android.cts.devicepolicy.ManagedProfileTest.testNoDebuggingFeaturesRestriction None:android.security.cts.FileSystemPermissionTest.testDevHwRandomPermissions CtsExternalServiceTestCases:android.externalservice.cts.ExternalServiceTest.testBindExternalService CtsExternalServiceTestCases:android.externalservice.cts.ExternalServiceTest.testBindExternalServiceWithRunningOwn CtsExternalServiceTestCases:android.externalservice.cts.ExternalServiceTest.testBindExternalAboveClient CtsExternalServiceTestCases:android.externalservice.cts.ExternalServiceTest.testBindExternalServiceWithZygote CtsExternalServiceTestCases:android.externalservice.cts.ExternalServiceTest.testBindExternalServiceWithZygoteWithRunningOwn None:com.android.cts.appcompat.CompatChangesSystemApiTest.testIsChangeEnabledUid None:com.android.cts.appcompat.CompatChangesSystemApiTest.testIsChangeDisabledUid None:android.dumpsys.cts.StoragedDumpsysTest.testStoragedOutput None:android.seccomp.cts.app.SeccompDeviceTest.testAppZygoteSyscalls None:android.cts.statsd.metric.CountMetricsTests.testSlicedStateCountMetricNoReset CtsMediaTestCases:android.media.cts.AudioPlaybackConfigurationTest.testGetterMediaPlayer None:com.android.cts.storagestatsapp.StorageStatsTest.testVerify None:com.android.cts.storagestatsapp.StorageStatsTest.testVerifySummary None:com.android.cts.storagestatsapp.StorageStatsTest.testVerifyStats None:com.android.cts.storagestatsapp.StorageStatsTest.testVerifyStatsMultiple None:com.android.cts.storagestatsapp.StorageStatsTest.testVerifyStatsExternal None:com.android.cts.storagestatsapp.StorageStatsTest.testVerifyStatsExternalConsistent None:com.android.cts.storagestatsapp.StorageStatsTest.testCacheClearing None:com.android.cts.storagestatsapp.StorageStatsTest.testCacheBehavior CtsJobSchedulerSharedUidTestCases:android.jobscheduler.cts.shareduidtests.ClipDataJobTest.testClipDataGrant CtsJobSchedulerSharedUidTestCases:android.jobscheduler.cts.shareduidtests.ClipDataJobTest.testClipDataGrantReschedule CtsMediaTestCases:android.media.cts.MediaDrmMetricsTest.testGetMetricsEmpty CtsMediaTestCases:android.media.cts.MediaDrmMetricsTest.testGetMetricsSession CtsMediaTestCases:android.media.cts.MediaDrmMetricsTest.testGetMetricsGetKeyRequest None:android.cts.statsd.uidmap.UidMapTests.testUidSnapshotIncluded None:android.cts.statsd.uidmap.UidMapTests.testChangeFromInstallation None:android.cts.statsd.uidmap.UidMapTests.testChangeFromReinstall None:android.cts.statsd.uidmap.UidMapTests.testChangeFromUninstall CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.ProvisioningCallback CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testNetworkSettingsPermission CtsWifiTestCases:android.net.wifi.cts.WifiManagerTest.testUpdateWifiUsabilityStatsScorePermission CtsPermissionTestCases:android.permission.cts.PermissionUpdateListenerTest.LatchWithPermissionsChangedListener CtsWindowManagerDeviceTestCases:android.server.wm.ActivityTaskAffinityTests.testActivitiesWithSameAffinityDifferentAppDifferentUidDifferentTask CtsWindowManagerDeviceTestCases:android.server.wm.ActivityTaskAffinityTests.testActivitiesWithSameAffinityUidDifferentAppSameTask CtsWindowManagerDeviceTestCases:android.server.wm.ActivityTaskAffinityTests.testActivitiesWithSameAffinitySameAppSameTask CtsContentTestCases:android.content.cts.ClipboardManagerTest.testPrimaryClipNotAvailableWithoutFocus CtsPermissionTestCases:android.permission.cts.OneTimePermissionTest.testPermissionRevokedOnKill CtsPermissionTestCases:android.permission.cts.OneTimePermissionTest.testStickyServiceMaintainsPermissionOnRestart		[('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaDrmClearkeyTest.java', 19), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 17), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/test-apps/StorageStatsApp/src/com/android/cts/storagestatsapp/StorageStatsTest.java', 9), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/storage/cts/StorageManagerTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/externalservice/src/android/externalservice/cts/ExternalServiceTest.java', 5), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/uidmap/UidMapTests.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaDrmMetricsTest.java', 4), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityTaskAffinityTests.java', 4), ('/home/gpoor/cts-source/cts/tests/JobSchedulerSharedUid/src/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/OneTimePermissionTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/ApplicationInfoTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/ClipboardManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ClipDescriptionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AnrTests.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incident/src/com/android/server/cts/ActivityManagerIncidentTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaMetricsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaExtractorTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaController2Test.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/NativeDecoderTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/appcompat/compatchanges/src/com/android/cts/appcompat/CompatChangesSystemApiTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ClipboardManagerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/os/src/android/os/cts/EnvironmentHostTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 1), ('/home/gpoor/cts-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/SuspendPackagesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/batterysaving/src/android/os/cts/batterysaving/BatterySaverAlarmTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardInputTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/PackageInfoTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaPlayerDrmTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/cts/IpSecManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ContentResolverTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/systemui/src/android/systemui/cts/LightBarThemeTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/KeyguardLockedTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 1), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PinnedStackTests.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/security/src/android/security/cts/FileSystemPermissionTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/dumpsys/src/android/dumpsys/cts/StoragedDumpsysTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/seccomp/app/src/android/seccomp/cts/app/SeccompDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/src/android/cts/statsd/metric/CountMetricsTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioPlaybackConfigurationTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/net/src/android/net/http/cts/HttpResponseCacheTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/PermissionUpdateListenerTest.java', 1)]	[('/android/media/cts/MediaDrmClearkeyTest.java', 20), ('/android/app/cts/ActivityManagerProcessStateTest.java', 18), ('/com/android/cts/storagestatsapp/StorageStatsTest.java', 10), ('/android/os/storage/cts/StorageManagerTest.java', 6), ('/android/externalservice/cts/ExternalServiceTest.java', 6), ('/android/cts/statsd/uidmap/UidMapTests.java', 6), ('/android/media/cts/MediaDrmMetricsTest.java', 5), ('/android/server/wm/ActivityTaskAffinityTests.java', 5), ('/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java', 4), ('/android/net/wifi/cts/WifiManagerTest.java', 4), ('/android/permission/cts/OneTimePermissionTest.java', 4), ('/android/content/pm/cts/ApplicationInfoTest.java', 3), ('/android/text/cts/ClipboardManagerTest.java', 3), ('/android/content/cts/ClipDescriptionTest.java', 3), ('/android/server/wm/AnrTests.java', 3), ('/com/android/server/cts/ActivityManagerIncidentTest.java', 3), ('/android/media/cts/MediaMetricsTest.java', 3), ('/android/media/cts/MediaExtractorTest.java', 3), ('/android/media/cts/MediaController2Test.java', 3), ('/android/media/cts/NativeDecoderTest.java', 3), ('/com/android/cts/appcompat/CompatChangesSystemApiTest.java', 3), ('/android/content/cts/ClipboardManagerTest.java', 3), ('/android/media/cts/MediaCodecListTest.java', 2), ('/android/os/cts/EnvironmentHostTests.java', 2), ('/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/android/suspendapps/cts/SuspendPackagesTest.java', 2), ('/android/os/cts/batterysaving/BatterySaverAlarmTest.java', 2), ('/android/server/wm/KeyguardInputTests.java', 2), ('/android/content/pm/cts/PackageInfoTest.java', 2), ('/android/media/cts/AudioManagerTest.java', 2), ('/android/media/cts/MediaPlayerDrmTest.java', 2), ('/android/net/cts/IpSecManagerTest.java', 2), ('/android/content/cts/ContentResolverTest.java', 2), ('/android/systemui/cts/LightBarThemeTest.java', 2), ('/android/server/wm/KeyguardLockedTests.java', 2), ('/com/android/cts/devicepolicy/ManagedProfileTest.java', 2), ('/android/server/wm/PinnedStackTests.java', 2), ('/android/security/cts/FileSystemPermissionTest.java', 2), ('/android/dumpsys/cts/StoragedDumpsysTest.java', 2), ('/android/seccomp/cts/app/SeccompDeviceTest.java', 2), ('/android/cts/statsd/metric/CountMetricsTests.java', 2), ('/android/media/cts/AudioPlaybackConfigurationTest.java', 2), ('/android/net/http/cts/HttpResponseCacheTest.java', 2), ('/android/permission/cts/PermissionUpdateListenerTest.java', 2)]	"[('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[GHT_CENC, false /* scrambled */,             MediaDrm.KEY_TYPE_STREAMING);     }      @Presubmit    ])', 2), ('([1:/android/media/cts/MediaCodecListTest.java]:[UID]:[1]:method_text:[IMETYPE_VIDEO_H263, true)); // h263 encoder             }         }          return list;     }     ])', 1), ('([2:/android/content/pm/cts/ApplicationInfoTest.java]:[UID]:[2]:method_text:[ctivityName);         assertEquals(mApplicationInfo.descriptionRes, info.descriptionRes);     }     ])', 1), ('([1:/android/content/pm/cts/ApplicationInfoTest.java]:[UID]:[1]:method_text:[tionInfo.uiOptions);         assertEquals(CATEGORY_UNDEFINED, mApplicationInfo.category);     }     ])', 1), ('([1:/android/os/cts/EnvironmentHostTests.java]:[UID]:[1]:method_text:[et --uid android.cts.environment ""                 + appOp + (val ? "" allow"" : "" deny""));     }     ])', 1), ('([5:/android/text/cts/ClipboardManagerTest.java]:[UID]:[5]:method_text:[nstrumentationRegistry.getInstrumentation());         launchActivity(MockActivity.class);     }     ])', 1), ('([1:/android/text/cts/ClipboardManagerTest.java]:[UID]:[1]:method_text:[text.startActivity(intent);         mUiDevice.wait(Until.hasObject(By.clazz(clazz)), 5000);     }  }])', 1), ('([6:/android/content/cts/ClipDescriptionTest.java]:[UID]:[6]:method_text:[        mUiDevice.wakeUp();         launchActivity(MockActivity.class);     }      @UiThreadTest    ])', 1), ('([1:/android/content/cts/ClipDescriptionTest.java]:[UID]:[1]:method_text:[ntext.startActivity(intent);         mUiDevice.wait(Until.hasObject(By.clazz(clazz)), 5000);     } }])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[C-1-4]:[1]:method_text:[ut this should not be done for the local account.      */     @CddTest(requirement=""3.18/C-1-4"")    ])', 1), ('([3:/android/suspendapps/cts/SuspendPackagesTest.java]:[UID]:[3]:method_text:[pToName(op) + "" allowed while package is suspended"",                 MODE_ALLOWED, mode);     }     ])', 1), ('([1:/android/server/wm/AnrTests.java]:[UID]:[1]:method_text:[SIVE_ACTIVITY.getPackageName());         stopTestPackage(HOST_ACTIVITY.getPackageName());     }     ])', 1), ('([4:/android/server/wm/AnrTests.java]:[UID]:[4]:method_text:[                "" --ei "" + delayTypeExtra + "" 30000"";         executeShellCommand(startCmd);     } }])', 1), ('([2:/android/os/cts/batterysaving/BatterySaverAlarmTest.java]:[UID]:[2]:method_text:[         runKill(packageName, /*wait=*/ true);         Thread.sleep(1000);     }      @LargeTest    ])', 1), ('([11:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[11]:method_text:[ * Test basic state changes as processes go up and down due to services running in them.      */    ])', 1), ('([72:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[72]:method_text:[vents idle services from running but allows      * whitelisted apps to bypass the check.      */    ])', 1), ('([61:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[61]:method_text:[nd: first      * allowing a service to be started, then stopped by the system when idle.      */    ])', 1), ('([58:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[58]:method_text:[t allow services to be started from broadcasts except when in      * the correct states.      */    ])', 1), ('([66:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[66]:method_text:[/**      * Test that background check does allow services to be started from activities.      */    ])', 1), ('([34:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[34]:method_text:[   /**      * Test that the foreground service app op does prevent the foreground state.      */    ])', 1), ('([66:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[66]:method_text:[ound services demoted to      * ordinary service state when it is no longer the top app.      */    ])', 1), ('([14:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[14]:method_text:[* Test that a single ""can\'t save state"" app has the proper process management semantics.      */    ])', 1), ('([64:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[64]:method_text:[ /**      * Test that switching between two ""can\'t save state"" apps is handled properly.      */    ])', 1), ('([83:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[83]:method_text:[ound service,      * app should go back to cached state.      *      * @throws Exception      */    ])', 1), ('([25:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[25]:method_text:[ound      * service, app should go back to cached state.      *      * @throws Exception      */    ])', 1), ('([39:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[39]:method_text:[ound      * service, app should go back to cached state.      *      * @throws Exception      */    ])', 1), ('([36:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[36]:method_text:[ROUND_LOCATION can not be passed from      * client to service.      * @throws Exception      */    ])', 1), ('([12:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[12]:method_text:[g.      * Bound app should be TOP w/flag and BTOP without flag.      * @throws Exception      */    ])', 1), ('([4:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[4]:method_text:[tivity(STUB_PACKAGE_NAME, activityClass, null);         return monitor.waitForActivity();     }     ])', 1), ('([44:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[44]:method_text:[       if (activity != null) {                 activity.finish();             }         }     }     ])', 1), ('([48:/android/app/cts/ActivityManagerProcessStateTest.java]:[UID]:[48]:method_text:[cher.finish();             uid2Watcher.finish();             uid3Watcher.finish();         }     } }])', 1), ('([2:/com/android/server/cts/ActivityManagerIncidentTest.java]:[UID]:[2]:method_text:[ic final int SYSTEM_UID = 1000;      /**      * Tests activity manager dumps broadcasts.      */    ])', 1), ('([23:/com/android/server/cts/ActivityManagerIncidentTest.java]:[UID]:[23]:method_text:[t : attp.getPackageTimesList()) {             assertTrue(pt.getDurationMs() >= 0);         }     } }])', 1), ('([2:/android/media/cts/MediaMetricsTest.java]:[UID]:[2]:method_text:[s tests MediaMetrics item buffer expansion when the initial buffer capacity is set to 1.      */    ])', 1), ('([6:/android/media/cts/MediaMetricsTest.java]:[UID]:[6]:method_text:[BUNDLE_UID));         assertEquals(12, bundle3.getLong(MediaMetrics.Item.BUNDLE_TIMESTAMP));     } }])', 1), ('([1:/android/server/wm/KeyguardInputTests.java]:[UID]:[1]:method_text:[the keyguard, and inject BACK key. Ensure that the BACK key goes      * to the activity.      */    ])', 1), ('([2:/android/content/pm/cts/PackageInfoTest.java]:[UID]:[2]:method_text:[  assertNull(actual);         } else {             assertEquals(0, actual.length);         }     } }])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[C-1-4]:[1]:method_text:[treamVolume(AudioManager.ADJUST_RAISE, 66747, 0);     }      @CddTest(requirement=""5.4.1/C-1-4"")    ])', 1), ('([15:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[15]:method_text:[      }     }      /**      * Tests KEY_TYPE_RELEASE for offline license.      */     @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[ + key + "", value="" + keyStatus.get(key));         }          return true;     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[ccess) {             throw new Error(""query key status failed"");         }     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[        closeSession(drm, mSessionId);             stopDrm(drm);         }     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[NC, VIDEO_HEIGHT_CENC, false /* scrambled */,                 MediaDrm.KEY_TYPE_OFFLINE);     }     ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[WEBM, VIDEO_HEIGHT_WEBM, false /* scrambled */,             MediaDrm.KEY_TYPE_STREAMING);     }     ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[TS, VIDEO_HEIGHT_MPEG2TS, true /* scrambled */,             MediaDrm.KEY_TYPE_STREAMING);     }     ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[on e) {             throw new Error(e.getMessage() + ""-"" + key);         }     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[y"");             }         } finally {             stopDrm(drm);         }     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[(drm);         }     }      private final static int CLEARKEY_MAX_SESSIONS = 10;      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[Id);             }         } finally {             stopDrm(drm);         }     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[   if (drm != null) {                 drm.close();             }         }     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[  if (drm != null) {                 drm.close();             }         }      }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[MediaDrm.SessionException with      * errorCode ERROR_RESOURCE_CONTENTION      */     @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[Expected behavior: OnSessionLostState is called with      * the sessionId      */     @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[1]:method_text:[row new Error(""Didn\'t receive expected MediaDrmStateException"");         }     }      @Presubmit    ])', 1), ('([3:/android/media/cts/MediaDrmClearkeyTest.java]:[UID]:[3]:method_text:[getSurfaces() {         return Arrays.asList(getActivity().getSurfaceHolder().getSurface());     } }])', 1), ('([1:/android/media/cts/MediaPlayerDrmTest.java]:[UID]:[1]:method_text:[inal Uri CENC_VIDEO_URL_DOWNLOADED = getUriFromFile(""car_cenc-20120827-88.mp4"");       // Tests     ])', 1), ('([7:/android/media/cts/MediaExtractorTest.java]:[UID]:[7]:method_text:[ce ds = getDataSourceFor(resid);         mExtractor.setDataSource(ds);         return ds;     }     ])', 1), ('([6:/android/media/cts/MediaExtractorTest.java]:[UID]:[6]:method_text:[tual: "" + ap);                 return false;             }         }         return true;     }     ])', 1), ('([2:/android/media/cts/MediaController2Test.java]:[UID]:[2]:method_text:[  assertEquals(frameworkParcelable, connectionHintsOut.getParcelable(testKey));         }     }     ])', 1), ('([2:/android/media/cts/MediaController2Test.java]:[UID]:[2]:method_text:[    } catch (InterruptedException e) {                 return false;             }         }     } }])', 1), ('([55:/android/net/cts/IpSecManagerTest.java]:[UID]:[55]:method_text:[     expectedPacketSize, expectedNumPkts, expectedPacketSize, expectedNumPkts);         }     }     ])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[UID]:[1]:method_text:["", Arrays.toString(a2));                 fail(message + "": at index "" + i);             }     }     ])', 1), ('([7:/android/media/cts/NativeDecoderTest.java]:[UID]:[7]:method_text:[     }     }      private static native boolean testPsshNative(int fd, long offset, long size);     ])', 1), ('([2:/android/content/cts/ContentResolverTest.java]:[UID]:[2]:method_text:[        TABLE1_URI, android.os.Process.myUid(), Intent.FLAG_GRANT_WRITE_URI_PERMISSION));     }     ])', 1), ('([1:/android/os/storage/cts/StorageManagerTest.java]:[UID]:[1]:method_text:[getIdentifier();     }      @AppModeFull(reason = ""Instant apps cannot access external storage"")    ])', 1), ('([6:/android/os/storage/cts/StorageManagerTest.java]:[UID]:[6]:method_text:[cle();         }     }      @AppModeFull(reason = ""Instant apps cannot access external storage"")    ])', 1), ('([6:/android/os/storage/cts/StorageManagerTest.java]:[UID]:[6]:method_text:[ected UUID "" + uuid + "" for "" + file);         } catch (IOException expected) {         }     }     ])', 1), ('([7:/android/os/storage/cts/StorageManagerTest.java]:[UID]:[7]:method_text:[File(""/proc/""));     }      @AppModeFull(reason = ""Instant apps cannot access external storage"")    ])', 1), ('([10:/android/os/storage/cts/StorageManagerTest.java]:[UID]:[10]:method_text:[e(""/sdcard/"")));     }      @AppModeFull(reason = ""Instant apps cannot access external storage"")    ])', 1), ('([3:/android/systemui/cts/LightBarThemeTest.java]:[UID]:[3]:method_text:[e     public void setUp() {         mDevice = UiDevice.getInstance(getInstrumentation());     }     ])', 1), ('([1:/android/server/wm/KeyguardLockedTests.java]:[UID]:[1]:method_text:[tUp() throws Exception {         super.setUp();         assumeTrue(supportsSecureLock());     }     ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[UID]:[2]:method_text:[put.contains(""SecurityException""));     }      // Test the bluetooth API from a managed profile.    ])', 1), ('([1:/android/server/wm/PinnedStackTests.java]:[UID]:[1]:method_text:[void setUp() throws Exception {         super.setUp();         assumeTrue(supportsPip());     }     ])', 1), ('([1:/android/security/cts/FileSystemPermissionTest.java]:[UID]:[1]:method_text:[t.write(buf, 0, chunkSize);             }             return result.toByteArray();         }     } }])', 1), ('([3:/android/externalservice/cts/ExternalServiceTest.java]:[UID]:[3]:method_text:[e can bind the service itself, and that      * other APKs bind to a different instance of it. */    ])', 1), ('([17:/android/externalservice/cts/ExternalServiceTest.java]:[UID]:[17]:method_text:[eatorConnection);     }      /** Tests that the binding to an externalService can be changed. */    ])', 1), ('([6:/android/externalservice/cts/ExternalServiceTest.java]:[UID]:[6]:method_text:[itialConn);     }      /** Tests binding an externalService that is started by an app zygote. */    ])', 1), ('([3:/android/externalservice/cts/ExternalServiceTest.java]:[UID]:[3]:method_text:[also useAppZygote=true shares the same      * zygote, even when bound by different packages.. */    ])', 1), ('([11:/android/externalservice/cts/ExternalServiceTest.java]:[UID]:[11]:method_text:[> should not be equal to actual <"" + actual + "">"",                 expected.equals(actual));     } }])', 1), ('([2:/com/android/cts/appcompat/CompatChangesSystemApiTest.java]:[UID]:[2]:method_text:[eSet.of(CTS_SYSTEM_API_CHANGEID),                 /*disabledChanges*/ ImmutableSet.of());     }     ])', 1), ('([2:/com/android/cts/appcompat/CompatChangesSystemApiTest.java]:[UID]:[2]:method_text:[ableSet.of(),                 /*disabledChanges*/ ImmutableSet.of(CTS_SYSTEM_API_CHANGEID));     } }])', 1), ('([2:/android/dumpsys/cts/StoragedDumpsysTest.java]:[UID]:[2]:method_text:[TestIO = true;                 }             }              assertTrue(hasTestIO);         }     } }])', 1), ('([5:/android/seccomp/cts/app/SeccompDeviceTest.java]:[UID]:[5]:method_text:[id);     protected static final native boolean testSetresgidBlocked(int rgid, int egid, int sgid); }])', 1), ('([2:/android/cts/statsd/metric/CountMetricsTests.java]:[UID]:[2]:method_text:[ntBucketInfo::getCount)                 .sum();         assertThat(totalCount).isEqualTo(3);     } }])', 1), ('([6:/android/media/cts/AudioPlaybackConfigurationTest.java]:[UID]:[6]:method_text:[     fail(""Exception thrown during reflection on config privileged fields""+ e);         }     }     ])', 1), (""([3:/com/android/cts/storagestatsapp/StorageStatsTest.java]:[UID]:[3]:method_text:[ test verifies that both kernel options and the fstab 'quota'      * option are enabled.      */    ])"", 1), ('([2:/com/android/cts/storagestatsapp/StorageStatsTest.java]:[UID]:[2]:method_text:[f abusive apps."",                     stats.isReservedSupported(UUID_DEFAULT));         }     }     ])', 1), ('([2:/com/android/cts/storagestatsapp/StorageStatsTest.java]:[UID]:[2]:method_text:[ent.getDataDirectory().getUsableSpace();         assertAtLeast(expectedFree, actualFree);     }     ])', 1), ('([12:/com/android/cts/storagestatsapp/StorageStatsTest.java]:[UID]:[12]:method_text:[  assertMostlyEquals(deltaCache, afterUser.getCacheBytes() - beforeUser.getCacheBytes());     }     ])', 1), (""([6:/com/android/cts/storagestatsapp/StorageStatsTest.java]:[UID]:[6]:method_text:[external files of specific media types and ensure that      * they're tracked correctly.      */    ])"", 1), ('([7:/com/android/cts/storagestatsapp/StorageStatsTest.java]:[UID]:[7]:method_text:[ manually should always be consistent with      * whatever the stats APIs are returning.      */    ])', 1), ('([2:/com/android/cts/storagestatsapp/StorageStatsTest.java]:[UID]:[2]:method_text:[deltaAfter = statsSize - manualSize;         assertMostlyEquals(deltaBefore, deltaAfter);     }     ])', 1), ('([22:/com/android/cts/storagestatsapp/StorageStatsTest.java]:[UID]:[22]:method_text:[S);         assertMostlyEquals(targetA / 2, getCacheBytes(PKG_B, user), 2 * MB_IN_BYTES);     }     ])', 1), ('([12:/com/android/cts/storagestatsapp/StorageStatsTest.java]:[UID]:[12]:method_text:[t.call(pkg, pkg, args);             return res.getLong(UtilsReceiver.EXTRA_BYTES);         }     } }])', 1), ('([1:/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java]:[UID]:[1]:method_text:[_ID);     }      /**      * Test basic granting of URI permissions associated with jobs.      */    ])', 1), (""([4:/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java]:[UID]:[4]:method_text:[orrectly fail when trying to grant permissions to things we don't      * have access to.      */    ])"", 1), ('([4:/android/jobscheduler/cts/shareduidtests/ClipDataJobTest.java]:[UID]:[4]:method_text:[d up.         waitPermissionRevoke(mFirstUri, Intent.FLAG_GRANT_WRITE_URI_PERMISSION, 5000);     } }])', 1), ('([4:/android/media/cts/MediaDrmMetricsTest.java]:[UID]:[4]:method_text:[       } catch (Exception e) {             return ""unavailable"";         }     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmMetricsTest.java]:[UID]:[1]:method_text:[etrics.keySet().contains(GOOGLE_CLEARKEY_VENDOR_ID));         drm.close();     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmMetricsTest.java]:[UID]:[1]:method_text:[   BaseEncoding.base16().encode(sid2).toLowerCase()));        drm.close();     }      @Presubmit    ])', 1), ('([1:/android/media/cts/MediaDrmMetricsTest.java]:[UID]:[1]:method_text:[ng(hexSid),             lessThanOrEqualTo(endTimesMs.getLong(hexSid)));         drm.close();     } }])', 1), ('([4:/android/cts/statsd/uidmap/UidMapTests.java]:[UID]:[4]:method_text:[MapTests extends DeviceAtomTestCase {      // Tests that every report has at least one snapshot.    ])', 1), ('([16:/android/cts/statsd/uidmap/UidMapTests.java]:[UID]:[16]:method_text:[  }         return false;     }      // Tests that delta event included during app installation.    ])', 1), ('([6:/android/cts/statsd/uidmap/UidMapTests.java]:[UID]:[6]:method_text:[     }      // We check that a re-installation gives a change event (similar to an app upgrade).    ])', 1), ('([5:/android/cts/statsd/uidmap/UidMapTests.java]:[UID]:[5]:method_text:[                found = true;             }         }         assertThat(found).isTrue();     }     ])', 1), ('([5:/android/cts/statsd/uidmap/UidMapTests.java]:[UID]:[5]:method_text:[ {                 found = true;             }         }         assertThat(found).isTrue();     } }])', 1), ('([3:/android/net/http/cts/HttpResponseCacheTest.java]:[UID]:[3]:method_text:[     ResponseCache.setDefault(null);         server.shutdown();         super.tearDown();     }     ])', 1), ('([5:/android/net/wifi/cts/WifiManagerTest.java]:[UID]:[5]:method_text:[);         }         return -1;     }      /**      * Test creation of WifiManager Lock.      */    ])', 1), ('([19:/android/net/wifi/cts/WifiManagerTest.java]:[UID]:[19]:method_text:[unctionality.  The permission is intended to be granted to only the device setup wizard.      */    ])', 1), ('([8:/android/net/wifi/cts/WifiManagerTest.java]:[UID]:[8]:method_text:[een turns off while wifi is disabled      * but location is on.      * @throws Exception      */    ])', 1), ('([6:/android/permission/cts/PermissionUpdateListenerTest.java]:[UID]:[6]:method_text:[missionsChangeListener(latch));         assertThat(latch.getCount()).isEqualTo((long) 0);     }     ])', 1), ('([5:/android/server/wm/ActivityTaskAffinityTests.java]:[UID]:[5]:method_text:[  */ @Presubmit @Group3 public class ActivityTaskAffinityTests extends ActivityManagerTestBase {    ])', 1), ('([2:/android/server/wm/ActivityTaskAffinityTests.java]:[UID]:[2]:method_text:[CTIVITY_WITH_SAME_AFFINITY_DIFFERENT_UID,                 false /* sameTask */         );     }     ])', 1), ('([2:/android/server/wm/ActivityTaskAffinityTests.java]:[UID]:[2]:method_text:[EST_ACTIVITY_WITH_SAME_AFFINITY_SHARE_UID,                 true /* sameTask */         );     }     ])', 1), ('([1:/android/server/wm/ActivityTaskAffinityTests.java]:[UID]:[1]:method_text:[ be""                     + "" in the same task."", firstAppTaskId, secondAppTaskId);         }     } }])', 1), ('([6:/android/content/cts/ClipboardManagerTest.java]:[UID]:[6]:method_text:[strumentation());         mUiDevice.wakeUp();         launchActivity(MockActivity.class);     }     ])', 1), ('([3:/android/content/cts/ClipboardManagerTest.java]:[UID]:[3]:method_text:[text.getPackageManager().hasSystemFeature(                 PackageManager.FEATURE_AUTOFILL);     } }])', 1), ('([4:/android/permission/cts/OneTimePermissionTest.java]:[UID]:[4]:method_text:[ions_timeout_millis"",                         mOldOneTimePermissionTimeoutValue, false));     }     ])', 1), ('([1:/android/permission/cts/OneTimePermissionTest.java]:[UID]:[1]:method_text:[         ""one_time_permissions_killed_delay_millis"", 5000L)));         assertDenied(500);     }     ])', 1), ('([17:/android/permission/cts/OneTimePermissionTest.java]:[UID]:[17]:method_text:[               mActivityManager.removeOnUidImportanceListener(this);             }         }     } }])', 1)]"					
256:742768) 9.8.10  . Connectivity Bug Report	9.8.10	C-1-2		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 1), ('android.graphics.cts.PaintTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1)]	[('setUp', 2), ('getHeight', 1), ('getWidth', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsCameraTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsSensorTestCases', 1)]		9.8.10/C-1-2	"""C-1-2] MUST display and obtain explicit user consent when the reports are starting to be generated and MUST NOT return the generated report to the requesting app without explicit user consent. """	09081000.670102	9.8.10/C-1-2 C-1-2 9.8.10				[('C-1-2', 9)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest.testGetShortcutIcon CtsGraphicsTestCases:android.graphics.cts.PaintTest.testGetTextPathStringCountTooHigh CtsSensorTestCases:android.hardware.cts.SensorParameterRangeTest.testPressureRange None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported		[('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1)]	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/android/graphics/cts/PaintTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-2]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-2]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-2]:[1]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[C-1-2]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));     }     @CddTest(requirement=""3.8.1/C-1-2"")    ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[C-1-2]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());     }      @CddTest(requirement=""3.8.13/C-1-2"")    ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[C-1-2]:[1]:method_text:[Frequency),                     actualMinFrequency <=  hifiMinFrequency + 0.1);         }     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-2]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1)]"					
256:742768) 9.8.10  . Connectivity Bug Report	9.8.10	C-1-3		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.webkit.cts.WebSettingsTest', 1), ('android.telecom.cts.BasicInCallServiceTest', 1)]	[('getInstrumentation', 4), ('setUp', 2), ('tearDown', 2), ('getContext', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsWebkitTestCases', 1), ('CtsTelecomTestCases', 1)]		9.8.10/C-1-3	"""C-1-3] MUST generate requested reports containing at least the following information: TelephonyDebugService dump TelephonyRegistry dump WifiService dump ConnectivityService dump A dump of the calling package's CarrierService instance (if bound) Radio log buffer """	09081000.670103	C-1-3 9.8.10/C-1-3 9.8.10				[('C-1-3', 4)]		CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testUserAgentStringTest CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount		[('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/telecom/src/android/telecom/cts/BasicInCallServiceTest.java', 1)]	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/webkit/cts/WebSettingsTest.java', 2), ('/android/telecom/cts/BasicInCallServiceTest.java', 2)]	"[('([1:/android/webkit/cts/WebSettingsTest.java]:[C-1-3]:[1]:method_text:[l:\\n%s"", patternString, useragent),                     patternMatcher.find());         }     }     ])', 1), ('([1:/android/telecom/cts/BasicInCallServiceTest.java]:[C-1-3]:[1]:method_text:[tDialer);         }         super.tearDown();     }      @CddTest(requirement = ""7.4.1.2/C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-3]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1)]"					
257:744346) 9.8.11  . Data blobs sharing	9.8.11	C-1-2		[('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest', 1), ('android.graphics.cts.PaintTest', 1), ('android.hardware.cts.SensorParameterRangeTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1)]	[('setUp', 2), ('getHeight', 1), ('getWidth', 1)]	[('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsCameraTestCases', 1), ('CtsShortcutManagerTestCases', 1), ('CtsGraphicsTestCases', 1), ('CtsSensorTestCases', 1)]		9.8.11/C-1-2	"""C-1-2] MUST NOT send off device or share with other apps the secure hashes of data blobs (which are used to control access). <h3 id="""	09081100.670102	9.8.11/C-1-2 C-1-2 9.8.11				[('C-1-2', 9)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.getCharacteristics CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsShortcutManagerTestCases:android.content.pm.cts.shortcutmanager.ShortcutManagerLauncherApiTest.testGetShortcutIcon CtsGraphicsTestCases:android.graphics.cts.PaintTest.testGetTextPathStringCountTooHigh CtsSensorTestCases:android.hardware.cts.SensorParameterRangeTest.testPressureRange None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiQrSupported		[('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/shortcutmanager/src/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/PaintTest.java', 1), ('/home/gpoor/cts-source/cts/tests/sensor/src/android/hardware/cts/SensorParameterRangeTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1)]	[('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java', 2), ('/android/graphics/cts/PaintTest.java', 2), ('/android/hardware/cts/SensorParameterRangeTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2)]	"[('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-2]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-2]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-2]:[1]:method_text:[ations contain a few required formats and sizes.      */     @CddTest(requirement=""7.5.1/C-1-2"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-2]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/content/pm/cts/shortcutmanager/ShortcutManagerLauncherApiTest.java]:[C-1-2]:[1]:method_text:[PackageContext1.getPackageName(), ""ms21"", false));     }     @CddTest(requirement=""3.8.1/C-1-2"")    ])', 1), ('([1:/android/graphics/cts/PaintTest.java]:[C-1-2]:[1]:method_text:[.getTextPath(""HIJKLMN"", 3, 9, 0, 0, new Path());     }      @CddTest(requirement=""3.8.13/C-1-2"")    ])', 1), ('([1:/android/hardware/cts/SensorParameterRangeTest.java]:[C-1-2]:[1]:method_text:[Frequency),                     actualMinFrequency <=  hifiMinFrequency + 0.1);         }     }     ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-2]:[1]:method_text:[)));         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     } }])', 1)]"					
257:744346) 9.8.11  . Data blobs sharing	9.8.11	C-1-1		[('com.android.cts.blob.BlobStoreManagerTest', 28), ('android.appsecurity.cts.ApkVerityInstallTest', 10), ('com.android.cts.device.blob.DataCleanupTest', 4), ('com.android.cts.device.blob.DataPersistenceTest', 3), ('android.security.cts.FileIntegrityManagerTest', 3), ('android.provider.cts.contacts.ContactsContract_RawContactsTest', 2), ('android.vr.cts.VrDisplayTest', 2), ('android.incrementalinstall.cts.IncrementalFeatureTest', 2), ('android.app.cts.SystemFeaturesTest', 1), ('android.vr.cts.VrCpuTest', 1), ('android.text.cts.FontCoverageTest', 1), ('android.media.cts.AudioRecord_BufferSizeTest', 1), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.content.cts.AvailableIntentsTest', 1), ('android.media.cts.HeifWriterTest', 1), ('android.hardware.camera2.cts.LogicalCameraDeviceTest', 1), ('com.android.server.cts.device.statsd.AtomTests', 1), ('android.graphics.cts.VulkanFeaturesTest', 1), ('android.adbmanager.cts.AdbManagerHostDeviceTest', 1)]	[('setUp', 3), ('getSimpleName', 2), ('HashMap', 1), ('Builder', 1), ('build', 1), ('toLanguageTag', 1), ('getDevice', 1), ('getLaunchApiLevel', 1), ('setup', 1), ('getTargetContext', 1), ('getPackageManager', 1), ('getSystemAvailableFeatures', 1), ('getVulkanDevices', 1), ('getBestDevice', 1), ('getInstrumentation', 1), ('getContext', 1)]	[('CtsBlobStoreTestCases', 28), ('CtsVrTestCases', 3), ('CtsSecurityTestCases', 3), ('CtsMediaTestCases', 2), ('CtsCameraTestCases', 2), ('CtsContactsProviderTestCases', 2), ('CtsAppTestCases', 1), ('CtsTextTestCases', 1), ('CtsContentTestCases', 1), ('CtsGraphicsTestCases', 1)]		9.8.11/C-1-1	"""C-1-1] MUST NOT share data blobs belonging to apps beyond what they intended to allow (i.e. the scope of default access and the other access modes that can be specified using BlobStoreManager.session#allowPackageAccess(), BlobStoreManager.session#allowSameSignatureAccess(), or BlobStoreManager.session#allowPublicAccess() MUST NOT be modified). The AOSP reference implementation meets these requirements. """	09081100.670101	9.8.11/C-1-1 BlobStoreManager.session allowPublicAccess() 9.8.11 allowSameSignatureAccess() C-1-1 allowPackageAccess()				[('C-1-1', 30), ('BlobStoreManager.session', 26), ('allowPublicAccess()', 5), ('allowSameSignatureAccess()', 4), ('allowPackageAccess()', 1)]		CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures None:com.android.cts.device.blob.DataCleanupTest.testCreateSession None:com.android.cts.device.blob.DataCleanupTest.testOpenSession None:com.android.cts.device.blob.DataCleanupTest.testCommitBlob None:com.android.cts.device.blob.DataCleanupTest.testCommitBlob CtsVrTestCases:android.vr.cts.VrCpuTest.VrCpuTest None:com.android.cts.device.blob.DataPersistenceTest.testCreateSession None:com.android.cts.device.blob.DataPersistenceTest.testOpenSessionAndWrite None:com.android.cts.device.blob.DataPersistenceTest.testCommitSession None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithWrongSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithSplit None:android.appsecurity.cts.ApkVerityInstallTest.testInstallBaseWithDm None:android.appsecurity.cts.ApkVerityInstallTest.testInstallEverything None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnly None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyMissingSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallSplitOnlyWithoutBaseSignature None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyBaseHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlyDmHasFsvSig None:android.appsecurity.cts.ApkVerityInstallTest.testInstallOnlySplitHasFsvSig None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testLegacyCameraDeviceParity CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_updatesContactUpdatedTimestamp CtsContactsProviderTestCases:android.provider.cts.contacts.ContactsContract_RawContactsTest.testRawContactCreate_noAccountUsesLocalAccount CtsContentTestCases:android.content.cts.AvailableIntentsTest.testPowerUsageSummarySettings CtsMediaTestCases:android.media.cts.HeifWriterTest.testInputBitmap_Grid_Handler CtsCameraTestCases:android.hardware.camera2.cts.LogicalCameraDeviceTest.testDefaultFov CtsVrTestCases:android.vr.cts.VrDisplayTest.VrDisplayTest CtsVrTestCases:android.vr.cts.VrDisplayTest.testRefreshRateIsAtLeast60Hz None:com.android.server.cts.device.statsd.AtomTests.testBlobStore CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testOpenReadWriteSession CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testOpenSession_fromAnotherPkg CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testOpenSessionAndAbandon CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testCloseSession CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowPublicAccess_abandonedSession CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowSameSignatureAccess_abandonedSession CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowPackageAccess_abandonedSession CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testSessionCommit CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testSessionCommit_incompleteData CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testSessionCommit_incorrectData CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testSessionCommit_largeBlob CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testCommitSession_multipleReadWrites CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testOpenBlob CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testStorageAttributedToSelf CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testStorageAttribution_acquireLease CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testCommitBlobAfterIdleMaintenance CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testExpiredSessionsDeleted_withPartialData CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowPackageAccess_countLimitExceeded CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testBlobHandleCreation CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testOpenSession_fromAnotherPkg CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowPublicAccess CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowPublicAccess_abandonedSession CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testStorageAttribution_acquireLease CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowSameSignatureAccess CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowSameSignatureAccess_abandonedSession CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testMixedAccessType CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testMixedAccessType_fromMultiplePackages CtsBlobStoreTestCases:com.android.cts.blob.BlobStoreManagerTest.testAllowPackageAccess None:android.incrementalinstall.cts.IncrementalFeatureTest.testFeatureAvailable CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testSupportedOnDevicesFirstLaunchedWithR CtsSecurityTestCases:android.security.cts.FileIntegrityManagerTest.testCtsReleaseCertificateTrusted None:android.adbmanager.cts.AdbManagerHostDeviceTest.test_isadbWifiSupported		[('/home/gpoor/cts-source/cts/tests/BlobStore/src/com/android/cts/blob/BlobStoreManagerTest.java', 28), ('/home/gpoor/cts-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApkVerityInstallTest.java', 10), ('/home/gpoor/cts-source/cts/hostsidetests/blobstore/test-apps/BlobStoreHostTestHelper/src/com/android/cts/device/blob/DataCleanupTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/blobstore/test-apps/BlobStoreHostTestHelper/src/com/android/cts/device/blob/DataPersistenceTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 2), ('/home/gpoor/cts-source/cts/tests/vr/src/android/vr/cts/VrDisplayTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalFeatureTest.java', 2), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/tests/vr/src/android/vr/cts/VrCpuTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/text/src/android/text/cts/FontCoverageTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/AudioRecord_BufferSizeTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/HeifWriterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/statsd/apps/statsdapp/src/com/android/server/cts/device/statsd/AtomTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/VulkanFeaturesTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/adbmanager/src/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 1)]	[('/com/android/cts/blob/BlobStoreManagerTest.java', 32), ('/android/appsecurity/cts/ApkVerityInstallTest.java', 11), ('/com/android/cts/device/blob/DataCleanupTest.java', 6), ('/com/android/cts/device/blob/DataPersistenceTest.java', 4), ('/android/security/cts/FileIntegrityManagerTest.java', 4), ('/android/provider/cts/contacts/ContactsContract_RawContactsTest.java', 3), ('/android/vr/cts/VrDisplayTest.java', 3), ('/android/incrementalinstall/cts/IncrementalFeatureTest.java', 3), ('/android/app/cts/SystemFeaturesTest.java', 2), ('/android/vr/cts/VrCpuTest.java', 2), ('/android/text/cts/FontCoverageTest.java', 2), ('/android/media/cts/AudioRecord_BufferSizeTest.java', 2), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/content/cts/AvailableIntentsTest.java', 2), ('/android/media/cts/HeifWriterTest.java', 2), ('/android/hardware/camera2/cts/LogicalCameraDeviceTest.java', 2), ('/com/android/server/cts/device/statsd/AtomTests.java', 2), ('/android/graphics/cts/VulkanFeaturesTest.java', 2), ('/android/adbmanager/cts/AdbManagerHostDeviceTest.java', 2)]	"[('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_DM)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 3), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[ verifyFsverityInstall(BASE_APK, SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[essAllowed());             }         } finally {             blobData.delete();         }     }     ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[ctSuccess */);             }         } finally {             blobData.delete();         }     }     ])', 2), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[rifyBlob(pfd);             }         } finally {             blobData.delete();         }     }     ])', 2), ('([1:/android/app/cts/SystemFeaturesTest.java]:[C-1-1]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[BlobStoreManager.session]:[1]:method_text:[ssion, 0, PARTIAL_FILE_LENGTH_BYTES);         }         addSessionIdToResults(sessionId);     }     ])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[BlobStoreManager.session]:[1]:method_text:[            assertThat(session.getSize()).isEqualTo(PARTIAL_FILE_LENGTH_BYTES);         }     }     ])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[BlobStoreManager.session]:[1]:method_text:[       .isEqualTo(0);         }         addBlobHandleToResults(blobData.getBlobHandle());     }     ])', 1), ('([1:/com/android/cts/device/blob/DataCleanupTest.java]:[allowPublicAccess()]:[1]:method_text:[       .isEqualTo(0);         }         addBlobHandleToResults(blobData.getBlobHandle());     }     ])', 1), ('([1:/android/vr/cts/VrCpuTest.java]:[C-1-1]:[1]:method_text:[ic VrCpuTest() {         super(CtsActivity.class);     }     @CddTest(requirement=""7.9.2/C-1-1"")    ])', 1), ('([1:/com/android/cts/device/blob/DataPersistenceTest.java]:[BlobStoreManager.session]:[1]:method_text:[UT_WAIT_FOR_IDLE_MS),                 Exception.class, android.Manifest.permission.DUMP);     }     ])', 1), ('([1:/com/android/cts/device/blob/DataPersistenceTest.java]:[BlobStoreManager.session]:[1]:method_text:[BYTES,                     blobData.getFileSize() - PARTIAL_FILE_LENGTH_BYTES);         }     }     ])', 1), ('([1:/com/android/cts/device/blob/DataPersistenceTest.java]:[BlobStoreManager.session]:[1]:method_text:[_COMMIT_CALLBACK_MS, TimeUnit.MILLISECONDS))                     .isEqualTo(0);         }     }     ])', 1), ('([1:/android/text/cts/FontCoverageTest.java]:[C-1-1]:[1]:method_text:[      }          // Unknown locale. Return an empty set.         return UnicodeSet.EMPTY;     }     ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[FIX)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[erifyFsverityInstall(BASE_APK, BASE_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[_APK, BASE_APK_DM, SPLIT_APK, SPLIT_APK_DM);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[APK)                 .runExpectingFailure();     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/appsecurity/cts/ApkVerityInstallTest.java]:[C-1-1]:[1]:method_text:[);         verifyFsverityInstall(SPLIT_APK);     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/media/cts/AudioRecord_BufferSizeTest.java]:[C-1-1]:[1]:method_text:[   48000,     };      private AudioRecord mAudioRecord;      @CddTest(requirement=""5.4.1/C-1-1"")    ])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-1-1]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-1-1]:[1]:method_text:[ck camera orientation against device orientation      */     @CddTest(requirement=""7.5.5/C-1-1"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[/base/core/res/res/values/config.xml.      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/provider/cts/contacts/ContactsContract_RawContactsTest.java]:[C-1-1]:[1]:method_text:[ctCreate_noAccountUsesLocalAccount()}      */     @CddTest(requirement=""3.18/C-1-1,C-1-2,C-1-3"")    ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[C-1-1]:[1]:method_text:[ntent.ACTION_POWER_USAGE_SUMMARY));         }     }      @CddTest(requirement = ""7.4.2.6/C-1-1"")    ])', 1), ('([1:/android/media/cts/HeifWriterTest.java]:[C-1-1]:[1]:method_text:[ediaFormat#MIMETYPE_IMAGE_ANDROID_HEIC} encoder.      */     @CddTest(requirement=""5.1.4/C-1-1"")    ])', 1), ('([1:/android/hardware/camera2/cts/LogicalCameraDeviceTest.java]:[C-1-1]:[1]:method_text:[htPixels/dm.ydpi,2);         return Math.sqrt(widthInInchesSquared + heightInInchesSquared);     } }])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ Tests that the refresh rate is at least 60Hz.      */      @CddTest(requirement=""7.9.2/C-1-15"")    ])', 1), ('([1:/android/vr/cts/VrDisplayTest.java]:[C-1-1]:[1]:method_text:[ that the display resolution is at least 1080p.      */     @CddTest(requirement=""7.9.2/C-1-14"")    ])', 1), ('([1:/com/android/server/cts/device/statsd/AtomTests.java]:[BlobStoreManager.session]:[1]:method_text:[   callback.get(BLOB_COMMIT_CALLBACK_TIMEOUT_SEC, TimeUnit.SECONDS)).isEqualTo(0);         }     } }])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[BlobHandle());             }         } finally {             blobData.delete();         }     }     ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[2]:method_text:[kg(sessionId, HELPER_PKG2));         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[ger.openSession(sessionId));         } finally {             blobData.delete();         }     }     ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[2]:method_text:[ssion.close();             }         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[.getBytes()));             }         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[rite(0L, 0L));             }         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[esults.add(result);             }         }         assertThat(invalidResults).isEmpty();     }     ])', 1), ('([3:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[3]:method_text:[ForUid.getDataBytes() - beforeStatsForUid.getDataBytes())                 .isEqualTo(0L);     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[    .isEqualTo(0L);         } finally {             serviceConnection.unbind();         }     }     ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[2]:method_text:[ze());             commitSession(sessionId, session, blobData.getBlobHandle());         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[;         }, Pair.create(KEY_SESSION_EXPIRY_TIMEOUT_MS, String.valueOf(waitDurationMs)));     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[1]:method_text:[    }         }, Pair.create(KEY_MAX_BLOB_ACCESS_PERMITTED_PACKAGES, String.valueOf(1)));     }     ])', 1), ('([4:/com/android/cts/blob/BlobStoreManagerTest.java]:[BlobStoreManager.session]:[4]:method_text:[) {             mCommandReceiver = null;             mContext.unbindService(this);         }     } }])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[2]:method_text:[kg(sessionId, HELPER_PKG2));         } finally {             blobData.delete();         }     }     ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[2]:method_text:[cess(blobData, HELPER_PKG3);         } finally {             blobData.delete();         }     }     ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[2]:method_text:[essAllowed());             }         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPublicAccess()]:[1]:method_text:[    .isEqualTo(0L);         } finally {             serviceConnection.unbind();         }     }     ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[2]:method_text:[cess(blobData, HELPER_PKG3);         } finally {             blobData.delete();         }     }     ])', 1), ('([2:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[2]:method_text:[essAllowed());             }         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[1]:method_text:[cess(blobData, HELPER_PKG3);         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowSameSignatureAccess()]:[1]:method_text:[1.unbind();             connection2.unbind();             connection3.unbind();         }     }     ])', 1), ('([1:/com/android/cts/blob/BlobStoreManagerTest.java]:[allowPackageAccess()]:[1]:method_text:[cess(blobData, HELPER_PKG3);         } finally {             blobData.delete();         }     }     ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[tLaunchApiLevel() >= 30 /* Build.VERSION_CODES.R */);     }      @CddTest(requirement=""4/C-1-1"")    ])', 1), ('([1:/android/incrementalinstall/cts/IncrementalFeatureTest.java]:[C-1-1]:[1]:method_text:[ce().hasFeature(FEATURE_INCREMENTAL_DELIVERY));     }      @CddTest(requirement=""4/C-1-1,C-3-1"")    ])', 1), ('([1:/android/graphics/cts/VulkanFeaturesTest.java]:[C-1-1]:[1]:method_text:[;         mBestDevice = getBestDevice();     }     @CddTest(requirement = ""7.1.4.2/C-1-1,C-2-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");     }       @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[tyManager.isApkVeritySupported());         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")    ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[C-1-1]:[1]:method_text:[Trusted);         }     }      @CddTest(requirement=""9.10/C-0-3,C-1-1"")     @RestrictedBuildTest    ])', 1), ('([1:/android/adbmanager/cts/AdbManagerHostDeviceTest.java]:[C-1-1]:[1]:method_text:[;         Assert.assertEquals(expected, Boolean.parseBoolean(result.getStdout().trim()));     }     ])', 1)]"					
255:740418) 9.8.9  . Installed apps	9.8.9	C-0-1		[('android.opengl.cts.OpenGlEsVersionTest', 2), ('android.SustainedPerformance.cts.SustainedPerformanceHostTest', 1), ('android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest', 1), ('android.security.cts.EncryptionTest', 1)]	[('getSimpleName', 1), ('setup', 1), ('getActivity', 1)]	[('CtsOpenGLTestCases', 2), ('CtsCameraTestCases', 1), ('CtsSecurityTestCases', 1)]		9.8.9/C-0-1	"""C-0-1] MUST NOT expose to any app targeting API level 30 or above details about any other installed app, unless the app is already able to see details about the other installed app through the managed APIs. This includes but is not limited to details exposed by any custom APIs added by the device implementer, or accessible via the filesystem. <h4 id="""	09080900.670001	9.8.9/C-0-1 C-0-1 9.8.9				[('C-0-1', 5)]		CtsOpenGLTestCases:android.opengl.cts.OpenGlEsVersionTest.testRequiredEglExtensionsForWideColorDisplay None:android.SustainedPerformance.cts.SustainedPerformanceHostTest.currentTimeMillis CtsCameraTestCases:android.hardware.camera2.cts.ExtendedCameraCharacteristicsTest.testMonochromeCharacteristics CtsSecurityTestCases:android.security.cts.EncryptionTest.aesIsFast		[('/home/gpoor/cts-source/cts/tests/tests/opengl/src/android/opengl/cts/OpenGlEsVersionTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/sustainedperf/src/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 1), ('/home/gpoor/cts-source/cts/tests/camera/src/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/security/src/android/security/cts/EncryptionTest.java', 1)]	[('/android/opengl/cts/OpenGlEsVersionTest.java', 3), ('/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java', 2), ('/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java', 2), ('/android/security/cts/EncryptionTest.java', 2)]	"[('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-0-1]:[1]:method_text:[       mActivity = mActivityRule.getActivity();     }      @CddTest(requirement=""7.1.4.1/C-0-1"")    ])', 1), ('([1:/android/opengl/cts/OpenGlEsVersionTest.java]:[C-0-1]:[1]:method_text:[ption e) {             Log.e(TAG, ""Caught exception: "" + e);         }         return false;     } }])', 1), ('([1:/android/SustainedPerformance/cts/SustainedPerformanceHostTest.java]:[C-0-1]:[1]:method_text:[ecuteShellCommand(""am broadcast -a android.intent.action.AIRPLANE_MODE --ez state true"");     }     ])', 1), ('([1:/android/hardware/camera2/cts/ExtendedCameraCharacteristicsTest.java]:[C-0-1]:[1]:method_text:[acy API are also      * accessible via Camera2.      */     @CddTest(requirement=""7.5.4/C-0-11"")    ])', 1), ('([1:/android/security/cts/EncryptionTest.java]:[C-0-1]:[1]:method_text:[able     // to instant apps     @AppModeFull     @CddTest(requirement=""9.9.2/C-0-1,C-0-2,C-0-3"")    ])', 1)]"					
264:754835) 9.9.4  . Resume on Reboot	9.9.4	C-0-1		[('android.media.cts.MediaMetadataRetrieverTest', 28), ('android.media.cts.ParamsTest', 18), ('android.app.cts.AlertDialog_BuilderTest', 14), ('android.app.cts.SystemFeaturesTest', 12), ('android.media.mediaparser.cts.MediaParserTest', 12), ('android.webkit.cts.WebSettingsTest', 10), ('android.server.wm.WindowManager_LayoutParamsTest', 8), ('android.media.cts.MediaCodecListTest', 5), ('android.os.cts.SeccompTest', 4), ('android.accessibilityservice.cts.AccessibilityWindowReportingTest', 3), ('android.view.cts.ViewGroup_LayoutParamsTest', 3), ('android.os.cts.StrictModeTest', 3), ('android.content.pm.cts.InstantAppTest', 2), ('android.net.wifi.cts.WifiFrameworkInitializerTest', 2), ('android.content.pm.cts.ApplicationInfoTest', 2), ('android.graphics.cts.BasicVulkanGpuTest', 2), ('android.content.pm.cts.shortcut.backup.publisher1.ShortcutManagerPostBackupTest', 2), ('android.content.cts.ClipDescriptionTest', 2), ('android.media.tv.tuner.cts.TunerFilterTest', 1), ('android.renderscript.cts.generated.TestNativeSinpi', 1), ('dot.junit.opcodes.return_object.Test_return_object', 1), ('android.permission.cts.PermissionManagerTest', 1), ('android.media.cts.MidiSoloTest', 1), ('android.location.cts.gnss.GnssMeasurementWhenNoLocationTest', 1), ('android.os.cts.EnvironmentHostTests', 1), ('android.renderscript.cts.generated.TestFastNormalize', 1), ('android.media.cts.ResourceManagerTest', 1), ('dot.junit.opcodes.invoke_direct.Test_invoke_direct', 1), ('android.provider.cts.contacts.ContactsProvider2_AccountRemovalTest', 1), ('android.keystore.cts.RsaSignaturePerformanceTest', 1)]	[('destroy', 41), ('toString', 37), ('setUp', 21), ('tearDown', 14), ('StringBuilder', 12), ('getContext', 10), ('ArgumentsFloatFloat', 5), ('getTargetContext', 5), ('ArgumentsHalfHalf', 4), ('getInstrumentation', 4), ('updateTitle', 3), ('getPackageManager', 3), ('ArgumentsFloatNFloatN', 3), ('getSystemAvailableFeatures', 2), ('getCodecInfos', 2), ('data', 2), ('getApplicationContext', 2), ('getThreadPolicy', 2), ('getVmPolicy', 2), ('run', 2), ('checkNativeSinpiFloatFloat', 1), ('checkNativeSinpiFloat2Float2', 1), ('checkNativeSinpiFloat3Float3', 1), ('checkNativeSinpiFloat4Float4', 1), ('checkNativeSinpiHalfHalf', 1), ('checkNativeSinpiHalf2Half2', 1), ('checkNativeSinpiHalf3Half3', 1), ('checkNativeSinpiHalf4Half4', 1), ('getNetworkImageHtml', 1), ('canBeFound', 1), ('hasExpandedCodecInfo', 1), ('getMaxMessageSize', 1), ('onFlush', 1), ('getPackageName', 1), ('AccessibilityDumpOnFailureRule', 1), ('oneTimeSetup', 1), ('getUiAutomation', 1), ('getServiceInfo', 1), ('finalTearDown', 1), ('setup', 1), ('getDevice', 1), ('checkFastNormalizeFloatFloat', 1), ('checkFastNormalizeFloat2Float2', 1), ('checkFastNormalizeFloat3Float3', 1), ('checkFastNormalizeFloat4Float4', 1), ('wakeUp', 1), ('getContentResolver', 1), ('getResources', 1), ('MediaMetadataRetriever', 1), ('release', 1), ('getExternalStorageDirectory', 1)]	[('CtsMediaTestCases', 53), ('CtsAppTestCases', 26), ('CtsMediaParserTestCases', 12), ('CtsWebkitTestCases', 10), ('CtsWindowManagerDeviceTestCases', 8), ('CtsOsHostTestCases', 7), ('CtsContentTestCases', 6), ('CtsAccessibilityServiceTestCases', 3), ('CtsViewTestCases', 3), ('CtsRenderscriptTestCases', 2), ('CtsWifiTestCases', 2), ('CtsGraphicsTestCases', 2), ('CtsTvTestCases', 1), ('CtsPermissionTestCases', 1), ('CtsLocationGnssTestCases', 1), ('CtsContactsProviderTestCases', 1), ('CtsKeystoreTestCases', 1)]		9.9.4/C-0-1	"""C-0-1] CE storage MUST NOT be readable even for the attacker who physically has the device and then has these capabilities and limitations: Can use the signing key of any vendor or company to sign arbitrary messages. Can cause an OTA to be received by the device. Can modify the operation of any hardware (AP, flash etc) except as detailed below, but such modification involves a delay of at least an hour and a power cycle that destroys RAM contents. Cannot modify the operation of tamper-resistant hardware (eg Titan M). Cannot read the RAM of the live device. Cannot obtain the user’s credential (PIN, pattern, password) or otherwise cause it to be entered. By way of example, a device implementation that implements and complies with all of the descriptions found here will be compliant with | C-0-1]. <h3 id="""	09090400.670001	OTA PIN 9.9.4/C-0-1 RAM C-0-1 9.9.4				[('RAM', 100), ('OTA', 36), ('PIN', 8)]		CtsTvTestCases:android.media.tv.tuner.cts.TunerFilterTest.testRecordSettings None:dot.junit.opcodes.return_object.Test_return_object.testN4 CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.WebSettingsTest CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAccessJavaScriptCanOpenWindowsAutomatically CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testAppCacheEnabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testDatabaseDisabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testLocalImageLoads CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testIframesWhenAccessFromFileURLsEnabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testIframesWhenAccessFromFileURLsDisabled CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testEnableSafeBrowsing CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testForceDark_default CtsWebkitTestCases:android.webkit.cts.WebSettingsTest.testForceDark_rendersDark CtsMediaTestCases:android.media.cts.ParamsTest.testSyncParamsConstants CtsMediaTestCases:android.media.cts.ParamsTest.testSyncParamsDefaults CtsMediaTestCases:android.media.cts.ParamsTest.testSyncParamsAudioAdjustMode CtsMediaTestCases:android.media.cts.ParamsTest.testSyncParamsSyncSource CtsMediaTestCases:android.media.cts.ParamsTest.testSyncParamsTolerance CtsMediaTestCases:android.media.cts.ParamsTest.testSyncParamsFrameRate CtsMediaTestCases:android.media.cts.ParamsTest.testSyncParamsMultipleSettings CtsMediaTestCases:android.media.cts.ParamsTest.testPlaybackParamsConstants CtsMediaTestCases:android.media.cts.ParamsTest.testPlaybackParamsDefaults CtsMediaTestCases:android.media.cts.ParamsTest.testPlaybackParamsAudioFallbackMode CtsMediaTestCases:android.media.cts.ParamsTest.testPlaybackParamsAudioStretchMode CtsMediaTestCases:android.media.cts.ParamsTest.testPlaybackParamsPitch CtsMediaTestCases:android.media.cts.ParamsTest.testPlaybackParamsSpeed CtsMediaTestCases:android.media.cts.ParamsTest.testPlaybackParamsMultipleSettings CtsMediaTestCases:android.media.cts.ParamsTest.testPlaybackParamsDescribeContents CtsMediaTestCases:android.media.cts.ParamsTest.testPlaybackParamsWriteToParcel CtsContentTestCases:android.content.pm.cts.InstantAppTest.testInstantAppInstallerQuery CtsAppTestCases:android.app.cts.SystemFeaturesTest.testBluetoothFeature CtsAppTestCases:android.app.cts.SystemFeaturesTest.testCameraFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testLiveWallpaperFeature CtsAppTestCases:android.app.cts.SystemFeaturesTest.testLocationFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testNfcFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testSipFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testTouchScreenFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testAudioOutputFeature CtsAppTestCases:android.app.cts.SystemFeaturesTest.testCameraFeatures CtsAppTestCases:android.app.cts.SystemFeaturesTest.testLowRamFeature CtsAppTestCases:android.app.cts.SystemFeaturesTest.testSipFeatures CtsMediaTestCases:android.media.cts.MediaCodecListTest.testMediaCodecXmlFileExist CtsMediaTestCases:android.media.cts.MediaCodecListTest.testAudioCodecChannels CtsMediaTestCases:android.media.cts.MediaCodecListTest.testCodecCharacterizations CtsMediaTestCases:android.media.cts.MediaCodecListTest.testRegularMediaCodecListIsASubsetOfAll CtsMediaTestCases:android.media.cts.MediaCodecListTest.testVideoPerformancePointsSanity CtsWifiTestCases:android.net.wifi.cts.WifiFrameworkInitializerTest.registerServiceWrappers CtsWifiTestCases:android.net.wifi.cts.WifiFrameworkInitializerTest.testRegisterServiceWrappers_failsWhenCalledOutsideOfSystemServiceRegistry CtsContentTestCases:android.content.pm.cts.ApplicationInfoTest.testPartiallyDirectBootAwareAppIsEncryptionAware CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.perDisplayFocusEnabled CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.testWindowAddedMovedAndRemoved_generatesEventsForAllThree CtsAccessibilityServiceTestCases:android.accessibilityservice.cts.AccessibilityWindowReportingTest.testGetAnchorForDropDownForAutoCompleteTextView_returnsTextViewNode CtsViewTestCases:android.view.cts.ViewGroup_LayoutParamsTest.testConstructor CtsViewTestCases:android.view.cts.ViewGroup_LayoutParamsTest.testSetBaseAttributes CtsMediaTestCases:android.media.cts.ResourceManagerTest.ResourceManagerTest None:dot.junit.opcodes.invoke_direct.Test_invoke_direct.testN2 None:android.content.pm.cts.shortcut.backup.publisher1.ShortcutManagerPostBackupTest.testWithUninstall None:android.content.pm.cts.shortcut.backup.publisher1.ShortcutManagerPostBackupTest.testWithNoUninstall CtsOsHostTestCases:android.os.cts.StrictModeTest.testViolationAcrossBinder CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetIconWithParamInt CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetIconWithParamDrawable CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetPositiveButtonWithParamInt CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetPositiveButtonWithParamCharSequence CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetNegativeButtonWithParamCharSequence CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetNegativeButtonWithParamInt CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetNeutralButtonWithParamInt CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetNeutralButtonWithParamCharSequence CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetItemsWithParamInt CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetItemsWithParamCharSequence CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetMultiChoiceItemsWithParamInt CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetMultiChoiceItemsWithParamCharSequence CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetSingleChoiceItemsWithParamInt CtsAppTestCases:android.app.cts.AlertDialog_BuilderTest.testSetSingleChoiceItemsWithParamCharSequence CtsMediaParserTestCases:android.media.mediaparser.cts.MediaParserTest.testSupportsParameter CtsMediaParserTestCases:android.media.mediaparser.cts.MediaParserTest.testSetKnownParameters CtsMediaParserTestCases:android.media.mediaparser.cts.MediaParserTest.testSetUnknownParameter CtsMediaParserTestCases:android.media.mediaparser.cts.MediaParserTest.testLackOfSupportForUnsupportedParameter CtsMediaParserTestCases:android.media.mediaparser.cts.MediaParserTest.testFlacNoMinMaxFrameSize CtsMediaParserTestCases:android.media.mediaparser.cts.MediaParserTest.testMp3WithNoSeekTableVariableFrameSize CtsMediaParserTestCases:android.media.mediaparser.cts.MediaParserTest.testAdtsTruncatedWithConstantBitrateSeeking CtsMediaParserTestCases:android.media.mediaparser.cts.MediaParserTest.testAdtsWithConstantBitrateSeeking CtsMediaParserTestCases:android.media.mediaparser.cts.MediaParserTest.testTsWithH264DetectAccessUnits CtsMediaParserTestCases:android.media.mediaparser.cts.MediaParserTest.testTsWithH264DtsAudio CtsMediaParserTestCases:android.media.mediaparser.cts.MediaParserTest.testMp4FragmentedOutOfBandCrypto CtsWindowManagerDeviceTestCases:android.server.wm.WindowManager_LayoutParamsTest.testConstructor CtsWindowManagerDeviceTestCases:android.server.wm.WindowManager_LayoutParamsTest.testCopyFrom CtsWindowManagerDeviceTestCases:android.server.wm.WindowManager_LayoutParamsTest.testDescribeContents CtsWindowManagerDeviceTestCases:android.server.wm.WindowManager_LayoutParamsTest.testAccessTitle CtsWindowManagerDeviceTestCases:android.server.wm.WindowManager_LayoutParamsTest.testToString CtsWindowManagerDeviceTestCases:android.server.wm.WindowManager_LayoutParamsTest.testWriteToParcel CtsContentTestCases:android.content.cts.ClipDescriptionTest.testGetTimestamp CtsKeystoreTestCases:android.keystore.cts.RsaSignaturePerformanceTest.testSHA512withRSA_PSS CtsOsHostTestCases:android.os.cts.SeccompTest.testKernelBasicTests CtsOsHostTestCases:android.os.cts.SeccompTest.testKernelTSYNCTests CtsOsHostTestCases:android.os.cts.SeccompTest.testIsolatedServicePolicy CtsOsHostTestCases:android.os.cts.SeccompTest.testViolateIsolatedServicePolicy CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.exists CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.test3gppMetadata CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testID3v2Metadata CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testThumbnailHDR10 CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testThumbnailWithRotation CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetFramesAtIndex CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetImageAtIndex CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.test3gppMetadata CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testID3v2Metadata CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testRetrieveFailsIfMediaDataSourceReturnsAnError CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testThumbnailHDR10 CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testThumbnailWithRotation CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetFrameAtTimePreviousSync CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetFrameAtTimeNextSync CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetFrameAtTimeClosestSync CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetFrameAtTimeClosest CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetFrameAtTimePreviousSyncEditList CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetFrameAtTimeNextSyncEditList CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetFrameAtTimeClosestSyncEditList CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetFrameAtTimeClosestEditList CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetFrameAtTimePreviousSyncEmptyNormalEditList CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetFrameAtTimeNextSyncEmptyNormalEditList CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetFrameAtTimeClosestSyncEmptyNormalEditList CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetFrameAtTimeClosestEmptyNormalEditList CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetFrameAtIndex CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetFramesAtIndex CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetScaledFrameAtTimeWithInvalidResolutions CtsMediaTestCases:android.media.cts.MediaMetadataRetrieverTest.testGetScaledFrameAtTime		[('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaMetadataRetrieverTest.java', 28), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ParamsTest.java', 18), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderTest.java', 14), ('/home/gpoor/cts-source/cts/tests/app/src/android/app/cts/SystemFeaturesTest.java', 12), ('/home/gpoor/cts-source/cts/tests/tests/mediaparser/src/android/media/mediaparser/cts/MediaParserTest.java', 12), ('/home/gpoor/cts-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 10), ('/home/gpoor/cts-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowManager_LayoutParamsTest.java', 8), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MediaCodecListTest.java', 5), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/SeccompTest.java', 4), ('/home/gpoor/cts-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/view/src/android/view/cts/ViewGroup_LayoutParamsTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/os/src/android/os/cts/StrictModeTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/InstantAppTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiFrameworkInitializerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/pm/cts/ApplicationInfoTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/graphics/src/android/graphics/cts/BasicVulkanGpuTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher1/src/android/content/pm/cts/shortcut/backup/publisher1/ShortcutManagerPostBackupTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/content/src/android/content/cts/ClipDescriptionTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/tv/src/android/media/tv/tuner/cts/TunerFilterTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestNativeSinpi.java', 1), ('/home/gpoor/cts-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/return_object/Test_return_object.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/permission/src/android/permission/cts/PermissionManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/MidiSoloTest.java', 1), ('/home/gpoor/cts-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/os/src/android/os/cts/EnvironmentHostTests.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/renderscript/src/android/renderscript/cts/generated/TestFastNormalize.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/media/src/android/media/cts/ResourceManagerTest.java', 1), ('/home/gpoor/cts-source/cts/tools/vm-tests-tf/src/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/RsaSignaturePerformanceTest.java', 1)]	[('/android/media/cts/MediaMetadataRetrieverTest.java', 30), ('/android/media/cts/ParamsTest.java', 20), ('/android/app/cts/AlertDialog_BuilderTest.java', 15), ('/android/app/cts/SystemFeaturesTest.java', 14), ('/android/media/mediaparser/cts/MediaParserTest.java', 13), ('/android/webkit/cts/WebSettingsTest.java', 12), ('/android/server/wm/WindowManager_LayoutParamsTest.java', 10), ('/android/media/cts/MediaCodecListTest.java', 8), ('/android/os/cts/StrictModeTest.java', 5), ('/android/os/cts/SeccompTest.java', 5), ('/android/content/pm/cts/InstantAppTest.java', 4), ('/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java', 4), ('/android/view/cts/ViewGroup_LayoutParamsTest.java', 4), ('/android/graphics/cts/BasicVulkanGpuTest.java', 4), ('/android/content/cts/ClipDescriptionTest.java', 4), ('/android/net/wifi/cts/WifiFrameworkInitializerTest.java', 3), ('/android/content/pm/cts/ApplicationInfoTest.java', 3), ('/android/content/pm/cts/shortcut/backup/publisher1/ShortcutManagerPostBackupTest.java', 3), ('/android/media/tv/tuner/cts/TunerFilterTest.java', 2), ('/android/renderscript/cts/generated/TestNativeSinpi.java', 2), ('/dot/junit/opcodes/return_object/Test_return_object.java', 2), ('/android/permission/cts/PermissionManagerTest.java', 2), ('/android/media/cts/MidiSoloTest.java', 2), ('/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java', 2), ('/android/os/cts/EnvironmentHostTests.java', 2), ('/android/renderscript/cts/generated/TestFastNormalize.java', 2), ('/android/media/cts/ResourceManagerTest.java', 2), ('/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java', 2), ('/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java', 2), ('/android/keystore/cts/RsaSignaturePerformanceTest.java', 2)]	"[('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[RAM]:[1]:method_text:[ener, times(1)).onDismiss(mDialog);         verifyNoMoreInteractions(mOnDismissListener);     }     ])', 5), ('([7:/android/media/cts/ParamsTest.java]:[RAM]:[7]:method_text:[y { fail(""got "" + p.getFrameRate());       } catch (IllegalStateException e) {}         }     }     ])', 2), ('([6:/android/media/cts/ParamsTest.java]:[RAM]:[6]:method_text:[{ fail(""got "" + p.getSpeed());             } catch (IllegalStateException e) {}         }     }     ])', 2), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[RAM]:[1]:method_text:[ = mBuilder.show();             }         });         mInstrumentation.waitForIdleSync();     }     ])', 2), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[RAM]:[1]:method_text:[ultiChoiceClickListener);         assertEquals(items[0], mListView.getItemAtPosition(0));     }     ])', 2), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[RAM]:[1]:method_text:[tener, times(1)).onClick(mDialog, 0);         verifyNoMoreInteractions(mOnClickListener);     }     ])', 2), ('([2:/android/media/cts/MediaMetadataRetrieverTest.java]:[OTA]:[2]:method_text:[                 mRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_WRITER));     }     ])', 2), ('([4:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[4]:method_text:[                 mRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_WRITER));     }     ])', 2), ('([2:/android/media/tv/tuner/cts/TunerFilterTest.java]:[RAM]:[2]:method_text:[ype());         assertEquals(RecordSettings.SC_INDEX_I_FRAME, settings.getScIndexMask());     }     ])', 1), ('([1:/android/renderscript/cts/generated/TestNativeSinpi.java]:[RAM]:[1]:method_text:[ +                 (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);     }     ])', 1), ('([1:/dot/junit/opcodes/return_object/Test_return_object.java]:[RAM]:[1]:method_text:[    }      /**      * @title check that frames are discarded and reinstananted correctly      */    ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[OTA]:[1]:method_text:[>.<minor>      * Chrome/<major>.<minor>.<branch>.<build>[ Mobile] Safari/<major>.<minor>      */    ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[OTA]:[1]:method_text:[Url(TestHtmlConstants.POPUP_URL));         WebkitUtils.waitForFuture(createWindowFuture);     }     ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[OTA]:[1]:method_text:[res creating a     // webChromeClient and listening to Quota callbacks, which is not documented.    ])', 1), ('([5:/android/webkit/cts/WebSettingsTest.java]:[OTA]:[5]:method_text:[test should be reflected in that test as necessary. See http://go/modifying-webview-cts.      */    ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[RAM]:[1]:method_text:[that javascript cross-domain request permissions matches file domain settings     // for iframes    ])', 1), ('([5:/android/webkit/cts/WebSettingsTest.java]:[RAM]:[5]:method_text:[that javascript cross-domain request permissions matches file domain settings     // for iframes    ])', 1), ('([4:/android/webkit/cts/WebSettingsTest.java]:[RAM]:[4]:method_text:[     // Verify that enabling file access from file URLs enable XmlHttpRequest (XHR) across files    ])', 1), ('([5:/android/webkit/cts/WebSettingsTest.java]:[RAM]:[5]:method_text:[ram.put(pixel, histogram.getOrDefault(pixel, 0) + 1);         }         return histogram;     }     ])', 1), ('([7:/android/webkit/cts/WebSettingsTest.java]:[RAM]:[7]:method_text:[          params.width = width;             webView.setLayoutParams(params);         });      }     ])', 1), ('([10:/android/webkit/cts/WebSettingsTest.java]:[RAM]:[10]:method_text:[e assertions.             WebkitUtils.waitForNextQueueElement(mReceivedIconQueue);         }     } }])', 1), ('([1:/android/permission/cts/PermissionManagerTest.java]:[OTA]:[1]:method_text:[nManagerTest {     private final Context mContext = InstrumentationRegistry.getTargetContext();     ])', 1), ('([1:/android/media/cts/ParamsTest.java]:[OTA]:[1]:method_text:[float FLOAT_TOLERANCE = .00001f;     private static final float MAX_DEFAULT_TOLERANCE = 1/24.f;     ])', 1), ('([6:/android/media/cts/ParamsTest.java]:[RAM]:[6]:method_text:[float FLOAT_TOLERANCE = .00001f;     private static final float MAX_DEFAULT_TOLERANCE = 1/24.f;     ])', 1), ('([8:/android/media/cts/ParamsTest.java]:[RAM]:[8]:method_text:[DIO_ADJUST_MODE_STRETCH);         assertEquals(2, SyncParams.AUDIO_ADJUST_MODE_RESAMPLE);     }     ])', 1), ('([6:/android/media/cts/ParamsTest.java]:[RAM]:[6]:method_text:[        try { fail(""got "" + p.getFrameRate());       } catch (IllegalStateException e) {}     }     ])', 1), ('([7:/android/media/cts/ParamsTest.java]:[RAM]:[7]:method_text:[equent iterations             p = new SyncParams();             update = false;         }     }     ])', 1), ('([8:/android/media/cts/ParamsTest.java]:[RAM]:[8]:method_text:[     } else {                 assertTrue(p.getFrameRate() < 0.f);             }         }     }     ])', 1), ('([12:/android/media/cts/ParamsTest.java]:[RAM]:[12]:method_text:[_TOLERANCE);             assertEquals(25.f, p.getFrameRate(), FLOAT_TOLERANCE);         }     }     ])', 1), ('([6:/android/media/cts/ParamsTest.java]:[RAM]:[6]:method_text:[IO_FALLBACK_MODE_MUTE);         assertEquals(2, PlaybackParams.AUDIO_FALLBACK_MODE_FAIL);     }     ])', 1), ('([4:/android/media/cts/ParamsTest.java]:[RAM]:[4]:method_text:[p.getPitch(), FLOAT_TOLERANCE);         assertEquals(1.f, p.getSpeed(), FLOAT_TOLERANCE);     }     ])', 1), ('([5:/android/media/cts/ParamsTest.java]:[RAM]:[5]:method_text:[nt iterations             p = new PlaybackParams();             update = false;         }     }     ])', 1), ('([4:/android/media/cts/ParamsTest.java]:[RAM]:[4]:method_text:[tateException e) {}             assertEquals(f, p.getSpeed(), FLOAT_TOLERANCE);         }     }     ])', 1), ('([7:/android/media/cts/ParamsTest.java]:[RAM]:[7]:method_text:[LOAT_TOLERANCE);             assertEquals(25.f, p.getSpeed(), FLOAT_TOLERANCE);         }     }     ])', 1), ('([3:/android/media/cts/ParamsTest.java]:[RAM]:[3]:method_text:[  PlaybackParams p = new PlaybackParams();         assertEquals(0, p.describeContents());     }     ])', 1), ('([7:/android/media/cts/ParamsTest.java]:[RAM]:[7]:method_text:[, q.getPitch());         assertEquals(p.getSpeed(), q.getSpeed());         parcel.recycle();     } }])', 1), ('([1:/android/content/pm/cts/InstantAppTest.java]:[OTA]:[1]:method_text:[anager = getContext().getPackageManager();     }      /** Ensure only one resolver is defined */    ])', 1), ('([1:/android/content/pm/cts/InstantAppTest.java]:[PIN]:[1]:method_text:[ctivities(intent, resolveFlags);         assertTrue(matches == null || matches.size() <= 1);     } }])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[OTA]:[1]:method_text:[     } else {             assertNotAvailable(PackageManager.FEATURE_BLUETOOTH);         }     }     ])', 1), ('([16:/android/app/cts/SystemFeaturesTest.java]:[OTA]:[16]:method_text:[          if (camera != null) {                 camera.release();             }         }     }     ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[OTA]:[1]:method_text:[ion e) {             assertNotAvailable(PackageManager.FEATURE_LIVE_WALLPAPER);         }     }     ])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[OTA]:[2]:method_text:[else {             assertNotAvailable(PackageManager.FEATURE_LOCATION_NETWORK);         }     }     ])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[OTA]:[2]:method_text:[            assertNotAvailable(PackageManager.FEATURE_NFC_HOST_CARD_EMULATION);         }     }     ])', 1), ('([5:/android/app/cts/SystemFeaturesTest.java]:[OTA]:[5]:method_text:[ * Check that the {@link TelephonyManager#getPhoneType()} matches the reported features.      */    ])', 1), ('([1:/android/app/cts/SystemFeaturesTest.java]:[OTA]:[1]:method_text:[RE_TOUCHSCREEN);             assertAvailable(PackageManager.FEATURE_FAKETOUCH);         }     }     ])', 1), ('([2:/android/app/cts/SystemFeaturesTest.java]:[OTA]:[2]:method_text:[ssertAvailable(feature);         } else {             assertNotAvailable(feature);         }     } }])', 1), ('([7:/android/app/cts/SystemFeaturesTest.java]:[RAM]:[7]:method_text:[properly prefixed with ""android."" that are not defined in      * {@link PackageManager}.      */    ])', 1), ('([10:/android/app/cts/SystemFeaturesTest.java]:[RAM]:[10]:method_text:[          if (camera != null) {                 camera.release();             }         }     }     ])', 1), ('([4:/android/app/cts/SystemFeaturesTest.java]:[RAM]:[4]:method_text:[       } else {             assertAvailable(PackageManager.FEATURE_RAM_NORMAL);         }     }     ])', 1), ('([3:/android/app/cts/SystemFeaturesTest.java]:[RAM]:[3]:method_text:[ * Check that the {@link TelephonyManager#getPhoneType()} matches the reported features.      */    ])', 1), ('([2:/android/media/cts/MediaCodecListTest.java]:[OTA]:[2]:method_text:[.getCodecInfo(), info);              codec.release();             codec = null;         }     }     ])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[OTA]:[1]:method_text:[              || supportedTypes.contains(MediaFormat.MIMETYPE_AUDIO_EAC3_JOC));         }     }     ])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[OTA]:[1]:method_text:[            assertFalse(info.isHardwareAccelerated() && info.isSoftwareOnly());         }     }     ])', 1), ('([1:/android/media/cts/MediaCodecListTest.java]:[PIN]:[1]:method_text:[           ""some regular codecs are not listed in all codecs"", ix, mRegularInfos.length);     }     ])', 1), ('([8:/android/media/cts/MediaCodecListTest.java]:[RAM]:[8]:method_text:[                  pp2 != pp && pp2.covers(pp));                 }             }         }     }     ])', 1), ('([1:/android/media/cts/MidiSoloTest.java]:[OTA]:[1]:method_text:[id tearDown() throws Exception {         // Test case clean up.         super.tearDown();     }     ])', 1), ('([3:/android/net/wifi/cts/WifiFrameworkInitializerTest.java]:[RAM]:[3]:method_text:[ first initialized. Calling this API at      * any other time should throw an exception.      */    ])', 1), ('([2:/android/net/wifi/cts/WifiFrameworkInitializerTest.java]:[RAM]:[2]:method_text:[            + ""SystemServiceRegistry!"");         } catch (IllegalStateException expected) {}     } }])', 1), ('([2:/android/content/pm/cts/ApplicationInfoTest.java]:[OTA]:[2]:method_text:[ntext() {         return InstrumentationRegistry.getInstrumentation().getTargetContext();     }     ])', 1), ('([1:/android/content/pm/cts/ApplicationInfoTest.java]:[OTA]:[1]:method_text:[ECT_BOOT_AWARE_PACKAGE_NAME, 0);         assertTrue(applicationInfo.isEncryptionAware());     }     ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[RAM]:[1]:method_text:[getResources()                 .getBoolean(android.R.bool.config_perDisplayFocusEnabled);     }     ])', 1), ('([6:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[RAM]:[6]:method_text:[hangedWithChangeTypes(WINDOWS_CHANGE_REMOVED),                 TIMEOUT_ASYNC_PROCESSING);     }     ])', 1), ('([31:/android/accessibilityservice/cts/AccessibilityWindowReportingTest.java]:[RAM]:[31]:method_text:[ = mActivity.getWindow().getDecorView().getWindowToken();         });         return params;     } }])', 1), ('([2:/android/view/cts/ViewGroup_LayoutParamsTest.java]:[RAM]:[2]:method_text:[     public void setup() {         mContext = InstrumentationRegistry.getTargetContext();     }     ])', 1), ('([5:/android/view/cts/ViewGroup_LayoutParamsTest.java]:[RAM]:[5]:method_text:[s temp = new ViewGroup.LayoutParams(320, 480);          new ViewGroup.LayoutParams(temp);     }     ])', 1), ('([9:/android/view/cts/ViewGroup_LayoutParamsTest.java]:[RAM]:[9]:method_text:[, int heightAttr) {             super.setBaseAttributes(a, widthAttr, heightAttr);         }     } }])', 1), ('([1:/android/location/cts/gnss/GnssMeasurementWhenNoLocationTest.java]:[OTA]:[1]:method_text:[ocation fix.      */     @AppModeFull(reason = ""Requires use of extra LocationManager commands"")    ])', 1), ('([1:/android/os/cts/EnvironmentHostTests.java]:[OTA]:[1]:method_text:[et --uid android.cts.environment ""                 + appOp + (val ? "" allow"" : "" deny""));     }     ])', 1), ('([1:/android/graphics/cts/BasicVulkanGpuTest.java]:[OTA]:[1]:method_text:[rmat;      public BasicVulkanGpuTest(String name, int format) {         mFormat = format;     }     ])', 1), ('([5:/android/graphics/cts/BasicVulkanGpuTest.java]:[RAM]:[5]:method_text:[rmat;      public BasicVulkanGpuTest(String name, int format) {         mFormat = format;     }     ])', 1), ('([1:/android/renderscript/cts/generated/TestFastNormalize.java]:[RAM]:[1]:method_text:[ +                 (relaxed ? ""_relaxed"" : """") + "":\\n"" + message.toString(), errorFound);     }     ])', 1), ('([2:/android/media/cts/ResourceManagerTest.java]:[OTA]:[2]:method_text:[, extras);         activity.testReclaimResource(type1, type2);         activity.finish();     }     ])', 1), ('([1:/dot/junit/opcodes/invoke_direct/Test_invoke_direct.java]:[RAM]:[1]:method_text:[t.run());     }       /**      * @title Check that new frame is created by invoke_direct      */    ])', 1), ('([2:/android/content/pm/cts/shortcut/backup/publisher1/ShortcutManagerPostBackupTest.java]:[PIN]:[2]:method_text:[ .haveIds(""ms1"", ""ms2"")                 .areAllPinned()                 .areAllEnabled();     }     ])', 1), ('([1:/android/content/pm/cts/shortcut/backup/publisher1/ShortcutManagerPostBackupTest.java]:[PIN]:[1]:method_text:[anifestShortcuts())                 .haveIds(""ms1"", ""ms2"")                 .areAllEnabled();     } }])', 1), ('([5:/android/os/cts/StrictModeTest.java]:[OTA]:[5]:method_text:[icy);     }      public interface ThrowingRunnable {         void run() throws Exception;     }     ])', 1), ('([1:/android/os/cts/StrictModeTest.java]:[RAM]:[1]:method_text:[icy);     }      public interface ThrowingRunnable {         void run() throws Exception;     }     ])', 1), ('([2:/android/os/cts/StrictModeTest.java]:[RAM]:[2]:method_text:[(info.getStackTrace()).contains(""checkNonSdkApiUsageViolation"");             }         );     }     ])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[RAM]:[1]:method_text:[wing                     return showing;                 }             }         }.run();     }     ])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[RAM]:[1]:method_text:[.array.difficultyLevel);         assertEquals(levels[0], mListView.getItemAtPosition(0));     }     ])', 1), ('([1:/android/app/cts/AlertDialog_BuilderTest.java]:[RAM]:[1]:method_text:[ation.waitForIdleSync();         assertEquals(expect[0], mListView.getItemAtPosition(0));     }     ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[RAM]:[1]:method_text:[public void setUp() {         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.R);     }     ])', 1), ('([21:/android/media/mediaparser/cts/MediaParserTest.java]:[RAM]:[21]:method_text:[UNITS);         assertSupportFor(MediaParser.PARAMETER_TS_ENABLE_HDMV_DTS_AUDIO_STREAMS);     }     ])', 1), ('([46:/android/media/mediaparser/cts/MediaParserTest.java]:[RAM]:[46]:method_text:[,                 /* value= */ ""multi_pmt"",                 /* valueIsIllegal= */ false);     }     ])', 1), ('([9:/android/media/mediaparser/cts/MediaParserTest.java]:[RAM]:[9]:method_text:[     testParameterSetting(parameterName, /* value= */ true, /* valueIsIllegal= */ false);     }     ])', 1), ('([3:/android/media/mediaparser/cts/MediaParserTest.java]:[RAM]:[3]:method_text:[RTED_PARAMETER""))                 .isFalse();         mediaParser.release();     }      // OGG.     ])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[RAM]:[2]:method_text:[throws IOException {         testAssetExtraction(""flac/bear_no_min_max_frame_size.flac"");     }     ])', 1), ('([2:/android/media/mediaparser/cts/MediaParserTest.java]:[RAM]:[2]:method_text:[tion {         testAssetExtraction(""mp3/bear-cbr-variable-frame-size-no-seek-table.mp3"");     }     ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[RAM]:[1]:method_text:[          Collections.singletonMap(MediaParser.PARAMETER_ADTS_ENABLE_CBR_SEEKING, true));     }     ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[RAM]:[1]:method_text:[ections.singletonMap(MediaParser.PARAMETER_ADTS_ENABLE_CBR_SEEKING, true));     }      // AC-3.     ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[RAM]:[1]:method_text:[           Collections.singletonMap(MediaParser.PARAMETER_TS_DETECT_ACCESS_UNITS, true));     }     ])', 1), ('([1:/android/media/mediaparser/cts/MediaParserTest.java]:[RAM]:[1]:method_text:[(                         MediaParser.PARAMETER_TS_ENABLE_HDMV_DTS_AUDIO_STREAMS, true));     }     ])', 1), ('([20:/android/media/mediaparser/cts/MediaParserTest.java]:[RAM]:[20]:method_text:[                       .containsExactlyElementsIn(mediaParserNames);             }         }     } }])', 1), ('([1:/android/server/wm/WindowManager_LayoutParamsTest.java]:[OTA]:[1]:method_text:[ static final int WINDOW_ANIMATIONS = 6;      private WindowManager.LayoutParams mLayoutParams;     ])', 1), ('([6:/android/server/wm/WindowManager_LayoutParamsTest.java]:[RAM]:[6]:method_text:[ static final int WINDOW_ANIMATIONS = 6;      private WindowManager.LayoutParams mLayoutParams;     ])', 1), ('([30:/android/server/wm/WindowManager_LayoutParamsTest.java]:[RAM]:[30]:method_text:[ms                 .mayUseInputMethod(WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM));     }     ])', 1), ('([105:/android/server/wm/WindowManager_LayoutParamsTest.java]:[RAM]:[105]:method_text:[arams));         assertEquals(params.verticalWeight, mLayoutParams.verticalWeight, 0.0f);     }     ])', 1), ('([3:/android/server/wm/WindowManager_LayoutParamsTest.java]:[RAM]:[3]:method_text:[WindowManager.LayoutParams();          assertEquals(0, mLayoutParams.describeContents());     }     ])', 1), ('([8:/android/server/wm/WindowManager_LayoutParamsTest.java]:[RAM]:[8]:method_text:[ams.setTitle(spannedTitle);         assertEquals(spannedTitle, mLayoutParams.getTitle());     }     ])', 1), ('([8:/android/server/wm/WindowManager_LayoutParamsTest.java]:[RAM]:[8]:method_text:[utParams.FLAG_DITHER, PixelFormat.JPEG);         assertNotNull(mLayoutParams.toString());     }     ])', 1), ('([19:/android/server/wm/WindowManager_LayoutParamsTest.java]:[RAM]:[19]:method_text:[terException"");         } catch (NullPointerException e) {             // expected         }     } }])', 1), ('([1:/android/content/cts/ClipDescriptionTest.java]:[OTA]:[1]:method_text:[        mUiDevice.wakeUp();         launchActivity(MockActivity.class);     }      @UiThreadTest    ])', 1), ('([1:/android/content/cts/ClipDescriptionTest.java]:[RAM]:[1]:method_text:[ntext.startActivity(intent);         mUiDevice.wait(Until.hasObject(By.clazz(clazz)), 5000);     } }])', 1), ('([1:/android/provider/cts/contacts/ContactsProvider2_AccountRemovalTest.java]:[OTA]:[1]:method_text:[     @Override     protected void tearDown() throws Exception {         super.tearDown();     }     ])', 1), ('([1:/android/keystore/cts/RsaSignaturePerformanceTest.java]:[RAM]:[1]:method_text:[mSignature.update(getMessage());             mSignature.verify(mMessageSignature);         }     } }])', 1), ('([1:/android/os/cts/SeccompTest.java]:[PIN]:[1]:method_text:[al.ERRNO_capped"", // presently fails */         };         runKernelUnitTestSuite(tests);     }     ])', 1), ('([1:/android/os/cts/SeccompTest.java]:[PIN]:[1]:method_text:[ious operations in an isolated process under a      * fairly restrictive seccomp policy.      */    ])', 1), ('([1:/android/os/cts/SeccompTest.java]:[PIN]:[1]:method_text:[rocess, where the      * process then violates the policy and gets killed by the kernel.      */    ])', 1), ('([1:/android/os/cts/SeccompTest.java]:[PIN]:[1]:method_text:[policy specified by installTestFilter().      */     private native static int getClockBootTime(); }])', 1), ('([3:/android/media/cts/MediaMetadataRetrieverTest.java]:[OTA]:[3]:method_text:[tch (Exception e) {             fail(""Unable to open file"");         }         return ds;     }     ])', 1), ('([7:/android/media/cts/MediaMetadataRetrieverTest.java]:[OTA]:[7]:method_text:[Duration(""getFrameAtTime"");          verifyVideoFrameRotation(thumbnail, targetRotation);     }     ])', 1), ('([9:/android/media/cts/MediaMetadataRetrieverTest.java]:[OTA]:[9]:method_text:[me is shortly before a sync frame      *     5) frame time is shortly after a sync frame      */    ])', 1), ('([8:/android/media/cts/MediaMetadataRetrieverTest.java]:[OTA]:[8]:method_text:[    * The following tests verifies MediaMetadataRetriever.getScaledFrameAtTime behavior.      */    ])', 1), ('([8:/android/media/cts/MediaMetadataRetrieverTest.java]:[OTA]:[8]:method_text:[            Log.i(TAG, String.format(""%s() took %d ms."", functionName, duration));         }     } }])', 1), ('([2:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[2]:method_text:[catch (IOException e) {                 fail(""Can\'t close file"");             }         }     }     ])', 1), ('([3:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[3]:method_text:[Duration(""getFrameAtTime"");          verifyVideoFrameRotation(thumbnail, targetRotation);     }     ])', 1), ('([15:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[15]:method_text:[me is shortly before a sync frame      *     5) frame time is shortly after a sync frame      */    ])', 1), ('([2:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[2]:method_text:[0000, 60 }, { 3200000, 90}};         testGetFrameAtTime(OPTION_PREVIOUS_SYNC, testCases);     }     ])', 1), ('([2:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[2]:method_text:[3000000, 90 }, { 3200000, 120}};         testGetFrameAtTime(OPTION_NEXT_SYNC, testCases);     }     ])', 1), ('([2:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[2]:method_text:[00000, 90 }, { 3200000, 90}};         testGetFrameAtTime(OPTION_CLOSEST_SYNC, testCases);     }     ])', 1), ('([2:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[2]:method_text:[ { 3016000, 88 }, { 3184000, 94}};         testGetFrameAtTime(OPTION_CLOSEST, testCases);     }     ])', 1), ('([2:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[2]:method_text:[ }, { 3133334, 90}};         testGetFrameAtTimeEditList(OPTION_PREVIOUS_SYNC, testCases);     }     ])', 1), ('([2:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[2]:method_text:[ 90 }, { 3133334, 120}};         testGetFrameAtTimeEditList(OPTION_NEXT_SYNC, testCases);     }     ])', 1), ('([2:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[2]:method_text:[0 }, { 3133334, 90}};         testGetFrameAtTimeEditList(OPTION_CLOSEST_SYNC, testCases);     }     ])', 1), ('([2:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[2]:method_text:[34, 88 }, { 3117334, 94}};         testGetFrameAtTimeEditList(OPTION_CLOSEST, testCases);     }     ])', 1), ('([2:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[2]:method_text:[00, 90}};         testGetFrameAtTimeEmptyNormalEditList(OPTION_PREVIOUS_SYNC, testCases);     }     ])', 1), ('([2:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[2]:method_text:[00000, 120}};         testGetFrameAtTimeEmptyNormalEditList(OPTION_NEXT_SYNC, testCases);     }     ])', 1), ('([2:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[2]:method_text:[000, 90}};         testGetFrameAtTimeEmptyNormalEditList(OPTION_CLOSEST_SYNC, testCases);     }     ])', 1), ('([23:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[23]:method_text:[               bitmaps.add(bitmap);             }             return bitmaps;         });     }     ])', 1), ('([12:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[12]:method_text:[               bitmaps.add(bitmap);             }             return bitmaps;         });     }     ])', 1), ('([28:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[28]:method_text:[    * The following tests verifies MediaMetadataRetriever.getScaledFrameAtTime behavior.      */    ])', 1), ('([14:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[14]:method_text:[h());         assertEquals(""Bitmap height is wrong"", expectedHeight, bitmap.getHeight());     }     ])', 1), ('([11:/android/media/cts/MediaMetadataRetrieverTest.java]:[RAM]:[11]:method_text:[     setDataSourceFd(resId);          testGetScaledFrameAtTime(330, 240, 330, 110, null);     }     ])', 1)]"					
