"Section"	"section_id"	"req_id"	"Test Availability"	"class_def"	"method"	"module"	"method_text"	"full_key"	"requirement"	"key_as_number"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"matched_terms"	"search_roots"	"qualified_method"	"max_matches"	"file_name"	"matched_files"	"methods_string"	"urls"	"protected"	"Area"	"Shortened"	"Test Level"
"274:790271) 9.16  . Application Data Migration"	"9.16"	"C-1-3"	""	"[('android.keystore.cts.KeyAttestationTest', 13), ('com.android.cts.deviceandprofileowner.KeyManagementTest', 10), ('android.net.wifi.cts.WifiMigrationTest', 4), ('com.android.cts.managedprofile.ProvisioningTest', 3), ('com.android.cts.deviceandprofileowner.DeviceIdAttestationTest', 3), ('android.keystore.cts.AttestationPerformanceTest', 3), ('com.android.cts.certinstaller.DelegatedDeviceIdAttestationTest', 3), ('android.telephony.cts.CellBroadcastDataMigrationTest', 2), ('com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest', 2), ('android.security.identity.cts.AttestationTest', 2), ('com.android.cts.devicepolicy.MixedManagedProfileOwnerTest', 2), ('com.android.cts.certinstaller.DirectDelegatedCertInstallerTest', 1), ('com.android.cts.managedprofile.ParentProfileTest', 1), ('android.incrementalinstall.cts.IncrementalInstallTest', 1), ('com.android.cts.devicepolicy.DeviceAndProfileOwnerTest', 1), ('com.android.cts.devicepolicy.ManagedProfileProvisioningTest', 1), ('com.android.cts.devicepolicy.MixedDeviceOwnerTest', 1), ('android.keystore.cts.ImportWrappedKeyTest', 1)]"	"[('setUp', 6), ('getSimpleName', 4), ('tearDown', 4), ('getInstrumentation', 3), ('getContext', 3), ('getBytes', 1), ('build', 1), ('getPackage', 1), ('getName', 1), ('getTargetContext', 1), ('getPackageName', 1), ('waitForIdle', 1)]"	"[('CtsKeystoreTestCases', 17), ('CtsWifiTestCases', 4), ('CtsTelephonyTestCases', 2), ('CtsIdentityTestCases', 2)]"	""	"9.16/C-1-3"	"""C-1-3] MUST use security key attestation to ensure that both the source device and the target device in the device-to-device migration are legitimate Android devices and have a locked bootloader. """	"09160000.670103"	"Migration device-to-device attestation"	"Migration attestation device-to-device"	""	""	"[('attestation', 43), ('Migration', 11)]"	""	"[('[com.android.cts.managedprofile.ProvisioningTest PersistableBundle None]', 1), ('[com.android.cts.managedprofile.ProvisioningTest testProvisionManagedProfile_accountCopy None]', 1), ('[com.android.cts.managedprofile.ProvisioningTest testAccountNotExist None]', 1), ('[com.android.cts.deviceandprofileowner.DeviceIdAttestationTest testFailsWithoutProfileOwnerIdsGrant None]', 1), ('[com.android.cts.deviceandprofileowner.DeviceIdAttestationTest testSucceedsWithProfileOwnerIdsGrant None]', 1), ('[android.keystore.cts.AttestationPerformanceTest testRsaKeyAttestation CtsKeystoreTestCases]', 1), ('[android.keystore.cts.AttestationPerformanceTest testEcKeyAttestation CtsKeystoreTestCases]', 1), ('[com.android.cts.certinstaller.DirectDelegatedCertInstallerTest testGenerateKeyPairWithoutDeviceIdAttestation None]', 1), ('[android.telephony.cts.CellBroadcastDataMigrationTest testLegacyContentProvider CtsTelephonyTestCases]', 1), ('[com.android.cts.certinstaller.DelegatedDeviceIdAttestationTest testGenerateKeyPairWithDeviceIdAttestationExpectingSuccess None]', 1), ('[com.android.cts.certinstaller.DelegatedDeviceIdAttestationTest testGenerateKeyPairWithDeviceIdAttestationExpectingFailure None]', 1), ('[android.net.wifi.cts.WifiMigrationTest testWifiMigrationSettingsDataBuilder CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiMigrationTest testWifiMigrationSettings CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiMigrationTest testWifiMigrationConfigStore CtsWifiTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testDelegatedCertInstallerDeviceIdAttestation None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testDeviceIdAttestationForProfileOwner None]', 1), ('[android.incrementalinstall.cts.IncrementalInstallTest testAddSplitToExistingInstallNonIfsMigration None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testGenerateKeyPairLogged None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest finish None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testCanGenerateECKeyPairUsingStrongBox None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testCanGenerateKeyPairWithKeyAttestation None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testCanGenerateKeyPairWithKeyAttestationUsingStrongBox None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testAllVariationsOfDeviceIdAttestation None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testAllVariationsOfDeviceIdAttestationUsingStrongBox None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testProfileOwnerCannotAttestDeviceUniqueIds None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testUniqueDeviceAttestationUsingDifferentAttestationCert None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testUniqueDeviceAttestationFailsWhenUnsupported None]', 1), ('[com.android.cts.deviceandprofileowner.KeyManagementTest testCanSetKeyPairCertChain None]', 1), ('[android.security.identity.cts.AttestationTest attestationTest CtsIdentityTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testEcAttestation CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testEcAttestation_TooLargeChallenge CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testEcAttestation_NoChallenge CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testEcAttestation_DeviceLocked CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testEcAttestation_KeyStoreExceptionWhenRequestingUniqueId CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testRsaAttestation CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testRsaAttestation_TooLargeChallenge CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testRsaAttestation_NoChallenge CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testRsaAttestation_DeviceLocked CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testAesAttestation CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testHmacAttestation CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testDeviceIdAttestation CtsKeystoreTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileProvisioningTest testAccountMigration None]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testDelegatedCertInstallerDeviceIdAttestation None]', 1), ('[android.keystore.cts.ImportWrappedKeyTest testKeyStore_ImportWrappedKey_AES_StrongBox CtsKeystoreTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testDelegatedCertInstallerDeviceIdAttestation None]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testDeviceIdAttestationForProfileOwner None]', 1)]"	""	"[('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAttestationTest.java', 13), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 10), ('/home/gpoor/cts-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiMigrationTest.java', 4), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ProvisioningTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DeviceIdAttestationTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/AttestationPerformanceTest.java', 3), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CertInstaller/src/com/android/cts/certinstaller/DelegatedDeviceIdAttestationTest.java', 3), ('/home/gpoor/cts-source/cts/tests/tests/telephony/current/src/android/telephony/cts/CellBroadcastDataMigrationTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/tests/tests/identity/src/android/security/identity/cts/AttestationTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 2), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/CertInstaller/src/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ParentProfileTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/incrementalinstall/src/android/incrementalinstall/cts/IncrementalInstallTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileProvisioningTest.java', 1), ('/home/gpoor/cts-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java', 1), ('/home/gpoor/cts-source/cts/tests/tests/keystore/src/android/keystore/cts/ImportWrappedKeyTest.java', 1)]"	"[('/android/keystore/cts/KeyAttestationTest.java', 14), ('/com/android/cts/deviceandprofileowner/KeyManagementTest.java', 11), ('/android/net/wifi/cts/WifiMigrationTest.java', 5), ('/com/android/cts/managedprofile/ProvisioningTest.java', 4), ('/com/android/cts/deviceandprofileowner/DeviceIdAttestationTest.java', 4), ('/android/keystore/cts/AttestationPerformanceTest.java', 4), ('/com/android/cts/certinstaller/DelegatedDeviceIdAttestationTest.java', 4), ('/android/telephony/cts/CellBroadcastDataMigrationTest.java', 3), ('/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 3), ('/android/security/identity/cts/AttestationTest.java', 3), ('/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 3), ('/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java', 2), ('/com/android/cts/managedprofile/ParentProfileTest.java', 2), ('/android/incrementalinstall/cts/IncrementalInstallTest.java', 2), ('/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 2), ('/com/android/cts/devicepolicy/ManagedProfileProvisioningTest.java', 2), ('/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java', 2), ('/android/keystore/cts/ImportWrappedKeyTest.java', 2)]"	"[('([3:/android/keystore/cts/KeyAttestationTest.java]:[attestation]:[3]:method_text:[             assertEquals(KM_ERROR_INVALID_INPUT_LENGTH, cause.getErrorCode());         }     }     ])', 2), ('([5:/android/keystore/cts/KeyAttestationTest.java]:[attestation]:[5]:method_text:[ionCert));         } finally {             keyStore.deleteEntry(keystoreAlias);         }     }     ])', 2), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[Migration]:[1]:method_text:[.getTargetContext();         mDpm = mContext.getSystemService(DevicePolicyManager.class);     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[Migration]:[1]:method_text:[gIntent()                 .putExtra(EXTRA_PROVISIONING_KEEP_ACCOUNT_ON_MIGRATION, true));     }     ])', 1), ('([1:/com/android/cts/managedprofile/ProvisioningTest.java]:[Migration]:[1]:method_text:[ext context) {         return context.getSharedPreferences(SHARED_PREFERENCE_FILE_NAME, 0);     }  }])', 1), ('([2:/com/android/cts/deviceandprofileowner/DeviceIdAttestationTest.java]:[attestation]:[2]:method_text:[testation record fails if the profile owner has not been explicitly granted access     // to it.    ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DeviceIdAttestationTest.java]:[attestation]:[1]:method_text:[eration request succeeds once the profile owner was granted     // access to device identifiers.    ])', 1), ('([2:/com/android/cts/deviceandprofileowner/DeviceIdAttestationTest.java]:[attestation]:[2]:method_text:[    }     }      protected ComponentName getWho() {         return ADMIN_RECEIVER_COMPONENT;     } }])', 1), ('([2:/android/keystore/cts/AttestationPerformanceTest.java]:[attestation]:[2]:method_text:[     ""challenge"".getBytes(), // short challenge         new byte[128], // long challenge     };     ])', 1), ('([3:/android/keystore/cts/AttestationPerformanceTest.java]:[attestation]:[3]:method_text:[ challenge),                         keySize, challenge.length));             }         }     }     ])', 1), ('([7:/android/keystore/cts/AttestationPerformanceTest.java]:[attestation]:[7]:method_text:[ublic void measure() throws Exception {             mKeyGen.getCertificateChain();         }     } }])', 1), ('([2:/com/android/cts/certinstaller/DirectDelegatedCertInstallerTest.java]:[attestation]:[2]:method_text:[  } finally {             assertThat(mDpm.removeKeyPair(null, alias)).isTrue();         }     }     ])', 1), ('([5:/android/telephony/cts/CellBroadcastDataMigrationTest.java]:[Migration]:[5]:method_text:[should be headless without any other activities, services or providers to handle alerts.      */    ])', 1), ('([6:/android/telephony/cts/CellBroadcastDataMigrationTest.java]:[Migration]:[6]:method_text:[rray) {         if (array != null && array.length > 0) {             fail(message);         }     } ])', 1), ('([1:/com/android/cts/certinstaller/DelegatedDeviceIdAttestationTest.java]:[attestation]:[1]:method_text:[    }      // Test that a key generation request succeeds when device identifiers are requested.    ])', 1), ('([3:/com/android/cts/certinstaller/DelegatedDeviceIdAttestationTest.java]:[attestation]:[3]:method_text:[ }     }      // Test that a key generation request fails when device identifiers are requested.    ])', 1), ('([2:/com/android/cts/certinstaller/DelegatedDeviceIdAttestationTest.java]:[attestation]:[2]:method_text:[{         KeyGenerationUtils.generateKeyWithDeviceIdAttestationExpectingFailure(mDpm, null);     } }])', 1), ('([4:/android/net/wifi/cts/WifiMigrationTest.java]:[Migration]:[4]:method_text:[     * Tests {@link android.net.wifi.WifiMigration.SettingsMigrationData.Builder} class.      */    ])', 1), ('([16:/android/net/wifi/cts/WifiMigrationTest.java]:[Migration]:[16]:method_text:[    /**      * Tests {@link android.net.wifi.WifiMigration.SettingsMigrationData} class.      */    ])', 1), ('([6:/android/net/wifi/cts/WifiMigrationTest.java]:[Migration]:[6]:method_text:[eFile(int)} and      * {@link WifiMigration#removeUserConfigStoreFile(int, UserHandle)}.      */    ])', 1), ('([17:/android/net/wifi/cts/WifiMigrationTest.java]:[Migration]:[17]:method_text:[Handle.of(ActivityManager.getCurrentUser()));         } catch (Exception ignore) {         }     } }])', 1), ('([2:/com/android/cts/managedprofile/ParentProfileTest.java]:[attestation]:[2]:method_text:[. those with the      * {@link android.annotation.SystemApi} annotation) are NOT tested.      */    ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[attestation]:[3]:method_text:[,                 ""testGenerateKeyPairWithDeviceIdAttestationExpectingSuccess"", mUserId);     }     ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[attestation]:[3]:method_text:[r"", output.contains(""Success""));         executeShellCommand(""am start -W -n "" + component);     } }])', 1), ('([2:/android/incrementalinstall/cts/IncrementalInstallTest.java]:[Migration]:[2]:method_text:[   validateAppLaunch(TEST_APP_PACKAGE_NAME, ON_CREATE_COMPONENT, DYNAMIC_CODE_COMPONENT);     }     ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[attestation]:[1]:method_text:[                 .setInt(0)                 .setStrings(""EC"")                 .build());      }     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[attestation]:[2]:method_text:[ void tearDown() throws Exception {         mActivity.finish();         super.tearDown();     }     ])', 1), ('([65:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[attestation]:[65]:method_text:[neration, including requesting Key Attestation, for all supported key      * algorithms.      */    ])', 1), ('([2:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[attestation]:[2]:method_text:[StrongBox */,                             0))                     .isNotNull();         }     }     ])', 1), ('([22:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[attestation]:[22]:method_text:[            assertThat(useStrongBox && !hasStrongBox()).isTrue();             }         }     }     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[attestation]:[2]:method_text:[ows Exception {         assertAllVariantsOfDeviceIdAttestation(false /* useStrongBox */);     }     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[attestation]:[2]:method_text:[rows Exception {         assertAllVariantsOfDeviceIdAttestation(true /* useStrongBox */);     }     ])', 1), ('([2:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[attestation]:[2]:method_text:[           ""Profile Owner is not allowed to access Device IDs."");             }         }     }     ])', 1), ('([24:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[attestation]:[24]:method_text:[s);             mDevicePolicyManager.removeKeyPair(getWho(), dev_unique_alias);         }     }     ])', 1), ('([10:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[attestation]:[10]:method_text:[lly {             mDevicePolicyManager.removeKeyPair(getWho(), someAlias);         }     }          ])', 1), ('([2:/com/android/cts/deviceandprofileowner/KeyManagementTest.java]:[attestation]:[2]:method_text:[ationSupported() {         return mDevicePolicyManager.isUniqueDeviceAttestationSupported();     } }])', 1), ('([3:/android/security/identity/cts/AttestationTest.java]:[attestation]:[3]:method_text:[STATION_APPLICATION_ID = 709;     public static final int KM_TAG_IDENTITY_CREDENTIAL_KEY = 721;     ])', 1), ('([20:/android/security/identity/cts/AttestationTest.java]:[attestation]:[20]:method_text:[       return false;             }             parent = cert;         }         return true;     } }])', 1), ('([7:/android/keystore/cts/KeyAttestationTest.java]:[attestation]:[7]:method_text:[_ERROR_INVALID_INPUT_LENGTH = -21;     private static final int KM_ERROR_PERMISSION_DENIED = 6;     ])', 1), ('([3:/android/keystore/cts/KeyAttestationTest.java]:[attestation]:[3]:method_text:[                      e);                     }                 }             }         }     }     ])', 1), ('([5:/android/keystore/cts/KeyAttestationTest.java]:[attestation]:[5]:method_text:[yStore.deleteEntry(keystoreAlias);         }     }      @RestrictedBuildTest     @RequiresDevice    ])', 1), ('([4:/android/keystore/cts/KeyAttestationTest.java]:[attestation]:[4]:method_text:[oad(null);             keyStore.deleteEntry(keystoreAlias);         }     }      @RequiresDevice    ])', 1), ('([3:/android/keystore/cts/KeyAttestationTest.java]:[attestation]:[3]:method_text:[, signaturePaddingModes);                     }                 }             }         }     }     ])', 1), ('([5:/android/keystore/cts/KeyAttestationTest.java]:[attestation]:[5]:method_text:[    @RestrictedBuildTest     @RequiresDevice  // Emulators have no place to store the needed key    ])', 1), ('([2:/android/keystore/cts/KeyAttestationTest.java]:[attestation]:[2]:method_text:[reAlias));         } finally {             keyStore.deleteEntry(keystoreAlias);         }     }     ])', 1), ('([4:/android/keystore/cts/KeyAttestationTest.java]:[attestation]:[4]:method_text:[       ImmutableSet.copyOf(paddings),                         e);             }         }     }     ])', 1), ('([185:/android/keystore/cts/KeyAttestationTest.java]:[attestation]:[185]:method_text:[ionFailureMessage.equals(e.getMessage())) {                 throw e;             }         }     } }])', 1), ('([1:/com/android/cts/devicepolicy/ManagedProfileProvisioningTest.java]:[Migration]:[1]:method_text:[                 ""testAccountNotExist"", mParentUserId);     }      @FlakyTest(bugId = 141747631)    ])', 1), ('([3:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[attestation]:[3]:method_text:[eKeyPairWithDeviceIdAttestationExpectingSuccess"", mUserId));     }      @FlakyTest     @Override    ])', 1), ('([1:/android/keystore/cts/ImportWrappedKeyTest.java]:[attestation]:[1]:method_text:[(isStrongBoxBacked)                         .build());         return kpg.generateKeyPair();     } }])', 1), ('([4:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[attestation]:[4]:method_text:[     // OrgOwnedProfileOwnerTest#testDelegatedCertInstallerDeviceIdAttestation         });     }    ])', 1), ('([4:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[attestation]:[4]:method_text:[ case lives in         // OrgOwnedProfileOwnerTest#testDeviceIdAttestationForProfileOwner     }     ])', 1)]"	""	""	""	""	""
