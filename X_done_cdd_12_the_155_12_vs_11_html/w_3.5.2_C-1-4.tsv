"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"3.5.2  . Application Hibernation"	"3.5.2"	"C-1-4"	"3.5.2/C-1-4"	"03050200.670104"	"""C-1-4] MUST NOT render the app unable to respond to activity intents, service bindings, content provider requests, or explicit broadcasts. App Hibernation in AOSP meets the above requirements. <h3 id=""36_api_namespaces"" """	""	""	""	"hibernation restriction restricted"	""	""	""	""	""	""	""	"android.permission2.cts.NoReceiveSmsPermissionTest"	"obtain"	"CtsPermission2TestCases"	"[('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityManagerFgsBgStartTest.java', 26), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 25), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/JobThrottlingTest.java', 20), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java', 20), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java', 12), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/BundleKeyQueryHelperTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DualSuspendTests.java', 10), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/IntegerQueryHelperTest.java', 9), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/PersistableBundleKeyQueryHelperTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java', 9), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/UserRestrictionsTest.java', 9), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/LongQueryHelperTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/car/src/android/car/cts/CarUxRestrictionsManagerTest.java', 8), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 7), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedStoragePermissionTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/DeviceOwnerTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java', 6), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/apphibernation/AppHibernationStatsTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/BluetoothRestrictionTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/SensorToggleRestrictionTest.java', 5), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/BundleQueryHelperTest.java', 5), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/PersistableBundleQueryHelperTest.java', 5), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/IntentQueryHelperTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java', 5), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/UserHandleQueryHelperTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java', 5), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/CreateAndManageUserTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/UsageStatsTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/tests/src/android/suspendapps/cts/DistractingPackageTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/ConnectedNetworkScorerTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/permission/src/android/permission/cts/SplitPermissionTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/JobScheduler/src/android/jobscheduler/cts/ConnectivityConstraintTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityManagerApi29Test.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/PrivateDnsPolicyTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PasswordMinimumRestrictionsTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/device/src/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/appstart/AppStartStatsTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyPairGeneratorTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/admin/src/android/admin/cts/DevicePolicyManagerTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/ManagedProfileTest.java', 4), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/SELinuxHostTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/pm/cts/ResourcesHardeningTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyAttestationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraDeviceTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PolicyTransparencyTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/BannedFilesTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/AppSecurityTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/legacy/src/android/scopedstorage/cts/legacy/LegacyStorageTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/session/cts/MediaSessionManagerHostTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/SerializableQueryHelperTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/SipDelegateManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/NetworkResetTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AllowedAccountManagementTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CorpOwnedManagedProfile/src/com/android/cts/comp/provisioning/UserRestrictionTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/AppRestrictionsIsCallerDelegateHelper.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/AppRestrictionsDelegateTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/statsdatom/src/android/cts/statsdatom/statsd/HostAtomTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DelegationTest.java', 3), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/StringQueryHelperTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/BuildVersionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedStoragePermissionSharedUidTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/ReadSettingsFieldsApp/src/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/IsolatedProcessTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/common/src/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/PrivilegedUpdateTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/TelephonyManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/CustomizationRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/SetUsersRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/CustomizationApp/src/com/android/cts/customizationapp/CustomizationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/calendarprovider/src/android/provider/cts/calendar/CalendarTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ContentCaptureRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SmsManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ApexSignatureVerificationTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CrossProfileUtils.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ContentSuggestionsRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/BuildTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/CipherTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/BluetoothSharingRestrictionTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/media/src/android/media/cts/BaseMultiUserTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ApplicationRestrictionsIsCallerDelegateHelper.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/SubscriptionManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityManagerProcessStateTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/userrestrictions/CheckNoOwnerRestrictionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/ExactAlarmsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySecurityTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/permission/src/android/suspendapps/permission/cts/NegativePermissionsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/FileIntegrityManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/NonMarketAppsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/util/src/android/server/wm/settings/SettingsSession.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/vpn/VpnTestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/AppRestrictionsTargetApp/src/com/android/cts/apprestrictions/targetapp/ApplicationRestrictionsActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/DeviceAdminTestReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/TestHelper.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/AlertWindowsTests.java', 1), ('/home/gpoor/cts-12-source/cts/tools/cts-tradefed/tests/src/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/PolicyTransparencyTestListActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/AccessSerialModern/src/android/os/cts/AccessSerialModernTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/rsblas/src/android/renderscript/cts/IntrinsicBLAS.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioRecordTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/ResumeOnRebootHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/cts/ServiceStateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/BaseDeviceAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/admin/ScreenLockTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/database/src/android/database/cts/CursorWindowTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephonyprovider/src/android/telephonyprovider/cts/SmsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/View_FocusHandlingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony4/src/android/telephony4/cts/SimRestrictedApisTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorTestCase.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/LegacyStorageHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/util/TestUtils.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/SetPolicyActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/PackageSignatureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/display/src/android/display/cts/DisplayTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/CreateUsersPermissionTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/TransferOwnerOutgoingApp/src/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_fine/src/android/location/cts/fine/LocationManagerFineTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/ParentProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PasswordRequirementsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/scopedstorage/host/src/android/scopedstorage/cts/host/PreserveLegacyStorageHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/AccountCheckHostSideTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/VpnApp/src/com/android/cts/vpnfirewall/ReflectorVpnService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/background/src/android/app/cts/backgroundrestrictions/BroadcastsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TextViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedProfileOwnerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telephony/current/src/android/telephony/ims/cts/TestImsService.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/RunningAppProcessInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/accounts/src/android/host/accounts/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/PermissionPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/remotedpc/src/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/backup/src/android/cts/backup/MultiUserBackupStateTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAdmin/src/com.android.cts.deviceadmin/DeviceAdminTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/CalendarViewTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/suspendapps/test-apps/TestDeviceAdmin/src/com/android/suspendapps/testdeviceadmin/TestCommsReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/dpi/src/android/dpi/cts/DefaultManifestAttributesSdkTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/SimpleApp/src/com/android/cts/launcherapps/simpleapp/SimpleActivityStartFgService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ManagedUserPositiveTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/FontResourceTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/NfcTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/AccountManagementParentTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/SetPolicyActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/ActivityQueryHelperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/ChildlessActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/style/cts/TextAppearanceSpanTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi30.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/camera/its/ItsService.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/src/com/android/cts/devicepolicy/BaseDevicePolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/UsbDebuggingTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/PreferentialNetworkServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DelegateApp/src/com/android/cts/delegate/CertInstallDelegateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/background/src/android/app/cts/backgroundrestrictions/MyReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/location/location_gnss/src/android/location/cts/gnss/asn1/base/Asn1IA5String.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/print/src/android/print/cts/PrintDocumentInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/appsearch/src/com/android/cts/appsearch/external/app/AppSearchSessionCtsTestBase.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/carrierapi/src/android/carrierapi/cts/NetworkScanApiTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/SimpleApp/src/com/android/cts/launcherapps/simpleapp/SimpleActivityStartService.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/ClassQueryHelperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/ConferenceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/android/app/cts/tools/ServiceProcessController.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyGenParameterSpecTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/vcn/src/android/net/vcn/cts/TestNetworkWrapper.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/BooleanQueryHelperTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/PolicyTransparencyTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/UsePermissionDiffCert/src/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/DisallowAppsControlActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/keystore/src/android/keystore/cts/KeyProtectionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/helpers/sensoroperations/SensorOperation.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/BluetoothSharingRestrictionPrimaryProfileTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/CameraPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/FontsContractTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 1), ('/home/gpoor/cts-12-source/cts/common/device-side/bedstead/queryable/src/test/java/com/android/queryable/queries/EnumQueryHelperTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/car/src/android/car/cts/OptionalFeatureHostTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/AlarmManager/src/android/alarmmanager/cts/AppStandbyTests.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/security/src/android/security/cts/PerfEventParanoidTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/multiuser/src/android/host/multiuser/BaseMultiUserTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceOwner/src/com/android/cts/deviceowner/SetPolicyActivity.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appcompat/compatchanges/src/com/android/cts/appcompat/CompatChangesValidConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/VpnTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/app/src/android/app/stubs/CommandReceiver.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/NoReceiveSmsPermissionTest.java', 1)]"	"[('(3,restricted,/android/os/cts/BuildVersionTest.java)', 1), ('(4,restriction,/com/android/cts/verifier/managedprovisioning/NonMarketAppsActivity.java)', 1), ('(11,restriction,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java)', 1), ('(1,restriction,/android/server/wm/settings/SettingsSession.java)', 1), ('(1,restriction,/android/app/cts/NotificationManagerTest.java)', 1), ('(1,restriction,/com/android/cts/deviceandprofileowner/vpn/VpnTestHelper.java)', 1), ('(18,restricted,/android/permission2/cts/RestrictedStoragePermissionSharedUidTest.java)', 1), ('(8,restricted,/android/car/cts/CarUxRestrictionsManagerTest.java)', 1), ('(62,restriction,/android/car/cts/CarUxRestrictionsManagerTest.java)', 1), ('(15,restriction,/com/android/cts/apprestrictions/targetapp/ApplicationRestrictionsActivity.java)', 1), ('(4,restriction,/com/android/cts/verifier/managedprovisioning/DeviceAdminTestReceiver.java)', 1), ('(26,restricted,/android/net/wifi/cts/TestHelper.java)', 1), ('(1,restriction,/android/server/wm/AlertWindowsTests.java)', 1), ('(1,restricted,/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java)', 1), ('(32,restricted,/android/permission2/cts/RestrictedStoragePermissionTest.java)', 1), ('(1,restriction,/android/permission2/cts/RestrictedStoragePermissionTest.java)', 1), ('(3,restricted,/android/security/cts/SELinuxHostTest.java)', 1), ('(16,restricted,/android/content/pm/cts/ResourcesHardeningTest.java)', 1), ('(6,restriction,/android/content/pm/cts/ResourcesHardeningTest.java)', 1), ('(13,restriction,/com/android/cts/verifier/managedprovisioning/PolicyTransparencyTestListActivity.java)', 1), ('(10,restricted,/android/net/wifi/cts/ConnectedNetworkScorerTest.java)', 1), ('(32,restriction,/android/suspendapps/cts/DualSuspendTests.java)', 1), ('(3,restricted,/android/keystore/cts/KeyAttestationTest.java)', 1), ('(3,restriction,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java)', 1), ('(4,restriction,/android/permission/cts/SplitPermissionTest.java)', 1), ('(1,restricted,/android/os/cts/AccessSerialModernTest.java)', 1), ('(12,restricted,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(2,restricted,/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java)', 1), ('(2,restricted,/android/keystore/cts/KeyInfoTest.java)', 1), ('(1,restriction,/android/keystore/cts/KeyInfoTest.java)', 1), ('(1,restriction,/android/renderscript/cts/IntrinsicBLAS.java)', 1), ('(2,restricted,/android/security/cts/IsolatedProcessTest.java)', 1), ('(15,restriction,/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java)', 1), ('(5,restricted,/android/media/cts/AudioRecordTest.java)', 1), ('(8,restriction,/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java)', 1), ('(1,restriction,/android/appsecurity/cts/ResumeOnRebootHostTest.java)', 1), ('(2,restricted,/android/telephony/cts/ServiceStateTest.java)', 1), ('(25,hibernation,/android/cts/statsdatom/apphibernation/AppHibernationStatsTest.java)', 1), ('(3,restricted,/android/appsecurity/cts/PrivilegedUpdateTests.java)', 1), ('(1,restriction,/com.android.cts.deviceadmin/BaseDeviceAdminTest.java)', 1), ('(1,restricted,/com/android/cts/verifier/admin/ScreenLockTestActivity.java)', 1), ('(1,restriction,/android/database/cts/CursorWindowTest.java)', 1), ('(9,restriction,/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java)', 1), ('(86,restricted,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(6,restriction,/android/jobscheduler/cts/JobThrottlingTest.java)', 1), ('(1,restricted,/android/telephonyprovider/cts/SmsTest.java)', 1), ('(1,restricted,/android/view/cts/View_FocusHandlingTest.java)', 1), ('(1,restricted,/android/telephony4/cts/SimRestrictedApisTest.java)', 1), ('(1,restricted,/android/hardware/cts/SensorTestCase.java)', 1), ('(25,restriction,/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java)', 1), ('(16,restricted,/android/jobscheduler/cts/ConnectivityConstraintTest.java)', 1), ('(4,restriction,/android/app/cts/ActivityManagerApi29Test.java)', 1), ('(1,restricted,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(1,restriction,/android/telephony/cts/TelephonyManagerTest.java)', 1), ('(20,restriction,/com/android/cts/deviceandprofileowner/CustomizationRestrictionsTest.java)', 1), ('(26,restriction,/com/android/cts/deviceowner/BluetoothRestrictionTest.java)', 1), ('(5,restriction,/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java)', 1), ('(9,restriction,/android/host/multiuser/SetUsersRestrictionsTest.java)', 1), ('(1,restriction,/android/scopedstorage/cts/host/LegacyStorageHostTest.java)', 1), ('(4,restriction,/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java)', 1), ('(44,restriction,/android/hardware/camera2/cts/CameraDeviceTest.java)', 1), ('(41,restriction,/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java)', 1), ('(1,restriction,/android/keystore/cts/util/TestUtils.java)', 1), ('(21,restriction,/com/android/cts/managedprofile/SetPolicyActivity.java)', 1), ('(5,restriction,/com/android/cts/customizationapp/CustomizationTest.java)', 1), ('(1,restricted,/android/provider/cts/calendar/CalendarTest.java)', 1), ('(1,restriction,/android/provider/cts/calendar/CalendarTest.java)', 1), ('(2,restricted,/android/security/cts/PackageSignatureTest.java)', 1), ('(17,restriction,/com/android/cts/deviceowner/SensorToggleRestrictionTest.java)', 1), ('(16,restriction,/com/android/cts/deviceowner/PrivateDnsPolicyTest.java)', 1), ('(8,restriction,/test/java/com/android/queryable/queries/BundleQueryHelperTest.java)', 1), ('(1,restricted,/android/display/cts/DisplayTest.java)', 1), ('(2,restricted,/android/host/multiuser/CreateUsersPermissionTest.java)', 1), ('(18,restriction,/com/android/cts/deviceandprofileowner/PasswordMinimumRestrictionsTest.java)', 1), ('(9,restriction,/test/java/com/android/queryable/queries/IntegerQueryHelperTest.java)', 1), ('(6,restriction,/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java)', 1), ('(62,restriction,/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java)', 1), ('(8,restriction,/test/java/com/android/queryable/queries/PersistableBundleQueryHelperTest.java)', 1), ('(1,restriction,/android/location/cts/fine/LocationManagerFineTest.java)', 1), ('(17,restriction,/test/java/com/android/queryable/queries/PersistableBundleKeyQueryHelperTest.java)', 1), ('(3,restriction,/com/android/cts/managedprofile/ParentProfileTest.java)', 1), ('(5,restriction,/test/java/com/android/queryable/queries/IntentQueryHelperTest.java)', 1), ('(3,restriction,/com/android/cts/deviceandprofileowner/ContentCaptureRestrictionsTest.java)', 1), ('(93,restriction,/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java)', 1), ('(24,restriction,/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java)', 1), ('(1,restriction,/com/android/cts/deviceandprofileowner/PasswordRequirementsTest.java)', 1), ('(1,restricted,/android/scopedstorage/cts/host/PreserveLegacyStorageHostTest.java)', 1), ('(17,restriction,/com/android/cts/deviceandprofileowner/PolicyTransparencyTest.java)', 1), ('(2,restriction,/com/android/cts/devicepolicy/AccountCheckHostSideTest.java)', 1), ('(113,restricted,/android/permission2/cts/RestrictedPermissionsTest.java)', 1), ('(7,restriction,/android/permission2/cts/RestrictedPermissionsTest.java)', 1), ('(17,restriction,/com/android/cts/vpnfirewall/ReflectorVpnService.java)', 1), ('(2,restriction,/android/telephony/cts/SmsManagerTest.java)', 1), ('(1,restriction,/android/app/cts/backgroundrestrictions/BroadcastsTest.java)', 1), ('(3,restriction,/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java)', 1), ('(5,restricted,/android/widget/cts/TextViewTest.java)', 1), ('(2,restriction,/com/android/cts/devicepolicy/MixedProfileOwnerTest.java)', 1), ('(1,restriction,/android/telephony/ims/cts/TestImsService.java)', 1), ('(1,restriction,/android/security/cts/RunningAppProcessInfoTest.java)', 1), ('(2,restricted,/android/host/accounts/BaseMultiUserTest.java)', 1), ('(2,restricted,/android/appsecurity/cts/ApexSignatureVerificationTest.java)', 1), ('(2,restriction,/com/android/cts/managedprofile/CrossProfileUtils.java)', 1), ('(3,restriction,/com/android/cts/deviceandprofileowner/ContentSuggestionsRestrictionsTest.java)', 1), ('(38,restriction,/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java)', 1), ('(29,restriction,/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java)', 1), ('(5,restriction,/test/java/com/android/queryable/queries/UserHandleQueryHelperTest.java)', 1), ('(5,restriction,/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java)', 1), ('(6,restricted,/android/permission2/cts/PermissionPolicyTest.java)', 1), ('(16,restriction,/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java)', 1), ('(12,restriction,/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java)', 1), ('(3,restriction,/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java)', 1), ('(31,restriction,/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java)', 1), ('(3,restricted,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(94,restriction,/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java)', 1), ('(2,restricted,/android/os/cts/BuildTest.java)', 1), ('(1,restriction,/android/cts/backup/MultiUserBackupStateTest.java)', 1), ('(2,restriction,/com.android.cts.deviceadmin/DeviceAdminTest.java)', 1), ('(3,restricted,/android/security/cts/BannedFilesTest.java)', 1), ('(1,restriction,/android/widget/cts/CalendarViewTest.java)', 1), ('(12,hibernation,/android/cts/statsdatom/appstart/AppStartStatsTests.java)', 1), ('(18,restriction,/com/android/suspendapps/testdeviceadmin/TestCommsReceiver.java)', 1), ('(2,restricted,/android/dpi/cts/DefaultManifestAttributesSdkTest.java)', 1), ('(4,restriction,/android/keystore/cts/CipherTest.java)', 1), ('(2,restriction,/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java)', 1), ('(1,restriction,/com/android/cts/launcherapps/simpleapp/SimpleActivityStartFgService.java)', 1), ('(2,restriction,/com/android/cts/verifier/managedprovisioning/ManagedUserPositiveTestActivity.java)', 1), ('(3,restricted,/android/appsecurity/cts/AppSecurityTests.java)', 1), ('(5,restricted,/android/app/cts/ActivityManagerTest.java)', 1), ('(15,restriction,/com/android/cts/managedprofile/BluetoothSharingRestrictionTest.java)', 1), ('(2,restricted,/android/text/cts/FontResourceTest.java)', 1), ('(8,restriction,/com/android/cts/verifier/managedprovisioning/NfcTestActivity.java)', 1), ('(3,restricted,/android/media/cts/BaseMultiUserTest.java)', 1), ('(1,restriction,/android/media/cts/BaseMultiUserTest.java)', 1), ('(1,restricted,/com/android/cts/deviceandprofileowner/AccountManagementParentTest.java)', 1), ('(25,restriction,/com/android/cts/deviceandprofileowner/SetPolicyActivity.java)', 1), ('(3,restriction,/android/scopedstorage/cts/legacy/LegacyStorageTest.java)', 1), ('(10,restriction,/com/android/cts/deviceowner/CreateAndManageUserTest.java)', 1), ('(1,restriction,/test/java/com/android/queryable/queries/ActivityQueryHelperTest.java)', 1), ('(21,restriction,/test/java/com/android/queryable/queries/BundleKeyQueryHelperTest.java)', 1), ('(1,restriction,/android/contentcaptureservice/cts/ChildlessActivityTest.java)', 1), ('(2,restricted,/android/text/style/cts/TextAppearanceSpanTest.java)', 1), ('(2,restriction,/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi30.java)', 1), ('(4,restriction,/android/keystore/cts/KeyPairGeneratorTest.java)', 1), ('(19,restriction,/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java)', 1), ('(9,restriction,/com/android/cts/deviceandprofileowner/ApplicationRestrictionsIsCallerDelegateHelper.java)', 1), ('(9,restriction,/com/android/cts/verifier/camera/its/ItsService.java)', 1), ('(38,restriction,/com/android/cts/devicepolicy/BaseDevicePolicyTest.java)', 1), ('(2,restricted,/android/os/cts/UsbDebuggingTest.java)', 1), ('(17,restricted,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(2,restriction,/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java)', 1), ('(1,restricted,/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java)', 1), ('(3,restricted,/android/telephony/cts/SubscriptionManagerTest.java)', 1), ('(9,restricted,/android/media/session/cts/MediaSessionManagerHostTest.java)', 1), ('(12,restriction,/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java)', 1), ('(2,restricted,/android/devicepolicy/cts/PreferentialNetworkServiceTest.java)', 1), ('(23,restricted,/android/app/usage/cts/UsageStatsTest.java)', 1), ('(2,restriction,/com/android/cts/delegate/CertInstallDelegateTest.java)', 1), ('(43,restricted,/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java)', 1), ('(1,restricted,/android/app/cts/ActivityManagerProcessStateTest.java)', 1), ('(1,restriction,/android/app/cts/ActivityManagerProcessStateTest.java)', 1), ('(5,restriction,/com/android/cts/deviceandprofileowner/userrestrictions/CheckNoOwnerRestrictionsTest.java)', 1), ('(1,restriction,/android/app/cts/backgroundrestrictions/MyReceiver.java)', 1), ('(3,restriction,/test/java/com/android/queryable/queries/SerializableQueryHelperTest.java)', 1), ('(18,restricted,/android/location/cts/gnss/asn1/base/Asn1IA5String.java)', 1), ('(1,restricted,/android/print/cts/PrintDocumentInfoTest.java)', 1), ('(2,restricted,/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java)', 1), ('(3,restriction,/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java)', 1), ('(2,restricted,/com/android/cts/appsearch/external/app/AppSearchSessionCtsTestBase.java)', 1), ('(5,restricted,/android/telephony/ims/cts/SipDelegateManagerTest.java)', 1), ('(26,restriction,/android/devicepolicy/cts/NetworkResetTest.java)', 1), ('(7,restriction,/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java)', 1), ('(1,restricted,/android/carrierapi/cts/NetworkScanApiTest.java)', 1), ('(1,restriction,/com/android/cts/launcherapps/simpleapp/SimpleActivityStartService.java)', 1), ('(47,restriction,/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java)', 1), ('(12,restriction,/com/android/cts/devicepolicy/DeviceOwnerTest.java)', 1), ('(2,restricted,/android/alarmmanager/cts/ExactAlarmsTest.java)', 1), ('(1,restriction,/test/java/com/android/queryable/queries/ClassQueryHelperTest.java)', 1), ('(2,restricted,/android/telecom/cts/ConferenceTest.java)', 1), ('(139,restriction,/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java)', 1), ('(1,restriction,/android/app/cts/android/app/cts/tools/ServiceProcessController.java)', 1), ('(125,restriction,/com/android/cts/devicepolicy/UserRestrictionsTest.java)', 1), ('(1,restricted,/android/keystore/cts/KeyGenParameterSpecTest.java)', 1), ('(1,restricted,/android/net/vcn/cts/TestNetworkWrapper.java)', 1), ('(1,restriction,/test/java/com/android/queryable/queries/BooleanQueryHelperTest.java)', 1), ('(16,restriction,/com/android/cts/verifier/managedprovisioning/PolicyTransparencyTestActivity.java)', 1), ('(1,restriction,/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java)', 1), ('(3,restriction,/com/android/cts/verifier/managedprovisioning/DisallowAppsControlActivity.java)', 1), ('(2,restricted,/android/server/wm/MultiDisplaySecurityTests.java)', 1), ('(1,restricted,/android/keystore/cts/KeyProtectionTest.java)', 1), ('(5,restriction,/com/android/cts/deviceandprofileowner/AllowedAccountManagementTest.java)', 1), ('(10,restriction,/android/admin/cts/DevicePolicyManagerTest.java)', 1), ('(1,restriction,/android/hardware/cts/helpers/sensoroperations/SensorOperation.java)', 1), ('(2,restriction,/com/android/cts/managedprofile/BluetoothSharingRestrictionPrimaryProfileTest.java)', 1), ('(1,restriction,/com/android/cts/managedprofile/CameraPolicyTest.java)', 1), ('(11,restriction,/com/android/cts/comp/provisioning/UserRestrictionTest.java)', 1), ('(6,restriction,/com/android/cts/delegate/AppRestrictionsIsCallerDelegateHelper.java)', 1), ('(50,restriction,/com/android/cts/delegate/AppRestrictionsDelegateTest.java)', 1), ('(3,restricted,/android/cts/statsdatom/statsd/HostAtomTests.java)', 1), ('(17,restriction,/android/suspendapps/permission/cts/NegativePermissionsTest.java)', 1), ('(22,restriction,/android/net/wifi/cts/WifiManagerTest.java)', 1), ('(6,restricted,/android/provider/cts/FontsContractTest.java)', 1), ('(19,restriction,/android/suspendapps/cts/DistractingPackageTest.java)', 1), ('(1,restriction,/android/systemintents/cts/TestSystemIntents.java)', 1), ('(2,restricted,/android/security/cts/FileIntegrityManagerTest.java)', 1), ('(12,restriction,/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java)', 1), ('(1,restricted,/android/app/cts/ActivityManagerFgsBgStartTest.java)', 1), ('(69,restriction,/android/app/cts/ActivityManagerFgsBgStartTest.java)', 1), ('(7,restriction,/com/android/cts/deviceandprofileowner/DelegationTest.java)', 1), ('(1,restriction,/test/java/com/android/queryable/queries/EnumQueryHelperTest.java)', 1), ('(22,restriction,/com/android/cts/devicepolicy/ManagedProfileTest.java)', 1), ('(1,restriction,/android/car/cts/OptionalFeatureHostTest.java)', 1), ('(1,restriction,/android/alarmmanager/cts/AppStandbyTests.java)', 1), ('(1,restricted,/android/security/cts/PerfEventParanoidTest.java)', 1), ('(3,restriction,/test/java/com/android/queryable/queries/StringQueryHelperTest.java)', 1), ('(3,restricted,/android/host/multiuser/BaseMultiUserTest.java)', 1), ('(1,restriction,/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java)', 1), ('(21,restriction,/com/android/cts/deviceowner/SetPolicyActivity.java)', 1), ('(1,restriction,/com/android/cts/appcompat/CompatChangesValidConfigTest.java)', 1), ('(2,restriction,/com/android/cts/verifier/managedprovisioning/VpnTestActivity.java)', 1), ('(76,restriction,/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java)', 1), ('(9,restriction,/test/java/com/android/queryable/queries/LongQueryHelperTest.java)', 1), ('(1,restricted,/android/app/stubs/CommandReceiver.java)', 1), ('(1,restriction,/android/permission2/cts/NoReceiveSmsPermissionTest.java)', 1)]"	"[('([2:/test/java/com/android/queryable/queries/PersistableBundleKeyQueryHelperTest.java]:[restriction]:[2]:method_text:[   assertThat(persistableBundleKeyQueryHelper.matches(mPersistableBundle, KEY)).isTrue();    }   ])', 4), ('([3:/android/jobscheduler/cts/JobThrottlingTest.java]:[restricted]:[3]:method_text:[CKGROUND_RESTRICTION,                mTestAppInterface.getLastParams().getStopReason());    }   ])', 3), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[restriction]:[1]:method_text:[CKGROUND_RESTRICTION,                mTestAppInterface.getLastParams().getStopReason());    }   ])', 3), ('([2:/test/java/com/android/queryable/queries/PersistableBundleKeyQueryHelperTest.java]:[restriction]:[2]:method_text:[  assertThat(persistableBundleKeyQueryHelper.matches(mPersistableBundle, KEY)).isFalse();    }   ])', 3), ('([6:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[6]:method_text:[o restricted permission should be granted.        assertNoRestrictedPermissionGranted();    }   ])', 3), ('([3:/android/admin/cts/DevicePolicyManagerTest.java]:[restriction]:[3]:method_text:[ (SecurityException e) {            assertProfileOwnerMessage(e.getMessage());        }    }   ])', 3), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[restricted]:[1]:method_text:[using restricted suggestion API.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 2), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[restricted]:[1]:method_text:[uested for platform to connect).     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 2), ('([3:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[restricted]:[3]:method_text:[estion for platform to connect).     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 2), ('([6:/android/jobscheduler/cts/JobThrottlingTest.java]:[restricted]:[6]:method_text:[as unrestricted"",                mTestAppInterface.awaitJobStart(DEFAULT_WAIT_TIMEOUT));    }   ])', 2), ('([1:/test/java/com/android/queryable/queries/IntegerQueryHelperTest.java]:[restriction]:[1]:method_text:[INTEGER_VALUE);        assertThat(integerQueryHelper.matches(INTEGER_VALUE)).isFalse();    }   ])', 2), ('([2:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[restriction]:[2]:method_text:[UserRestriction(ADMIN_RECEIVER_COMPONENT,                UserManager.DISALLOW_ADD_USER);    }   ])', 2), ('([2:/test/java/com/android/queryable/queries/PersistableBundleQueryHelperTest.java]:[restriction]:[2]:method_text:[        assertThat(persistableBundleQueryHelper.matches(mPersistableBundle)).isFalse();    }   ])', 2), ('([1:/test/java/com/android/queryable/queries/IntentQueryHelperTest.java]:[restriction]:[1]:method_text:[isEqualTo(STRING_VALUE);        assertThat(intentQueryHelper.matches(intent)).isTrue();    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[1]:method_text:[       ACCESS_BACKGROUND_LOCATION)));        assertAllRestrictedPermissionWhitelisted();    }   ])', 2), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[1]:method_text:[ions.singleton(ACCESS_FINE_LOCATION));        assertNoRestrictedPermissionWhitelisted();    }   ])', 2), ('([2:/android/keystore/cts/CipherTest.java]:[restriction]:[2]:method_text:[ otherProvider,                            e);                }            }        }    }   ])', 2), ('([1:/android/keystore/cts/KeyPairGeneratorTest.java]:[restriction]:[1]:method_text:[le    // respecting the spec constraints.    // Test fails until the resolution of b/113276806   ])', 2), ('([5:/android/app/usage/cts/UsageStatsTest.java]:[restricted]:[5]:method_text:[t apps    @AppModeFull(reason = ""Test APK Activity not found when installed as an instant app"")   ])', 2), ('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[restricted]:[4]:method_text:[work using internet connectivity API.     * 3. Verify that both connections are active.     */   ])', 2), ('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[restricted]:[4]:method_text:[y requested for platform to connect).     * 3. Verify that only 1 connection is active.     */   ])', 2), ('([6:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[restricted]:[6]:method_text:[ suggestion for platform to connect).     * 3. Verify that only 1 connection is active.     */   ])', 2), ('([1:/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java]:[restriction]:[1]:method_text:[bcd"", caseDescription);        assertPasswordFails(""123"", caseDescription); // too short    }   ])', 2), ('([2:/android/os/cts/BuildVersionTest.java]:[restricted]:[2]:method_text:[S_FILE = ""platform_releases.txt"";    @SuppressWarnings(""deprecation"")    @RestrictedBuildTest   ])', 1), ('([1:/android/os/cts/BuildVersionTest.java]:[restricted]:[1]:method_text:[D)/     * (BUILD_NUMBER):(BUILD_VARIANT)/(TAGS)     * </code>     */    @RestrictedBuildTest   ])', 1), ('([4:/com/android/cts/verifier/managedprovisioning/NonMarketAppsActivity.java]:[restriction]:[4]:method_text:[ame getAdminComponent() {        return DeviceAdminTestReceiver.getReceiverComponentName();    }}])', 1), ('([11:/com/android/cts/deviceandprofileowner/DevicePolicyLoggingTest.java]:[restriction]:[11]:method_text:[tion(ADMIN_RECEIVER_COMPONENT,                UserManager.DISALLOW_CONTENT_SUGGESTIONS);    }   ])', 1), ('([1:/android/server/wm/settings/SettingsSession.java]:[restriction]:[1]:method_text:[ - 1);            Log.w(TAG, ""Close nested session for "" + uri, new Throwable());        }    }}])', 1), ('([1:/android/app/cts/NotificationManagerTest.java]:[restriction]:[1]:method_text:[s background restrictions by retrieving their own     * notification and triggering it.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/vpn/VpnTestHelper.java]:[restriction]:[1]:method_text:[t) extra2);        stream.write(data, 0, data.length);        return output.toByteArray();    }}])', 1), ('([14:/android/permission2/cts/RestrictedStoragePermissionSharedUidTest.java]:[restricted]:[14]:method_text:[PS[firstApp], TEST_APPS[secondApp]});            }        }        return parameters;    }   ])', 1), ('([4:/android/permission2/cts/RestrictedStoragePermissionSharedUidTest.java]:[restricted]:[4]:method_text:[public void uninstallAllTestPackages() {        app1.uninstall();        app2.uninstall();    }}])', 1), ('([3:/android/car/cts/CarUxRestrictionsManagerTest.java]:[restricted]:[3]:method_text:[oString(),                restrictions.getMaxRestrictedStringLength(), maxStringLength);    }   ])', 1), ('([3:/android/car/cts/CarUxRestrictionsManagerTest.java]:[restricted]:[3]:method_text:[g(),                copyOfRestrictions.getMaxRestrictedStringLength(), maxStringLength);    }   ])', 1), ('([2:/android/car/cts/CarUxRestrictionsManagerTest.java]:[restricted]:[2]:method_text:[ 0L);        assertTrue(oneBuilder.build().isSameRestrictions(anotherBuilder.build()));    }   ])', 1), ('([6:/android/car/cts/CarUxRestrictionsManagerTest.java]:[restriction]:[6]:method_text:[ getCar().getCarManager(Car.CAR_UX_RESTRICTION_SERVICE);        assertNotNull(mManager);    }   ])', 1), ('([20:/android/car/cts/CarUxRestrictionsManagerTest.java]:[restriction]:[20]:method_text:[oString(),                restrictions.getMaxRestrictedStringLength(), maxStringLength);    }   ])', 1), ('([24:/android/car/cts/CarUxRestrictionsManagerTest.java]:[restriction]:[24]:method_text:[g(),                copyOfRestrictions.getMaxRestrictedStringLength(), maxStringLength);    }   ])', 1), ('([11:/android/car/cts/CarUxRestrictionsManagerTest.java]:[restriction]:[11]:method_text:[ 0L);        assertTrue(oneBuilder.build().isSameRestrictions(anotherBuilder.build()));    }   ])', 1), ('([1:/android/car/cts/CarUxRestrictionsManagerTest.java]:[restriction]:[1]:method_text:[       mManager.registerListener(restrictions -> {});        mManager.unregisterListener();    }}])', 1), ('([15:/com/android/cts/apprestrictions/targetapp/ApplicationRestrictionsActivity.java]:[restriction]:[15]:method_text:[G_RECEIVER_FOREGROUND)                .putExtra(""value"", restrictions));        finish();    }}])', 1), ('([4:/com/android/cts/verifier/managedprovisioning/DeviceAdminTestReceiver.java]:[restriction]:[4]:method_text:[verride        public IBinder onBind(Intent intent) {            return mBinder;        }    }}])', 1), ('([26:/android/net/wifi/cts/TestHelper.java]:[restricted]:[26]:method_text:[ult.WIFI_BAND_60_GHZ;        } else {            return ScanResult.UNSPECIFIED;        }    }}])', 1), ('([1:/android/server/wm/AlertWindowsTests.java]:[restriction]:[1]:method_text:[      AppOpsUtils.setOpMode(activityName.getPackageName(), OPSTR_SYSTEM_ALERT_WINDOW, mode);    }}])', 1), ('([1:/com/android/compatibility/common/tradefed/presubmit/CtsConfigLoadingTest.java]:[restricted]:[1]:method_text:[METERS_FAMILY) {            families.put(family, false);        }        return families;    }}])', 1), ('([3:/android/permission2/cts/RestrictedStoragePermissionTest.java]:[restricted]:[3]:method_text:[pk"";    private static final String PKG = ""android.permission2.cts.restrictedpermissionuser"";   ])', 1), ('([1:/android/permission2/cts/RestrictedStoragePermissionTest.java]:[restricted]:[1]:method_text:[Check expected state of restricted permissions.        assertCannotUnWhitelistStorage();    }   ])', 1), ('([1:/android/permission2/cts/RestrictedStoragePermissionTest.java]:[restricted]:[1]:method_text:[/ Check expected state of restricted permissions.        assertCannotWhitelistStorage();    }   ])', 1), ('([2:/android/permission2/cts/RestrictedStoragePermissionTest.java]:[restricted]:[2]:method_text:[evel is only        // controlled by the read perm        assertHasFullStorageAccess();    }   ])', 1), ('([25:/android/permission2/cts/RestrictedStoragePermissionTest.java]:[restricted]:[25]:method_text:[    @After    public void uninstallApp() {        runShellCommand(""pm uninstall "" + PKG);    }}])', 1), ('([1:/android/permission2/cts/RestrictedStoragePermissionTest.java]:[restriction]:[1]:method_text:[    @After    public void uninstallApp() {        runShellCommand(""pm uninstall "" + PKG);    }}])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[restricted]:[1]:method_text:[selinux policy globally.     *     * @throws Exception     */    @CddTest(requirement=""9.7"")   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[restricted]:[1]:method_text:[     *     * @throws Exception     */    @CddTest(requirement=""9.7"")    @RestrictedBuildTest   ])', 1), ('([1:/android/security/cts/SELinuxHostTest.java]:[restricted]:[1]:method_text:[test is all thats     * needed     */    @CddTest(requirement=""9.7"")    @RestrictedBuildTest   ])', 1), ('([7:/android/content/pm/cts/ResourcesHardeningTest.java]:[restricted]:[7]:method_text:[os.isEmpty());                mRestrictedRanges.put(apk, infos);            }        }    }   ])', 1), ('([9:/android/content/pm/cts/ResourcesHardeningTest.java]:[restricted]:[9]:method_text:[ {        return (ActivityManager) getContext().getSystemService(Context.ACTIVITY_SERVICE);    }}])', 1), ('([6:/android/content/pm/cts/ResourcesHardeningTest.java]:[restriction]:[6]:method_text:[ {        return (ActivityManager) getContext().getSystemService(Context.ACTIVITY_SERVICE);    }}])', 1), ('([13:/com/android/cts/verifier/managedprovisioning/PolicyTransparencyTestListActivity.java]:[restriction]:[13]:method_text:[tExtra(PolicyTransparencyTestListActivity.EXTRA_MODE, mMode);        startActivity(intent);    }}])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[restricted]:[1]:method_text:[  *     * Verifies that the external scorer is not notified for local only connections.     */   ])', 1), ('([7:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[restricted]:[7]:method_text:[oem paid suggestion connections.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[restricted]:[1]:method_text:[ private suggestion connections.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/android/net/wifi/cts/ConnectedNetworkScorerTest.java]:[restricted]:[1]:method_text:[corerForRestrictedSuggestionConnection(                Set.of(NET_CAPABILITY_OEM_PRIVATE));    }}])', 1), ('([2:/android/suspendapps/cts/DualSuspendTests.java]:[restriction]:[2]:method_text:[dle(Intent.EXTRA_PACKAGE_NAME, TEST_APP_PACKAGE_NAME),                mReceiverHandler);    }   ])', 1), ('([7:/android/suspendapps/cts/DualSuspendTests.java]:[restriction]:[7]:method_text:[);        assertTrue(""Test app not suspended"", mTestAppInterface.isTestAppSuspended());    }   ])', 1), ('([1:/android/suspendapps/cts/DualSuspendTests.java]:[restriction]:[1]:method_text:[hrows Exception {        assertDpmCanSuspendUnderUserRestriction(DISALLOW_APPS_CONTROL);    }   ])', 1), ('([1:/android/suspendapps/cts/DualSuspendTests.java]:[restriction]:[1]:method_text:[ows Exception {        assertDpmCanSuspendUnderUserRestriction(DISALLOW_UNINSTALL_APPS);    }   ])', 1), ('([10:/android/suspendapps/cts/DualSuspendTests.java]:[restriction]:[10]:method_text:[ing restriction "" + userRestriction,                mTestAppInterface.awaitBroadcast());    }   ])', 1), ('([1:/android/suspendapps/cts/DualSuspendTests.java]:[restriction]:[1]:method_text:[d(null, null, null);        assertUnsuspendedOnUserRestriction(DISALLOW_UNINSTALL_APPS);    }   ])', 1), ('([1:/android/suspendapps/cts/DualSuspendTests.java]:[restriction]:[1]:method_text:[end(null, null, null);        assertUnsuspendedOnUserRestriction(DISALLOW_APPS_CONTROL);    }   ])', 1), ('([7:/android/suspendapps/cts/DualSuspendTests.java]:[restriction]:[7]:method_text:[dAndAssertResult(ALL_TEST_PACKAGES, null, null, null,                ALL_TEST_PACKAGES);    }   ])', 1), ('([1:/android/suspendapps/cts/DualSuspendTests.java]:[restriction]:[1]:method_text:[hrows Exception {        assertCannotSuspendUnderUserRestriction(DISALLOW_APPS_CONTROL);    }   ])', 1), ('([1:/android/suspendapps/cts/DualSuspendTests.java]:[restriction]:[1]:method_text:[verHandler);        }        removeDeviceAdmin();        SuspendTestUtils.unsuspendAll();    }}])', 1), ('([1:/android/keystore/cts/KeyAttestationTest.java]:[restricted]:[1]:method_text:[ntext() {        return InstrumentationRegistry.getInstrumentation().getTargetContext();    }   ])', 1), ('([1:/android/keystore/cts/KeyAttestationTest.java]:[restricted]:[1]:method_text:[ntry(keystoreAlias);            }        }    }    @RestrictedBuildTest    @RequiresDevice   ])', 1), ('([1:/android/keystore/cts/KeyAttestationTest.java]:[restricted]:[1]:method_text:[    @RestrictedBuildTest    @RequiresDevice  // Emulators have no place to store the needed key   ])', 1), ('([1:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[restriction]:[1]:method_text:[OLUME can only be set by device owners        // and profile owners on the primary user.    }   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTest.java]:[restriction]:[2]:method_text:[ {        super.testPackageInstallUserRestrictions();    }    @Override    @PermissionsTest   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[restriction]:[1]:method_text:[ }    /**     * The background location permission granted by default for pre-M apps.     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[restriction]:[1]:method_text:[ission should inherit the     * revoked state.     *     * <p>(Pre-M version of test)     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[restriction]:[1]:method_text:[/**     * It should be possible to revoke a permission implicitly added due to a split.     */   ])', 1), ('([1:/android/permission/cts/SplitPermissionTest.java]:[restriction]:[1]:method_text:[    * When a requested permission was granted before upgrade it should still be granted.     */   ])', 1), ('([1:/android/os/cts/AccessSerialModernTest.java]:[restricted]:[1]:method_text:[stricted from accessing persistent device identifiers. */public class AccessSerialModernTest {   ])', 1), ('([2:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[restricted]:[2]:method_text:[using restricted suggestion API.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([1:/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java]:[restricted]:[1]:method_text:[d with readable annotation but access should be    // protected by additional permission check.   ])', 1), ('([1:/com/android/cts/readsettingsfieldsapp/ReadSettingsFieldsTest.java]:[restricted]:[1]:method_text:[eysReadable(Settings.Global.class, publicSettingsKeys,                hiddenSettingsKeys);    }}])', 1), ('([2:/android/keystore/cts/KeyInfoTest.java]:[restricted]:[2]:method_text:[unt();        assertEquals(KeyProperties.UNRESTRICTED_USAGE_COUNT, remainingUsageCount);    }   ])', 1), ('([1:/android/keystore/cts/KeyInfoTest.java]:[restriction]:[1]:method_text:[unt();        assertEquals(KeyProperties.UNRESTRICTED_USAGE_COUNT, remainingUsageCount);    }   ])', 1), ('([1:/android/renderscript/cts/IntrinsicBLAS.java]:[restriction]:[1]:method_text:[, TransA, Diag, mMatrix);                    }                }            }        }    }   ])', 1), ('([1:/android/security/cts/IsolatedProcessTest.java]:[restricted]:[1]:method_text:[(BIND_SERVICE_TIMEOUT, TimeUnit.MILLISECONDS));    }    @AsbSecurityTest(cveBugId = 30202228)   ])', 1), ('([1:/android/security/cts/IsolatedProcessTest.java]:[restricted]:[1]:method_text:[ould not be accessible from an isolated process"",                    service);        }    }   ])', 1), ('([7:/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java]:[restriction]:[7]:method_text:[triction value"",                expected, mUserManager.hasUserRestriction(restriction));    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java]:[restriction]:[2]:method_text:[   mDevicePolicyManager.addUserRestriction(ADMIN_RECEIVER_COMPONENT, ENSURE_VERIFY_APPS);    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java]:[restriction]:[2]:method_text:[ mDevicePolicyManager.clearUserRestriction(ADMIN_RECEIVER_COMPONENT, ENSURE_VERIFY_APPS);    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java]:[restriction]:[2]:method_text:[rofileGlobalRestrictionsEnforced() {        assertRestriction(ENSURE_VERIFY_APPS, true);    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/userrestrictions/ProfileGlobalRestrictionsTest.java]:[restriction]:[2]:method_text:[rofileGlobalRestrictionsNotEnforced() {        assertRestriction(ENSURE_VERIFY_APPS, false);    }])', 1), ('([5:/android/media/cts/AudioRecordTest.java]:[restricted]:[5]:method_text:[                 + source + "" Exception:"" + e);                }            }        }    }   ])', 1), ('([4:/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java]:[restriction]:[4]:method_text:[        }    }    /**     * Tests {@link DevicePolicyManager#isSafeOperation(int)}.     */   ])', 1), ('([4:/com/android/cts/devicepolicy/DevicePolicySafetyCheckerIntegrationTester.java]:[restriction]:[4]:method_text:[ssionsNoReturn(dpm,                (obj) -> obj.setNextOperationSafety(operation, reason));    }}])', 1), ('([1:/android/appsecurity/cts/ResumeOnRebootHostTest.java]:[restriction]:[1]:method_text:[  public InstallMultiple() {            super(getDevice(), getBuild(), getAbi());        }    }}])', 1), ('([2:/android/telephony/cts/ServiceStateTest.java]:[restricted]:[2]:method_text:[ind()) fail(""Found nrState reported as: "" + sss.substring(m.start(), m.end()));        }    }   ])', 1), ('([8:/android/cts/statsdatom/apphibernation/AppHibernationStatsTest.java]:[hibernation]:[8]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([5:/android/cts/statsdatom/apphibernation/AppHibernationStatsTest.java]:[hibernation]:[5]:method_text:[angedEvent(data, /* isHibernating */ true,                getDevice().getCurrentUser());    }   ])', 1), ('([5:/android/cts/statsdatom/apphibernation/AppHibernationStatsTest.java]:[hibernation]:[5]:method_text:[ngedEvent(data, /* isHibernating */ false,                getDevice().getCurrentUser());    }   ])', 1), ('([1:/android/cts/statsdatom/apphibernation/AppHibernationStatsTest.java]:[hibernation]:[1]:method_text:[       }        fail(String.format(""Did not find a matching atom for user %d"", userId));    }   ])', 1), ('([6:/android/cts/statsdatom/apphibernation/AppHibernationStatsTest.java]:[hibernation]:[6]:method_text:[ION_SET_STATE,                (isGlobal ? GLOBAL_OPTION : """"), packageName, isHibernating);    }}])', 1), ('([1:/android/appsecurity/cts/PrivilegedUpdateTests.java]:[restricted]:[1]:method_text:[stallPackage(TEST_PKG);        getDevice().executeShellCommand(""pm enable "" + SHIM_PKG);    }   ])', 1), ('([2:/android/appsecurity/cts/PrivilegedUpdateTests.java]:[restricted]:[2]:method_text:[).installPackage(                mBuildHelper.getTestFile(SHIM_UPDATE_FAIL_APK), true));    }   ])', 1), ('([1:/com.android.cts.deviceadmin/BaseDeviceAdminTest.java]:[restriction]:[1]:method_text:[mumSymbols(mAdminComponent, 0);        dpm.setPasswordMinimumNonLetter(mAdminComponent, 0);    }}])', 1), ('([1:/com/android/cts/verifier/admin/ScreenLockTestActivity.java]:[restricted]:[1]:method_text:[                      .show();                }            }, LOCK_CHECK_DELAY);        }    }}])', 1), ('([1:/android/database/cts/CursorWindowTest.java]:[restriction]:[1]:method_text:[     assertFalse(""Allocation of 2nd row should fail"", cursorWindow.putBlob(bytes, 1, 0));    }   ])', 1), ('([4:/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java]:[restriction]:[4]:method_text:[anager.DISALLOW_AIRPLANE_MODE);        Thread.sleep(SLEEP_MS);        super.tearDown();    }   ])', 1), ('([2:/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java]:[restriction]:[2]:method_text:[DE_ON));        } finally {            mContext.unregisterReceiver(receiver);        }    }   ])', 1), ('([2:/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java]:[restriction]:[2]:method_text:[ettings.Global.getInt(                mContext.getContentResolver(), AIRPLANE_MODE_ON));    }   ])', 1), ('([1:/com/android/cts/deviceowner/AirplaneModeRestrictionTest.java]:[restriction]:[1]:method_text:[, Settings.Global.getInt(                mContext.getContentResolver(), AIRPLANE_MODE_ON));    }}])', 1), ('([4:/android/jobscheduler/cts/JobThrottlingTest.java]:[restricted]:[4]:method_text:[terfering with the        // test.        mUiDevice.executeShellCommand(""am kill-all"");    }   ])', 1), (""([3:/android/jobscheduler/cts/JobThrottlingTest.java]:[restricted]:[3]:method_text:[tStopReason());    }    @RequiresDevice // Emulators don't always have access to wifi/network   ])"", 1), ('([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[restricted]:[1]:method_text:[    /** Tests that apps in the RESTRICTED bucket still get their one parole session per day. */   ])', 1), ('([6:/android/jobscheduler/cts/JobThrottlingTest.java]:[restricted]:[6]:method_text:[et have their parole sessions properly counted even     * when charging (but not idle).     */   ])', 1), (""([7:/android/jobscheduler/cts/JobThrottlingTest.java]:[restricted]:[7]:method_text:[arole session per day     * don't get to run again until the device is charging + idle.     */   ])"", 1), ('([8:/android/jobscheduler/cts/JobThrottlingTest.java]:[restricted]:[8]:method_text:[ED bucket when charging + idle"",                mTestAppInterface.awaitJobStart(3_000));    }   ])', 1), (""([9:/android/jobscheduler/cts/JobThrottlingTest.java]:[restricted]:[9]:method_text:[bStart(3_000));    }    @RequiresDevice // Emulators don't always have access to wifi/network   ])"", 1), ('([10:/android/jobscheduler/cts/JobThrottlingTest.java]:[restricted]:[10]:method_text:[n\'t start in RESTRICTED bucket"",                mTestAppInterface.awaitJobStart(5_000));    }   ])', 1), ('([8:/android/jobscheduler/cts/JobThrottlingTest.java]:[restricted]:[8]:method_text:[P_REASON_APP_STANDBY,                mTestAppInterface.getLastParams().getStopReason());    }   ])', 1), ('([9:/android/jobscheduler/cts/JobThrottlingTest.java]:[restricted]:[9]:method_text:[sTrue();    }    private interface Condition {        boolean isTrue() throws Exception;    }}])', 1), (""([1:/android/jobscheduler/cts/JobThrottlingTest.java]:[restriction]:[1]:method_text:[tStopReason());    }    @RequiresDevice // Emulators don't always have access to wifi/network   ])"", 1), ('([2:/android/jobscheduler/cts/JobThrottlingTest.java]:[restriction]:[2]:method_text:[ions turned off"",                mTestAppInterface.awaitJobStart(DEFAULT_WAIT_TIMEOUT));    }   ])', 1), ('([1:/android/telephonyprovider/cts/SmsTest.java]:[restricted]:[1]:method_text:[);    }    /**     * Verifies that subqueries are not allowed with a restricted view     */   ])', 1), ('([1:/android/view/cts/View_FocusHandlingTest.java]:[restricted]:[1]:method_text:[ v2.requestFocus();        parent.setEnabled(false);        assertTrue(v2.isFocused());    }   ])', 1), ('([1:/android/telephony4/cts/SimRestrictedApisTest.java]:[restricted]:[1]:method_text:[     * a SecurityException since the test apk is not signed by a certificate on the SIM.     */   ])', 1), ('([1:/android/hardware/cts/SensorTestCase.java]:[restricted]:[1]:method_text:[e        public String getName() {            return mTestClass.getSimpleName();        }    }}])', 1), ('([10:/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java]:[restriction]:[10]:method_text:[e that {@link UserManager} understands that it is applied but not as a base restriction.     */   ])', 1), ('([15:/com/android/cts/deviceandprofileowner/userrestrictions/DeviceOwnerUserRestrictionsTest.java]:[restriction]:[15]:method_text:[    hasBaseUserRestriction(r, userHandle));                return;            }        }    }}])', 1), ('([7:/android/jobscheduler/cts/ConnectivityConstraintTest.java]:[restricted]:[7]:method_text:[ device     * is connected to WiFi. This will fail if a wifi connection is unavailable.     */   ])', 1), ('([3:/android/jobscheduler/cts/ConnectivityConstraintTest.java]:[restricted]:[3]:method_text:[ires a network connection, and verify that it runs even     * when Battery Saver is on.     */   ])', 1), ('([3:/android/jobscheduler/cts/ConnectivityConstraintTest.java]:[restricted]:[3]:method_text:[executes     * on a mobile data connection and is stopped when Data Saver is turned on.     */   ])', 1), ('([3:/android/jobscheduler/cts/ConnectivityConstraintTest.java]:[restricted]:[3]:method_text:[ptyMessageDelayed(MSG_CHECK_ACTIVE_NETWORK, 5000);                }            }        }    }}])', 1), ('([1:/android/app/cts/ActivityManagerApi29Test.java]:[restriction]:[1]:method_text:[pp.cts.activitymanager.api29"" package\'s targetSdkVersion is 29.     * @throws Exception     */   ])', 1), ('([1:/android/app/cts/ActivityManagerApi29Test.java]:[restriction]:[1]:method_text:[ access count and reject count     * in HistoricalOps.      *     * @throws Exception     */   ])', 1), ('([1:/android/app/cts/ActivityManagerApi29Test.java]:[restriction]:[1]:method_text:[ FGS started by TOP app can have OP_CAMERA and OP_RECORD_AUDIO.     * @throws Exception     */   ])', 1), ('([1:/android/app/cts/ActivityManagerApi29Test.java]:[restriction]:[1]:method_text:[        () -> sAppOps.noteOp(opStr, sUid, PACKAGE_NAME,                        opStr, """"));    }}])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[restricted]:[1]:method_text:[WithShellPermissions(mTelephonyManager,                TelephonyManager::isDataEnabled);    }   ])', 1), ('([1:/android/telephony/cts/TelephonyManagerTest.java]:[restriction]:[1]:method_text:[isDataEnabled(),                        5 /*times*/, TOLERANCE/5 /*timeout per poll*/));    }   ])', 1), ('([15:/com/android/cts/deviceandprofileowner/CustomizationRestrictionsTest.java]:[restriction]:[15]:method_text:[we check if the new    // wallpaper is different from the old one after we ran a setter method.   ])', 1), ('([5:/com/android/cts/deviceandprofileowner/CustomizationRestrictionsTest.java]:[restriction]:[5]:method_text:[ }        assertFalse(mUserManager.hasUserRestriction(UserManager.DISALLOW_SET_WALLPAPER));    }}])', 1), ('([3:/com/android/cts/deviceowner/BluetoothRestrictionTest.java]:[restriction]:[3]:method_text:[Manager.clearUserRestriction(getWho(), UserManager.DISALLOW_BLUETOOTH);        enable();    }   ])', 1), ('([2:/com/android/cts/deviceowner/BluetoothRestrictionTest.java]:[restriction]:[2]:method_text:[ // Check that enabling Bluetooth fails.        assertFalse(mBluetoothAdapter.enable());    }   ])', 1), ('([3:/com/android/cts/deviceowner/BluetoothRestrictionTest.java]:[restriction]:[3]:method_text:[ // Check that Bluetooth gets disabled as a result.        assertDisabledAfterTimeout();    }   ])', 1), ('([6:/com/android/cts/deviceowner/BluetoothRestrictionTest.java]:[restriction]:[6]:method_text:[te of the activity is set back to default if Bluetooth is not     * disallowed anymore.     */   ])', 1), ('([12:/com/android/cts/deviceowner/BluetoothRestrictionTest.java]:[restriction]:[12]:method_text:[t) {        try {            Thread.sleep(t);        } catch (InterruptedException e) {}    }}])', 1), ('([2:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[restriction]:[2]:method_text:[tion {        super.testCannotRemoveUserIfRestrictionSet();    }    @FlakyTest    @Override   ])', 1), ('([3:/com/android/cts/devicepolicy/MixedDeviceOwnerTest.java]:[restriction]:[3]:method_text:[ApplicationRestrictions() throws Exception {        super.testApplicationRestrictions();    }   ])', 1), ('([4:/android/host/multiuser/SetUsersRestrictionsTest.java]:[restriction]:[4]:method_text:[tiUserTest {    /**     * Tests that set-user-restriction is disabled on user builds.     */   ])', 1), ('([5:/android/host/multiuser/SetUsersRestrictionsTest.java]:[restriction]:[5]:method_text:[tyException. ""                + ""command output: %s"", output).that(isErrorOutput).isTrue();    }}])', 1), ('([1:/android/scopedstorage/cts/host/LegacyStorageHostTest.java]:[restriction]:[1]:method_text:[ion.WRITE_EXTERNAL_STORAGE"",                ""android.permission.READ_EXTERNAL_STORAGE"");    }   ])', 1), ('([4:/com/android/cts/deviceowner/DevicePolicySafetyCheckerIntegrationTest.java]:[restriction]:[4]:method_text:[    };    /**     * Tests that all safety-aware operations are properly implemented.     */   ])', 1), ('([1:/android/hardware/camera2/cts/CameraDeviceTest.java]:[restriction]:[1]:method_text:[    /**     * Verify audio restrictions are set properly for single CameraDevice usage     */   ])', 1), ('([41:/android/hardware/camera2/cts/CameraDeviceTest.java]:[restriction]:[41]:method_text:[_CLOSED, CAMERA_CLOSE_TIMEOUT_MS);                cam1Cb = null;            }        }    }   ])', 1), ('([2:/android/hardware/camera2/cts/CameraDeviceTest.java]:[restriction]:[2]:method_text:[cesAudioRestriction(mCameraIdsUnderTest[i], mCameraIdsUnderTest[j]);            }        }    }}])', 1), ('([3:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[restriction]:[3]:method_text:[not used in test.                    // UserManager.DISALLOW_DEBUGGING_FEATURES            );   ])', 1), ('([25:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[restriction]:[25]:method_text:[ns(ADMIN_RECEIVER_COMPONENT);        assertThat(restrictions.get(restriction)).isNull();    }   ])', 1), ('([13:/com/android/cts/deviceandprofileowner/OrgOwnedProfileOwnerParentTest.java]:[restriction]:[13]:method_text:[ger.clearUserRestriction(ADMIN_RECEIVER_COMPONENT,                        restriction));    }   ])', 1), ('([1:/android/keystore/cts/util/TestUtils.java]:[restriction]:[1]:method_text:[ew byte[messageSize];        new SecureRandom().nextBytes(message);        return message;    }}])', 1), ('([21:/com/android/cts/managedprofile/SetPolicyActivity.java]:[restriction]:[21]:method_text:[Handle());        } else {            Log.e(TAG, ""Invalid command: "" + command);        }    }])', 1), ('([4:/com/android/cts/customizationapp/CustomizationTest.java]:[restriction]:[4]:method_text:[mizationTest extends AndroidTestCase {    private static final int WAITING_TIME_MS = 3 * 1000;   ])', 1), ('([1:/com/android/cts/customizationapp/CustomizationTest.java]:[restriction]:[1]:method_text:[(mContext);        assertTrue(BitmapUtils.compareBitmaps(newWallpaper, originalWallpaper));    }}])', 1), ('([1:/android/provider/cts/calendar/CalendarTest.java]:[restricted]:[1]:method_text:[n the Calendar table, specifying one restricted     * column at a time.     */    @MediumTest   ])', 1), ('([1:/android/provider/cts/calendar/CalendarTest.java]:[restriction]:[1]:method_text:[n the Calendar table, specifying one restricted     * column at a time.     */    @MediumTest   ])', 1), ('([2:/android/security/cts/PackageSignatureTest.java]:[restricted]:[2]:method_text:[ern TEST_PACKAGE_PATTERN = Pattern.compile(""android\\\\.[^\\\\.]+\\\\.cts"");    @RestrictedBuildTest   ])', 1), ('([5:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[restriction]:[5]:method_text:[rRestriction(getWho(), UserManager.DISALLOW_MICROPHONE_TOGGLE);        super.tearDown();    }   ])', 1), ('([3:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[restriction]:[3]:method_text:[                    m -> m.isSensorPrivacyEnabled(SensorPrivacyManager.Sensors.CAMERA)));    }   ])', 1), ('([3:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[restriction]:[3]:method_text:[                m -> m.isSensorPrivacyEnabled(SensorPrivacyManager.Sensors.MICROPHONE)));    }   ])', 1), ('([3:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[restriction]:[3]:method_text:[            }        }        fail(""Camera sensor privacy did not get reset in time"");    }   ])', 1), ('([3:/com/android/cts/deviceowner/SensorToggleRestrictionTest.java]:[restriction]:[3]:method_text:[            }        }        fail(""Microphone sensor privacy did not get reset in time"");    }}])', 1), ('([1:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[restriction]:[1]:method_text:[DNS, false);        mDevicePolicyManager.setGlobalPrivateDnsModeOpportunistic(getWho());    }   ])', 1), ('([3:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[restriction]:[3]:method_text:[r.hasUserRestriction(                UserManager.DISALLOW_CONFIG_PRIVATE_DNS)).isTrue();    }   ])', 1), ('([9:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[restriction]:[9]:method_text:[privateDnsHost, expectedResult, resultCode),                expectedResult, resultCode);    }   ])', 1), ('([3:/com/android/cts/deviceowner/PrivateDnsPolicyTest.java]:[restriction]:[3]:method_text:[ISTIC);        assertThat(mDevicePolicyManager.getGlobalPrivateDnsHost(getWho())).isNull();    }}])', 1), ('([1:/test/java/com/android/queryable/queries/BundleQueryHelperTest.java]:[restriction]:[1]:method_text:[eQueryHelper<>(mQuery);        assertThat(bundleQueryHelper.matches(mBundle)).isTrue();    }   ])', 1), ('([2:/test/java/com/android/queryable/queries/BundleQueryHelperTest.java]:[restriction]:[2]:method_text:[lper.key(KEY).exists();        assertThat(bundleQueryHelper.matches(mBundle)).isTrue();    }   ])', 1), ('([2:/test/java/com/android/queryable/queries/BundleQueryHelperTest.java]:[restriction]:[2]:method_text:[y(KEY).doesNotExist();        assertThat(bundleQueryHelper.matches(mBundle)).isFalse();    }   ])', 1), ('([2:/test/java/com/android/queryable/queries/BundleQueryHelperTest.java]:[restriction]:[2]:method_text:[er.key(KEY2).exists();        assertThat(bundleQueryHelper.matches(mBundle)).isFalse();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/BundleQueryHelperTest.java]:[restriction]:[1]:method_text:[.isEqualTo(STRING_VALUE);        assertThat(bundleQueryHelper.matches(mBundle)).isFalse();    }}])', 1), ('([1:/android/display/cts/DisplayTest.java]:[restricted]:[1]:method_text:[s.length);        return new Point(Integer.parseInt(parts[0]), Integer.parseInt(parts[1]));    }}])', 1), ('([2:/android/host/multiuser/CreateUsersPermissionTest.java]:[restricted]:[2]:method_text:[ {        createRestrictedProfile(mPrimaryUserId);    }    @CddTest(requirement=""9.5/A-1-3"")   ])', 1), ('([8:/com/android/cts/deviceandprofileowner/PasswordMinimumRestrictionsTest.java]:[restriction]:[8]:method_text:[lity(ADMIN_RECEIVER_COMPONENT, mParentPreviousPasswordQuality);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PasswordMinimumRestrictionsTest.java]:[restriction]:[1]:method_text:[        invokeGetMethod(METHOD_LIST[i], mParentDpm, ADMIN_RECEIVER_COMPONENT));        }    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PasswordMinimumRestrictionsTest.java]:[restriction]:[1]:method_text:[     }                // Expected to throw NullPointerException.            }        }    }   ])', 1), ('([8:/com/android/cts/deviceandprofileowner/PasswordMinimumRestrictionsTest.java]:[restriction]:[8]:method_text:[ }    private String getMethodName(String methodName) {        return ""get"" + methodName;    }}])', 1), ('([1:/test/java/com/android/queryable/queries/IntegerQueryHelperTest.java]:[restriction]:[1]:method_text:[elper<>(mQuery);        assertThat(integerQueryHelper.matches(INTEGER_VALUE)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/IntegerQueryHelperTest.java]:[restriction]:[1]:method_text:[(INTEGER_VALUE);        assertThat(integerQueryHelper.matches(INTEGER_VALUE)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/IntegerQueryHelperTest.java]:[restriction]:[1]:method_text:[INTEGER_VALUE);        assertThat(integerQueryHelper.matches(GREATER_VALUE)).isFalse();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/IntegerQueryHelperTest.java]:[restriction]:[1]:method_text:[(INTEGER_VALUE);        assertThat(integerQueryHelper.matches(GREATER_VALUE)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/IntegerQueryHelperTest.java]:[restriction]:[1]:method_text:[To(INTEGER_VALUE);        assertThat(integerQueryHelper.matches(LESS_VALUE)).isFalse();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/IntegerQueryHelperTest.java]:[restriction]:[1]:method_text:[han(INTEGER_VALUE);        assertThat(integerQueryHelper.matches(LESS_VALUE)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/IntegerQueryHelperTest.java]:[restriction]:[1]:method_text:[To(INTEGER_VALUE);        assertThat(integerQueryHelper.matches(GREATER_VALUE)).isFalse();    }}])', 1), ('([6:/com/android/cts/transferowner/DeviceAndProfileOwnerTransferOutgoingTest.java]:[restriction]:[6]:method_text:[Pref(Context context, String key) {        return getPrefs(context).getBoolean(key, false);    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[restriction]:[2]:method_text:[ad.sleep(1000);        }        throw new AssertionError(""Failed to get UiAutomation"");    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[restriction]:[2]:method_text:[riction(ADMIN_RECEIVER_COMPONENT,                UserManager.DISALLOW_CONFIG_DATE_TIME);    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[restriction]:[2]:method_text:[ger.                hasUserRestriction(UserManager.DISALLOW_CONFIG_DATE_TIME)).isTrue();    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[restriction]:[3]:method_text:[            Thread.sleep(100);        }        fail(""The restriction didn\'t go away."");    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[restriction]:[2]:method_text:[dUser() {        assertThat(hasUserRestriction(UserManager.DISALLOW_ADD_USER)).isTrue();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[restriction]:[1]:method_text:[etCameraDisabled(ADMIN_RECEIVER_COMPONENT);        assertThat(actualDisabled).isTrue();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[restriction]:[1]:method_text:[tCameraDisabled(ADMIN_RECEIVER_COMPONENT);        assertThat(actualDisabled).isFalse();    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[restriction]:[2]:method_text:[not used in test.                    // UserManager.DISALLOW_DEBUGGING_FEATURES            );   ])', 1), ('([22:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[restriction]:[22]:method_text:[ISALLOW_CONFIG_DATE_TIME,                    UserManager.DISALLOW_AIRPLANE_MODE            );   ])', 1), ('([21:/com/android/cts/deviceandprofileowner/UserRestrictionsParentTest.java]:[restriction]:[21]:method_text:[    Log.e(TAG, ""Interrupted exception thrown while stopping background thread."");        }    }}])', 1), ('([1:/test/java/com/android/queryable/queries/PersistableBundleQueryHelperTest.java]:[restriction]:[1]:method_text:[;        assertThat(persistableBundleQueryHelper.matches(mPersistableBundle)).isTrue();    }   ])', 1), ('([2:/test/java/com/android/queryable/queries/PersistableBundleQueryHelperTest.java]:[restriction]:[2]:method_text:[;        assertThat(persistableBundleQueryHelper.matches(mPersistableBundle)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/PersistableBundleQueryHelperTest.java]:[restriction]:[1]:method_text:[E);        assertThat(persistableBundleQueryHelper.matches(mPersistableBundle)).isFalse();    }}])', 1), ('([1:/android/location/cts/fine/LocationManagerFineTest.java]:[restriction]:[1]:method_text:[        assertThat(capture.getNextLocation(FAILURE_TIMEOUT_MS)).isEqualTo(loc);        }    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/PersistableBundleKeyQueryHelperTest.java]:[restriction]:[1]:method_text:[   assertThat(persistableBundleKeyQueryHelper.matches(mPersistableBundle, KEY)).isTrue();    }   ])', 1), ('([2:/test/java/com/android/queryable/queries/PersistableBundleKeyQueryHelperTest.java]:[restriction]:[2]:method_text:[     assertThat(persistableBundleKeyQueryHelper.matches(mPersistableBundle, KEY)).isFalse();    }}])', 1), ('([3:/com/android/cts/managedprofile/ParentProfileTest.java]:[restriction]:[3]:method_text:[. those with the     * {@link android.annotation.SystemApi} annotation) are NOT tested.     */   ])', 1), ('([1:/test/java/com/android/queryable/queries/IntentQueryHelperTest.java]:[restriction]:[1]:method_text:[ntQueryHelper<>(mQuery);        assertThat(intentQueryHelper.matches(intent)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/IntentQueryHelperTest.java]:[restriction]:[1]:method_text:[IFFERENT_STRING_VALUE);        assertThat(intentQueryHelper.matches(intent)).isFalse();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/IntentQueryHelperTest.java]:[restriction]:[1]:method_text:[o(DIFFERENT_STRING_VALUE);        assertThat(intentQueryHelper.matches(intent)).isFalse();    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/ContentCaptureRestrictionsTest.java]:[restriction]:[1]:method_text:[ic class ContentCaptureRestrictionsTest extends BaseDeviceAdminTest {    // TODO(b/123540602): use])', 1), ('([2:/com/android/cts/deviceandprofileowner/ContentCaptureRestrictionsTest.java]:[restriction]:[2]:method_text:[ervice() {        runShellCommand(""cmd content_capture set temporary-service %d"", mUserId);    }}])', 1), ('([29:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[restriction]:[29]:method_text:[_RECEIVER_COMPONENT, mContext.getPackageName(), new Bundle());        super.tearDown();    }   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[restriction]:[4]:method_text:[alling identity is not authorized"",                    expected.getMessage());        }    }   ])', 1), ('([23:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[restriction]:[23]:method_text:[icationRestrictions(                ADMIN_RECEIVER_COMPONENT, OTHER_PACKAGE).isEmpty());    }   ])', 1), ('([8:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[restriction]:[8]:method_text:[R_COMPONENT, packageName));        assertBundle1(waitForRestrictionsChangedBroadcast());    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[restriction]:[2]:method_text:[ SecurityException not thrown"");        } catch (SecurityException expected) {        }    }   ])', 1), ('([10:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[restriction]:[10]:method_text:[ictionsManagingPackage(                            ADMIN_RECEIVER_COMPONENT));        }    }   ])', 1), ('([17:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[restriction]:[17]:method_text:[       }        return mUserManager.getApplicationRestrictions(mContext.getPackageName());    }}])', 1), ('([4:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[restriction]:[4]:method_text:[tStrings(DISALLOW_CONFIG_LOCATION, CALLED_FROM_PARENT)                        .build());    }   ])', 1), ('([8:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[restriction]:[8]:method_text:[              ""testUserRestrictionDisallowConfigDateTimeIsNotPersisted"", mPrimaryUserId);    }   ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[restriction]:[3]:method_text:[trictionsParentTest"",                ""testPerProfileUserRestriction_onParent"", mUserId);    }   ])', 1), ('([3:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[restriction]:[3]:method_text:[strictionsParentTest"",                ""testPerDeviceUserRestriction_onParent"", mUserId);    }   ])', 1), ('([6:/com/android/cts/devicepolicy/OrgOwnedProfileOwnerTest.java]:[restriction]:[6]:method_text:[trictionsParentTest"",                    ""testCanOpenCamera"", mPrimaryUserId);        }    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PasswordRequirementsTest.java]:[restriction]:[1]:method_text:[               mDevicePolicyManager.getPasswordMinimumSymbols(ADMIN_RECEIVER_COMPONENT));    }   ])', 1), ('([1:/android/scopedstorage/cts/host/PreserveLegacyStorageHostTest.java]:[restricted]:[1]:method_text:[s get "" + PACKAGE_NAME + "" LEGACY_STORAGE"");        assertThat(result).contains("": allow"");    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/PolicyTransparencyTest.java]:[restriction]:[1]:method_text:[(                DevicePolicyManager.POLICY_DISABLE_CAMERA);        assertNull(intent);    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/PolicyTransparencyTest.java]:[restriction]:[1]:method_text:[          DevicePolicyManager.POLICY_DISABLE_SCREEN_CAPTURE);        assertNull(intent);    }   ])', 1), ('([15:/com/android/cts/deviceandprofileowner/PolicyTransparencyTest.java]:[restriction]:[15]:method_text:[t = mDevicePolicyManager.createAdminSupportIntent(restriction);        assertNull(intent);    }}])', 1), ('([2:/com/android/cts/devicepolicy/AccountCheckHostSideTest.java]:[restriction]:[2]:method_text:[user when     * there is/are different types of accounts added on the target test user.     */   ])', 1), ('([12:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[12]:method_text:[c static void tearDownOnce() {        getContext().unregisterReceiver(sCommandReceiver);    }   ])', 1), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[3]:method_text:[ted permission should be whitelisted.        assertAllRestrictedPermissionWhitelisted();    }   ])', 1), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[3]:method_text:[ld be whitelisted.        assertRestrictedPermissionWhitelisted(whitelistedPermissions);    }   ])', 1), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[3]:method_text:[cted permission should be whitelisted.        assertNoRestrictedPermissionWhitelisted();    }   ])', 1), ('([6:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[6]:method_text:[mission should be granted.        assertRestrictedPermissionGranted(grantedPermissions);    }   ])', 1), ('([2:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[2]:method_text:[ionGranted(grantedPermissions);        } finally {            uninstallApp();        }    }   ])', 1), ('([6:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[6]:method_text:[ restricted permission should be granted.        assertAllRestrictedPermissionGranted();    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[1]:method_text:[hellCanReadAndWrite(                PackageManager.FLAG_PERMISSION_WHITELIST_INSTALLER);    }   ])', 1), ('([4:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[4]:method_text:[s whitelisted on side-load by default        assertAllRestrictedPermissionWhitelisted();    }   ])', 1), ('([5:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[5]:method_text:[RestrictedPermissionUserApp(params);        assertAllRestrictedPermissionWhitelisted();    }   ])', 1), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[3]:method_text:[nUserApp(params);        assertRestrictedPermissionWhitelisted(whitelistedPermissions);    }   ])', 1), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[3]:method_text:[lRestrictedPermissionUserApp(params);        assertNoRestrictedPermissionWhitelisted();    }   ])', 1), ('([40:/android/permission2/cts/RestrictedPermissionsTest.java]:[restricted]:[40]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[restriction]:[1]:method_text:[ted permission should be whitelisted.        assertAllRestrictedPermissionWhitelisted();    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[restriction]:[1]:method_text:[ld be whitelisted.        assertRestrictedPermissionWhitelisted(whitelistedPermissions);    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[restriction]:[1]:method_text:[mission should be granted.        assertRestrictedPermissionGranted(grantedPermissions);    }   ])', 1), ('([1:/android/permission2/cts/RestrictedPermissionsTest.java]:[restriction]:[1]:method_text:[ restricted permission should be granted.        assertAllRestrictedPermissionGranted();    }   ])', 1), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[restriction]:[3]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 1), ('([17:/com/android/cts/vpnfirewall/ReflectorVpnService.java]:[restriction]:[17]:method_text:[, ""Closing filedescriptor failed"", e);        } finally {            mFd = null;        }    }}])', 1), ('([1:/android/telephony/cts/SmsManagerTest.java]:[restriction]:[1]:method_text:[ssageId= */ true);        sendAndReceiveMultipartSms(mccmnc, /* addMessageId= */ false);    }   ])', 1), ('([1:/android/telephony/cts/SmsManagerTest.java]:[restriction]:[1]:method_text:[ mSentIntent, mDeliveredIntent);            return true;        }        return false;    }   ])', 1), ('([1:/android/app/cts/backgroundrestrictions/BroadcastsTest.java]:[restriction]:[1]:method_text:[droid.launcher.action.INSTALL_SHORTCUT"" won\'t be delivered to a runtime     * receiver.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/DevicePolicyLoggingParentTest.java]:[restriction]:[3]:method_text:[estriction(ADMIN_RECEIVER_COMPONENT,                UserManager.DISALLOW_CONFIG_LOCATION);    }}])', 1), ('([5:/android/widget/cts/TextViewTest.java]:[restricted]:[5]:method_text:[ance);        assertEquals(Typeface.DEFAULT, mTextView.getTypeface());    }    @UiThreadTest   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedProfileOwnerTest.java]:[restriction]:[2]:method_text:[ns() throws Exception {        super.testPackageInstallUserRestrictions();    }    @Override   ])', 1), ('([1:/android/telephony/ims/cts/TestImsService.java]:[restriction]:[1]:method_text:[;        }    }    public ImsConfigImplBase getConfig() {        return mTestImsConfig;    }}])', 1), ('([1:/android/security/cts/RunningAppProcessInfoTest.java]:[restriction]:[1]:method_text:[is not able to get other process information.     */    @AsbSecurityTest(cveBugId = 20034603)   ])', 1), ('([2:/android/host/accounts/BaseMultiUserTest.java]:[restricted]:[2]:method_text:[ %s"", output);            fail(""\'am wait-for-broadcase-idle\' did not complete."");        }    }}])', 1), ('([1:/android/appsecurity/cts/ApexSignatureVerificationTest.java]:[restricted]:[1]:method_text:[e, Description description, Throwable t) {            mHasTestFailure = true;        }    };   ])', 1), ('([1:/android/appsecurity/cts/ApexSignatureVerificationTest.java]:[restricted]:[1]:method_text:[oduction (user) builds.     */    @SuppressWarnings(""productionOnly"")    @RestrictedBuildTest   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileUtils.java]:[restriction]:[1]:method_text:[ADMIN_RECEIVER_COMPONENT,                UserManager.DISALLOW_CROSS_PROFILE_COPY_PASTE);    }   ])', 1), ('([1:/com/android/cts/managedprofile/CrossProfileUtils.java]:[restriction]:[1]:method_text:[rManager.DISALLOW_CROSS_PROFILE_COPY_PASTE);    }    // Disables all browsers in current user   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/ContentSuggestionsRestrictionsTest.java]:[restriction]:[2]:method_text:[T,                    DISALLOW_CONTENT_SUGGESTIONS);        }        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ContentSuggestionsRestrictionsTest.java]:[restriction]:[1]:method_text:[ce() {        runShellCommand(""cmd content_suggestions set temporary-service %d"", mUserId);    }}])', 1), ('([38:/com/android/cts/verifier/managedprovisioning/DeviceOwnerPositiveTestActivity.java]:[restriction]:[38]:method_text:[vicePolicyManager.class);        return dpm != null && dpm.canUsbDataSignalingBeDisabled();    }}])', 1), ('([5:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[restriction]:[5]:method_text:[MPONENT, VPN_PACKAGE,                /* restrictions */ null);        super.tearDown();    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[restriction]:[3]:method_text:[ADMIN_RECEIVER_COMPONENT,                    UserManager.DISALLOW_CONFIG_VPN);        }    }   ])', 1), ('([5:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[restriction]:[5]:method_text:[/ true, /* allowlist */ false);        assertTrue(VpnTestHelper.isNetworkVpn(mContext));    }   ])', 1), ('([5:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[restriction]:[5]:method_text:[orkVpn(mContext));    }    // Tests that changes to lockdown allowlist are applied correctly.   ])', 1), ('([5:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[restriction]:[5]:method_text:[isterQuietly();    }    // Tests that when VPN comes up, allowlisted app switches over to it.   ])', 1), ('([6:/com/android/cts/deviceandprofileowner/AlwaysOnVpnTest.java]:[restriction]:[6]:method_text:[PN.        VpnTestHelper.checkPing(TEST_ADDRESS);        receiver.unregisterQuietly();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/UserHandleQueryHelperTest.java]:[restriction]:[1]:method_text:[lper<>(mQuery);        assertThat(userHandleQueryHelper.matches(USER_HANDLE)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/UserHandleQueryHelperTest.java]:[restriction]:[1]:method_text:[o(USER_HANDLE);        assertThat(userHandleQueryHelper.matches(USER_HANDLE)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/UserHandleQueryHelperTest.java]:[restriction]:[1]:method_text:[LE);        assertThat(userHandleQueryHelper.matches(DIFFERENT_USER_HANDLE)).isFalse();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/UserHandleQueryHelperTest.java]:[restriction]:[1]:method_text:[SER_HANDLE_ID);        assertThat(userHandleQueryHelper.matches(USER_HANDLE)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/UserHandleQueryHelperTest.java]:[restriction]:[1]:method_text:[LE_ID);        assertThat(userHandleQueryHelper.matches(DIFFERENT_USER_HANDLE)).isFalse();    }}])', 1), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[restriction]:[1]:method_text:[ixed if we display default directories.        // assertThat(topLevelDirs).isNotEmpty();    }   ])', 1), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[restriction]:[1]:method_text:[   }    /**     * Test that basic file path restrictions are enforced on file rename.     */   ])', 1), ('([1:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[restriction]:[1]:method_text:[ Test that renaming directories is allowed and aligns to default directory restrictions.     */   ])', 1), ('([2:/android/scopedstorage/cts/device/ScopedStorageDeviceTest.java]:[restriction]:[2]:method_text:[""Deleting file "" + file);        deleteFileAs(APP_D_LEGACY_HAS_RW, file.getAbsolutePath());    }}])', 1), ('([6:/android/permission2/cts/PermissionPolicyTest.java]:[restricted]:[6]:method_text:[           this.flags = flags;            this.protectionLevel = protectionLevel;        }    }}])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[restriction]:[2]:method_text:[th device owner and profile are the same package ({@link #COMP_DPC_PKG}).     */    @LargeTest   ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[restriction]:[3]:method_text:[llowRemoveUserRestriction();        assertTrue(getDevice().removeUser(secondaryUserId));    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[restriction]:[2]:method_text:[ "" com.android.cts.comp/.WipeDataReceiver"";        getDevice().executeShellCommand(cmd);    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[restriction]:[2]:method_text:[sendWipeProfileBroadcast(secondaryUserId);        waitUntilUserRemoved(secondaryUserId);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[restriction]:[1]:method_text:[UntilUserRemoved(secondaryUserId);        }, WIPE_DATA_WITH_REASON_DEVICE_POLICY_EVENT);    }   ])', 1), ('([6:/com/android/cts/devicepolicy/DeviceOwnerPlusProfileOwnerTest.java]:[restriction]:[6]:method_text:[              ""testOtherProfilesEqualsBindTargetUsers"",                otherProfileUserId);    }}])', 1), ('([12:/communication/main/java/com/android/bedstead/remotedpc/managers/RemoteDevicePolicyManager.java]:[restriction]:[12]:method_text:[min void addPersistentPreferredActivity(            IntentFilter filter, ComponentName activity);}])', 1), ('([2:/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java]:[restriction]:[2]:method_text:[riction(ADMIN_RECEIVER_COMPONENT, DISALLOW_AUTOFILL);        }        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AutofillRestrictionsTest.java]:[restriction]:[1]:method_text:[+ mUserId + "": "" + expected                + ""; actual: "" + actual + "" after 0.5 seconds"");    }}])', 1), ('([8:/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java]:[restriction]:[8]:method_text:[etting all DO restrictions. Global restrictions should be     * visible on other users.     */   ])', 1), ('([6:/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java]:[restriction]:[6]:method_text:[O setting all PO restrictions.     * All global + local restrictions should be visible.     */   ])', 1), ('([7:/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java]:[restriction]:[7]:method_text:[rictions,     * then DO clearing all restrictions.  Only PO restrictions should be set.     */   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java]:[restriction]:[4]:method_text:[ restrictions should be set. Excludes restrictions that leak from other     * profiles.     */   ])', 1), ('([6:/com/android/cts/deviceandprofileowner/userrestrictions/SecondaryProfileOwnerUserRestrictionsTest.java]:[restriction]:[6]:method_text:[ted = new HashSet<>(Arrays.asList(ALLOWED_BUT_LEAKY));        assertRestrictions(expected);    }}])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restricted]:[1]:method_text:[elper"",            ""testAssertCallerIsApplicationRestrictionsManagingPackage"", mUserId);    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restricted]:[2]:method_text:[and(                restricted ? RESTRICT_BACKGROUND_ON_CMD : RESTRICT_BACKGROUND_OFF_CMD);    }}])', 1), ('([7:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[7]:method_text:[.        getDevice().executeShellCommand(""input keyevent 3"");        super.tearDown();    }   ])', 1), ('([7:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[7]:method_text:[elper"",            ""testAssertCallerIsApplicationRestrictionsManagingPackage"", mUserId);    }   ])', 1), ('([25:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[25]:method_text:[Delegations} to test that     *    the scope can only be delegatd to one app at a time.     */   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[2]:method_text:[tallDelegateApp() throws Exception {        installAppAsUser(DELEGATE_APP_APK, mUserId);    }   ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[4]:method_text:[CCOUNTS, false, mUserId);        }        executeAccountTest(""testAddAccount_allowed"");    }   ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[4]:method_text:[UNTS, false, mUserId);        }        executeAccountTest(""testRemoveAccount_allowed"");    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[2]:method_text:[n app, that tries to set wallpaper.    // Non-admin apps must not violate any user restriction.   ])', 1), ('([4:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[4]:method_text:[    // inside. But these restrictions must have no effect on the device/profile owner behavior.   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[1]:method_text:[od("".CustomizationRestrictionsTest"",                ""testDisallowSetWallpaper_allowed"");    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[1]:method_text:[eTestMethod("".AutofillRestrictionsTest"",                ""testDisallowAutofill_allowed"");    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[1]:method_text:[;        } finally {            setDefaultContentCaptureServiceEnabled(true);        }    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[1]:method_text:[           ""cmd content_capture set default-service-enabled "" + mUserId + "" "" + enabled);    }   ])', 1), ('([1:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[1]:method_text:[abled(true);            executeDeviceTestClass("".MeteredDataRestrictionTest"");        }    }   ])', 1), ('([9:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[9]:method_text:[TEST_APP_PKG);            getDevice().uninstallPackage(PACKAGE_INSTALLER_PKG);        }    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[2]:method_text:[ally {            disallowNotificationPolicyAccess(DEVICE_ADMIN_PKG, mUserId);        }    }   ])', 1), ('([3:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[3]:method_text:[_USER, false, mUserId);            assertTrue(getDevice().removeUser(userId));        }    }   ])', 1), ('([8:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[8]:method_text:[trings(DISALLOW_AUTOFILL, NOT_CALLED_FROM_PARENT)                    .build()        );    }   ])', 1), ('([12:/com/android/cts/devicepolicy/DeviceAndProfileOwnerTest.java]:[restriction]:[12]:method_text:[and(                restricted ? RESTRICT_BACKGROUND_ON_CMD : RESTRICT_BACKGROUND_OFF_CMD);    }}])', 1), ('([1:/android/os/cts/BuildTest.java]:[restricted]:[1]:method_text:[ ABI fields are consistent.     */    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([1:/android/os/cts/BuildTest.java]:[restricted]:[1]:method_text:[s.     */    @RestrictedBuildTest    @AppModeFull(reason = ""Instant apps cannot access APIs"")   ])', 1), ('([1:/android/cts/backup/MultiUserBackupStateTest.java]:[restriction]:[1]:method_text:[);            assertTrue(""Couldn\'t remove user"", getDevice().removeUser(userId));        }    }}])', 1), ('([2:/com.android.cts.deviceadmin/DeviceAdminTest.java]:[restriction]:[2]:method_text:[lly {            dpm.setPasswordHistoryLength(mAdminComponent, originalValue);        }    }   ])', 1), ('([1:/android/security/cts/BannedFilesTest.java]:[restricted]:[1]:method_text:[ugs-and-more-plagiarism/     * http://forum.xda-developers.com/showthread.php?t=1213014     */   ])', 1), ('([1:/android/security/cts/BannedFilesTest.java]:[restricted]:[1]:method_text:[alse(""/dev/socket/fota"", new File(""/dev/socket/fota"").exists());    }    @RestrictedBuildTest   ])', 1), ('([1:/android/security/cts/BannedFilesTest.java]:[restricted]:[1]:method_text:[rtFalse(""/vendor/bin/su"",  new File(""/vendor/bin/su"").exists());    }    @RestrictedBuildTest   ])', 1), ('([1:/android/widget/cts/CalendarViewTest.java]:[restriction]:[1]:method_text:[ter maxDate"");        } catch (IllegalArgumentException e) {        }    }    @UiThreadTest   ])', 1), ('([5:/android/cts/statsdatom/appstart/AppStartStatsTests.java]:[hibernation]:[5]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([1:/android/cts/statsdatom/appstart/AppStartStatsTests.java]:[hibernation]:[1]:method_text:[onDelayMillis()).isGreaterThan(0);        assertThat(atom.getIsHibernating()).isFalse();    }   ])', 1), ('([2:/android/cts/statsdatom/appstart/AppStartStatsTests.java]:[hibernation]:[2]:method_text:[0).getAtom().getAppStartOccurred();        assertThat(atom.getIsHibernating()).isTrue();    }   ])', 1), ('([4:/android/cts/statsdatom/appstart/AppStartStatsTests.java]:[hibernation]:[4]:method_text:[) {        return CMD_APP_HIBERNATION_SET_STATE_GLOBAL + packageName + "" "" + isHibernating;    }}])', 1), ('([18:/com/android/suspendapps/testdeviceadmin/TestCommsReceiver.java]:[restriction]:[18]:method_text:[userRestriction);                setResultCode(RESULT_OK);                break;        }    }}])', 1), (""([2:/android/dpi/cts/DefaultManifestAttributesSdkTest.java]:[restricted]:[2]:method_text:[y test to make sure that we're instrumenting the proper package     */    @RestrictedBuildTest   ])"", 1), ('([2:/com/android/cts/managedprofile/DevicePolicyManagerParentSupportTest.java]:[restriction]:[2]:method_text:[ntName(            FakeComponent.class.getPackage().getName(), FakeComponent.class.getName());   ])', 1), ('([1:/com/android/cts/launcherapps/simpleapp/SimpleActivityStartFgService.java]:[restriction]:[1]:method_text:[tra(""result"", Activity.RESULT_CANCELED);        sendBroadcast(reply);        return false;    }}])', 1), ('([2:/com/android/cts/verifier/managedprovisioning/ManagedUserPositiveTestActivity.java]:[restriction]:[2]:method_text:[support.        return !getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([1:/android/appsecurity/cts/AppSecurityTests.java]:[restricted]:[1]:method_text:[pdate cannot be installed over an existing app if it has a different     * certificate.     */   ])', 1), ('([1:/android/appsecurity/cts/AppSecurityTests.java]:[restricted]:[1]:method_text:[d, but JUnit4TestNotRun reports the test will not be run because    // the method does not have the])', 1), ('([1:/android/appsecurity/cts/AppSecurityTests.java]:[restricted]:[1]:method_text:[ationDiffCert_full() throws Exception {        testInstrumentationDiffCert(false, false);    }   ])', 1), ('([1:/android/app/cts/ActivityManagerTest.java]:[restricted]:[1]:method_text:[ProcessID != -1) {            android.os.Process.killProcess(mErrorProcessID);        }    }   ])', 1), ('([3:/android/app/cts/ActivityManagerTest.java]:[restricted]:[3]:method_text:[ForcedAppStandby(targetPackage, false);        assertFalse(am.isBackgroundRestricted());    }   ])', 1), ('([1:/android/app/cts/ActivityManagerTest.java]:[restricted]:[1]:method_text:[that {@link ActivityManager#isRunningInTestHarness()} is false.     */    @RestrictedBuildTest   ])', 1), ('([3:/com/android/cts/managedprofile/BluetoothSharingRestrictionTest.java]:[restriction]:[3]:method_text:[ * Tests that Bluetooth sharing activity gets disabled when the restriction is enforced.     */   ])', 1), ('([12:/com/android/cts/managedprofile/BluetoothSharingRestrictionTest.java]:[restriction]:[12]:method_text:[         TestCase.fail(component + "" isn\'t available as a handler for "" + intent);        }    }}])', 1), ('([2:/android/text/cts/FontResourceTest.java]:[restricted]:[2]:method_text:[ext(inflateWithRemoteViews(context)))                .isNotEqualTo(REMOTE_FONT_TEXT_WIDTH);    }}])', 1), ('([8:/com/android/cts/verifier/managedprovisioning/NfcTestActivity.java]:[restriction]:[8]:method_text:[               new NdefRecord(NdefRecord.TNF_MIME_MEDIA, mimeBytes, id, payload)        });    }}])', 1), ('([3:/android/media/cts/BaseMultiUserTest.java]:[restricted]:[3]:method_text:[       boolean result = mAvailableFeatures.contains(requiredFeature);        return result;    }}])', 1), ('([1:/android/media/cts/BaseMultiUserTest.java]:[restriction]:[1]:method_text:[       boolean result = mAvailableFeatures.contains(requiredFeature);        return result;    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/AccountManagementParentTest.java]:[restricted]:[1]:method_text:[      assertThat(mDevicePolicyManager.getAccountTypesWithManagementDisabled()).isEmpty();    }   ])', 1), ('([25:/com/android/cts/deviceandprofileowner/SetPolicyActivity.java]:[restriction]:[25]:method_text:[ scopes);        } else {            Log.e(TAG, ""Invalid command: "" + command);        }    }}])', 1), ('([1:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[restriction]:[1]:method_text:[estrictions imposed by     * MediaProvider. <p> Assumes we have WRITE_EXTERNAL_STORAGE.     */   ])', 1), ('([1:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[restriction]:[1]:method_text:[estrictions imposed by MediaProvider.     * <p> Assumes we have WRITE_EXTERNAL_STORAGE.     */   ])', 1), ('([1:/android/scopedstorage/cts/legacy/LegacyStorageTest.java]:[restriction]:[1]:method_text:[EXTERNAL_STORAGE permission bypasses rename     * restrictions imposed by MediaProvider     */   ])', 1), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[restriction]:[2]:method_text:[earUserRestriction(getWho(), UserManager.DISALLOW_REMOVE_USER);        super.tearDown();    }   ])', 1), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[restriction]:[2]:method_text:[omponentName),                UserManager.USER_OPERATION_SUCCESS, ""cannot logout user"");    }   ])', 1), ('([1:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[restriction]:[1]:method_text:[serHandle;    }    // createAndManageUser should circumvent the DISALLOW_ADD_USER restriction   ])', 1), ('([2:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[restriction]:[2]:method_text:[UserRestriction(getWho(), UserManager.DISALLOW_ADD_USER);        createAndManageUser();    }   ])', 1), ('([3:/com/android/cts/deviceowner/CreateAndManageUserTest.java]:[restriction]:[3]:method_text:[ertWithMessage(""user on broadcasts"").that(usersOnBroadcasts).containsExactly(userHandle);    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/ActivityQueryHelperTest.java]:[restriction]:[1]:method_text:[Query);        assertThat(activityQueryHelper.matches(CLASS_1_ACTIVITY_INFO)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/BundleKeyQueryHelperTest.java]:[restriction]:[1]:method_text:[lper<>(mQuery);        assertThat(bundleKeyQueryHelper.matches(mBundle, KEY)).isTrue();    }   ])', 1), ('([2:/test/java/com/android/queryable/queries/BundleKeyQueryHelperTest.java]:[restriction]:[2]:method_text:[(STRING_VALUE);        assertThat(bundleKeyQueryHelper.matches(mBundle, KEY)).isTrue();    }   ])', 1), ('([2:/test/java/com/android/queryable/queries/BundleKeyQueryHelperTest.java]:[restriction]:[2]:method_text:[STRING_VALUE);        assertThat(bundleKeyQueryHelper.matches(mBundle, KEY)).isFalse();    }   ])', 1), ('([2:/test/java/com/android/queryable/queries/BundleKeyQueryHelperTest.java]:[restriction]:[2]:method_text:[KEY2).exists();        assertThat(bundleKeyQueryHelper.matches(mBundle, KEY)).isTrue();    }   ])', 1), ('([2:/test/java/com/android/queryable/queries/BundleKeyQueryHelperTest.java]:[restriction]:[2]:method_text:[EY2).exists();        assertThat(bundleKeyQueryHelper.matches(mBundle, KEY)).isFalse();    }   ])', 1), ('([2:/test/java/com/android/queryable/queries/BundleKeyQueryHelperTest.java]:[restriction]:[2]:method_text:[mSerializable);        assertThat(bundleKeyQueryHelper.matches(mBundle, KEY)).isTrue();    }   ])', 1), ('([2:/test/java/com/android/queryable/queries/BundleKeyQueryHelperTest.java]:[restriction]:[2]:method_text:[Serializable);        assertThat(bundleKeyQueryHelper.matches(mBundle, KEY)).isFalse();    }   ])', 1), ('([2:/test/java/com/android/queryable/queries/BundleKeyQueryHelperTest.java]:[restriction]:[2]:method_text:[elper.exists();        assertThat(bundleKeyQueryHelper.matches(mBundle, KEY)).isTrue();    }   ])', 1), ('([2:/test/java/com/android/queryable/queries/BundleKeyQueryHelperTest.java]:[restriction]:[2]:method_text:[lper.exists();        assertThat(bundleKeyQueryHelper.matches(mBundle, KEY)).isFalse();    }   ])', 1), ('([2:/test/java/com/android/queryable/queries/BundleKeyQueryHelperTest.java]:[restriction]:[2]:method_text:[doesNotExist();        assertThat(bundleKeyQueryHelper.matches(mBundle, KEY)).isTrue();    }   ])', 1), ('([2:/test/java/com/android/queryable/queries/BundleKeyQueryHelperTest.java]:[restriction]:[2]:method_text:[r.doesNotExist();        assertThat(bundleKeyQueryHelper.matches(mBundle, KEY)).isFalse();    }}])', 1), ('([1:/android/contentcaptureservice/cts/ChildlessActivityTest.java]:[restriction]:[1]:method_text:[der(@NonNull String id) {        return new ContentCaptureContext.Builder(new LocusId(id));    }}])', 1), ('([2:/android/text/style/cts/TextAppearanceSpanTest.java]:[restricted]:[2]:method_text:[ restricted context.        assertEquals(originalTextWidth, tp.measureText(""a""), 0.0f);    }   ])', 1), ('([2:/com/android/cts/devicepolicy/MixedManagedProfileOwnerTestApi30.java]:[restriction]:[2]:method_text:[LockScreenFeature();        executeDeviceTestClass("".PasswordMinimumRestrictionsTest"");    }   ])', 1), ('([1:/android/keystore/cts/KeyPairGeneratorTest.java]:[restriction]:[1]:method_text:[yptionPaddings(KeyProperties.ENCRYPTION_PADDING_PKCS7)                        .build());    }   ])', 1), ('([1:/android/keystore/cts/KeyPairGeneratorTest.java]:[restriction]:[1]:method_text:[izedEncryptionRequired(false)                        .build());    }    // http://b/28384942   ])', 1), (""([5:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[restriction]:[5]:method_text:[ there's one user on the device or all     * secondary users / profiles are affiliated.     */   ])"", 1), ('([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[restriction]:[1]:method_text:[            }        }    }    /**     * Generates events for positive test cases.     */   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[restriction]:[1]:method_text:[tches. Shared preference     * is used to store these numbers between test invocations.     */   ])', 1), ('([12:/com/android/cts/deviceandprofileowner/SecurityLoggingTest.java]:[restriction]:[12]:method_text:[vents.size() + "" events):"");        events.forEach((event) -> Log.d(TAG, toString(event)));    }}])', 1), ('([4:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsIsCallerDelegateHelper.java]:[restriction]:[4]:method_text:[st {    private static final String APP_RESTRICTIONS_TARGET_PKG = ""com.android.cts.delegate"";   ])', 1), ('([5:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsIsCallerDelegateHelper.java]:[restriction]:[5]:method_text:[nager.getApplicationRestrictionsManagingPackage(                ADMIN_RECEIVER_COMPONENT));    }}])', 1), ('([9:/com/android/cts/verifier/camera/its/ItsService.java]:[restriction]:[9]:method_text:[E;        }        throw new ItsException(""Uknown reprocess format: "" + reprocessFormat);    }}])', 1), ('([38:/com/android/cts/devicepolicy/BaseDevicePolicyTest.java]:[restriction]:[38]:method_text:[hrows InterruptedException {        CLog.d(""Sleeping %d ms"");        Thread.sleep(timeMs);    }}])', 1), ('([2:/android/os/cts/UsbDebuggingTest.java]:[restricted]:[2]:method_text:[java.io.File;public class UsbDebuggingTest extends AndroidTestCase {    @RestrictedBuildTest   ])', 1), ('([17:/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java]:[restricted]:[17]:method_text:[      // has not come up yet.        } while (latestNetId == 0 || latestNetId == oldNetId);    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/MeteredDataRestrictionTest.java]:[restriction]:[2]:method_text:[id tearDown() throws Exception {        super.tearDown();        resetMeteredNetwork();    }   ])', 1), ('([1:/com/android/cts/verifier/audio/USBRestrictRecordAActivity.java]:[restricted]:[1]:method_text:[ filter);            mUsbManager.requestPermission(theDevice, permissionIntent);        }    }}])', 1), (""([1:/android/telephony/cts/SubscriptionManagerTest.java]:[restricted]:[1]:method_text:[R} network must both be     * either defined or undefined; you can't cross the streams.     */   ])"", 1), ('([2:/android/telephony/cts/SubscriptionManagerTest.java]:[restricted]:[2]:method_text:[ager.NETWORK_TYPE_NR;        return validCarrier && validNetworkType && validCapabilities;    }}])', 1), ('([1:/android/media/session/cts/MediaSessionManagerHostTest.java]:[restricted]:[1]:method_text:[ger#getActiveSessions} with restricted profiles.     */    @AppModeInstant    @RequiresDevice   ])', 1), ('([3:/android/media/session/cts/MediaSessionManagerHostTest.java]:[restricted]:[3]:method_text:[anager#getActiveSessions} with restricted profiles.     */    @AppModeFull    @RequiresDevice   ])', 1), ('([5:/android/media/session/cts/MediaSessionManagerHostTest.java]:[restricted]:[5]:method_text:[anager#getActiveSessions} with managed profiles.     */    @AppModeInstant    @RequiresDevice   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java]:[restriction]:[2]:method_text:[lumeDevice();    }    // Here we test that DISALLOW_ADJUST_VOLUME disallows to unmute volume.   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java]:[restriction]:[3]:method_text:[ePolicyManager.setMasterVolumeMuted(ADMIN_RECEIVER_COMPONENT, initVolumeMuted);        }    }   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java]:[restriction]:[4]:method_text:[}        mediaPlayer.stop();        mediaPlayer.release();        mediaPlayer = null;    }   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/AudioRestrictionTest.java]:[restriction]:[3]:method_text:[null$"", line))) {                return true;            }        }        return false;    }}])', 1), ('([2:/android/devicepolicy/cts/PreferentialNetworkServiceTest.java]:[restricted]:[2]:method_text:[he provider that provides enterprise slice can     * see the enterprise slice requests.     */   ])', 1), ('([5:/android/app/usage/cts/UsageStatsTest.java]:[restricted]:[5]:method_text:[ity(clazz);        }    }    @AppModeFull(reason = ""No usage events access in instant apps"")   ])', 1), ('([6:/android/app/usage/cts/UsageStatsTest.java]:[restricted]:[6]:method_text:[t apps    @AppModeFull(reason = ""Test APK Activity not found when installed as an instant app"")   ])', 1), ('([2:/android/app/usage/cts/UsageStatsTest.java]:[restricted]:[2]:method_text:[        } catch(Exception e) {                return true;            }        }, false);    }}])', 1), ('([2:/com/android/cts/delegate/CertInstallDelegateTest.java]:[restriction]:[2]:method_text:[e(ComponentName, String)} */public class CertInstallDelegateTest extends BaseJUnit3TestCase {   ])', 1), ('([8:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[restricted]:[8]:method_text:[work using restricted suggestion API.     * 3. Verify that both connections are active.     */   ])', 1), ('([4:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[restricted]:[4]:method_text:[work using restricted suggestion API.     * 3. Verify that both connections are active.     */   ])', 1), ('([3:/android/net/wifi/cts/MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest.java]:[restricted]:[3]:method_text:[on available for apps.        assertThat(mTestHelper.getNumWifiConnections()).isEqualTo(1);    }}])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[restricted]:[1]:method_text:[* Test that a single ""can\'t save state"" app has the proper process management semantics.     */   ])', 1), ('([1:/android/app/cts/ActivityManagerProcessStateTest.java]:[restriction]:[1]:method_text:[ound services demoted to     * ordinary service state when it is no longer the top app.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/userrestrictions/CheckNoOwnerRestrictionsTest.java]:[restriction]:[3]:method_text:[em are no longer * set. */public class CheckNoOwnerRestrictionsTest extends AndroidTestCase {   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/userrestrictions/CheckNoOwnerRestrictionsTest.java]:[restriction]:[2]:method_text:[Manager.class).hasUserRestriction(                UserManager.DISALLOW_UNMUTE_MICROPHONE));    }}])', 1), ('([1:/android/app/cts/backgroundrestrictions/MyReceiver.java]:[restriction]:[1]:method_text:[ {        return new ComponentName(InstrumentationRegistry.getContext(), MyReceiver.class);    }}])', 1), ('([1:/test/java/com/android/queryable/queries/SerializableQueryHelperTest.java]:[restriction]:[1]:method_text:[<>(mQuery);        assertThat(serializableQueryHelper.matches(mSerializable)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/SerializableQueryHelperTest.java]:[restriction]:[1]:method_text:[ializable);        assertThat(serializableQueryHelper.matches(mSerializable)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/SerializableQueryHelperTest.java]:[restriction]:[1]:method_text:[erializable);        assertThat(serializableQueryHelper.matches(mSerializable)).isFalse();    }}])', 1), ('([18:/android/location/cts/gnss/asn1/base/Asn1IA5String.java]:[restricted]:[18]:method_text:[ng()) {        return CoderResult.OVERFLOW;      }      return CoderResult.UNDERFLOW;    }  }}])', 1), ('([1:/android/print/cts/PrintDocumentInfoTest.java]:[restricted]:[1]:method_text:[intDocumentInfo are fine.     *     * @throws Exception If anything unexpected happens     */   ])', 1), ('([2:/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java]:[restricted]:[2]:method_text:[            return 0;        }        return 1 + (int)((now - start - 1000)/interval);    }   ])', 1), ('([2:/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java]:[restriction]:[2]:method_text:[        + "" times when restrictions were lifted"", waitForAlarms(minCount, DEFAULT_WAIT));    }   ])', 1), ('([1:/android/alarmmanager/cts/BackgroundRestrictedAlarmsTest.java]:[restriction]:[1]:method_text:[arms && SystemClock.uptimeMillis() < deadLine);        return alarmCount >= expectedAlarms;    }}])', 1), ('([2:/com/android/cts/appsearch/external/app/AppSearchSessionCtsTestBase.java]:[restricted]:[2]:method_text:[get(""id1"").getResultCode())                .isEqualTo(AppSearchResult.RESULT_NOT_FOUND);    }   ])', 1), ('([2:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[restricted]:[2]:method_text:[ces.transport.getDelegates().size());        verifyUpdateRegistrationCalled(ifaces.reg);    }   ])', 1), ('([1:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[restricted]:[1]:method_text:[ces.transport.getDelegates().size());        verifyUpdateRegistrationCalled(ifaces.reg);    }   ])', 1), ('([2:/android/telephony/ims/cts/SipDelegateManagerTest.java]:[restricted]:[2]:method_text:[ext getContext() {        return InstrumentationRegistry.getInstrumentation().getContext();    }}])', 1), ('([5:/android/devicepolicy/cts/NetworkResetTest.java]:[restriction]:[5]:method_text:[      restoreUserRestriction(originalUserRestriction, DISALLOW_NETWORK_RESET);        }    }   ])', 1), ('([5:/android/devicepolicy/cts/NetworkResetTest.java]:[restriction]:[5]:method_text:[  restoreUserRestriction(originalUserRestriction, DISALLOW_CONFIG_PRIVATE_DNS);        }    }   ])', 1), ('([16:/android/devicepolicy/cts/NetworkResetTest.java]:[restriction]:[16]:method_text:[            sDeviceState.dpc().devicePolicyManager().clearUserRestriction(policy);        }    }}])', 1), ('([1:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[restriction]:[1]:method_text:[getSystemService(DevicePolicyManager.class);        assertNotNull(mDevicePolicyManager);    }   ])', 1), ('([1:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[restriction]:[1]:method_text:[     * {@link #DisallowSharingIntoProfileTest} class for the mechanism behind this test.     */   ])', 1), ('([5:/com/android/cts/managedprofile/DisallowSharingIntoProfileTest.java]:[restriction]:[5]:method_text:[vityInfo.name)) {                return true;            }        }        return false;    }}])', 1), ('([1:/android/carrierapi/cts/NetworkScanApiTest.java]:[restricted]:[1]:method_text:[ radioAccessSpecifier;    }    /** Tests that the device properly requests a network scan. */   ])', 1), ('([1:/com/android/cts/launcherapps/simpleapp/SimpleActivityStartService.java]:[restriction]:[1]:method_text:[        reply.putExtra(""result"", Activity.RESULT_FIRST_USER);        sendBroadcast(reply);    }}])', 1), ('([47:/com/android/cts/verifier/managedprovisioning/CommandReceiverActivity.java]:[restriction]:[47]:method_text:[) {            return null;        }        return resolveInfo.activityInfo.packageName;    }}])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[restriction]:[2]:method_text:[();        executeCreateAndManageUserTest(""testCreateAndManageUser_AddRestrictionSet"");    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[restriction]:[2]:method_text:[erTest(""testCreateAndManageUser_RemoveRestrictionSet"");    }    @FlakyTest(bugId = 126955083)   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[restriction]:[2]:method_text:[triction() throws Exception {        executeDeviceOwnerTest(""BluetoothRestrictionTest"");    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[restriction]:[2]:method_text:[nabled if the backup feature is not supported.    @RequiresAdditionalFeatures({FEATURE_BACKUP})   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[restriction]:[2]:method_text:[ction() throws Exception {        executeDeviceOwnerTest(""AirplaneModeRestrictionTest"");    }   ])', 1), ('([2:/com/android/cts/devicepolicy/DeviceOwnerTest.java]:[restriction]:[2]:method_text:[ction() throws Exception {        executeDeviceOwnerTest(""SensorToggleRestrictionTest"");    }   ])', 1), ('([1:/android/alarmmanager/cts/ExactAlarmsTest.java]:[restricted]:[1]:method_text:[                    AlarmReceiver.waitForAlarm(id, DEFAULT_WAIT_FOR_SUCCESS));        }    }   ])', 1), ('([1:/android/alarmmanager/cts/ExactAlarmsTest.java]:[restricted]:[1]:method_text:[ALLOW_WHILE_IDLE_QUOTA - quotaToReclaim + 1);        return t + ALLOW_WHILE_IDLE_WINDOW;    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/ClassQueryHelperTest.java]:[restriction]:[1]:method_text:[er<>(mQuery);        assertThat(classQueryHelper.matches(CLASS_1_CLASS_INFO)).isTrue();    }   ])', 1), ('([2:/android/telecom/cts/ConferenceTest.java]:[restricted]:[2]:method_text:[ propagation of the {@link Conference} properties to the associated     * {@link Call}.     */   ])', 1), ('([101:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[restriction]:[101]:method_text:[abledRestrictions();    /**     * Test restrictions that should be enabled by default     */   ])', 1), (""([14:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[restriction]:[14]:method_text:[  /**     * Set only one restriction, and make sure only that's set, and then clear it.     */   ])"", 1), (""([7:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[restriction]:[7]:method_text:[  }    /**     * Make sure all allowed restrictions can be set, and the others can't.     */   ])"", 1), ('([8:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[restriction]:[8]:method_text:[otSetUserRestriction(r);        }    }    /**     * Clear all allowed restrictions.     */   ])', 1), ('([3:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[restriction]:[3]:method_text:[ring r : getAllowedRestrictions()) {            assertClearUserRestriction(r);        }    }   ])', 1), ('([6:/com/android/cts/deviceandprofileowner/userrestrictions/BaseUserRestrictionsTest.java]:[restriction]:[6]:method_text:[;        mDevicePolicyManager.clearUserRestriction(ADMIN_RECEIVER_COMPONENT, restriction);    }}])', 1), ('([1:/android/app/cts/android/app/cts/tools/ServiceProcessController.java]:[restriction]:[1]:method_text:[     + importance);        }        mUidWatcher.waitFor(WatchUidRunner.CMD_GONE, timeout);    }}])', 1), ('([14:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[restriction]:[14]:method_text:[          throws DeviceNotAvailableException {        runTests(className, null, userId);    }   ])', 1), ('([9:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[restriction]:[9]:method_text:[s.DeviceOwnerUserRestrictionsTest"",                ""testBroadcast"", mDeviceOwnerUserId);    }   ])', 1), ('([10:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[restriction]:[10]:method_text:[, mDeviceOwnerUserId);    }    // Checks restrictions for managed user (NOT managed profile).   ])', 1), ('([10:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[restriction]:[10]:method_text:[hecks restrictions for managed profile.    @RequiresAdditionalFeatures({FEATURE_MANAGED_USERS})   ])', 1), ('([10:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[restriction]:[10]:method_text:[* DO + PO combination.  Make sure global DO restrictions are visible on secondary users.     */   ])', 1), (""([31:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[restriction]:[31]:method_text:[* PO on user-0.  It can set DO restrictions too, but they shouldn't leak to other users.     */   ])"", 1), ('([10:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[restriction]:[10]:method_text:[_APPS), should affect all     * users (not a particularly special case but to be sure).     */   ])', 1), ('([5:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[restriction]:[5]:method_text:[should     * affect all users.     */    @RequiresAdditionalFeatures({FEATURE_MANAGED_USERS})   ])', 1), ('([26:/com/android/cts/devicepolicy/UserRestrictionsTest.java]:[restriction]:[26]:method_text:[throws Exception {        runTests(GLOBAL_RESTRICTIONS_TEST_CLASS, testMethodName, userId);    }}])', 1), ('([1:/android/keystore/cts/KeyGenParameterSpecTest.java]:[restricted]:[1]:method_text:[);        assertEquals(KeyProperties.UNRESTRICTED_USAGE_COUNT, spec.getMaxUsageCount());    }   ])', 1), ('([1:/android/net/vcn/cts/TestNetworkWrapper.java]:[restricted]:[1]:method_text:[ork;                this.networkCapabilities = networkCapabilities;            }        }    }}])', 1), ('([1:/test/java/com/android/queryable/queries/BooleanQueryHelperTest.java]:[restriction]:[1]:method_text:[eanQueryHelper<>(mQuery);        assertThat(booleanQueryHelper.matches(true)).isTrue();    }   ])', 1), ('([16:/com/android/cts/verifier/managedprovisioning/PolicyTransparencyTestActivity.java]:[restriction]:[16]:method_text:[etLabel;            this.widgetId = widgetId;            this.command = command;        }    }}])', 1), (""([1:/com/android/cts/usespermissiondiffcertapp/AccessPermissionWithDiffSigTest.java]:[restriction]:[1]:method_text:[riction aren't     * allowed, even though the {@code provider} requires no permissions.     */   ])"", 1), ('([3:/com/android/cts/verifier/managedprovisioning/DisallowAppsControlActivity.java]:[restriction]:[3]:method_text:[eckDisabledForceStopTest(adapter);        setupCheckDisabledAppStorageButtonsTest(adapter);    }}])', 1), ('([1:/android/server/wm/MultiDisplaySecurityTests.java]:[restricted]:[1]:method_text:[ an activity on a virtual display without special permission must not be     * allowed.     */   ])', 1), (""([1:/android/server/wm/MultiDisplaySecurityTests.java]:[restricted]:[1]:method_text:[r activity that     * doesn't allow embedding - it should fail with security exception.     */   ])"", 1), ('([1:/android/keystore/cts/KeyProtectionTest.java]:[restricted]:[1]:method_text:[E_COUNT, spec.getMaxUsageCount());        assertEquals(spec.isStrongBoxBacked(), false);    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/AllowedAccountManagementTest.java]:[restriction]:[2]:method_text:[MPONENT,                UserManager.DISALLOW_MODIFY_ACCOUNTS);        super.tearDown();    }   ])', 1), ('([2:/com/android/cts/deviceandprofileowner/AllowedAccountManagementTest.java]:[restriction]:[2]:method_text:[l).getResult();        assertTrue(result.getBoolean(AccountManager.KEY_BOOLEAN_RESULT));    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/AllowedAccountManagementTest.java]:[restriction]:[1]:method_text:[       assertEquals(0, mDevicePolicyManager.getAccountTypesWithManagementDisabled().length);    }}])', 1), ('([1:/android/admin/cts/DevicePolicyManagerTest.java]:[restriction]:[1]:method_text:[createAdminSupportIntent(UserManager.DISALLOW_ADJUST_VOLUME);        assertNull(intent);    }   ])', 1), ('([1:/android/hardware/cts/helpers/sensoroperations/SensorOperation.java]:[restriction]:[1]:method_text:[           return mParent.getName() + ""-"" + mOperation.getClass().getSimpleName();        }    }}])', 1), ('([2:/com/android/cts/managedprofile/BluetoothSharingRestrictionPrimaryProfileTest.java]:[restriction]:[2]:method_text:[mentationTestCase {    /** Verifies that bluetooth sharing is available in personal profile. */   ])', 1), ('([1:/com/android/cts/managedprofile/CameraPolicyTest.java]:[restriction]:[1]:method_text:[ null;        } catch (InterruptedException e) {            e.printStackTrace();        }    }}])', 1), ('([1:/com/android/cts/comp/provisioning/UserRestrictionTest.java]:[restriction]:[1]:method_text:[ com.android.cts.comp.AdminReceiver;public class UserRestrictionTest extends AndroidTestCase {   ])', 1), ('([2:/com/android/cts/comp/provisioning/UserRestrictionTest.java]:[restriction]:[2]:method_text:[veUserRestriction() {        setUserRestriction(UserManager.DISALLOW_REMOVE_USER, true);    }   ])', 1), ('([8:/com/android/cts/comp/provisioning/UserRestrictionTest.java]:[restriction]:[8]:method_text:[ction);        } else {            dpm.clearUserRestriction(admin, restriction);        }    }}])', 1), ('([2:/com/android/cts/delegate/AppRestrictionsIsCallerDelegateHelper.java]:[restriction]:[2]:method_text:[           getInstrumentation().getContext().getSystemService(DevicePolicyManager.class);    }   ])', 1), ('([2:/com/android/cts/delegate/AppRestrictionsIsCallerDelegateHelper.java]:[restriction]:[2]:method_text:[sertThat(mDevicePolicyManager.isCallerApplicationRestrictionsManagingPackage()).isTrue();    }   ])', 1), ('([2:/com/android/cts/delegate/AppRestrictionsIsCallerDelegateHelper.java]:[restriction]:[2]:method_text:[assertThat(mDevicePolicyManager.isCallerApplicationRestrictionsManagingPackage()).isFalse();    }}])', 1), ('([19:/com/android/cts/delegate/AppRestrictionsDelegateTest.java]:[restriction]:[19]:method_text:[ows Exception {        mContext.unregisterReceiver(mReceiver);        super.tearDown();    }   ])', 1), ('([6:/com/android/cts/delegate/AppRestrictionsDelegateTest.java]:[restriction]:[6]:method_text:[  mDpm.getApplicationRestrictions(null, APP_RESTRICTIONS_TARGET_PKG);                });    }   ])', 1), ('([25:/com/android/cts/delegate/AppRestrictionsDelegateTest.java]:[restriction]:[25]:method_text:[ll, mContext.getPackageName());        return scopes.contains(DELEGATION_APP_RESTRICTIONS);    }}])', 1), ('([1:/android/cts/statsdatom/statsd/HostAtomTests.java]:[restricted]:[1]:method_text:[@Override    public void setBuild(IBuildInfo buildInfo) {        mCtsBuild = buildInfo;    }   ])', 1), ('([1:/android/cts/statsdatom/statsd/HostAtomTests.java]:[restricted]:[1]:method_text:[ atom.getBatterySaverModeStateChanged().getState().getNumber());    }    @RestrictedBuildTest   ])', 1), ('([1:/android/cts/statsdatom/statsd/HostAtomTests.java]:[restricted]:[1]:method_text:[roAmpereHour())                    .isGreaterThan(0);        }    }    @RestrictedBuildTest   ])', 1), ('([3:/android/suspendapps/permission/cts/NegativePermissionsTest.java]:[restriction]:[3]:method_text:[etMessage());        }        fail(""Call ["" + tag + ""] succeeded without permissions"");    }   ])', 1), ('([14:/android/suspendapps/permission/cts/NegativePermissionsTest.java]:[restriction]:[14]:method_text:[SPEND,                        RESTRICTION_NONE), ""setDistractingPackageRestrictions:NONE"");    }}])', 1), ('([3:/android/net/wifi/cts/WifiManagerTest.java]:[restriction]:[3]:method_text:[);        }        return -1;    }    /**     * Test creation of WifiManager Lock.     */   ])', 1), ('([6:/android/net/wifi/cts/WifiManagerTest.java]:[restriction]:[6]:method_text:[he needed privileged permissions     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([13:/android/net/wifi/cts/WifiManagerTest.java]:[restriction]:[13]:method_text:[ork configurations are rejected.     */    @SdkSuppress(minSdkVersion = Build.VERSION_CODES.S)   ])', 1), ('([6:/android/provider/cts/FontsContractTest.java]:[restricted]:[6]:method_text:[ace(                restrictedContext, null /* cancellation signal */, result.getFonts()));    }}])', 1), ('([6:/android/suspendapps/cts/DistractingPackageTest.java]:[restriction]:[6]:method_text:[           failed) + ""; expected to fail: "" + Arrays.toString(expectedToFail));        }    }   ])', 1), ('([1:/android/suspendapps/cts/DistractingPackageTest.java]:[restriction]:[1]:method_text:[uggestions(TEST_APP_PACKAGE_NAME,                        UserHandle.of(currentUserId)));    }   ])', 1), ('([9:/android/suspendapps/cts/DistractingPackageTest.java]:[restriction]:[9]:method_text:[ALL_TEST_PACKAGES, RESTRICTION_HIDE_FROM_SUGGESTIONS,                ALL_TEST_PACKAGES);    }   ])', 1), ('([1:/android/suspendapps/cts/DistractingPackageTest.java]:[restriction]:[1]:method_text:[N));        assertCannotRestrictUnderUserRestriction(UserManager.DISALLOW_APPS_CONTROL);    }   ])', 1), ('([2:/android/suspendapps/cts/DistractingPackageTest.java]:[restriction]:[2]:method_text:[AGES, PackageManager.RESTRICTION_NONE,                ArrayUtils.emptyArray(String.class));    }}])', 1), ('([1:/android/systemintents/cts/TestSystemIntents.java]:[restriction]:[1]:method_text:[etInstrumentation().getContext();        mPackageManager = mContext.getPackageManager();    }   ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[restricted]:[1]:method_text:[ = CertificateFactory.getInstance(""X.509"");    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")   ])', 1), ('([1:/android/security/cts/FileIntegrityManagerTest.java]:[restricted]:[1]:method_text:[Trusted);        }    }    @CddTest(requirement=""9.10/C-0-3,C-1-1"")    @RestrictedBuildTest   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java]:[restriction]:[1]:method_text:[anager.setRequiredPasswordComplexity(PASSWORD_COMPLEXITY_NONE);        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java]:[restriction]:[1]:method_text:[BCD"", caseDescription);        assertPasswordFails(""123"", caseDescription); // too short    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java]:[restriction]:[1]:method_text:[Numeric PIN not allowed        assertPasswordFails(""123"", caseDescription); // too short    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java]:[restriction]:[1]:method_text:[@#!"", caseDescription);        assertPasswordFails(""123"", caseDescription); // too short    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java]:[restriction]:[1]:method_text:[25!"", caseDescription);        assertPasswordFails(""123"", caseDescription); // too short    }   ])', 1), ('([5:/com/android/cts/deviceandprofileowner/ResetPasswordWithTokenTest.java]:[restriction]:[5]:method_text:[T, 0);        mDevicePolicyManager.setPasswordMinimumNonLetter(ADMIN_RECEIVER_COMPONENT, 0);    }])', 1), ('([1:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restricted]:[1]:method_text:[t S, the    // framework throws a ForegroundServiceStartNotAllowedException with error message.   ])', 1), ('([6:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[6]:method_text:[lity.     * APP1 is in TOP state, it gets location capability.     * @throws Exception     */   ])', 1), ('([1:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[1]:method_text:[tate, it can start FGSL in APP2, FGSL gets location capability.     * @throws Exception     */   ])', 1), ('([1:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[1]:method_text:[t can start FGSL in APP2,     * FGSL gets location capability.     * @throws Exception     */   ])', 1), ('([1:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[1]:method_text:[start by bind from BG does not get get while-in-use capability.     * @throws Exception     */   ])', 1), ('([1:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[1]:method_text:[ROCESS_CAPABILITY_NONE));        } finally {            uid1Watcher.finish();        }    }   ])', 1), ('([3:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[3]:method_text:[eground() restriction, use DeviceConfig to turn on restriction.     * @throws Exception     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[riction, use AppCompat CHANGE ID to turn on     * restriction.     * @throws Exception     */   ])', 1), ('([6:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[6]:method_text:[Test a FGS can start from a process that is at BOUND_TOP state.     * @throws Exception     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[S can start from a process that is at FOREGROUND_SERVICE state.     * @throws Exception     */   ])', 1), ('([3:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[3]:method_text:[     * restriction is disabled, FGS can start from background.     * @throws Exception     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[   * restriction is enabled, FGS can NOT start from background.     * @throws Exception     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[* pass BG-Activity-launch ability to APP2, then APP2 can start APP2 FGS from background.     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[  /**     * Test a FGS can start from BG if the app has SYSTEM_ALERT_WINDOW permission.     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[    }    /**     * Test a FGS can start from BG if the device is in retail demo mode.     */   ])', 1), ('([3:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[3]:method_text:[t S, the    // framework throws a ForegroundServiceStartNotAllowedException with error message.   ])', 1), (""([1:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[1]:method_text:[   * Test a FGS can start from BG if the app is in the DeviceIdleController's AllowList.     */   ])"", 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[ME_APP1);        }    }    /**     * Test temp allowlist types in BroadcastOptions.     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[t a FGS can start from BG if the process had a visible activity recently.     */    @LargeTest   ])', 1), (""([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[ depends on the service's app proc state.     * Test starService() -> startForeground()     */   ])"", 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[ startForegroundService() -> startForeground() -> stopForeground() -> startForeground().     */   ])', 1), ('([4:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[4]:method_text:[LATFORM_VPN are exempted from BG-FGS-launch     * restriction.     * @throws Exception     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[_NOT_ALLOWED} (1):     *      temp allowlisted, not allow FGS.     * @throws Exception     */   ])', 1), ('([2:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[2]:method_text:[     * All other reason codes, DeviceIdleController does not change temp allowlist type.     */   ])', 1), ('([3:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[3]:method_text:[default_input_method is exempted from BG-FGS-start restriction.     * @throws Exception     */   ])', 1), ('([12:/android/app/cts/ActivityManagerFgsBgStartTest.java]:[restriction]:[12]:method_text:[OR,                            Integer.toString(type), false);                }        );    }}])', 1), ('([2:/com/android/cts/deviceandprofileowner/DelegationTest.java]:[restriction]:[2]:method_text:[PONENT,                DELEGATE_PKG, Collections.emptyList());        super.tearDown();    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/DelegationTest.java]:[restriction]:[1]:method_text:[legated scopes do not match broadcasted scopes"",                scopes, reportedScopes);    }   ])', 1), ('([4:/com/android/cts/deviceandprofileowner/DelegationTest.java]:[restriction]:[4]:method_text:[kage"", getDelegatePackages(DELEGATION_CERT_INSTALL)                .contains(TEST_PKG));    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/EnumQueryHelperTest.java]:[restriction]:[1]:method_text:[Helper<>(mQuery);        assertThat(enumQueryHelper.matches(TestEnum.VALUE1)).isTrue();    }   ])', 1), ('([12:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[restriction]:[12]:method_text:[put.contains(""SecurityException""));    }    // Test the bluetooth API from a managed profile.   ])', 1), ('([2:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[restriction]:[2]:method_text:[r(MANAGED_PROFILE_PKG, "".NfcTest"",                ""testNfcShareEnabled"", mParentUserId);    }   ])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[restriction]:[4]:method_text:[ngRestrictionTest"",                ""testOppDisabledWhenRestrictionSet"", mProfileUserId);    }   ])', 1), ('([4:/com/android/cts/devicepolicy/ManagedProfileTest.java]:[restriction]:[4]:method_text:[leException {        return changeUserRestriction(key, value, userId, MANAGED_PROFILE_PKG);    }}])', 1), ('([1:/android/car/cts/OptionalFeatureHostTest.java]:[restriction]:[1]:method_text:[ VHAL     * DISABLED_OPTIONAL_FEATURES property does not disable any optional features.     */   ])', 1), ('([1:/android/alarmmanager/cts/AppStandbyTests.java]:[restriction]:[1]:method_text:[  assertTrue(""Alarm exceeding quota not delivered after expected delay"", waitForAlarm());    }   ])', 1), ('([1:/android/security/cts/PerfEventParanoidTest.java]:[restricted]:[1]:method_text:[    getDevice().hasFeature(""feature:android.hardware.security.model.compatible""));        }    }}])', 1), ('([1:/test/java/com/android/queryable/queries/StringQueryHelperTest.java]:[restriction]:[1]:method_text:[yHelper<>(mQuery);        assertThat(stringQueryHelper.matches(STRING_VALUE)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/StringQueryHelperTest.java]:[restriction]:[1]:method_text:[lTo(STRING_VALUE);        assertThat(stringQueryHelper.matches(STRING_VALUE)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/StringQueryHelperTest.java]:[restriction]:[1]:method_text:[ERENT_STRING_VALUE);        assertThat(stringQueryHelper.matches(STRING_VALUE)).isFalse();    }}])', 1), ('([3:/android/host/multiuser/BaseMultiUserTest.java]:[restricted]:[3]:method_text:[ supports);                    base.evaluate();                }            };        }    }}])', 1), ('([1:/com/android/cts/deviceandprofileowner/PrintingPolicyTest.java]:[restriction]:[1]:method_text:[   final String errorMessage = activity.getErrorMessage();        assertNull(errorMessage);    }}])', 1), ('([21:/com/android/cts/deviceowner/SetPolicyActivity.java]:[restriction]:[21]:method_text:[andle());        } else {            Log.e(TAG, ""Invalid command: "" + command);        }    }}])', 1), ('([1:/com/android/cts/appcompat/CompatChangesValidConfigTest.java]:[restriction]:[1]:method_text:[RRIDE_MIN_ASPECT_RATIO_MEDIUM""    );    /**     * Check that there are no overrides.     */   ])', 1), ('([2:/com/android/cts/verifier/managedprovisioning/VpnTestActivity.java]:[restriction]:[2]:method_text:[    } else {            Log.w(TAG, ""Unexpected request code: "" + requestCode);        }    }   ])', 1), ('([76:/com/android/cts/verifier/managedprovisioning/ByodHelperActivity.java]:[restriction]:[76]:method_text:[ge = getString(messageId);        Toast.makeText(this, message, Toast.LENGTH_SHORT).show();    }}])', 1), ('([1:/test/java/com/android/queryable/queries/LongQueryHelperTest.java]:[restriction]:[1]:method_text:[QueryHelper<>(mQuery);        assertThat(longQueryHelper.matches(LONG_VALUE)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/LongQueryHelperTest.java]:[restriction]:[1]:method_text:[isEqualTo(LONG_VALUE);        assertThat(longQueryHelper.matches(LONG_VALUE)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/LongQueryHelperTest.java]:[restriction]:[1]:method_text:[ualTo(LONG_VALUE);        assertThat(longQueryHelper.matches(GREATER_VALUE)).isFalse();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/LongQueryHelperTest.java]:[restriction]:[1]:method_text:[erThan(LONG_VALUE);        assertThat(longQueryHelper.matches(GREATER_VALUE)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/LongQueryHelperTest.java]:[restriction]:[1]:method_text:[aterThan(LONG_VALUE);        assertThat(longQueryHelper.matches(LONG_VALUE)).isFalse();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/LongQueryHelperTest.java]:[restriction]:[1]:method_text:[rEqualTo(LONG_VALUE);        assertThat(longQueryHelper.matches(LESS_VALUE)).isFalse();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/LongQueryHelperTest.java]:[restriction]:[1]:method_text:[sLessThan(LONG_VALUE);        assertThat(longQueryHelper.matches(LESS_VALUE)).isTrue();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/LongQueryHelperTest.java]:[restriction]:[1]:method_text:[LessThan(LONG_VALUE);        assertThat(longQueryHelper.matches(LONG_VALUE)).isFalse();    }   ])', 1), ('([1:/test/java/com/android/queryable/queries/LongQueryHelperTest.java]:[restriction]:[1]:method_text:[rEqualTo(LONG_VALUE);        assertThat(longQueryHelper.matches(GREATER_VALUE)).isFalse();    }}])', 1), ('([1:/android/app/stubs/CommandReceiver.java]:[restricted]:[1]:method_text:[   }        };        sServiceMap.put(packageName, connection);        return connection;    }}])', 1), ('([1:/android/permission2/cts/NoReceiveSmsPermissionTest.java]:[restriction]:[1]:method_text:[     * Note: this test requires that the device under test reports a valid phone number     */   ])', 1)]"	""	""	"[('restriction', 418), ('restricted', 166), ('hibernation', 9)]"	"[('[test.java.com.android.queryable.queries.IntentQueryHelperTest isTrue None]', 3), ('[test.java.com.android.queryable.queries.BundleKeyQueryHelperTest isTrue None]', 3), ('[android.car.cts.CarUxRestrictionsManagerTest testCarUxRestrictionsBuilder CtsCarTestCases]', 2), ('[android.car.cts.CarUxRestrictionsManagerTest testCarUxRestrictions_CopyConstructor CtsCarTestCases]', 2), ('[android.car.cts.CarUxRestrictionsManagerTest testCarUxRestrictions_isSameRestrictions CtsCarTestCases]', 2), ('[android.permission2.cts.RestrictedStoragePermissionTest testStorageTargetingSdk30CannotPreserveLegacyOnInstall CtsPermission2TestCases]', 2), ('[android.content.pm.cts.ResourcesHardeningTest TestBlockFilter CtsContentTestCases]', 2), ('[android.keystore.cts.KeyInfoTest testImmutabilityViaGetterReturnValues CtsKeystoreTestCases]', 2), ('[android.jobscheduler.cts.JobThrottlingTest testJobStoppedWhenRestricted CtsJobSchedulerTestCases]', 2), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictedJobAllowedWhenUidActive CtsJobSchedulerTestCases]', 2), ('[android.jobscheduler.cts.JobThrottlingTest testEJStoppedWhenRestricted CtsJobSchedulerTestCases]', 2), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictedEJAllowedWhenUidActive CtsJobSchedulerTestCases]', 2), ('[android.provider.cts.calendar.CalendarTest testBulkUpdate CtsCalendarProviderTestCases]', 2), ('[test.java.com.android.queryable.queries.PersistableBundleKeyQueryHelperTest isTrue None]', 2), ('[test.java.com.android.queryable.queries.IntentQueryHelperTest isFalse None]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testDefaultAllRestrictedPermissionsWhitelistedAtInstall22 CtsPermission2TestCases]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsWhitelistedAtInstall22 CtsPermission2TestCases]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsGrantedAtInstall CtsPermission2TestCases]', 2), ('[android.permission2.cts.RestrictedPermissionsTest testAllRestrictedPermissionsGrantedAtInstall CtsPermission2TestCases]', 2), ('[android.permission2.cts.RestrictedPermissionsTest isTrue CtsPermission2TestCases]', 2), ('[test.java.com.android.queryable.queries.UserHandleQueryHelperTest isTrue None]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testApplicationRestrictionIsRestricted CtsDevicePolicyManagerTestCases]', 2), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetNearbyAppStreamingPolicy_changesPolicy CtsDevicePolicyManagerTestCases]', 2), ('[android.media.cts.BaseMultiUserTest listUsers CtsMediaHostTestCases]', 2), ('[test.java.com.android.queryable.queries.BundleKeyQueryHelperTest isFalse None]', 2), ('[test.java.com.android.queryable.queries.BundleKeyQueryHelperTest exists None]', 2), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartRetailDemoMode CtsAppTestCases]', 2), ('[android.os.cts.BuildVersionTest testIncremental None]', 1), ('[com.android.cts.deviceandprofileowner.DevicePolicyLoggingTest testSetUserRestrictionLogged None]', 1), ('[android.server.wm.settings.SettingsSession doTest None]', 1), ('[android.app.cts.NotificationManagerTest testDeleteConversationChannels CtsAppTestCases]', 1), ('[com.android.cts.deviceandprofileowner.vpn.VpnTestHelper register None]', 1), ('[android.permission2.cts.RestrictedStoragePermissionSharedUidTest getTestAppCombinations CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionSharedUidTest uninstallAllTestPackages CtsPermission2TestCases]', 1), ('[android.car.cts.CarUxRestrictionsManagerTest testRegisterListener_noCrash CtsCarTestCases]', 1), ('[com.android.cts.apprestrictions.targetapp.ApplicationRestrictionsActivity finish None]', 1), ('[com.android.cts.verifier.managedprovisioning.DeviceAdminTestReceiver isHeadlessSystemUserMode None]', 1), ('[android.net.wifi.cts.TestHelper isEmpty CtsWifiTestCases]', 1), ('[android.server.wm.AlertWindowsTests testAlertWindowDisallowedSdk25 CtsWindowManagerDeviceTestCases]', 1), ('[com.android.compatibility.common.tradefed.presubmit.CtsConfigLoadingTest testConfigurationLoad None]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testCannotControlStorageWhitelistPostInstall1 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest testCannotControlStorageWhitelistPostInstall2 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedStoragePermissionTest restrictedWritePermDoesNotImplyIsolatedStorageAccess CtsPermission2TestCases]', 1), ('[android.security.cts.SELinuxHostTest testCollectDeviceInfo CtsSecurityHostTestCases]', 1), ('[android.security.cts.SELinuxHostTest testGlobalEnforcing CtsSecurityHostTestCases]', 1), ('[android.security.cts.SELinuxHostTest testRecoveryDomain CtsSecurityHostTestCases]', 1), ('[android.content.pm.cts.ResourcesHardeningTest isEmpty CtsContentTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.PolicyTransparencyTestListActivity setPassFailButtonClickListeners None]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerOnSubsystemRestart CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerForSpecifierConnection CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerForOemPaidSuggestionConnection CtsWifiTestCases]', 1), ('[android.net.wifi.cts.ConnectedNetworkScorerTest testSetWifiConnectedNetworkScorerForOemPrivateSuggestionConnection CtsWifiTestCases]', 1), ('[android.suspendapps.cts.DualSuspendTests addAndAssertProfileOwner CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DualSuspendTests testIsPackageSuspended CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DualSuspendTests testDpmCanSuspendUnderDisallowAppsControl CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DualSuspendTests testDpmCanSuspendUnderDisallowUninstallApps CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DualSuspendTests testUnsuspendedOnUninstallBlocked CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DualSuspendTests testUnsuspendedOnDisallowUninstallApps CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DualSuspendTests testUnsuspendedOnDisallowAppsControl CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DualSuspendTests testCannotSuspendWhenUninstallBlocked CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DualSuspendTests testCannotSuspendUnderDisallowAppsControl CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DualSuspendTests testCannotSuspendUnderDisallowUninstallApps CtsSuspendAppsTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testEcAttestation_NoChallenge CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyAttestationTest testRsaAttestation_NoChallenge CtsKeystoreTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testAudioRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTest testPackageInstallUserRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[android.permission.cts.SplitPermissionTest inheritGrantedPermissionStatePreM CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest grantNewSplitPermissionStatePreM CtsPermissionTestCases]', 1), ('[android.permission.cts.SplitPermissionTest newPermissionGetRevokedOnUpgradePreM CtsPermissionTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPaidSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPaidAndOemPrivateSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPrivateSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPaidSuggestionFailure CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectToOemPrivateSuggestionFailure CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest testConnectSuggestionFailureWithOemPaidNetCapability CtsWifiTestCases]', 1), ('[com.android.cts.readsettingsfieldsapp.ReadSettingsFieldsTest testGlobalHiddenSettingsKeysNotReadableWithoutAnnotation None]', 1), ('[com.android.cts.readsettingsfieldsapp.ReadSettingsFieldsTest testGlobalHiddenSettingsKeysReadableWithoutAnnotation None]', 1), ('[android.renderscript.cts.IntrinsicBLAS test_L3_ZTRMM_Correctness CtsRsBlasTestCases]', 1), ('[android.security.cts.IsolatedProcessTest testGetServiceFromIsolatedService CtsSecurityTestCases]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.ProfileGlobalRestrictionsTest testSetProfileGlobalRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.ProfileGlobalRestrictionsTest testClearProfileGlobalRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.ProfileGlobalRestrictionsTest testProfileGlobalRestrictionsEnforced None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.ProfileGlobalRestrictionsTest testProfileGlobalRestrictionsNotEnforced None]', 1), ('[android.media.cts.AudioRecordTest testRestrictedAudioSourcePermissions CtsMediaTestCases]', 1), ('[com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester isEmpty None]', 1), ('[com.android.cts.devicepolicy.DevicePolicySafetyCheckerIntegrationTester testOnOperationSafetyStateChanged None]', 1), ('[android.appsecurity.cts.ResumeOnRebootHostTest isSupportedSDevice CtsAppSecurityHostTestCases]', 1), ('[android.telephony.cts.ServiceStateTest testNrStateRedacted CtsTelephonyTestCases]', 1), ('[android.cts.statsdatom.apphibernation.AppHibernationStatsTest isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.apphibernation.AppHibernationStatsTest testUserLevelAppHibernationStateChanged_fromNotHibernatingToHibernating CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.apphibernation.AppHibernationStatsTest testUserLevelAppHibernationStateChanged_fromHibernatingToNotHibernating CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.apphibernation.AppHibernationStatsTest testUserLevelHibernatedApps CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.apphibernation.AppHibernationStatsTest testGlobalHibernatedApps CtsStatsdAtomHostTestCases]', 1), ('[android.appsecurity.cts.PrivilegedUpdateTests isDefaultAbi CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.PrivilegedUpdateTests testPrivilegedAppUpgradeRestricted CtsAppSecurityHostTestCases]', 1), ('[com.android.cts.deviceadmin.BaseDeviceAdminTest isDeviceOwner None]', 1), ('[com.android.cts.verifier.admin.ScreenLockTestActivity setPassFailButtonClickListeners None]', 1), ('[android.database.cts.CursorWindowTest testCustomSize CtsDatabaseTestCases]', 1), ('[com.android.cts.deviceowner.AirplaneModeRestrictionTest testAirplaneModeTurnedOffWhenRestrictionSet None]', 1), ('[com.android.cts.deviceowner.AirplaneModeRestrictionTest testAirplaneModeCannotBeTurnedOnWithRestrictionOn None]', 1), ('[com.android.cts.deviceowner.AirplaneModeRestrictionTest testAirplaneModeCanBeTurnedOnWithRestrictionOff None]', 1), ('[android.jobscheduler.cts.JobThrottlingTest isDeviceIdleMode CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictedJobStartedWhenUnrestricted CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictedEJStartedWhenUnrestricted CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testBackgroundConnectivityJobsThrottled CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInRestrictedBucket_ParoleSession CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInRestrictedBucket_CorrectParoleWhileCharging CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInRestrictedBucket_DeferredUntilFreeResources CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInRestrictedBucket_NoRequiredNetwork CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testJobsInRestrictedBucket_WithRequiredNetwork CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictingStopReason_RestrictedBucket CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testRestrictingStopReason_Doze CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.JobThrottlingTest testExpeditedJobDeferredAfterTimeout_DozeAndBatterySaver CtsJobSchedulerTestCases]', 1), ('[android.telephonyprovider.cts.SmsTest testInsertEmoji_andVerify CtsTelephonyProviderTestCases]', 1), ('[android.view.cts.View_FocusHandlingTest testEnabledHandling CtsViewTestCases]', 1), ('[android.telephony4.cts.SimRestrictedApisTest isSimCardPresent CtsSimRestrictedApisTestCases]', 1), ('[android.hardware.cts.SensorTestCase SensorTestCase CtsSensorTestCases]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.DeviceOwnerUserRestrictionsTest testHasBaseUserRestrictions None]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest isWifiEnabled CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest testExpeditedJobExecutes_IdleApp CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest testExpeditedJobBypassesSimultaneousFirewalls_noDataSaver CtsJobSchedulerTestCases]', 1), ('[android.jobscheduler.cts.ConnectivityConstraintTest testExpeditedJobDoesNotBypassSimultaneousFirewalls_withDataSaver CtsJobSchedulerTestCases]', 1), ('[android.app.cts.ActivityManagerApi29Test testTopActivityWithAppOps CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerApi29Test testFgsLocationWithAppOps CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerApi29Test testAppOpsHistoricalOps CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerApi29Test testCameraWithAppOps CtsAppTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testGetSimCardState CtsTelephonyTestCases]', 1), ('[android.telephony.cts.TelephonyManagerTest testResetSettings CtsTelephonyTestCases]', 1), ('[com.android.cts.deviceandprofileowner.CustomizationRestrictionsTest testDisallowSetWallpaper_allowed None]', 1), ('[com.android.cts.deviceowner.BluetoothRestrictionTest testEnableBluetoothFailsWhenDisallowed None]', 1), ('[com.android.cts.deviceowner.BluetoothRestrictionTest testBluetoothGetsDisabledAfterRestrictionSet None]', 1), ('[com.android.cts.deviceowner.BluetoothRestrictionTest testEnableBluetoothSucceedsAfterRestrictionRemoved None]', 1), ('[com.android.cts.deviceowner.BluetoothRestrictionTest testOppDisabledWhenRestrictionSet None]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testCannotRemoveUserIfRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.MixedDeviceOwnerTest testApplicationRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[android.host.multiuser.SetUsersRestrictionsTest testCantSetUserRestriction CtsMultiUserHostTestCases]', 1), ('[android.scopedstorage.cts.host.LegacyStorageHostTest isTrue None]', 1), ('[com.android.cts.deviceowner.DevicePolicySafetyCheckerIntegrationTest DevicePolicySafetyCheckerIntegrationTester None]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testCreateSessionWithParameters CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testAudioRestrictionSingleDevice CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CameraDeviceTest testAudioRestrictionMultipleDevices CtsCameraTestCases]', 1), ('[com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest testAddGetAndClearUserRestriction_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.OrgOwnedProfileOwnerParentTest testUnableToAddAndClearBaseUserRestrictions_onParent None]', 1), ('[android.keystore.cts.util.TestUtils TestUtils CtsKeystoreTestCases]', 1), ('[com.android.cts.managedprofile.SetPolicyActivity finish None]', 1), ('[com.android.cts.customizationapp.CustomizationTest testSetWallpaper_disallowed None]', 1), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testCameraToggle_RestrictionSet_CannotChangeSensorPrivacy None]', 1), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testMicrophoneToggle_RestrictionSet_CannotChangeSensorPrivacy None]', 1), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testCameraToggle_RestrictionSet_ResetSensorPrivacy None]', 1), ('[com.android.cts.deviceowner.SensorToggleRestrictionTest testMicrophoneToggle_RestrictionSet_ResetSensorPrivacy None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testDisallowPrivateDnsConfigurationRestriction None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testClearDisallowPrivateDnsConfigurationRestriction None]', 1), ('[com.android.cts.deviceowner.PrivateDnsPolicyTest testCanSetModeDespiteUserRestriction None]', 1), ('[test.java.com.android.queryable.queries.BundleQueryHelperTest isTrue None]', 1), ('[test.java.com.android.queryable.queries.BundleQueryHelperTest matches_restrictionOnOneKey_restrictionIsMet_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.BundleQueryHelperTest matches_restrictionOnOneKey_restrictionIsNotMet_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.BundleQueryHelperTest matches_restrictionOnMultipleKeys_oneRestrictionIsNotMet_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.BundleQueryHelperTest matches_restrictionOnNonExistingKey_returnsFalse None]', 1), ('[android.display.cts.DisplayTest testRestrictedFramebufferSize CtsDisplayTestCases]', 1), ('[android.host.multiuser.CreateUsersPermissionTest testCanCreateRestrictedUser CtsMultiUserHostTestCases]', 1), ('[com.android.cts.deviceandprofileowner.PasswordMinimumRestrictionsTest testPasswordMinimumRestriction None]', 1), ('[com.android.cts.deviceandprofileowner.PasswordMinimumRestrictionsTest testSetPasswordMinimumRestrictionWithNull None]', 1), ('[com.android.cts.deviceandprofileowner.PasswordMinimumRestrictionsTest testGetPasswordMinimumRestrictionWithNullAdmin None]', 1), ('[test.java.com.android.queryable.queries.IntegerQueryHelperTest isTrue None]', 1), ('[test.java.com.android.queryable.queries.IntegerQueryHelperTest matches_isEqualTo_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.IntegerQueryHelperTest matches_isEqualTo_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.IntegerQueryHelperTest matches_isGreaterThan_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.IntegerQueryHelperTest matches_isGreaterThan_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.IntegerQueryHelperTest matches_isGreaterThanOrEqualTo_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.IntegerQueryHelperTest matches_isLessThan_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.IntegerQueryHelperTest matches_isLessThan_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.IntegerQueryHelperTest matches_isLessThanOrEqualTo_doesNotMeetRestriction_returnsFalse None]', 1), ('[com.android.cts.transferowner.DeviceAndProfileOwnerTransferOutgoingTest testIsBundleNullNoTransfer None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest dropShellPermissionIdentity None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testAddUserRestrictionDisallowConfigDateTime_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testHasUserRestrictionDisallowConfigDateTime None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testUserRestrictionDisallowConfigDateTimeIsNotPersisted None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testAddUserRestrictionDisallowAddUser_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testHasUserRestrictionDisallowAddUser None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testClearUserRestrictionDisallowAddUser None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testAddUserRestrictionCameraDisabled_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testRemoveUserRestrictionCameraEnabled_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testCanOpenCamera None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerProfileUserRestriction_onParent None]', 1), ('[com.android.cts.deviceandprofileowner.UserRestrictionsParentTest testPerDeviceUserRestriction_onParent None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleQueryHelperTest isTrue None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleQueryHelperTest matches_restrictionOnOneKey_restrictionIsMet_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleQueryHelperTest matches_restrictionOnOneKey_restrictionIsNotMet_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleQueryHelperTest matches_restrictionOnMultipleKeys_oneRestrictionIsNotMet_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleQueryHelperTest matches_restrictionOnNonExistingKey_returnsFalse None]', 1), ('[android.location.cts.fine.LocationManagerFineTest testRequestLocationUpdates_LocationSettingsIgnored CtsLocationFineTestCases]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleKeyQueryHelperTest isFalse None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleKeyQueryHelperTest matches_persistableBundleValueRestriction_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleKeyQueryHelperTest matches_persistableBundleValueRestriction_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleKeyQueryHelperTest matches_existsRestriction_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleKeyQueryHelperTest matches_existsRestriction_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleKeyQueryHelperTest matches_doesNotExistRestriction_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.PersistableBundleKeyQueryHelperTest matches_doesNotExistRestriction_doesNotMeetRestriction_returnsFalse None]', 1), ('[com.android.cts.deviceandprofileowner.ContentCaptureRestrictionsTest disableService None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testNullComponentThrowsException None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testSetApplicationRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testCanRetrieveOwnRestrictionsViaUserManager None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testCannotRetrieveOtherPackageRestrictionsViaUserManager None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testSetApplicationRestrictionsManagingPackage None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest testSetApplicationRestrictionsManagingPackageForNotInstalledPackage None]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testUserRestrictionSetOnParentLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testUserRestrictionsSetOnParentAreNotPersisted CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPerProfileUserRestrictionOnParent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testPerDeviceUserRestrictionOnParent CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.OrgOwnedProfileOwnerTest testCameraDisabledOnParentIsEnforced CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceandprofileowner.PasswordRequirementsTest testPasswordConstraintsDoesntThrowAndPreservesValuesPreR None]', 1), ('[android.scopedstorage.cts.host.PreserveLegacyStorageHostTest testPreserveLegacy None]', 1), ('[com.android.cts.deviceandprofileowner.PolicyTransparencyTest testCameraDisabled None]', 1), ('[com.android.cts.deviceandprofileowner.PolicyTransparencyTest testScreenCaptureDisabled None]', 1), ('[com.android.cts.deviceandprofileowner.PolicyTransparencyTest testUserRestrictions None]', 1), ('[com.android.cts.devicepolicy.AccountCheckHostSideTest runCleanupNonTestOnlyOwnerAllowingFailure CtsDevicePolicyManagerTestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testDefaultAllRestrictedPermissionsWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testSomeRestrictedPermissionsWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testNoneRestrictedPermissionWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testNoneRestrictedPermissionWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall29 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testLocationBackgroundPermissionNotWhitelistedAtInstall22 CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testCanGrantSoftRestrictedNotWhitelistedPermissions CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest testWhitelistAccessControl CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadRestrictedPermissionsWhitelistingDefault CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadAllRestrictedPermissionsWhitelisted CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadWhitelistSomePermissions CtsPermission2TestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest onSideLoadWhitelistNoPermissions CtsPermission2TestCases]', 1), ('[com.android.cts.vpnfirewall.ReflectorVpnService ensureNetworkCallbackUnregistered None]', 1), ('[android.telephony.cts.SmsManagerTest testSendAndReceiveMessages CtsTelephonyTestCases]', 1), ('[android.telephony.cts.SmsManagerTest testContentProviderAccessRestriction CtsTelephonyTestCases]', 1), ('[com.android.cts.deviceandprofileowner.DevicePolicyLoggingParentTest testUserRestrictionLogged None]', 1), ('[android.widget.cts.TextViewTest testFontResourcesXml_restrictedContext CtsWidgetTestCases]', 1), ('[com.android.cts.devicepolicy.MixedProfileOwnerTest testPackageInstallUserRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[android.telephony.ims.cts.TestImsService TestImsRegistration CtsTelephonyTestCases]', 1), ('[android.host.accounts.BaseMultiUserTest listUsers CtsAccountsHostTestCases]', 1), ('[android.appsecurity.cts.ApexSignatureVerificationTest getApexPackageList CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.ApexSignatureVerificationTest testApexIncludePubKey CtsAppSecurityHostTestCases]', 1), ('[com.android.cts.managedprofile.CrossProfileUtils testDisallowCrossProfileCopyPaste None]', 1), ('[com.android.cts.managedprofile.CrossProfileUtils testAllowCrossProfileCopyPaste None]', 1), ('[com.android.cts.deviceandprofileowner.ContentSuggestionsRestrictionsTest disableService None]', 1), ('[com.android.cts.deviceandprofileowner.ContentSuggestionsRestrictionsTest testDisallowContentSuggestions_allowed None]', 1), ('[com.android.cts.verifier.managedprovisioning.DeviceOwnerPositiveTestActivity finish None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testDisallowConfigVpn None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testAllowedApps None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testDisallowedApps None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testVpnLockdownUpdateAllowlist None]', 1), ('[com.android.cts.deviceandprofileowner.AlwaysOnVpnTest testVpnLockdownAllowlistVpnComesUp None]', 1), ('[test.java.com.android.queryable.queries.UserHandleQueryHelperTest matches_isEqualTo_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.UserHandleQueryHelperTest matches_isEqualTo_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.UserHandleQueryHelperTest isFalse None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testOpendirRestrictions None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testSystemGalleryCanRenameImagesAndVideos None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testRenameFileNotOwned None]', 1), ('[android.scopedstorage.cts.device.ScopedStorageDeviceTest testExternalStorageProviderAndDownloadsProvider None]', 1), ('[android.permission2.cts.PermissionPolicyTest platformPermissionPolicyIsUnaltered CtsPermission2TestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testCannotRemoveUserIfRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testCannotAddProfileIfRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testWipeData_secondaryUser CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testWipeData_secondaryUserLogged CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest testRequestBugreportAvailableIfAffiliated CtsDevicePolicyManagerTestCases]', 1), ('[communication.main.java.com.android.bedstead.remotedpc.managers.RemoteDevicePolicyManager isUsingUnifiedPassword None]', 1), ('[com.android.cts.deviceandprofileowner.AutofillRestrictionsTest disableService None]', 1), ('[com.android.cts.deviceandprofileowner.AutofillRestrictionsTest testDisallowAutofill_allowed None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest getDisallowedRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest testHasGlobalRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest testHasBothGlobalAndLocalRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest testLocalRestrictionsOnly None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.SecondaryProfileOwnerUserRestrictionsTest testDefaultAndLeakyRestrictions None]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testApplicationRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDelegation CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAccountManagement_userRestrictionAddAccount CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAccountManagement_userRestrictionRemoveAccount CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetKeyGrant CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetWallpaper_disallowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDisallowSetWallpaper_allowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDisallowAutofill_allowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDisallowContentCapture_allowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testDisallowContentSuggestions_allowed CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetMeteredDataDisabledPackages CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testPackageInstallUserRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testAudioRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testCannotRemoveUserIfRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceAndProfileOwnerTest testSetUserRestrictionLogged CtsDevicePolicyManagerTestCases]', 1), ('[android.os.cts.BuildTest testMediaPerformanceClass None]', 1), ('[android.cts.backup.MultiUserBackupStateTest testBackupDeactivatedWhenUserIsRemoved CtsBackupHostTestCases]', 1), ('[com.android.cts.deviceadmin.DeviceAdminTest testPasswordHistoryLength None]', 1), ('[android.security.cts.BannedFilesTest testNoSystemCmdSocket CtsSecurityTestCases]', 1), ('[android.security.cts.BannedFilesTest testNoSu CtsSecurityTestCases]', 1), ('[android.widget.cts.CalendarViewTest testMinMaxRangeRestrictionsHolo CtsWidgetTestCases]', 1), ('[android.cts.statsdatom.appstart.AppStartStatsTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.appstart.AppStartStatsTests testAppStartOccurred CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.appstart.AppStartStatsTests testHibernatingAppStartOccurred CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.appstart.AppStartStatsTests testHibernatingAppStartOccurredTwice_isHibernatingShouldBeFalseSecondTime CtsStatsdAtomHostTestCases]', 1), ('[android.keystore.cts.CipherTest testMaxSizedPlaintextSupported CtsKeystoreTestCases]', 1), ('[android.keystore.cts.CipherTest testLargerThanMaxSizedPlaintextRejected CtsKeystoreTestCases]', 1), ('[com.android.cts.launcherapps.simpleapp.SimpleActivityStartFgService finish None]', 1), ('[com.android.cts.verifier.managedprovisioning.ManagedUserPositiveTestActivity isAffiliatedUser None]', 1), ('[android.appsecurity.cts.AppSecurityTests testUninstallRemovesData_instant CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.AppSecurityTests testInstrumentationDiffCert_full CtsAppSecurityHostTestCases]', 1), ('[android.app.cts.ActivityManagerTest finish CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerTest testIsBackgroundRestricted CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerTest testIsUserAMonkey CtsAppTestCases]', 1), ('[com.android.cts.managedprofile.BluetoothSharingRestrictionTest testOppDisabledWhenRestrictionSet None]', 1), ('[android.text.cts.FontResourceTest testRemoteResource CtsTextTestCases]', 1), ('[com.android.cts.verifier.managedprovisioning.NfcTestActivity getTestMessage None]', 1), ('[com.android.cts.deviceandprofileowner.AccountManagementParentTest testSetAccountManagementDisabledOnParent None]', 1), ('[com.android.cts.deviceandprofileowner.SetPolicyActivity finish None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest isTrue None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testCreateFilesInRandomPlaces_hasW None]', 1), ('[android.scopedstorage.cts.legacy.LegacyStorageTest testInsertHiddenFile None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_StopEphemeralUser_DisallowRemoveUser None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_LeaveAllSystemApps None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_AddRestrictionSet None]', 1), ('[com.android.cts.deviceowner.CreateAndManageUserTest testCreateAndManageUser_RemoveRestrictionSet None]', 1), ('[test.java.com.android.queryable.queries.ActivityQueryHelperTest isTrue None]', 1), ('[test.java.com.android.queryable.queries.BundleKeyQueryHelperTest matches_existsRestriction_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.BundleKeyQueryHelperTest matches_existsRestriction_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.BundleKeyQueryHelperTest matches_doesNotExistRestriction_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.BundleKeyQueryHelperTest matches_doesNotExistRestriction_doesNotMeetRestriction_returnsFalse None]', 1), ('[android.contentcaptureservice.cts.ChildlessActivityTest testSetContentCaptureFeatureEnabled_disabledThenReEnabledByDeviceConfig CtsContentCaptureServiceTestCases]', 1), ('[android.text.style.cts.TextAppearanceSpanTest testRestrictContext CtsTextTestCases]', 1), ('[com.android.cts.devicepolicy.MixedManagedProfileOwnerTestApi30 testPasswordMinimumRestrictions CtsDevicePolicyManagerTestCases]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_EC_ModernSpec_AsCustomAsPossible CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_RSA_ModernSpec_AsCustomAsPossible CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_RSA_IndCpaEnforced CtsKeystoreTestCases]', 1), ('[android.keystore.cts.KeyPairGeneratorTest testGenerate_EC_IndCpaEnforced CtsKeystoreTestCases]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testVerifyGeneratedLogs None]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testGenerateLogs None]', 1), ('[com.android.cts.deviceandprofileowner.SecurityLoggingTest testSetDelegateScope_noDelegation None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsIsCallerDelegateHelper isCallerApplicationRestrictionsManagingPackage None]', 1), ('[com.android.cts.deviceandprofileowner.ApplicationRestrictionsIsCallerDelegateHelper testSetApplicationRestrictionsManagingPackageToDelegate None]', 1), ('[com.android.cts.verifier.camera.its.ItsService doCheckSensorExistence None]', 1), ('[com.android.cts.devicepolicy.BaseDevicePolicyTest isHeadlessSystemUserMode CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.deviceandprofileowner.MeteredDataRestrictionTest testSetMeteredDataDisabledPackages None]', 1), ('[com.android.cts.verifier.audio.USBRestrictRecordAActivity LocalClickListener None]', 1), ('[android.telephony.cts.SubscriptionManagerTest isSupported CtsTelephonyTestCases]', 1), ('[android.telephony.cts.SubscriptionManagerTest testSetAndGetD2DSharingContacts CtsTelephonyTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsFull_additionalUser CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsInstant_restrictedProfiles CtsMediaHostTestCases]', 1), ('[android.media.session.cts.MediaSessionManagerHostTest testGetActiveSessionsFull_restrictedProfiles CtsMediaHostTestCases]', 1), ('[com.android.cts.deviceandprofileowner.AudioRestrictionTest isFullVolumeDevice None]', 1), ('[com.android.cts.deviceandprofileowner.AudioRestrictionTest testDisallowAdjustVolume_muted None]', 1), ('[com.android.cts.deviceandprofileowner.AudioRestrictionTest testDisallowAdjustVolume None]', 1), ('[com.android.cts.deviceandprofileowner.AudioRestrictionTest testDisallowUnmuteMicrophone None]', 1), ('[android.devicepolicy.cts.PreferentialNetworkServiceTest TestApis CtsDevicePolicyTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest isAppStandbyEnabled CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testUserForceIntoRestricted CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testUserForceIntoRestricted_BucketDisabled CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testUserLaunchRemovesFromRestricted CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.UsageStatsTest testLocusIdEventsVisibility CtsUsageStatsTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest isStaConcurrencyForRestrictedConnectionsSupported CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPaidSuggestionWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToInternetNetworkWhenConnectedToOemPaidSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPrivateSuggestionWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToInternetNetworkWhenConnectedToOemPrivateSuggestion CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPaidSuggestionFailureWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToOemPrivateSuggestionFailureWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToSuggestionFailureWithOemPaidNetCapabilityWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.net.wifi.cts.MultiStaConcurrencyRestrictedWifiNetworkSuggestionTest testConnectToSuggestionFailureWithOemPrivateNetCapabilityWhenConnectedToInternetNetwork CtsWifiTestCases]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testBgRestrictedForegroundService CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerProcessStateTest testForegroundServiceAppOp CtsAppTestCases]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.CheckNoOwnerRestrictionsTest testNoOwnerRestrictions None]', 1), ('[test.java.com.android.queryable.queries.SerializableQueryHelperTest isTrue None]', 1), ('[test.java.com.android.queryable.queries.SerializableQueryHelperTest matches_isEqualTo_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.SerializableQueryHelperTest matches_isEqualTo_doesNotMeetRestriction_returnsFalse None]', 1), ('[android.print.cts.PrintDocumentInfoTest createFirstMockDiscoverySessionCallbacks CtsPrintTestCases]', 1), ('[android.alarmmanager.cts.BackgroundRestrictedAlarmsTest testRepeatingAlarmBlocked CtsAlarmManagerTestCases]', 1), ('[android.alarmmanager.cts.BackgroundRestrictedAlarmsTest testAlarmClockNotBlocked CtsAlarmManagerTestCases]', 1), ('[com.android.cts.appsearch.external.app.AppSearchSessionCtsTestBase testRemoveByQuery_packageFilter CtsAppSearchTestCases]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testCreateDelegateTestInvalidSipMessages CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testActiveDialogPendingNewInvite CtsTelephonyTestCases]', 1), ('[android.telephony.ims.cts.SipDelegateManagerTest testIncomingInviteDeregistering CtsTelephonyTestCases]', 1), ('[android.devicepolicy.cts.NetworkResetTest factoryReset_disallowedByNetworkResetPolicy_doesNotFactoryReset CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.NetworkResetTest factoryReset_disallowedByConfigPrivateDnsPolicy_doesPartialFactoryReset CtsDevicePolicyTestCases]', 1), ('[android.devicepolicy.cts.NetworkResetTest isFalse CtsDevicePolicyTestCases]', 1), ('[com.android.cts.managedprofile.DisallowSharingIntoProfileTest testSetUp None]', 1), ('[com.android.cts.managedprofile.DisallowSharingIntoProfileTest testDisableSharingIntoProfile None]', 1), ('[android.carrierapi.cts.NetworkScanApiTest werePreconditionsSatisfied CtsCarrierApiTestCases]', 1), ('[com.android.cts.launcherapps.simpleapp.SimpleActivityStartService KeyguardDismissCallback None]', 1), ('[com.android.cts.verifier.managedprovisioning.CommandReceiverActivity isKeyguardSecure None]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_AddRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testCreateAndManageUser_RemoveRestrictionSet CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testBluetoothRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testDisallowFactoryReset CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testAirplaneModeRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.DeviceOwnerTest testSensorToggleRestriction CtsDevicePolicyManagerTestCases]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest setExactAwiWithoutPermissionWithWhitelist CtsAlarmManagerTestCases]', 1), ('[android.alarmmanager.cts.ExactAlarmsTest setExactAwiWithPermissionAndWhitelist CtsAlarmManagerTestCases]', 1), ('[test.java.com.android.queryable.queries.ClassQueryHelperTest isTrue None]', 1), ('[android.telecom.cts.ConferenceTest testConferenceSetters CtsTelecomTestCases]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest assertClearDefaultRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest testDefaultRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest testSetAllRestrictionsIndividually None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest testSetAllRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest testClearAllRestrictions None]', 1), ('[com.android.cts.deviceandprofileowner.userrestrictions.BaseUserRestrictionsTest testBroadcast None]', 1), ('[android.app.cts.android.app.cts.tools.ServiceProcessController register CtsAppTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest isHeadlessSystemUserMode CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_deviceOwnerOnly CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_primaryProfileOwnerOnly CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_secondaryProfileOwnerOnly CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_managedProfileOwnerOnly CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_layering CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_layering_profileOwnerNoLeaking CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_profileGlobalRestrictionsAsDo CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.UserRestrictionsTest testUserRestrictions_ProfileGlobalRestrictionsAsPo CtsDevicePolicyManagerTestCases]', 1), ('[android.keystore.cts.KeyGenParameterSpecTest testDefaults CtsKeystoreTestCases]', 1), ('[android.net.vcn.cts.TestNetworkWrapper VcnTestNetworkCallback CtsVcnTestCases]', 1), ('[test.java.com.android.queryable.queries.BooleanQueryHelperTest isTrue None]', 1), ('[com.android.cts.verifier.managedprovisioning.PolicyTransparencyTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.usespermissiondiffcertapp.AccessPermissionWithDiffSigTest testRestrictingProviderNoMatchingPath None]', 1), ('[com.android.cts.verifier.managedprovisioning.DisallowAppsControlActivity DisallowAppsControlActivity None]', 1), ('[android.server.wm.MultiDisplaySecurityTests testLaunchWithoutPermissionOnVirtualDisplayByOwner CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplaySecurityTests testLaunchWithoutPermissionOnVirtualDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.keystore.cts.KeyProtectionTest testDefaults CtsKeystoreTestCases]', 1), ('[com.android.cts.deviceandprofileowner.AllowedAccountManagementTest clearAllAccountManagementDisabled None]', 1), ('[com.android.cts.deviceandprofileowner.AllowedAccountManagementTest testUserRestriction_profileAndDeviceOwnerCanAddAndRemoveAccount None]', 1), ('[com.android.cts.deviceandprofileowner.AllowedAccountManagementTest testRemoveAccount_noUserRestriction None]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetApplicationRestrictions_failIfNotProfileOwner CtsAdminTestCases]', 1), ('[android.admin.cts.DevicePolicyManagerTest testAddUserRestriction_failIfNotProfileOwner CtsAdminTestCases]', 1), ('[android.admin.cts.DevicePolicyManagerTest testSetRestrictionsProvider_failIfNotProfileOwner CtsAdminTestCases]', 1), ('[android.admin.cts.DevicePolicyManagerTest testCreateAdminSupportIntent_returnNullIfRestrictionIsNotSet CtsAdminTestCases]', 1), ('[com.android.cts.managedprofile.CameraPolicyTest testEnableCameraInManagedProfile None]', 1), ('[com.android.cts.comp.provisioning.UserRestrictionTest testAddDisallowRemoveUserRestriction None]', 1), ('[com.android.cts.comp.provisioning.UserRestrictionTest testClearDisallowRemoveUserRestriction None]', 1), ('[com.android.cts.delegate.AppRestrictionsIsCallerDelegateHelper isCallerApplicationRestrictionsManagingPackage None]', 1), ('[com.android.cts.delegate.AppRestrictionsIsCallerDelegateHelper testAssertCallerIsApplicationRestrictionsManagingPackage None]', 1), ('[com.android.cts.delegate.AppRestrictionsIsCallerDelegateHelper testAssertCallerIsNotApplicationRestrictionsManagingPackage None]', 1), ('[com.android.cts.delegate.AppRestrictionsDelegateTest testCannotAccessApis None]', 1), ('[com.android.cts.delegate.AppRestrictionsDelegateTest testCanAccessApis None]', 1), ('[android.cts.statsdatom.statsd.HostAtomTests isNotNull CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.HostAtomTests testBatterySaverModeStateChangedAtom CtsStatsdAtomHostTestCases]', 1), ('[android.cts.statsdatom.statsd.HostAtomTests testRemainingBatteryCapacity CtsStatsdAtomHostTestCases]', 1), ('[android.suspendapps.permission.cts.NegativePermissionsTest setDistractingPackageRestrictions CtsSuspendAppsPermissionTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest ProvisioningCallback CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testIs60GhzBandSupportedOnSOrNewer CtsWifiTestCases]', 1), ('[android.net.wifi.cts.WifiManagerTest testListenOnCoexUnsafeChannels CtsWifiTestCases]', 1), ('[android.suspendapps.cts.DistractingPackageTest isEmpty CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DistractingPackageTest testShouldHideFromSuggestions CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DistractingPackageTest testCannotRestrictWhenUninstallBlocked CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DistractingPackageTest testCannotRestrictUnderDisallowAppsControl CtsSuspendAppsTestCases]', 1), ('[android.suspendapps.cts.DistractingPackageTest testCannotRestrictUnderDisallowUninstallApps CtsSuspendAppsTestCases]', 1), ('[android.security.cts.FileIntegrityManagerTest testCtsReleaseCertificateTrusted CtsSecurityTestCases]', 1), ('[com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest testPasswordQuality_complexUpperCase None]', 1), ('[com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest testPasswordQuality_complexLowerCase None]', 1), ('[com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest testPasswordQuality_complexLetters None]', 1), ('[com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest testPasswordQuality_complexNumeric None]', 1), ('[com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest testPasswordQuality_complexSymbols None]', 1), ('[com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest testPasswordQuality_complexNonLetter None]', 1), ('[com.android.cts.deviceandprofileowner.ResetPasswordWithTokenTest testResetPasswordWithTokenLogging None]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsLocationStartFromBG CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsLocationStartFromBGTwoProcesses CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsLocationPendingIntent CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsLocationStartFromBGWithBind CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testUpdateUidProcState CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartFromBG1 CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartFromBG2 CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartFromBoundTopState CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartFromFgsState CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartFromBGWithBind CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartFromBGWithBindWithRestriction CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsBindingFlagNone CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartSystemAlertWindow CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartFromBGException CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartAllowList CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testTempAllowListType CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testVisibleActivityGracePeriod CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testStartForegroundTimeout CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testSecondStartForeground CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartVpn CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testPushMessagingOverQuota CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testTempAllowListReasonCode CtsAppTestCases]', 1), ('[android.app.cts.ActivityManagerFgsBgStartTest testFgsStartInputMethod CtsAppTestCases]', 1), ('[com.android.cts.deviceandprofileowner.DelegationTest emptyList None]', 1), ('[com.android.cts.deviceandprofileowner.DelegationTest testDelegateReceivesScopeChangedBroadcast None]', 1), ('[com.android.cts.deviceandprofileowner.DelegationTest testCanRetrieveDelegates None]', 1), ('[test.java.com.android.queryable.queries.EnumQueryHelperTest isTrue None]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testNoDebuggingFeaturesRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testNfcRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testBluetoothSharingRestriction CtsDevicePolicyManagerTestCases]', 1), ('[com.android.cts.devicepolicy.ManagedProfileTest testChooserActivityLaunchedFromWorkProfileWithSelectedPersonalTab CtsDevicePolicyManagerTestCases]', 1), ('[android.alarmmanager.cts.AppStandbyTests setUpTests CtsAlarmManagerTestCases]', 1), ('[android.security.cts.PerfEventParanoidTest testPerfEventRestricted CtsSecurityHostTestCases]', 1), ('[test.java.com.android.queryable.queries.StringQueryHelperTest isTrue None]', 1), ('[test.java.com.android.queryable.queries.StringQueryHelperTest matches_isEqualTo_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.StringQueryHelperTest matches_isEqualTo_doesNotMeetRestriction_returnsFalse None]', 1), ('[android.host.multiuser.BaseMultiUserTest TestName CtsMultiUserHostTestCases]', 1), ('[com.android.cts.deviceandprofileowner.PrintingPolicyTest testPrintingPolicy None]', 1), ('[com.android.cts.deviceowner.SetPolicyActivity finish None]', 1), ('[com.android.cts.verifier.managedprovisioning.VpnTestActivity setPassFailButtonClickListeners None]', 1), ('[com.android.cts.verifier.managedprovisioning.ByodHelperActivity isProfileOwner None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest isTrue None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isEqualTo_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isEqualTo_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isGreaterThan_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isGreaterThan_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isGreaterThanOrEqualTo_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isLessThan_meetsRestriction_returnsTrue None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isLessThan_doesNotMeetRestriction_returnsFalse None]', 1), ('[test.java.com.android.queryable.queries.LongQueryHelperTest matches_isLessThanOrEqualTo_doesNotMeetRestriction_returnsFalse None]', 1), ('[android.app.stubs.CommandReceiver isAlive None]', 1)]"	""	""	""	""	""	""	""	""	""
