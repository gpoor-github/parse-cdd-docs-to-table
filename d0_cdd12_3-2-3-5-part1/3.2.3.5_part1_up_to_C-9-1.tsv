"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"Area"	"Shortened"	"Test Level"	"class_def"	"method"	"module"	"class_defs"	"methods"	"modules"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-2-6"	"3.2.3.5/C-2-6"	"03020305.670206"	"""C-2-6] MUST honor the [android.intent.action.SENDTO](https://developer.android.com/reference/android/content/Intent#ACTION_SENDTO) and [android.intent.action.VIEW](https://developer.android.com/reference/android/content/Intent#ACTION_VIEW) intents and provide an activity to send/display SMS messages. """	""	""	"android.intent.action.SENDTO ACTION_VIEW android.intent.action.VIEW SENDTO VIEW SMS ACTION_SENDTO"	""	"SMS"	""	""	"[('android.view.cts.ViewTest', 233), ('android.widget.cts.RemoteViewsTest', 85), ('android.webkit.cts.WebSettingsTest', 54), ('android.widget.cts.ImageViewTest', 47), ('android.widget.cts.PopupWindowTest', 44), ('android.widget.cts.HorizontalScrollViewTest', 42), ('android.fragment.cts.FragmentViewTests', 34), ('android.hardware.cts.CameraTest', 31), ('android.autofillservice.cts.augmented.AugmentedLoginActivityTest', 24), ('android.widget.cts.HeaderViewListAdapterTest', 20), ('android.accessibilityservice.cts.AccessibilityWindowQueryTest', 16), ('android.autofillservice.cts.dropdown.AuthenticationTest', 15), ('android.server.wm.WindowInputTests', 15), ('android.accessibilityservice.cts.AccessibilityTextTraversalTest', 15), ('android.autofillservice.cts.saveui.CustomDescriptionTest', 15), ('android.os.cts.StrictModeTest', 15), ('android.widget.cts.SimpleAdapterTest', 14), ('android.fragment.cts.PostponedTransitionTest', 14), ('android.fragment.cts.FragmentAnimatorTest', 14), ('android.widget.cts.SimpleExpandableListAdapterTest', 13), ('android.app.cts.DialogTest', 13), ('android.autofillservice.cts.dropdown.VirtualContainerActivityTest', 13), ('android.text.util.cts.LinkifyTest', 13), ('android.hardware.camera2.cts.CaptureRequestTest', 13), ('android.hardware.camera2.cts.ReprocessCaptureTest', 12), ('android.view.inputmethod.cts.FocusHandlingTest', 12), ('com.android.cts.ephemeralapp1.ClientTest', 12), ('android.autofillservice.cts.saveui.SimpleSaveActivityTest', 12), ('android.widget.cts.ToolbarTest', 11), ('android.accessibilityservice.cts.AccessibilityGestureDispatchTest', 11), ('android.translation.cts.UiTranslationManagerTest', 10), ('android.widget.cts.ArrayAdapterTest', 10), ('android.widget.cts.CalendarViewTest', 10), ('android.contentcaptureservice.cts.unit.ViewNodeTest', 10), ('com.android.cts.isolatedsplitapp.SplitAppTest', 9), ('android.widget.cts.EditTextTest', 9), ('android.hardware.camera2.cts.PerformanceTest', 9), ('android.view.cts.SurfaceViewSyncTest', 9), ('android.widget.cts.GalleryTest', 9), ('android.view.animation.cts.LayoutAnimationControllerTest', 9), ('android.server.wm.WindowInsetsAnimationTests', 8), ('android.widget.cts.FrameLayoutTest', 8), ('android.translation.cts.unittests.TextViewTranslationTest', 8), ('android.hardware.camera2.cts.RecordingTest', 8), ('android.autofillservice.cts.dropdown.WebViewActivityTest', 7), ('android.autofillservice.cts.inline.InlineAuthenticationTest', 7), ('android.text.method.cts.DigitsKeyListenerTest', 7), ('android.widget.cts.PopupMenuTest', 6), ('android.widget.cts.MediaControllerTest', 6), ('android.autofillservice.cts.commontests.AbstractLoginNotImportantForAutofillTestCase', 6), ('android.view.cts.SystemGestureExclusionRectsTest', 6), ('android.autofillservice.cts.dropdown.VirtualContainerActivityCompatModeTest', 6), ('android.text.method.cts.TextKeyListenerTest', 5), ('android.view.cts.TextureViewStressTest', 5), ('android.text.method.cts.CharacterPickerDialogTest', 5), ('android.view.cts.VerifyInputEventTest', 5), ('android.text.method.cts.QwertyKeyListenerTest', 5), ('android.transition.cts.ChangeTransformTest', 5), ('android.graphics.drawable.cts.AnimatedVectorDrawableParameterizedTest', 5), ('android.view.cts.TouchDelegateTest', 5), ('android.widget.cts.GridLayoutTest', 5), ('android.widget.cts.TextViewFontWeightTest', 5), ('android.app.cts.AlertDialog_BuilderCursorTest', 4), ('android.server.wm.MultiDisplaySecurityTests', 4), ('android.autofillservice.cts.unittests.DatasetTest', 4), ('android.view.cts.ViewAnimationMatrixTest', 4), ('android.transition.cts.VisibilityTest', 4), ('android.autofillservice.cts.commontests.LoginActivityCommonTestCase', 4), ('android.text.method.cts.DateTimeKeyListenerTest', 3), ('android.view.cts.SoundEffectConstantsTest', 3), ('android.text.method.cts.ReplacementTransformationMethodTest', 3), ('android.transition.cts.ChangeImageTransformTest', 3), ('android.view.cts.ViewGroupChildDrawingOrderTest', 3), ('android.server.wm.DisplayCutoutTests', 3), ('android.provider.cts.SettingsPanelTest', 3), ('com.android.cts.webkit.WebViewHostSideMultipleProfileTest', 3), ('android.widget.cts.CursorTreeAdapterTest', 3), ('android.view.cts.ContentPaneFocusTest', 3), ('android.hardware.camera2.cts.OfflineSessionTest', 3), ('android.translation.cts.TranslationManagerTest', 3), ('android.view.cts.ActionModeCallback2Test', 3), ('android.app.cts.NotificationStatsTest', 3), ('android.text.method.cts.MetaKeyKeyListenerTest', 3), ('android.widget.cts.ResourceCursorTreeAdapterTest', 3), ('android.transition.cts.PropagationTest', 3), ('android.server.wm.SplashscreenTests', 3), ('android.view.inspector.cts.StaticInspectionCompanionProviderTest', 3), ('android.media.tv.cts.HardwareSessionTest', 2), ('android.hardware.cts.Camera_SizeTest', 2), ('android.hardware.camera2.cts.ConcurrentCameraTest', 2), ('com.android.cts.splitapp.SplitAppTest', 2), ('android.provider.cts.media.MediaStore_MetadataKeysTest', 2), ('android.hdmicec.cts.playback.HdmiCecDeviceSelectForPlaybackTest', 2), ('android.server.wm.WindowInsetsAnimationSynchronicityTests', 2), ('android.media.cts.PresentationSyncTest', 2), ('android.assist.cts.TextViewTest', 2), ('android.widget.cts.CheckBoxTest', 2), ('android.transition.cts.SharedElementCallbackTest', 2), ('android.opengl.cts.ByteBufferTest', 2), ('android.server.wm.BlurTests', 2), ('android.transition.cts.ChangeBoundsTest', 2), ('android.devicepolicy.cts.CrossProfileAppsTest', 2), ('android.content.cts.ContextTest', 2), ('android.autofillservice.cts.inline.InlineLoginActivityTest', 2), ('android.acceleration.cts.SoftwareAccelerationTest', 2), ('android.widget.cts.ToastPresenterTest', 2), ('android.server.wm.MultiDisplaySystemDecorationTests', 2), ('android.os.cts.PowerManagerTests', 2), ('android.assist.cts.LargeViewHierarchyTest', 2), ('android.widget.cts.FilterTest', 2), ('com.android.cts.managedprofile.LauncherAppsTest', 2), ('android.accessibilityservice.cts.AccessibilityServiceInfoTest', 2), ('android.appsecurity.cts.EphemeralTest', 2), ('android.view.cts.sdk28.ViewGroupTest', 2), ('android.widget.cts.DigitalClockTest', 2), ('android.preference.cts.PreferenceRecycleTest', 2), ('android.autofillservice.cts.activities.LoginActivity', 2), ('android.view.accessibility.cts.AccessibilityManagerTest', 2), ('android.provider.cts.contacts.ContactsContract_ContactsTest', 2), ('android.text.cts.MyanmarTest', 2), ('com.android.cts.normalapp.ClientTest', 2), ('android.view.cts.ViewPaddingTest', 2), ('android.server.wm.PrivacyIndicatorBoundsTests', 2), ('android.autofillservice.cts.DuplicateIdActivityTest', 2), ('android.view.cts.ViewSourceLayoutTest', 2), ('android.provider.cts.contacts.ContactsContract_QuickContactsTest', 2), ('android.webkit.cts.WebViewTransportTest', 2), ('android.security.cts.MotionEventTest', 2), ('android.autofillservice.cts.inline.InlineAugmentedContentTest', 2), ('android.hardware.camera2.cts.NativeStillCaptureTest', 2), ('android.transition.cts.ChangeScrollTest', 2), ('android.security.cts.CertificateTest', 2), ('android.view.inputmethod.cts.EditorInfoTest', 2), ('android.server.biometrics.BiometricSimpleTests', 2), ('android.animation.cts.AnimatorSetTest', 2), ('android.app.usage.cts.FragmentTest', 2), ('android.security.cts.Poc17_11', 2), ('android.autofillservice.cts.LoginWithCustomHighlightActivityTest', 2), ('com.android.cts.ephemeralapp1.WebViewTest', 2), ('android.server.wm.WindowMetricsActivityTests', 2), ('android.accessibilityservice.cts.AccessibilityOverlayTest', 2), ('android.content.pm.cts.shortcut.backup.publisher4.ShortcutManagerPreBackupTest', 1), ('android.transition.cts.SlideBadEdgeTest', 1), ('android.view.inspector.cts.IntFlagMappingTest', 1), ('android.server.wm.lifecycle.ActivityLifecycleTests', 1), ('android.view.cts.KeyboardShortcutInfoTest', 1), ('android.slice.cts.SliceMetricsTest', 1), ('android.autofillservice.cts.dropdown.PreFilledLoginActivityTest', 1), ('android.media.cts.NativeDecoderTest', 1), ('android.view.cts.KeyCharacterMapTest', 1), ('android.view.cts.MenuInflaterTest', 1), ('android.security.cts.CVE_2021_0481.DeviceTest', 1), ('android.autofillservice.cts.commontests.DatasetFilteringTest', 1), ('android.view.cts.KeyboardShortcutGroupTest', 1), ('android.graphics.drawable.cts.GradientDrawableTest', 1), ('android.view.inputmethod.cts.ExtractedTextRequestTest', 1), ('android.view.cts.MenuItemTest', 1), ('android.contentcaptureservice.cts.unit.DataRemovalRequestTest', 1), ('android.widget.cts.SeekBarTest', 1), ('android.widget.cts.AnalogClockTest', 1), ('android.mediav2.cts.EncodeDecodeAccuracyTest', 1), ('android.media.cts.MediaCodecTest', 1), ('android.contentcaptureservice.cts.CanaryTest', 1), ('android.hardware.cts.SensorTest', 1), ('android.autofillservice.cts.unittests.FillResponseTest', 1), ('android.view.inputmethod.cts.InputContentInfoTest', 1), ('android.media.cts.MediaActivityTest', 1), ('android.permission2.cts.RestrictedPermissionsTest', 1), ('com.android.cts.deviceandprofileowner.ApplicationRestrictionsTest', 1), ('android.view.cts.MenuTest', 1), ('android.view.textclassifier.cts.TextClassifierPolicyTest', 1), ('android.view.inputmethod.cts.KeyboardTest', 1), ('android.server.wm.VrDisplayTests', 1), ('android.graphics.drawable.cts.BitmapDrawableTest', 1), ('com.android.cts.verifier.security.UnlockedDeviceRequiredTest', 1), ('com.android.cts.encryptionapp.EncryptionAppTest', 1), ('android.accessibilityservice.cts.AccessibilityButtonTest', 1), ('android.opengl.cts.NativeAttachShaderTest', 1), ('android.autofillservice.cts.unittests.RegexValidatorTest', 1), ('android.view.cts.MotionEvent_PointerPropertiesTest', 1), ('android.translation.cts.unittests.TranslationValueTest', 1), ('android.opengl.cts.FramebufferTest', 1), ('android.view.cts.ChoreographerTest', 1), ('android.media.cts.MediaScannerTest', 1), ('android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackupTest', 1), ('android.app.cts.LauncherActivityTest', 1), ('android.app.cts.TimePickerDialogTest', 1), ('android.autofillservice.cts.servicebehavior.DisableAutofillTest', 1), ('android.view.textclassifier.cts.TextSelectionTest', 1), ('android.widget.cts.ImageButtonTest', 1), ('android.app.cts.ToolbarActionBarTest', 1), ('android.view.inputmethod.cts.CompletionInfoTest', 1), ('android.view.animation.cts.LayoutAnimationController_AnimationParametersTest', 1), ('android.renderscript.cts.AllocationCreateAllocationsTest', 1), ('android.server.wm.CompatChangeTests', 1), ('android.widget.cts.ChronometerTest', 1), ('android.opengl.cts.EglConfigTest', 1), ('android.view.cts.Surface_OutOfResourcesExceptionTest', 1), ('android.colormode.cts.AttributeWideColorModeTest', 1), ('android.content.res.cts.TypedArrayTest', 1), ('android.providerui.cts.MediaStoreUiTest', 1), ('com.android.cts.packageinstaller.ManualPackageInstallTest', 1), ('android.view.inputmethod.cts.InputConnectionWrapperTest', 1), ('android.mediapc.cts.PerformanceClassTest', 1), ('android.view.inputmethod.cts.ExtractedTextTest', 1), ('android.view.cts.input.InputDeviceEnabledTest', 1), ('android.animation.cts.InterpolatorTest', 1), ('android.translation.cts.unittests.TranslationContextTest', 1), ('android.text.method.cts.TransformationMethodTest', 1), ('android.app.cts.ActivityManagerMemoryClassTest', 1), ('android.server.wm.UnsupportedErrorDialogTests', 1), ('android.widget.cts.RatingBarTest', 1), ('android.media.cts.RemoteControllerTest', 1), ('android.view.inputmethod.cts.InlineSuggestionsResponseTest', 1), ('android.text.method.cts.ForwardDeleteTest', 1), ('android.testharness.app.TestHarnessModeDeviceTest', 1), ('android.view.cts.DisplayRefreshRateTest', 1), ('android.view.cts.input.InputDeviceKeyLayoutMapTest', 1), ('android.compat.hiddenapi.cts.HostsideStatsdAtomTests', 1), ('android.colormode.cts.WideColorModeTest', 1), ('android.server.wm.lifecycle.ActivityLifecycleTopResumedStateTests', 1), ('android.view.accessibility.cts.AccessibilityNodeInfo_RangeInfoTest', 1), ('android.server.wm.ActivityTaskAffinityTests', 1), ('android.hardware.camera2.cts.ZoomCaptureTest', 1), ('android.hardware.cts.LowRamDeviceTest', 1), ('android.contentcaptureservice.cts.unit.ContentCaptureConditionTest', 1), ('android.media.cts.NativeImageReaderTest', 1), ('android.transition.cts.SlideDefaultEdgeTest', 1), ('android.view.textclassifier.cts.TextLanguageTest', 1), ('android.autofillservice.cts.unittests.AutofillValueTest', 1), ('android.content.wm.cts.ContextGetDisplayTest', 1), ('android.translation.cts.unittests.TranslationCapabilityTest', 1), ('android.view.cts.SearchEventTest', 1), ('com.android.cts.verifier.sensors.base.SensorCtsTestActivity', 1), ('android.media.cts.VideoEncoderTest', 1)]"	"[('getActivity', 132), ('beginTransaction', 99), ('commit', 97), ('setup', 75), ('getFragmentManager', 60), ('StrictViewFragment', 51), ('getInstrumentation', 44), ('build', 39), ('setUp', 36), ('startPostponedEnterTransition', 32), ('getView', 29), ('getTargetContext', 26), ('popBackStack', 17), ('tearDown', 16), ('AnimatorFragment', 15), ('Builder', 13), ('PostponedFragment1', 13), ('PostponedFragment2', 13), ('getResources', 11), ('getContext', 9), ('waitForTransition', 9), ('AccessibilityDumpOnFailureRule', 8), ('getViewTreeObserver', 8), ('run', 7), ('Bundle', 6), ('Runnable', 6), ('executePendingTransactions', 6), ('teardown', 5), ('getSimpleName', 5), ('getCurrentPackageName', 5), ('getChildCount', 5), ('waitForIdleSync', 4), ('oneTimeSetup', 4), ('getUiAutomation', 4), ('countDown', 4), ('resetChangeBoundsTransition', 4), ('getApplicationContext', 4), ('getActivityRule', 4), ('getLastReportedRects', 4), ('getMediaDirString', 3), ('getMenu', 3), ('Intent', 3), ('notNullValue', 3), ('assertThemeBaseValues', 3), ('getMainToolbar', 3), ('getName', 3), ('getPackageManager', 3), ('getDevice', 3), ('getInputFormat', 3), ('updateTitle', 3), ('data', 3), ('pressSeeMore', 3), ('get', 3), ('hasWindowFocus', 3), ('getWindow', 3), ('resetStaticState', 3), ('commitNow', 3), ('waitForNoTransition', 3), ('size', 3), ('postponeEnterTransition', 3), ('getTop', 3), ('getRefreshRate', 3), ('getChildFragmentManager', 3), ('SimpleViewFragment', 3), ('getMenuInflater', 2), ('assertThemeFeatureAValues', 2), ('getServiceInfo', 2), ('getDumpsysPhysicalAddress', 2), ('resetTransition', 2), ('customSetup', 2), ('clear', 2), ('getContentResolver', 2), ('release', 2), ('getPackageName', 2), ('getDurationScale', 2), ('requestFocus', 2), ('addDynamicShortcuts', 2), ('getDecorView', 2), ('getChild1Cursor', 2), ('getChild2Cursor', 2), ('Object', 2), ('getTranslationReplier', 2), ('enableDebugLog', 2), ('oneTimeReset', 2), ('cleanup', 2), ('resetTemporaryTranslationService', 2), ('setupContainer', 2), ('TransitionFragment2', 2), ('StrictFragment', 2), ('recycle', 2), ('awakenScrollBars', 2), ('getAnimation', 2), ('length', 2), ('getLeft', 2), ('getRight', 2), ('getWidth', 2), ('getBottom', 2), ('getHeight', 2), ('any', 2), ('ParentFragment', 2), ('afterActivityLaunched', 2), ('getTime', 2), ('notifyAll', 2), ('WindowManagerStateHelper', 1), ('pressWakeupButton', 1), ('pressUnlockButton', 1), ('launchHomeActivityNoWait', 1), ('StreamCombinationTargets', 1), ('Configuration', 1), ('launchActivity', 1), ('shouldLoadFeatureADefault', 1), ('shouldLoadFeatureBDefault', 1), ('assertThemeFeatureBValues', 1), ('shouldLoadFeatureCDefault', 1), ('assertThemeFeatureCValues', 1), ('reviewGalleryPrewarmService', 1), ('getComponentInfo', 1), ('cectDeviceSelectDifferentSource', 1), ('cectDeviceSelectSameSource', 1), ('ChangeImageTransform', 1), ('LimitedErrorCollector', 1), ('getLayoutInflater', 1), ('CodecAsyncHandler', 1), ('input', 1), ('resetContext', 1), ('createInputSurface', 1), ('getNetworkImageHtml', 1), ('ErrorCollector', 1), ('supportsBlur', 1), ('shareUidBetweenRestrictedAndNotRestrictedApp', 1), ('MyChangeBounds', 1), ('LinearInterpolator', 1), ('getMessage', 1), ('DeviceState', 1), ('createBundle0', 1), ('createBundle1', 1), ('BroadcastReceiver', 1), ('getAction', 1), ('IntentFilter', 1), ('volumePanel_seeMoreButton_launchesIntoSettings', 1), ('launchVolumePanel', 1), ('nfcPanel_seeMoreButton_launchesIntoSettings', 1), ('launchNfcPanel', 1), ('wifiPanel_seeMoreButton_launchesIntoSettings', 1), ('launchWifiPanel', 1), ('enableAutoCapSettings', 1), ('resetAutoCapSettings', 1), ('supportsVrMode', 1), ('PreviewCallback', 1), ('ChangeTransform', 1), ('getPassButton', 1), ('createDeviceProtectedStorageContext', 1), ('getCurrentUser', 1), ('UnlockScreenRule', 1), ('AccessibilityButtonCallback', 1), ('getService', 1), ('getAccessibilityButtonController', 1), ('setUpClass', 1), ('tearDownClass', 1), ('HeaderViewFullAdapter', 1), ('HeaderViewEmptyAdapter', 1), ('close', 1), ('getDialog', 1), ('ContentValues', 1), ('requery', 1), ('createGroupCursor', 1), ('createChild1Cursor', 1), ('createChild2Cursor', 1), ('glBlitFramebuffer', 1), ('getInstance', 1), ('enableService', 1), ('onFill', 1), ('getNextFillRequest', 1), ('tapLogin', 1), ('getNextSaveRequest', 1), ('validTransformation', 1), ('validTransformationWithOneTemplateUpdate', 1), ('validTransformationWithMultipleTemplateUpdates', 1), ('getContentDescription', 1), ('getText', 1), ('badImageTransformation', 1), ('unusedImageTransformation', 1), ('applyImageTransformationToTextView', 1), ('failFirstFailAll', 1), ('failSecondFailAll', 1), ('applyCharSequenceTransformationToImageView', 1), ('applyMultipleTransformationsForSameField_matchSecond', 1), ('resetTemporaryContentCaptureService', 1), ('systemBars', 1), ('launchPreSimpleSaveActivity', 1), ('assertNoUnhandledFillRequests', 1), ('elapsedRealtime', 1), ('startSimpleSaveActivity', 1), ('getCurrentActivity', 1), ('getContentView', 1), ('login', 1), ('save', 1), ('getAutofillManager', 1), ('cancel', 1), ('replaceTransition', 1), ('backStackNestingLevel', 1), ('forcedTransition1', 1), ('forcedTransition2', 1), ('crazyTransition', 1), ('differentContainers', 1), ('outOfOrderContainers', 1), ('commitNowNoEffect', 1), ('commitNowStartsPostponed', 1), ('noAccidentalRemoval', 1), ('popPostponedTransaction', 1), ('saveWhilePostponed', 1), ('postponeDoesNotAllowReentrancy', 1), ('CommitNowFragment', 1), ('getMainLooper', 1), ('destroy', 1), ('setupLocales', 1), ('getSupportedLocales', 1), ('getScript', 1), ('PlatformCompatChangeRule', 1), ('getClass', 1), ('getScenario', 1), ('getTheme', 1), ('onHoverEvent_horizontalCantScroll_awakenScrollBarsNotCalled', 1), ('computeVerticalScrollExtent', 1), ('computeVerticalScrollRange', 1), ('computeHorizontalScrollExtent', 1), ('computeHorizontalScrollRange', 1), ('never', 1), ('setSetLayoutParamsNull', 1), ('getLayoutParams', 1), ('addAnimators', 1), ('removeAnimators', 1), ('showAnimatorsReordered', 1), ('showAnimatorsOrdered', 1), ('hideAnimators', 1), ('attachAnimators', 1), ('detachAnimators', 1), ('replaceAnimators', 1), ('postponedAddRemove', 1), ('popPostponed', 1), ('saveWhileAnimatingAway', 1), ('clearAnimations', 1), ('animationOnNullContainer', 1), ('allowAutoRotation', 1), ('getWindowNodeCount', 1), ('getRootViewNode', 1), ('resetCounters', 1), ('StringBuilder', 1), ('group', 1), ('toString', 1), ('getExpectedText', 1), ('getExpectedHint', 1), ('getBaseline', 1), ('returnsFirstArg', 1), ('getMemoryClass', 1), ('resetAppErrors', 1), ('ensureActivityNotObscuredByKeyboardSetUpScreen', 1), ('eglSwapBuffers', 1), ('getFpsResult', 1), ('ChangeScroll', 1), ('addFragments', 1), ('addTwoContainers', 1), ('doubleAdd', 1), ('removeFragments', 1), ('removeHiddenView', 1), ('removeDetatchedView', 1), ('addRemoveAdd', 1), ('removeNotThere', 1), ('hideFragment', 1), ('doubleHide', 1), ('hideUnAdded', 1), ('showFragment', 1), ('showShown', 1), ('showUnAdded', 1), ('detachFragment', 1), ('detachHiddenFragment', 1), ('detachDetatched', 1), ('detachUnAdded', 1), ('attachFragment', 1), ('attachHiddenFragment', 1), ('attachAttached', 1), ('attachUnAdded', 1), ('replaceOne', 1), ('replaceTwo', 1), ('replaceZero', 1), ('replaceReplace', 1), ('popAdd', 1), ('orderedOperationsTogether', 1), ('childFragmentManager', 1), ('popToNonBackStackFragment', 1), ('staticView', 1), ('Rect', 1), ('width', 1), ('height', 1), ('animatingView', 1), ('animate', 1), ('removingRects', 1), ('rootExclusionRects', 1), ('getSystemGestureExclusionRects', 1), ('ignoreHiddenViewRects', 1), ('DumpOnFailure', 1), ('getWeight', 1), ('initStatus', 1), ('clearStatus', 1), ('none', 1), ('activitySetUp', 1), ('GregorianCalendar', 1), ('oneTimeSetUp', 1), ('VideoStorage', 1), ('BufferInfo', 1), ('position', 1), ('reset', 1), ('iterator', 1), ('Callback', 1), ('hasNext', 1), ('next', 1), ('limit', 1), ('remaining', 1), ('start', 1), ('wait', 1), ('stop', 1), ('getCodecInfos', 1), ('StaticInspectionCompanionProvider', 1)]"	"[('CtsWidgetTestCases', 363), ('CtsViewTestCases', 312), ('CtsAutoFillServiceTestCases', 129), ('CtsCameraTestCases', 83), ('CtsFragmentTestCases', 62), ('CtsWebkitTestCases', 56), ('CtsWindowManagerDeviceTestCases', 49), ('CtsTextTestCases', 48), ('CtsAccessibilityServiceTestCases', 47), ('CtsAppTestCases', 24), ('CtsTranslationTestCases', 24), ('CtsTransitionTestCases', 23), ('CtsInputMethodTestCases', 21), ('CtsContentCaptureServiceTestCases', 13), ('CtsMediaTestCases', 9), ('CtsGraphicsTestCases', 7), ('CtsProviderTestCases', 5), ('CtsOpenGLTestCases', 5), ('CtsAssistTestCases', 4), ('CtsContentTestCases', 4), ('CtsContactsProviderTestCases', 4), ('CtsSecurityTestCases', 4), ('CtsTextClassifierTestCases', 3), ('CtsAccessibilityTestCases', 3), ('CtsAnimationTestCases', 3), ('CtsTvTestCases', 2), ('CtsHdmiCecHostTestCases', 2), ('CtsDevicePolicyTestCases', 2), ('CtsAccelerationTestCases', 2), ('CtsOsHostTestCases', 2), ('CtsAppSecurityHostTestCases', 2), ('CtsPreferenceTestCases', 2), ('CtsColorModeTestCases', 2), ('CtsBiometricsTestCases', 2), ('CtsUsageStatsTestCases', 2), ('CtsSecurityBulletinHostTestCases', 2), ('CtsSliceTestCases', 1), ('CtsMediaV2TestCases', 1), ('CtsSensorTestCases', 1), ('CtsPermission2TestCases', 1), ('CtsRenderscriptTestCases', 1), ('CtsProviderUiTestCases', 1), ('CtsMediaPerformanceClassTestCases', 1), ('CtsHardwareTestCases', 1)]"	""	""	""	""	"android.text.method.cts.DigitsKeyListenerTest"	"StaticInspectionCompanionProvider"	"CtsTextTestCases"	""	""	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewTest.java', 233), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RemoteViewsTest.java', 85), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebSettingsTest.java', 54), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ImageViewTest.java', 47), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/PopupWindowTest.java', 44), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/HorizontalScrollViewTest.java', 42), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/FragmentViewTests.java', 34), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/CameraTest.java', 31), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java', 24), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/HeaderViewListAdapterTest.java', 20), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java', 16), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/AuthenticationTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInputTests.java', 15), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/CustomDescriptionTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/tests/os/src/android/os/cts/StrictModeTest.java', 15), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SimpleAdapterTest.java', 14), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/PostponedTransitionTest.java', 14), ('/home/gpoor/cts-12-source/cts/tests/fragment/src/android/fragment/cts/FragmentAnimatorTest.java', 14), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SimpleExpandableListAdapterTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/DialogTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/util/cts/LinkifyTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CaptureRequestTest.java', 13), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ReprocessCaptureTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/FocusHandlingTest.java', 12), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/EphemeralApp1/src/com/android/cts/ephemeralapp1/ClientTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java', 12), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToolbarTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/translation/src/android/translation/cts/UiTranslationManagerTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ArrayAdapterTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/CalendarViewTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/unit/ViewNodeTest.java', 10), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/IsolatedSplitApp/src/com/android/cts/isolatedsplitapp/SplitAppTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/EditTextTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/PerformanceTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/SurfaceViewSyncTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/GalleryTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/animation/cts/LayoutAnimationControllerTest.java', 9), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationTests.java', 8), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/FrameLayoutTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/translation/src/android/translation/cts/unittests/TextViewTranslationTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/RecordingTest.java', 8), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/WebViewActivityTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineAuthenticationTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/DigitsKeyListenerTest.java', 7), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/PopupMenuTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/MediaControllerTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/AbstractLoginNotImportantForAutofillTestCase.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/SystemGestureExclusionRectsTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/VirtualContainerActivityCompatModeTest.java', 6), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/TextKeyListenerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TextureViewStressTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/CharacterPickerDialogTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/VerifyInputEventTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/QwertyKeyListenerTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeTransformTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/AnimatedVectorDrawableParameterizedTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/TouchDelegateTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/GridLayoutTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/TextViewFontWeightTest.java', 5), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/AlertDialog_BuilderCursorTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySecurityTests.java', 4), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/DatasetTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewAnimationMatrixTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/VisibilityTest.java', 4), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/LoginActivityCommonTestCase.java', 4), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/DateTimeKeyListenerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/SoundEffectConstantsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/ReplacementTransformationMethodTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeImageTransformTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewGroupChildDrawingOrderTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/DisplayCutoutTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/SettingsPanelTest.java', 3), ('/home/gpoor/cts-12-source/cts/hostsidetests/webkit/src/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/CursorTreeAdapterTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ContentPaneFocusTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/OfflineSessionTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/translation/src/android/translation/cts/TranslationManagerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ActionModeCallback2Test.java', 3), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/NotificationStatsTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/MetaKeyKeyListenerTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ResourceCursorTreeAdapterTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/PropagationTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/SplashscreenTests.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/inspector/cts/StaticInspectionCompanionProviderTest.java', 3), ('/home/gpoor/cts-12-source/cts/tests/tests/tv/src/android/media/tv/cts/HardwareSessionTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/cts/Camera_SizeTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ConcurrentCameraTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/SplitApp/src/com/android/cts/splitapp/SplitAppTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/provider/src/android/provider/cts/media/MediaStore_MetadataKeysTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/hdmicec/src/android/hdmicec/cts/playback/HdmiCecDeviceSelectForPlaybackTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowInsetsAnimationSynchronicityTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/PresentationSyncTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/assist/src/android/assist/cts/TextViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/CheckBoxTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/SharedElementCallbackTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/ByteBufferTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/BlurTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeBoundsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/devicepolicy/src/android/devicepolicy/cts/CrossProfileAppsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/ContextTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineLoginActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/acceleration/src/android/acceleration/cts/SoftwareAccelerationTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ToastPresenterTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/MultiDisplaySystemDecorationTests.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/os/src/android/os/cts/PowerManagerTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/assist/src/android/assist/cts/LargeViewHierarchyTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/FilterTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/ManagedProfile/src/com/android/cts/managedprofile/LauncherAppsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityServiceInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/src/android/appsecurity/cts/EphemeralTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/sdk28/src/android/view/cts/sdk28/ViewGroupTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/DigitalClockTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/preference/src/android/preference/cts/PreferenceRecycleTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/activities/LoginActivity.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityManagerTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_ContactsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/cts/MyanmarTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/NormalApp/src/com/android/cts/normalapp/ClientTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewPaddingTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/PrivacyIndicatorBoundsTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/DuplicateIdActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ViewSourceLayoutTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/contactsprovider/src/android/provider/cts/contacts/ContactsContract_QuickContactsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/webkit/src/android/webkit/cts/WebViewTransportTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/MotionEventTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/inline/InlineAugmentedContentTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/NativeStillCaptureTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/ChangeScrollTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/security/src/android/security/cts/CertificateTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/EditorInfoTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/biometrics/src/android/server/biometrics/BiometricSimpleTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/animation/src/android/animation/cts/AnimatorSetTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/app.usage/src/android/app/usage/cts/FragmentTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/src/android/security/cts/Poc17_11.java', 2), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/LoginWithCustomHighlightActivityTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EphemeralTestApp/EphemeralApp1/src/com/android/cts/ephemeralapp1/WebViewTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/WindowMetricsActivityTests.java', 2), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityOverlayTest.java', 2), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher4old/src/android/content/pm/cts/shortcut/backup/publisher4/ShortcutManagerPreBackupTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/SlideBadEdgeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/inspector/cts/IntFlagMappingTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyboardShortcutInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/slice/src/android/slice/cts/SliceMetricsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/dropdown/PreFilledLoginActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/NativeDecoderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyCharacterMapTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/MenuInflaterTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/securitybulletin/test-apps/CVE-2021-0481/src/android/security/cts/CVE_2021_0481/DeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/commontests/DatasetFilteringTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/KeyboardShortcutGroupTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/GradientDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/ExtractedTextRequestTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/MenuItemTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/unit/DataRemovalRequestTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/SeekBarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/AnalogClockTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/media/src/android/mediav2/cts/EncodeDecodeAccuracyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaCodecTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/CanaryTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/sensor/src/android/hardware/cts/SensorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/FillResponseTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputContentInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/permission2/src/android/permission2/cts/RestrictedPermissionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/DeviceAndProfileOwner/src/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/MenuTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextClassifierPolicyTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/KeyboardTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/VrDisplayTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/graphics/src/android/graphics/drawable/cts/BitmapDrawableTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appsecurity/test-apps/EncryptionApp/src/com/android/cts/encryptionapp/EncryptionAppTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityButtonTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/NativeAttachShaderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/RegexValidatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/MotionEvent_PointerPropertiesTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/translation/src/android/translation/cts/unittests/TranslationValueTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/FramebufferTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/ChoreographerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaScannerTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/shortcuts/deviceside/backup/publisher2/src/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/LauncherActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/TimePickerDialogTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/servicebehavior/DisableAutofillTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextSelectionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ImageButtonTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ToolbarActionBarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/CompletionInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/animation/cts/LayoutAnimationController_AnimationParametersTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/renderscript/src/android/renderscript/cts/AllocationCreateAllocationsTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CompatChangeTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/ChronometerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/opengl/src/android/opengl/cts/EglConfigTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/Surface_OutOfResourcesExceptionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/colormode/src/android/colormode/cts/AttributeWideColorModeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/res/cts/TypedArrayTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/providerui/src/android/providerui/cts/MediaStoreUiTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/devicepolicy/app/PackageInstaller/src/com/android/cts/packageinstaller/ManualPackageInstallTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InputConnectionWrapperTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/mediapc/src/android/mediapc/cts/PerformanceClassTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/ExtractedTextTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceEnabledTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/animation/src/android/animation/cts/InterpolatorTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/translation/src/android/translation/cts/unittests/TranslationContextTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/TransformationMethodTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/ActivityManagerMemoryClassTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/UnsupportedErrorDialogTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/widget/src/android/widget/cts/RatingBarTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/RemoteControllerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/inputmethod/src/android/view/inputmethod/cts/InlineSuggestionsResponseTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/text/src/android/text/method/cts/ForwardDeleteTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/testharness/app/src/android/testharness/app/TestHarnessModeDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/DisplayRefreshRateTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/input/InputDeviceKeyLayoutMapTest.java', 1), ('/home/gpoor/cts-12-source/cts/hostsidetests/appcompat/hiddenapi/src/android/compat/hiddenapi/cts/HostsideStatsdAtomTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/colormode/src/android/colormode/cts/WideColorModeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibility/src/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/ActivityTaskAffinityTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/ZoomCaptureTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/hardware/src/android/hardware/cts/LowRamDeviceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/contentcaptureservice/src/android/contentcaptureservice/cts/unit/ContentCaptureConditionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/NativeImageReaderTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/transition/src/android/transition/cts/SlideDefaultEdgeTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/textclassifier/src/android/view/textclassifier/cts/TextLanguageTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/autofillservice/src/android/autofillservice/cts/unittests/AutofillValueTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/wm/cts/ContextGetDisplayTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/translation/src/android/translation/cts/unittests/TranslationCapabilityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/view/src/android/view/cts/SearchEventTest.java', 1), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/sensors/base/SensorCtsTestActivity.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/VideoEncoderTest.java', 1)]"	"[('(1,VIEW,/android/content/pm/cts/shortcut/backup/publisher4/ShortcutManagerPreBackupTest.java)', 1), ('(1,VIEW,/android/transition/cts/SlideBadEdgeTest.java)', 1), ('(2,VIEW,/android/view/inspector/cts/IntFlagMappingTest.java)', 1), ('(20,VIEW,/android/text/method/cts/DateTimeKeyListenerTest.java)', 1), ('(24,VIEW,/android/autofillservice/cts/dropdown/AuthenticationTest.java)', 1), ('(177,VIEW,/android/widget/cts/SimpleAdapterTest.java)', 1), ('(11,VIEW,/android/media/tv/cts/HardwareSessionTest.java)', 1), ('(180,VIEW,/android/server/wm/WindowInputTests.java)', 1), ('(21,VIEW,/android/text/method/cts/TextKeyListenerTest.java)', 1), ('(4,VIEW,/android/server/wm/lifecycle/ActivityLifecycleTests.java)', 1), ('(22,VIEW,/android/view/cts/SoundEffectConstantsTest.java)', 1), ('(88,VIEW,/android/hardware/camera2/cts/ReprocessCaptureTest.java)', 1), ('(4,VIEW,/android/view/cts/KeyboardShortcutInfoTest.java)', 1), ('(14,VIEW,/android/hardware/cts/Camera_SizeTest.java)', 1), ('(1,VIEW,/android/slice/cts/SliceMetricsTest.java)', 1), ('(1,VIEW,/android/autofillservice/cts/dropdown/PreFilledLoginActivityTest.java)', 1), ('(1,VIEW,/android/media/cts/NativeDecoderTest.java)', 1), ('(4,VIEW,/android/view/cts/KeyCharacterMapTest.java)', 1), ('(6,VIEW,/android/view/cts/MenuInflaterTest.java)', 1), ('(1,VIEW,/android/security/cts/CVE_2021_0481/DeviceTest.java)', 1), ('(1,VIEW,/android/autofillservice/cts/commontests/DatasetFilteringTest.java)', 1), ('(5,VIEW,/android/view/cts/KeyboardShortcutGroupTest.java)', 1), ('(1,VIEW,/android/graphics/drawable/cts/GradientDrawableTest.java)', 1), ('(4,VIEW,/android/text/method/cts/ReplacementTransformationMethodTest.java)', 1), ('(2,VIEW,/android/hardware/camera2/cts/ConcurrentCameraTest.java)', 1), ('(29,VIEW,/com/android/cts/isolatedsplitapp/SplitAppTest.java)', 1), ('(1,ACTION_VIEW,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(1,VIEW,/com/android/cts/splitapp/SplitAppTest.java)', 1), ('(3,VIEW,/android/view/inputmethod/cts/ExtractedTextRequestTest.java)', 1), ('(3,VIEW,/android/view/cts/MenuItemTest.java)', 1), ('(46,VIEW,/android/widget/cts/EditTextTest.java)', 1), ('(94,VIEW,/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java)', 1), ('(53,VIEW,/android/widget/cts/PopupMenuTest.java)', 1), ('(10,VIEW,/android/provider/cts/media/MediaStore_MetadataKeysTest.java)', 1), ('(3,VIEW,/android/contentcaptureservice/cts/unit/DataRemovalRequestTest.java)', 1), ('(12,VIEW,/android/widget/cts/SeekBarTest.java)', 1), ('(3,VIEW,/android/hdmicec/cts/playback/HdmiCecDeviceSelectForPlaybackTest.java)', 1), ('(475,VIEW,/android/widget/cts/PopupWindowTest.java)', 1), ('(93,VIEW,/android/transition/cts/ChangeImageTransformTest.java)', 1), ('(17,VIEW,/android/view/cts/TextureViewStressTest.java)', 1), ('(42,VIEW,/android/server/wm/WindowInsetsAnimationSynchronicityTests.java)', 1), ('(6,VIEW,/android/media/cts/PresentationSyncTest.java)', 1), ('(122,VIEW,/android/widget/cts/SimpleExpandableListAdapterTest.java)', 1), ('(27,VIEW,/android/text/method/cts/CharacterPickerDialogTest.java)', 1), ('(5,VIEW,/android/widget/cts/AnalogClockTest.java)', 1), ('(16,VIEW,/android/assist/cts/TextViewTest.java)', 1), ('(187,VIEW,/android/hardware/camera2/cts/PerformanceTest.java)', 1), ('(2,VIEW,/android/mediav2/cts/EncodeDecodeAccuracyTest.java)', 1), ('(1,SENDTO,/android/webkit/cts/WebSettingsTest.java)', 1), ('(167,VIEW,/android/webkit/cts/WebSettingsTest.java)', 1), ('(16,VIEW,/android/view/cts/ViewGroupChildDrawingOrderTest.java)', 1), ('(1,VIEW,/android/media/cts/MediaCodecTest.java)', 1), ('(3,VIEW,/android/widget/cts/CheckBoxTest.java)', 1), ('(1,VIEW,/android/contentcaptureservice/cts/CanaryTest.java)', 1), ('(1,VIEW,/android/hardware/cts/SensorTest.java)', 1), ('(20,VIEW,/android/transition/cts/SharedElementCallbackTest.java)', 1), ('(2,VIEW,/android/opengl/cts/ByteBufferTest.java)', 1), ('(36,VIEW,/android/server/wm/DisplayCutoutTests.java)', 1), ('(66,VIEW,/android/widget/cts/MediaControllerTest.java)', 1), ('(42,VIEW,/android/view/cts/VerifyInputEventTest.java)', 1), ('(6,VIEW,/android/autofillservice/cts/unittests/FillResponseTest.java)', 1), ('(2,VIEW,/android/view/inputmethod/cts/InputContentInfoTest.java)', 1), ('(1,VIEW,/android/media/cts/MediaActivityTest.java)', 1), ('(13,VIEW,/android/server/wm/BlurTests.java)', 1), ('(3,VIEW,/android/permission2/cts/RestrictedPermissionsTest.java)', 1), ('(56,VIEW,/android/transition/cts/ChangeBoundsTest.java)', 1), ('(419,VIEW,/android/widget/cts/ImageViewTest.java)', 1), ('(102,VIEW,/android/view/cts/SurfaceViewSyncTest.java)', 1), ('(8,VIEW,/android/devicepolicy/cts/CrossProfileAppsTest.java)', 1), ('(1,VIEW,/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java)', 1), ('(2,VIEW,/android/content/cts/ContextTest.java)', 1), ('(6,VIEW,/android/provider/cts/SettingsPanelTest.java)', 1), ('(8,VIEW,/android/autofillservice/cts/inline/InlineLoginActivityTest.java)', 1), ('(10,VIEW,/android/acceleration/cts/SoftwareAccelerationTest.java)', 1), ('(43,VIEW,/android/widget/cts/GalleryTest.java)', 1), ('(5,VIEW,/android/view/cts/MenuTest.java)', 1), ('(35,VIEW,/android/text/method/cts/QwertyKeyListenerTest.java)', 1), ('(8,VIEW,/android/widget/cts/ToastPresenterTest.java)', 1), ('(491,VIEW,/android/widget/cts/HorizontalScrollViewTest.java)', 1), ('(1,VIEW,/android/view/textclassifier/cts/TextClassifierPolicyTest.java)', 1), ('(1,VIEW,/android/view/inputmethod/cts/KeyboardTest.java)', 1), ('(1,VIEW,/android/server/wm/VrDisplayTests.java)', 1), ('(14,VIEW,/android/server/wm/MultiDisplaySystemDecorationTests.java)', 1), ('(526,VIEW,/android/hardware/cts/CameraTest.java)', 1), ('(1,android.intent.action.VIEW,/android/os/cts/PowerManagerTests.java)', 1), ('(4,VIEW,/android/os/cts/PowerManagerTests.java)', 1), ('(37,VIEW,/android/transition/cts/ChangeTransformTest.java)', 1), ('(1,VIEW,/android/graphics/drawable/cts/BitmapDrawableTest.java)', 1), ('(3,VIEW,/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java)', 1), ('(4,VIEW,/android/assist/cts/LargeViewHierarchyTest.java)', 1), ('(2,VIEW,/android/widget/cts/FilterTest.java)', 1), ('(1,VIEW,/com/android/cts/encryptionapp/EncryptionAppTest.java)', 1), ('(9,VIEW,/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java)', 1), ('(93,VIEW,/android/view/inputmethod/cts/FocusHandlingTest.java)', 1), ('(9,ACTION_VIEW,/com/android/cts/ephemeralapp1/ClientTest.java)', 1), ('(15,VIEW,/com/android/cts/ephemeralapp1/ClientTest.java)', 1), ('(1,VIEW,/android/accessibilityservice/cts/AccessibilityButtonTest.java)', 1), ('(1,ACTION_VIEW,/com/android/cts/managedprofile/LauncherAppsTest.java)', 1), ('(1,VIEW,/com/android/cts/managedprofile/LauncherAppsTest.java)', 1), ('(64,VIEW,/android/graphics/drawable/cts/AnimatedVectorDrawableParameterizedTest.java)', 1), ('(369,VIEW,/android/widget/cts/HeaderViewListAdapterTest.java)', 1), ('(6,VIEW,/android/accessibilityservice/cts/AccessibilityServiceInfoTest.java)', 1), ('(6,VIEW,/android/opengl/cts/NativeAttachShaderTest.java)', 1), ('(1,VIEW,/android/autofillservice/cts/unittests/RegexValidatorTest.java)', 1), ('(104,VIEW,/android/autofillservice/cts/dropdown/WebViewActivityTest.java)', 1), ('(265,VIEW,/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java)', 1), ('(5,SENDTO,/android/app/cts/DialogTest.java)', 1), ('(85,VIEW,/android/app/cts/DialogTest.java)', 1), ('(5,VIEW,/android/appsecurity/cts/EphemeralTest.java)', 1), ('(3,VIEW,/android/view/cts/MotionEvent_PointerPropertiesTest.java)', 1), ('(19,VIEW,/android/app/cts/AlertDialog_BuilderCursorTest.java)', 1), ('(98,VIEW,/android/widget/cts/CursorTreeAdapterTest.java)', 1), ('(3,VIEW,/android/translation/cts/unittests/TranslationValueTest.java)', 1), ('(24,VIEW,/android/view/cts/sdk28/ViewGroupTest.java)', 1), ('(1,VIEW,/android/opengl/cts/FramebufferTest.java)', 1), ('(1,ACTION_VIEW,/android/server/wm/MultiDisplaySecurityTests.java)', 1), ('(17,VIEW,/android/server/wm/MultiDisplaySecurityTests.java)', 1), ('(6,VIEW,/android/widget/cts/DigitalClockTest.java)', 1), ('(2,VIEW,/android/view/cts/ChoreographerTest.java)', 1), ('(22,VIEW,/android/preference/cts/PreferenceRecycleTest.java)', 1), ('(4,VIEW,/android/media/cts/MediaScannerTest.java)', 1), ('(1,VIEW,/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java)', 1), ('(50,VIEW,/android/autofillservice/cts/saveui/CustomDescriptionTest.java)', 1), ('(1,VIEW,/android/app/cts/LauncherActivityTest.java)', 1), ('(252,VIEW,/android/translation/cts/UiTranslationManagerTest.java)', 1), ('(36,VIEW,/android/server/wm/WindowInsetsAnimationTests.java)', 1), ('(1,VIEW,/android/app/cts/TimePickerDialogTest.java)', 1), ('(1,VIEW,/android/autofillservice/cts/servicebehavior/DisableAutofillTest.java)', 1), ('(54,VIEW,/android/widget/cts/FrameLayoutTest.java)', 1), ('(4,VIEW,/android/view/textclassifier/cts/TextSelectionTest.java)', 1), ('(16,VIEW,/android/autofillservice/cts/inline/InlineAuthenticationTest.java)', 1), ('(36,VIEW,/android/autofillservice/cts/activities/LoginActivity.java)', 1), ('(1,VIEW,/android/widget/cts/ImageButtonTest.java)', 1), ('(2,VIEW,/android/app/cts/ToolbarActionBarTest.java)', 1), ('(60,VIEW,/android/widget/cts/ArrayAdapterTest.java)', 1), ('(2,VIEW,/android/view/inputmethod/cts/CompletionInfoTest.java)', 1), ('(86,VIEW,/android/fragment/cts/PostponedTransitionTest.java)', 1), ('(8,VIEW,/android/autofillservice/cts/unittests/DatasetTest.java)', 1), ('(29,VIEW,/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java)', 1), ('(9,VIEW,/android/view/accessibility/cts/AccessibilityManagerTest.java)', 1), ('(1,ACTION_VIEW,/android/provider/cts/contacts/ContactsContract_ContactsTest.java)', 1), ('(1,VIEW,/android/provider/cts/contacts/ContactsContract_ContactsTest.java)', 1), ('(13,VIEW,/android/text/cts/MyanmarTest.java)', 1), ('(2,VIEW,/android/view/animation/cts/LayoutAnimationController_AnimationParametersTest.java)', 1), ('(1,VIEW,/android/renderscript/cts/AllocationCreateAllocationsTest.java)', 1), ('(38,VIEW,/android/view/cts/ContentPaneFocusTest.java)', 1), ('(9,VIEW,/android/autofillservice/cts/commontests/AbstractLoginNotImportantForAutofillTestCase.java)', 1), ('(3,ACTION_VIEW,/com/android/cts/normalapp/ClientTest.java)', 1), ('(13,VIEW,/com/android/cts/normalapp/ClientTest.java)', 1), ('(1,VIEW,/android/server/wm/CompatChangeTests.java)', 1), ('(47,VIEW,/android/hardware/camera2/cts/OfflineSessionTest.java)', 1), ('(1,VIEW,/android/widget/cts/ChronometerTest.java)', 1), ('(92,VIEW,/android/view/cts/ViewPaddingTest.java)', 1), ('(1,VIEW,/android/opengl/cts/EglConfigTest.java)', 1), ('(2,VIEW,/android/view/cts/Surface_OutOfResourcesExceptionTest.java)', 1), ('(16,VIEW,/android/server/wm/PrivacyIndicatorBoundsTests.java)', 1), ('(72,VIEW,/android/translation/cts/unittests/TextViewTranslationTest.java)', 1), ('(1,VIEW,/android/colormode/cts/AttributeWideColorModeTest.java)', 1), ('(63,VIEW,/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java)', 1), ('(1,VIEW,/android/content/res/cts/TypedArrayTest.java)', 1), ('(3,VIEW,/android/providerui/cts/MediaStoreUiTest.java)', 1), ('(3093,VIEW,/android/view/cts/ViewTest.java)', 1), ('(51,VIEW,/android/fragment/cts/FragmentAnimatorTest.java)', 1), ('(13,VIEW,/android/translation/cts/TranslationManagerTest.java)', 1), ('(1,VIEW,/com/android/cts/packageinstaller/ManualPackageInstallTest.java)', 1), ('(9,VIEW,/android/view/inputmethod/cts/InputConnectionWrapperTest.java)', 1), ('(66,VIEW,/android/autofillservice/cts/DuplicateIdActivityTest.java)', 1), ('(52,VIEW,/android/view/cts/ViewAnimationMatrixTest.java)', 1), ('(1,VIEW,/android/mediapc/cts/PerformanceClassTest.java)', 1), ('(58,VIEW,/android/transition/cts/VisibilityTest.java)', 1), ('(18,VIEW,/android/view/cts/TouchDelegateTest.java)', 1), ('(54,VIEW,/android/text/util/cts/LinkifyTest.java)', 1), ('(22,VIEW,/android/view/cts/ActionModeCallback2Test.java)', 1), ('(29,VIEW,/android/view/cts/ViewSourceLayoutTest.java)', 1), ('(5,ACTION_VIEW,/android/os/cts/StrictModeTest.java)', 1), ('(25,VIEW,/android/os/cts/StrictModeTest.java)', 1), ('(2,VIEW,/android/view/inputmethod/cts/ExtractedTextTest.java)', 1), ('(5,VIEW,/android/app/cts/NotificationStatsTest.java)', 1), ('(3,VIEW,/android/provider/cts/contacts/ContactsContract_QuickContactsTest.java)', 1), ('(50,VIEW,/android/widget/cts/GridLayoutTest.java)', 1), ('(3,VIEW,/android/view/cts/input/InputDeviceEnabledTest.java)', 1), ('(22,VIEW,/android/webkit/cts/WebViewTransportTest.java)', 1), ('(2,VIEW,/android/animation/cts/InterpolatorTest.java)', 1), ('(204,VIEW,/android/hardware/camera2/cts/CaptureRequestTest.java)', 1), ('(2,VIEW,/android/translation/cts/unittests/TranslationContextTest.java)', 1), ('(3,VIEW,/android/text/method/cts/TransformationMethodTest.java)', 1), ('(43,VIEW,/android/security/cts/MotionEventTest.java)', 1), ('(17,VIEW,/android/text/method/cts/MetaKeyKeyListenerTest.java)', 1), ('(2,VIEW,/android/app/cts/ActivityManagerMemoryClassTest.java)', 1), ('(1,VIEW,/android/server/wm/UnsupportedErrorDialogTests.java)', 1), ('(11,VIEW,/android/autofillservice/cts/inline/InlineAugmentedContentTest.java)', 1), ('(1,VIEW,/android/widget/cts/RatingBarTest.java)', 1), ('(1,VIEW,/android/media/cts/RemoteControllerTest.java)', 1), ('(3,VIEW,/android/view/inputmethod/cts/InlineSuggestionsResponseTest.java)', 1), ('(12,VIEW,/android/text/method/cts/ForwardDeleteTest.java)', 1), ('(1,VIEW,/android/testharness/app/TestHarnessModeDeviceTest.java)', 1), ('(4,VIEW,/android/view/cts/DisplayRefreshRateTest.java)', 1), ('(7,VIEW,/android/hardware/camera2/cts/NativeStillCaptureTest.java)', 1), ('(20,VIEW,/android/transition/cts/ChangeScrollTest.java)', 1), ('(6,VIEW,/android/view/cts/input/InputDeviceKeyLayoutMapTest.java)', 1), ('(2,VIEW,/android/security/cts/CertificateTest.java)', 1), ('(338,VIEW,/android/fragment/cts/FragmentViewTests.java)', 1), ('(25,VIEW,/android/widget/cts/ResourceCursorTreeAdapterTest.java)', 1), ('(1,VIEW,/android/compat/hiddenapi/cts/HostsideStatsdAtomTests.java)', 1), ('(71,VIEW,/android/view/cts/SystemGestureExclusionRectsTest.java)', 1), ('(5,VIEW,/android/view/inputmethod/cts/EditorInfoTest.java)', 1), ('(1,VIEW,/android/colormode/cts/WideColorModeTest.java)', 1), ('(1,VIEW,/android/server/wm/lifecycle/ActivityLifecycleTopResumedStateTests.java)', 1), ('(3,VIEW,/android/view/accessibility/cts/AccessibilityNodeInfo_RangeInfoTest.java)', 1), ('(51,VIEW,/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java)', 1), ('(53,VIEW,/android/widget/cts/ToolbarTest.java)', 1), ('(21,VIEW,/android/transition/cts/PropagationTest.java)', 1), ('(13,VIEW,/android/server/biometrics/BiometricSimpleTests.java)', 1), ('(11,VIEW,/android/animation/cts/AnimatorSetTest.java)', 1), ('(11,VIEW,/android/app/usage/cts/FragmentTest.java)', 1), ('(1,VIEW,/android/server/wm/ActivityTaskAffinityTests.java)', 1), ('(1,VIEW,/android/hardware/camera2/cts/ZoomCaptureTest.java)', 1), ('(1,VIEW,/android/hardware/cts/LowRamDeviceTest.java)', 1), ('(20,VIEW,/android/server/wm/SplashscreenTests.java)', 1), ('(153,VIEW,/android/hardware/camera2/cts/RecordingTest.java)', 1), ('(8,VIEW,/android/autofillservice/cts/commontests/LoginActivityCommonTestCase.java)', 1), ('(83,VIEW,/android/widget/cts/TextViewFontWeightTest.java)', 1), ('(1,android.intent.action.VIEW,/android/security/cts/Poc17_11.java)', 1), ('(1,VIEW,/android/security/cts/Poc17_11.java)', 1), ('(2,VIEW,/android/contentcaptureservice/cts/unit/ContentCaptureConditionTest.java)', 1), ('(3,VIEW,/android/autofillservice/cts/LoginWithCustomHighlightActivityTest.java)', 1), ('(16,VIEW,/android/autofillservice/cts/dropdown/VirtualContainerActivityCompatModeTest.java)', 1), ('(1,VIEW,/android/media/cts/NativeImageReaderTest.java)', 1), ('(1,VIEW,/android/transition/cts/SlideDefaultEdgeTest.java)', 1), ('(2,VIEW,/android/view/textclassifier/cts/TextLanguageTest.java)', 1), ('(1,VIEW,/android/autofillservice/cts/unittests/AutofillValueTest.java)', 1), ('(2,VIEW,/android/content/wm/cts/ContextGetDisplayTest.java)', 1), ('(76,VIEW,/android/view/animation/cts/LayoutAnimationControllerTest.java)', 1), ('(20,VIEW,/com/android/cts/ephemeralapp1/WebViewTest.java)', 1), ('(79,VIEW,/android/accessibilityservice/cts/AccessibilityGestureDispatchTest.java)', 1), ('(6,VIEW,/android/server/wm/WindowMetricsActivityTests.java)', 1), ('(1,ACTION_VIEW,/android/widget/cts/RemoteViewsTest.java)', 1), ('(1457,VIEW,/android/widget/cts/RemoteViewsTest.java)', 1), ('(3,VIEW,/android/translation/cts/unittests/TranslationCapabilityTest.java)', 1), ('(4,VIEW,/android/view/cts/SearchEventTest.java)', 1), ('(1,VIEW,/com/android/cts/verifier/sensors/base/SensorCtsTestActivity.java)', 1), ('(143,VIEW,/android/widget/cts/CalendarViewTest.java)', 1), ('(4,VIEW,/android/accessibilityservice/cts/AccessibilityOverlayTest.java)', 1), ('(1,VIEW,/android/media/cts/VideoEncoderTest.java)', 1), ('(117,VIEW,/android/contentcaptureservice/cts/unit/ViewNodeTest.java)', 1), ('(13,VIEW,/android/view/inspector/cts/StaticInspectionCompanionProviderTest.java)', 1), ('(81,VIEW,/android/text/method/cts/DigitsKeyListenerTest.java)', 1)]"	"[('([1:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[VIEW]:[1]:method_text:[.assertNoDatasets();        // Check the results.        mActivity.assertAutoFilled();    }   ])', 5), ('([1:/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java]:[VIEW]:[1]:method_text:[ui.click();        mActivity.assertAutoFilled();        mAugmentedUiBot.assertUiGone();    }   ])', 4), ('([2:/com/android/cts/isolatedsplitapp/SplitAppTest.java]:[VIEW]:[2]:method_text:[ FEATURE_C_STRING,                TestTheme.THEME_FEATURE_B, TestTheme.THEME_FEATURE_C);    }   ])', 3), ('([10:/android/widget/cts/ImageViewTest.java]:[VIEW]:[10]:method_text:[assertEquals(testimageBitmap.getBitmap(), imageViewBitmap.getBitmap());    }    @UiThreadTest   ])', 3), ('([2:/android/view/cts/SurfaceViewSyncTest.java]:[VIEW]:[2]:method_text:[        return blackishPixelCount == 0;                    }                }), mName);    }   ])', 3), ('([35:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[VIEW]:[35]:method_text:[;        assertEquals(0, Selection.getSelectionEnd(textView.getText()));    }    @MediumTest   ])', 3), ('([1:/android/autofillservice/cts/commontests/AbstractLoginNotImportantForAutofillTestCase.java]:[VIEW]:[1]:method_text:[ui.click();        mActivity.assertAutoFilled();        mAugmentedUiBot.assertUiGone();    }   ])', 3), ('([5:/android/translation/cts/unittests/TextViewTranslationTest.java]:[VIEW]:[5]:method_text:[questConsumer.getRequest());        assertThat(mRequestConsumer.getRequest()).isNull();    }   ])', 3), ('([14:/android/view/cts/ViewTest.java]:[VIEW]:[14]:method_text:[should throw NullPointerException"");        } catch (NullPointerException e) {        }    }   ])', 3), ('([2:/android/os/cts/StrictModeTest.java]:[VIEW]:[2]:method_text:[r.class)                            .getDesiredMinimumWidth());        }    }    @Presubmit   ])', 3), ('([1:/android/autofillservice/cts/augmented/AugmentedLoginActivityTest.java]:[VIEW]:[1]:method_text:[ke sure Augmented Autofill UI is not shown.        mAugmentedUiBot.assertUiNeverShown();    }   ])', 3), ('([1:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[VIEW]:[1]:method_text:[ts();        // Check the results.        mActivity.assertAutoFilled();    }    @Presubmit   ])', 2), ('([14:/android/server/wm/WindowInputTests.java]:[VIEW]:[14]:method_text:[1, mClickCount);        } finally {            mActivity.stopService(intent);        }    }   ])', 2), ('([6:/android/server/wm/WindowInputTests.java]:[VIEW]:[6]:method_text:[s.iterator().next();        assertEquals(MotionEvent.ACTION_OUTSIDE, event.getAction());    }   ])', 2), ('([1:/android/text/method/cts/ReplacementTransformationMethodTest.java]:[VIEW]:[1]:method_text:[   mEditText.setText(""010101"");        // TODO cannot get transformed text from the view    }   ])', 2), ('([2:/com/android/cts/isolatedsplitapp/SplitAppTest.java]:[VIEW]:[2]:method_text:[        assertResourcesDoNotExist(activity, FEATURE_C_STRING, TestTheme.THEME_FEATURE_C);    }   ])', 2), ('([2:/com/android/cts/isolatedsplitapp/SplitAppTest.java]:[VIEW]:[2]:method_text:[ FEATURE_B_STRING,                TestTheme.THEME_FEATURE_A, TestTheme.THEME_FEATURE_B);    }   ])', 2), ('([2:/android/widget/cts/EditTextTest.java]:[VIEW]:[2]:method_text:[.getText().length() <= FRAMEWORK_MAX_LENGTH_FOR_SINGLE_LINE_EDIT_TEXT);    }    @UiThreadTest   ])', 2), ('([15:/android/widget/cts/SimpleExpandableListAdapterTest.java]:[VIEW]:[15]:method_text:[tanceof TwoLineListItem);        assertNotNull(result.findViewById(android.R.id.text1));    }   ])', 2), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ ""text/html"", null);        assertEquals(DATA_URL_IMAGE_HEIGHT, mOnUiThread.getTitle());    }   ])', 2), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[that javascript cross-domain request permissions matches file domain settings    // for iframes   ])', 2), ('([4:/android/widget/cts/ImageViewTest.java]:[VIEW]:[4]:method_text:[orFilter());        assertNotNull(mImageViewRegular.getColorFilter());    }    @UiThreadTest   ])', 2), ('([15:/android/widget/cts/ImageViewTest.java]:[VIEW]:[15]:method_text:[should be red"", imageViewTinted,                0xFFFF0000, 1, false);    }    @UiThreadTest   ])', 2), ('([2:/android/provider/cts/SettingsPanelTest.java]:[VIEW]:[2]:method_text:[Object(By.res(mSettingsPackage, RESOURCE_TITLE));        assertThat(titleView).isNull();    }   ])', 2), ('([5:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[5]:method_text:[tMeasuredHeight());        assertEquals(30, child.getMeasuredWidth());    }    @UiThreadTest   ])', 2), ('([5:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[5]:method_text:[            eq(MeasureSpec.makeMeasureSpec(130, MeasureSpec.EXACTLY)));    }    @UiThreadTest   ])', 2), ('([11:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[11]:method_text:[gular.layout(0, 0, 100, 150);        assertEquals(3, child.getLeft());    }    @UiThreadTest   ])', 2), ('([8:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[8]:method_text:[mScrollViewCustom.getScrollX());        assertEquals(0, mScrollViewCustom.getScrollY());    }   ])', 2), ('([3:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[3]:method_text:[ewStretch,                edgeEffect,                300,                0        ));    }   ])', 2), ('([4:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[4]:method_text:[           edgeEffect,                -300,                0        ));    }    @LargeTest   ])', 2), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[ACTION_VIEW]:[1]:method_text:[       fail(""activity started"");        } catch (ActivityNotFoundException expected) { }    }   ])', 2), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[VIEW]:[1]:method_text:[       fail(""activity started"");        } catch (ActivityNotFoundException expected) { }    }   ])', 2), ('([19:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[VIEW]:[19]:method_text:[cessibilityNodeInfo.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY, arguments));    }    @MediumTest   ])', 2), ('([4:/android/app/cts/AlertDialog_BuilderCursorTest.java]:[VIEW]:[4]:method_text:[tener, times(1)).onClick(mDialog, 0);        verifyNoMoreInteractions(mOnClickListener);    }   ])', 2), ('([1:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[VIEW]:[1]:method_text:[                  .build();        }, () -> assertSaveUiWithCustomDescriptionIsShown());    }   ])', 2), ('([1:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[VIEW]:[1]:method_text:[               .build();        }, () -> assertSaveUiWithoutCustomDescriptionIsShown());    }   ])', 2), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[VIEW]:[1]:method_text:[ activity then it finishes:     * the Save UI should have been restored.     */    @Presubmit   ])', 2), ('([1:/android/autofillservice/cts/saveui/SimpleSaveActivityTest.java]:[VIEW]:[1]:method_text:[ stops but does not finish:     * the Save UI should have been restored.     */    @Presubmit   ])', 2), ('([1:/android/autofillservice/cts/dropdown/VirtualContainerActivityTest.java]:[VIEW]:[1]:method_text:[   callback.assertUiUnavailableEvent(mActivity.mCustomView, mActivity.mUsername.text.id);    }   ])', 2), ('([22:/android/view/cts/ViewTest.java]:[VIEW]:[22]:method_text:[);        assertEquals(1, viewList.size());        assertEquals(view, viewList.get(0));    }   ])', 2), ('([14:/android/view/cts/ViewTest.java]:[VIEW]:[14]:method_text:[ocation[0]);        assertEquals(layoutLocation[1] + mockView.getHeight(), location[1]);    }   ])', 2), ('([1:/android/os/cts/StrictModeTest.java]:[VIEW]:[1]:method_text:[erManager.class)                    .getDesiredMinimumWidth());        }    }    @Presubmit   ])', 2), ('([19:/android/widget/cts/RemoteViewsTest.java]:[VIEW]:[19]:method_text:[emoteView_text, R.attr.themeColor);        assertThrowsOnReapply(ActionException.class);    }   ])', 2), ('([16:/android/widget/cts/RemoteViewsTest.java]:[VIEW]:[16]:method_text:[utlineProvider) root.getOutlineProvider()).getRadius(),                0.1 /* delta */);    }   ])', 2), ('([1:/android/content/pm/cts/shortcut/backup/publisher4/ShortcutManagerPreBackupTest.java]:[VIEW]:[1]:method_text:[nifestShortcuts())                .haveIds(""ms1"", ""ms2"")                .areAllNotPinned();   }}])', 1), ('([1:/android/transition/cts/SlideBadEdgeTest.java]:[VIEW]:[1]:method_text:[,            { Gravity.VERTICAL_GRAVITY_MASK, ""VERTICAL_GRAVITY_MASK"" },    };    @SmallTest   ])', 1), ('([2:/android/view/inspector/cts/IntFlagMappingTest.java]:[VIEW]:[2]:method_text:[agMapping}. */@SmallTest@RunWith(AndroidJUnit4.class)public final class IntFlagMappingTest {   ])', 1), ('([2:/android/text/method/cts/DateTimeKeyListenerTest.java]:[VIEW]:[2]:method_text:[@RunWith(AndroidJUnit4.class)public class DateTimeKeyListenerTest extends KeyListenerTestCase {   ])', 1), (""([2:/android/text/method/cts/DateTimeKeyListenerTest.java]:[VIEW]:[2]:method_text:[d.     * 7. Remove DateTimeKeyListener and Press '1' key, this key will not be accepted     */   ])"", 1), ('([16:/android/text/method/cts/DateTimeKeyListenerTest.java]:[VIEW]:[16]:method_text:[protected char[] getAcceptedChars() {            return super.getAcceptedChars();        }    }}])', 1), ('([6:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[VIEW]:[6]:method_text:[attern;public class AuthenticationTest extends AbstractLoginActivityTestCase {    @Presubmit   ])', 1), ('([2:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[VIEW]:[2]:method_text:[.assertNoDatasets();        // Check the results.        mActivity.assertAutoFilled();    }   ])', 1), ('([1:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[VIEW]:[1]:method_text:[String(""clientStateKey1"");        assertThat(extraValue).isEqualTo(""clientStateValue1"");    }   ])', 1), ('([2:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[VIEW]:[2]:method_text:[alue = data.getString(""numbers"");        assertThat(extraValue).isEqualTo(""4815162342"");    }   ])', 1), ('([1:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[VIEW]:[1]:method_text:[alue = data.getString(""numbers"");        assertThat(extraValue).isEqualTo(""4815162342"");    }   ])', 1), ('([1:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[VIEW]:[1]:method_text:[ore finishing the Auth UI.        latch.countDown();        mUiBot.assertNoDatasets();    }   ])', 1), ('([3:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[VIEW]:[3]:method_text:[ture, ID_PASSWORD);        assertTextAndValue(passwordNode, ""malkovich"");    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/dropdown/AuthenticationTest.java]:[VIEW]:[1]:method_text:[raValue = data.getString(""numbers"");        assertThat(extraValue).isEqualTo(""4815162342"");    }}])', 1), ('([7:/android/widget/cts/SimpleAdapterTest.java]:[VIEW]:[7]:method_text:[ROW_COUNT),                android.R.layout.simple_list_item_1, COLUMNS_FROM, VIEWS_TO);    }   ])', 1), ('([1:/android/widget/cts/SimpleAdapterTest.java]:[VIEW]:[1]:method_text:[ROW_COUNT),                android.R.layout.simple_list_item_1, COLUMNS_FROM, VIEWS_TO);    }   ])', 1), ('([2:/android/widget/cts/SimpleAdapterTest.java]:[VIEW]:[2]:method_text:[ist_item_1, COLUMNS_FROM, VIEWS_TO);        assertEquals(10, mSimpleAdapter.getCount());    }   ])', 1), ('([35:/android/widget/cts/SimpleAdapterTest.java]:[VIEW]:[35]:method_text:[;        assertEquals(""01"", ((TextView) result).getText().toString());    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/SimpleAdapterTest.java]:[VIEW]:[4]:method_text:[ null, mAdapterHost);        mSimpleAdapter.getView(-1, result, null);    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/SimpleAdapterTest.java]:[VIEW]:[4]:method_text:[ null, mAdapterHost);        mSimpleAdapter.getView(20, result, null);    }    @UiThreadTest   ])', 1), ('([16:/android/widget/cts/SimpleAdapterTest.java]:[VIEW]:[16]:method_text:[        assertEquals(""191"", ((TextView) result).getText().toString());    }    @UiThreadTest   ])', 1), ('([35:/android/widget/cts/SimpleAdapterTest.java]:[VIEW]:[35]:method_text:[        assertEquals(""191"", ((TextView) result).getText().toString());    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/SimpleAdapterTest.java]:[VIEW]:[4]:method_text:[AdapterHost);        mSimpleAdapter.getDropDownView(-1, result, null);    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/SimpleAdapterTest.java]:[VIEW]:[4]:method_text:[ownView(0, null, mAdapterHost);        mSimpleAdapter.getDropDownView(20, result, null);    }   ])', 1), ('([3:/android/widget/cts/SimpleAdapterTest.java]:[VIEW]:[3]:method_text:[opDownViewTheme(theme);        assertSame(theme, mSimpleAdapter.getDropDownViewTheme());    }   ])', 1), ('([14:/android/widget/cts/SimpleAdapterTest.java]:[VIEW]:[14]:method_text:[  mSimpleAdapter.setViewBinder(null);        assertNull(mSimpleAdapter.getViewBinder());    }   ])', 1), ('([38:/android/widget/cts/SimpleAdapterTest.java]:[VIEW]:[38]:method_text:[mpleCursorAdapterTest.destroyTestImage(mContext,""testimage"");        }    }    @UiThreadTest   ])', 1), ('([10:/android/widget/cts/SimpleAdapterTest.java]:[VIEW]:[10]:method_text:[wText(view, null);        assertEquals("""", view.getText().toString());    }    @UiThreadTest   ])', 1), ('([9:/android/media/tv/cts/HardwareSessionTest.java]:[VIEW]:[9]:method_text:[PassthroughInputList.add(info);            }        }        assertNotNull(mStubInfo);    }   ])', 1), ('([2:/android/media/tv/cts/HardwareSessionTest.java]:[VIEW]:[2]:method_text:[able(int reason) {                mHardwareVideoUnavailableCount++;            }        }    }}])', 1), ('([15:/android/server/wm/WindowInputTests.java]:[VIEW]:[15]:method_text:[InputManager.class);        mInstrumentation.waitForIdleSync();        mClickCount = 0;    }   ])', 1), ('([21:/android/server/wm/WindowInputTests.java]:[VIEW]:[21]:method_text:[tInt(bounds.bottom - bounds.top) + bounds.top;        outLocation.set(randomX, randomY);    }   ])', 1), ('([11:/android/server/wm/WindowInputTests.java]:[VIEW]:[11]:method_text:[ll get    // delivered to the bottom window, and the FLAG_WINDOW_IS_OBSCURED should not be set.   ])', 1), ('([10:/android/server/wm/WindowInputTests.java]:[VIEW]:[10]:method_text:[            & MotionEvent.FLAG_WINDOW_IS_OBSCURED);        assertEquals(1, mClickCount);    }   ])', 1), ('([14:/android/server/wm/WindowInputTests.java]:[VIEW]:[14]:method_text:[0, mClickCount);        } finally {            mActivity.stopService(intent);        }    }   ])', 1), ('([13:/android/server/wm/WindowInputTests.java]:[VIEW]:[13]:method_text:[1, mClickCount);        } finally {            mActivity.stopService(intent);        }    }   ])', 1), ('([9:/android/server/wm/WindowInputTests.java]:[VIEW]:[9]:method_text:[1, mClickCount);        } finally {            mActivity.stopService(intent);        }    }   ])', 1), ('([12:/android/server/wm/WindowInputTests.java]:[VIEW]:[12]:method_text:[    params.height = size;        params.gravity = Gravity.CENTER;        return params;    }   ])', 1), ('([7:/android/server/wm/WindowInputTests.java]:[VIEW]:[7]:method_text:[(mInstrumentation, mActivityRule, mView);        }        assertEquals(1, mClickCount);    }   ])', 1), ('([14:/android/server/wm/WindowInputTests.java]:[VIEW]:[14]:method_text:[ViewCenter(mInstrumentation, mActivityRule, mView);        assertEquals(1, mClickCount);    }   ])', 1), ('([14:/android/server/wm/WindowInputTests.java]:[VIEW]:[14]:method_text:[owSurfaceShown(windowName);            }, windowName + ""\'s surface is appeared"");        }    }}])', 1), ('([3:/android/text/method/cts/TextKeyListenerTest.java]:[VIEW]:[3]:method_text:[n 2000ms in case the system is sluggish.     */    private static final long TIME_OUT = 3000;   ])', 1), ('([2:/android/text/method/cts/TextKeyListenerTest.java]:[VIEW]:[2]:method_text:[)).onSpanAdded(any(), any(), anyInt(), anyInt());        mockTextKeyListener.release();    }   ])', 1), ('([2:/android/text/method/cts/TextKeyListenerTest.java]:[VIEW]:[2]:method_text:[);        TextKeyListener.clear(content);        assertEquals("""", content.toString());    }   ])', 1), ('([7:/android/text/method/cts/TextKeyListenerTest.java]:[VIEW]:[7]:method_text:[ else {            assertEquals("""", text);        }        textKeyListener.release();    }   ])', 1), ('([7:/android/text/method/cts/TextKeyListenerTest.java]:[VIEW]:[7]:method_text:[(text, mTextView.getText().toString()); issue 1731439        textKeyListener.release();    }   ])', 1), ('([4:/android/server/wm/lifecycle/ActivityLifecycleTests.java]:[VIEW]:[4]:method_text:[annotation.Group3public class ActivityLifecycleTests extends ActivityLifecycleClientTestBase {   ])', 1), ('([4:/android/view/cts/SoundEffectConstantsTest.java]:[VIEW]:[4]:method_text:[unner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class SoundEffectConstantsTest {   ])', 1), ('([6:/android/view/cts/SoundEffectConstantsTest.java]:[VIEW]:[6]:method_text:[ SoundEffectConstants                .getContantForFocusDirection(View.FOCUS_BACKWARD));    }   ])', 1), ('([12:/android/view/cts/SoundEffectConstantsTest.java]:[VIEW]:[12]:method_text:[ntForFocusDirection(View.FOCUS_BACKWARD,                        false /* repeating */));    }   ])', 1), ('([4:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[VIEW]:[4]:method_text:[KEYS,    }    /**     * Test YUV_420_888 -> YUV_420_888 with maximal supported sizes     */   ])', 1), ('([3:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[VIEW]:[3]:method_text:[   }    }    /**     * Test all supported size and format combinations with preview.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[VIEW]:[2]:method_text:[();            }        }    }    /**     * Test recreating reprocessing sessions.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[VIEW]:[1]:method_text:[       }    }    /**     * Verify issuing cross session capture requests is invalid.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[VIEW]:[2]:method_text:[ter.queueInputBuffer may become     * stuck due to stale buffers from previous session.     */   ])', 1), ('([2:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[VIEW]:[2]:method_text:[      }    }    /**     * Test burst reprocessing captures with and without preview.     */   ])', 1), ('([5:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[VIEW]:[5]:method_text:[ Test burst captures mixed with regular and reprocess captures with and without preview.     */   ])', 1), ('([4:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[VIEW]:[4]:method_text:[capture requests of the largest input and output sizes for each     * supported format.     */   ])', 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[VIEW]:[1]:method_text:[t reprocess timestamps for the largest input and output sizes for each supported format.     */   ])', 1), (""([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[VIEW]:[1]:method_text:[put's exif data for the largest input and output sizes for each     * supported format.     */   ])"", 1), ('([1:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[VIEW]:[1]:method_text:[         }            } finally {                closeDevice();            }        }    }   ])', 1), ('([62:/android/hardware/camera2/cts/ReprocessCaptureTest.java]:[VIEW]:[62]:method_text:[   public TotalCaptureResult getTotalCaptureResult() {            return mResult;        }    }}])', 1), ('([4:/android/view/cts/KeyboardShortcutInfoTest.java]:[VIEW]:[4]:method_text:[_T;    private static final int TEST_MODIFIERS = KeyEvent.META_ALT_ON | KeyEvent.META_CTRL_ON;   ])', 1), ('([1:/android/hardware/cts/Camera_SizeTest.java]:[VIEW]:[1]:method_text:[see {@link android.hardware.camera2.CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL}     */   ])', 1), ('([13:/android/hardware/cts/Camera_SizeTest.java]:[VIEW]:[13]:method_text:[st = new Camera_SizeTest();        test.setName(testName);        testSuite.addTest(test);    }}])', 1), ('([1:/android/slice/cts/SliceMetricsTest.java]:[VIEW]:[1]:method_text:[r.addTaggedData(MetricsEvent.FIELD_SLICE_PATH, BASE_URI.getPath());        return logMaker;    }}])', 1), ('([1:/android/autofillservice/cts/dropdown/PreFilledLoginActivityTest.java]:[VIEW]:[1]:method_text:[  assertTextAndValue(findNodeByResourceId(saveRequest.structure, ID_PASSWORD), ""malkovich"");    }}])', 1), ('([1:/android/media/cts/NativeDecoderTest.java]:[VIEW]:[1]:method_text:[     if (testsRun == 0) {            MediaUtils.skipTest(""no decoders found"");        }    }   ])', 1), ('([4:/android/view/cts/KeyCharacterMapTest.java]:[VIEW]:[4]:method_text:[up() {        mKeyCharacterMap = KeyCharacterMap.load(KeyCharacterMap.VIRTUAL_KEYBOARD);    }   ])', 1), ('([6:/android/view/cts/MenuInflaterTest.java]:[VIEW]:[6]:method_text:[nuInflater();        mMenu = new PopupMenu(mActivity, null).getMenu();    }    @UiThreadTest   ])', 1), ('([1:/android/security/cts/CVE_2021_0481/DeviceTest.java]:[VIEW]:[1]:method_text:[ + ""__"")) != 0){            return ret;          }        }      }    }    return ret;  }}])', 1), ('([1:/android/autofillservice/cts/commontests/DatasetFilteringTest.java]:[VIEW]:[1]:method_text:[ence username) {        mActivity.onUsername((v) -> v.setText(username));    }    @Presubmit   ])', 1), ('([5:/android/view/cts/KeyboardShortcutGroupTest.java]:[VIEW]:[5]:method_text:[boardShortcutInfo(                ""Item 2"", KeyEvent.KEYCODE_F, KeyEvent.META_CTRL_ON));    }   ])', 1), ('([1:/android/graphics/drawable/cts/GradientDrawableTest.java]:[VIEW]:[1]:method_text:[setup() {        mResources = InstrumentationRegistry.getTargetContext().getResources();    }   ])', 1), ('([2:/android/text/method/cts/ReplacementTransformationMethodTest.java]:[VIEW]:[2]:method_text:[   mEditText.setText(""010101"");        // TODO cannot get transformed text from the view    }   ])', 1), ('([1:/android/hardware/camera2/cts/ConcurrentCameraTest.java]:[VIEW]:[1]:method_text:[ this.substituteY8 = substituteY8;            this.combination = combination;        }    };   ])', 1), ('([1:/android/hardware/camera2/cts/ConcurrentCameraTest.java]:[VIEW]:[1]:method_text:[ssage()));                }            }            testSample.targets.close();        }    }}])', 1), ('([5:/com/android/cts/isolatedsplitapp/SplitAppTest.java]:[VIEW]:[5]:method_text:[   @Before    public void setUp() {        BaseActivity.setOverrideConfiguration(null);    }   ])', 1), ('([10:/com/android/cts/isolatedsplitapp/SplitAppTest.java]:[VIEW]:[10]:method_text:[  };        }        public Context getContext() {            return mContext;        }    }}])', 1), ('([1:/com/android/cts/splitapp/SplitAppTest.java]:[ACTION_VIEW]:[1]:method_text:[);            i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);            return i;        }    }   ])', 1), ('([1:/com/android/cts/splitapp/SplitAppTest.java]:[VIEW]:[1]:method_text:[);            i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);            return i;        }    }   ])', 1), ('([3:/android/view/inputmethod/cts/ExtractedTextRequestTest.java]:[VIEW]:[3]:method_text:[link ExtractedTextRequest} can be serialized and deserialized via     * {@link Parcel}.     */   ])', 1), ('([3:/android/view/cts/MenuItemTest.java]:[VIEW]:[3]:method_text:[).inflateMenu(R.menu.menu_regular);        mMenu = mActivity.getMainToolbar().getMenu();    }   ])', 1), ('([7:/android/widget/cts/EditTextTest.java]:[VIEW]:[7]:method_text:[s Throwable {        mActivityRule.runOnUiThread(() -> mEditText1.setSingleLine(false));    }   ])', 1), ('([1:/android/widget/cts/EditTextTest.java]:[VIEW]:[1]:method_text:[, metrics));        assertEquals(sizeSetInPixels, (int) autoSizeEditText.getTextSize());    }   ])', 1), ('([3:/android/widget/cts/EditTextTest.java]:[VIEW]:[3]:method_text:[ew/EditText            // constructors.            Editable text = getText();        }    }   ])', 1), ('([20:/android/widget/cts/EditTextTest.java]:[VIEW]:[20]:method_text:[fset in the text.        return new Point(viewOnScreenXY[0] + x, viewOnScreenXY[1] + y);    }   ])', 1), ('([2:/android/widget/cts/EditTextTest.java]:[VIEW]:[2]:method_text:[h must be respected.        assertTrue(et.getText().length() <= 2000);    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/EditTextTest.java]:[VIEW]:[2]:method_text:[t.getText().length() > FRAMEWORK_MAX_LENGTH_FOR_SINGLE_LINE_EDIT_TEXT);    }    @UiThreadTest   ])', 1), ('([7:/android/widget/cts/EditTextTest.java]:[VIEW]:[7]:method_text:[v.getText().length() > FRAMEWORK_MAX_LENGTH_FOR_SINGLE_LINE_EDIT_TEXT);    }    @UiThreadTest   ])', 1), ('([29:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[29]:method_text:[nscreen(                sInstrumentation, sUiAutomation, mActivityRule);    }    @MediumTest   ])', 1), ('([8:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[8]:method_text:[essibilityNodeInfosByText(""b"");        assertEquals(9, buttons.size());    }    @MediumTest   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[1]:method_text:[tentDescription))                .get(0);        assertNotNull(button);    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[2]:method_text:[ow cannot be accessed.        assertNull(event.getSource().getWindow());    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[2]:method_text:[ify the window content.        verifyNodesInAppWindow(window.getRoot());    }    @MediumTest   ])', 1), ('([4:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[4]:method_text:[on(TYPE_VIEW_CLICKED, ACTION_CLICK),                DEFAULT_TIMEOUT_MS);    }    @MediumTest   ])', 1), ('([8:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[8]:method_text:[     } finally {            ensureAccessibilityFocusCleared();        }    }    @MediumTest   ])', 1), ('([5:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[5]:method_text:[tring(R.string.button5)).get(0);        assertFalse(button.isFocused());    }    @MediumTest   ])', 1), ('([3:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[3]:method_text:[tring(R.string.button5)).get(0);        assertTrue(button.isSelected());    }    @MediumTest   ])', 1), ('([5:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[5]:method_text:[ring(R.string.button5)).get(0);        assertFalse(button.isSelected());    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[2]:method_text:[ke sure the expected event was received.        assertNotNull(expected);    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[2]:method_text:[e sure the expected event was received.        assertNotNull(expected);    }    @MediumTest   ])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[1]:method_text:[mAction(action.getId()));                return;            }        }    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[2]:method_text:[Checkable());        assertSame(button.isChecked(), source.isChecked());    }    @MediumTest   ])', 1), ('([3:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[3]:method_text:[MPORTANT_VIEWS;            sUiAutomation.setServiceInfo(info);        }    }    @MediumTest   ])', 1), ('([17:/android/accessibilityservice/cts/AccessibilityWindowQueryTest.java]:[VIEW]:[17]:method_text:[            return false;                }            }            return true;        }    }}])', 1), ('([12:/android/widget/cts/PopupMenuTest.java]:[VIEW]:[12]:method_text:[));        assertEquals(R.id.action_share_circles, shareSubMenu.getItem(1).getItemId());    }   ])', 1), ('([3:/android/widget/cts/PopupMenuTest.java]:[VIEW]:[3]:method_text:[mBuilder.mOnDismissListener, times(1)).onDismiss(mPopupMenu);        mPopupMenu = null;    }   ])', 1), ('([10:/android/widget/cts/PopupMenuTest.java]:[VIEW]:[10]:method_text:[(item.getContentDescription(), itemView.getContentDescription());            }        }    }   ])', 1), ('([9:/android/widget/cts/PopupMenuTest.java]:[VIEW]:[9]:method_text:[groupDivider.getVisibility(), View.VISIBLE);            }        }        teardown();    }   ])', 1), ('([1:/android/widget/cts/PopupMenuTest.java]:[VIEW]:[1]:method_text:[(Canvas canvas) {            super.draw(canvas);            mWasDrawn = true;        }    }   ])', 1), ('([18:/android/widget/cts/PopupMenuTest.java]:[VIEW]:[18]:method_text:[);            }            // Show the popup menu            mPopupMenu.show();        }    }}])', 1), ('([4:/android/provider/cts/media/MediaStore_MetadataKeysTest.java]:[VIEW]:[4]:method_text:[ce.class.getName();    private Context mContext = InstrumentationRegistry.getTargetContext();   ])', 1), ('([6:/android/provider/cts/media/MediaStore_MetadataKeysTest.java]:[VIEW]:[6]:method_text:[T_ACTIVITY_NAME + "" not present in the list of matching ResolveInfos"");        return null;    }}])', 1), ('([3:/android/contentcaptureservice/cts/unit/DataRemovalRequestTest.java]:[VIEW]:[3]:method_text:[xample/"");    private DataRemovalRequest.Builder mBuilder = new DataRemovalRequest.Builder();   ])', 1), ('([12:/android/widget/cts/SeekBarTest.java]:[VIEW]:[12]:method_text:[      mSeekBar.getHeight()));        mSeekBar.setSystemGestureExclusionRects(exclusion);    }   ])', 1), ('([1:/android/hdmicec/cts/playback/HdmiCecDeviceSelectForPlaybackTest.java]:[VIEW]:[1]:method_text:[es     * when it selects itself. The message is the result of an One Touch Play action.     */   ])', 1), ('([2:/android/hdmicec/cts/playback/HdmiCecDeviceSelectForPlaybackTest.java]:[VIEW]:[2]:method_text:[hange.            setPowerStateChangeOnActiveSourceLost(previousPowerStateChange);        }    }])', 1), ('([21:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[21]:method_text:[ = InstrumentationRegistry.getContext();        mActivity = mActivityRule.getActivity();    }   ])', 1), ('([24:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[24]:method_text:[tentView, mPopupWindow.getContentView());        assertTrue(mPopupWindow.isFocusable());    }   ])', 1), ('([17:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[17]:method_text:[g);        assertSame(mTextView, mPopupWindow.getContentView());        dismissPopup();    }   ])', 1), ('([2:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[2]:method_text:[, EQUAL_TO, RIGHT, BOTTOM, LESS_THAN, BOTTOM,                offsetX, offsetY, gravity);    }   ])', 1), ('([9:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[9]:method_text:[eenXY[0]);        assertEquals(appFrameTop, viewOnScreenXY[1]);        dismissPopup();    }   ])', 1), ('([16:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[16]:method_text:[       assertTrue(left + "" != "" + right, left == right);                break;        }    }   ])', 1), ('([18:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[18]:method_text:[ContentViewInWindowXY[1] + yOff, popupContentViewOnScreenXY[1]);        dismissPopup();    }   ])', 1), ('([12:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[12]:method_text:[orXY[1] + height + yOff + viewInWindowXY[1], viewOnScreenXY[1]);        dismissPopup();    }   ])', 1), ('([12:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[12]:method_text:[OnScreenXY[0]);        assertEquals(anchorXY[1] + viewInWindowXY[1], viewOnScreenXY[1]);    }   ])', 1), ('([30:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[30]:method_text:[hor                <= Math.max(availableAboveMiddleAnchor, availableBelowMiddleAnchor));    }   ])', 1), ('([7:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[7]:method_text:[ mPopupWindow.getMaxAvailableHeight(anchorView);        assertEquals(expected, actual);    }   ])', 1), ('([7:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[7]:method_text:[lableHeight(anchorView, 0, IGNORE_BOTTOM_DECOR);        assertEquals(expected, actual);    }   ])', 1), ('([7:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[7]:method_text:[opupWindow.getMaxAvailableHeight(anchorView, 2);        assertEquals(expected, actual);    }   ])', 1), ('([7:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[7]:method_text:[lableHeight(anchorView, 2, IGNORE_BOTTOM_DECOR);        assertEquals(expected, actual);    }   ])', 1), ('([10:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[10]:method_text:[indow.getMaxAvailableHeight(anchorView, offset);        assertEquals(expected, actual);    }   ])', 1), ('([11:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[11]:method_text:[Height(anchorView, offset, IGNORE_BOTTOM_DECOR);        assertEquals(expected, actual);    }   ])', 1), ('([8:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[8]:method_text:[indow.getMaxAvailableHeight(anchorView, offset);        assertEquals(expected, actual);    }   ])', 1), ('([8:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[8]:method_text:[Height(anchorView, offset, IGNORE_BOTTOM_DECOR);        assertEquals(expected, actual);    }   ])', 1), ('([7:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[7]:method_text:[    // TODO(b/136178425): A negative offset can return a size that is larger than the display.   ])', 1), ('([7:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[7]:method_text:[ableHeight(anchorView, -1, IGNORE_BOTTOM_DECOR);        assertEquals(expected, actual);    }   ])', 1), ('([8:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[8]:method_text:[ mPopupWindow.getMaxAvailableHeight(anchorView);        assertEquals(expected, actual);    }   ])', 1), ('([9:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[9]:method_text:[lableHeight(anchorView, 0, IGNORE_BOTTOM_DECOR);        assertEquals(expected, actual);    }   ])', 1), ('([6:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[6]:method_text:[ mPopupWindow.getMaxAvailableHeight(anchorView);        assertEquals(expected, actual);    }   ])', 1), ('([20:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[20]:method_text:[ view.getWindowDisplayFrame(displayFrame);        return displayFrame;    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[4]:method_text:[owing());        mPopupWindow.dismiss();        assertFalse(mPopupWindow.isShowing());    }   ])', 1), ('([3:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[3]:method_text:[Popup();        dismissPopup();        verify(onDismissListener, times(2)).onDismiss();    }   ])', 1), ('([2:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[2]:method_text:[OCUSABLE_IM,                WindowManager.LayoutParams.FLAG_ALT_FOCUSABLE_IM & p.flags);    }   ])', 1), ('([4:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[4]:method_text:[itTransition(                () -> mPopupWindow.showAsDropDown(anchorView, 0, 0), true);    }   ])', 1), ('([4:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[4]:method_text:[tTransition(                () -> mPopupWindow.showAsDropDown(anchorView, 0, 0), false);    }   ])', 1), ('([4:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[4]:method_text:[             () -> mPopupWindow.showAtLocation(anchorView, Gravity.BOTTOM, 0, 0), false);    }   ])', 1), ('([4:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[4]:method_text:[nStart(any(Transition.class));        verify(dismissListener, times(times)).onDismiss();    }   ])', 1), ('([14:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[14]:method_text:[(containingRect.top + popupPos.y + viewInWindowXY[1], sndXY[1]);        dismissPopup();    }   ])', 1), ('([8:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[8]:method_text:[ityRule.runOnUiThread(mPopupWindow::dismiss);        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([37:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[37]:method_text:[Y[1] + anotherView.getHeight() + viewInWindowOff[1], viewXY[1]);        dismissPopup();    }   ])', 1), ('([4:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[4]:method_text:[tForIdleSync();        assertTrue(mPopupWindow.isAboveAnchor());        dismissPopup();    }   ])', 1), ('([22:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[22]:method_text:[      verify(onTouchListener, times(2)).onTouch(any(View.class), any(MotionEvent.class));    }   ])', 1), ('([6:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[6]:method_text:[Params.WRAP_CONTENT, p.width);        assertEquals(LayoutParams.MATCH_PARENT, p.height);    }   ])', 1), ('([10:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[10]:method_text:[sertEquals(anchorLocationOnScreenXY[1] + anchor.getHeight(), popupLocationOnScreenXY[1]);    }   ])', 1), ('([9:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[9]:method_text:[rame.width());            assertEquals(measuredHeight, visibleFrame.height());        }    }   ])', 1), ('([8:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[8]:method_text:[onScrollChange(                any(View.class), anyInt(), anyInt(), anyInt(), anyInt());    }   ])', 1), ('([14:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[14]:method_text:[ force layout */);        assertPopupLocation(originalLocation, deltaX * 2, deltaY * 2);    }   ])', 1), ('([14:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[14]:method_text:[Location[0]);        assertEquals(subPopupLocation[1] - deltaY, newSubPopupLocation[1]);    }   ])', 1), ('([1:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[1]:method_text:[Instrumentation.waitForIdleSync();            assertTrue(content.isFocused());        }    }   ])', 1), ('([20:/android/widget/cts/PopupWindowTest.java]:[VIEW]:[20]:method_text:[            mPopupWindow.dismiss();        });        mInstrumentation.waitForIdleSync();    }}])', 1), ('([9:/android/transition/cts/ChangeImageTransformTest.java]:[VIEW]:[9]:method_text:[m.setDuration(500);        mTransition = mChangeImageTransform;        resetListener();    }   ])', 1), ('([1:/android/transition/cts/ChangeImageTransformTest.java]:[VIEW]:[1]:method_text:[s(centerMatrix(), mStartMatrix);        verifyMatrixMatches(fitEndMatrix(), mEndMatrix);    }   ])', 1), ('([83:/android/transition/cts/ChangeImageTransformTest.java]:[VIEW]:[83]:method_text:[    }        });        mInstrumentation.waitForIdleSync();        return imageViews[0];    }}])', 1), ('([5:/android/view/cts/TextureViewStressTest.java]:[VIEW]:[5]:method_text:[    public TextureViewStressTest() {        super(TextureViewStressTestActivity.class);    }   ])', 1), ('([3:/android/view/cts/TextureViewStressTest.java]:[VIEW]:[3]:method_text:[ivity().waitForCompletion()) {            fail(""Did not complete 48Hz test."");        }    }   ])', 1), ('([3:/android/view/cts/TextureViewStressTest.java]:[VIEW]:[3]:method_text:[ivity().waitForCompletion()) {            fail(""Did not complete 60Hz test."");        }    }   ])', 1), ('([3:/android/view/cts/TextureViewStressTest.java]:[VIEW]:[3]:method_text:[ivity().waitForCompletion()) {            fail(""Did not complete 70Hz test."");        }    }   ])', 1), ('([3:/android/view/cts/TextureViewStressTest.java]:[VIEW]:[3]:method_text:[tivity().waitForCompletion()) {            fail(""Did not complete 200Hz test."");        }    }}])', 1), ('([16:/android/server/wm/WindowInsetsAnimationSynchronicityTests.java]:[VIEW]:[16]:method_text:[    private final Context mContext = InstrumentationRegistry.getInstrumentation().getContext();   ])', 1), ('([26:/android/server/wm/WindowInsetsAnimationSynchronicityTests.java]:[VIEW]:[26]:method_text:[Context context) {            return new ComponentName(context, SimpleIme.class);        }    }}])', 1), ('([2:/android/media/cts/PresentationSyncTest.java]:[VIEW]:[2]:method_text:[GL extension,     * so we render each frame through GL.     *     * @throws Exception     */   ])', 1), ('([4:/android/media/cts/PresentationSyncTest.java]:[VIEW]:[4]:method_text:[sleep(10); }                catch (InterruptedException ignored) {}            }        }    }}])', 1), ('([8:/android/widget/cts/SimpleExpandableListAdapterTest.java]:[VIEW]:[8]:method_text:[xt.LAYOUT_INFLATER_SERVICE)).inflate(                R.layout.cursoradapter_host, null);    }   ])', 1), ('([6:/android/widget/cts/SimpleExpandableListAdapterTest.java]:[VIEW]:[6]:method_text:[st, CHILD_LAYOUT, LAST_CHILD_LAYOUT,                COLUMNS_CHILD_FROM, VIEWS_CHILD_TO);    }   ])', 1), ('([32:/android/widget/cts/SimpleExpandableListAdapterTest.java]:[VIEW]:[32]:method_text:[     assertEquals(""child10"", ((TextView) result).getText().toString());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/SimpleExpandableListAdapterTest.java]:[VIEW]:[2]:method_text:[leExpandableListAdapter.getChildView(-1, 0, false, null, mAdapterHost);    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/SimpleExpandableListAdapterTest.java]:[VIEW]:[2]:method_text:[pleExpandableListAdapter.getChildView(4, 0, false, null, mAdapterHost);    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/SimpleExpandableListAdapterTest.java]:[VIEW]:[2]:method_text:[leExpandableListAdapter.getChildView(0, -1, false, null, mAdapterHost);    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/SimpleExpandableListAdapterTest.java]:[VIEW]:[2]:method_text:[pleExpandableListAdapter.getChildView(0, 1, false, null, mAdapterHost);    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/SimpleExpandableListAdapterTest.java]:[VIEW]:[2]:method_text:[, VIEWS_CHILD_TO);        assertEquals(9, mSimpleExpandableListAdapter.getGroupCount());    }   ])', 1), ('([32:/android/widget/cts/SimpleExpandableListAdapterTest.java]:[VIEW]:[32]:method_text:[     assertEquals(""group10"", ((TextView) result).getText().toString());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/SimpleExpandableListAdapterTest.java]:[VIEW]:[2]:method_text:[impleExpandableListAdapter.getGroupView(-1, false, null, mAdapterHost);    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/SimpleExpandableListAdapterTest.java]:[VIEW]:[2]:method_text:[SimpleExpandableListAdapter.getGroupView(4, false, null, mAdapterHost);    }    @UiThreadTest   ])', 1), ('([2:/android/text/method/cts/CharacterPickerDialogTest.java]:[VIEW]:[2]:method_text:[ public void setup() {        mActivity = mActivityRule.getActivity();    }    @UiThreadTest   ])', 1), ('([5:/android/text/method/cts/CharacterPickerDialogTest.java]:[VIEW]:[5]:method_text:[aracterPickerDialog(view.getContext(), view, content, ""\\u00A1"", false);    }    @UiThreadTest   ])', 1), ('([4:/android/text/method/cts/CharacterPickerDialogTest.java]:[VIEW]:[4]:method_text:[       new CharacterPickerDialog(null, view, content, ""\\u00A1"", false);    }    @UiThreadTest   ])', 1), ('([10:/android/text/method/cts/CharacterPickerDialogTest.java]:[VIEW]:[10]:method_text:[ text.toString());        assertFalse(insertPickerDialog.isShowing());    }    @UiThreadTest   ])', 1), ('([6:/android/text/method/cts/CharacterPickerDialogTest.java]:[VIEW]:[6]:method_text:[just make sure onClick does not throw exception        characterPickerDialog.onClick(view);    }}])', 1), ('([5:/android/widget/cts/AnalogClockTest.java]:[VIEW]:[5]:method_text:[ewById(R.id.clock);        mClockWithAttrs = layout.findViewById(R.id.clock_with_attrs);    }   ])', 1), ('([3:/android/assist/cts/TextViewTest.java]:[VIEW]:[3]:method_text:[rotected void customSetup() throws Exception {        startTestActivity(TEST_CASE_TYPE);    }   ])', 1), ('([13:/android/assist/cts/TextViewTest.java]:[VIEW]:[13]:method_text:[le.putInt(Utils.SCROLL_Y_POSITION, scrollY);        m3pActivityCallback.sendResult(bundle);    }}])', 1), ('([10:/android/hardware/camera2/cts/PerformanceTest.java]:[VIEW]:[10]:method_text:[   * For depth-only devices, timing is done with the DEPTH16 format instead.     * </p>     */   ])', 1), ('([31:/android/hardware/camera2/cts/PerformanceTest.java]:[VIEW]:[31]:method_text:[ sending     * out the capture request and getting the full capture result.     * </p>     */   ])', 1), ('([17:/android/hardware/camera2/cts/PerformanceTest.java]:[VIEW]:[17]:method_text:[, and the frame duration, which is the timestamp     * gap between results.     * </p>     */   ])', 1), ('([16:/android/hardware/camera2/cts/PerformanceTest.java]:[VIEW]:[16]:method_text:[e time     * a reprocess request is issued to the time the reprocess image is returned.     */   ])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[VIEW]:[1]:method_text:[s,     * i.e., how many frames can be reprocessed during a given amount of time.     *     */   ])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[VIEW]:[1]:method_text:[e     * time a reprocess request is issued to the time the reprocess image is returned.     */   ])', 1), ('([1:/android/hardware/camera2/cts/PerformanceTest.java]:[VIEW]:[1]:method_text:[s, i.e., how many frames can     * be reprocessed during a given amount of time.     *     */   ])', 1), ('([2:/android/hardware/camera2/cts/PerformanceTest.java]:[VIEW]:[2]:method_text:[        }    }    /**     * Testing reprocessing caused preview stall (frame drops)     */   ])', 1), ('([108:/android/hardware/camera2/cts/PerformanceTest.java]:[VIEW]:[108]:method_text:[sult after ""                    + ""waiting for "" + numResultsWait + "" results"");        }    }}])', 1), ('([2:/android/mediav2/cts/EncodeDecodeAccuracyTest.java]:[VIEW]:[2]:method_text:[he     * decoder is expected to produce the color information accurately     */    @LargeTest   ])', 1), ('([1:/android/webkit/cts/WebSettingsTest.java]:[SENDTO]:[1]:method_text:[Url(TestHtmlConstants.POPUP_URL));        WebkitUtils.waitForFuture(createWindowFuture);    }   ])', 1), ('([17:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[17]:method_text:[>.<minor>     * Chrome/<major>.<minor>.<branch>.<build>[ Mobile] Safari/<major>.<minor>     */   ])', 1), (""([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[erifies that the useragent testing regex is actually correct, because it's very complex.     */   ])"", 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[AndWaitForCompletion(url);        assertEquals(customUserAgent, mOnUiThread.getTitle());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[with file access disabled"",                dataDirTitle.equals(mOnUiThread.getTitle()));    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[Sync();        Thread.sleep(100); // Wait for open to be received on the icon db thread.    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[hing resource"",                requestCountAfterSecondLoad, requestCountAfterFirstLoad);    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[d of caching"",                requestCountAfterSecondLoad > requestCountAfterFirstLoad);    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ of fetching resource"",                requestCountAfterFirstLoad, initialRequestCount);    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ewCusiveFamily);        assertEquals(newCusiveFamily, mSettings.getCursiveFontFamily());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[FantasyFamily);        assertEquals(newFantasyFamily, mSettings.getFantasyFontFamily());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ly(newFixedFamily);        assertEquals(newFixedFamily, mSettings.getFixedFontFamily());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ewFixedFamily);        assertEquals(newFixedFamily, mSettings.getSansSerifFontFamily());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ly(newSerifFamily);        assertEquals(newSerifFamily, mSettings.getSerifFontFamily());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ndardFamily);        assertEquals(newStandardFamily, mSettings.getStandardFontFamily());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ettings.setDefaultFontSize(10);        assertEquals(10, mSettings.getDefaultFontSize());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[tDefaultFixedFontSize(10);        assertEquals(10, mSettings.getDefaultFixedFontSize());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[dingName);        assertEquals(newEncodingName, mSettings.getDefaultTextEncodingName());    }   ])', 1), ('([14:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[14]:method_text:[Url(TestHtmlConstants.POPUP_URL));        WebkitUtils.waitForFuture(createWindowFuture);    }   ])', 1), ('([4:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[4]:method_text:[  return ""javascript off"".equals(mOnUiThread.getTitle());            }        }.run();    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ assertEquals(WebSettings.LayoutAlgorithm.SINGLE_COLUMN, mSettings.getLayoutAlgorithm());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ettings.setMinimumFontSize(10);        assertEquals(10, mSettings.getMinimumFontSize());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[imumLogicalFontSize(10);        assertEquals(10, mSettings.getMinimumLogicalFontSize());    }   ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[3]:method_text:[   * should be reflected in that test as necessary. See http://go/modifying-webview-cts.     */   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[tings.setOffscreenPreRaster(true);        assertTrue(mSettings.getOffscreenPreRaster());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[nPath);        assertEquals(""Plugin path always empty"", """", mSettings.getPluginsPath());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ize(TextSize.SMALLEST);        assertEquals(TextSize.SMALLEST, mSettings.getTextSize());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[        assertFalse(""setUseDoubleTree should be a no-op"", mSettings.getUseDoubleTree());    }   ])', 1), ('([6:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[6]:method_text:[  mSettings.setUseWideViewPort(true);        assertTrue(mSettings.getUseWideViewPort());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[      mSettings.setNeedInitialFocus(false);        mSettings.setNeedInitialFocus(true);    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[erPriority.LOW);        mSettings.setRenderPriority(WebSettings.RenderPriority.NORMAL);    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[.setSupportMultipleWindows(true);        assertTrue(mSettings.supportMultipleWindows());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[;        mSettings.setSupportZoom(false);        assertFalse(mSettings.supportZoom());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ngs.setBuiltInZoomControls(true);        assertTrue(mSettings.getBuiltInZoomControls());    }   ])', 1), ('([3:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[3]:method_text:[ccur.        Thread.sleep(1000);        assertEquals(""Loaded"", mOnUiThread.getTitle());    }   ])', 1), ('([4:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[4]:method_text:[res creating a    // webChromeClient and listening to Quota callbacks, which is not documented.   ])', 1), ('([4:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[4]:method_text:[test should be reflected in that test as necessary. See http://go/modifying-webview-cts.     */   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ms(i);            assertEquals(i, mSettings.getDisabledActionModeMenuItems());        }    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[           return;        }        assertTrue(mSettings.getLoadsImagesAutomatically());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[, ""text/html"", null);        assertEquals(NETWORK_IMAGE_HEIGHT, mOnUiThread.getTitle());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ML, ""text/html"", null);        assertEquals(EMPTY_IMAGE_HEIGHT, mOnUiThread.getTitle());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[tForNonEmptyImage();        assertEquals(DATA_URL_IMAGE_HEIGHT, mOnUiThread.getTitle());    }   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[d.getTitle());    }    // Verify that an image in local file system can be loaded by an asset   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[    // Verify that enabling file access from file URLs enable XmlHttpRequest (XHR) across files   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[  // Verify that disabling file access from file URLs disable XmlHttpRequest (XHR) accross files   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ename, Context.MODE_PRIVATE);        fos.write(content.getBytes());        fos.close();    }   ])', 1), ('([8:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[8]:method_text:[   * should be reflected in that test as necessary. See http://go/modifying-webview-cts.     */   ])', 1), ('([2:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[2]:method_text:[ram.put(pixel, histogram.getOrDefault(pixel, 0) + 1);        }        return histogram;    }   ])', 1), ('([10:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[10]:method_text:[          params.width = width;            webView.setLayoutParams(params);        });    }   ])', 1), ('([10:/android/webkit/cts/WebSettingsTest.java]:[VIEW]:[10]:method_text:[e assertions.            WebkitUtils.waitForNextQueueElement(mReceivedIconQueue);        }    }}])', 1), ('([4:/android/view/cts/ViewGroupChildDrawingOrderTest.java]:[VIEW]:[4]:method_text:[    public void setup() {        mContext = InstrumentationRegistry.getTargetContext();    }   ])', 1), ('([6:/android/view/cts/ViewGroupChildDrawingOrderTest.java]:[VIEW]:[6]:method_text:[layout.getChildDrawingOrder(1));        assertEquals(2, layout.getChildDrawingOrder(2));    }   ])', 1), ('([6:/android/view/cts/ViewGroupChildDrawingOrderTest.java]:[VIEW]:[6]:method_text:[dDrawingOrder(int childCount, int i) {            return mChildDrawingOrder[i];        }    }}])', 1), ('([1:/android/media/cts/MediaCodecTest.java]:[VIEW]:[1]:method_text:[s are thrown from MediaCodec     * methods when called in incorrect operational states.     */   ])', 1), ('([1:/android/widget/cts/CheckBoxTest.java]:[VIEW]:[1]:method_text:[ule.getActivity();        mCheckBox = (CheckBox) mActivity.findViewById(R.id.check_box);    }   ])', 1), ('([2:/android/widget/cts/CheckBoxTest.java]:[VIEW]:[2]:method_text:[ecked());        verifyNoMoreInteractions(mockCheckedChangeListener);    }    @UiThreadTest   ])', 1), ('([1:/android/contentcaptureservice/cts/CanaryTest.java]:[VIEW]:[1]:method_text:[lic class CanaryTest {    private static final String TAG = CanaryTest.class.getSimpleName();   ])', 1), ('([1:/android/hardware/cts/SensorTest.java]:[VIEW]:[1]:method_text:[  */    // TODO: remove when parametrized tests are supported and EventTimestampSynchronization   ])', 1), ('([3:/android/transition/cts/SharedElementCallbackTest.java]:[VIEW]:[3]:method_text:[ SharedElementCallbackTest {    private static class Callback extends SharedElementCallback {}   ])', 1), ('([17:/android/transition/cts/SharedElementCallbackTest.java]:[VIEW]:[17]:method_text:[fig.HARDWARE, finalBitmap.getConfig());        assertSame(cs, finalBitmap.getColorSpace());    }}])', 1), ('([1:/android/opengl/cts/ByteBufferTest.java]:[VIEW]:[1]:method_text:[erTest extends GlTestBase {    private static final byte[] byteArray = {0, 63, 127, 127, 15};   ])', 1), ('([1:/android/opengl/cts/ByteBufferTest.java]:[VIEW]:[1]:method_text:[ffer.get(i + readBuffer.position()));        }        glDeleteTextures(1, textureHandles);    }}])', 1), ('([14:/android/server/wm/DisplayCutoutTests.java]:[VIEW]:[14]:method_text:[tActivity.class, false /* initialTouchMode */,                    false /* launchActivity */);   ])', 1), ('([1:/android/server/wm/DisplayCutoutTests.java]:[VIEW]:[1]:method_text:[           a.getDisplay().getCutout(), equalTo(displayCutout));            }        });    }   ])', 1), ('([21:/android/server/wm/DisplayCutoutTests.java]:[VIEW]:[21]:method_text:[out cutout, Which whichInsets);        enum Which {            DISPATCHED, ROOT        }    }}])', 1), ('([4:/android/widget/cts/MediaControllerTest.java]:[VIEW]:[4]:method_text:[.getInstrumentation();        mActivity = mActivityRule.getActivity();    }    @UiThreadTest   ])', 1), ('([12:/android/widget/cts/MediaControllerTest.java]:[VIEW]:[12]:method_text:[iew);        mMediaController.show();        assertTrue(mMediaController.isShowing());    }   ])', 1), ('([11:/android/widget/cts/MediaControllerTest.java]:[VIEW]:[11]:method_text:[());        }        return mActivity.getFileStreamPath(VIDEO_NAME).getAbsolutePath();    }   ])', 1), ('([19:/android/widget/cts/MediaControllerTest.java]:[VIEW]:[19]:method_text:[ivityRule, mActivity.getWindow().getDecorView(),                null);    }    @UiThreadTest   ])', 1), ('([10:/android/widget/cts/MediaControllerTest.java]:[VIEW]:[10]:method_text:[r.setEnabled(false);        assertFalse(mMediaController.isEnabled());    }    @UiThreadTest   ])', 1), ('([10:/android/widget/cts/MediaControllerTest.java]:[VIEW]:[10]:method_text:[        @Override        public int getAudioSessionId() {            return 0;        }    }}])', 1), ('([16:/android/view/cts/VerifyInputEventTest.java]:[VIEW]:[16]:method_text:[     mActivity = mActivityRule.getActivity();        WindowUtil.waitForFocus(mActivity);    }   ])', 1), ('([5:/android/view/cts/VerifyInputEventTest.java]:[VIEW]:[5]:method_text:[nd therefore does not have an hmac     * set properly.     * Verification should fail.     */   ])', 1), ('([5:/android/view/cts/VerifyInputEventTest.java]:[VIEW]:[5]:method_text:[vent that came from system, but has been tempered with.     * Verification should fail.     */   ])', 1), ('([5:/android/view/cts/VerifyInputEventTest.java]:[VIEW]:[5]:method_text:[ld contain the virtual device id, which is consistent with what the     * app receives.     */   ])', 1), ('([11:/android/view/cts/VerifyInputEventTest.java]:[VIEW]:[11]:method_text:[   boolean flagValue = (expectedFlags & flag) != 0;        assertEquals(flagValue, actual);    }}])', 1), ('([6:/android/autofillservice/cts/unittests/FillResponseTest.java]:[VIEW]:[6]:method_text:[der;    private final UserData mUserData = new UserData.Builder(""id"", ""value"", ""cat"").build();   ])', 1), ('([2:/android/view/inputmethod/cts/InputContentInfoTest.java]:[VIEW]:[2]:method_text:[arameterException;@SmallTest@RunWith(AndroidJUnit4.class)public class InputContentInfoTest {   ])', 1), (""([1:/android/media/cts/MediaActivityTest.java]:[VIEW]:[1]:method_text:[    }    /**     * Tests whether volume key changes volume with the session's stream.     */   ])"", 1), ('([4:/android/server/wm/BlurTests.java]:[VIEW]:[4]:method_text:[urationScale);        });        setForceBlurDisabled(mSavedWindowBlurDisabledSetting);    }   ])', 1), ('([9:/android/server/wm/BlurTests.java]:[VIEW]:[9]:method_text:[etContentResolver(),                Settings.Global.DISABLE_WINDOW_BLURS, disable ? 1 : 0);    }}])', 1), ('([3:/android/permission2/cts/RestrictedPermissionsTest.java]:[VIEW]:[3]:method_text:[umentation().getUiAutomation()                    .dropShellPermissionIdentity();        }    }}])', 1), ('([7:/android/transition/cts/ChangeBoundsTest.java]:[VIEW]:[7]:method_text:[ngeBounds.setInterpolator(new LinearInterpolator());        mTransition = mChangeBounds;    }   ])', 1), ('([49:/android/transition/cts/ChangeBoundsTest.java]:[VIEW]:[49]:method_text:[      new Rect(view.getLeft(), view.getTop(), view.getRight(), view.getBottom());        }    }}])', 1), ('([20:/android/widget/cts/ImageViewTest.java]:[VIEW]:[20]:method_text:[          }        } catch (IOException e) {            fail(e.getMessage());        }    }   ])', 1), ('([7:/android/widget/cts/ImageViewTest.java]:[VIEW]:[7]:method_text:[r);        new ImageView(mActivity, attrs);        new ImageView(mActivity, attrs, 0);    }   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[VIEW]:[1]:method_text:[ption.class)    public void testConstructorNullContext1() {        new ImageView(null);    }   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[VIEW]:[1]:method_text:[class)    public void testConstructorNullContext2() {        new ImageView(null, null);    }   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[VIEW]:[1]:method_text:[ testConstructorNullContext3() {        new ImageView(null, null, -1);    }    @UiThreadTest   ])', 1), ('([29:/android/widget/cts/ImageViewTest.java]:[VIEW]:[29]:method_text:[ForAutofill());        assertTrue(imageView.isImportantForAutofill());    }    @UiThreadTest   ])', 1), ('([29:/android/widget/cts/ImageViewTest.java]:[VIEW]:[29]:method_text:[pture());        assertTrue(imageView.isImportantForContentCapture());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[VIEW]:[1]:method_text:[alidateDrawable() {        mImageViewRegular.invalidateDrawable(null);    }    @UiThreadTest   ])', 1), ('([12:/android/widget/cts/ImageViewTest.java]:[VIEW]:[12]:method_text:[  assertEquals(ScaleType.FIT_CENTER, mImageViewRegular.getScaleType());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/ImageViewTest.java]:[VIEW]:[2]:method_text:[iewRegular.setMaxWidth(120);        mImageViewRegular.setMaxWidth(-1);    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/ImageViewTest.java]:[VIEW]:[2]:method_text:[wRegular.setMaxHeight(120);        mImageViewRegular.setMaxHeight(-1);    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/ImageViewTest.java]:[VIEW]:[4]:method_text:[());        assertNotSame(drawable2, mImageViewRegular.getDrawable());    }    @UiThreadTest   ])', 1), ('([13:/android/widget/cts/ImageViewTest.java]:[VIEW]:[13]:method_text:[etTestUtils.assertEquals(testimageBitmap, imageViewBitmap.getBitmap());    }    @UiThreadTest   ])', 1), ('([11:/android/widget/cts/ImageViewTest.java]:[VIEW]:[11]:method_text:[     WidgetTestUtils.assertEquals(bitmap, imageViewBitmap.getBitmap());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/ImageViewTest.java]:[VIEW]:[2]:method_text:[        assertSame(state, mImageViewRegular.onCreateDrawableState(0));    }    @UiThreadTest   ])', 1), ('([5:/android/widget/cts/ImageViewTest.java]:[VIEW]:[5]:method_text:[etSelected(false);        assertFalse(mImageViewRegular.isSelected());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/ImageViewTest.java]:[VIEW]:[2]:method_text:[Regular.setImageLevel(1);        assertEquals(1, drawable.getLevel());    }    @UiThreadTest   ])', 1), ('([25:/android/widget/cts/ImageViewTest.java]:[VIEW]:[25]:method_text:[s(ImageView.ScaleType.CENTER_INSIDE, mImageViewRegular.getScaleType());    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/ImageViewTest.java]:[VIEW]:[1]:method_text:[ testSetNullScaleType() {        mImageViewRegular.setScaleType(null);    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/ImageViewTest.java]:[VIEW]:[4]:method_text:[rix);        assertEquals(matrix, mImageViewRegular.getImageMatrix());    }    @UiThreadTest   ])', 1), ('([13:/android/widget/cts/ImageViewTest.java]:[VIEW]:[13]:method_text:[gnBottom());        assertEquals(50, mImageViewRegular.getBaseline());    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/ImageViewTest.java]:[VIEW]:[4]:method_text:[ColorFilter());        assertNull(mImageViewRegular.getColorFilter());    }    @UiThreadTest   ])', 1), ('([5:/android/widget/cts/ImageViewTest.java]:[VIEW]:[5]:method_text:[, drawable.getColorFilter());        assertSame(cf, mImageViewRegular.getColorFilter());    }   ])', 1), ('([11:/android/widget/cts/ImageViewTest.java]:[VIEW]:[11]:method_text:[ble        assertArrayEquals(imageView.getDrawableState(), selectorDrawable.getState());    }   ])', 1), ('([8:/android/widget/cts/ImageViewTest.java]:[VIEW]:[8]:method_text:[mageView.onCreateDrawableState(1));        mockImageView.setImageState(expected, true);    }   ])', 1), ('([7:/android/widget/cts/ImageViewTest.java]:[VIEW]:[7]:method_text:[nt[] {1, 2, 3}, true);        mockImageView.onCreateDrawableState(-1);    }    @UiThreadTest   ])', 1), ('([7:/android/widget/cts/ImageViewTest.java]:[VIEW]:[7]:method_text:[s());        verify(drawable, atLeastOnce()).draw(any(Canvas.class));    }    @UiThreadTest   ])', 1), ('([3:/android/widget/cts/ImageViewTest.java]:[VIEW]:[3]:method_text:[easuredWidth() <= 200);        assertTrue(mImageViewRegular.getMeasuredHeight() <= 150);    }   ])', 1), ('([12:/android/widget/cts/ImageViewTest.java]:[VIEW]:[12]:method_text:[   verify(mockImageView, times(1)).onSizeChanged(anyInt(), anyInt(), anyInt(), anyInt());    }   ])', 1), ('([5:/android/widget/cts/ImageViewTest.java]:[VIEW]:[5]:method_text:[(colorAlpha, mockDrawable.getAlpha());        assertNotNull(mockDrawable.getXfermode());    }   ])', 1), ('([5:/android/widget/cts/ImageViewTest.java]:[VIEW]:[5]:method_text:[colorAlpha, mockDrawable.getAlpha());        assertNotNull(mockDrawable.getBlendMode());    }   ])', 1), ('([13:/android/widget/cts/ImageViewTest.java]:[VIEW]:[13]:method_text:[ssertEquals(PorterDuff.Mode.SRC_ATOP, porterDuffColorFilter.getMode());    }    @UiThreadTest   ])', 1), ('([10:/android/widget/cts/ImageViewTest.java]:[VIEW]:[10]:method_text:[;        assertTrue(mockImageView.verifyDrawable(backgroundDrawable));    }    @UiThreadTest   ])', 1), ('([9:/android/widget/cts/ImageViewTest.java]:[VIEW]:[9]:method_text:[sertEquals(PorterDuff.Mode.SRC_IN, imageViewTinted.getImageTintMode());    }    @UiThreadTest   ])', 1), ('([9:/android/widget/cts/ImageViewTest.java]:[VIEW]:[9]:method_text:[ssertEquals(BlendMode.SRC_IN, imageViewTinted.getImageTintBlendMode());    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/ImageViewTest.java]:[VIEW]:[4]:method_text:[     verify(drawable, times(2)).setTintList(any(ColorStateList.class));    }    @UiThreadTest   ])', 1), ('([8:/android/widget/cts/ImageViewTest.java]:[VIEW]:[8]:method_text:[uld be blue"", mImageViewRegular,                0xFF0000FF, 1, false);    }    @UiThreadTest   ])', 1), ('([12:/android/widget/cts/ImageViewTest.java]:[VIEW]:[12]:method_text:[uld be blue"", mImageViewRegular,                0xFF0000FF, 1, false);    }    @UiThreadTest   ])', 1), ('([15:/android/widget/cts/ImageViewTest.java]:[VIEW]:[15]:method_text:[);        assertTrue(mImageViewRegular.getImageMatrix().isIdentity());    }    @UiThreadTest   ])', 1), ('([19:/android/widget/cts/ImageViewTest.java]:[VIEW]:[19]:method_text:[ride        public int getOpacity() {            return PixelFormat.TRANSLUCENT;        }    }}])', 1), ('([65:/android/view/cts/SurfaceViewSyncTest.java]:[VIEW]:[65]:method_text:[  /** Draws a moving 10x10 black rectangle, validates 100 pixels of black are seen each frame */   ])', 1), ('([4:/android/view/cts/SurfaceViewSyncTest.java]:[VIEW]:[4]:method_text:[entirely black, with pixel count being     * approximate to avoid rounding brittleness.     */   ])', 1), ('([2:/android/view/cts/SurfaceViewSyncTest.java]:[VIEW]:[2]:method_text:[t > 9000 && blackishPixelCount < 11000;                    }                }), mName);    }   ])', 1), ('([7:/android/view/cts/SurfaceViewSyncTest.java]:[VIEW]:[7]:method_text:[        return blackishPixelCount == 0;                    }                }), mName);    }   ])', 1), ('([9:/android/view/cts/SurfaceViewSyncTest.java]:[VIEW]:[9]:method_text:[        return blackishPixelCount == 0;                    }                }), mName);    }   ])', 1), ('([9:/android/view/cts/SurfaceViewSyncTest.java]:[VIEW]:[9]:method_text:[           return blackishPixelCount == 0;                    }                }), mName);    }}])', 1), ('([2:/android/devicepolicy/cts/CrossProfileAppsTest.java]:[VIEW]:[2]:method_text:[s);    @ClassRule @Rule    public static final DeviceState sDeviceState = new DeviceState();   ])', 1), ('([6:/android/devicepolicy/cts/CrossProfileAppsTest.java]:[VIEW]:[6]:method_text:[))                .isEqualTo(String.valueOf(sUserManager.getSerialNumberForUser(user)));    }   ])', 1), ('([1:/com/android/cts/deviceandprofileowner/ApplicationRestrictionsTest.java]:[VIEW]:[1]:method_text:[_RECEIVER_COMPONENT, mContext.getPackageName(), new Bundle());        super.tearDown();    }   ])', 1), ('([1:/android/content/cts/ContextTest.java]:[VIEW]:[1]:method_text:[{            mContext.unregisterReceiver(receiver);        }        super.tearDown();    }   ])', 1), ('([1:/android/content/cts/ContextTest.java]:[VIEW]:[1]:method_text:[   assertEquals(attrs.length, testTypedArray.length());        testTypedArray.recycle();    }   ])', 1), ('([2:/android/provider/cts/SettingsPanelTest.java]:[VIEW]:[2]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([3:/android/autofillservice/cts/inline/InlineLoginActivityTest.java]:[VIEW]:[3]:method_text:[ firstDataset);        sReplier.getNextFillRequest();        mUiBot.waitForIdleSync();    }   ])', 1), ('([5:/android/autofillservice/cts/inline/InlineLoginActivityTest.java]:[VIEW]:[5]:method_text:[mClock.sleep(500);        Helper.assertActiveViewCountFromInlineSuggestionRenderService(0);    }}])', 1), ('([1:/android/acceleration/cts/SoftwareAccelerationTest.java]:[VIEW]:[1]:method_text:[tion {        super.setUp();        mActivity = getActivity();    }    @VendorInterfaceTest   ])', 1), ('([9:/android/acceleration/cts/SoftwareAccelerationTest.java]:[VIEW]:[9]:method_text:[dwareAccelerated());        assertFalse(mManualSoftwareView.isCanvasHardwareAccelerated());    }}])', 1), ('([14:/android/widget/cts/GalleryTest.java]:[VIEW]:[14]:method_text:[        mGallery = (Gallery) mActivity.findViewById(R.id.gallery_test);    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/GalleryTest.java]:[VIEW]:[2]:method_text:[v1 = mGallery.getChildAt(1);        assertEquals(v0.getRight() + spacing, v1.getLeft());    }   ])', 1), ('([2:/android/widget/cts/GalleryTest.java]:[VIEW]:[2]:method_text:[ransformation(v1, t);        assertEquals(alpha, t.getAlpha(), DELTA);    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/GalleryTest.java]:[VIEW]:[4]:method_text:[Asserts.assertBottomAligned(mGallery, v0, mGallery.getPaddingBottom());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/GalleryTest.java]:[VIEW]:[2]:method_text:[outParams(320, 480);        assertTrue(gallery.checkLayoutParams(p2));    }    @UiThreadTest   ])', 1), ('([1:/android/widget/cts/GalleryTest.java]:[VIEW]:[1]:method_text:[ry.getSelectedItemPosition(), gallery.computeHorizontalScrollOffset());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/GalleryTest.java]:[VIEW]:[2]:method_text:[.isPressed());        assertFalse(mGallery.getChildAt(1).isPressed());    }    @UiThreadTest   ])', 1), ('([3:/android/widget/cts/GalleryTest.java]:[VIEW]:[3]:method_text:[P_CONTENT, p.width);        assertEquals(ViewGroup.LayoutParams.WRAP_CONTENT, p.height);    }   ])', 1), ('([13:/android/widget/cts/GalleryTest.java]:[VIEW]:[13]:method_text:[   private static class MyContextMenuInfo implements ContextMenu.ContextMenuInfo {        }    }}])', 1), ('([5:/android/view/cts/MenuTest.java]:[VIEW]:[5]:method_text:[nuInflater();        mMenu = new PopupMenu(mActivity, null).getMenu();    }    @UiThreadTest   ])', 1), ('([2:/android/text/method/cts/QwertyKeyListenerTest.java]:[VIEW]:[2]:method_text:[   @After    public void tearDown() throws IOException {        resetAutoCapSettings();    }   ])', 1), ('([6:/android/text/method/cts/QwertyKeyListenerTest.java]:[VIEW]:[6]:method_text:[ener, KeyEvent.KEYCODE_O);        assertEquals(""hello"", mTextView.getText().toString());    }   ])', 1), ('([6:/android/text/method/cts/QwertyKeyListenerTest.java]:[VIEW]:[6]:method_text:[ener, KeyEvent.KEYCODE_O);        assertEquals(""HELLO"", mTextView.getText().toString());    }   ])', 1), ('([8:/android/text/method/cts/QwertyKeyListenerTest.java]:[VIEW]:[8]:method_text:[er, KeyEvent.KEYCODE_E);        assertEquals(""Hi. Bye"", mTextView.getText().toString());    }   ])', 1), ('([13:/android/text/method/cts/QwertyKeyListenerTest.java]:[VIEW]:[13]:method_text:[ew KeyEvent(KeyEvent.ACTION_DOWN, keyCode)));        mInstrumentation.waitForIdleSync();    }   ])', 1), ('([4:/android/widget/cts/ToastPresenterTest.java]:[VIEW]:[4]:method_text:[tService(Context.NOTIFICATION_SERVICE)),                PACKAGE_NAME);    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/ToastPresenterTest.java]:[VIEW]:[4]:method_text:[ssertEquals(3, (int) lp.horizontalMargin);        assertEquals(4, (int) lp.verticalMargin);    }}])', 1), ('([36:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[36]:method_text:[fter    public void teardown() {        ValueAnimator.setDurationScale(mDurationScale);    }   ])', 1), ('([4:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[4]:method_text:[tivity, attrs);        new HorizontalScrollView(mActivity, attrs, 0);    }    @UiThreadTest   ])', 1), ('([4:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[4]:method_text:[  assertEquals((150 - 0) / 2, mScrollViewRegular.getMaxScrollAmount());    }    @UiThreadTest   ])', 1), ('([12:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[12]:method_text:[        }        assertEquals(1, mScrollViewRegular.getChildCount());    }    @UiThreadTest   ])', 1), ('([26:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[26]:method_text:[catch (IndexOutOfBoundsException e) {            // expected        }    }    @UiThreadTest   ])', 1), ('([19:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[19]:method_text:[   } catch (NullPointerException e) {            // expected        }    }    @UiThreadTest   ])', 1), ('([36:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[36]:method_text:[catch (IndexOutOfBoundsException e) {            // expected        }    }    @UiThreadTest   ])', 1), ('([22:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[22]:method_text:[iewRegular.isFillViewport());        assertTrue(mScrollViewRegular.isLayoutRequested());    }   ])', 1), ('([17:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[17]:method_text:[GHT, 0, 0, 0);        assertEquals(0, mScrollViewCustom.getScrollX());    }    @UiThreadTest   ])', 1), ('([5:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[5]:method_text:[            eq(MeasureSpec.makeMeasureSpec(150, MeasureSpec.EXACTLY)));    }    @UiThreadTest   ])', 1), ('([6:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[6]:method_text:[            eq(MeasureSpec.makeMeasureSpec(134, MeasureSpec.EXACTLY)));    }    @UiThreadTest   ])', 1), ('([6:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[6]:method_text:[            eq(MeasureSpec.makeMeasureSpec(114, MeasureSpec.EXACTLY)));    }    @UiThreadTest   ])', 1), ('([12:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[12]:method_text:[gular.layout(0, 0, 150, 100);        assertEquals(0, child.getLeft());    }    @UiThreadTest   ])', 1), ('([12:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[12]:method_text:[gular.layout(0, 0, 100, 150);        assertEquals(3, child.getLeft());    }    @UiThreadTest   ])', 1), ('([9:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[9]:method_text:[gular.layout(0, 0, 100, 150);        assertEquals(3, child.getLeft());    }    @UiThreadTest   ])', 1), ('([16:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[16]:method_text:[.FOCUS_LEFT));        assertEquals(0, mScrollViewCustom.getScrollX());    }    @UiThreadTest   ])', 1), ('([14:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[14]:method_text:[.FOCUS_LEFT));        assertEquals(0, mScrollViewCustom.getScrollX());    }    @UiThreadTest   ])', 1), ('([18:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[18]:method_text:[m.arrowScroll(View.FOCUS_LEFT));        assertEquals(0, mScrollViewCustom.getScrollX());    }   ])', 1), ('([11:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[11]:method_text:[   assertEquals(edge, myScrollViewCustom.computeScrollDeltaToGetChildRectOnScreen(rect));    }   ])', 1), ('([8:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[8]:method_text:[));        assertEquals(0, scrollView.computeHorizontalScrollRange());    }    @UiThreadTest   ])', 1), ('([13:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[13]:method_text:[nts focus        assertTrue(mScrollViewCustom.getScrollX() < scrollX);    }    @UiThreadTest   ])', 1), ('([12:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[12]:method_text:[getScrollX());        assertEquals(0, mScrollViewCustom.getScrollY());    }    @UiThreadTest   ])', 1), ('([2:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[2]:method_text:[llViewCustom.requestLayout();        assertTrue(mScrollViewCustom.isLayoutRequested());    }   ])', 1), ('([5:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[5]:method_text:[wCustom.fling(-velocityX));        pollingCheckFling(currentX, false);    }    @UiThreadTest   ])', 1), ('([13:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[13]:method_text:[mScrollViewCustom.getScrollY());        assertEquals(0, mScrollViewCustom.getScrollX());    }   ])', 1), ('([17:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[17]:method_text:[   assertTrue(myScrollViewCustom.getRightFadingEdgeStrength() >= 0.0f);    }    @UiThreadTest   ])', 1), ('([12:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[12]:method_text:[or.RED);        assertEquals(mScrollViewRegular.getRightEdgeEffectColor(), Color.GREEN);    }   ])', 1), ('([9:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[9]:method_text:[               () -> assertFalse(interceptView.requestDisallowInterceptCalled)        );    }   ])', 1), ('([5:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[5]:method_text:[ut was "" + edgeEffect.onAbsorbVelocity,                edgeEffect.onAbsorbVelocity > 0);    }   ])', 1), ('([38:/android/widget/cts/HorizontalScrollViewTest.java]:[VIEW]:[38]:method_text:[d = true;            super.requestDisallowInterceptTouchEvent(disallowIntercept);        }    }}])', 1), ('([1:/android/view/textclassifier/cts/TextClassifierPolicyTest.java]:[VIEW]:[1]:method_text:[.filters.SmallTest;import org.junit.Test;@SmallTestpublic class TextClassifierPolicyTest {   ])', 1), ('([1:/android/view/inputmethod/cts/KeyboardTest.java]:[VIEW]:[1]:method_text:[ org.junit.runner.RunWith;@SmallTest@RunWith(AndroidJUnit4.class)public class KeyboardTest {   ])', 1), ('([1:/android/server/wm/VrDisplayTests.java]:[VIEW]:[1]:method_text:[ }    }    /**     * Tests that any new activity launch in Vr mode is in Vr display.     */   ])', 1), ('([9:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[VIEW]:[9]:method_text:[/**     * Test WallpaperService.Engine#getDisplayContext can work on secondary display.     */   ])', 1), ('([5:/android/server/wm/MultiDisplaySystemDecorationTests.java]:[VIEW]:[5]:method_text:[e);        assertEquals(""Display bounds not the same"", displayBounds, displayBoundsForIme);    }}])', 1), ('([53:/android/hardware/cts/CameraTest.java]:[VIEW]:[53]:method_text:[ture and verify all the callback     * functions are called properly.     */    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[VIEW]:[1]:method_text:[ MP)"",                    realArea >= videoSnapshotMinArea);        }    }    @UiThreadTest   ])', 1), ('([27:/android/hardware/cts/CameraTest.java]:[VIEW]:[27]:method_text:[      mPreviewDone.close();        }        terminateMessageLooper();    }    @UiThreadTest   ])', 1), ('([9:/android/hardware/cts/CameraTest.java]:[VIEW]:[9]:method_text:[       assertEquals(PREVIEW_CALLBACK_RECEIVED, mPreviewCallbackResult);    }    @UiThreadTest   ])', 1), ('([13:/android/hardware/cts/CameraTest.java]:[VIEW]:[13]:method_text:[   assertEquals(PREVIEW_CALLBACK_NOT_RECEIVED, mPreviewCallbackResult);    }    @UiThreadTest   ])', 1), ('([38:/android/hardware/cts/CameraTest.java]:[VIEW]:[38]:method_text:[       assertEquals(PREVIEW_CALLBACK_RECEIVED, mPreviewCallbackResult);    }    @UiThreadTest   ])', 1), ('([3:/android/hardware/cts/CameraTest.java]:[VIEW]:[3]:method_text:[  mCamera.setDisplayOrientation(00);        terminateMessageLooper();    }    @UiThreadTest   ])', 1), ('([82:/android/hardware/cts/CameraTest.java]:[VIEW]:[82]:method_text:[       || (format == ImageFormat.JPEG) || (format == ImageFormat.YUY2);    }    @UiThreadTest   ])', 1), ('([2:/android/hardware/cts/CameraTest.java]:[VIEW]:[2]:method_text:[ld be decodable"",                BitmapFactory.decodeFile(mJpegPath));    }    @UiThreadTest   ])', 1), ('([3:/android/hardware/cts/CameraTest.java]:[VIEW]:[3]:method_text:[assertNull(exif.getAttribute(ExifInterface.TAG_GPS_PROCESSING_METHOD));    }    @UiThreadTest   ])', 1), ('([16:/android/hardware/cts/CameraTest.java]:[VIEW]:[16]:method_text:[r.stop();        } finally {            recorder.release();        }    }    @UiThreadTest   ])', 1), ('([33:/android/hardware/cts/CameraTest.java]:[VIEW]:[33]:method_text:[r3 == 1) {                mPreviewDone.open();            }        }    }    @UiThreadTest   ])', 1), ('([4:/android/hardware/cts/CameraTest.java]:[VIEW]:[4]:method_text:[    waitForSnapshotDone();        }        terminateMessageLooper();    }    @UiThreadTest   ])', 1), ('([2:/android/hardware/cts/CameraTest.java]:[VIEW]:[2]:method_text:[f (stopped) {                mZoomDone.open();            }        }    }    @UiThreadTest   ])', 1), ('([5:/android/hardware/cts/CameraTest.java]:[VIEW]:[5]:method_text:[             distances[Parameters.FOCUS_DISTANCE_FAR_INDEX]);        }    }    @UiThreadTest   ])', 1), ('([5:/android/hardware/cts/CameraTest.java]:[VIEW]:[5]:method_text:[                     distances2[Parameters.FOCUS_DISTANCE_FAR_INDEX]);    }    @UiThreadTest   ])', 1), ('([61:/android/hardware/cts/CameraTest.java]:[VIEW]:[61]:method_text:[= PREVIEW_CALLBACK_RECEIVED;            mPreviewDone.open();        }    }    @UiThreadTest   ])', 1), ('([33:/android/hardware/cts/CameraTest.java]:[VIEW]:[33]:method_text:[ "")"",                    Character.isLetter(c) && c != \'x\');        }    }    @UiThreadTest   ])', 1), ('([3:/android/hardware/cts/CameraTest.java]:[VIEW]:[3]:method_text:[            }            }        }        terminateMessageLooper();    }    @UiThreadTest   ])', 1), ('([4:/android/hardware/cts/CameraTest.java]:[VIEW]:[4]:method_text:[lSize, parameters.getPreviewSize());        terminateMessageLooper();    }    @UiThreadTest   ])', 1), ('([1:/android/hardware/cts/CameraTest.java]:[VIEW]:[1]:method_text:[rFocusDone();            }        }        terminateMessageLooper();    }    @UiThreadTest   ])', 1), ('([12:/android/hardware/cts/CameraTest.java]:[VIEW]:[12]:method_text:[D, mPreviewCallbackResult);        }        terminateMessageLooper();    }    @UiThreadTest   ])', 1), ('([46:/android/hardware/cts/CameraTest.java]:[VIEW]:[46]:method_text:[callback, id "" + mId + ""."");            mPreviewDone.open();        }    }    @UiThreadTest   ])', 1), ('([2:/android/hardware/cts/CameraTest.java]:[VIEW]:[2]:method_text:[    }    }    // Apps should be able to call startPreview in jpeg callback.    @UiThreadTest   ])', 1), ('([7:/android/hardware/cts/CameraTest.java]:[VIEW]:[7]:method_text:[xception e) {            }            mSnapshotDone.open();        }    }    @UiThreadTest   ])', 1), ('([8:/android/hardware/cts/CameraTest.java]:[VIEW]:[8]:method_text:[{            recorder.release();            mCamera.lock();        }    }    @UiThreadTest   ])', 1), ('([21:/android/hardware/cts/CameraTest.java]:[VIEW]:[21]:method_text:[            break;        }        mCamera.setParameters(parameters);    }    @UiThreadTest   ])', 1), ('([3:/android/hardware/cts/CameraTest.java]:[VIEW]:[3]:method_text:[(face.id != faces[i + 1].id);                }            }        }    }    @UiThreadTest   ])', 1), ('([6:/android/hardware/cts/CameraTest.java]:[VIEW]:[6]:method_text:[     }            mCamera.stopPreview();            terminateMessageLooper();        }    }   ])', 1), ('([20:/android/hardware/cts/CameraTest.java]:[VIEW]:[20]:method_text:[one.close();        }        mCamera.stopPreview();        terminateMessageLooper();    }   ])', 1), ('([3:/android/hardware/cts/CameraTest.java]:[VIEW]:[3]:method_text:[       return smallestPicSize;        } else {            return defaultPicSize;        }    }}])', 1), ('([1:/android/os/cts/PowerManagerTests.java]:[android.intent.action.VIEW]:[1]:method_text:[e, ""mailto:""));        mDevice.executeShellCommand(String.format(viewUriTemplate, ""tel:""));    }}])', 1), ('([4:/android/os/cts/PowerManagerTests.java]:[VIEW]:[4]:method_text:[e, ""mailto:""));        mDevice.executeShellCommand(String.format(viewUriTemplate, ""tel:""));    }}])', 1), ('([4:/android/transition/cts/ChangeTransformTest.java]:[VIEW]:[4]:method_text:[= new ChangeTransform();        mTransition = mChangeTransform;        resetListener();    }   ])', 1), ('([3:/android/transition/cts/ChangeTransformTest.java]:[VIEW]:[3]:method_text:[.getTranslationX(), 0.0f);        assertEquals(600f, redSquare.getTranslationY(), 0.0f);    }   ])', 1), ('([3:/android/transition/cts/ChangeTransformTest.java]:[VIEW]:[3]:method_text:[ecute.        waitForEnd(800);        assertEquals(45f, redSquare.getRotation(), 0.0f);    }   ])', 1), ('([3:/android/transition/cts/ChangeTransformTest.java]:[VIEW]:[3]:method_text:[(2f, redSquare.getScaleX(), 0.0f);        assertEquals(3f, redSquare.getScaleY(), 0.0f);    }   ])', 1), ('([24:/android/transition/cts/ChangeTransformTest.java]:[VIEW]:[24]:method_text:[E, mActivity.findViewById(R.id.text).getVisibility());        });        waitForEnd(800);    }}])', 1), ('([1:/android/graphics/drawable/cts/BitmapDrawableTest.java]:[VIEW]:[1]:method_text:[ontext = InstrumentationRegistry.getTargetContext();    }    @SuppressWarnings(""deprecation"")   ])', 1), ('([3:/com/android/cts/verifier/security/UnlockedDeviceRequiredTest.java]:[VIEW]:[3]:method_text:[iometricManager mBiometricManager;        private KeyguardManager mKeyguardManager;        private])', 1), ('([3:/android/assist/cts/LargeViewHierarchyTest.java]:[VIEW]:[3]:method_text:[rotected void customSetup() throws Exception {        startTestActivity(TEST_CASE_TYPE);    }   ])', 1), ('([1:/android/assist/cts/LargeViewHierarchyTest.java]:[VIEW]:[1]:method_text:[cture(Utils.getTestAppComponent(TEST_CASE_TYPE),                false /*FLAG_SECURE set*/);    }}])', 1), ('([1:/android/widget/cts/FilterTest.java]:[VIEW]:[1]:method_text:[straint());        assertSame(mMockFilter.getExpectResults(), mMockFilter.getResults());    }   ])', 1), ('([1:/android/widget/cts/FilterTest.java]:[VIEW]:[1]:method_text:[    mResults = results;                mHadPublishedResults = true;            }        }    }}])', 1), ('([1:/com/android/cts/encryptionapp/EncryptionAppTest.java]:[VIEW]:[1]:method_text:[r.tearDown();        if (mActivity != null) {            mActivity.finish();        }    }   ])', 1), ('([4:/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java]:[VIEW]:[4]:method_text:[ue(mDevice.switchUser(mInitialUserId));            stopAndRemoveUser(mUserId);        }    }   ])', 1), ('([2:/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java]:[VIEW]:[2]:method_text:[      assertWebViewDeviceTestAsUserPasses(this, ""testCreateWebViewAndNavigate"", mUserId);    }   ])', 1), ('([3:/com/android/cts/webkit/WebViewHostSideMultipleProfileTest.java]:[VIEW]:[3]:method_text:[st-side test if the device-side test fails.                        .setCheckResults(true));    }}])', 1), ('([25:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[25]:method_text:[KER_PREFIX + ""/""  + SystemClock.elapsedRealtimeNanos();    }    @FlakyTest(bugId = 149246840)   ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[1]:method_text:[gFalse(""onStartInput"", marker),                           NOT_EXPECT_TIMEOUT);        }    }   ])', 1), ('([11:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[11]:method_text:[ event -> ""showSoftInput"".equals(event.getEventName()), TIMEOUT);            }        }    }   ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[1]:method_text:[           expectEvent(stream, editorMatcher(""onStartInput"", marker), TIMEOUT);        }    }   ])', 1), ('([8:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[8]:method_text:[}.</p>     *     * @see android.view.WindowManager.LayoutParams#mayUseInputMethod(int)     */   ])', 1), ('([6:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[6]:method_text:[ with     * {@link PopupWindow#INPUT_METHOD_NEEDED} does not affect IME visibility.</p>     */   ])', 1), ('([8:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[8]:method_text:[hould continue to work after     * the IME target application gains window focus again.     */   ])', 1), ('([1:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[1]:method_text:[ }    @AppModeFull(reason = ""Instant apps cannot hold android.permission.SYSTEM_ALERT_WINDOW"")   ])', 1), ('([17:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[17]:method_text:[           () -> TextUtils.equals(editText.getText(), ""test commit""), TIMEOUT);        }    }   ])', 1), ('([4:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[4]:method_text:[ }    @AppModeFull(reason = ""Instant apps cannot hold android.permission.SYSTEM_ALERT_WINDOW"")   ])', 1), ('([6:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[6]:method_text:[       assertTrue(uiThreadSignal.await(EXPECT_TIMEOUT, TimeUnit.MILLISECONDS));        }    }   ])', 1), ('([5:/android/view/inputmethod/cts/FocusHandlingTest.java]:[VIEW]:[5]:method_text:[ll AutoCloseable autoCloseable) {            return new CloseOnce(autoCloseable);        }    }}])', 1), ('([2:/com/android/cts/ephemeralapp1/ClientTest.java]:[ACTION_VIEW]:[2]:method_text:[me,                    is(""com.android.cts.ephemeralapp1.EphemeralProvider""));        }    }   ])', 1), ('([1:/com/android/cts/ephemeralapp1/ClientTest.java]:[ACTION_VIEW]:[1]:method_text:[      null /*sortOrder*/);            assertThat(testCursor, is(nullValue()));        }    }   ])', 1), ('([2:/com/android/cts/ephemeralapp1/ClientTest.java]:[ACTION_VIEW]:[2]:method_text:[1));            assertThat(testCursor.getString(1), is(""InstantAppProvider""));        }    }   ])', 1), ('([2:/com/android/cts/ephemeralapp1/ClientTest.java]:[ACTION_VIEW]:[2]:method_text:[        @Override        public void onServiceDisconnected(ComponentName name) {        }    }}])', 1), ('([2:/com/android/cts/ephemeralapp1/ClientTest.java]:[VIEW]:[2]:method_text:[me,                    is(""com.android.cts.ephemeralapp1.EphemeralProvider""));        }    }   ])', 1), ('([6:/com/android/cts/ephemeralapp1/ClientTest.java]:[VIEW]:[6]:method_text:[      null /*sortOrder*/);            assertThat(testCursor, is(nullValue()));        }    }   ])', 1), ('([3:/com/android/cts/ephemeralapp1/ClientTest.java]:[VIEW]:[3]:method_text:[1));            assertThat(testCursor.getString(1), is(""InstantAppProvider""));        }    }   ])', 1), ('([2:/com/android/cts/ephemeralapp1/ClientTest.java]:[VIEW]:[2]:method_text:[        @Override        public void onServiceDisconnected(ComponentName name) {        }    }}])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityButtonTest.java]:[VIEW]:[1]:method_text:[le.getService();        mButtonController = mService.getAccessibilityButtonController();    }   ])', 1), ('([1:/com/android/cts/managedprofile/LauncherAppsTest.java]:[ACTION_VIEW]:[1]:method_text:[ngletonList(s1));        shortcutManager.updateShortcuts(Collections.singletonList(s1));    }   ])', 1), ('([1:/com/android/cts/managedprofile/LauncherAppsTest.java]:[VIEW]:[1]:method_text:[ngletonList(s1));        shortcutManager.updateShortcuts(Collections.singletonList(s1));    }   ])', 1), ('([7:/android/graphics/drawable/cts/AnimatedVectorDrawableParameterizedTest.java]:[VIEW]:[7]:method_text:[  mActivity = mActivityRule.getActivity();        mResources = mActivity.getResources();    }   ])', 1), ('([23:/android/graphics/drawable/cts/AnimatedVectorDrawableParameterizedTest.java]:[VIEW]:[23]:method_text:[      });        return frameLatch.await(timeout, TimeUnit.MILLISECONDS);    }    @SmallTest   ])', 1), ('([8:/android/graphics/drawable/cts/AnimatedVectorDrawableParameterizedTest.java]:[VIEW]:[8]:method_text:[s(""Center point\'s color must be green"", 0xFF00FF00, endColor);        });    }    @LargeTest   ])', 1), ('([8:/android/graphics/drawable/cts/AnimatedVectorDrawableParameterizedTest.java]:[VIEW]:[8]:method_text:[             return false;                }            }        }        return true;    }   ])', 1), ('([18:/android/graphics/drawable/cts/AnimatedVectorDrawableParameterizedTest.java]:[VIEW]:[18]:method_text:[ect, dest);        Assert.assertEquals(PixelCopy.SUCCESS, copyResult);        return dest;    }}])', 1), ('([13:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[13]:method_text:[iewFullAdapter();        mEmptyAdapter = new HeaderViewEmptyAdapter();    }    @UiThreadTest   ])', 1), ('([10:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[10]:method_text:[header, footer, null);        new HeaderViewListAdapter(header, footer, mEmptyAdapter);    }   ])', 1), ('([14:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[14]:method_text:[er(header, null, null);        assertEquals(1, headerViewListAdapter.getHeadersCount());    }   ])', 1), ('([14:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[14]:method_text:[ull);        assertEquals(1, headerViewListAdapter.getFootersCount());    }    @UiThreadTest   ])', 1), ('([10:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[10]:method_text:[tAdapter(null, null, mFullAdapter);        assertFalse(headerViewListAdapter.isEmpty());    }   ])', 1), ('([27:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[27]:method_text:[derViewListAdapter.getHeadersCount());        headerViewListAdapter.removeHeader(null);    }   ])', 1), ('([27:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[27]:method_text:[.getFootersCount());        headerViewListAdapter.removeFooter(null);    }    @UiThreadTest   ])', 1), (""([32:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[32]:method_text:['s count + fullAdapter's count        assertEquals(5, headerViewListAdapter.getCount());    }   ])"", 1), ('([10:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[10]:method_text:[l, null, mEmptyAdapter);        assertFalse(headerViewListAdapter.areAllItemsEnabled());    }   ])', 1), ('([32:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[32]:method_text:[erViewListAdapter.isEnabled(1));        assertFalse(headerViewListAdapter.isEnabled(2));    }   ])', 1), ('([30:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[30]:method_text:[ViewListAdapter.getItem(3));        assertSame(data4, headerViewListAdapter.getItem(4));    }   ])', 1), ('([23:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[23]:method_text:[0));        assertEquals(mFullAdapter.getItemId(0), headerViewListAdapter.getItemId(2));    }   ])', 1), ('([7:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[7]:method_text:[pter(null, null, mFullAdapter);        assertTrue(headerViewListAdapter.hasStableIds());    }   ])', 1), ('([38:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[38]:method_text:[null, null));        assertSame(expected, headerViewListAdapter.getView(2, null, null));    }   ])', 1), ('([20:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[20]:method_text:[EM_VIEW_TYPE_HEADER_OR_FOOTER,                headerViewListAdapter.getItemViewType(2));    }   ])', 1), ('([11:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[11]:method_text:[ assertEquals(mFullAdapter.getViewTypeCount(), headerViewListAdapter.getViewTypeCount());    }   ])', 1), ('([4:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[4]:method_text:[SetObserver);        assertSame(mockDataSetObserver, mFullAdapter.getDataSetObserver());    }   ])', 1), ('([6:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[6]:method_text:[ataSetObserver);        assertNull(mFullAdapter.getDataSetObserver());    }    @UiThreadTest   ])', 1), ('([10:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[10]:method_text:[apter);        assertSame(mEmptyAdapter.getFilter(), headerViewListAdapter.getFilter());    }   ])', 1), ('([31:/android/widget/cts/HeaderViewListAdapterTest.java]:[VIEW]:[31]:method_text:[ected void publishResults(CharSequence constraint, Filter.FilterResults results) {        }    }}])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityServiceInfoTest.java]:[VIEW]:[1]:method_text:[lureRule mDumpOnFailureRule =            new AccessibilityDumpOnFailureRule();    @MediumTest   ])', 1), ('([5:/android/accessibilityservice/cts/AccessibilityServiceInfoTest.java]:[VIEW]:[5]:method_text:[eractiveUiTimeoutMillis(),                receivedInfo.getNonInteractiveUiTimeoutMillis());    }}])', 1), ('([6:/android/opengl/cts/NativeAttachShaderTest.java]:[VIEW]:[6]:method_text:[  * <pre>     * shader count : 2     * error        : GLES20.GL_NO_ERROR     * </pre>     */   ])', 1), ('([1:/android/autofillservice/cts/unittests/RegexValidatorTest.java]:[VIEW]:[1]:method_text:[nWith(AndroidJUnit4.class)@AppModeFull(reason = ""Unit test"")public class RegexValidatorTest {   ])', 1), ('([20:/android/autofillservice/cts/dropdown/WebViewActivityTest.java]:[VIEW]:[20]:method_text:[rActivityLaunched() {                mActivity = getActivity();            }        };    }   ])', 1), ('([2:/android/autofillservice/cts/dropdown/WebViewActivityTest.java]:[VIEW]:[2]:method_text:[etNextFillRequest();        // Assert not shown.        mUiBot.assertNoDatasetsEver();    }   ])', 1), ('([21:/android/autofillservice/cts/dropdown/WebViewActivityTest.java]:[VIEW]:[21]:method_text:[iled on testAutofillOneDataset()"", fillRequest.structure);            throw e;        }    }   ])', 1), ('([4:/android/autofillservice/cts/dropdown/WebViewActivityTest.java]:[VIEW]:[4]:method_text:[ameNode, ""DUDE"");            Helper.assertTextAndValue(passwordNode, ""SWEET"");        }    }   ])', 1), ('([12:/android/autofillservice/cts/dropdown/WebViewActivityTest.java]:[VIEW]:[12]:method_text:[eNode2, ""DUDE"");            Helper.assertTextAndValue(passwordNode2, ""SWEET"");        }    }   ])', 1), ('([21:/android/autofillservice/cts/dropdown/WebViewActivityTest.java]:[VIEW]:[21]:method_text:[           ID_OUTSIDE2);        Helper.assertTextAndValue(outside2SaveNode, ""SWEETER"");    }   ])', 1), ('([24:/android/autofillservice/cts/dropdown/WebViewActivityTest.java]:[VIEW]:[24]:method_text:[               ID_OUTSIDE2);        Helper.assertTextAndValue(outside2SaveNode, ""SWEETER"");    }}])', 1), ('([6:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[VIEW]:[6]:method_text:[nscreen(                sInstrumentation, sUiAutomation, mActivityRule);    }    @MediumTest   ])', 1), ('([15:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[VIEW]:[15]:method_text:[;        assertEquals(3, Selection.getSelectionEnd(editText.getText()));    }    @MediumTest   ])', 1), ('([8:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[VIEW]:[8]:method_text:[etSelectionStart());        assertEquals(0, editText.getSelectionEnd());    }    @MediumTest   ])', 1), ('([15:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[VIEW]:[15]:method_text:[        assertEquals(11, Selection.getSelectionEnd(editText.getText()));    }    @MediumTest   ])', 1), ('([15:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[VIEW]:[15]:method_text:[        assertEquals(34, Selection.getSelectionEnd(editText.getText()));    }    @MediumTest   ])', 1), ('([29:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[VIEW]:[29]:method_text:[;        assertEquals(2, Selection.getSelectionEnd(textView.getText()));    }    @MediumTest   ])', 1), ('([15:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[VIEW]:[15]:method_text:[        assertEquals(47, Selection.getSelectionEnd(editText.getText()));    }    @MediumTest   ])', 1), ('([2:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[VIEW]:[2]:method_text:[        // Verify the content.        assertTrue(TextUtils.isEmpty(editText.getText()));    }   ])', 1), ('([7:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[VIEW]:[7]:method_text:[t.performAction(                AccessibilityNodeInfo.ACTION_SET_SELECTION, arguments));    }   ])', 1), ('([10:/android/accessibilityservice/cts/AccessibilityTextTraversalTest.java]:[VIEW]:[10]:method_text:[T_MS);    }    private String getString(int id) {        return mActivity.getString(id);    }}])', 1), ('([1:/android/app/cts/DialogTest.java]:[SENDTO]:[1]:method_text:[nputEvent(event, true);        mInstrumentation.waitForIdleSync();        return event;    }   ])', 1), ('([4:/android/app/cts/DialogTest.java]:[SENDTO]:[4]:method_text:[ d.onTouchEvent);        assertFalse(d.isShowing());        touchMotionEvent.recycle();    }   ])', 1), ('([13:/android/app/cts/DialogTest.java]:[VIEW]:[13]:method_text:[tFor(mActivity.getDialog().getWindow().getDecorView()::hasWindowFocus);    }    @UiThreadTest   ])', 1), ('([4:/android/app/cts/DialogTest.java]:[VIEW]:[4]:method_text:[ assertTrue(d.isShowing());        dialogDismiss(d);        assertFalse(d.isShowing());    }   ])', 1), ('([2:/android/app/cts/DialogTest.java]:[VIEW]:[2]:method_text:[iew in dialog        assertEquals(d.getWindow().getCurrentFocus(), d.getCurrentFocus());    }   ])', 1), ('([37:/android/app/cts/DialogTest.java]:[VIEW]:[37]:method_text:[ViewById(R.id.password_view));        assertNotNull(d.findViewById(R.id.password_edit));    }   ])', 1), ('([12:/android/app/cts/DialogTest.java]:[VIEW]:[12]:method_text:[ound"");        } catch (IllegalArgumentException e) {            // expected        }    }   ])', 1), ('([3:/android/app/cts/DialogTest.java]:[VIEW]:[3]:method_text:[ d.onTouchEvent);        assertFalse(d.isShowing());        touchMotionEvent.recycle();    }   ])', 1), ('([1:/android/app/cts/DialogTest.java]:[VIEW]:[1]:method_text:[     mInstrumentation.waitForIdleSync();        assertTrue(d.isOnContentChangedCalled);    }   ])', 1), ('([2:/android/app/cts/DialogTest.java]:[VIEW]:[2]:method_text:[  * the user canceling the menu with the back/menu button, or when an item is selected).     */   ])', 1), ('([6:/android/app/cts/DialogTest.java]:[VIEW]:[6]:method_text:[lled should be true, see bug 1716918.        assertFalse(d.isOnContextMenuClosedCalled);    }   ])', 1), ('([2:/android/app/cts/DialogTest.java]:[VIEW]:[2]:method_text:[        mScenario.onActivity(activity -> {            d.takeKeyEvents(get);        });    }   ])', 1), ('([3:/android/app/cts/DialogTest.java]:[VIEW]:[3]:method_text:[       isShowContextMenuCalled = true;            return super.showContextMenu();        }    }}])', 1), ('([2:/android/appsecurity/cts/EphemeralTest.java]:[VIEW]:[2]:method_text:[f (mIsUnsupportedDevice) {            return;        }        uninstallTestPackages();    }   ])', 1), ('([3:/android/appsecurity/cts/EphemeralTest.java]:[VIEW]:[3]:method_text:[er(getDevice(), EPHEMERAL_1_PKG, WEBVIEW_TEST_CLASS,                ""testWebViewLoads"");    }   ])', 1), ('([3:/android/view/cts/MotionEvent_PointerPropertiesTest.java]:[VIEW]:[3]:method_text:[roperties(3, MotionEvent.TOOL_TYPE_MOUSE);        mPointerProperties = mBuilder.build();    }   ])', 1), ('([5:/android/app/cts/AlertDialog_BuilderCursorTest.java]:[VIEW]:[5]:method_text:[eFile != null) {            mDatabaseFile.delete();        }        super.tearDown();    }   ])', 1), ('([6:/android/app/cts/AlertDialog_BuilderCursorTest.java]:[VIEW]:[6]:method_text:[rtFalse(checkedTracker[3]);        verifyNoMoreInteractions(mockMultiChoiceClickListener);    }}])', 1), ('([8:/android/widget/cts/CursorTreeAdapterTest.java]:[VIEW]:[8]:method_text:[l;        }        mDatabase.close();        mDatabaseFile.delete();    }    @UiThreadTest   ])', 1), ('([25:/android/widget/cts/CursorTreeAdapterTest.java]:[VIEW]:[25]:method_text:[etView);        assertEquals(GROUP_ONE, retView.getText().toString());    }    @UiThreadTest   ])', 1), ('([65:/android/widget/cts/CursorTreeAdapterTest.java]:[VIEW]:[65]:method_text:[        public Cursor runQuery(CharSequence constraint) {            return null;        }    }}])', 1), ('([3:/android/translation/cts/unittests/TranslationValueTest.java]:[VIEW]:[3]:method_text:[st;import java.util.Arrays;@RunWith(AndroidJUnit4.class)public class TranslationValueTest {   ])', 1), ('([10:/android/view/cts/sdk28/ViewGroupTest.java]:[VIEW]:[10]:method_text:[y.getTargetContext();        mViewGroup = new MockViewGroup(mContext);    }    @UiThreadTest   ])', 1), ('([14:/android/view/cts/sdk28/ViewGroupTest.java]:[VIEW]:[14]:method_text:[       protected boolean fitSystemWindows(Rect insets) {            return true;        }    }}])', 1), ('([1:/android/opengl/cts/FramebufferTest.java]:[VIEW]:[1]:method_text:[ying from one offscreen framebuffer     * to another.     * <p>     * Requires GLES3.     */   ])', 1), ('([1:/android/server/wm/MultiDisplaySecurityTests.java]:[ACTION_VIEW]:[1]:method_text:[  * for simulated display. It is owned by system and is public, so should be accessible.     */   ])', 1), ('([12:/android/server/wm/MultiDisplaySecurityTests.java]:[VIEW]:[12]:method_text:[ an activity on a virtual display without special permission must not be     * allowed.     */   ])', 1), ('([1:/android/server/wm/MultiDisplaySecurityTests.java]:[VIEW]:[1]:method_text:[  * for simulated display. It is owned by system and is public, so should be accessible.     */   ])', 1), ('([4:/android/server/wm/MultiDisplaySecurityTests.java]:[VIEW]:[4]:method_text:[    return result;    }    /** Test that shell is allowed to launch on secondary displays. */   ])', 1), ('([3:/android/widget/cts/DigitalClockTest.java]:[VIEW]:[3]:method_text:[edOnAttachedToWindow());        linearLayout.removeView(digitalClock);    }    @UiThreadTest   ])', 1), ('([3:/android/widget/cts/DigitalClockTest.java]:[VIEW]:[3]:method_text:[ hasCalledOnDetachedFromWindow() {            return mCalledOnDetachedFromWindow;        }    }}])', 1), ('([2:/android/view/cts/ChoreographerTest.java]:[VIEW]:[2]:method_text:[  @Before    public void setup() {        mChoreographer = Choreographer.getInstance();    }   ])', 1), ('([11:/android/preference/cts/PreferenceRecycleTest.java]:[VIEW]:[11]:method_text:[flected when defined via     * {@link android.preference.Preference#setRecycleEnabled}.     */   ])', 1), ('([11:/android/preference/cts/PreferenceRecycleTest.java]:[VIEW]:[11]:method_text:[/ Recycling        assertTrue(noRecyclePref.wasConvertViewNullInLastCall); // Not recycling    }}])', 1), ('([4:/android/media/cts/MediaScannerTest.java]:[VIEW]:[4]:method_text:[1b);        mMediaScannerConnection.disconnect();        checkConnectionState(false);    }   ])', 1), ('([1:/android/content/pm/cts/shortcut/backup/publisher2/ShortcutManagerPreBackupTest.java]:[VIEW]:[1]:method_text:[y\'re ignored at this point.                .areAllWithActivity(getActivity(""MainActivity""));   }}])', 1), ('([5:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[VIEW]:[5]:method_text:[Bot.saveForAutofill(true, SAVE_DATA_TYPE_GENERIC);        sReplier.getNextSaveRequest();    }   ])', 1), ('([4:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[VIEW]:[4]:method_text:[        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""batch updated"");    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[VIEW]:[2]:method_text:[);        mActivity.tapLogin();        assertSaveUiIsShownWithTwoLines(""transformed"");    }   ])', 1), ('([1:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[VIEW]:[1]:method_text:[               .build();        }, () -> assertSaveUiIsShownWithTwoLines(""usernm..wd""));    }   ])', 1), ('([4:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[VIEW]:[4]:method_text:[            .build();        }, () -> assertSaveUiIsShownWithJustOneLine(""usernm..wd""));    }   ])', 1), ('([9:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[VIEW]:[9]:method_text:[)                        .isEqualTo(""First of his second name""),                null));    }   ])', 1), ('([7:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[VIEW]:[7]:method_text:[        }, () -> assertSaveUiWithLinesIsShown(line1Visitor, line2Visitor, line3Visitor));    }   ])', 1), ('([4:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[VIEW]:[4]:method_text:[        }, () -> assertSaveUiWithLinesIsShown(line1Visitor, line2Visitor, line3Visitor));    }   ])', 1), ('([2:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[VIEW]:[2]:method_text:[               .build();        }, () -> assertSaveUiWithoutCustomDescriptionIsShown());    }   ])', 1), ('([4:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[VIEW]:[4]:method_text:[xt = matchFirst ? ""polo"" : ""POLO"";        assertSaveUiIsShownWithTwoLines(expectedText);    }   ])', 1), ('([4:/android/autofillservice/cts/saveui/CustomDescriptionTest.java]:[VIEW]:[4]:method_text:[2Visitor);        mUiBot.assertChild(saveUi, ""third"", line3Visitor);        return saveUi;    }}])', 1), ('([1:/android/app/cts/LauncherActivityTest.java]:[VIEW]:[1]:method_text:[Up();        mInstrumentation = getInstrumentation();        mActivity = getActivity();    }   ])', 1), ('([40:/android/translation/cts/UiTranslationManagerTest.java]:[VIEW]:[40]:method_text:[resetTemporaryContentCaptureService();        Helper.resetTemporaryTranslationService();    }   ])', 1), ('([22:/android/translation/cts/UiTranslationManagerTest.java]:[VIEW]:[22]:method_text:[ureContext);        assertThat(helloText.getText()).isEqualTo(originalText.toString());    }   ])', 1), ('([35:/android/translation/cts/UiTranslationManagerTest.java]:[VIEW]:[35]:method_text:[(any());        Mockito.verify(mockCallback, Mockito.times(1)).onHideTranslation(any());    }   ])', 1), ('([16:/android/translation/cts/UiTranslationManagerTest.java]:[VIEW]:[16]:method_text:[ext);        assertThat(mTextView.getText().length()).isEqualTo(originalText.length());    }   ])', 1), ('([21:/android/translation/cts/UiTranslationManagerTest.java]:[VIEW]:[21]:method_text:[tentDescription().toString())                .isEqualTo(originalDescription.toString());    }   ])', 1), ('([4:/android/translation/cts/UiTranslationManagerTest.java]:[VIEW]:[4]:method_text:[ODO(b/191417938): add tests for the Activity destroyed for IME package callback        }    }   ])', 1), ('([4:/android/translation/cts/UiTranslationManagerTest.java]:[VIEW]:[4]:method_text:[      // TODO(b/191417938): add a test to verify startUiTranslation + Activity destroyed.    }   ])', 1), ('([48:/android/translation/cts/UiTranslationManagerTest.java]:[VIEW]:[48]:method_text:[      Mockito.verify(mockCallback, Mockito.times(1)).onClearTranslation(any(View.class));    }   ])', 1), ('([9:/android/translation/cts/UiTranslationManagerTest.java]:[VIEW]:[9]:method_text:[isNotNull();        assertThat(responseNotSetText.getText()).isEqualTo(""Hello World 1"");    }   ])', 1), ('([53:/android/translation/cts/UiTranslationManagerTest.java]:[VIEW]:[53]:method_text:[entResolver(),                            Settings.Secure.DEFAULT_INPUT_METHOD));        }    }}])', 1), ('([14:/android/server/wm/WindowInsetsAnimationTests.java]:[VIEW]:[14]:method_text:[getWindow().getDecorView();        assumeTrue(hasWindowInsets(mRootView, systemBars()));    }   ])', 1), ('([1:/android/server/wm/WindowInsetsAnimationTests.java]:[VIEW]:[1]:method_text:[);        commonAnimationAssertions(mActivity, before, false /* show */, systemBars());    }   ])', 1), ('([2:/android/server/wm/WindowInsetsAnimationTests.java]:[VIEW]:[2]:method_text:[e);        commonAnimationAssertions(mActivity, before, true /* show */, systemBars());    }   ])', 1), ('([6:/android/server/wm/WindowInsetsAnimationTests.java]:[VIEW]:[6]:method_text:[ack.statusAnimSteps.size() - 1).insets                        .getInsets(statusBars()));    }   ])', 1), ('([1:/android/server/wm/WindowInsetsAnimationTests.java]:[VIEW]:[1]:method_text:[te().isWindowVisible(""StatusBar""));        verifyZeroInteractions(mActivity.mCallback);    }   ])', 1), ('([1:/android/server/wm/WindowInsetsAnimationTests.java]:[VIEW]:[1]:method_text:[() -> mActivity.mCallback.animationDone);        verifyZeroInteractions(childCallback);    }   ])', 1), ('([5:/android/server/wm/WindowInsetsAnimationTests.java]:[VIEW]:[5]:method_text:[            insets -> NONE.equals(insets.getInsets(navigationBars()))), any());        }    }   ])', 1), ('([6:/android/server/wm/WindowInsetsAnimationTests.java]:[VIEW]:[6]:method_text:[, atLeastOnce()).onProgress(any(), any());        verify(mActivity.mCallback).onEnd(any());    }}])', 1), ('([1:/android/app/cts/TimePickerDialogTest.java]:[VIEW]:[1]:method_text:[Day;                mCallbackMinute = minute;            }        };    }    @UiThreadTest   ])', 1), ('([1:/android/autofillservice/cts/servicebehavior/DisableAutofillTest.java]:[VIEW]:[1]:method_text:[ofill allowlist.        Helper.resetApplicationAutofillOptions(sContext);    }    @Presubmit   ])', 1), ('([7:/android/widget/cts/FrameLayoutTest.java]:[VIEW]:[7]:method_text:[ctivity();        mFrameLayout = (FrameLayout) mActivity.findViewById(R.id.framelayout);    }   ])', 1), ('([1:/android/widget/cts/FrameLayoutTest.java]:[VIEW]:[1]:method_text:[oreground.getBounds());        assertTrue(mFrameLayout.gatherTransparentRegion(region));    }   ])', 1), ('([20:/android/widget/cts/FrameLayoutTest.java]:[VIEW]:[20]:method_text:[ht());        assertEquals(textView.getMeasuredWidth(), frameLayout.getMeasuredWidth());    }   ])', 1), ('([7:/android/widget/cts/FrameLayoutTest.java]:[VIEW]:[7]:method_text:[ params.width);        assertEquals(ViewGroup.LayoutParams.WRAP_CONTENT, params.height);    }   ])', 1), ('([2:/android/widget/cts/FrameLayoutTest.java]:[VIEW]:[2]:method_text:[arams.MATCH_PARENT, params.height);        assertEquals(Gravity.BOTTOM, params.gravity);    }   ])', 1), ('([2:/android/widget/cts/FrameLayoutTest.java]:[VIEW]:[2]:method_text:[ayoutParams(width, height);        assertTrue(myFrameLayout.checkLayoutParams(params2));    }   ])', 1), ('([2:/android/widget/cts/FrameLayoutTest.java]:[VIEW]:[2]:method_text:[ assertEquals(3, generated.rightMargin);        assertEquals(4, generated.bottomMargin);    }   ])', 1), ('([13:/android/widget/cts/FrameLayoutTest.java]:[VIEW]:[13]:method_text:[rams(ViewGroup.LayoutParams p) {            return super.generateLayoutParams(p);        }    }}])', 1), ('([4:/android/view/textclassifier/cts/TextSelectionTest.java]:[VIEW]:[4]:method_text:[ation TEXT_CLASSIFICATION =            new TextClassification.Builder().setText(TEXT).build();   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[VIEW]:[1]:method_text:[pdown when     * authentication done and then back to original Activity.     */    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[VIEW]:[1]:method_text:[Bot = getDropdownUiBot();        dropDownUiBot.assertDatasets(""Dataset"");    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[VIEW]:[1]:method_text:[;        mUiBot.assertNoDatasets();        mActivity.assertAutoFilled();    }    @Presubmit   ])', 1), ('([5:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[VIEW]:[5]:method_text:[le();        // Check the results.        mActivity.assertAutoFilled();    }    @Presubmit   ])', 1), ('([5:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[VIEW]:[5]:method_text:[ord"");        mUiBot.waitForIdle();        mActivity.assertAutoFilled();    }    @Presubmit   ])', 1), ('([1:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[VIEW]:[1]:method_text:[ts();        // Check the results.        mActivity.assertAutoFilled();    }    @Presubmit   ])', 1), ('([2:/android/autofillservice/cts/inline/InlineAuthenticationTest.java]:[VIEW]:[2]:method_text:[.selectByRelativeId(id);        mUiBot.waitForIdle();        mUiBot.assertDatasets(names);    }}])', 1), ('([24:/android/autofillservice/cts/activities/LoginActivity.java]:[VIEW]:[24]:method_text:[re checking autofill     * behavior.     * <pre>     * An example usage is:     * <code>     * ])', 1), ('([12:/android/autofillservice/cts/activities/LoginActivity.java]:[VIEW]:[12]:method_text:[      private FillExpectation(String username) {            this(username, null);        }    }}])', 1), ('([1:/android/widget/cts/ImageButtonTest.java]:[VIEW]:[1]:method_text:[tivity();        mImageButton = (ImageButton) mActivity.findViewById(R.id.image_button);    }   ])', 1), ('([2:/android/app/cts/ToolbarActionBarTest.java]:[VIEW]:[2]:method_text:[nOnMainSync(                () -> mActivity.getToolbar().inflateMenu(R.menu.flat_menu));    }   ])', 1), ('([1:/android/widget/cts/ArrayAdapterTest.java]:[VIEW]:[1]:method_text:[       mArrayAdapter = new ArrayAdapter<>(mContext, R.layout.simple_dropdown_item_1line);    }   ])', 1), ('([19:/android/widget/cts/ArrayAdapterTest.java]:[VIEW]:[19]:method_text:[ew(0, textView, null));        assertEquals(STR1, textView.getText());    }    @UiThreadTest   ])', 1), ('([6:/android/widget/cts/ArrayAdapterTest.java]:[VIEW]:[6]:method_text:[ TextView(mContext);        mArrayAdapter.getView(-1, textView, null);    }    @UiThreadTest   ])', 1), ('([6:/android/widget/cts/ArrayAdapterTest.java]:[VIEW]:[6]:method_text:[w(mContext);        mArrayAdapter.getDropDownView(-1, textView, null);    }    @UiThreadTest   ])', 1), ('([6:/android/widget/cts/ArrayAdapterTest.java]:[VIEW]:[6]:method_text:[       mArrayAdapter.getView(mArrayAdapter.getCount(), textView, null);    }    @UiThreadTest   ])', 1), ('([6:/android/widget/cts/ArrayAdapterTest.java]:[VIEW]:[6]:method_text:[ontext);        mArrayAdapter.getDropDownView(mArrayAdapter.getCount(), textView, null);    }   ])', 1), ('([4:/androi"	"https://developer.android.com"	""	"[('VIEW', 1372), ('ACTION_VIEW', 15), ('SENDTO', 3), ('android.intent.action.VIEW', 2)]"	"[('[android.autofillservice.cts.dropdown.AuthenticationTest testDatasetAuthTwoFields CtsAutoFillServiceTestCases]', 5), ('[android.fragment.cts.FragmentViewTests isDetached CtsFragmentTestCases]', 5), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityCompatModeTest testMultipleUrlBars_firstDoesNotExist CtsAutoFillServiceTestCases]', 5), ('[android.autofillservice.cts.dropdown.AuthenticationTest testDatasetAuthFilteringUsingRegex CtsAutoFillServiceTestCases]', 4), ('[android.autofillservice.cts.dropdown.AuthenticationTest testFillResponseAuthBothFields CtsAutoFillServiceTestCases]', 4), ('[android.autofillservice.cts.saveui.CustomDescriptionTest assertSaveUiWithoutCustomDescriptionIsShown CtsAutoFillServiceTestCases]', 4), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testAutofillCallbacks CtsAutoFillServiceTestCases]', 4), ('[android.fragment.cts.FragmentAnimatorTest getVisibility CtsFragmentTestCases]', 4), ('[android.fragment.cts.FragmentViewTests getVisibility CtsFragmentTestCases]', 4), ('[android.provider.cts.SettingsPanelTest isNull CtsProviderTestCases]', 3), ('[android.autofillservice.cts.dropdown.WebViewActivityTest testAutofillAndSave CtsAutoFillServiceTestCases]', 3), ('[com.android.cts.splitapp.SplitAppTest testFeatureWarmBase None]', 2), ('[android.webkit.cts.WebSettingsTest testAccessJavaScriptCanOpenWindowsAutomatically CtsWebkitTestCases]', 2), ('[android.os.cts.PowerManagerTests testCachedProcessReleasesWakeLock CtsOsHostTestCases]', 2), ('[com.android.cts.ephemeralapp1.ClientTest testQuery None]', 2), ('[com.android.cts.ephemeralapp1.ClientTest testStartNormal None]', 2), ('[com.android.cts.ephemeralapp1.ClientTest testStartExposed04 None]', 2), ('[com.android.cts.ephemeralapp1.ClientTest testStartExposed05 None]', 2), ('[com.android.cts.ephemeralapp1.ClientTest testStartEphemeral None]', 2), ('[com.android.cts.ephemeralapp1.ClientTest testGetChangedPackages None]', 2), ('[android.autofillservice.cts.dropdown.WebViewActivityTest testAutofillOneDataset CtsAutoFillServiceTestCases]', 2), ('[android.app.cts.DialogTest testTouchEvent CtsAppTestCases]', 2), ('[android.server.wm.MultiDisplaySecurityTests testConsequentLaunchActivityFromVirtualDisplayNoEmbedding CtsWindowManagerDeviceTestCases]', 2), ('[android.autofillservice.cts.saveui.CustomDescriptionTest assertSaveUiWithCustomDescriptionIsShown CtsAutoFillServiceTestCases]', 2), ('[android.provider.cts.contacts.ContactsContract_ContactsTest testContentUri CtsContactsProviderTestCases]', 2), ('[com.android.cts.normalapp.ClientTest testStartEphemeral None]', 2), ('[android.os.cts.StrictModeTest testFileUriExposure None]', 2), ('[android.os.cts.StrictModeTest testContentUriWithoutPermission None]', 2), ('[android.os.cts.StrictModeTest testVmPenaltyListener None]', 2), ('[android.fragment.cts.FragmentViewTests isHidden CtsFragmentTestCases]', 2), ('[android.view.cts.SystemGestureExclusionRectsTest isEmpty CtsViewTestCases]', 2), ('[android.security.cts.Poc17_11 testPocCVE_2017_0859 CtsSecurityBulletinHostTestCases]', 2), ('[android.widget.cts.RemoteViewsTest testSetOnClickPendingIntent CtsWidgetTestCases]', 2), ('[android.content.pm.cts.shortcut.backup.publisher4.ShortcutManagerPreBackupTest testPreBackup None]', 1), ('[android.text.method.cts.DateTimeKeyListenerTest testGetInputType CtsTextTestCases]', 1), ('[android.text.method.cts.DateTimeKeyListenerTest testDateTimeKeyListener CtsTextTestCases]', 1), ('[android.autofillservice.cts.dropdown.AuthenticationTest testFillResponseFiltering CtsAutoFillServiceTestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testGetCount CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testGetView CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testGetViewIndexTooLow CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testGetViewIndexTooHigh CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testSetDropDownViewResource CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testGetDropDownView CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testGetDropDownViewIndexTooLow CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testGetDropDownViewIndexTooHigh CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testAccessDropDownViewTheme CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testAccessViewBinder CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testSetViewImage CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleAdapterTest testSetViewText CtsWidgetTestCases]', 1), ('[android.media.tv.cts.HardwareSessionTest HardwareSessionTest CtsTvTestCases]', 1), ('[android.media.tv.cts.HardwareSessionTest testHardwareProxyTvInputService CtsTvTestCases]', 1), ('[android.server.wm.WindowInputTests testMoveWindowAndTap CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testTouchModalWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testFilterTouchesWhenObscuredByWindowFromSameUid CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testFilterTouchesWhenObscuredByWindowFromDifferentUid CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testFlagTouchesWhenObscuredByWindowFromDifferentUid CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testDoNotFlagTouchesWhenObscuredByZeroOpacityWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testFlagTouchesWhenObscuredByMinPositiveOpacityWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testFlagTouchesWhenPartiallyObscuredByZeroOpacityWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testDoNotFlagTouchesWhenPartiallyObscuredByNotTouchableZeroOpacityWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testTrustedOverlapWindow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testWindowBecomesUnTouchable CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testTapInsideUntouchableWindowResultInOutsideTouches CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testTapOutsideUntouchableWindowResultInOutsideTouches CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInputTests testInjectFromThread CtsWindowManagerDeviceTestCases]', 1), ('[android.text.method.cts.TextKeyListenerTest testOnSpanAdded CtsTextTestCases]', 1), ('[android.text.method.cts.TextKeyListenerTest testClear CtsTextTestCases]', 1), ('[android.text.method.cts.TextKeyListenerTest testPressKey CtsTextTestCases]', 1), ('[android.text.method.cts.TextKeyListenerTest testOnKeyOther CtsTextTestCases]', 1), ('[android.view.cts.SoundEffectConstantsTest testGetContantForFocusDirection CtsViewTestCases]', 1), ('[android.view.cts.SoundEffectConstantsTest testGetConstantForFocusDirection CtsViewTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessingSizeFormat CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessingSizeFormatWithPreview CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testRecreateReprocessingSessions CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testCrossSessionCaptureException CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testQueueImageWithoutRequest CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testBurstReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testMixedBurstReprocessing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessAbort CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessTimestamps CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessJpegExif CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.ReprocessCaptureTest testReprocessRequestKeys CtsCameraTestCases]', 1), ('[android.hardware.cts.Camera_SizeTest testConstructor CtsCameraTestCases]', 1), ('[android.hardware.cts.Camera_SizeTest testMaxAspectRatios CtsCameraTestCases]', 1), ('[android.slice.cts.SliceMetricsTest testLogOnTouch CtsSliceTestCases]', 1), ('[android.autofillservice.cts.dropdown.PreFilledLoginActivityTest testSanitization CtsAutoFillServiceTestCases]', 1), ('[android.media.cts.NativeDecoderTest SKIP_testExtractor CtsMediaTestCases]', 1), ('[android.security.cts.CVE_2021_0481.DeviceTest testUserPhotoSetUp None]', 1), ('[android.autofillservice.cts.commontests.DatasetFilteringTest DatasetFilteringTest CtsAutoFillServiceTestCases]', 1), ('[android.text.method.cts.ReplacementTransformationMethodTest testGetTransformation CtsTextTestCases]', 1), ('[android.text.method.cts.ReplacementTransformationMethodTest testGetTransformationWithAbmornalReplacement CtsTextTestCases]', 1), ('[android.text.method.cts.ReplacementTransformationMethodTest testGetTransformationWithAbnormalOriginal CtsTextTestCases]', 1), ('[android.hardware.camera2.cts.ConcurrentCameraTest testMandatoryConcurrentStreamCombination CtsCameraTestCases]', 1), ('[com.android.cts.isolatedsplitapp.SplitAppTest AppContextTestRule None]', 1), ('[com.android.cts.isolatedsplitapp.SplitAppTest shouldLoadFeatureAPolishLocale None]', 1), ('[com.android.cts.isolatedsplitapp.SplitAppTest shouldLoadFeatureBPolishLocale None]', 1), ('[com.android.cts.isolatedsplitapp.SplitAppTest shouldLoadFeatureCPolishLocale None]', 1), ('[com.android.cts.isolatedsplitapp.SplitAppTest shouldLoadFeatureADiffRevision None]', 1), ('[com.android.cts.isolatedsplitapp.SplitAppTest testNative_cannotLoadSharedLibrary None]', 1), ('[android.view.inputmethod.cts.ExtractedTextRequestTest createForTest CtsInputMethodTestCases]', 1), ('[android.widget.cts.EditTextTest testAutoSizeNotSupported CtsWidgetTestCases]', 1), ('[android.widget.cts.EditTextTest testGetTextBeforeConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.EditTextTest testCursorDrag CtsWidgetTestCases]', 1), ('[android.widget.cts.EditTextTest testSingleLineMaxLength_explicit_singleLine CtsWidgetTestCases]', 1), ('[android.widget.cts.EditTextTest testSingleLineMaxLength_explicit_singleLine_with_explicit_maxLength CtsWidgetTestCases]', 1), ('[android.widget.cts.EditTextTest testSingleLineMaxLength_singleLine_from_inputType CtsWidgetTestCases]', 1), ('[android.widget.cts.EditTextTest testSingleLineMaxLength_multiline CtsWidgetTestCases]', 1), ('[android.widget.cts.EditTextTest testSingleLineMaxLength_textView CtsWidgetTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest postTestTearDown CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testFindByText CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testFindByContentDescription CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testNoWindowsAccessIfFlagNotSet CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testTraverseWindowFromEvent CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testInteractWithAppWindow CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testSingleAccessibilityFocusAcrossWindows CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testPerformActionSetAndClearFocus CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testPerformActionSelect CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testPerformActionClearSelection CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testPerformActionClick CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testPerformActionLongClick CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testPerformCustomAction CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testGetEventSource CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testObjectContract CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityWindowQueryTest testShowInputMethodDialogWindow_resultIsApplicationType CtsAccessibilityServiceTestCases]', 1), ('[android.widget.cts.PopupMenuTest dismiss CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupMenuTest testDismissalViaTouch CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupMenuTest testItemViewAttributes CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupMenuTest testGroupDividerEnabledAPI CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupMenuTest testForceShowIcon_disabled CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupMenuTest testHoverSelectsMenuItem CtsWidgetTestCases]', 1), ('[android.widget.cts.SeekBarTest isAttachedToWindow CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testSize CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testAccessContentView CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testShowAsDropDown_ClipToScreen_Overlap_Offset CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testShowAsDropDown_ClipToScreen_Overlap_OutOfScreen CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testShowAsDropDown_ClipToScreen_TooBig CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testShowAtLocation CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testShowAsDropDownWithOffsets CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testOverlapAnchor CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testGetMaxAvailableHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testGetMaxAvailableHeight_topAnchor CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testGetMaxAvailableHeight_topAnchor_ignoringBottomDecoration CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testGetMaxAvailableHeight_topAnchor_offset2 CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testGetMaxAvailableHeight_topAnchor_offset2_ignoringBottomDecoration CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testGetMaxAvailableHeight_topAnchor_largeOffset CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testGetMaxAvailableHeight_topAnchor_largeOffset_ignoringBottomDecoration CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testGetMaxAvailableHeight_topAnchor_maxOffset CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testGetMaxAvailableHeight_topAnchor_maxOffset_ignoringBottomDecoration CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testGetMaxAvailableHeight_topAnchor_negativeOffset CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testGetMaxAvailableHeight_topAnchor_negativeOffset_ignoringBottomDecoration CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testGetMaxAvailableHeight_middleAnchor CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testGetMaxAvailableHeight_middleAnchor_ignoreBottomDecoration CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testGetMaxAvailableHeight_bottomAnchor CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testGetMaxAvailableHeight_bottomAnchor_ignoreBottomDecoration CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testDismiss CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testSetOnDismissListener CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testUpdate CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testEnterExitInterruption CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testEnterExitTransitionAsDropDown CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testEnterExitTransitionAtLocation CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testEnterExitTransitionAsDropDownWithCustomBounds CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testUpdatePositionAndDimension CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testUpdateDimensionAndAlignAnchorView CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testUpdateDimensionAndAlignAnchorViewWithOffsets CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testIsAboveAnchor CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testSetTouchInterceptor CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testSetWindowLayoutMode CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testVerticallyClippedBeforeAdjusted CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testClipToScreenClipsToInsets CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testPositionAfterParentScroll CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testPositionAfterAnchorRemoval CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testAnchorInPopup CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testFocusAfterOrientation CtsWidgetTestCases]', 1), ('[android.widget.cts.PopupWindowTest testWinAnimationDurationNoShortenByTinkeredScale CtsWidgetTestCases]', 1), ('[android.transition.cts.ChangeImageTransformTest resetListener CtsTransitionTestCases]', 1), ('[android.transition.cts.ChangeImageTransformTest testCenterInsideToFitEnd CtsTransitionTestCases]', 1), ('[android.transition.cts.ChangeImageTransformTest testNullAnimatorKeepsImagePadding CtsTransitionTestCases]', 1), ('[android.view.cts.TextureViewStressTest TextureViewStressTest CtsViewTestCases]', 1), ('[android.view.cts.TextureViewStressTest testTextureViewStress48Hz CtsViewTestCases]', 1), ('[android.view.cts.TextureViewStressTest testTextureViewStress60Hz CtsViewTestCases]', 1), ('[android.view.cts.TextureViewStressTest testTextureViewStress70Hz CtsViewTestCases]', 1), ('[android.view.cts.TextureViewStressTest testTextureViewStress200Hz CtsViewTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationSynchronicityTests testControl_rendersSynchronouslyBetweenImeWindowAndAppContent CtsWindowManagerDeviceTestCases]', 1), ('[android.media.cts.PresentationSyncTest PresentationSyncTest CtsMediaTestCases]', 1), ('[android.media.cts.PresentationSyncTest testThroughput CtsMediaTestCases]', 1), ('[android.widget.cts.SimpleExpandableListAdapterTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleExpandableListAdapterTest testGetChildView CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleExpandableListAdapterTest testGetChildViewGroupPositionTooLow CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleExpandableListAdapterTest testGetChildViewGroupPositionTooHigh CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleExpandableListAdapterTest testGetChildViewChildPositionTooLow CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleExpandableListAdapterTest testGetChildViewChildPositionTooHigh CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleExpandableListAdapterTest testNewChildView CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleExpandableListAdapterTest testGetGroupCount CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleExpandableListAdapterTest testGetGroupView CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleExpandableListAdapterTest testGetGroupViewGroupPositionTooLow CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleExpandableListAdapterTest testGetGroupViewGroupPositionTooHigh CtsWidgetTestCases]', 1), ('[android.widget.cts.SimpleExpandableListAdapterTest testNewGroupView CtsWidgetTestCases]', 1), ('[android.text.method.cts.CharacterPickerDialogTest testConstructor CtsTextTestCases]', 1), ('[android.text.method.cts.CharacterPickerDialogTest testConstructorNullContext CtsTextTestCases]', 1), ('[android.text.method.cts.CharacterPickerDialogTest testOnItemClick CtsTextTestCases]', 1), ('[android.text.method.cts.CharacterPickerDialogTest testOnClick CtsTextTestCases]', 1), ('[android.assist.cts.TextViewTest testTextView CtsAssistTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testCameraLaunch CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testSingleCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testMultipleCapture CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testReprocessingLatency CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testReprocessingThroughput CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testHighQualityReprocessingLatency CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testHighQualityReprocessingThroughput CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.PerformanceTest testReprocessingCaptureStall CtsCameraTestCases]', 1), ('[android.mediav2.cts.EncodeDecodeAccuracyTest isValid CtsMediaV2TestCases]', 1), ('[android.webkit.cts.WebSettingsTest WebSettingsTest CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testUserAgentString_default CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessUserAgentString CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessAllowFileAccess CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessCacheMode_defaultValue CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessCacheMode_cacheElseNetwork CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessCacheMode_noCache CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessCacheMode_cacheOnly CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessCursiveFontFamily CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessFantasyFontFamily CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessFixedFontFamily CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessSansSerifFontFamily CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessSerifFontFamily CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessStandardFontFamily CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessDefaultFontSize CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessDefaultFixedFontSize CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessDefaultTextEncodingName CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessJavaScriptEnabled CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessLayoutAlgorithm CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessMinimumFontSize CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessMinimumLogicalFontSize CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessPluginsEnabled CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testOffscreenPreRaster CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessPluginsPath CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessTextSize CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessUseDoubleTree CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessUseWideViewPort CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testSetNeedInitialFocus CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testSetRenderPriority CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessSupportMultipleWindows CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessSupportZoom CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAccessBuiltInZoomControls CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAppCacheDisabled CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAppCacheEnabled CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testDatabaseDisabled CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testDisabledActionModeMenuItems CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testLoadsImagesAutomatically_default CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testLoadsImagesAutomatically_httpImagesLoaded CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testLoadsImagesAutomatically_dataUriImagesLoaded CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testLoadsImagesAutomatically_blockLoadingImages CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testLoadsImagesAutomatically_loadImagesWithoutReload CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testBlockNetworkImage CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testBlockNetworkLoads CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testLocalImageLoads CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testIframesWhenAccessFromFileURLsEnabled CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testIframesWhenAccessFromFileURLsDisabled CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testXHRWhenAccessFromFileURLsEnabled CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testXHRWhenAccessFromFileURLsDisabled CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testAllowMixedMode CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testEnableSafeBrowsing CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testForceDark_default CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebSettingsTest testForceDark_rendersDark CtsWebkitTestCases]', 1), ('[android.view.cts.ViewGroupChildDrawingOrderTest testPublicGetChildDrawingOrderWithDefaultOrder CtsViewTestCases]', 1), ('[android.view.cts.ViewGroupChildDrawingOrderTest testPublicGetChildDrawingOrderWithCustomOrder CtsViewTestCases]', 1), ('[android.widget.cts.CheckBoxTest testToggleViaEmulatedTap CtsWidgetTestCases]', 1), ('[android.hardware.cts.SensorTest testRegisterTwiceWithSameSensor CtsSensorTestCases]', 1), ('[android.transition.cts.SharedElementCallbackTest testSnapshot CtsTransitionTestCases]', 1), ('[android.opengl.cts.ByteBufferTest testArraybackedFBTextureReadPixels CtsOpenGLTestCases]', 1), ('[android.server.wm.DisplayCutoutTests testDisplayCutout_always CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.DisplayCutoutTests testDisplayCutout_CutoutPaths CtsWindowManagerDeviceTestCases]', 1), ('[android.widget.cts.MediaControllerTest testMediaController CtsWidgetTestCases]', 1), ('[android.widget.cts.MediaControllerTest testShow CtsWidgetTestCases]', 1), ('[android.widget.cts.MediaControllerTest testOnTrackballEvent CtsWidgetTestCases]', 1), ('[android.widget.cts.MediaControllerTest testSetEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.MediaControllerTest testSetPrevNextListeners CtsWidgetTestCases]', 1), ('[android.view.cts.VerifyInputEventTest testMotionEvent CtsViewTestCases]', 1), ('[android.view.cts.VerifyInputEventTest testMotionEventWithoutHmac CtsViewTestCases]', 1), ('[android.view.cts.VerifyInputEventTest testTamperedMotionEvent CtsViewTestCases]', 1), ('[android.view.cts.VerifyInputEventTest testDeviceIdBecomesVirtualForInjectedMotions CtsViewTestCases]', 1), ('[android.media.cts.MediaActivityTest ArrayList CtsMediaTestCases]', 1), ('[android.server.wm.BlurTests verifyOnlyBackgroundImageVisible CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.BlurTests testBlurListener CtsWindowManagerDeviceTestCases]', 1), ('[android.permission2.cts.RestrictedPermissionsTest isTrue CtsPermission2TestCases]', 1), ('[android.transition.cts.ChangeBoundsTest testInterruptWithReverseResizeClip CtsTransitionTestCases]', 1), ('[android.widget.cts.ImageViewTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testConstructorNullContext1 CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testConstructorNullContext2 CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testConstructorNullContext3 CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testConstructorImportantForAutofill CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testConstructorImportantForContentCapture CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testInvalidateDrawable CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetAdjustViewBounds CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetMaxWidth CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetMaxHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testGetDrawable CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetImageIcon CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetImageResource CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetImageURI CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetImageDrawable CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetImageBitmap CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetImageState CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetSelected CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetImageLevel CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testAccessScaleType CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetNullScaleType CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testAccessImageMatrix CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testAccessBaseline CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetColorFilter1 CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetColorFilterTintBlendMode CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testClearColorFilter CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetColorFilter2 CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testDrawableStateChanged CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testOnCreateDrawableState CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testOnCreateDrawableStateInvalid CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testOnDraw CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testOnMeasure CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetFrame CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetColorFilterPreservesDrawableProperties CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testSetColorFilterPreservesDrawablePropertiesTintBlendMode CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testImageViewSetColorFilterPropagatedToDrawable CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testVerifyDrawable CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testImageTintBasics CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testImageTintBlendModeBasics CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testImageTintDrawableUpdates CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testImageTintVisuals CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testImageTintBlendModeVisuals CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testAlpha CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testImageAlpha CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testAnimateTransform CtsWidgetTestCases]', 1), ('[android.widget.cts.ImageViewTest testAnimateTransformWithNullPassed CtsWidgetTestCases]', 1), ('[android.view.cts.SurfaceViewSyncTest TestName CtsViewTestCases]', 1), ('[android.view.cts.SurfaceViewSyncTest testSmallRect CtsViewTestCases]', 1), ('[android.view.cts.SurfaceViewSyncTest testEmptySurfaceView CtsViewTestCases]', 1), ('[android.view.cts.SurfaceViewSyncTest testSurfaceViewSmallScale CtsViewTestCases]', 1), ('[android.view.cts.SurfaceViewSyncTest testSurfaceViewBigScale CtsViewTestCases]', 1), ('[android.view.cts.SurfaceViewSyncTest testVideoSurfaceViewTranslate CtsViewTestCases]', 1), ('[android.view.cts.SurfaceViewSyncTest testVideoSurfaceViewRotated CtsViewTestCases]', 1), ('[android.view.cts.SurfaceViewSyncTest testVideoSurfaceViewEdgeCoverage CtsViewTestCases]', 1), ('[android.view.cts.SurfaceViewSyncTest testVideoSurfaceViewCornerCoverage CtsViewTestCases]', 1), ('[android.devicepolicy.cts.CrossProfileAppsTest startMainActivity_callingFromPrimaryUser_targetIsWorkProfile_launches CtsDevicePolicyTestCases]', 1), ('[android.content.cts.ContextTest getContextUnderTest CtsContentTestCases]', 1), ('[android.content.cts.ContextTest testObtainStyledAttributes CtsContentTestCases]', 1), ('[android.autofillservice.cts.inline.InlineLoginActivityTest testScrollSuggestionView CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.inline.InlineLoginActivityTest testInlineSuggestionViewReleased CtsAutoFillServiceTestCases]', 1), ('[android.acceleration.cts.SoftwareAccelerationTest SoftwareAccelerationTest CtsAccelerationTestCases]', 1), ('[android.acceleration.cts.SoftwareAccelerationTest testIsHardwareAccelerated CtsAccelerationTestCases]', 1), ('[android.widget.cts.GalleryTest testConstructorNullContext3 CtsWidgetTestCases]', 1), ('[android.widget.cts.GalleryTest testSetSpacing CtsWidgetTestCases]', 1), ('[android.widget.cts.GalleryTest testSetGravity CtsWidgetTestCases]', 1), ('[android.widget.cts.GalleryTest testCheckLayoutParams CtsWidgetTestCases]', 1), ('[android.widget.cts.GalleryTest testComputeHorizontalScrollOffset CtsWidgetTestCases]', 1), ('[android.widget.cts.GalleryTest testDispatchSetPressed CtsWidgetTestCases]', 1), ('[android.widget.cts.GalleryTest testGenerateDefaultLayoutParams CtsWidgetTestCases]', 1), ('[android.widget.cts.GalleryTest testGetChildDrawingOrder CtsWidgetTestCases]', 1), ('[android.text.method.cts.QwertyKeyListenerTest testOnKeyDown_capitalizeNone CtsTextTestCases]', 1), ('[android.text.method.cts.QwertyKeyListenerTest testOnKeyDown_capitalizeCharacters CtsTextTestCases]', 1), ('[android.text.method.cts.QwertyKeyListenerTest testOnKeyDown_capitalizeSentences CtsTextTestCases]', 1), ('[android.text.method.cts.QwertyKeyListenerTest testOnKeyDown_capitalizeWords CtsTextTestCases]', 1), ('[android.widget.cts.ToastPresenterTest testUpdateLayoutParams CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testGetMaxScrollAmount CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testAddView CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testAddViewWithIndex CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testAddViewWithLayoutParams CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testAddViewWithIndexAndLayoutParams CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testAccessFillViewport CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testAccessSmoothScrollingEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testMeasureChild CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testMeasureChildWithMargins CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testMeasureSpecs CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testMeasureSpecsWithPadding CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testMeasureSpecsWithMargins CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testMeasureSpecsWithMarginsAndPadding CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testMeasureSpecsWithMarginsAndNoHintWidth CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testFillViewport CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testFillViewportWithScrollViewPadding CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testFillViewportWithChildMargins CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testFillViewportWithScrollViewPaddingAlreadyFills CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testFillViewportWithChildMarginsAlreadyFills CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testPageScroll CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testFullScroll CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testArrowScroll CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testSmoothScrollBy CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testSmoothScrollTo CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testComputeScrollDeltaToGetChildRectOnScreen CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testComputeHorizontalScrollRange CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testRequestChildFocus CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testRequestChildRectangleOnScreen CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testRequestLayout CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testFling CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testScrollTo CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testGetHorizontalFadingEdgeStrengths CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testEdgeEffectColors CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testStretchAtLeft CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testStretchAtLeftAndCatch CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testStretchAtRight CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testStretchAtRightAndCatch CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testRequestDisallowInterceptTouchEventNotCalled CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testFlingWhileStretchedLeft CtsWidgetTestCases]', 1), ('[android.widget.cts.HorizontalScrollViewTest testFlingWhileStretchedRight CtsWidgetTestCases]', 1), ('[android.server.wm.VrDisplayTests isUiModeLockedToVrHeadset CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplaySystemDecorationTests supportsMultiDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplaySystemDecorationTests testImeWindowCanShownWhenActivityMovedToDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.hardware.cts.CameraTest TestShutterCallback CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testTakePicture CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testPreviewCallback CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testStabilizationOneShotPreviewCallback CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testSetOneShotPreviewCallback CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testSetPreviewDisplay CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testDisplayOrientation CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testParameters CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testJpegThumbnailSize CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testJpegExif CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testLockUnlock CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testPreviewCallbackWithBuffer CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testImmediateZoom CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testSmoothZoom CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testFocusDistances CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testCancelAutofocus CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testPreviewPictureSizesCombination CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testPreviewFpsRange CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testSceneMode CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testInvalidParameters CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testGetParameterDuringFocus CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testPreviewFormats CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testMultiCameraRelease CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testMeteringAreas CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testJpegCallbackStartPreview CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testRecordingHint CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest test3ALockInteraction CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testFaceDetection CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testVideoSnapshot CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testPreviewCallbackWithPicture CtsCameraTestCases]', 1), ('[android.hardware.cts.CameraTest testCameraExternalConnected CtsCameraTestCases]', 1), ('[android.transition.cts.ChangeTransformTest resetListener CtsTransitionTestCases]', 1), ('[android.transition.cts.ChangeTransformTest testTranslation CtsTransitionTestCases]', 1), ('[android.transition.cts.ChangeTransformTest testRotation CtsTransitionTestCases]', 1), ('[android.transition.cts.ChangeTransformTest testScale CtsTransitionTestCases]', 1), ('[android.transition.cts.ChangeTransformTest testReparentWithOverlay CtsTransitionTestCases]', 1), ('[com.android.cts.verifier.security.UnlockedDeviceRequiredTest setPassFailButtonClickListeners None]', 1), ('[android.assist.cts.LargeViewHierarchyTest testTextView CtsAssistTestCases]', 1), ('[android.widget.cts.FilterTest testFilter1 CtsWidgetTestCases]', 1), ('[android.widget.cts.FilterTest testFilter2 CtsWidgetTestCases]', 1), ('[com.android.cts.encryptionapp.EncryptionAppTest finish None]', 1), ('[com.android.cts.webkit.WebViewHostSideMultipleProfileTest testSecondProfile None]', 1), ('[com.android.cts.webkit.WebViewHostSideMultipleProfileTest testManagedProfile None]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest getTestMarker CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testOnStartInputCalledOnceIme CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testSoftInputStateAlwaysVisibleWithoutFocusedEditorView CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testEditorStartsInput CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testSoftInputStateAlwaysVisibleFocusedEditorView CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testFocusableWindowDoesNotInvalidateExistingInputConnection CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testNonFocusablePopupWindowDoesNotAffectImeVisibility CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testSetShowInputOnFocus CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testMultiWindowFocusHandleOnDifferentUiThread CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testKeyboardStateAfterImeFocusableFlagChanged CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testOnCheckIsTextEditorRunOnUIThread CtsInputMethodTestCases]', 1), ('[android.view.inputmethod.cts.FocusHandlingTest testRequestFocusOnWindowFocusChanged CtsInputMethodTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedVectorDrawableParameterizedTest testAnimationOnLayer CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedVectorDrawableParameterizedTest testSingleFrameAnimation CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedVectorDrawableParameterizedTest testEmptyAnimatorSet CtsGraphicsTestCases]', 1), ('[android.graphics.drawable.cts.AnimatedVectorDrawableParameterizedTest testInfiniteAVD CtsGraphicsTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testGetHeadersCount CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testGetFootersCount CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testIsEmpty CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testRemoveHeader CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testRemoveFooter CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testGetCount CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testAreAllItemsEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testIsEnabled CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testGetItem CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testGetItemId CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testHasStableIds CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testGetView CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testGetItemViewType CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testGetViewTypeCount CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testRegisterDataSetObserver CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testUnregisterDataSetObserver CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testGetFilter CtsWidgetTestCases]', 1), ('[android.widget.cts.HeaderViewListAdapterTest testGetWrappedAdapter CtsWidgetTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityServiceInfoTest testFlagToString CtsAccessibilityServiceTestCases]', 1), ('[android.opengl.cts.NativeAttachShaderTest NativeAttachShaderTest CtsOpenGLTestCases]', 1), ('[android.autofillservice.cts.dropdown.WebViewActivityTest isEnabled CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.dropdown.WebViewActivityTest testSaveOnly CtsAutoFillServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest postTestTearDown CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testActionNextAndPreviousAtGranularityCharacterOverContentDescription CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testActionNextAndPreviousAtGranularityWordOverContentDescription CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testActionNextAndPreviousAtGranularityCharacterOverText CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testActionNextAndPreviousAtGranularityCharacterOverTextExtend CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testActionNextAndPreviousAtGranularityWordOverText CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testActionNextAndPreviousAtGranularityWordOverEditTextWithContentDescription CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testActionNextAndPreviousAtGranularityWordOverTextExtend CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testActionNextAndPreviousAtGranularityLineOverText CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testActionNextAndPreviousAtGranularityLineOverTextExtend CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testActionNextAndPreviousAtGranularityParagraphOverText CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testActionNextAndPreviousAtGranularityParagraphOverTextExtend CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testTextEditingActions CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testSetSelectionInContentDescription CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityTextTraversalTest testSelectionPositionForNonEditableView CtsAccessibilityServiceTestCases]', 1), ('[android.app.cts.DialogTest testOnKeyMultiple CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testShow CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testGetCurrentFocus CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetContentView CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testRequireViewById CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testOnContentChanged CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testDispatchKeyEvent CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testContextMenu CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testTakeKeyEvents CtsAppTestCases]', 1), ('[android.app.cts.DialogTest testSetDismissMessage CtsAppTestCases]', 1), ('[android.appsecurity.cts.EphemeralTest isDeviceUnsupported CtsAppSecurityHostTestCases]', 1), ('[android.appsecurity.cts.EphemeralTest testWebViewLoads CtsAppSecurityHostTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderCursorTest AlertDialog_BuilderCursorTest CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderCursorTest testSetCursor CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderCursorTest testSetSingleChoiceItemsWithParamCursor CtsAppTestCases]', 1), ('[android.app.cts.AlertDialog_BuilderCursorTest testSetMultiChoiceItemsWithParamCursor CtsAppTestCases]', 1), ('[android.widget.cts.CursorTreeAdapterTest exists CtsWidgetTestCases]', 1), ('[android.widget.cts.CursorTreeAdapterTest testGetGroupView CtsWidgetTestCases]', 1), ('[android.widget.cts.CursorTreeAdapterTest testGetChildView CtsWidgetTestCases]', 1), ('[android.view.cts.sdk28.ViewGroupTest testFitSystemWindows CtsViewTestCases]', 1), ('[android.server.wm.MultiDisplaySecurityTests supportsMultiDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.MultiDisplaySecurityTests testDisplayHasAccess_ExceptionWhenAddViewWithoutPresentOnPrivateDisplay CtsWindowManagerDeviceTestCases]', 1), ('[android.widget.cts.DigitalClockTest testOnDetachedFromWindow CtsWidgetTestCases]', 1), ('[android.widget.cts.DigitalClockTest testOnAttachedToWindow CtsWidgetTestCases]', 1), ('[android.preference.cts.PreferenceRecycleTest recycleSetViaXmlTest CtsPreferenceTestCases]', 1), ('[android.preference.cts.PreferenceRecycleTest recycleSetViaCodeTest CtsPreferenceTestCases]', 1), ('[android.media.cts.MediaScannerTest testMediaScanner CtsMediaTestCases]', 1), ('[android.content.pm.cts.shortcut.backup.publisher2.ShortcutManagerPreBackupTest testPreBackup None]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeBatchUpdates CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testSanitizationBeforeTransformations CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testMultipleBatchUpdates_allConditionsPass CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest testBatchUpdatesApplyUpdateFirstThenTransformations CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.CustomDescriptionTest assertSaveUiShowing CtsAutoFillServiceTestCases]', 1), ('[android.app.cts.LauncherActivityTest LauncherActivityTest CtsAppTestCases]', 1), ('[android.translation.cts.UiTranslationManagerTest testUiTranslation CtsTranslationTestCases]', 1), ('[android.translation.cts.UiTranslationManagerTest testUiTranslation_CustomViewTranslationCallback CtsTranslationTestCases]', 1), ('[android.translation.cts.UiTranslationManagerTest testUiTranslation_ViewTranslationCallback_paddingText CtsTranslationTestCases]', 1), ('[android.translation.cts.UiTranslationManagerTest testUiTranslation_hasContentDescription CtsTranslationTestCases]', 1), ('[android.translation.cts.UiTranslationManagerTest testIMEUiTranslationStateCallback CtsTranslationTestCases]', 1), ('[android.translation.cts.UiTranslationManagerTest testNonIMEUiTranslationStateCallback CtsTranslationTestCases]', 1), ('[android.translation.cts.UiTranslationManagerTest testVirtualViewUiTranslation CtsTranslationTestCases]', 1), ('[android.translation.cts.UiTranslationManagerTest testUiTranslation_translationResponseNotSetForCustomTextView CtsTranslationTestCases]', 1), ('[android.translation.cts.UiTranslationManagerTest testUiTranslation_customTextView CtsTranslationTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacksHide CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacksShow CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_overlapping CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_consumedByDecor CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_childDoesntGetCallback CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_childInsetting CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.WindowInsetsAnimationTests testAnimationCallbacks_withLegacyFlags CtsWindowManagerDeviceTestCases]', 1), ('[android.app.cts.TimePickerDialogTest OnTimeSetListener CtsAppTestCases]', 1), ('[android.autofillservice.cts.servicebehavior.DisableAutofillTest registerCallback CtsAutoFillServiceTestCases]', 1), ('[android.widget.cts.FrameLayoutTest testGatherTransparentRegion CtsWidgetTestCases]', 1), ('[android.widget.cts.FrameLayoutTest testAccessMeasureAllChildren CtsWidgetTestCases]', 1), ('[android.widget.cts.FrameLayoutTest testGenerateLayoutParams1 CtsWidgetTestCases]', 1), ('[android.widget.cts.FrameLayoutTest testGenerateLayoutParams2 CtsWidgetTestCases]', 1), ('[android.widget.cts.FrameLayoutTest testCheckLayoutParams CtsWidgetTestCases]', 1), ('[android.widget.cts.FrameLayoutTest testGenerateLayoutParamsFromMarginParams CtsWidgetTestCases]', 1), ('[android.widget.cts.FrameLayoutTest testForegroundTint CtsWidgetTestCases]', 1), ('[android.autofillservice.cts.inline.InlineAuthenticationTest InlineAuthenticationTest CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.inline.InlineAuthenticationTest testFillResponseAuth_withNewAutofillSessionStartByActivity CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.inline.InlineAuthenticationTest testFillResponseAuth CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.inline.InlineAuthenticationTest testDatasetAuthTwoFields CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.inline.InlineAuthenticationTest testDatasetAuthEphemeralNotSet CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.inline.InlineAuthenticationTest testDatasetAuthFilteringUsingRegex CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.inline.InlineAuthenticationTest testDatasetAuthClientStateSetOnIntentOnly CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.activities.LoginActivity finish CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.activities.LoginActivity testAutofill CtsAutoFillServiceTestCases]', 1), ('[android.app.cts.ToolbarActionBarTest ToolbarActionBarTest CtsAppTestCases]', 1), ('[android.widget.cts.ArrayAdapterTest testAccessView CtsWidgetTestCases]', 1), ('[android.widget.cts.ArrayAdapterTest testGetViewOutOfBoundsLow CtsWidgetTestCases]', 1), ('[android.widget.cts.ArrayAdapterTest testDropDownGetViewOutOfBoundsLow CtsWidgetTestCases]', 1), ('[android.widget.cts.ArrayAdapterTest testGetViewOutOfBoundsHigh CtsWidgetTestCases]', 1), ('[android.widget.cts.ArrayAdapterTest testDropDownGetViewOutOfBoundsHigh CtsWidgetTestCases]', 1), ('[android.widget.cts.ArrayAdapterTest testGetFilter CtsWidgetTestCases]', 1), ('[android.widget.cts.ArrayAdapterTest testSetDropDownViewResource CtsWidgetTestCases]', 1), ('[android.widget.cts.ArrayAdapterTest testSetDropDownViewResourceIllegal CtsWidgetTestCases]', 1), ('[android.widget.cts.ArrayAdapterTest testAccessDropDownViewTheme CtsWidgetTestCases]', 1), ('[android.fragment.cts.PostponedTransitionTest isAdded CtsFragmentTestCases]', 1), ('[android.fragment.cts.PostponedTransitionTest getVisibility CtsFragmentTestCases]', 1), ('[android.fragment.cts.PostponedTransitionTest isAttachedToWindow CtsFragmentTestCases]', 1), ('[android.autofillservice.cts.unittests.DatasetTest testBuilder_nullPresentation CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.unittests.DatasetTest testBuilder_setValueWithNullPresentation CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.unittests.DatasetTest testBuilder_setValueWithBothPresentation_bothNull CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest SimpleSaveActivityTest CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testAutoFillOneDatasetAndSave CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSave_launchIntent CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testSelectedDatasetsAreSentOnSaveRequest CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testNotTriggerAutofillWhenSetTextWhileInvisible CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testExplicitlySaveButtonOnly CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testTapUrlSpanOnCustomDescription_thenTapBack CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testTapUrlSpanOnSuccinctDescription_thenTapBack CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testTapUrlSpanOnCustomDescription_forwardAnotherActivityThenTapBack CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testTapUrlSpanOnSuccinctDescription_forwardAnotherActivityThenTapBack CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testTapUrlSpanOnCustomDescription_tapBackWithoutFinish CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.saveui.SimpleSaveActivityTest testTapUrlSpanOnSuccinctDescription_tapBackWithoutFinish CtsAutoFillServiceTestCases]', 1), ('[android.view.accessibility.cts.AccessibilityManagerTest disableAllServices CtsAccessibilityTestCases]', 1), ('[android.view.accessibility.cts.AccessibilityManagerTest testSendAccessibilityEvent CtsAccessibilityTestCases]', 1), ('[android.text.cts.MyanmarTest setupTest CtsTextTestCases]', 1), ('[android.text.cts.MyanmarTest testIfZawgyiLocaleIsSupported_fontWithQaagShouldExists CtsTextTestCases]', 1), ('[android.view.cts.ContentPaneFocusTest testAccessActionBar CtsViewTestCases]', 1), ('[android.view.cts.ContentPaneFocusTest testNoFocusablesInContent CtsViewTestCases]', 1), ('[android.autofillservice.cts.commontests.AbstractLoginNotImportantForAutofillTestCase testAutofill_none CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.AbstractLoginNotImportantForAutofillTestCase testAutofill_oneField CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.AbstractLoginNotImportantForAutofillTestCase testAutofill_twoFields CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.AbstractLoginNotImportantForAutofillTestCase testAutofill_manualRequest CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.AbstractLoginNotImportantForAutofillTestCase testAutofill_autoThenManualRequests CtsAutoFillServiceTestCases]', 1), ('[android.server.wm.CompatChangeTests createManagedConstrainDisplayApisFlagsSession CtsWindowManagerDeviceTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testInvalidOutput CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.OfflineSessionTest testUnsupportedOfflineSessionOutputs CtsCameraTestCases]', 1), ('[android.view.cts.ViewPaddingTest testPadding CtsViewTestCases]', 1), ('[android.server.wm.PrivacyIndicatorBoundsTests testStaticBoundsAreNotNull CtsWindowManagerDeviceTestCases]', 1), ('[android.translation.cts.unittests.TextViewTranslationTest TestRequestConsumer CtsTranslationTestCases]', 1), ('[android.translation.cts.unittests.TextViewTranslationTest testOnCreateViewTranslationRequest CtsTranslationTestCases]', 1), ('[android.translation.cts.unittests.TextViewTranslationTest testOnCreateViewTranslationRequest_emptyText_returnsNull CtsTranslationTestCases]', 1), ('[android.translation.cts.unittests.TextViewTranslationTest testOnCreateViewTranslationRequest_hasPassword_returnsNull CtsTranslationTestCases]', 1), ('[android.translation.cts.unittests.TextViewTranslationTest testOnCreateViewTranslationRequest_hasPasswordTransformationMethod_returnsNull CtsTranslationTestCases]', 1), ('[android.translation.cts.unittests.TextViewTranslationTest testOnCreateViewTranslationRequest_textSelectable_returnsNull CtsTranslationTestCases]', 1), ('[android.translation.cts.unittests.TextViewTranslationTest testOnCreateViewTranslationRequest_textEditable_returnsNull CtsTranslationTestCases]', 1), ('[android.translation.cts.unittests.TextViewTranslationTest testonViewTranslationResponse CtsTranslationTestCases]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest VirtualContainerActivityTest CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testAutofill_appContext CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testAutofillOverrideDispatchProvideAutofillStructure CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testAutofillManuallyOneDataset CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testSave_childViewsGone_notifyAfm CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testSave_childViewsGone_updateView CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testSave_parentViewGone CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testSave_submitButtonClicked CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityTest testDatasetFiltering CtsAutoFillServiceTestCases]', 1), ('[android.providerui.cts.MediaStoreUiTest testGetMediaUriAccess_MediaDocumentsProvider CtsProviderUiTestCases]', 1), ('[android.view.cts.ViewTest testConstructor CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testConstructorNullContext1 CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testConstructorNullContext2 CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testConstructor2 CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetContext CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetResources CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetAnimation CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetAnimation CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testClearAnimation CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testStartAnimationNull CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testStartAnimation CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testOnAnimation CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetParent CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessScrollIndicators CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetScrollIndicators CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testFindViewById CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testRequireViewById CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testRequireViewByIdNoId CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testRequireViewByIdInvalid CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testRequireViewByIdNotFound CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessTouchDelegate CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testMouseEventCallsGetPointerIcon CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessPointerIcon CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPointerIconOverlap CtsViewTestCases]', 1), ('[android.view.cts.ViewTest onResolvePointerIcon_horizontalCantScroll_pointerIsProperty CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessTag CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testOnSizeChanged CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetHitRectNull CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetHitRect CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testForceLayout CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testIsLayoutRequested CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testRequestLayout CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testLayout CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetBaseline CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessBackground CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetBackgroundResource CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessDrawingCacheBackgroundColor CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetBackgroundColor CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testVerifyDrawable CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetDrawingRect CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetFocusedRect CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetGlobalVisibleRectPoint CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetGlobalVisibleRect CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testComputeHorizontalScroll CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testComputeVerticalScroll CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetFadingEdgeStrength CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetLeftFadingEdgeStrength CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetRightFadingEdgeStrength CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetBottomFadingEdgeStrength CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetTopFadingEdgeStrength CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testResolveSize CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetDefaultSize CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessId CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessLongClickable CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessClickable CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessContextClickable CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetContextMenuInfo CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetOnCreateContextMenuListener CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testCreateContextMenu CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testCreateContextMenuNull CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAddFocusables CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetFocusables CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAddFocusablesWithoutTouchMode CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAddFocusablesInTouchMode CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAddKeyboardNavigationClusters CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testKeyboardNavigationClusterSearch CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetRootView CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetSolidColor CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetMinimumWidth CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetSuggestedMinimumWidth CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetMinimumHeight CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetSuggestedMinimumHeight CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessWillNotCacheDrawing CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessDrawingCacheEnabled CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetDrawingCache CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testBuildAndDestroyDrawingCache CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessWillNotDraw CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessDrawingCacheQuality CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testDispatchSetSelected CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessSelected CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testDispatchSetPressed CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessPressed CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessSoundEffectsEnabled CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessKeepScreenOn CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessDuplicateParentStateEnabled CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessEnabled CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessSaveEnabled CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testShowContextMenuNullParent CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testShowContextMenu CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testShowContextMenuXYNullParent CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testShowContextMenuXY CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testFitSystemWindows CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPerformClick CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetOnClickListener CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetOnGenericMotionListener CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPerformLongClickNullParent CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPerformLongClick CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPerformLongClickXYNullParent CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPerformLongClickXY CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPerformLongClickXY_WithListener CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetOnLongClickListener CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPerformContextClick CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetOnContextClickListener CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessOnFocusChangeListener CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessNextFocusUpId CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessNextFocusDownId CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessNextFocusLeftId CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessNextFocusRightId CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessMeasuredDimension CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testMeasure CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAccessLayoutParams CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testIsShown CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetDrawingTime CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testScheduleDrawable CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testUnscheduleDrawable CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetWindowVisibility CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetWindowToken CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testHasWindowFocus CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetHandler CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testRemoveCallbacks CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testCancelLongPress CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetViewTreeObserver CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetWindowAttachCount CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testOnAttachedToAndDetachedFromWindow CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetLocationInWindow CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetLocationInWindowNullArray CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetLocationInWindowSmallArray CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetLocationOnScreen CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetLocationOnScreenNullArray CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetLocationOnScreenSmallArray CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetAllowClickWhenDisabled CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAddTouchables CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetTouchables CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testInflate CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testIsInTouchMode CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testIsInEditMode CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPostInvalidate1 CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPostInvalidate2 CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPostInvalidateDelayed CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPost CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPostDelayed CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPlaySoundEffect CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testOnKeyShortcut CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testOnKeyMultiple CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testDispatchKeyShortcutEvent CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testDispatchKeyShortcutEventNull CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testOnTrackballEvent CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testDispatchTrackballMoveEvent CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testDispatchUnhandledMove CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testUnhandledKeys CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testWindowVisibilityChanged CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetLocalVisibleRect CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testMergeDrawableStates CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSaveAndRestoreHierarchyState CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testOnKeyDownOrUp CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testAddRemoveAffectsWrapContentLayout CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testDispatchKeyEvent CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testDispatchTouchEvent CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testOnTouchListener CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testInvalidate1 CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testInvalidate2 CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testInvalidate3 CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testInvalidateDrawable CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testOnFocusChanged CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testRestoreDefaultFocus CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testDrawableState CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testWindowFocusChanged CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testDraw CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testRequestFocusFromTouch CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testRequestRectangleOnScreen1 CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testRequestRectangleOnScreen2 CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testRequestRectangleOnScreen5 CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testRequestRectangleOnScreenWithScale CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testOnTouchEventTap CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testOnTouchEventScroll CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testBringToFront CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetApplicationWindowToken CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetBottomPaddingOffset CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetLeftPaddingOffset CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetRightPaddingOffset CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetTopPaddingOffset CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testIsPaddingOffsetRequired CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPadding CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetWindowVisibleDisplayFrame CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetScrollContainer CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testTouchMode CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testScrollbarStyle CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testScrollFading CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testScrolling CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testInitializeScrollbarsAndFadingEdge CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testScrollIndicators CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testScrollbarSize CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testOnStartAndFinishTemporaryDetach CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testKeyPreIme CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testHapticFeedback CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testInputConnection CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testFilterTouchesWhenObscured CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testBackgroundTint CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testStartActionModeWithParent CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testStartActionModeWithoutParent CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testStartActionModeTypedWithParent CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testStartActionModeTypedWithoutParent CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testVisibilityAggregated CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testOverlappingRendering CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow_detachedView CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testUpdateDragShadow_noActiveDrag CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testTranslationSetter CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testXYZ CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testOnHoverEvent CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testScaleXNaN CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testScaleXPositiveInfinity CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testScaleXNegativeInfinity CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testScaleYNaN CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testScaleYPositiveInfinity CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testScaleYNegativeInfinity CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testTransitionAlpha CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetGetOutlineShadowColor CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testTransformMatrixToGlobal CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testTransformMatrixToLocal CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testPivot CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetLeftTopRightBottom CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testGetUniqueDrawingId CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetVerticalScrollbarTrack CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetVerticalScrollbarThumb CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetHorizontalScrollbarTrack CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetHorizontalScrollbarThumb CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testSetTransitionVisibility CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testIsShowingLayoutBounds CtsViewTestCases]', 1), ('[android.view.cts.ViewTest testClipToOutline CtsViewTestCases]', 1), ('[android.fragment.cts.FragmentAnimatorTest isAttachedToWindow CtsFragmentTestCases]', 1), ('[android.fragment.cts.FragmentAnimatorTest isAdded CtsFragmentTestCases]', 1), ('[android.translation.cts.TranslationManagerTest testSingleTranslation CtsTranslationTestCases]', 1), ('[android.translation.cts.TranslationManagerTest testTranslation_partialResponses CtsTranslationTestCases]', 1), ('[com.android.cts.packageinstaller.ManualPackageInstallTest testManualInstallBlocked None]', 1), ('[android.autofillservice.cts.DuplicateIdActivityTest testDoNotRestoreDuplicateAutofillIds CtsAutoFillServiceTestCases]', 1), ('[android.view.cts.ViewAnimationMatrixTest testAnimationMatrixGetter CtsViewTestCases]', 1), ('[android.view.cts.ViewAnimationMatrixTest testAnimationMatrixAppliedDuringDrawing CtsViewTestCases]', 1), ('[android.view.cts.ViewAnimationMatrixTest testAnimationMatrixClearedWithPassingNull CtsViewTestCases]', 1), ('[android.mediapc.cts.PerformanceClassTest isHandheld CtsMediaPerformanceClassTestCases]', 1), ('[android.transition.cts.VisibilityTest testIsVisible CtsTransitionTestCases]', 1), ('[android.transition.cts.VisibilityTest testOnDisppear CtsTransitionTestCases]', 1), ('[android.transition.cts.VisibilityTest testApplyingTwoVisibility CtsTransitionTestCases]', 1), ('[android.view.cts.TouchDelegateTest testTwoPointers CtsViewTestCases]', 1), ('[android.view.cts.TouchDelegateTest testGetTouchDelegateInfo_withNullBounds_noException CtsViewTestCases]', 1), ('[android.view.cts.TouchDelegateTest testOnTouchExplorationHoverEvent_withNullBounds_noException CtsViewTestCases]', 1), ('[android.view.cts.TouchDelegateTest testOnTouchExplorationHoverEvent_whenA11yEbtDisabled_receiveNoEvent CtsViewTestCases]', 1), ('[android.text.util.cts.LinkifyTest testAddLinksToTextView CtsTextTestCases]', 1), ('[android.text.util.cts.LinkifyTest testAddLinksToTextViewNullWithWebUrls CtsTextTestCases]', 1), ('[android.text.util.cts.LinkifyTest testAddLinksToTextViewWithScheme CtsTextTestCases]', 1), ('[android.text.util.cts.LinkifyTest testAddLinksToTextViewWithSchemeNullView CtsTextTestCases]', 1), ('[android.text.util.cts.LinkifyTest testAddLinksToTextViewWithSchemeNullPattern CtsTextTestCases]', 1), ('[android.text.util.cts.LinkifyTest testAddLinksToTextViewWithSchemeAndFilter CtsTextTestCases]', 1), ('[android.text.util.cts.LinkifyTest testAddLinksToTextViewWithSchemeAndFilterNullView CtsTextTestCases]', 1), ('[android.text.util.cts.LinkifyTest testAddLinksToTextViewWithSchemeAndFilterNullPattern CtsTextTestCases]', 1), ('[android.text.util.cts.LinkifyTest testAddLinks_withTextView_addsLinksWhenDefaultSchemeIsNull CtsTextTestCases]', 1), ('[android.text.util.cts.LinkifyTest testAddLinks_withTextView_addsLinksWhenSchemesArrayIsNull CtsTextTestCases]', 1), ('[android.text.util.cts.LinkifyTest testAddLinks_withTextView_prependsDefaultSchemeToBeginingOfLink CtsTextTestCases]', 1), ('[android.text.util.cts.LinkifyTest testAddLinks_withTextView_doesNotPrependSchemeIfSchemeExists CtsTextTestCases]', 1), ('[android.view.cts.ActionModeCallback2Test testCallbackOnGetContentRectDefaultWithView CtsViewTestCases]', 1), ('[android.view.cts.ActionModeCallback2Test testCallbackOnGetContentRectDefaultWithoutView CtsViewTestCases]', 1), ('[android.view.cts.ViewSourceLayoutTest testGetSourceLayout CtsViewTestCases]', 1), ('[android.os.cts.StrictModeTest SimpleOnGestureListener None]', 1), ('[android.os.cts.StrictModeTest testIncorrectContextUse_Application_ThrowViolation None]', 1), ('[android.os.cts.StrictModeTest testIncorrectContextUse_DisplayContext_ThrowViolation None]', 1), ('[android.os.cts.StrictModeTest testIncorrectContextUse_WindowContext_NoViolation None]', 1), ('[android.os.cts.StrictModeTest testIncorrectContextUse_Activity_NoViolation None]', 1), ('[android.os.cts.StrictModeTest testIncorrectContextUse_UiDerivedContext_NoViolation None]', 1), ('[android.os.cts.StrictModeTest testIncorrectContextUse_UiDerivedDisplayContext_ThrowViolation None]', 1), ('[android.os.cts.StrictModeTest testIncorrectContextUse_ConfigContext None]', 1), ('[android.os.cts.StrictModeTest testIncorrectContextUse_ConfigDerivedDisplayContext None]', 1), ('[android.view.inputmethod.cts.ExtractedTextTest createForTest CtsInputMethodTestCases]', 1), ('[android.app.cts.NotificationStatsTest testConstructor CtsAppTestCases]', 1), ('[android.app.cts.NotificationStatsTest testViewedSettings CtsAppTestCases]', 1), ('[android.app.cts.NotificationStatsTest testWriteToParcel CtsAppTestCases]', 1), ('[android.provider.cts.contacts.ContactsContract_QuickContactsTest testPrioritizedMimeTypeAndExcludedMimeTypes CtsContactsProviderTestCases]', 1), ('[android.widget.cts.GridLayoutTest testCheckLayoutParams CtsWidgetTestCases]', 1), ('[android.widget.cts.GridLayoutTest testGenerateDefaultLayoutParams CtsWidgetTestCases]', 1), ('[android.widget.cts.GridLayoutTest testGenerateLayoutParamsFromMarginParams CtsWidgetTestCases]', 1), ('[android.widget.cts.GridLayoutTest testAlignment CtsWidgetTestCases]', 1), ('[android.webkit.cts.WebViewTransportTest WebViewTransportTest CtsWebkitTestCases]', 1), ('[android.webkit.cts.WebViewTransportTest testAccessWebView CtsWebkitTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testSettingsBinderParcel CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testBlackLevelLock CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testLensShadingMap CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAntiBandingModes CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testAeModeAndLock CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashControl CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testFlashTurnOff CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testCameraStabilizations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testDigitalZoom CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testZoomRatio CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testDigitalZoomPreviewCombinations CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.CaptureRequestTest testExtendedSceneModes CtsCameraTestCases]', 1), ('[android.text.method.cts.TransformationMethodTest isFocused CtsTextTestCases]', 1), ('[android.security.cts.MotionEventTest testActionOutsideDoesNotContainedObscuredInformation CtsSecurityTestCases]', 1), ('[android.text.method.cts.MetaKeyKeyListenerTest testPressKey CtsTextTestCases]', 1), ('[android.text.method.cts.MetaKeyKeyListenerTest testReleaseKey CtsTextTestCases]', 1), ('[android.app.cts.ActivityManagerMemoryClassTest ActivityManagerMemoryClassTest CtsAppTestCases]', 1), ('[android.autofillservice.cts.inline.InlineAugmentedContentTest InlineAugmentedContentTest CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.inline.InlineAugmentedContentTest testFillContent_contentUri_authFlow CtsAutoFillServiceTestCases]', 1), ('[android.media.cts.RemoteControllerTest OnClientUpdateListener CtsMediaTestCases]', 1), ('[android.text.method.cts.ForwardDeleteTest BaseKeyListener CtsTextTestCases]', 1), ('[android.hardware.camera2.cts.NativeStillCaptureTest testStillCapture CtsCameraTestCases]', 1), ('[android.transition.cts.ChangeScrollTest resetListener CtsTransitionTestCases]', 1), ('[android.transition.cts.ChangeScrollTest testChangeScroll CtsTransitionTestCases]', 1), ('[android.view.cts.input.InputDeviceKeyLayoutMapTest createDeviceRegisterCommand CtsViewTestCases]', 1), ('[android.security.cts.CertificateTest testNoRemovedCertificates CtsSecurityTestCases]', 1), ('[android.security.cts.CertificateTest testBlockCertificates CtsSecurityTestCases]', 1), ('[android.fragment.cts.FragmentViewTests replaceExisting CtsFragmentTestCases]', 1), ('[android.fragment.cts.FragmentViewTests testReplaceFragment CtsFragmentTestCases]', 1), ('[android.fragment.cts.FragmentViewTests addInvisibleAndGoneFragments CtsFragmentTestCases]', 1), ('[android.widget.cts.ResourceCursorTreeAdapterTest testNewChildView CtsWidgetTestCases]', 1), ('[android.widget.cts.ResourceCursorTreeAdapterTest testNewGroupView CtsWidgetTestCases]', 1), ('[android.compat.hiddenapi.cts.HostsideStatsdAtomTests testHiddenApiUsed None]', 1), ('[android.view.cts.SystemGestureExclusionRectsTest emptyList CtsViewTestCases]', 1), ('[android.view.inputmethod.cts.EditorInfoTest testEditorInfo CtsInputMethodTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAutoFill_neitherServiceCanAutofill CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAutoFill_neitherServiceCanAutofill_manualRequest CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAutoFill_neitherServiceCanAutofill_thenManualRequest CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAutoFill_notImportantForAutofill_thenManualRequest CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAutoFill_notImportantForAutofill_allowAutofillOnOtherField CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAutoFill_mainServiceReturnedNull_augmentedAutofillOneField CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAutoFill_augmentedFillRequestCancelled CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAutoFill_mainServiceReturnedNull_augmentedAutofillTwoFields CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testCancellationSignalCalledAfterTimeout CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testCancellationSignalCalled_retriggerAugmentedAutofill CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutoFill_multipleRequests CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutoFill_thenEditField CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutoFill_callback CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutoFill_rotateDevice CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutoFill_hasPreviousRequestViewFocused_requestAutofill CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutoFill_hasPreviousRequestViewNotFocused_requestAutofill CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutoFill_mainServiceDisabled CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutoFill_mainServiceDisabled_manualRequest CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutoFill_mainServiceDisabled_autoThenManualRequest CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutoFill_mainServiceDisabled_valueChangedOnSecondRequest CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutoFill_mainServiceDisabled_tappingSecondTimeNotTrigger CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutofill_packageNotWhitelisted CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.augmented.AugmentedLoginActivityTest testAugmentedAutofill_activityNotWhitelisted CtsAutoFillServiceTestCases]', 1), ('[android.widget.cts.ToolbarTest testTitleAndSubtitleContent CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testMenuContent CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testActionView CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testCollapseConfiguration CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testContentInsetsLtr CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testContentInsetsRtl CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testCurrentContentInsetsLtr CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testCurrentContentInsetsRtl CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testNavigationOnClickListener CtsWidgetTestCases]', 1), ('[android.widget.cts.ToolbarTest testItemViewAttributes CtsWidgetTestCases]', 1), ('[android.transition.cts.PropagationTest testCircularPropagation CtsTransitionTestCases]', 1), ('[android.transition.cts.PropagationTest testSidePropagationLeft CtsTransitionTestCases]', 1), ('[android.server.biometrics.BiometricSimpleTests testSimpleBiometricAuth CtsBiometricsTestCases]', 1), ('[android.server.biometrics.BiometricSimpleTests testSimpleCredentialAuth CtsBiometricsTestCases]', 1), ('[android.animation.cts.AnimatorSetTest testManipulateChildOutsideOfSet CtsAnimationTestCases]', 1), ('[android.app.usage.cts.FragmentTest FragmentTest CtsUsageStatsTestCases]', 1), ('[android.app.usage.cts.FragmentTest testChildFragmentManagerGone CtsUsageStatsTestCases]', 1), ('[android.hardware.camera2.cts.ZoomCaptureTest testRawZoomCapture CtsCameraTestCases]', 1), ('[android.hardware.cts.LowRamDeviceTest DisplayMetrics CtsHardwareTestCases]', 1), ('[android.server.wm.SplashscreenTests prepareTestLauncher CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitAnimationCancel CtsWindowManagerDeviceTestCases]', 1), ('[android.server.wm.SplashscreenTests testHandleExitIconAnimatingActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest isColorOutputSupported CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest testBasicVideoStabilizationRecording CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest testIntermediateSurfaceRecording CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingFromPersistentSurface CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest testAbandonedHighSpeedRequest CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingFramerateLowToHigh CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest testVideoPreviewSurfaceSharing CtsCameraTestCases]', 1), ('[android.hardware.camera2.cts.RecordingTest testRecordingWithDifferentPreviewSizes CtsCameraTestCases]', 1), ('[android.autofillservice.cts.commontests.LoginActivityCommonTestCase LoginActivityCommonTestCase CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.LoginActivityCommonTestCase testAutoFillNoDatasets_multipleFields_alwaysNull CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.LoginActivityCommonTestCase testAutofill_twoDatasets_selectSecondDataset CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.commontests.LoginActivityCommonTestCase testClearFocusBeforeRespond CtsAutoFillServiceTestCases]', 1), ('[android.widget.cts.TextViewFontWeightTest isItalic CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewFontWeightTest testWeight CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewFontWeightTest testTextAppearance CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewFontWeightTest testStyle CtsWidgetTestCases]', 1), ('[android.widget.cts.TextViewFontWeightTest testWeightStyleResolve CtsWidgetTestCases]', 1), ('[android.autofillservice.cts.LoginWithCustomHighlightActivityTest testAutofillCustomHighlight_multipleFields_hasHighlight CtsAutoFillServiceTestCases]', 1), ('[android.autofillservice.cts.dropdown.VirtualContainerActivityCompatModeTest VirtualContainerActivityCompatModeTest CtsAutoFillServiceTestCases]', 1), ('[android.content.wm.cts.ContextGetDisplayTest getDisplay CtsContentTestCases]', 1), ('[android.view.animation.cts.LayoutAnimationControllerTest getListView CtsViewTestCases]', 1), ('[android.view.animation.cts.LayoutAnimationControllerTest testAccessOrder CtsViewTestCases]', 1), ('[android.view.animation.cts.LayoutAnimationControllerTest testAccessDelay CtsViewTestCases]', 1), ('[android.view.animation.cts.LayoutAnimationControllerTest testAccessAnimation CtsViewTestCases]', 1), ('[android.view.animation.cts.LayoutAnimationControllerTest testAccessInterpolator CtsViewTestCases]', 1), ('[android.view.animation.cts.LayoutAnimationControllerTest testGetDelayForView CtsViewTestCases]', 1), ('[android.view.animation.cts.LayoutAnimationControllerTest testIsDone CtsViewTestCases]', 1), ('[android.view.animation.cts.LayoutAnimationControllerTest testGetAnimationForView CtsViewTestCases]', 1), ('[android.view.animation.cts.LayoutAnimationControllerTest testWillOverlap CtsViewTestCases]', 1), ('[com.android.cts.ephemeralapp1.WebViewTest WebViewTest None]', 1), ('[com.android.cts.ephemeralapp1.WebViewTest testWebViewLoads None]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest MyTouchListener CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testClickAt_producesDownThenUp CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testLongClickAt_producesEventsWithLongClickTiming CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testSwipe_shouldContainPointsInALine CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testSlowSwipe_shouldNotContainMovesForTinyMovement CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testAngledPinch_looksReasonable CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testClickWhenMagnified_matchesActualTouch CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testContinuedGestures_motionEventsContinue CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testContinuedGesture_withLineDisconnect_isCancelled CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testContinuedGesture_nextGestureDoesntContinue_isCancelled CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityGestureDispatchTest testContinuingGesture_withNothingToContinue_isCancelled CtsAccessibilityServiceTestCases]', 1), ('[android.server.wm.WindowMetricsActivityTests testMetricsMatchesDisplayAreaOnFreeformActivity CtsWindowManagerDeviceTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testGetPackage CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testGetLayoutId CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetContentDescription CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewVisibility CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetTextViewText CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetTextViewTextSize CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetIcon CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetIcon_nightMode CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetImageViewIcon CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetImageViewResource CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetImageViewUri CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetChronometer CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetChronometerCountDown CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetProgressBar CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testApply CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testReapply CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testOnLoadClass CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testDescribeContents CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testWriteToParcel CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testWriteNullToParcel CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testCreateNegativeSizedArray CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetImageViewBitmap CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetBitmap CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetBoolean CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetCharSequence CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetCharSequenceAttr CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetInt CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetString CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetUri CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetTextColor CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetTextCompoundDrawables CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetTextCompoundDrawablesRelative CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetOnCheckedChangeResponse CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetLong CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetFloat CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetByte CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetChar CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetDouble CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetShort CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetBundle CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetIntent CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetBlendMode CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testRemoveAllViews CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testAddView CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetLabelFor CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetAccessibilityTraversalAfter CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetAccessibilityTraversalBefore CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewPadding CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewLayoutMargin CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewLayoutMargin_layoutDirection CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewLayoutMarginDimen CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewLayoutMarginDimen_layoutDirection CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewLayoutMarginAttr CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewLayoutMarginAttr_layoutDirection CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewLayoutWidth CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewLayoutWidthDimen CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewLayoutWidthAttr CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewLayoutHeight CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewLayoutHeightDimen CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewLayoutHeightAttr CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetIntDimen_fromResources CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetIntDimen_fromUnitDimension CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetIntDimenAttr CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetFloatDimen_fromResources CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetFloatDimen_fromUnitDimension CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetFloatDimenAttr CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetColor CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetColorAttr CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetColorStateList CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetColorStateListAttr CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetColorStateInt_nightMode CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetColorStateList_fromResources CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetColorStateList_nightMode CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewOutlinePreferredRadius CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewOutlinePreferredRadiusDimen CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetViewOutlinePreferredRadiusAttr CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetSwitchChecked CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetCheckBoxChecked CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetRadioButtonChecked CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testSetRadioGroupChecked CtsWidgetTestCases]', 1), ('[android.widget.cts.RemoteViewsTest testCanRecycleView CtsWidgetTestCases]', 1), ('[com.android.cts.verifier.sensors.base.SensorCtsTestActivity getTestLogger None]', 1), ('[android.widget.cts.CalendarViewTest testConstructor CtsWidgetTestCases]', 1), ('[android.widget.cts.CalendarViewTest testAccessDate CtsWidgetTestCases]', 1), ('[android.widget.cts.CalendarViewTest testAccessMinMaxDate CtsWidgetTestCases]', 1), ('[android.widget.cts.CalendarViewTest testMinMaxRangeRestrictionsHolo CtsWidgetTestCases]', 1), ('[android.widget.cts.CalendarViewTest testMinMaxRangeClampingMaterial CtsWidgetTestCases]', 1), ('[android.widget.cts.CalendarViewTest testOnDateChangeListenerHolo CtsWidgetTestCases]', 1), ('[android.widget.cts.CalendarViewTest testOnDateChangeListenerMaterial CtsWidgetTestCases]', 1), ('[android.widget.cts.CalendarViewTest testAppearanceMaterial CtsWidgetTestCases]', 1), ('[android.widget.cts.CalendarViewTest testAppearanceHolo CtsWidgetTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityOverlayTest postTestTearDown CtsAccessibilityServiceTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityOverlayTest testA11yServiceShowsOverlayOnVirtualDisplay_shouldAppear CtsAccessibilityServiceTestCases]', 1), ('[android.media.cts.VideoEncoderTest isEncoder CtsMediaTestCases]', 1), ('[android.contentcaptureservice.cts.unit.ViewNodeTest testAutofillIdMethods_orphanView CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.unit.ViewNodeTest testAutofillIdMethods_parentedView CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.unit.ViewNodeTest testAutofillIdMethods_explicitIdsConstructor CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.unit.ViewNodeTest testInvalidSetters CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.unit.ViewNodeTest testValidProperties_directly CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.unit.ViewNodeTest testValidProperties_throughParcel CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.unit.ViewNodeTest testComplexText_directly CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.unit.ViewNodeTest testComplexText_throughParcel CtsContentCaptureServiceTestCases]', 1), ('[android.contentcaptureservice.cts.unit.ViewNodeTest testVisibility CtsContentCaptureServiceTestCases]', 1), ('[android.view.inspector.cts.StaticInspectionCompanionProviderTest testViewWorks CtsViewTestCases]', 1), ('[android.view.inspector.cts.StaticInspectionCompanionProviderTest testRelativeLayoutWorks CtsViewTestCases]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testFilter4_internationalized CtsTextTestCases]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener1 CtsTextTestCases]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener2 CtsTextTestCases]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener3 CtsTextTestCases]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener4 CtsTextTestCases]', 1), ('[android.text.method.cts.DigitsKeyListenerTest testDigitsKeyListener5 CtsTextTestCases]', 1)]"
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-9-1"	"3.2.3.5/C-9-1"	"03020305.670901"	"""C-9-1] MUST implement the [Settings#ACTION_PROCESS_WIFI_EASY_CONNECT_URI](https://developer.android.com/reference/android/provider/Settings.html#ACTION_PROCESS_WIFI_EASY_CONNECT_URI) Intent APIs as described in the SDK documentation.  If device implementations provide the data saver mode, they: """	""	""	"Settings.html ACTION_PROCESS_WIFI_EASY_CONNECT_URI"	""	""	""	""	"[('android.content.cts.AvailableIntentsTest', 1)]"	""	"[('CtsContentTestCases', 1)]"	""	""	""	""	"android.content.cts.AvailableIntentsTest"	""	"CtsContentTestCases"	""	""	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1)]"	"[('(1,ACTION_PROCESS_WIFI_EASY_CONNECT_URI,/android/content/cts/AvailableIntentsTest.java)', 1)]"	"[('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_PROCESS_WIFI_EASY_CONNECT_URI]:[1]:method_text:[     intent.setData(Uri.parse(QRCODE));            assertCanBeHandled(intent);        }    }   ])', 1)]"	"https://developer.android.com"	""	"[('ACTION_PROCESS_WIFI_EASY_CONNECT_URI', 1)]"	"[('[android.content.cts.AvailableIntentsTest testEasyConnectIntent CtsContentTestCases]', 1)]"
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-3-2"	"3.2.3.5/C-3-2"	"03020305.670302"	"""C-3-2] MUST honor [android.nfc.cardemulation.action.ACTION_CHANGE_DEFAULT](https://developer.android.com/reference/android/nfc/cardemulation/CardEmulation#ACTION_CHANGE_DEFAULT) intent to show an activity which opens a dialog to ask the user to change the default card emulation service for a certain category as described in the SDK.  If device implementations report `android.hardware.nfc`, they:  """	""	""	"android.nfc.cardemulation.action.ACTION android.hardware.nfc ACTION_CHANGE_DEFAULT"	""	""	""	""	"[('android.content.cts.AvailableIntentsTest', 2)]"	""	"[('CtsContentTestCases', 2)]"	""	""	""	""	"android.content.cts.AvailableIntentsTest"	""	"CtsContentTestCases"	""	""	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 2)]"	"[('(2,ACTION_CHANGE_DEFAULT,/android/content/cts/AvailableIntentsTest.java)', 1)]"	"[('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_CHANGE_DEFAULT]:[1]:method_text:[   assertCanBeHandled(new Intent(Telephony.Sms.Intents.ACTION_CHANGE_DEFAULT));        }    }   ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ACTION_CHANGE_DEFAULT]:[1]:method_text:[   assertCanBeHandled(new Intent(TelecomManager.ACTION_CHANGE_DEFAULT_DIALER));        }    }   ])', 1)]"	"https://developer.android.com"	""	"[('ACTION_CHANGE_DEFAULT', 2)]"	"[('[android.content.cts.AvailableIntentsTest testChangeDefaultSmsApplication CtsContentTestCases]', 1), ('[android.content.cts.AvailableIntentsTest testChangeDefaultDialer CtsContentTestCases]', 1)]"
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-5-2"	"3.2.3.5/C-5-2"	"03020305.670502"	"""C-5-2] MUST honor the [‘android.bluetooth.adapter.action.REQUEST_DISCOVERABLE’](https://developer.android.com/reference/android/bluetooth/BluetoothAdapter#ACTION_REQUEST_DISCOVERABLE) intent and show a system activity that requests discoverable mode.  If device implementations support the DND feature, they:  """	""	""	"android.bluetooth.adapter.action.REQUEST DND ACTION_REQUEST_DISCOVERABLE REQUEST_DISCOVERABLE"	""	""	""	""	"[('android.app.cts.NotificationManagerTest', 10), ('android.media.cts.AudioManagerTest', 10), ('android.app.notification.legacy.cts.ConditionProviderServiceTest', 5), ('com.android.cts.verifier.audio.RingerModeActivity', 3), ('android.app.cts.NotificationChannelTest', 2), ('android.media.cts.MediaActivityTest', 1), ('android.server.wm.CrossAppDragAndDropTests', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsNoSimTest', 1), ('android.hardware.camera2.cts.CameraManagerTest', 1), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 1), ('android.ndef.cts.NdefTest', 1), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('android.app.notification.legacy29.cts.NotificationManager29Test', 1), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 1)]"	"[('setUp', 7), ('getPackageName', 7), ('getInstrumentation', 6), ('toString', 5), ('build', 5), ('getContext', 5), ('getContentResolver', 4), ('getId', 4), ('getMessage', 4), ('getPackageManager', 3), ('tearDown', 3), ('getRingerMode', 2), ('cancelAll', 2), ('getActiveNotifications', 2), ('printStackTrace', 2), ('getGroupKey', 2), ('getTargetContext', 2), ('getResources', 2), ('getSystem', 2), ('supportsSplitScreenMultiWindow', 1), ('supportsFreeform', 1), ('getSimpleName', 1), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('restoreDefaultBrowser', 1), ('getCount', 1), ('moveToFirst', 1), ('close', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getKey', 1), ('getOverrideGroupKey', 1), ('setUpClass', 1), ('getUserId', 1), ('getService', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1)]"	"[('CtsAppTestCases', 12), ('CtsMediaTestCases', 11), ('CtsLegacyNotification27TestCases', 6), ('CtsWindowManagerDeviceTestCases', 1), ('CtsSimPhonebookProviderTestCases', 1), ('CtsCameraTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsNdefTestCases', 1), ('CtsWifiTestCases', 1), ('CtsLegacyNotification29TestCases', 1), ('CtsLegacyNotification20TestCases', 1)]"	""	""	""	""	"android.media.cts.AudioManagerTest"	"getInstrumentation"	"CtsMediaTestCases"	""	""	""	"[('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/ConditionProviderServiceTest.java', 5), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/RingerModeActivity.java', 3), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/NotificationChannelTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CrossAppDragAndDropTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsNoSimTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/ndef/src/android/ndef/cts/NdefTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy29/src/android/app/notification/legacy29/cts/NotificationManager29Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy20/src/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 1)]"	"[('(1,DND,/android/media/cts/MediaActivityTest.java)', 1), ('(2,DND,/android/app/cts/NotificationChannelTest.java)', 1), ('(3,DND,/android/server/wm/CrossAppDragAndDropTests.java)', 1), ('(22,DND,/com/android/cts/verifier/audio/RingerModeActivity.java)', 1), ('(2,DND,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(1,DND,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsNoSimTest.java)', 1), ('(6,DND,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(1,DND,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(40,DND,/android/app/cts/NotificationManagerTest.java)', 1), ('(2,DND,/android/ndef/cts/NdefTest.java)', 1), ('(10,DND,/android/app/notification/legacy/cts/ConditionProviderServiceTest.java)', 1), ('(1,DND,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(2,DND,/android/app/notification/legacy29/cts/NotificationManager29Test.java)', 1), ('(2,DND,/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java)', 1), ('(34,DND,/android/media/cts/AudioManagerTest.java)', 1)]"	"[('([1:/android/app/cts/NotificationManagerTest.java]:[DND]:[1]:method_text:[nalFilter);            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 3), ('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ote        assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());    }   ])', 2), ('([2:/android/media/cts/AudioManagerTest.java]:[DND]:[2]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 2), ('([3:/android/media/cts/AudioManagerTest.java]:[DND]:[3]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 2), (""([1:/android/media/cts/MediaActivityTest.java]:[DND]:[1]:method_text:[    }    /**     * Tests whether volume key changes volume with the session's stream.     */   ])"", 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[        assertFalse(channel.isDemoted());        assertFalse(channel.isConversation());    }   ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[icationChannel.CREATOR.createFromParcel(parcel);        assertEquals(channel, channel1);    }   ])', 1), ('([3:/android/server/wm/CrossAppDragAndDropTests.java]:[DND]:[3]:method_text:[result mismatch,"", expectedResult,                    results.get(resultKey));        }    }   ])', 1), ('([4:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[4]:method_text:[eRingerDndOn());        tests.add(new TestSetRingerModePolicyAccessDndOn());        // TODO: Add a])', 1), ('([2:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[2]:method_text:[TestVibrateRinger());        tests.add(new TestSetRingerModePolicyAccess());        // TODO: Add a])', 1), ('([16:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[16]:method_text:[dioManager.getStreamVolume(AudioManager.STREAM_MUSIC));            status = PASS;        }    }])', 1), ('([2:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[DND]:[2]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsNoSimTest.java]:[DND]:[1]:method_text:[entaryFiles.EF_SDN,                                1),                        values));    }   ])', 1), ('([6:/android/hardware/camera2/cts/CameraManagerTest.java]:[DND]:[6]:method_text:[        throw new IOException(""Could not read stdout of command:\xa0"" + command, e);        }    }}])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[DND]:[1]:method_text:[notificationManager.deleteNotificationChannel(channel.getId());        }    }    @MediumTest   ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[oid deactivateGracePeriod() {        UiDevice.getInstance(mInstrumentation).pressHome();    }   ])', 1), ('([5:/android/app/cts/NotificationManagerTest.java]:[DND]:[5]:method_text:[nalFilter);            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 1), ('([3:/android/app/cts/NotificationManagerTest.java]:[DND]:[3]:method_text:[) != Notification.VISIBILITY_SECRET);        assertFalse(createdChannel.canBypassDnd());    }   ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[te(id, condition);        assertExpectedDndState(ruleToCreate.getInterruptionFilter());    }   ])', 1), ('([8:/android/app/cts/NotificationManagerTest.java]:[DND]:[8]:method_text:[        // make sure DND is off        assertExpectedDndState(INTERRUPTION_FILTER_ALL);    }   ])', 1), ('([6:/android/app/cts/NotificationManagerTest.java]:[DND]:[6]:method_text:[        // make sure DND is off        assertExpectedDndState(INTERRUPTION_FILTER_ALL);    }   ])', 1), ('([7:/android/app/cts/NotificationManagerTest.java]:[DND]:[7]:method_text:[cZenRule(secondId);        assertExpectedDndState(ruleToCreate.getInterruptionFilter());    }   ])', 1), ('([2:/android/ndef/cts/NdefTest.java]:[DND]:[2]:method_text:[on for input "" + bytesToString(b));            } catch (FormatException e) { }        }    }   ])', 1), ('([3:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[3]:method_text:[ote        assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());    }   ])', 1), ('([1:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[1]:method_text:[nd after permission lost"");        } catch (Exception e) {            // pass        }    }   ])', 1), ('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ } else {            Log.d(TAG, service.getName() + "" has a correct bind state"");        }    }}])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[DND]:[1]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationManager29Test.java]:[DND]:[2]:method_text:[ontext, 0, new Intent(mContext, this.getClass()), PendingIntent.FLAG_MUTABLE_UNAUDITED);    }   ])', 1), ('([2:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[DND]:[2]:method_text:[InterruptedException ex) {                // pass            }        }        return n;    }}])', 1), ('([8:/android/media/cts/AudioManagerTest.java]:[DND]:[8]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[ckageName(), getInstrumentation(), true);            testStreamMuting(stream);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[etStreamMute failed."",                    mAudioManager.isStreamMute(stream));        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[DND]:[4]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 1), ('([9:/android/media/cts/AudioManagerTest.java]:[DND]:[9]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 1)]"	"https://developer.android.com"	""	"[('DND', 40)]"	"[('[android.media.cts.MediaActivityTest ArrayList CtsMediaTestCases]', 1), ('[android.app.cts.NotificationChannelTest testConstructor CtsAppTestCases]', 1), ('[android.app.cts.NotificationChannelTest testWriteToParcel CtsAppTestCases]', 1), ('[android.server.wm.CrossAppDragAndDropTests uptimeMillis CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity isLowRamDevice None]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity TestVolumeDndAffectedStreamDndOn None]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity TestVolumeDndAffectedStream None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testChannelDeletion_cancelReason CtsLegacyNotification27TestCases]', 1), ('[android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsNoSimTest insert_nonAdnDirUris_throwsUnsupportedOperationException CtsSimPhonebookProviderTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerWithDnD CtsCameraTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTypeNotificationStateChangedAccessibilityEvent CtsAccessibilityServiceTestCases]', 1), ('[android.app.cts.NotificationManagerTest isGroup CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testConsolidatedNotificationPolicy CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testConsolidatedNotificationPolicyMultiRules CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testCreateChannel CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testTotalSilenceOnlyMuteStreams CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testAlarmsOnlyMuteStreams CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState_turnOff CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState_deletedRule CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState_multipleRules CtsAppTestCases]', 1), ('[android.ndef.cts.NdefTest testInvalidParsing CtsNdefTestCases]', 1), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testUnboundCPSMaintainsCondition_addsNewRule CtsLegacyNotification27TestCases]', 1), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testUnboundCPSMaintainsCondition_otherConditionChanges CtsLegacyNotification27TestCases]', 1), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testUnboundCPSMaintainsCondition_otherProviderRuleChanges CtsLegacyNotification27TestCases]', 1), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testRequestRebindWhenLostAccess CtsLegacyNotification27TestCases]', 1), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testMethodsExistAndDoNotThrow CtsLegacyNotification27TestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled CtsWifiTestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationManager29Test isNotificationPolicyAccessGranted CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy20.cts.LegacyNotificationManager20Test testNotificationListener_cancelNotifications CtsLegacyNotification20TestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMuteDndAffectedStreams CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMuteDndUnaffectedStreams CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInTotalSilenceMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInPriorityOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInPriorityOnly CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMuteAll CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMediaAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyAlarmsAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyChannelsCanBypassDnd CtsMediaTestCases]', 1)]"
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-5-1"	"3.2.3.5/C-5-1"	"03020305.670501"	"""C-5-1] MUST honor the [‘android.bluetooth.adapter.action.REQUEST_ENABLE’](https://developer.android.com/reference/kotlin/android/bluetooth/BluetoothAdapter#action_request_enable) intent and show a system activity to allow the user to turn on Bluetooth.  """	""	""	"REQUEST_ENABLE android.bluetooth.adapter.action.REQUEST"	""	""	""	""	"[('android.content.cts.AvailableIntentsTest', 1)]"	""	"[('CtsContentTestCases', 1)]"	""	""	""	""	"android.content.cts.AvailableIntentsTest"	""	"CtsContentTestCases"	""	""	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 1)]"	"[('(1,REQUEST_ENABLE,/android/content/cts/AvailableIntentsTest.java)', 1)]"	"[('([1:/android/content/cts/AvailableIntentsTest.java]:[REQUEST_ENABLE]:[1]:method_text:[tent(Settings.ACTION_REQUEST_ENABLE_CONTENT_CAPTURE);        assertCanBeHandled(intent);    }   ])', 1)]"	"https://developer.android.com"	""	"[('REQUEST_ENABLE', 1)]"	"[('[android.content.cts.AvailableIntentsTest testRequestEnableContentCaptureIntent CtsContentTestCases]', 1)]"
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-6-1"	"3.2.3.5/C-6-1"	"03020305.670601"	"""C-6-1] MUST implement an activity that would respond to the intent [`ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS`](https://developer.android.com/reference/android/provider/Settings#ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS), which for implementations with UI_MODE_TYPE_NORMAL it MUST be an activity where the user can grant or deny the app access to DND policy configurations.  If device implementations allow users to use third-party input methods on the device, they:  """	""	""	"ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS MODE_TYPE_NORMAL DND"	""	""	""	""	"[('android.telecom.cts.CarModeInCallServiceTest', 11), ('android.app.cts.NotificationManagerTest', 10), ('android.media.cts.AudioManagerTest', 10), ('android.app.notification.legacy.cts.ConditionProviderServiceTest', 5), ('com.android.cts.verifier.audio.RingerModeActivity', 3), ('android.app.cts.NotificationChannelTest', 2), ('android.media.cts.MediaActivityTest', 1), ('android.telecom.cts.ExtendedInCallServiceTest', 1), ('android.server.wm.CrossAppDragAndDropTests', 1), ('android.app.notification.legacy.cts.LegacyNotificationManagerTest', 1), ('android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsNoSimTest', 1), ('android.systemintents.cts.TestSystemIntents', 1), ('android.hardware.camera2.cts.CameraManagerTest', 1), ('android.accessibilityservice.cts.AccessibilityEndToEndTest', 1), ('android.ndef.cts.NdefTest', 1), ('android.net.wifi.cts.WifiNetworkSuggestionTest', 1), ('android.app.notification.legacy29.cts.NotificationManager29Test', 1), ('android.app.notification.legacy20.cts.LegacyNotificationManager20Test', 1), ('android.app.cts.UiModeManagerTest', 1), ('android.telecom.cts.SelfManagedConnectionTest', 1)]"	"[('setUp', 12), ('getInstrumentation', 11), ('getName', 10), ('tearDown', 7), ('getContext', 7), ('getPackageName', 7), ('getPackageManager', 6), ('toString', 5), ('build', 5), ('getPackage', 5), ('getContentResolver', 4), ('getId', 4), ('getMessage', 4), ('getUiAutomation', 3), ('reset', 3), ('getRingerMode', 2), ('cancelAll', 2), ('getActiveNotifications', 2), ('printStackTrace', 2), ('getGroupKey', 2), ('getTargetContext', 2), ('getService', 2), ('getResources', 2), ('getSystem', 2), ('supportsSplitScreenMultiWindow', 1), ('supportsFreeform', 1), ('getCurrentModeType', 1), ('resetLock', 1), ('create', 1), ('getSimpleName', 1), ('randomUUID', 1), ('getNotificationChannels', 1), ('getNotificationChannelGroups', 1), ('restoreDefaultBrowser', 1), ('getCount', 1), ('moveToFirst', 1), ('close', 1), ('getPendingIntent', 1), ('getClass', 1), ('getGroup', 1), ('getNotification', 1), ('getKey', 1), ('getOverrideGroupKey', 1), ('setUpClass', 1), ('getUserId', 1), ('areChannelsBypassingDnd', 1), ('hasVibrator', 1), ('getNotificationPolicy', 1), ('getCurrentInterruptionFilter', 1), ('countDown', 1), ('waitBind', 1), ('getDefaultDialer', 1), ('getConnectionService', 1)]"	"[('CtsTelecomTestCases', 13), ('CtsAppTestCases', 13), ('CtsMediaTestCases', 11), ('CtsLegacyNotification27TestCases', 6), ('CtsWindowManagerDeviceTestCases', 1), ('CtsSimPhonebookProviderTestCases', 1), ('CtsSystemIntentTestCases', 1), ('CtsCameraTestCases', 1), ('CtsAccessibilityServiceTestCases', 1), ('CtsNdefTestCases', 1), ('CtsWifiTestCases', 1), ('CtsLegacyNotification29TestCases', 1), ('CtsLegacyNotification20TestCases', 1)]"	""	""	""	""	"android.telecom.cts.SelfManagedConnectionTest"	"tearDown"	"CtsTelecomTestCases"	""	""	""	"[('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/CarModeInCallServiceTest.java', 11), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/NotificationManagerTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/AudioManagerTest.java', 10), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/ConditionProviderServiceTest.java', 5), ('/home/gpoor/cts-12-source/cts/apps/CtsVerifier/src/com/android/cts/verifier/audio/RingerModeActivity.java', 3), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/NotificationChannelTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/media/src/android/media/cts/MediaActivityTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/ExtendedInCallServiceTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/framework/base/windowmanager/src/android/server/wm/CrossAppDragAndDropTests.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy27/src/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/simphonebookprovider/src/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsNoSimTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java', 1), ('/home/gpoor/cts-12-source/cts/tests/camera/src/android/hardware/camera2/cts/CameraManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilityEndToEndTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/ndef/src/android/ndef/cts/NdefTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/wifi/src/android/net/wifi/cts/WifiNetworkSuggestionTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy29/src/android/app/notification/legacy29/cts/NotificationManager29Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/notificationlegacy/notificationlegacy20/src/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java', 1), ('/home/gpoor/cts-12-source/cts/tests/app/src/android/app/cts/UiModeManagerTest.java', 1), ('/home/gpoor/cts-12-source/cts/tests/tests/telecom/src/android/telecom/cts/SelfManagedConnectionTest.java', 1)]"	"[('(1,DND,/android/media/cts/MediaActivityTest.java)', 1), ('(1,MODE_TYPE_NORMAL,/android/telecom/cts/ExtendedInCallServiceTest.java)', 1), ('(2,DND,/android/app/cts/NotificationChannelTest.java)', 1), ('(3,DND,/android/server/wm/CrossAppDragAndDropTests.java)', 1), ('(22,DND,/com/android/cts/verifier/audio/RingerModeActivity.java)', 1), ('(2,DND,/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java)', 1), ('(1,DND,/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsNoSimTest.java)', 1), ('(14,MODE_TYPE_NORMAL,/android/telecom/cts/CarModeInCallServiceTest.java)', 1), ('(1,ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS,/android/systemintents/cts/TestSystemIntents.java)', 1), ('(6,DND,/android/hardware/camera2/cts/CameraManagerTest.java)', 1), ('(1,DND,/android/accessibilityservice/cts/AccessibilityEndToEndTest.java)', 1), ('(40,DND,/android/app/cts/NotificationManagerTest.java)', 1), ('(2,DND,/android/ndef/cts/NdefTest.java)', 1), ('(10,DND,/android/app/notification/legacy/cts/ConditionProviderServiceTest.java)', 1), ('(1,DND,/android/net/wifi/cts/WifiNetworkSuggestionTest.java)', 1), ('(2,DND,/android/app/notification/legacy29/cts/NotificationManager29Test.java)', 1), ('(2,DND,/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java)', 1), ('(1,MODE_TYPE_NORMAL,/android/app/cts/UiModeManagerTest.java)', 1), ('(34,DND,/android/media/cts/AudioManagerTest.java)', 1), ('(2,MODE_TYPE_NORMAL,/android/telecom/cts/SelfManagedConnectionTest.java)', 1)]"	"[('([1:/android/app/cts/NotificationManagerTest.java]:[DND]:[1]:method_text:[nalFilter);            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 3), ('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ote        assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());    }   ])', 2), ('([2:/android/media/cts/AudioManagerTest.java]:[DND]:[2]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 2), ('([3:/android/media/cts/AudioManagerTest.java]:[DND]:[3]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 2), (""([1:/android/media/cts/MediaActivityTest.java]:[DND]:[1]:method_text:[    }    /**     * Tests whether volume key changes volume with the session's stream.     */   ])"", 1), ('([1:/android/telecom/cts/ExtendedInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ has been set back            assertUiMode(Configuration.UI_MODE_TYPE_NORMAL);        }    }   ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[        assertFalse(channel.isDemoted());        assertFalse(channel.isConversation());    }   ])', 1), ('([1:/android/app/cts/NotificationChannelTest.java]:[DND]:[1]:method_text:[icationChannel.CREATOR.createFromParcel(parcel);        assertEquals(channel, channel1);    }   ])', 1), ('([3:/android/server/wm/CrossAppDragAndDropTests.java]:[DND]:[3]:method_text:[result mismatch,"", expectedResult,                    results.get(resultKey));        }    }   ])', 1), ('([4:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[4]:method_text:[eRingerDndOn());        tests.add(new TestSetRingerModePolicyAccessDndOn());        // TODO: Add a])', 1), ('([2:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[2]:method_text:[TestVibrateRinger());        tests.add(new TestSetRingerModePolicyAccess());        // TODO: Add a])', 1), ('([16:/com/android/cts/verifier/audio/RingerModeActivity.java]:[DND]:[16]:method_text:[dioManager.getStreamVolume(AudioManager.STREAM_MUSIC));            status = PASS;        }    }])', 1), ('([2:/android/app/notification/legacy/cts/LegacyNotificationManagerTest.java]:[DND]:[2]:method_text:[ {      return mContext.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WATCH);    }}])', 1), ('([1:/android/provider/cts/simphonebook/SimPhonebookContract_SimRecordsNoSimTest.java]:[DND]:[1]:method_text:[entaryFiles.EF_SDN,                                1),                        values));    }   ])', 1), ('([4:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[4]:method_text:[  * Verifies that a car mode InCallService can enter and exit car mode using a priority.     */   ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ableAndVerifyCarMode(mCarModeIncallServiceControlOne, Configuration.UI_MODE_TYPE_NORMAL);    }   ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ce when a call is started when the service has     * already set automotive projection.     */   ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ies that the lower priority app is bound     * and receives information about the call.     */   ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ verifies that the car mode app is bound     * and receives information about the call.     */   ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[h from the default dialer to the car-mode InCallService when car mode is     * enabled.     */   ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[lar to {@link #testSwitchToCarMode()}, except exits car mode before the call terminates.     */   ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[nters car mode after the call starts.     * Also uses multiple car mode InCallServices.     */   ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[e default dialer to the car-mode InCallService when automotive     * projection is set.     */   ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[getService().getCallCount());        mInCallCallbacks.getService().disconnectAllCalls();    }   ])', 1), ('([1:/android/telecom/cts/CarModeInCallServiceTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ -- bind error"");        }        return future.get(ASYNC_TIMEOUT, TimeUnit.MILLISECONDS);    }}])', 1), ('([1:/android/systemintents/cts/TestSystemIntents.java]:[ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS]:[1]:method_text:[etInstrumentation().getContext();        mPackageManager = mContext.getPackageManager();    }   ])', 1), ('([6:/android/hardware/camera2/cts/CameraManagerTest.java]:[DND]:[6]:method_text:[        throw new IOException(""Could not read stdout of command:\xa0"" + command, e);        }    }}])', 1), ('([1:/android/accessibilityservice/cts/AccessibilityEndToEndTest.java]:[DND]:[1]:method_text:[notificationManager.deleteNotificationChannel(channel.getId());        }    }    @MediumTest   ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[oid deactivateGracePeriod() {        UiDevice.getInstance(mInstrumentation).pressHome();    }   ])', 1), ('([5:/android/app/cts/NotificationManagerTest.java]:[DND]:[5]:method_text:[nalFilter);            mNotificationManager.setNotificationPolicy(origPolicy);        }    }   ])', 1), ('([3:/android/app/cts/NotificationManagerTest.java]:[DND]:[3]:method_text:[) != Notification.VISIBILITY_SECRET);        assertFalse(createdChannel.canBypassDnd());    }   ])', 1), ('([4:/android/app/cts/NotificationManagerTest.java]:[DND]:[4]:method_text:[te(id, condition);        assertExpectedDndState(ruleToCreate.getInterruptionFilter());    }   ])', 1), ('([8:/android/app/cts/NotificationManagerTest.java]:[DND]:[8]:method_text:[        // make sure DND is off        assertExpectedDndState(INTERRUPTION_FILTER_ALL);    }   ])', 1), ('([6:/android/app/cts/NotificationManagerTest.java]:[DND]:[6]:method_text:[        // make sure DND is off        assertExpectedDndState(INTERRUPTION_FILTER_ALL);    }   ])', 1), ('([7:/android/app/cts/NotificationManagerTest.java]:[DND]:[7]:method_text:[cZenRule(secondId);        assertExpectedDndState(ruleToCreate.getInterruptionFilter());    }   ])', 1), ('([2:/android/ndef/cts/NdefTest.java]:[DND]:[2]:method_text:[on for input "" + bytesToString(b));            } catch (FormatException e) { }        }    }   ])', 1), ('([3:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[3]:method_text:[ote        assertEquals(INTERRUPTION_FILTER_ALARMS, mNm.getCurrentInterruptionFilter());    }   ])', 1), ('([1:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[1]:method_text:[nd after permission lost"");        } catch (Exception e) {            // pass        }    }   ])', 1), ('([2:/android/app/notification/legacy/cts/ConditionProviderServiceTest.java]:[DND]:[2]:method_text:[ } else {            Log.d(TAG, service.getName() + "" has a correct bind state"");        }    }}])', 1), ('([1:/android/net/wifi/cts/WifiNetworkSuggestionTest.java]:[DND]:[1]:method_text:[   }    /**     * Tests {@link android.net.wifi.WifiNetworkSuggestion.Builder} class.     */   ])', 1), ('([2:/android/app/notification/legacy29/cts/NotificationManager29Test.java]:[DND]:[2]:method_text:[ontext, 0, new Intent(mContext, this.getClass()), PendingIntent.FLAG_MUTABLE_UNAUDITED);    }   ])', 1), ('([2:/android/app/notification/legacy20/cts/LegacyNotificationManager20Test.java]:[DND]:[2]:method_text:[InterruptedException ex) {                // pass            }        }        return n;    }}])', 1), ('([1:/android/app/cts/UiModeManagerTest.java]:[MODE_TYPE_NORMAL]:[1]:method_text:[ar mode API when the caller does not hold the correct     * permission to use that API.     */   ])', 1), ('([8:/android/media/cts/AudioManagerTest.java]:[DND]:[8]:method_text:[    @AppModeFull(reason = ""Instant apps cannot hold android.permission.MODIFY_AUDIO_SETTINGS"")   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[ckageName(), getInstrumentation(), true);            testStreamMuting(stream);        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[etStreamMute failed."",                    mAudioManager.isStreamMute(stream));        }    }   ])', 1), ('([1:/android/media/cts/AudioManagerTest.java]:[DND]:[1]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 1), ('([4:/android/media/cts/AudioManagerTest.java]:[DND]:[4]:method_text:[            setInterruptionFilter(NotificationManager.INTERRUPTION_FILTER_ALL);        }    }   ])', 1), ('([9:/android/media/cts/AudioManagerTest.java]:[DND]:[9]:method_text:[ss(mContext.getPackageName(), getInstrumentation(),                    false);        }    }   ])', 1), ('([2:/android/telecom/cts/SelfManagedConnectionTest.java]:[MODE_TYPE_NORMAL]:[2]:method_text:[   /**     * Test bind to non-UI in call services that support self-managed connections     */   ])', 1)]"	"https://developer.android.com"	""	"[('DND', 40), ('MODE_TYPE_NORMAL', 14), ('ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS', 1)]"	"[('[android.media.cts.MediaActivityTest ArrayList CtsMediaTestCases]', 1), ('[android.telecom.cts.ExtendedInCallServiceTest testAcceptRingingCallTwoCallsCarMode CtsTelecomTestCases]', 1), ('[android.app.cts.NotificationChannelTest testConstructor CtsAppTestCases]', 1), ('[android.app.cts.NotificationChannelTest testWriteToParcel CtsAppTestCases]', 1), ('[android.server.wm.CrossAppDragAndDropTests uptimeMillis CtsWindowManagerDeviceTestCases]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity isLowRamDevice None]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity TestVolumeDndAffectedStreamDndOn None]', 1), ('[com.android.cts.verifier.audio.RingerModeActivity TestVolumeDndAffectedStream None]', 1), ('[android.app.notification.legacy.cts.LegacyNotificationManagerTest testChannelDeletion_cancelReason CtsLegacyNotification27TestCases]', 1), ('[android.provider.cts.simphonebook.SimPhonebookContract_SimRecordsNoSimTest insert_nonAdnDirUris_throwsUnsupportedOperationException CtsSimPhonebookProviderTestCases]', 1), ('[android.telecom.cts.CarModeInCallServiceTest dropShellPermissionIdentity CtsTelecomTestCases]', 1), ('[android.telecom.cts.CarModeInCallServiceTest testSetCarMode CtsTelecomTestCases]', 1), ('[android.telecom.cts.CarModeInCallServiceTest testStartCallInCarMode CtsTelecomTestCases]', 1), ('[android.telecom.cts.CarModeInCallServiceTest testStartCallInAutomotiveProjection CtsTelecomTestCases]', 1), ('[android.telecom.cts.CarModeInCallServiceTest testStartCallInCarModeTwoServices CtsTelecomTestCases]', 1), ('[android.telecom.cts.CarModeInCallServiceTest testStartCallingInCarModeAndProjectionTwoServices CtsTelecomTestCases]', 1), ('[android.telecom.cts.CarModeInCallServiceTest testSwitchToCarMode CtsTelecomTestCases]', 1), ('[android.telecom.cts.CarModeInCallServiceTest testSwitchToCarModeAndBack CtsTelecomTestCases]', 1), ('[android.telecom.cts.CarModeInCallServiceTest testSwitchToCarModeMultiple CtsTelecomTestCases]', 1), ('[android.telecom.cts.CarModeInCallServiceTest testSwitchToAutomotiveProjectionMultiple CtsTelecomTestCases]', 1), ('[android.telecom.cts.CarModeInCallServiceTest testSwitchToCarModeWhenEnableCarModeApp CtsTelecomTestCases]', 1), ('[android.hardware.camera2.cts.CameraManagerTest testCameraManagerWithDnD CtsCameraTestCases]', 1), ('[android.accessibilityservice.cts.AccessibilityEndToEndTest testTypeNotificationStateChangedAccessibilityEvent CtsAccessibilityServiceTestCases]', 1), ('[android.app.cts.NotificationManagerTest isGroup CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testConsolidatedNotificationPolicy CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testConsolidatedNotificationPolicyMultiRules CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testCreateChannel CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testTotalSilenceOnlyMuteStreams CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testAlarmsOnlyMuteStreams CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState_turnOff CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState_deletedRule CtsAppTestCases]', 1), ('[android.app.cts.NotificationManagerTest testSetAutomaticZenRuleState_multipleRules CtsAppTestCases]', 1), ('[android.ndef.cts.NdefTest testInvalidParsing CtsNdefTestCases]', 1), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testUnboundCPSMaintainsCondition_addsNewRule CtsLegacyNotification27TestCases]', 1), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testUnboundCPSMaintainsCondition_otherConditionChanges CtsLegacyNotification27TestCases]', 1), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testUnboundCPSMaintainsCondition_otherProviderRuleChanges CtsLegacyNotification27TestCases]', 1), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testRequestRebindWhenLostAccess CtsLegacyNotification27TestCases]', 1), ('[android.app.notification.legacy.cts.ConditionProviderServiceTest testMethodsExistAndDoNotThrow CtsLegacyNotification27TestCases]', 1), ('[android.net.wifi.cts.WifiNetworkSuggestionTest isLocationEnabled CtsWifiTestCases]', 1), ('[android.app.notification.legacy29.cts.NotificationManager29Test isNotificationPolicyAccessGranted CtsLegacyNotification29TestCases]', 1), ('[android.app.notification.legacy20.cts.LegacyNotificationManager20Test testNotificationListener_cancelNotifications CtsLegacyNotification20TestCases]', 1), ('[android.app.cts.UiModeManagerTest testEnterCarModePrioritized CtsAppTestCases]', 1), ('[android.media.cts.AudioManagerTest isMicrophoneMute CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMuteDndAffectedStreams CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testMuteDndUnaffectedStreams CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInTotalSilenceMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testSetStreamVolumeInPriorityOnlyMode CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testAdjustVolumeInPriorityOnly CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMuteAll CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyMediaAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyAlarmsAllowed CtsMediaTestCases]', 1), ('[android.media.cts.AudioManagerTest testPriorityOnlyChannelsCanBypassDnd CtsMediaTestCases]', 1)]"
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-8-1"	"3.2.3.5/C-8-1"	"03020305.670801"	"""C-8-1] MUST honor the [`android.settings.ACCESSIBILITY_SETTINGS`](https://developer.android.com/reference/android/provider/Settings#ACTION_ACCESSIBILITY_SETTINGS) intent to provide a user-accessible mechanism to enable and disable the third-party accessibility services alongside the preloaded accessibility services.  If device implementations include support for Wi-Fi Easy Connect and expose the functionality to third-party apps, they:  """	""	""	"ACTION_ACCESSIBILITY_SETTINGS android.settings.ACCESSIBILITY ACCESSIBILITY_SETTINGS"	""	""	""	""	"[('android.accessibilityservice.cts.AccessibilitySettingsTest', 2), ('android.content.cts.AvailableIntentsTest', 2)]"	""	"[('CtsAccessibilityServiceTestCases', 2), ('CtsContentTestCases', 2)]"	""	""	""	""	"android.content.cts.AvailableIntentsTest"	""	"CtsContentTestCases"	""	""	""	"[('/home/gpoor/cts-12-source/cts/tests/accessibilityservice/src/android/accessibilityservice/cts/AccessibilitySettingsTest.java', 2), ('/home/gpoor/cts-12-source/cts/tests/tests/content/src/android/content/cts/AvailableIntentsTest.java', 2)]"	"[('(2,ACTION_ACCESSIBILITY_SETTINGS,/android/accessibilityservice/cts/AccessibilitySettingsTest.java)', 1), ('(2,ACCESSIBILITY_SETTINGS,/android/accessibilityservice/cts/AccessibilitySettingsTest.java)', 1), ('(2,ACCESSIBILITY_SETTINGS,/android/content/cts/AvailableIntentsTest.java)', 1)]"	"[('([2:/android/accessibilityservice/cts/AccessibilitySettingsTest.java]:[ACTION_ACCESSIBILITY_SETTINGS]:[2]:method_text:[ACTION_ACCESSIBILITY_SETTINGS"";        assertTrue(message, !resolvedActivities.isEmpty());    }}])', 1), ('([2:/android/accessibilityservice/cts/AccessibilitySettingsTest.java]:[ACCESSIBILITY_SETTINGS]:[2]:method_text:[ACTION_ACCESSIBILITY_SETTINGS"";        assertTrue(message, !resolvedActivities.isEmpty());    }}])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ACCESSIBILITY_SETTINGS]:[1]:method_text:[ON_SHOW_CALL_ACCESSIBILITY_SETTINGS, it will display the call accessibility preferences.     */   ])', 1), ('([1:/android/content/cts/AvailableIntentsTest.java]:[ACCESSIBILITY_SETTINGS]:[1]:method_text:[ }    /**     * Test ACTION_SHOW_CALL_SETTINGS, it will display the call preferences.     */   ])', 1)]"	"https://developer.android.com"	""	"[('ACCESSIBILITY_SETTINGS', 3), ('ACTION_ACCESSIBILITY_SETTINGS', 1)]"	"[('[android.accessibilityservice.cts.AccessibilitySettingsTest testAccessibilitySettingsIntentHandled CtsAccessibilityServiceTestCases]', 2), ('[android.content.cts.AvailableIntentsTest testChangePhoneAccounts CtsContentTestCases]', 1), ('[android.content.cts.AvailableIntentsTest testShowCallAccessibilitySettings CtsContentTestCases]', 1)]"
