"Section"	"section_id"	"req_id"	"full_key"	"key_as_number"	"requirement"	"Test Availability"	"search_roots"	"search_terms"	"manual_search_terms"	"not_search_terms"	"not_files"	"max_matches"	"class_defs"	"methods"	"modules"	"protected"	"class_def"	"method"	"module"	"file_name"	"matched_files"	"methods_string"	"urls"	"method_text"	"matched_terms"	"qualified_method"	"Annotation?"	"New Req for S?"	"New CTS for S?"	"Comment(internal) e.g. why a test is not possible"	"CTS Bug Id"	"CDD Bug Id"	"Area"	"Shortened"	"Test Level"
"3.2.3.5  Conditional Application Intents"	"3.2.3.5"	"C-6-1"	"3.2.3.5/C-6-1"	"03020305.670601"	"""C-6-1] MUST implement an activity that would respond to the intent [`ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS`](https://developer.android.com/reference/android/provider/Settings#ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS), which for implementations with UI_MODE_TYPE_NORMAL it MUST be an activity where the user can grant or deny the app access to DND policy configurations.  If device implementations allow users to use third-party input methods on the device, they:  """	""	""	"ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS"	""	""	""	""	""	""	""	""	"android.systemintents.cts.TestSystemIntents"	testSystemIntents	"CtsSystemIntentTestCases"	"/home/gpoor/cts-12-source/cts/tests/tests/systemintents/src/android/systemintents/cts/TestSystemIntents.java"	""	"/*
 *.
 */

package android.systemintents.cts;

import static org.junit.Assert.assertTrue;

import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.content.res.Configuration;
import android.net.Uri;
import android.provider.Settings;

import androidx.test.filters.MediumTest;
import androidx.test.platform.app.InstrumentationRegistry;
import androidx.test.runner.AndroidJUnit4;

import com.google.common.truth.Expect;

import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.runner.RunWith;

@MediumTest
@RunWith(AndroidJUnit4.class)
public class TestSystemIntents {
    private static final int EXCLUDE_TV = 1 << 0;
    private static final int EXCLUDE_WATCH = 1 << 1;
    private static final int EXCLUDE_NON_TELEPHONY = 1 << 2;
    private static final int EXCLUDE_NON_INSTALLABLE_IME = 1 << 3;

    private static class IntentEntry {
        public int flags;
        public Intent intent;

        public IntentEntry(int f, Intent i) {
            flags = f;
            intent = i;
        }
    }

    @Rule public final Expect mExpect = Expect.create();

    private Context mContext;
    private PackageManager mPackageManager;

    /*
     * List of activity intents defined by the system.  Activities to handle each of these
     * intents must all exist.
     *
     * They are Intents here rather than simply action strings so that the test can
     * easily accommodate data URIs or similar for correct resolution.
     *
     * The flags associated with each intent indicate kinds of device on which the given
     * UI intent is *not* applicable.
     */
    private final IntentEntry[] mTestIntents = {
            /* Settings-namespace intent actions */
            new IntentEntry(0, new Intent(Settings.ACTION_SETTINGS)),
            new IntentEntry(0, new Intent(Settings.ACTION_APPLICATION_DEVELOPMENT_SETTINGS)),
            new IntentEntry(0, new Intent(Settings.ACTION_IGNORE_BATTERY_OPTIMIZATION_SETTINGS)),
            new IntentEntry(0, new Intent(Settings.ACTION_REQUEST_IGNORE_BATTERY_OPTIMIZATIONS)
                    .setData(Uri.parse(""package:android.systemintents.cts""))),
            new IntentEntry(0, new Intent(Settings.ACTION_IGNORE_BACKGROUND_DATA_RESTRICTIONS_SETTINGS)
                    .setData(Uri.parse(""package:android.systemintents.cts""))),
            new IntentEntry(0, new Intent(Settings.ACTION_HOME_SETTINGS)),
            new IntentEntry(EXCLUDE_NON_TELEPHONY,
                    new Intent(Settings.ACTION_APN_SETTINGS)),
            new IntentEntry(EXCLUDE_TV|EXCLUDE_WATCH,
                    new Intent(Settings.ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS)),
            new IntentEntry(EXCLUDE_NON_INSTALLABLE_IME,
                    new Intent(Settings.ACTION_INPUT_METHOD_SETTINGS))
    };

    @Before
    public void setUp() throws Exception {
        mContext = InstrumentationRegistry.getInstrumentation().getContext();
        mPackageManager = mContext.getPackageManager();
    }"	""	""	"ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS"	""	""	""	""	""	""	""	""	""	""
